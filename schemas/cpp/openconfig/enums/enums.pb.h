// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: openconfig/enums/enums.proto

#ifndef PROTOBUF_openconfig_2fenums_2fenums_2eproto__INCLUDED
#define PROTOBUF_openconfig_2fenums_2fenums_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include "github.com/openconfig/ygot/proto/ywrapper/ywrapper.pb.h"
#include "github.com/openconfig/ygot/proto/yext/yext.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_openconfig_2fenums_2fenums_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[1];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
inline void InitDefaults() {
}
}  // namespace protobuf_openconfig_2fenums_2fenums_2eproto
namespace openconfig {
namespace enums {
}  // namespace enums
}  // namespace openconfig
namespace openconfig {
namespace enums {

enum IETFInterfacesInterfaceType {
  IETFINTERFACESINTERFACETYPE_UNSET = 0,
  IETFINTERFACESINTERFACETYPE_VMWAREVIRTUALNIC = 1565006,
  IETFINTERFACESINTERFACETYPE_SDSL = 6510195,
  IETFINTERFACESINTERFACETYPE_RADSL = 6740905,
  IETFINTERFACESINTERFACETYPE_X86LAPS = 6820753,
  IETFINTERFACESINTERFACETYPE_LOCALTALK = 8569638,
  IETFINTERFACESINTERFACETYPE_DLSW = 9975993,
  IETFINTERFACESINTERFACETYPE_IDSL = 11625257,
  IETFINTERFACESINTERFACETYPE_NFAS = 15826611,
  IETFINTERFACESINTERFACETYPE_BRIDGE = 16268636,
  IETFINTERFACESINTERFACETYPE_IEEE80216WMAN = 27144395,
  IETFINTERFACESINTERFACETYPE_TR008 = 29978951,
  IETFINTERFACESINTERFACETYPE_DVBRCCUPSTREAM = 32753636,
  IETFINTERFACESINTERFACETYPE_PROPDOCSWIRELESSDOWNSTREAM = 33042753,
  IETFINTERFACESINTERFACETYPE_FRF16MFRBUNDLE = 33466019,
  IETFINTERFACESINTERFACETYPE_ACTELISMETALOOP = 33876615,
  IETFINTERFACESINTERFACETYPE_VIRTUALIPADDRESS = 34837125,
  IETFINTERFACESINTERFACETYPE_HDSL2 = 35292480,
  IETFINTERFACESINTERFACETYPE_VIRTUALTG = 36505915,
  IETFINTERFACESINTERFACETYPE_PDNETHERLOOP1 = 39592732,
  IETFINTERFACESINTERFACETYPE_PDNETHERLOOP2 = 39592735,
  IETFINTERFACESINTERFACETYPE_DOCSCABLEUPSTREAM = 40317714,
  IETFINTERFACESINTERFACETYPE_MSDSL = 42288188,
  IETFINTERFACESINTERFACETYPE_FDDI = 45545244,
  IETFINTERFACESINTERFACETYPE_GFP = 46876684,
  IETFINTERFACESINTERFACETYPE_PROPWIRELESSP2P = 47272810,
  IETFINTERFACESINTERFACETYPE_FIBRECHANNEL = 48464202,
  IETFINTERFACESINTERFACETYPE_PROPBWAP2MP = 53391395,
  IETFINTERFACESINTERFACETYPE_MPLS = 59594435,
  IETFINTERFACESINTERFACETYPE_FAST = 62764217,
  IETFINTERFACESINTERFACETYPE_VOICEEM = 68512445,
  IETFINTERFACESINTERFACETYPE_RFC1483 = 71949014,
  IETFINTERFACESINTERFACETYPE_OPTICALTRANSPORT = 72145124,
  IETFINTERFACESINTERFACETYPE_IPSWITCH = 75335244,
  IETFINTERFACESINTERFACETYPE_FRAMERELAYSERVICE = 76605298,
  IETFINTERFACESINTERFACETYPE_DOCSCABLEDOWNSTREAM = 82085109,
  IETFINTERFACESINTERFACETYPE_SMDSDXI = 82940545,
  IETFINTERFACESINTERFACETYPE_X213 = 86923325,
  IETFINTERFACESINTERFACETYPE_DVBRCSTDMA = 87219061,
  IETFINTERFACESINTERFACETYPE_REACHDSL = 94937173,
  IETFINTERFACESINTERFACETYPE_ISO88025FIBER = 95814573,
  IETFINTERFACESINTERFACETYPE_CES = 96608266,
  IETFINTERFACESINTERFACETYPE_ISDNS = 98224960,
  IETFINTERFACESINTERFACETYPE_ISDNU = 98224966,
  IETFINTERFACESINTERFACETYPE_CISCOISLVLAN = 98611879,
  IETFINTERFACESINTERFACETYPE_E1 = 98947197,
  IETFINTERFACESINTERFACETYPE_OTHER = 102886491,
  IETFINTERFACESINTERFACETYPE_PROPMULTIPLEXOR = 104872999,
  IETFINTERFACESINTERFACETYPE_ISO88025CRFPINT = 107406283,
  IETFINTERFACESINTERFACETYPE_OPTICALCHANNELGROUP = 113721035,
  IETFINTERFACESINTERFACETYPE_DTM = 113840220,
  IETFINTERFACESINTERFACETYPE_FRAMERELAYINTERCONNECT = 114395621,
  IETFINTERFACESINTERFACETYPE_VDSL2 = 114521030,
  IETFINTERFACESINTERFACETYPE_ESCON = 115055825,
  IETFINTERFACESINTERFACETYPE_RFC877X25 = 115857711,
  IETFINTERFACESINTERFACETYPE_X25MLP = 123303819,
  IETFINTERFACESINTERFACETYPE_DOCSCABLEMACLAYER = 123379145,
  IETFINTERFACESINTERFACETYPE_BGPPOLICYACCOUNTING = 123979459,
  IETFINTERFACESINTERFACETYPE_A12MPPSWITCH = 124516534,
  IETFINTERFACESINTERFACETYPE_RS232 = 125504151,
  IETFINTERFACESINTERFACETYPE_IFVFITYPE = 125597175,
  IETFINTERFACESINTERFACETYPE_ATMVIRTUAL = 126930162,
  IETFINTERFACESINTERFACETYPE_DS0 = 130617844,
  IETFINTERFACESINTERFACETYPE_DS1 = 130617845,
  IETFINTERFACESINTERFACETYPE_DS3 = 130617847,
  IETFINTERFACESINTERFACETYPE_USB = 133030655,
  IETFINTERFACESINTERFACETYPE_L2VLAN = 136888738,
  IETFINTERFACESINTERFACETYPE_ALUGPONONU = 142838813,
  IETFINTERFACESINTERFACETYPE_IBM370PARCHAN = 144282644,
  IETFINTERFACESINTERFACETYPE_IF_GSN = 144667633,
  IETFINTERFACESINTERFACETYPE_PROPVIRTUAL = 151318645,
  IETFINTERFACESINTERFACETYPE_DOCSCABLEUPSTREAMRFPORT = 152154307,
  IETFINTERFACESINTERFACETYPE_GR303IDT = 152588497,
  IETFINTERFACESINTERFACETYPE_DVBTDM = 154146406,
  IETFINTERFACESINTERFACETYPE_HYPERCHANNEL = 154271532,
  IETFINTERFACESINTERFACETYPE_X25PLE = 154740499,
  IETFINTERFACESINTERFACETYPE_FASTETHER = 154868491,
  IETFINTERFACESINTERFACETYPE_ADSL = 159068577,
  IETFINTERFACESINTERFACETYPE_STACKTOSTACK = 159738210,
  IETFINTERFACESINTERFACETYPE_ADSL2PLUS = 161466077,
  IETFINTERFACESINTERFACETYPE_IPFORWARD = 164396743,
  IETFINTERFACESINTERFACETYPE_IMT = 164717531,
  IETFINTERFACESINTERFACETYPE_IP = 166057704,
  IETFINTERFACESINTERFACETYPE_PIP = 166131694,
  IETFINTERFACESINTERFACETYPE_X25HUNTGROUP = 167843534,
  IETFINTERFACESINTERFACETYPE_ALUEPON = 168357285,
  IETFINTERFACESINTERFACETYPE_ALUEPONPHYSICALUNI = 173089984,
  IETFINTERFACESINTERFACETYPE_PROPCNLS = 175632828,
  IETFINTERFACESINTERFACETYPE_CAPWAPDOT11PROFILE = 178725861,
  IETFINTERFACESINTERFACETYPE_VOICEDID = 179978682,
  IETFINTERFACESINTERFACETYPE_CNR = 180496426,
  IETFINTERFACESINTERFACETYPE_HDH1822 = 181667598,
  IETFINTERFACESINTERFACETYPE_ATMDXI = 185164750,
  IETFINTERFACESINTERFACETYPE_ARCNETPLUS = 185743218,
  IETFINTERFACESINTERFACETYPE_IPOVERCDLC = 187706792,
  IETFINTERFACESINTERFACETYPE_LINEGROUP = 188639782,
  IETFINTERFACESINTERFACETYPE_DVBRCCMACLAYER = 190229931,
  IETFINTERFACESINTERFACETYPE_FRAMERELAY = 192403649,
  IETFINTERFACESINTERFACETYPE_ISDN = 193369057,
  IETFINTERFACESINTERFACETYPE_VOICEOVERCABLE = 193481284,
  IETFINTERFACESINTERFACETYPE_ARAP = 194889541,
  IETFINTERFACESINTERFACETYPE_EON = 197568375,
  IETFINTERFACESINTERFACETYPE_SONETOVERHEADCHANNEL = 198587275,
  IETFINTERFACESINTERFACETYPE_SIXTOFOUR = 198588222,
  IETFINTERFACESINTERFACETYPE_POS = 199686839,
  IETFINTERFACESINTERFACETYPE_ETHERNETCSMACD = 200640927,
  IETFINTERFACESINTERFACETYPE_DS0BUNDLE = 201568324,
  IETFINTERFACESINTERFACETYPE_ATMLOGICAL = 209365342,
  IETFINTERFACESINTERFACETYPE_RADIOMAC = 210946377,
  IETFINTERFACESINTERFACETYPE_PROPDOCSWIRELESSMACLAYER = 212348549,
  IETFINTERFACESINTERFACETYPE_PON622 = 214224204,
  IETFINTERFACESINTERFACETYPE_NSIP = 215039369,
  IETFINTERFACESINTERFACETYPE_MODEM = 220777299,
  IETFINTERFACESINTERFACETYPE_OTNODU = 221697026,
  IETFINTERFACESINTERFACETYPE_ISO88024TOKENBUS = 226662339,
  IETFINTERFACESINTERFACETYPE_COFFEE = 228642743,
  IETFINTERFACESINTERFACETYPE_DOCSCABLEUPSTREAMCHANNEL = 230766155,
  IETFINTERFACESINTERFACETYPE_ATMFUNI = 231177305,
  IETFINTERFACESINTERFACETYPE_LMP = 232563358,
  IETFINTERFACESINTERFACETYPE_ADSL2 = 233775169,
  IETFINTERFACESINTERFACETYPE_CABLEDOWNSTREAMRFPORT = 235031767,
  IETFINTERFACESINTERFACETYPE_DVBRCCDOWNSTREAM = 237186979,
  IETFINTERFACESINTERFACETYPE_MEDIAMAILOVERIP = 237300945,
  IETFINTERFACESINTERFACETYPE_BASICISDN = 240798305,
  IETFINTERFACESINTERFACETYPE_PLC = 250019614,
  IETFINTERFACESINTERFACETYPE_PROPDOCSWIRELESSUPSTREAM = 259946614,
  IETFINTERFACESINTERFACETYPE_TELINK = 263561362,
  IETFINTERFACESINTERFACETYPE_PON155 = 265689965,
  IETFINTERFACESINTERFACETYPE_TRANSPHDLC = 266205262,
  IETFINTERFACESINTERFACETYPE_SONETVT = 269056588,
  IETFINTERFACESINTERFACETYPE_DIGITALWRAPPEROVERHEADCHANNEL = 269831139,
  IETFINTERFACESINTERFACETYPE_VOICEFGDEANA = 271377999,
  IETFINTERFACESINTERFACETYPE_PRIMARYISDN = 274718125,
  IETFINTERFACESINTERFACETYPE_REGULAR1822 = 275236866,
  IETFINTERFACESINTERFACETYPE_AAL5 = 276070712,
  IETFINTERFACESINTERFACETYPE_AAL2 = 276070719,
  IETFINTERFACESINTERFACETYPE_SONETPATH = 278556471,
  IETFINTERFACESINTERFACETYPE_MPLSTUNNEL = 280402025,
  IETFINTERFACESINTERFACETYPE_ATM = 280868081,
  IETFINTERFACESINTERFACETYPE_SONET = 281707114,
  IETFINTERFACESINTERFACETYPE_ECONET = 282809795,
  IETFINTERFACESINTERFACETYPE_L3IPVLAN = 283365084,
  IETFINTERFACESINTERFACETYPE_ISO88026MAN = 284539790,
  IETFINTERFACESINTERFACETYPE_CAPWAPDOT11BSS = 287119162,
  IETFINTERFACESINTERFACETYPE_ASYNC = 288480505,
  IETFINTERFACESINTERFACETYPE_DIGITALPOWERLINE = 290391966,
  IETFINTERFACESINTERFACETYPE_ETHERNET3MBIT = 293951679,
  IETFINTERFACESINTERFACETYPE_G703AT64K = 295222342,
  IETFINTERFACESINTERFACETYPE_ALUGPONPHYSICALUNI = 299181714,
  IETFINTERFACESINTERFACETYPE_HOMEPNA = 299867081,
  IETFINTERFACESINTERFACETYPE_SIP = 300512605,
  IETFINTERFACESINTERFACETYPE_EPLRS = 301064637,
  IETFINTERFACESINTERFACETYPE_PROPATM = 301594276,
  IETFINTERFACESINTERFACETYPE_PROTEON10MBIT = 302514551,
  IETFINTERFACESINTERFACETYPE_ISO88022LLC = 303441265,
  IETFINTERFACESINTERFACETYPE_FASTETHERFX = 305592941,
  IETFINTERFACESINTERFACETYPE_ATMRADIO = 305823410,
  IETFINTERFACESINTERFACETYPE_CBLVECTASTAR = 307390607,
  IETFINTERFACESINTERFACETYPE_PARA = 310683645,
  IETFINTERFACESINTERFACETYPE_TUNNEL = 310831889,
  IETFINTERFACESINTERFACETYPE_VOICEOVERIP = 311289458,
  IETFINTERFACESINTERFACETYPE_OPTICALCHANNEL = 314028106,
  IETFINTERFACESINTERFACETYPE_Q2931 = 315546603,
  IETFINTERFACESINTERFACETYPE_MVL = 316291514,
  IETFINTERFACESINTERFACETYPE_PPP = 317130169,
  IETFINTERFACESINTERFACETYPE_FRFORWARD = 317625102,
  IETFINTERFACESINTERFACETYPE_IEEE1394 = 318235148,
  IETFINTERFACESINTERFACETYPE_AFLANE8025 = 319364675,
  IETFINTERFACESINTERFACETYPE_AFLANE8023 = 319364677,
  IETFINTERFACESINTERFACETYPE_ARCNET = 319683734,
  IETFINTERFACESINTERFACETYPE_VOICEENCAP = 320085758,
  IETFINTERFACESINTERFACETYPE_ATMVCIENDPT = 321577928,
  IETFINTERFACESINTERFACETYPE_ISO88023CSMACD = 323108786,
  IETFINTERFACESINTERFACETYPE_DOCSCABLEMCMTSDOWNSTREAM = 324059589,
  IETFINTERFACESINTERFACETYPE_FRDLCIENDPT = 331858766,
  IETFINTERFACESINTERFACETYPE_ALUEPONLOGICALLINK = 335068882,
  IETFINTERFACESINTERFACETYPE_MOCAVERSION1 = 336028310,
  IETFINTERFACESINTERFACETYPE_MFSIGLINK = 337561425,
  IETFINTERFACESINTERFACETYPE_G9981 = 346881905,
  IETFINTERFACESINTERFACETYPE_G9982 = 346881906,
  IETFINTERFACESINTERFACETYPE_G9983 = 346881907,
  IETFINTERFACESINTERFACETYPE_GTP = 348860930,
  IETFINTERFACESINTERFACETYPE_MPC = 349846687,
  IETFINTERFACESINTERFACETYPE_DVBASIIN = 352651815,
  IETFINTERFACESINTERFACETYPE_HIPERLAN2 = 353249714,
  IETFINTERFACESINTERFACETYPE_HSSI = 353395016,
  IETFINTERFACESINTERFACETYPE_VOICEEMFGD = 356893880,
  IETFINTERFACESINTERFACETYPE_SDLC = 358840141,
  IETFINTERFACESINTERFACETYPE_FRAMERELAYMPI = 361654039,
  IETFINTERFACESINTERFACETYPE_IFPWTYPE = 363685441,
  IETFINTERFACESINTERFACETYPE_CHANNEL = 365660696,
  IETFINTERFACESINTERFACETYPE_PROTEON80MBIT = 368321000,
  IETFINTERFACESINTERFACETYPE_V11 = 368423037,
  IETFINTERFACESINTERFACETYPE_INTERLEAVE = 370817552,
  IETFINTERFACESINTERFACETYPE_VOICEOVERFRAMERELAY = 370951175,
  IETFINTERFACESINTERFACETYPE_IPOVERCLAW = 373553475,
  IETFINTERFACESINTERFACETYPE_ISO88025TOKENRING = 374087486,
  IETFINTERFACESINTERFACETYPE_CAPWAPWTPVIRTUALRADIO = 377882412,
  IETFINTERFACESINTERFACETYPE_IEEE80211 = 379872273,
  IETFINTERFACESINTERFACETYPE_IEEE80212 = 379872274,
  IETFINTERFACESINTERFACETYPE_HOSTPAD = 382837620,
  IETFINTERFACESINTERFACETYPE_SMDSICIP = 383911039,
  IETFINTERFACESINTERFACETYPE_SRP = 384387804,
  IETFINTERFACESINTERFACETYPE_GIGABITETHERNET = 384522045,
  IETFINTERFACESINTERFACETYPE_DVBASIOUT = 385064858,
  IETFINTERFACESINTERFACETYPE_MACSECCONTROLLEDIF = 385408320,
  IETFINTERFACESINTERFACETYPE_GR303RDT = 386381018,
  IETFINTERFACESINTERFACETYPE_PPPMULTILINKBUNDLE = 389808788,
  IETFINTERFACESINTERFACETYPE_STARLAN = 392045632,
  IETFINTERFACESINTERFACETYPE_VOICEFXO = 398407724,
  IETFINTERFACESINTERFACETYPE_VOICEFXS = 398407728,
  IETFINTERFACESINTERFACETYPE_DCN = 399059610,
  IETFINTERFACESINTERFACETYPE_V36 = 401978180,
  IETFINTERFACESINTERFACETYPE_V37 = 401978181,
  IETFINTERFACESINTERFACETYPE_V35 = 401978183,
  IETFINTERFACESINTERFACETYPE_VOICEFGDOS = 403182892,
  IETFINTERFACESINTERFACETYPE_DS1FDL = 405008209,
  IETFINTERFACESINTERFACETYPE_H323PROXY = 405322027,
  IETFINTERFACESINTERFACETYPE_SOFTWARELOOPBACK = 405615795,
  IETFINTERFACESINTERFACETYPE_LAPF = 407559920,
  IETFINTERFACESINTERFACETYPE_LAPD = 407559922,
  IETFINTERFACESINTERFACETYPE_LAPB = 407559924,
  IETFINTERFACESINTERFACETYPE_QLLC = 408677579,
  IETFINTERFACESINTERFACETYPE_TERMPAD = 408914436,
  IETFINTERFACESINTERFACETYPE_BITS = 410011967,
  IETFINTERFACESINTERFACETYPE_DDNX25 = 411155170,
  IETFINTERFACESINTERFACETYPE_IEEE8023ADLAG = 413161059,
  IETFINTERFACESINTERFACETYPE_G703AT2MB = 413279788,
  IETFINTERFACESINTERFACETYPE_GPON = 416724613,
  IETFINTERFACESINTERFACETYPE_ISO88025DTR = 420258513,
  IETFINTERFACESINTERFACETYPE_ATMSUBINTERFACE = 420647634,
  IETFINTERFACESINTERFACETYPE_VDSL = 428082364,
  IETFINTERFACESINTERFACETYPE_VMWARENICTEAM = 430304464,
  IETFINTERFACESINTERFACETYPE_IEEE802154 = 432639291,
  IETFINTERFACESINTERFACETYPE_L3IPXVLAN = 434730178,
  IETFINTERFACESINTERFACETYPE_ATMIMA = 437373544,
  IETFINTERFACESINTERFACETYPE_MACSECUNCONTROLLEDIF = 438273729,
  IETFINTERFACESINTERFACETYPE_FCIPLINK = 441424349,
  IETFINTERFACESINTERFACETYPE_SLIP = 443995157,
  IETFINTERFACESINTERFACETYPE_SIPSIG = 444909704,
  IETFINTERFACESINTERFACETYPE_MPEGTRANSPORT = 444910235,
  IETFINTERFACESINTERFACETYPE_ISUP = 445020348,
  IETFINTERFACESINTERFACETYPE_CCTEMUL = 448544526,
  IETFINTERFACESINTERFACETYPE_ULTRA = 451132219,
  IETFINTERFACESINTERFACETYPE_IANA_INTERFACE_TYPE = 455303077,
  IETFINTERFACESINTERFACETYPE_TDLC = 458492100,
  IETFINTERFACESINTERFACETYPE_VOICEOVERATM = 460680391,
  IETFINTERFACESINTERFACETYPE_ALUEPONONU = 461328495,
  IETFINTERFACESINTERFACETYPE_RSRB = 467591542,
  IETFINTERFACESINTERFACETYPE_SHDSL = 469979751,
  IETFINTERFACESINTERFACETYPE_PROPPOINTTOPOINTSERIAL = 469979921,
  IETFINTERFACESINTERFACETYPE_MYRINET = 477828023,
  IETFINTERFACESINTERFACETYPE_H323GATEKEEPER = 487014318,
  IETFINTERFACESINTERFACETYPE_IPOVERATM = 487580074,
  IETFINTERFACESINTERFACETYPE_OTNOTU = 490139090,
  IETFINTERFACESINTERFACETYPE_ALUELP = 491118442,
  IETFINTERFACESINTERFACETYPE_COMPOSITELINK = 499352976,
  IETFINTERFACESINTERFACETYPE_QAM = 501537006,
  IETFINTERFACESINTERFACETYPE_INFINIBAND = 502195319,
  IETFINTERFACESINTERFACETYPE_HIPPI = 504532095,
  IETFINTERFACESINTERFACETYPE_DVBRCSMACLAYER = 505127867,
  IETFINTERFACESINTERFACETYPE_ATMBOND = 507519306,
  IETFINTERFACESINTERFACETYPE_ILAN = 513673897,
  IETFINTERFACESINTERFACETYPE_SS7SIGLINK = 513812603,
  IETFINTERFACESINTERFACETYPE_AVICIOPTICALETHER = 516076235,
  IETFINTERFACESINTERFACETYPE_RPR = 518755753,
  IETFINTERFACESINTERFACETYPE_SIPTG = 526983982,
  IETFINTERFACESINTERFACETYPE_WWANPP = 527365956,
  IETFINTERFACESINTERFACETYPE_HIPPIINTERFACE = 529837048,
  IETFINTERFACESINTERFACETYPE_WWANPP2 = 531578942,
  IETFINTERFACESINTERFACETYPE_VOICEEBS = 532084325,
  IETFINTERFACESINTERFACETYPE_BSC = 532973469,
  IETFINTERFACESINTERFACETYPE_MIOX25 = 535720499,
  IETFINTERFACESINTERFACETYPE_HDLC = 536418624,
  IETFInterfacesInterfaceType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  IETFInterfacesInterfaceType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool IETFInterfacesInterfaceType_IsValid(int value);
const IETFInterfacesInterfaceType IETFInterfacesInterfaceType_MIN = IETFINTERFACESINTERFACETYPE_UNSET;
const IETFInterfacesInterfaceType IETFInterfacesInterfaceType_MAX = IETFINTERFACESINTERFACETYPE_HDLC;
const int IETFInterfacesInterfaceType_ARRAYSIZE = IETFInterfacesInterfaceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* IETFInterfacesInterfaceType_descriptor();
inline const ::std::string& IETFInterfacesInterfaceType_Name(IETFInterfacesInterfaceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    IETFInterfacesInterfaceType_descriptor(), value);
}
inline bool IETFInterfacesInterfaceType_Parse(
    const ::std::string& name, IETFInterfacesInterfaceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<IETFInterfacesInterfaceType>(
    IETFInterfacesInterfaceType_descriptor(), name, value);
}
enum OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE {
  OPENCONFIGAAATYPESAAAACCOUNTINGEVENTTYPE_UNSET = 0,
  OPENCONFIGAAATYPESAAAACCOUNTINGEVENTTYPE_AAA_ACCOUNTING_EVENT_LOGIN = 32244738,
  OPENCONFIGAAATYPESAAAACCOUNTINGEVENTTYPE_AAA_ACCOUNTING_EVENT_COMMAND = 42489322,
  OPENCONFIGAAATYPESAAAACCOUNTINGEVENTTYPE_AAA_AUTHORIZATION_EVENT_CONFIG = 411456233,
  OPENCONFIGAAATYPESAAAACCOUNTINGEVENTTYPE_AAA_AUTHORIZATION_EVENT_COMMAND = 474022610,
  OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE_IsValid(int value);
const OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE_MIN = OPENCONFIGAAATYPESAAAACCOUNTINGEVENTTYPE_UNSET;
const OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE_MAX = OPENCONFIGAAATYPESAAAACCOUNTINGEVENTTYPE_AAA_AUTHORIZATION_EVENT_COMMAND;
const int OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE_ARRAYSIZE = OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE_descriptor();
inline const ::std::string& OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE_Name(OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE_descriptor(), value);
}
inline bool OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE_Parse(
    const ::std::string& name, OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE>(
    OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE_descriptor(), name, value);
}
enum OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE {
  OPENCONFIGAAATYPESAAAAUTHORIZATIONEVENTTYPE_UNSET = 0,
  OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE_IsValid(int value);
const OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE_MIN = OPENCONFIGAAATYPESAAAAUTHORIZATIONEVENTTYPE_UNSET;
const OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE_MAX = OPENCONFIGAAATYPESAAAAUTHORIZATIONEVENTTYPE_UNSET;
const int OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE_ARRAYSIZE = OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE_descriptor();
inline const ::std::string& OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE_Name(OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE_descriptor(), value);
}
inline bool OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE_Parse(
    const ::std::string& name, OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE>(
    OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE_descriptor(), name, value);
}
enum OpenconfigAaaTypesAAAMETHODTYPE {
  OPENCONFIGAAATYPESAAAMETHODTYPE_UNSET = 0,
  OPENCONFIGAAATYPESAAAMETHODTYPE_TACACS_ALL = 419164516,
  OPENCONFIGAAATYPESAAAMETHODTYPE_RADIUS_ALL = 492107981,
  OPENCONFIGAAATYPESAAAMETHODTYPE_LOCAL = 525920480,
  OpenconfigAaaTypesAAAMETHODTYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigAaaTypesAAAMETHODTYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigAaaTypesAAAMETHODTYPE_IsValid(int value);
const OpenconfigAaaTypesAAAMETHODTYPE OpenconfigAaaTypesAAAMETHODTYPE_MIN = OPENCONFIGAAATYPESAAAMETHODTYPE_UNSET;
const OpenconfigAaaTypesAAAMETHODTYPE OpenconfigAaaTypesAAAMETHODTYPE_MAX = OPENCONFIGAAATYPESAAAMETHODTYPE_LOCAL;
const int OpenconfigAaaTypesAAAMETHODTYPE_ARRAYSIZE = OpenconfigAaaTypesAAAMETHODTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigAaaTypesAAAMETHODTYPE_descriptor();
inline const ::std::string& OpenconfigAaaTypesAAAMETHODTYPE_Name(OpenconfigAaaTypesAAAMETHODTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigAaaTypesAAAMETHODTYPE_descriptor(), value);
}
inline bool OpenconfigAaaTypesAAAMETHODTYPE_Parse(
    const ::std::string& name, OpenconfigAaaTypesAAAMETHODTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigAaaTypesAAAMETHODTYPE>(
    OpenconfigAaaTypesAAAMETHODTYPE_descriptor(), name, value);
}
enum OpenconfigAaaTypesAAASERVERTYPE {
  OPENCONFIGAAATYPESAAASERVERTYPE_UNSET = 0,
  OPENCONFIGAAATYPESAAASERVERTYPE_TACACS = 5938954,
  OPENCONFIGAAATYPESAAASERVERTYPE_RADIUS = 19148247,
  OpenconfigAaaTypesAAASERVERTYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigAaaTypesAAASERVERTYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigAaaTypesAAASERVERTYPE_IsValid(int value);
const OpenconfigAaaTypesAAASERVERTYPE OpenconfigAaaTypesAAASERVERTYPE_MIN = OPENCONFIGAAATYPESAAASERVERTYPE_UNSET;
const OpenconfigAaaTypesAAASERVERTYPE OpenconfigAaaTypesAAASERVERTYPE_MAX = OPENCONFIGAAATYPESAAASERVERTYPE_RADIUS;
const int OpenconfigAaaTypesAAASERVERTYPE_ARRAYSIZE = OpenconfigAaaTypesAAASERVERTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigAaaTypesAAASERVERTYPE_descriptor();
inline const ::std::string& OpenconfigAaaTypesAAASERVERTYPE_Name(OpenconfigAaaTypesAAASERVERTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigAaaTypesAAASERVERTYPE_descriptor(), value);
}
inline bool OpenconfigAaaTypesAAASERVERTYPE_Parse(
    const ::std::string& name, OpenconfigAaaTypesAAASERVERTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigAaaTypesAAASERVERTYPE>(
    OpenconfigAaaTypesAAASERVERTYPE_descriptor(), name, value);
}
enum OpenconfigAaaTypesSYSTEMDEFINEDROLES {
  OPENCONFIGAAATYPESSYSTEMDEFINEDROLES_UNSET = 0,
  OPENCONFIGAAATYPESSYSTEMDEFINEDROLES_SYSTEM_ROLE_ADMIN = 390815160,
  OpenconfigAaaTypesSYSTEMDEFINEDROLES_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigAaaTypesSYSTEMDEFINEDROLES_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigAaaTypesSYSTEMDEFINEDROLES_IsValid(int value);
const OpenconfigAaaTypesSYSTEMDEFINEDROLES OpenconfigAaaTypesSYSTEMDEFINEDROLES_MIN = OPENCONFIGAAATYPESSYSTEMDEFINEDROLES_UNSET;
const OpenconfigAaaTypesSYSTEMDEFINEDROLES OpenconfigAaaTypesSYSTEMDEFINEDROLES_MAX = OPENCONFIGAAATYPESSYSTEMDEFINEDROLES_SYSTEM_ROLE_ADMIN;
const int OpenconfigAaaTypesSYSTEMDEFINEDROLES_ARRAYSIZE = OpenconfigAaaTypesSYSTEMDEFINEDROLES_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigAaaTypesSYSTEMDEFINEDROLES_descriptor();
inline const ::std::string& OpenconfigAaaTypesSYSTEMDEFINEDROLES_Name(OpenconfigAaaTypesSYSTEMDEFINEDROLES value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigAaaTypesSYSTEMDEFINEDROLES_descriptor(), value);
}
inline bool OpenconfigAaaTypesSYSTEMDEFINEDROLES_Parse(
    const ::std::string& name, OpenconfigAaaTypesSYSTEMDEFINEDROLES* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigAaaTypesSYSTEMDEFINEDROLES>(
    OpenconfigAaaTypesSYSTEMDEFINEDROLES_descriptor(), name, value);
}
enum OpenconfigAccessPointsAccessPointsAccessPointSystemCpusCpuStateIndex {
  OPENCONFIGACCESSPOINTS_ACCESSPOINTS_ACCESSPOINT_SYSTEM_CPUS_CPU_STATE_INDEX_UNSET = 0,
  OPENCONFIGACCESSPOINTS_ACCESSPOINTS_ACCESSPOINT_SYSTEM_CPUS_CPU_STATE_INDEX_ALL = 1,
  OpenconfigAccessPointsAccessPointsAccessPointSystemCpusCpuStateIndex_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigAccessPointsAccessPointsAccessPointSystemCpusCpuStateIndex_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigAccessPointsAccessPointsAccessPointSystemCpusCpuStateIndex_IsValid(int value);
const OpenconfigAccessPointsAccessPointsAccessPointSystemCpusCpuStateIndex OpenconfigAccessPointsAccessPointsAccessPointSystemCpusCpuStateIndex_MIN = OPENCONFIGACCESSPOINTS_ACCESSPOINTS_ACCESSPOINT_SYSTEM_CPUS_CPU_STATE_INDEX_UNSET;
const OpenconfigAccessPointsAccessPointsAccessPointSystemCpusCpuStateIndex OpenconfigAccessPointsAccessPointsAccessPointSystemCpusCpuStateIndex_MAX = OPENCONFIGACCESSPOINTS_ACCESSPOINTS_ACCESSPOINT_SYSTEM_CPUS_CPU_STATE_INDEX_ALL;
const int OpenconfigAccessPointsAccessPointsAccessPointSystemCpusCpuStateIndex_ARRAYSIZE = OpenconfigAccessPointsAccessPointsAccessPointSystemCpusCpuStateIndex_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigAccessPointsAccessPointsAccessPointSystemCpusCpuStateIndex_descriptor();
inline const ::std::string& OpenconfigAccessPointsAccessPointsAccessPointSystemCpusCpuStateIndex_Name(OpenconfigAccessPointsAccessPointsAccessPointSystemCpusCpuStateIndex value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigAccessPointsAccessPointsAccessPointSystemCpusCpuStateIndex_descriptor(), value);
}
inline bool OpenconfigAccessPointsAccessPointsAccessPointSystemCpusCpuStateIndex_Parse(
    const ::std::string& name, OpenconfigAccessPointsAccessPointsAccessPointSystemCpusCpuStateIndex* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigAccessPointsAccessPointsAccessPointSystemCpusCpuStateIndex>(
    OpenconfigAccessPointsAccessPointsAccessPointSystemCpusCpuStateIndex_descriptor(), name, value);
}
enum OpenconfigAclACLCOUNTERCAPABILITY {
  OPENCONFIGACLACLCOUNTERCAPABILITY_UNSET = 0,
  OPENCONFIGACLACLCOUNTERCAPABILITY_INTERFACE_ONLY = 99175805,
  OPENCONFIGACLACLCOUNTERCAPABILITY_INTERFACE_AGGREGATE = 132869768,
  OPENCONFIGACLACLCOUNTERCAPABILITY_AGGREGATE_ONLY = 266482693,
  OpenconfigAclACLCOUNTERCAPABILITY_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigAclACLCOUNTERCAPABILITY_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigAclACLCOUNTERCAPABILITY_IsValid(int value);
const OpenconfigAclACLCOUNTERCAPABILITY OpenconfigAclACLCOUNTERCAPABILITY_MIN = OPENCONFIGACLACLCOUNTERCAPABILITY_UNSET;
const OpenconfigAclACLCOUNTERCAPABILITY OpenconfigAclACLCOUNTERCAPABILITY_MAX = OPENCONFIGACLACLCOUNTERCAPABILITY_AGGREGATE_ONLY;
const int OpenconfigAclACLCOUNTERCAPABILITY_ARRAYSIZE = OpenconfigAclACLCOUNTERCAPABILITY_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigAclACLCOUNTERCAPABILITY_descriptor();
inline const ::std::string& OpenconfigAclACLCOUNTERCAPABILITY_Name(OpenconfigAclACLCOUNTERCAPABILITY value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigAclACLCOUNTERCAPABILITY_descriptor(), value);
}
inline bool OpenconfigAclACLCOUNTERCAPABILITY_Parse(
    const ::std::string& name, OpenconfigAclACLCOUNTERCAPABILITY* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigAclACLCOUNTERCAPABILITY>(
    OpenconfigAclACLCOUNTERCAPABILITY_descriptor(), name, value);
}
enum OpenconfigAclACLTYPE {
  OPENCONFIGACLACLTYPE_UNSET = 0,
  OPENCONFIGACLACLTYPE_ACL_L2 = 132416467,
  OPENCONFIGACLACLTYPE_ACL_IPV4 = 411031372,
  OPENCONFIGACLACLTYPE_ACL_IPV6 = 411031374,
  OPENCONFIGACLACLTYPE_ACL_MIXED = 469804226,
  OpenconfigAclACLTYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigAclACLTYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigAclACLTYPE_IsValid(int value);
const OpenconfigAclACLTYPE OpenconfigAclACLTYPE_MIN = OPENCONFIGACLACLTYPE_UNSET;
const OpenconfigAclACLTYPE OpenconfigAclACLTYPE_MAX = OPENCONFIGACLACLTYPE_ACL_MIXED;
const int OpenconfigAclACLTYPE_ARRAYSIZE = OpenconfigAclACLTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigAclACLTYPE_descriptor();
inline const ::std::string& OpenconfigAclACLTYPE_Name(OpenconfigAclACLTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigAclACLTYPE_descriptor(), value);
}
inline bool OpenconfigAclACLTYPE_Parse(
    const ::std::string& name, OpenconfigAclACLTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigAclACLTYPE>(
    OpenconfigAclACLTYPE_descriptor(), name, value);
}
enum OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigDestinationPort {
  OPENCONFIGACL_ACL_ACLSETS_ACLSET_ACLENTRIES_ACLENTRY_TRANSPORT_CONFIG_DESTINATIONPORT_UNSET = 0,
  OPENCONFIGACL_ACL_ACLSETS_ACLSET_ACLENTRIES_ACLENTRY_TRANSPORT_CONFIG_DESTINATIONPORT_ANY = 1,
  OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigDestinationPort_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigDestinationPort_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigDestinationPort_IsValid(int value);
const OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigDestinationPort OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigDestinationPort_MIN = OPENCONFIGACL_ACL_ACLSETS_ACLSET_ACLENTRIES_ACLENTRY_TRANSPORT_CONFIG_DESTINATIONPORT_UNSET;
const OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigDestinationPort OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigDestinationPort_MAX = OPENCONFIGACL_ACL_ACLSETS_ACLSET_ACLENTRIES_ACLENTRY_TRANSPORT_CONFIG_DESTINATIONPORT_ANY;
const int OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigDestinationPort_ARRAYSIZE = OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigDestinationPort_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigDestinationPort_descriptor();
inline const ::std::string& OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigDestinationPort_Name(OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigDestinationPort value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigDestinationPort_descriptor(), value);
}
inline bool OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigDestinationPort_Parse(
    const ::std::string& name, OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigDestinationPort* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigDestinationPort>(
    OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigDestinationPort_descriptor(), name, value);
}
enum OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigSourcePort {
  OPENCONFIGACL_ACL_ACLSETS_ACLSET_ACLENTRIES_ACLENTRY_TRANSPORT_CONFIG_SOURCEPORT_UNSET = 0,
  OPENCONFIGACL_ACL_ACLSETS_ACLSET_ACLENTRIES_ACLENTRY_TRANSPORT_CONFIG_SOURCEPORT_ANY = 1,
  OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigSourcePort_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigSourcePort_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigSourcePort_IsValid(int value);
const OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigSourcePort OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigSourcePort_MIN = OPENCONFIGACL_ACL_ACLSETS_ACLSET_ACLENTRIES_ACLENTRY_TRANSPORT_CONFIG_SOURCEPORT_UNSET;
const OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigSourcePort OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigSourcePort_MAX = OPENCONFIGACL_ACL_ACLSETS_ACLSET_ACLENTRIES_ACLENTRY_TRANSPORT_CONFIG_SOURCEPORT_ANY;
const int OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigSourcePort_ARRAYSIZE = OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigSourcePort_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigSourcePort_descriptor();
inline const ::std::string& OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigSourcePort_Name(OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigSourcePort value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigSourcePort_descriptor(), value);
}
inline bool OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigSourcePort_Parse(
    const ::std::string& name, OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigSourcePort* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigSourcePort>(
    OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigSourcePort_descriptor(), name, value);
}
enum OpenconfigAclFORWARDINGACTION {
  OPENCONFIGACLFORWARDINGACTION_UNSET = 0,
  OPENCONFIGACLFORWARDINGACTION_REJECT = 83418768,
  OPENCONFIGACLFORWARDINGACTION_DROP = 303263142,
  OPENCONFIGACLFORWARDINGACTION_ACCEPT = 464955669,
  OpenconfigAclFORWARDINGACTION_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigAclFORWARDINGACTION_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigAclFORWARDINGACTION_IsValid(int value);
const OpenconfigAclFORWARDINGACTION OpenconfigAclFORWARDINGACTION_MIN = OPENCONFIGACLFORWARDINGACTION_UNSET;
const OpenconfigAclFORWARDINGACTION OpenconfigAclFORWARDINGACTION_MAX = OPENCONFIGACLFORWARDINGACTION_ACCEPT;
const int OpenconfigAclFORWARDINGACTION_ARRAYSIZE = OpenconfigAclFORWARDINGACTION_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigAclFORWARDINGACTION_descriptor();
inline const ::std::string& OpenconfigAclFORWARDINGACTION_Name(OpenconfigAclFORWARDINGACTION value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigAclFORWARDINGACTION_descriptor(), value);
}
inline bool OpenconfigAclFORWARDINGACTION_Parse(
    const ::std::string& name, OpenconfigAclFORWARDINGACTION* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigAclFORWARDINGACTION>(
    OpenconfigAclFORWARDINGACTION_descriptor(), name, value);
}
enum OpenconfigAclLOGACTION {
  OPENCONFIGACLLOGACTION_UNSET = 0,
  OPENCONFIGACLLOGACTION_LOG_NONE = 184906209,
  OPENCONFIGACLLOGACTION_LOG_SYSLOG = 513275964,
  OpenconfigAclLOGACTION_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigAclLOGACTION_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigAclLOGACTION_IsValid(int value);
const OpenconfigAclLOGACTION OpenconfigAclLOGACTION_MIN = OPENCONFIGACLLOGACTION_UNSET;
const OpenconfigAclLOGACTION OpenconfigAclLOGACTION_MAX = OPENCONFIGACLLOGACTION_LOG_SYSLOG;
const int OpenconfigAclLOGACTION_ARRAYSIZE = OpenconfigAclLOGACTION_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigAclLOGACTION_descriptor();
inline const ::std::string& OpenconfigAclLOGACTION_Name(OpenconfigAclLOGACTION value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigAclLOGACTION_descriptor(), value);
}
inline bool OpenconfigAclLOGACTION_Parse(
    const ::std::string& name, OpenconfigAclLOGACTION* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigAclLOGACTION>(
    OpenconfigAclLOGACTION_descriptor(), name, value);
}
enum OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY {
  OPENCONFIGALARMTYPESOPENCONFIGALARMSEVERITY_UNSET = 0,
  OPENCONFIGALARMTYPESOPENCONFIGALARMSEVERITY_UNKNOWN = 70492973,
  OPENCONFIGALARMTYPESOPENCONFIGALARMSEVERITY_CRITICAL = 123728538,
  OPENCONFIGALARMTYPESOPENCONFIGALARMSEVERITY_MAJOR = 157280644,
  OPENCONFIGALARMTYPESOPENCONFIGALARMSEVERITY_MINOR = 275040832,
  OPENCONFIGALARMTYPESOPENCONFIGALARMSEVERITY_WARNING = 380442931,
  OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY_IsValid(int value);
const OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY_MIN = OPENCONFIGALARMTYPESOPENCONFIGALARMSEVERITY_UNSET;
const OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY_MAX = OPENCONFIGALARMTYPESOPENCONFIGALARMSEVERITY_WARNING;
const int OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY_ARRAYSIZE = OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY_descriptor();
inline const ::std::string& OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY_Name(OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY_descriptor(), value);
}
inline bool OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY_Parse(
    const ::std::string& name, OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY>(
    OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY_descriptor(), name, value);
}
enum OpenconfigAlarmTypesOPENCONFIGALARMTYPEID {
  OPENCONFIGALARMTYPESOPENCONFIGALARMTYPEID_UNSET = 0,
  OPENCONFIGALARMTYPESOPENCONFIGALARMTYPEID_EQPT = 54945826,
  OPENCONFIGALARMTYPESOPENCONFIGALARMTYPEID_AIS = 356419557,
  OPENCONFIGALARMTYPESOPENCONFIGALARMTYPEID_LOS = 389213562,
  OPENCONFIGALARMTYPESOPENCONFIGALARMTYPEID_OTS = 507085248,
  OpenconfigAlarmTypesOPENCONFIGALARMTYPEID_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigAlarmTypesOPENCONFIGALARMTYPEID_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigAlarmTypesOPENCONFIGALARMTYPEID_IsValid(int value);
const OpenconfigAlarmTypesOPENCONFIGALARMTYPEID OpenconfigAlarmTypesOPENCONFIGALARMTYPEID_MIN = OPENCONFIGALARMTYPESOPENCONFIGALARMTYPEID_UNSET;
const OpenconfigAlarmTypesOPENCONFIGALARMTYPEID OpenconfigAlarmTypesOPENCONFIGALARMTYPEID_MAX = OPENCONFIGALARMTYPESOPENCONFIGALARMTYPEID_OTS;
const int OpenconfigAlarmTypesOPENCONFIGALARMTYPEID_ARRAYSIZE = OpenconfigAlarmTypesOPENCONFIGALARMTYPEID_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigAlarmTypesOPENCONFIGALARMTYPEID_descriptor();
inline const ::std::string& OpenconfigAlarmTypesOPENCONFIGALARMTYPEID_Name(OpenconfigAlarmTypesOPENCONFIGALARMTYPEID value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigAlarmTypesOPENCONFIGALARMTYPEID_descriptor(), value);
}
inline bool OpenconfigAlarmTypesOPENCONFIGALARMTYPEID_Parse(
    const ::std::string& name, OpenconfigAlarmTypesOPENCONFIGALARMTYPEID* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigAlarmTypesOPENCONFIGALARMTYPEID>(
    OpenconfigAlarmTypesOPENCONFIGALARMTYPEID_descriptor(), name, value);
}
enum OpenconfigCatalogTypesCATALOGMEMBERTYPE {
  OPENCONFIGCATALOGTYPESCATALOGMEMBERTYPE_UNSET = 0,
  OPENCONFIGCATALOGTYPESCATALOGMEMBERTYPE_FEATURE_BUNDLE = 144148303,
  OPENCONFIGCATALOGTYPESCATALOGMEMBERTYPE_RELEASE_BUNDLE = 172558128,
  OPENCONFIGCATALOGTYPESCATALOGMEMBERTYPE_MODULE = 216067246,
  OpenconfigCatalogTypesCATALOGMEMBERTYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigCatalogTypesCATALOGMEMBERTYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigCatalogTypesCATALOGMEMBERTYPE_IsValid(int value);
const OpenconfigCatalogTypesCATALOGMEMBERTYPE OpenconfigCatalogTypesCATALOGMEMBERTYPE_MIN = OPENCONFIGCATALOGTYPESCATALOGMEMBERTYPE_UNSET;
const OpenconfigCatalogTypesCATALOGMEMBERTYPE OpenconfigCatalogTypesCATALOGMEMBERTYPE_MAX = OPENCONFIGCATALOGTYPESCATALOGMEMBERTYPE_MODULE;
const int OpenconfigCatalogTypesCATALOGMEMBERTYPE_ARRAYSIZE = OpenconfigCatalogTypesCATALOGMEMBERTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigCatalogTypesCATALOGMEMBERTYPE_descriptor();
inline const ::std::string& OpenconfigCatalogTypesCATALOGMEMBERTYPE_Name(OpenconfigCatalogTypesCATALOGMEMBERTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigCatalogTypesCATALOGMEMBERTYPE_descriptor(), value);
}
inline bool OpenconfigCatalogTypesCATALOGMEMBERTYPE_Parse(
    const ::std::string& name, OpenconfigCatalogTypesCATALOGMEMBERTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigCatalogTypesCATALOGMEMBERTYPE>(
    OpenconfigCatalogTypesCATALOGMEMBERTYPE_descriptor(), name, value);
}
enum OpenconfigCatalogTypesIMPLEMENTATIONSTATUSTYPE {
  OPENCONFIGCATALOGTYPESIMPLEMENTATIONSTATUSTYPE_UNSET = 0,
  OPENCONFIGCATALOGTYPESIMPLEMENTATIONSTATUSTYPE_PLANNED = 49763311,
  OPENCONFIGCATALOGTYPESIMPLEMENTATIONSTATUSTYPE_PARTIAL = 236449718,
  OPENCONFIGCATALOGTYPESIMPLEMENTATIONSTATUSTYPE_COMPLETE = 263061934,
  OPENCONFIGCATALOGTYPESIMPLEMENTATIONSTATUSTYPE_IN_PROGRESS = 524664764,
  OpenconfigCatalogTypesIMPLEMENTATIONSTATUSTYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigCatalogTypesIMPLEMENTATIONSTATUSTYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigCatalogTypesIMPLEMENTATIONSTATUSTYPE_IsValid(int value);
const OpenconfigCatalogTypesIMPLEMENTATIONSTATUSTYPE OpenconfigCatalogTypesIMPLEMENTATIONSTATUSTYPE_MIN = OPENCONFIGCATALOGTYPESIMPLEMENTATIONSTATUSTYPE_UNSET;
const OpenconfigCatalogTypesIMPLEMENTATIONSTATUSTYPE OpenconfigCatalogTypesIMPLEMENTATIONSTATUSTYPE_MAX = OPENCONFIGCATALOGTYPESIMPLEMENTATIONSTATUSTYPE_IN_PROGRESS;
const int OpenconfigCatalogTypesIMPLEMENTATIONSTATUSTYPE_ARRAYSIZE = OpenconfigCatalogTypesIMPLEMENTATIONSTATUSTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigCatalogTypesIMPLEMENTATIONSTATUSTYPE_descriptor();
inline const ::std::string& OpenconfigCatalogTypesIMPLEMENTATIONSTATUSTYPE_Name(OpenconfigCatalogTypesIMPLEMENTATIONSTATUSTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigCatalogTypesIMPLEMENTATIONSTATUSTYPE_descriptor(), value);
}
inline bool OpenconfigCatalogTypesIMPLEMENTATIONSTATUSTYPE_Parse(
    const ::std::string& name, OpenconfigCatalogTypesIMPLEMENTATIONSTATUSTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigCatalogTypesIMPLEMENTATIONSTATUSTYPE>(
    OpenconfigCatalogTypesIMPLEMENTATIONSTATUSTYPE_descriptor(), name, value);
}
enum OpenconfigCatalogTypesMODULECATEGORYBASE {
  OPENCONFIGCATALOGTYPESMODULECATEGORYBASE_UNSET = 0,
  OPENCONFIGCATALOGTYPESMODULECATEGORYBASE_IETF_MODEL_LAYER = 95725600,
  OPENCONFIGCATALOGTYPESMODULECATEGORYBASE_IETF_NETWORK_ELEMENT = 379703314,
  OPENCONFIGCATALOGTYPESMODULECATEGORYBASE_IETF_NETWORK_SERVICE = 401800823,
  OpenconfigCatalogTypesMODULECATEGORYBASE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigCatalogTypesMODULECATEGORYBASE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigCatalogTypesMODULECATEGORYBASE_IsValid(int value);
const OpenconfigCatalogTypesMODULECATEGORYBASE OpenconfigCatalogTypesMODULECATEGORYBASE_MIN = OPENCONFIGCATALOGTYPESMODULECATEGORYBASE_UNSET;
const OpenconfigCatalogTypesMODULECATEGORYBASE OpenconfigCatalogTypesMODULECATEGORYBASE_MAX = OPENCONFIGCATALOGTYPESMODULECATEGORYBASE_IETF_NETWORK_SERVICE;
const int OpenconfigCatalogTypesMODULECATEGORYBASE_ARRAYSIZE = OpenconfigCatalogTypesMODULECATEGORYBASE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigCatalogTypesMODULECATEGORYBASE_descriptor();
inline const ::std::string& OpenconfigCatalogTypesMODULECATEGORYBASE_Name(OpenconfigCatalogTypesMODULECATEGORYBASE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigCatalogTypesMODULECATEGORYBASE_descriptor(), value);
}
inline bool OpenconfigCatalogTypesMODULECATEGORYBASE_Parse(
    const ::std::string& name, OpenconfigCatalogTypesMODULECATEGORYBASE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigCatalogTypesMODULECATEGORYBASE>(
    OpenconfigCatalogTypesMODULECATEGORYBASE_descriptor(), name, value);
}
enum OpenconfigCatalogTypesMODULESTATUSTYPE {
  OPENCONFIGCATALOGTYPESMODULESTATUSTYPE_UNSET = 0,
  OPENCONFIGCATALOGTYPESMODULESTATUSTYPE_EXPERIMENTAL = 95131679,
  OPENCONFIGCATALOGTYPESMODULESTATUSTYPE_PRODUCTION = 448485660,
  OpenconfigCatalogTypesMODULESTATUSTYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigCatalogTypesMODULESTATUSTYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigCatalogTypesMODULESTATUSTYPE_IsValid(int value);
const OpenconfigCatalogTypesMODULESTATUSTYPE OpenconfigCatalogTypesMODULESTATUSTYPE_MIN = OPENCONFIGCATALOGTYPESMODULESTATUSTYPE_UNSET;
const OpenconfigCatalogTypesMODULESTATUSTYPE OpenconfigCatalogTypesMODULESTATUSTYPE_MAX = OPENCONFIGCATALOGTYPESMODULESTATUSTYPE_PRODUCTION;
const int OpenconfigCatalogTypesMODULESTATUSTYPE_ARRAYSIZE = OpenconfigCatalogTypesMODULESTATUSTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigCatalogTypesMODULESTATUSTYPE_descriptor();
inline const ::std::string& OpenconfigCatalogTypesMODULESTATUSTYPE_Name(OpenconfigCatalogTypesMODULESTATUSTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigCatalogTypesMODULESTATUSTYPE_descriptor(), value);
}
inline bool OpenconfigCatalogTypesMODULESTATUSTYPE_Parse(
    const ::std::string& name, OpenconfigCatalogTypesMODULESTATUSTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigCatalogTypesMODULESTATUSTYPE>(
    OpenconfigCatalogTypesMODULESTATUSTYPE_descriptor(), name, value);
}
enum OpenconfigCatalogTypesMODULESUBCATEGORYBASE {
  OPENCONFIGCATALOGTYPESMODULESUBCATEGORYBASE_UNSET = 0,
  OPENCONFIGCATALOGTYPESMODULESUBCATEGORYBASE_IETF_TYPE_USER = 135819901,
  OPENCONFIGCATALOGTYPESMODULESUBCATEGORYBASE_IETF_TYPE_STANDARD = 318398963,
  OPENCONFIGCATALOGTYPESMODULESUBCATEGORYBASE_IETF_MODEL_TYPE = 429394511,
  OPENCONFIGCATALOGTYPESMODULESUBCATEGORYBASE_IETF_TYPE_VENDOR = 526461606,
  OpenconfigCatalogTypesMODULESUBCATEGORYBASE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigCatalogTypesMODULESUBCATEGORYBASE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigCatalogTypesMODULESUBCATEGORYBASE_IsValid(int value);
const OpenconfigCatalogTypesMODULESUBCATEGORYBASE OpenconfigCatalogTypesMODULESUBCATEGORYBASE_MIN = OPENCONFIGCATALOGTYPESMODULESUBCATEGORYBASE_UNSET;
const OpenconfigCatalogTypesMODULESUBCATEGORYBASE OpenconfigCatalogTypesMODULESUBCATEGORYBASE_MAX = OPENCONFIGCATALOGTYPESMODULESUBCATEGORYBASE_IETF_TYPE_VENDOR;
const int OpenconfigCatalogTypesMODULESUBCATEGORYBASE_ARRAYSIZE = OpenconfigCatalogTypesMODULESUBCATEGORYBASE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigCatalogTypesMODULESUBCATEGORYBASE_descriptor();
inline const ::std::string& OpenconfigCatalogTypesMODULESUBCATEGORYBASE_Name(OpenconfigCatalogTypesMODULESUBCATEGORYBASE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigCatalogTypesMODULESUBCATEGORYBASE_descriptor(), value);
}
inline bool OpenconfigCatalogTypesMODULESUBCATEGORYBASE_Parse(
    const ::std::string& name, OpenconfigCatalogTypesMODULESUBCATEGORYBASE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigCatalogTypesMODULESUBCATEGORYBASE>(
    OpenconfigCatalogTypesMODULESUBCATEGORYBASE_descriptor(), name, value);
}
enum OpenconfigCatalogTypesORGANIZATIONTYPE {
  OPENCONFIGCATALOGTYPESORGANIZATIONTYPE_UNSET = 0,
  OPENCONFIGCATALOGTYPESORGANIZATIONTYPE_COMMERCIAL = 55136337,
  OPENCONFIGCATALOGTYPESORGANIZATIONTYPE_STANDARDS = 117508923,
  OPENCONFIGCATALOGTYPESORGANIZATIONTYPE_INDUSTRY = 145081989,
  OPENCONFIGCATALOGTYPESORGANIZATIONTYPE_INDIVIDUAL = 344820802,
  OpenconfigCatalogTypesORGANIZATIONTYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigCatalogTypesORGANIZATIONTYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigCatalogTypesORGANIZATIONTYPE_IsValid(int value);
const OpenconfigCatalogTypesORGANIZATIONTYPE OpenconfigCatalogTypesORGANIZATIONTYPE_MIN = OPENCONFIGCATALOGTYPESORGANIZATIONTYPE_UNSET;
const OpenconfigCatalogTypesORGANIZATIONTYPE OpenconfigCatalogTypesORGANIZATIONTYPE_MAX = OPENCONFIGCATALOGTYPESORGANIZATIONTYPE_INDIVIDUAL;
const int OpenconfigCatalogTypesORGANIZATIONTYPE_ARRAYSIZE = OpenconfigCatalogTypesORGANIZATIONTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigCatalogTypesORGANIZATIONTYPE_descriptor();
inline const ::std::string& OpenconfigCatalogTypesORGANIZATIONTYPE_Name(OpenconfigCatalogTypesORGANIZATIONTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigCatalogTypesORGANIZATIONTYPE_descriptor(), value);
}
inline bool OpenconfigCatalogTypesORGANIZATIONTYPE_Parse(
    const ::std::string& name, OpenconfigCatalogTypesORGANIZATIONTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigCatalogTypesORGANIZATIONTYPE>(
    OpenconfigCatalogTypesORGANIZATIONTYPE_descriptor(), name, value);
}
enum OpenconfigIfAggregateAggregationType {
  OPENCONFIGIFAGGREGATEAGGREGATIONTYPE_UNSET = 0,
  OPENCONFIGIFAGGREGATEAGGREGATIONTYPE_LACP = 1,
  OPENCONFIGIFAGGREGATEAGGREGATIONTYPE_STATIC = 2,
  OpenconfigIfAggregateAggregationType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigIfAggregateAggregationType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigIfAggregateAggregationType_IsValid(int value);
const OpenconfigIfAggregateAggregationType OpenconfigIfAggregateAggregationType_MIN = OPENCONFIGIFAGGREGATEAGGREGATIONTYPE_UNSET;
const OpenconfigIfAggregateAggregationType OpenconfigIfAggregateAggregationType_MAX = OPENCONFIGIFAGGREGATEAGGREGATIONTYPE_STATIC;
const int OpenconfigIfAggregateAggregationType_ARRAYSIZE = OpenconfigIfAggregateAggregationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigIfAggregateAggregationType_descriptor();
inline const ::std::string& OpenconfigIfAggregateAggregationType_Name(OpenconfigIfAggregateAggregationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigIfAggregateAggregationType_descriptor(), value);
}
inline bool OpenconfigIfAggregateAggregationType_Parse(
    const ::std::string& name, OpenconfigIfAggregateAggregationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigIfAggregateAggregationType>(
    OpenconfigIfAggregateAggregationType_descriptor(), name, value);
}
enum OpenconfigIfEthernetETHERNETSPEED {
  OPENCONFIGIFETHERNETETHERNETSPEED_UNSET = 0,
  OPENCONFIGIFETHERNETETHERNETSPEED_SPEED_UNKNOWN = 63922730,
  OPENCONFIGIFETHERNETETHERNETSPEED_SPEED_1GB = 158137778,
  OPENCONFIGIFETHERNETETHERNETSPEED_SPEED_25GB = 164726524,
  OPENCONFIGIFETHERNETETHERNETSPEED_SPEED_100MB = 176009444,
  OPENCONFIGIFETHERNETETHERNETSPEED_SPEED_10GB = 221101252,
  OPENCONFIGIFETHERNETETHERNETSPEED_SPEED_100GB = 276675162,
  OPENCONFIGIFETHERNETETHERNETSPEED_SPEED_10MB = 321766842,
  OPENCONFIGIFETHERNETETHERNETSPEED_SPEED_50GB = 434311888,
  OPENCONFIGIFETHERNETETHERNETSPEED_SPEED_40GB = 470711119,
  OpenconfigIfEthernetETHERNETSPEED_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigIfEthernetETHERNETSPEED_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigIfEthernetETHERNETSPEED_IsValid(int value);
const OpenconfigIfEthernetETHERNETSPEED OpenconfigIfEthernetETHERNETSPEED_MIN = OPENCONFIGIFETHERNETETHERNETSPEED_UNSET;
const OpenconfigIfEthernetETHERNETSPEED OpenconfigIfEthernetETHERNETSPEED_MAX = OPENCONFIGIFETHERNETETHERNETSPEED_SPEED_40GB;
const int OpenconfigIfEthernetETHERNETSPEED_ARRAYSIZE = OpenconfigIfEthernetETHERNETSPEED_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigIfEthernetETHERNETSPEED_descriptor();
inline const ::std::string& OpenconfigIfEthernetETHERNETSPEED_Name(OpenconfigIfEthernetETHERNETSPEED value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigIfEthernetETHERNETSPEED_descriptor(), value);
}
inline bool OpenconfigIfEthernetETHERNETSPEED_Parse(
    const ::std::string& name, OpenconfigIfEthernetETHERNETSPEED* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigIfEthernetETHERNETSPEED>(
    OpenconfigIfEthernetETHERNETSPEED_descriptor(), name, value);
}
enum OpenconfigIfIpIpAddressOrigin {
  OPENCONFIGIFIPIPADDRESSORIGIN_UNSET = 0,
  OPENCONFIGIFIPIPADDRESSORIGIN_OTHER = 1,
  OPENCONFIGIFIPIPADDRESSORIGIN_STATIC = 2,
  OPENCONFIGIFIPIPADDRESSORIGIN_DHCP = 3,
  OPENCONFIGIFIPIPADDRESSORIGIN_LINK_LAYER = 4,
  OPENCONFIGIFIPIPADDRESSORIGIN_RANDOM = 5,
  OpenconfigIfIpIpAddressOrigin_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigIfIpIpAddressOrigin_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigIfIpIpAddressOrigin_IsValid(int value);
const OpenconfigIfIpIpAddressOrigin OpenconfigIfIpIpAddressOrigin_MIN = OPENCONFIGIFIPIPADDRESSORIGIN_UNSET;
const OpenconfigIfIpIpAddressOrigin OpenconfigIfIpIpAddressOrigin_MAX = OPENCONFIGIFIPIPADDRESSORIGIN_RANDOM;
const int OpenconfigIfIpIpAddressOrigin_ARRAYSIZE = OpenconfigIfIpIpAddressOrigin_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigIfIpIpAddressOrigin_descriptor();
inline const ::std::string& OpenconfigIfIpIpAddressOrigin_Name(OpenconfigIfIpIpAddressOrigin value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigIfIpIpAddressOrigin_descriptor(), value);
}
inline bool OpenconfigIfIpIpAddressOrigin_Parse(
    const ::std::string& name, OpenconfigIfIpIpAddressOrigin* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigIfIpIpAddressOrigin>(
    OpenconfigIfIpIpAddressOrigin_descriptor(), name, value);
}
enum OpenconfigIfIpNeighborOrigin {
  OPENCONFIGIFIPNEIGHBORORIGIN_UNSET = 0,
  OPENCONFIGIFIPNEIGHBORORIGIN_OTHER = 1,
  OPENCONFIGIFIPNEIGHBORORIGIN_STATIC = 2,
  OPENCONFIGIFIPNEIGHBORORIGIN_DYNAMIC = 3,
  OpenconfigIfIpNeighborOrigin_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigIfIpNeighborOrigin_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigIfIpNeighborOrigin_IsValid(int value);
const OpenconfigIfIpNeighborOrigin OpenconfigIfIpNeighborOrigin_MIN = OPENCONFIGIFIPNEIGHBORORIGIN_UNSET;
const OpenconfigIfIpNeighborOrigin OpenconfigIfIpNeighborOrigin_MAX = OPENCONFIGIFIPNEIGHBORORIGIN_DYNAMIC;
const int OpenconfigIfIpNeighborOrigin_ARRAYSIZE = OpenconfigIfIpNeighborOrigin_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigIfIpNeighborOrigin_descriptor();
inline const ::std::string& OpenconfigIfIpNeighborOrigin_Name(OpenconfigIfIpNeighborOrigin value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigIfIpNeighborOrigin_descriptor(), value);
}
inline bool OpenconfigIfIpNeighborOrigin_Parse(
    const ::std::string& name, OpenconfigIfIpNeighborOrigin* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigIfIpNeighborOrigin>(
    OpenconfigIfIpNeighborOrigin_descriptor(), name, value);
}
enum OpenconfigLacpLacpActivityType {
  OPENCONFIGLACPLACPACTIVITYTYPE_ACTIVE = 0,
  OPENCONFIGLACPLACPACTIVITYTYPE_PASSIVE = 2,
  OpenconfigLacpLacpActivityType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigLacpLacpActivityType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigLacpLacpActivityType_IsValid(int value);
const OpenconfigLacpLacpActivityType OpenconfigLacpLacpActivityType_MIN = OPENCONFIGLACPLACPACTIVITYTYPE_ACTIVE;
const OpenconfigLacpLacpActivityType OpenconfigLacpLacpActivityType_MAX = OPENCONFIGLACPLACPACTIVITYTYPE_PASSIVE;
const int OpenconfigLacpLacpActivityType_ARRAYSIZE = OpenconfigLacpLacpActivityType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigLacpLacpActivityType_descriptor();
inline const ::std::string& OpenconfigLacpLacpActivityType_Name(OpenconfigLacpLacpActivityType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigLacpLacpActivityType_descriptor(), value);
}
inline bool OpenconfigLacpLacpActivityType_Parse(
    const ::std::string& name, OpenconfigLacpLacpActivityType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigLacpLacpActivityType>(
    OpenconfigLacpLacpActivityType_descriptor(), name, value);
}
enum OpenconfigLacpLacpPeriodType {
  OPENCONFIGLACPLACPPERIODTYPE_SLOW = 0,
  OPENCONFIGLACPLACPPERIODTYPE_FAST = 1,
  OpenconfigLacpLacpPeriodType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigLacpLacpPeriodType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigLacpLacpPeriodType_IsValid(int value);
const OpenconfigLacpLacpPeriodType OpenconfigLacpLacpPeriodType_MIN = OPENCONFIGLACPLACPPERIODTYPE_SLOW;
const OpenconfigLacpLacpPeriodType OpenconfigLacpLacpPeriodType_MAX = OPENCONFIGLACPLACPPERIODTYPE_FAST;
const int OpenconfigLacpLacpPeriodType_ARRAYSIZE = OpenconfigLacpLacpPeriodType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigLacpLacpPeriodType_descriptor();
inline const ::std::string& OpenconfigLacpLacpPeriodType_Name(OpenconfigLacpLacpPeriodType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigLacpLacpPeriodType_descriptor(), value);
}
inline bool OpenconfigLacpLacpPeriodType_Parse(
    const ::std::string& name, OpenconfigLacpLacpPeriodType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigLacpLacpPeriodType>(
    OpenconfigLacpLacpPeriodType_descriptor(), name, value);
}
enum OpenconfigLacpLacpSynchronizationType {
  OPENCONFIGLACPLACPSYNCHRONIZATIONTYPE_UNSET = 0,
  OPENCONFIGLACPLACPSYNCHRONIZATIONTYPE_IN_SYNC = 1,
  OPENCONFIGLACPLACPSYNCHRONIZATIONTYPE_OUT_SYNC = 2,
  OpenconfigLacpLacpSynchronizationType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigLacpLacpSynchronizationType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigLacpLacpSynchronizationType_IsValid(int value);
const OpenconfigLacpLacpSynchronizationType OpenconfigLacpLacpSynchronizationType_MIN = OPENCONFIGLACPLACPSYNCHRONIZATIONTYPE_UNSET;
const OpenconfigLacpLacpSynchronizationType OpenconfigLacpLacpSynchronizationType_MAX = OPENCONFIGLACPLACPSYNCHRONIZATIONTYPE_OUT_SYNC;
const int OpenconfigLacpLacpSynchronizationType_ARRAYSIZE = OpenconfigLacpLacpSynchronizationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigLacpLacpSynchronizationType_descriptor();
inline const ::std::string& OpenconfigLacpLacpSynchronizationType_Name(OpenconfigLacpLacpSynchronizationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigLacpLacpSynchronizationType_descriptor(), value);
}
inline bool OpenconfigLacpLacpSynchronizationType_Parse(
    const ::std::string& name, OpenconfigLacpLacpSynchronizationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigLacpLacpSynchronizationType>(
    OpenconfigLacpLacpSynchronizationType_descriptor(), name, value);
}
enum OpenconfigLacpLacpTimeoutType {
  OPENCONFIGLACPLACPTIMEOUTTYPE_UNSET = 0,
  OPENCONFIGLACPLACPTIMEOUTTYPE_LONG = 1,
  OPENCONFIGLACPLACPTIMEOUTTYPE_SHORT = 2,
  OpenconfigLacpLacpTimeoutType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigLacpLacpTimeoutType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigLacpLacpTimeoutType_IsValid(int value);
const OpenconfigLacpLacpTimeoutType OpenconfigLacpLacpTimeoutType_MIN = OPENCONFIGLACPLACPTIMEOUTTYPE_UNSET;
const OpenconfigLacpLacpTimeoutType OpenconfigLacpLacpTimeoutType_MAX = OPENCONFIGLACPLACPTIMEOUTTYPE_SHORT;
const int OpenconfigLacpLacpTimeoutType_ARRAYSIZE = OpenconfigLacpLacpTimeoutType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigLacpLacpTimeoutType_descriptor();
inline const ::std::string& OpenconfigLacpLacpTimeoutType_Name(OpenconfigLacpLacpTimeoutType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigLacpLacpTimeoutType_descriptor(), value);
}
inline bool OpenconfigLacpLacpTimeoutType_Parse(
    const ::std::string& name, OpenconfigLacpLacpTimeoutType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigLacpLacpTimeoutType>(
    OpenconfigLacpLacpTimeoutType_descriptor(), name, value);
}
enum OpenconfigLldpChassisIdType {
  OPENCONFIGLLDPCHASSISIDTYPE_UNSET = 0,
  OPENCONFIGLLDPCHASSISIDTYPE_CHASSIS_COMPONENT = 1,
  OPENCONFIGLLDPCHASSISIDTYPE_INTERFACE_ALIAS = 2,
  OPENCONFIGLLDPCHASSISIDTYPE_PORT_COMPONENT = 3,
  OPENCONFIGLLDPCHASSISIDTYPE_MAC_ADDRESS = 4,
  OPENCONFIGLLDPCHASSISIDTYPE_NETWORK_ADDRESS = 5,
  OPENCONFIGLLDPCHASSISIDTYPE_INTERFACE_NAME = 6,
  OPENCONFIGLLDPCHASSISIDTYPE_LOCAL = 7,
  OpenconfigLldpChassisIdType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigLldpChassisIdType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigLldpChassisIdType_IsValid(int value);
const OpenconfigLldpChassisIdType OpenconfigLldpChassisIdType_MIN = OPENCONFIGLLDPCHASSISIDTYPE_UNSET;
const OpenconfigLldpChassisIdType OpenconfigLldpChassisIdType_MAX = OPENCONFIGLLDPCHASSISIDTYPE_LOCAL;
const int OpenconfigLldpChassisIdType_ARRAYSIZE = OpenconfigLldpChassisIdType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigLldpChassisIdType_descriptor();
inline const ::std::string& OpenconfigLldpChassisIdType_Name(OpenconfigLldpChassisIdType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigLldpChassisIdType_descriptor(), value);
}
inline bool OpenconfigLldpChassisIdType_Parse(
    const ::std::string& name, OpenconfigLldpChassisIdType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigLldpChassisIdType>(
    OpenconfigLldpChassisIdType_descriptor(), name, value);
}
enum OpenconfigLldpPortIdType {
  OPENCONFIGLLDPPORTIDTYPE_UNSET = 0,
  OPENCONFIGLLDPPORTIDTYPE_INTERFACE_ALIAS = 1,
  OPENCONFIGLLDPPORTIDTYPE_PORT_COMPONENT = 2,
  OPENCONFIGLLDPPORTIDTYPE_MAC_ADDRESS = 3,
  OPENCONFIGLLDPPORTIDTYPE_NETWORK_ADDRESS = 4,
  OPENCONFIGLLDPPORTIDTYPE_INTERFACE_NAME = 5,
  OPENCONFIGLLDPPORTIDTYPE_AGENT_CIRCUIT_ID = 6,
  OPENCONFIGLLDPPORTIDTYPE_LOCAL = 7,
  OpenconfigLldpPortIdType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigLldpPortIdType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigLldpPortIdType_IsValid(int value);
const OpenconfigLldpPortIdType OpenconfigLldpPortIdType_MIN = OPENCONFIGLLDPPORTIDTYPE_UNSET;
const OpenconfigLldpPortIdType OpenconfigLldpPortIdType_MAX = OPENCONFIGLLDPPORTIDTYPE_LOCAL;
const int OpenconfigLldpPortIdType_ARRAYSIZE = OpenconfigLldpPortIdType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigLldpPortIdType_descriptor();
inline const ::std::string& OpenconfigLldpPortIdType_Name(OpenconfigLldpPortIdType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigLldpPortIdType_descriptor(), value);
}
inline bool OpenconfigLldpPortIdType_Parse(
    const ::std::string& name, OpenconfigLldpPortIdType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigLldpPortIdType>(
    OpenconfigLldpPortIdType_descriptor(), name, value);
}
enum OpenconfigLldpTypesLLDPSYSTEMCAPABILITY {
  OPENCONFIGLLDPTYPESLLDPSYSTEMCAPABILITY_UNSET = 0,
  OPENCONFIGLLDPTYPESLLDPSYSTEMCAPABILITY_ROUTER = 11115187,
  OPENCONFIGLLDPTYPESLLDPSYSTEMCAPABILITY_S_VLAN = 96684641,
  OPENCONFIGLLDPTYPESLLDPSYSTEMCAPABILITY_MAC_BRIDGE = 98146663,
  OPENCONFIGLLDPTYPESLLDPSYSTEMCAPABILITY_STATION_ONLY = 107168325,
  OPENCONFIGLLDPTYPESLLDPSYSTEMCAPABILITY_DOCSIS_CABLE_DEVICE = 232330836,
  OPENCONFIGLLDPTYPESLLDPSYSTEMCAPABILITY_REPEATER = 287396560,
  OPENCONFIGLLDPTYPESLLDPSYSTEMCAPABILITY_WLAN_ACCESS_POINT = 331434386,
  OPENCONFIGLLDPTYPESLLDPSYSTEMCAPABILITY_TELEPHONE = 347385640,
  OPENCONFIGLLDPTYPESLLDPSYSTEMCAPABILITY_C_VLAN = 371416145,
  OPENCONFIGLLDPTYPESLLDPSYSTEMCAPABILITY_OTHER = 480015482,
  OPENCONFIGLLDPTYPESLLDPSYSTEMCAPABILITY_TWO_PORT_MAC_RELAY = 502835810,
  OpenconfigLldpTypesLLDPSYSTEMCAPABILITY_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigLldpTypesLLDPSYSTEMCAPABILITY_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigLldpTypesLLDPSYSTEMCAPABILITY_IsValid(int value);
const OpenconfigLldpTypesLLDPSYSTEMCAPABILITY OpenconfigLldpTypesLLDPSYSTEMCAPABILITY_MIN = OPENCONFIGLLDPTYPESLLDPSYSTEMCAPABILITY_UNSET;
const OpenconfigLldpTypesLLDPSYSTEMCAPABILITY OpenconfigLldpTypesLLDPSYSTEMCAPABILITY_MAX = OPENCONFIGLLDPTYPESLLDPSYSTEMCAPABILITY_TWO_PORT_MAC_RELAY;
const int OpenconfigLldpTypesLLDPSYSTEMCAPABILITY_ARRAYSIZE = OpenconfigLldpTypesLLDPSYSTEMCAPABILITY_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigLldpTypesLLDPSYSTEMCAPABILITY_descriptor();
inline const ::std::string& OpenconfigLldpTypesLLDPSYSTEMCAPABILITY_Name(OpenconfigLldpTypesLLDPSYSTEMCAPABILITY value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigLldpTypesLLDPSYSTEMCAPABILITY_descriptor(), value);
}
inline bool OpenconfigLldpTypesLLDPSYSTEMCAPABILITY_Parse(
    const ::std::string& name, OpenconfigLldpTypesLLDPSYSTEMCAPABILITY* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigLldpTypesLLDPSYSTEMCAPABILITY>(
    OpenconfigLldpTypesLLDPSYSTEMCAPABILITY_descriptor(), name, value);
}
enum OpenconfigLldpTypesLLDPTLV {
  OPENCONFIGLLDPTYPESLLDPTLV_UNSET = 0,
  OPENCONFIGLLDPTYPESLLDPTLV_PORT_DESCRIPTION = 15326996,
  OPENCONFIGLLDPTYPESLLDPTLV_SYSTEM_CAPABILITIES = 28592394,
  OPENCONFIGLLDPTYPESLLDPTLV_MANAGEMENT_ADDRESS = 75782954,
  OPENCONFIGLLDPTYPESLLDPTLV_PORT_ID = 190600013,
  OPENCONFIGLLDPTYPESLLDPTLV_SYSTEM_DESCRIPTION = 275005382,
  OPENCONFIGLLDPTYPESLLDPTLV_SYSTEM_NAME = 293558073,
  OPENCONFIGLLDPTYPESLLDPTLV_CHASSIS_ID = 407794970,
  OpenconfigLldpTypesLLDPTLV_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigLldpTypesLLDPTLV_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigLldpTypesLLDPTLV_IsValid(int value);
const OpenconfigLldpTypesLLDPTLV OpenconfigLldpTypesLLDPTLV_MIN = OPENCONFIGLLDPTYPESLLDPTLV_UNSET;
const OpenconfigLldpTypesLLDPTLV OpenconfigLldpTypesLLDPTLV_MAX = OPENCONFIGLLDPTYPESLLDPTLV_CHASSIS_ID;
const int OpenconfigLldpTypesLLDPTLV_ARRAYSIZE = OpenconfigLldpTypesLLDPTLV_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigLldpTypesLLDPTLV_descriptor();
inline const ::std::string& OpenconfigLldpTypesLLDPTLV_Name(OpenconfigLldpTypesLLDPTLV value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigLldpTypesLLDPTLV_descriptor(), value);
}
inline bool OpenconfigLldpTypesLLDPTLV_Parse(
    const ::std::string& name, OpenconfigLldpTypesLLDPTLV* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigLldpTypesLLDPTLV>(
    OpenconfigLldpTypesLLDPTLV_descriptor(), name, value);
}
enum OpenconfigOpenflowFailureMode {
  OPENCONFIGOPENFLOWFAILUREMODE_UNSET = 0,
  OPENCONFIGOPENFLOWFAILUREMODE_SECURE = 1,
  OPENCONFIGOPENFLOWFAILUREMODE_STANDALONE = 2,
  OpenconfigOpenflowFailureMode_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigOpenflowFailureMode_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigOpenflowFailureMode_IsValid(int value);
const OpenconfigOpenflowFailureMode OpenconfigOpenflowFailureMode_MIN = OPENCONFIGOPENFLOWFAILUREMODE_UNSET;
const OpenconfigOpenflowFailureMode OpenconfigOpenflowFailureMode_MAX = OPENCONFIGOPENFLOWFAILUREMODE_STANDALONE;
const int OpenconfigOpenflowFailureMode_ARRAYSIZE = OpenconfigOpenflowFailureMode_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigOpenflowFailureMode_descriptor();
inline const ::std::string& OpenconfigOpenflowFailureMode_Name(OpenconfigOpenflowFailureMode value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigOpenflowFailureMode_descriptor(), value);
}
inline bool OpenconfigOpenflowFailureMode_Parse(
    const ::std::string& name, OpenconfigOpenflowFailureMode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigOpenflowFailureMode>(
    OpenconfigOpenflowFailureMode_descriptor(), name, value);
}
enum OpenconfigOpenflowTransport {
  OPENCONFIGOPENFLOWTRANSPORT_TCP = 0,
  OPENCONFIGOPENFLOWTRANSPORT_TLS = 2,
  OpenconfigOpenflowTransport_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigOpenflowTransport_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigOpenflowTransport_IsValid(int value);
const OpenconfigOpenflowTransport OpenconfigOpenflowTransport_MIN = OPENCONFIGOPENFLOWTRANSPORT_TCP;
const OpenconfigOpenflowTransport OpenconfigOpenflowTransport_MAX = OPENCONFIGOPENFLOWTRANSPORT_TLS;
const int OpenconfigOpenflowTransport_ARRAYSIZE = OpenconfigOpenflowTransport_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigOpenflowTransport_descriptor();
inline const ::std::string& OpenconfigOpenflowTransport_Name(OpenconfigOpenflowTransport value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigOpenflowTransport_descriptor(), value);
}
inline bool OpenconfigOpenflowTransport_Parse(
    const ::std::string& name, OpenconfigOpenflowTransport* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigOpenflowTransport>(
    OpenconfigOpenflowTransport_descriptor(), name, value);
}
enum OpenconfigOpticalAmplifierFIBERTYPEPROFILE {
  OPENCONFIGOPTICALAMPLIFIERFIBERTYPEPROFILE_UNSET = 0,
  OPENCONFIGOPTICALAMPLIFIERFIBERTYPEPROFILE_TWRS = 28856180,
  OPENCONFIGOPTICALAMPLIFIERFIBERTYPEPROFILE_SSMF = 36171489,
  OPENCONFIGOPTICALAMPLIFIERFIBERTYPEPROFILE_LEAF = 102938290,
  OPENCONFIGOPTICALAMPLIFIERFIBERTYPEPROFILE_DSF = 171548757,
  OPENCONFIGOPTICALAMPLIFIERFIBERTYPEPROFILE_TWC = 241322124,
  OpenconfigOpticalAmplifierFIBERTYPEPROFILE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigOpticalAmplifierFIBERTYPEPROFILE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigOpticalAmplifierFIBERTYPEPROFILE_IsValid(int value);
const OpenconfigOpticalAmplifierFIBERTYPEPROFILE OpenconfigOpticalAmplifierFIBERTYPEPROFILE_MIN = OPENCONFIGOPTICALAMPLIFIERFIBERTYPEPROFILE_UNSET;
const OpenconfigOpticalAmplifierFIBERTYPEPROFILE OpenconfigOpticalAmplifierFIBERTYPEPROFILE_MAX = OPENCONFIGOPTICALAMPLIFIERFIBERTYPEPROFILE_TWC;
const int OpenconfigOpticalAmplifierFIBERTYPEPROFILE_ARRAYSIZE = OpenconfigOpticalAmplifierFIBERTYPEPROFILE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigOpticalAmplifierFIBERTYPEPROFILE_descriptor();
inline const ::std::string& OpenconfigOpticalAmplifierFIBERTYPEPROFILE_Name(OpenconfigOpticalAmplifierFIBERTYPEPROFILE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigOpticalAmplifierFIBERTYPEPROFILE_descriptor(), value);
}
inline bool OpenconfigOpticalAmplifierFIBERTYPEPROFILE_Parse(
    const ::std::string& name, OpenconfigOpticalAmplifierFIBERTYPEPROFILE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigOpticalAmplifierFIBERTYPEPROFILE>(
    OpenconfigOpticalAmplifierFIBERTYPEPROFILE_descriptor(), name, value);
}
enum OpenconfigOpticalAmplifierGAINRANGE {
  OPENCONFIGOPTICALAMPLIFIERGAINRANGE_UNSET = 0,
  OPENCONFIGOPTICALAMPLIFIERGAINRANGE_MID_GAIN_RANGE = 175270936,
  OPENCONFIGOPTICALAMPLIFIERGAINRANGE_HIGH_GAIN_RANGE = 240520630,
  OPENCONFIGOPTICALAMPLIFIERGAINRANGE_LOW_GAIN_RANGE = 292888456,
  OPENCONFIGOPTICALAMPLIFIERGAINRANGE_FIXED_GAIN_RANGE = 500021236,
  OpenconfigOpticalAmplifierGAINRANGE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigOpticalAmplifierGAINRANGE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigOpticalAmplifierGAINRANGE_IsValid(int value);
const OpenconfigOpticalAmplifierGAINRANGE OpenconfigOpticalAmplifierGAINRANGE_MIN = OPENCONFIGOPTICALAMPLIFIERGAINRANGE_UNSET;
const OpenconfigOpticalAmplifierGAINRANGE OpenconfigOpticalAmplifierGAINRANGE_MAX = OPENCONFIGOPTICALAMPLIFIERGAINRANGE_FIXED_GAIN_RANGE;
const int OpenconfigOpticalAmplifierGAINRANGE_ARRAYSIZE = OpenconfigOpticalAmplifierGAINRANGE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigOpticalAmplifierGAINRANGE_descriptor();
inline const ::std::string& OpenconfigOpticalAmplifierGAINRANGE_Name(OpenconfigOpticalAmplifierGAINRANGE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigOpticalAmplifierGAINRANGE_descriptor(), value);
}
inline bool OpenconfigOpticalAmplifierGAINRANGE_Parse(
    const ::std::string& name, OpenconfigOpticalAmplifierGAINRANGE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigOpticalAmplifierGAINRANGE>(
    OpenconfigOpticalAmplifierGAINRANGE_descriptor(), name, value);
}
enum OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE {
  OPENCONFIGOPTICALAMPLIFIEROPTICALAMPLIFIERMODE_UNSET = 0,
  OPENCONFIGOPTICALAMPLIFIEROPTICALAMPLIFIERMODE_CONSTANT_POWER = 58375877,
  OPENCONFIGOPTICALAMPLIFIEROPTICALAMPLIFIERMODE_CONSTANT_GAIN = 471033275,
  OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE_IsValid(int value);
const OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE_MIN = OPENCONFIGOPTICALAMPLIFIEROPTICALAMPLIFIERMODE_UNSET;
const OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE_MAX = OPENCONFIGOPTICALAMPLIFIEROPTICALAMPLIFIERMODE_CONSTANT_GAIN;
const int OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE_ARRAYSIZE = OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE_descriptor();
inline const ::std::string& OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE_Name(OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE_descriptor(), value);
}
inline bool OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE_Parse(
    const ::std::string& name, OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE>(
    OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE_descriptor(), name, value);
}
enum OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE {
  OPENCONFIGOPTICALAMPLIFIEROPTICALAMPLIFIERTYPE_UNSET = 0,
  OPENCONFIGOPTICALAMPLIFIEROPTICALAMPLIFIERTYPE_EDFA = 119400506,
  OPENCONFIGOPTICALAMPLIFIEROPTICALAMPLIFIERTYPE_BACKWARD_RAMAN = 185961505,
  OPENCONFIGOPTICALAMPLIFIEROPTICALAMPLIFIERTYPE_HYBRID = 517524076,
  OPENCONFIGOPTICALAMPLIFIEROPTICALAMPLIFIERTYPE_FORWARD_RAMAN = 526622329,
  OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE_IsValid(int value);
const OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE_MIN = OPENCONFIGOPTICALAMPLIFIEROPTICALAMPLIFIERTYPE_UNSET;
const OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE_MAX = OPENCONFIGOPTICALAMPLIFIEROPTICALAMPLIFIERTYPE_FORWARD_RAMAN;
const int OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE_ARRAYSIZE = OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE_descriptor();
inline const ::std::string& OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE_Name(OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE_descriptor(), value);
}
inline bool OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE_Parse(
    const ::std::string& name, OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE>(
    OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE_descriptor(), name, value);
}
enum OpenconfigPacketMatchTypesETHERTYPE {
  OPENCONFIGPACKETMATCHTYPESETHERTYPE_UNSET = 0,
  OPENCONFIGPACKETMATCHTYPESETHERTYPE_ETHERTYPE_ROCE = 14086673,
  OPENCONFIGPACKETMATCHTYPESETHERTYPE_ETHERTYPE_LLDP = 63862784,
  OPENCONFIGPACKETMATCHTYPESETHERTYPE_ETHERTYPE_IPV4 = 140115701,
  OPENCONFIGPACKETMATCHTYPESETHERTYPE_ETHERTYPE_IPV6 = 140115703,
  OPENCONFIGPACKETMATCHTYPESETHERTYPE_ETHERTYPE_ARP = 383275775,
  OPENCONFIGPACKETMATCHTYPESETHERTYPE_ETHERTYPE_MPLS = 427890540,
  OPENCONFIGPACKETMATCHTYPESETHERTYPE_ETHERTYPE_VLAN = 522848603,
  OpenconfigPacketMatchTypesETHERTYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigPacketMatchTypesETHERTYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigPacketMatchTypesETHERTYPE_IsValid(int value);
const OpenconfigPacketMatchTypesETHERTYPE OpenconfigPacketMatchTypesETHERTYPE_MIN = OPENCONFIGPACKETMATCHTYPESETHERTYPE_UNSET;
const OpenconfigPacketMatchTypesETHERTYPE OpenconfigPacketMatchTypesETHERTYPE_MAX = OPENCONFIGPACKETMATCHTYPESETHERTYPE_ETHERTYPE_VLAN;
const int OpenconfigPacketMatchTypesETHERTYPE_ARRAYSIZE = OpenconfigPacketMatchTypesETHERTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigPacketMatchTypesETHERTYPE_descriptor();
inline const ::std::string& OpenconfigPacketMatchTypesETHERTYPE_Name(OpenconfigPacketMatchTypesETHERTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigPacketMatchTypesETHERTYPE_descriptor(), value);
}
inline bool OpenconfigPacketMatchTypesETHERTYPE_Parse(
    const ::std::string& name, OpenconfigPacketMatchTypesETHERTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigPacketMatchTypesETHERTYPE>(
    OpenconfigPacketMatchTypesETHERTYPE_descriptor(), name, value);
}
enum OpenconfigPacketMatchTypesIPPROTOCOL {
  OPENCONFIGPACKETMATCHTYPESIPPROTOCOL_UNSET = 0,
  OPENCONFIGPACKETMATCHTYPESIPPROTOCOL_IP_GRE = 24050007,
  OPENCONFIGPACKETMATCHTYPESIPPROTOCOL_IP_TCP = 38721802,
  OPENCONFIGPACKETMATCHTYPESIPPROTOCOL_IP_L2TP = 81903923,
  OPENCONFIGPACKETMATCHTYPESIPPROTOCOL_IP_AUTH = 203904199,
  OPENCONFIGPACKETMATCHTYPESIPPROTOCOL_IP_PIM = 272904165,
  OPENCONFIGPACKETMATCHTYPESIPPROTOCOL_IP_IGMP = 512271866,
  OPENCONFIGPACKETMATCHTYPESIPPROTOCOL_IP_ICMP = 512860246,
  OPENCONFIGPACKETMATCHTYPESIPPROTOCOL_IP_UDP = 525100026,
  OPENCONFIGPACKETMATCHTYPESIPPROTOCOL_IP_RSVP = 530070378,
  OpenconfigPacketMatchTypesIPPROTOCOL_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigPacketMatchTypesIPPROTOCOL_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigPacketMatchTypesIPPROTOCOL_IsValid(int value);
const OpenconfigPacketMatchTypesIPPROTOCOL OpenconfigPacketMatchTypesIPPROTOCOL_MIN = OPENCONFIGPACKETMATCHTYPESIPPROTOCOL_UNSET;
const OpenconfigPacketMatchTypesIPPROTOCOL OpenconfigPacketMatchTypesIPPROTOCOL_MAX = OPENCONFIGPACKETMATCHTYPESIPPROTOCOL_IP_RSVP;
const int OpenconfigPacketMatchTypesIPPROTOCOL_ARRAYSIZE = OpenconfigPacketMatchTypesIPPROTOCOL_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigPacketMatchTypesIPPROTOCOL_descriptor();
inline const ::std::string& OpenconfigPacketMatchTypesIPPROTOCOL_Name(OpenconfigPacketMatchTypesIPPROTOCOL value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigPacketMatchTypesIPPROTOCOL_descriptor(), value);
}
inline bool OpenconfigPacketMatchTypesIPPROTOCOL_Parse(
    const ::std::string& name, OpenconfigPacketMatchTypesIPPROTOCOL* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigPacketMatchTypesIPPROTOCOL>(
    OpenconfigPacketMatchTypesIPPROTOCOL_descriptor(), name, value);
}
enum OpenconfigPacketMatchTypesTCPFLAGS {
  OPENCONFIGPACKETMATCHTYPESTCPFLAGS_UNSET = 0,
  OPENCONFIGPACKETMATCHTYPESTCPFLAGS_TCP_CWR = 7246418,
  OPENCONFIGPACKETMATCHTYPESTCPFLAGS_TCP_ACK = 74689745,
  OPENCONFIGPACKETMATCHTYPESTCPFLAGS_TCP_RST = 76795313,
  OPENCONFIGPACKETMATCHTYPESTCPFLAGS_TCP_ECE = 208309299,
  OPENCONFIGPACKETMATCHTYPESTCPFLAGS_TCP_PSH = 211387811,
  OPENCONFIGPACKETMATCHTYPESTCPFLAGS_TCP_SYN = 244795956,
  OPENCONFIGPACKETMATCHTYPESTCPFLAGS_TCP_FIN = 308430701,
  OPENCONFIGPACKETMATCHTYPESTCPFLAGS_TCP_URG = 496075790,
  OpenconfigPacketMatchTypesTCPFLAGS_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigPacketMatchTypesTCPFLAGS_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigPacketMatchTypesTCPFLAGS_IsValid(int value);
const OpenconfigPacketMatchTypesTCPFLAGS OpenconfigPacketMatchTypesTCPFLAGS_MIN = OPENCONFIGPACKETMATCHTYPESTCPFLAGS_UNSET;
const OpenconfigPacketMatchTypesTCPFLAGS OpenconfigPacketMatchTypesTCPFLAGS_MAX = OPENCONFIGPACKETMATCHTYPESTCPFLAGS_TCP_URG;
const int OpenconfigPacketMatchTypesTCPFLAGS_ARRAYSIZE = OpenconfigPacketMatchTypesTCPFLAGS_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigPacketMatchTypesTCPFLAGS_descriptor();
inline const ::std::string& OpenconfigPacketMatchTypesTCPFLAGS_Name(OpenconfigPacketMatchTypesTCPFLAGS value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigPacketMatchTypesTCPFLAGS_descriptor(), value);
}
inline bool OpenconfigPacketMatchTypesTCPFLAGS_Parse(
    const ::std::string& name, OpenconfigPacketMatchTypesTCPFLAGS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigPacketMatchTypesTCPFLAGS>(
    OpenconfigPacketMatchTypesTCPFLAGS_descriptor(), name, value);
}
enum OpenconfigPlatformLinecardComponentPowerType {
  OPENCONFIGPLATFORMLINECARDCOMPONENTPOWERTYPE_POWER_ENABLED = 0,
  OPENCONFIGPLATFORMLINECARDCOMPONENTPOWERTYPE_POWER_DISABLED = 2,
  OpenconfigPlatformLinecardComponentPowerType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigPlatformLinecardComponentPowerType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigPlatformLinecardComponentPowerType_IsValid(int value);
const OpenconfigPlatformLinecardComponentPowerType OpenconfigPlatformLinecardComponentPowerType_MIN = OPENCONFIGPLATFORMLINECARDCOMPONENTPOWERTYPE_POWER_ENABLED;
const OpenconfigPlatformLinecardComponentPowerType OpenconfigPlatformLinecardComponentPowerType_MAX = OPENCONFIGPLATFORMLINECARDCOMPONENTPOWERTYPE_POWER_DISABLED;
const int OpenconfigPlatformLinecardComponentPowerType_ARRAYSIZE = OpenconfigPlatformLinecardComponentPowerType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigPlatformLinecardComponentPowerType_descriptor();
inline const ::std::string& OpenconfigPlatformLinecardComponentPowerType_Name(OpenconfigPlatformLinecardComponentPowerType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigPlatformLinecardComponentPowerType_descriptor(), value);
}
inline bool OpenconfigPlatformLinecardComponentPowerType_Parse(
    const ::std::string& name, OpenconfigPlatformLinecardComponentPowerType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigPlatformLinecardComponentPowerType>(
    OpenconfigPlatformLinecardComponentPowerType_descriptor(), name, value);
}
enum OpenconfigPlatformTypesCOMPONENTOPERSTATUS {
  OPENCONFIGPLATFORMTYPESCOMPONENTOPERSTATUS_UNSET = 0,
  OPENCONFIGPLATFORMTYPESCOMPONENTOPERSTATUS_INACTIVE = 66232085,
  OPENCONFIGPLATFORMTYPESCOMPONENTOPERSTATUS_ACTIVE = 350531364,
  OPENCONFIGPLATFORMTYPESCOMPONENTOPERSTATUS_DISABLED = 449140422,
  OpenconfigPlatformTypesCOMPONENTOPERSTATUS_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigPlatformTypesCOMPONENTOPERSTATUS_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigPlatformTypesCOMPONENTOPERSTATUS_IsValid(int value);
const OpenconfigPlatformTypesCOMPONENTOPERSTATUS OpenconfigPlatformTypesCOMPONENTOPERSTATUS_MIN = OPENCONFIGPLATFORMTYPESCOMPONENTOPERSTATUS_UNSET;
const OpenconfigPlatformTypesCOMPONENTOPERSTATUS OpenconfigPlatformTypesCOMPONENTOPERSTATUS_MAX = OPENCONFIGPLATFORMTYPESCOMPONENTOPERSTATUS_DISABLED;
const int OpenconfigPlatformTypesCOMPONENTOPERSTATUS_ARRAYSIZE = OpenconfigPlatformTypesCOMPONENTOPERSTATUS_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigPlatformTypesCOMPONENTOPERSTATUS_descriptor();
inline const ::std::string& OpenconfigPlatformTypesCOMPONENTOPERSTATUS_Name(OpenconfigPlatformTypesCOMPONENTOPERSTATUS value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigPlatformTypesCOMPONENTOPERSTATUS_descriptor(), value);
}
inline bool OpenconfigPlatformTypesCOMPONENTOPERSTATUS_Parse(
    const ::std::string& name, OpenconfigPlatformTypesCOMPONENTOPERSTATUS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigPlatformTypesCOMPONENTOPERSTATUS>(
    OpenconfigPlatformTypesCOMPONENTOPERSTATUS_descriptor(), name, value);
}
enum OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT {
  OPENCONFIGPLATFORMTYPESOPENCONFIGHARDWARECOMPONENT_UNSET = 0,
  OPENCONFIGPLATFORMTYPESOPENCONFIGHARDWARECOMPONENT_OPTICAL_CHANNEL = 17598998,
  OPENCONFIGPLATFORMTYPESOPENCONFIGHARDWARECOMPONENT_FABRIC = 72327189,
  OPENCONFIGPLATFORMTYPESOPENCONFIGHARDWARECOMPONENT_POWER_SUPPLY = 156519681,
  OPENCONFIGPLATFORMTYPESOPENCONFIGHARDWARECOMPONENT_SENSOR = 163406904,
  OPENCONFIGPLATFORMTYPESOPENCONFIGHARDWARECOMPONENT_STORAGE = 169410761,
  OPENCONFIGPLATFORMTYPESOPENCONFIGHARDWARECOMPONENT_PORT = 208831331,
  OPENCONFIGPLATFORMTYPESOPENCONFIGHARDWARECOMPONENT_FAN = 248256101,
  OPENCONFIGPLATFORMTYPESOPENCONFIGHARDWARECOMPONENT_BACKPLANE = 267672527,
  OPENCONFIGPLATFORMTYPESOPENCONFIGHARDWARECOMPONENT_LINECARD = 290488750,
  OPENCONFIGPLATFORMTYPESOPENCONFIGHARDWARECOMPONENT_INTEGRATED_CIRCUIT = 344879553,
  OPENCONFIGPLATFORMTYPESOPENCONFIGHARDWARECOMPONENT_CHASSIS = 384589570,
  OPENCONFIGPLATFORMTYPESOPENCONFIGHARDWARECOMPONENT_CPU = 467229440,
  OPENCONFIGPLATFORMTYPESOPENCONFIGHARDWARECOMPONENT_TRANSCEIVER = 483792688,
  OPENCONFIGPLATFORMTYPESOPENCONFIGHARDWARECOMPONENT_FRU = 533475515,
  OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT_IsValid(int value);
const OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT_MIN = OPENCONFIGPLATFORMTYPESOPENCONFIGHARDWARECOMPONENT_UNSET;
const OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT_MAX = OPENCONFIGPLATFORMTYPESOPENCONFIGHARDWARECOMPONENT_FRU;
const int OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT_ARRAYSIZE = OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT_descriptor();
inline const ::std::string& OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT_Name(OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT_descriptor(), value);
}
inline bool OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT_Parse(
    const ::std::string& name, OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT>(
    OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT_descriptor(), name, value);
}
enum OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT {
  OPENCONFIGPLATFORMTYPESOPENCONFIGSOFTWARECOMPONENT_UNSET = 0,
  OPENCONFIGPLATFORMTYPESOPENCONFIGSOFTWARECOMPONENT_OPERATING_SYSTEM = 9246962,
  OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT_IsValid(int value);
const OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT_MIN = OPENCONFIGPLATFORMTYPESOPENCONFIGSOFTWARECOMPONENT_UNSET;
const OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT_MAX = OPENCONFIGPLATFORMTYPESOPENCONFIGSOFTWARECOMPONENT_OPERATING_SYSTEM;
const int OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT_ARRAYSIZE = OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT_descriptor();
inline const ::std::string& OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT_Name(OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT_descriptor(), value);
}
inline bool OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT_Parse(
    const ::std::string& name, OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT>(
    OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT_descriptor(), name, value);
}
enum OpenconfigProbesTestType {
  OPENCONFIGPROBESTESTTYPE_UNSET = 0,
  OPENCONFIGPROBESTESTTYPE_ICMP = 1,
  OPENCONFIGPROBESTESTTYPE_ICMP6 = 2,
  OPENCONFIGPROBESTESTTYPE_ICMP_TIMESTAMP = 3,
  OPENCONFIGPROBESTESTTYPE_ICMP6_TIMESTAMP = 4,
  OPENCONFIGPROBESTESTTYPE_TCP = 5,
  OPENCONFIGPROBESTESTTYPE_UDP = 6,
  OPENCONFIGPROBESTESTTYPE_UDP_TIMESTAMP = 7,
  OPENCONFIGPROBESTESTTYPE_HTTP_GET = 8,
  OPENCONFIGPROBESTESTTYPE_HTTP_GET_META = 9,
  OpenconfigProbesTestType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigProbesTestType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigProbesTestType_IsValid(int value);
const OpenconfigProbesTestType OpenconfigProbesTestType_MIN = OPENCONFIGPROBESTESTTYPE_UNSET;
const OpenconfigProbesTestType OpenconfigProbesTestType_MAX = OPENCONFIGPROBESTESTTYPE_HTTP_GET_META;
const int OpenconfigProbesTestType_ARRAYSIZE = OpenconfigProbesTestType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigProbesTestType_descriptor();
inline const ::std::string& OpenconfigProbesTestType_Name(OpenconfigProbesTestType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigProbesTestType_descriptor(), value);
}
inline bool OpenconfigProbesTestType_Parse(
    const ::std::string& name, OpenconfigProbesTestType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigProbesTestType>(
    OpenconfigProbesTestType_descriptor(), name, value);
}
enum OpenconfigQosQueueBehavior {
  OPENCONFIGQOSQUEUEBEHAVIOR_UNSET = 0,
  OPENCONFIGQOSQUEUEBEHAVIOR_SHAPE = 1,
  OPENCONFIGQOSQUEUEBEHAVIOR_POLICE = 2,
  OpenconfigQosQueueBehavior_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigQosQueueBehavior_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigQosQueueBehavior_IsValid(int value);
const OpenconfigQosQueueBehavior OpenconfigQosQueueBehavior_MIN = OPENCONFIGQOSQUEUEBEHAVIOR_UNSET;
const OpenconfigQosQueueBehavior OpenconfigQosQueueBehavior_MAX = OPENCONFIGQOSQUEUEBEHAVIOR_POLICE;
const int OpenconfigQosQueueBehavior_ARRAYSIZE = OpenconfigQosQueueBehavior_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigQosQueueBehavior_descriptor();
inline const ::std::string& OpenconfigQosQueueBehavior_Name(OpenconfigQosQueueBehavior value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigQosQueueBehavior_descriptor(), value);
}
inline bool OpenconfigQosQueueBehavior_Parse(
    const ::std::string& name, OpenconfigQosQueueBehavior* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigQosQueueBehavior>(
    OpenconfigQosQueueBehavior_descriptor(), name, value);
}
enum OpenconfigQosTypesQOSQUEUETYPE {
  OPENCONFIGQOSTYPESQOSQUEUETYPE_UNSET = 0,
  OPENCONFIGQOSTYPESQOSQUEUETYPE_DROP_TAIL = 104689505,
  OPENCONFIGQOSTYPESQOSQUEUETYPE_WRED = 127358059,
  OPENCONFIGQOSTYPESQOSQUEUETYPE_RED = 362397024,
  OpenconfigQosTypesQOSQUEUETYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigQosTypesQOSQUEUETYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigQosTypesQOSQUEUETYPE_IsValid(int value);
const OpenconfigQosTypesQOSQUEUETYPE OpenconfigQosTypesQOSQUEUETYPE_MIN = OPENCONFIGQOSTYPESQOSQUEUETYPE_UNSET;
const OpenconfigQosTypesQOSQUEUETYPE OpenconfigQosTypesQOSQUEUETYPE_MAX = OPENCONFIGQOSTYPESQOSQUEUETYPE_RED;
const int OpenconfigQosTypesQOSQUEUETYPE_ARRAYSIZE = OpenconfigQosTypesQOSQUEUETYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigQosTypesQOSQUEUETYPE_descriptor();
inline const ::std::string& OpenconfigQosTypesQOSQUEUETYPE_Name(OpenconfigQosTypesQOSQUEUETYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigQosTypesQOSQUEUETYPE_descriptor(), value);
}
inline bool OpenconfigQosTypesQOSQUEUETYPE_Parse(
    const ::std::string& name, OpenconfigQosTypesQOSQUEUETYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigQosTypesQOSQUEUETYPE>(
    OpenconfigQosTypesQOSQUEUETYPE_descriptor(), name, value);
}
enum OpenconfigQosTypesQOSSCHEDULERTYPE {
  OPENCONFIGQOSTYPESQOSSCHEDULERTYPE_UNSET = 0,
  OPENCONFIGQOSTYPESQOSSCHEDULERTYPE_ONE_RATE_TWO_COLOR = 322565447,
  OPENCONFIGQOSTYPESQOSSCHEDULERTYPE_TWO_RATE_THREE_COLOR = 428754559,
  OpenconfigQosTypesQOSSCHEDULERTYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigQosTypesQOSSCHEDULERTYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigQosTypesQOSSCHEDULERTYPE_IsValid(int value);
const OpenconfigQosTypesQOSSCHEDULERTYPE OpenconfigQosTypesQOSSCHEDULERTYPE_MIN = OPENCONFIGQOSTYPESQOSSCHEDULERTYPE_UNSET;
const OpenconfigQosTypesQOSSCHEDULERTYPE OpenconfigQosTypesQOSSCHEDULERTYPE_MAX = OPENCONFIGQOSTYPESQOSSCHEDULERTYPE_TWO_RATE_THREE_COLOR;
const int OpenconfigQosTypesQOSSCHEDULERTYPE_ARRAYSIZE = OpenconfigQosTypesQOSSCHEDULERTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigQosTypesQOSSCHEDULERTYPE_descriptor();
inline const ::std::string& OpenconfigQosTypesQOSSCHEDULERTYPE_Name(OpenconfigQosTypesQOSSCHEDULERTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigQosTypesQOSSCHEDULERTYPE_descriptor(), value);
}
inline bool OpenconfigQosTypesQOSSCHEDULERTYPE_Parse(
    const ::std::string& name, OpenconfigQosTypesQOSSCHEDULERTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigQosTypesQOSSCHEDULERTYPE>(
    OpenconfigQosTypesQOSSCHEDULERTYPE_descriptor(), name, value);
}
enum OpenconfigSpanningTreeStpGuardType {
  OPENCONFIGSPANNINGTREESTPGUARDTYPE_UNSET = 0,
  OPENCONFIGSPANNINGTREESTPGUARDTYPE_ROOT = 1,
  OPENCONFIGSPANNINGTREESTPGUARDTYPE_LOOP = 2,
  OPENCONFIGSPANNINGTREESTPGUARDTYPE_NONE = 3,
  OpenconfigSpanningTreeStpGuardType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigSpanningTreeStpGuardType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigSpanningTreeStpGuardType_IsValid(int value);
const OpenconfigSpanningTreeStpGuardType OpenconfigSpanningTreeStpGuardType_MIN = OPENCONFIGSPANNINGTREESTPGUARDTYPE_UNSET;
const OpenconfigSpanningTreeStpGuardType OpenconfigSpanningTreeStpGuardType_MAX = OPENCONFIGSPANNINGTREESTPGUARDTYPE_NONE;
const int OpenconfigSpanningTreeStpGuardType_ARRAYSIZE = OpenconfigSpanningTreeStpGuardType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigSpanningTreeStpGuardType_descriptor();
inline const ::std::string& OpenconfigSpanningTreeStpGuardType_Name(OpenconfigSpanningTreeStpGuardType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigSpanningTreeStpGuardType_descriptor(), value);
}
inline bool OpenconfigSpanningTreeStpGuardType_Parse(
    const ::std::string& name, OpenconfigSpanningTreeStpGuardType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigSpanningTreeStpGuardType>(
    OpenconfigSpanningTreeStpGuardType_descriptor(), name, value);
}
enum OpenconfigSpanningTreeStpLinkType {
  OPENCONFIGSPANNINGTREESTPLINKTYPE_UNSET = 0,
  OPENCONFIGSPANNINGTREESTPLINKTYPE_P2P = 1,
  OPENCONFIGSPANNINGTREESTPLINKTYPE_SHARED = 2,
  OpenconfigSpanningTreeStpLinkType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigSpanningTreeStpLinkType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigSpanningTreeStpLinkType_IsValid(int value);
const OpenconfigSpanningTreeStpLinkType OpenconfigSpanningTreeStpLinkType_MIN = OPENCONFIGSPANNINGTREESTPLINKTYPE_UNSET;
const OpenconfigSpanningTreeStpLinkType OpenconfigSpanningTreeStpLinkType_MAX = OPENCONFIGSPANNINGTREESTPLINKTYPE_SHARED;
const int OpenconfigSpanningTreeStpLinkType_ARRAYSIZE = OpenconfigSpanningTreeStpLinkType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigSpanningTreeStpLinkType_descriptor();
inline const ::std::string& OpenconfigSpanningTreeStpLinkType_Name(OpenconfigSpanningTreeStpLinkType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigSpanningTreeStpLinkType_descriptor(), value);
}
inline bool OpenconfigSpanningTreeStpLinkType_Parse(
    const ::std::string& name, OpenconfigSpanningTreeStpLinkType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigSpanningTreeStpLinkType>(
    OpenconfigSpanningTreeStpLinkType_descriptor(), name, value);
}
enum OpenconfigSpanningTreeTypesSTPEDGEPORT {
  OPENCONFIGSPANNINGTREETYPESSTPEDGEPORT_UNSET = 0,
  OPENCONFIGSPANNINGTREETYPESSTPEDGEPORT_EDGE_ENABLE = 263445833,
  OPENCONFIGSPANNINGTREETYPESSTPEDGEPORT_EDGE_AUTO = 416354649,
  OPENCONFIGSPANNINGTREETYPESSTPEDGEPORT_EDGE_DISABLE = 454202920,
  OpenconfigSpanningTreeTypesSTPEDGEPORT_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigSpanningTreeTypesSTPEDGEPORT_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigSpanningTreeTypesSTPEDGEPORT_IsValid(int value);
const OpenconfigSpanningTreeTypesSTPEDGEPORT OpenconfigSpanningTreeTypesSTPEDGEPORT_MIN = OPENCONFIGSPANNINGTREETYPESSTPEDGEPORT_UNSET;
const OpenconfigSpanningTreeTypesSTPEDGEPORT OpenconfigSpanningTreeTypesSTPEDGEPORT_MAX = OPENCONFIGSPANNINGTREETYPESSTPEDGEPORT_EDGE_DISABLE;
const int OpenconfigSpanningTreeTypesSTPEDGEPORT_ARRAYSIZE = OpenconfigSpanningTreeTypesSTPEDGEPORT_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigSpanningTreeTypesSTPEDGEPORT_descriptor();
inline const ::std::string& OpenconfigSpanningTreeTypesSTPEDGEPORT_Name(OpenconfigSpanningTreeTypesSTPEDGEPORT value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigSpanningTreeTypesSTPEDGEPORT_descriptor(), value);
}
inline bool OpenconfigSpanningTreeTypesSTPEDGEPORT_Parse(
    const ::std::string& name, OpenconfigSpanningTreeTypesSTPEDGEPORT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigSpanningTreeTypesSTPEDGEPORT>(
    OpenconfigSpanningTreeTypesSTPEDGEPORT_descriptor(), name, value);
}
enum OpenconfigSpanningTreeTypesSTPPORTROLE {
  OPENCONFIGSPANNINGTREETYPESSTPPORTROLE_UNSET = 0,
  OPENCONFIGSPANNINGTREETYPESSTPPORTROLE_DESIGNATED = 63773171,
  OPENCONFIGSPANNINGTREETYPESSTPPORTROLE_ROOT = 196719225,
  OPENCONFIGSPANNINGTREETYPESSTPPORTROLE_BACKUP = 241319231,
  OPENCONFIGSPANNINGTREETYPESSTPPORTROLE_ALTERNATE = 519797233,
  OpenconfigSpanningTreeTypesSTPPORTROLE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigSpanningTreeTypesSTPPORTROLE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigSpanningTreeTypesSTPPORTROLE_IsValid(int value);
const OpenconfigSpanningTreeTypesSTPPORTROLE OpenconfigSpanningTreeTypesSTPPORTROLE_MIN = OPENCONFIGSPANNINGTREETYPESSTPPORTROLE_UNSET;
const OpenconfigSpanningTreeTypesSTPPORTROLE OpenconfigSpanningTreeTypesSTPPORTROLE_MAX = OPENCONFIGSPANNINGTREETYPESSTPPORTROLE_ALTERNATE;
const int OpenconfigSpanningTreeTypesSTPPORTROLE_ARRAYSIZE = OpenconfigSpanningTreeTypesSTPPORTROLE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigSpanningTreeTypesSTPPORTROLE_descriptor();
inline const ::std::string& OpenconfigSpanningTreeTypesSTPPORTROLE_Name(OpenconfigSpanningTreeTypesSTPPORTROLE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigSpanningTreeTypesSTPPORTROLE_descriptor(), value);
}
inline bool OpenconfigSpanningTreeTypesSTPPORTROLE_Parse(
    const ::std::string& name, OpenconfigSpanningTreeTypesSTPPORTROLE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigSpanningTreeTypesSTPPORTROLE>(
    OpenconfigSpanningTreeTypesSTPPORTROLE_descriptor(), name, value);
}
enum OpenconfigSpanningTreeTypesSTPPORTSTATE {
  OPENCONFIGSPANNINGTREETYPESSTPPORTSTATE_UNSET = 0,
  OPENCONFIGSPANNINGTREETYPESSTPPORTSTATE_LISTENING = 74634915,
  OPENCONFIGSPANNINGTREETYPESSTPPORTSTATE_DISABLED = 122461572,
  OPENCONFIGSPANNINGTREETYPESSTPPORTSTATE_LEARNING = 339423026,
  OPENCONFIGSPANNINGTREETYPESSTPPORTSTATE_FORWARDING = 420964493,
  OPENCONFIGSPANNINGTREETYPESSTPPORTSTATE_BLOCKING = 443083057,
  OpenconfigSpanningTreeTypesSTPPORTSTATE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigSpanningTreeTypesSTPPORTSTATE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigSpanningTreeTypesSTPPORTSTATE_IsValid(int value);
const OpenconfigSpanningTreeTypesSTPPORTSTATE OpenconfigSpanningTreeTypesSTPPORTSTATE_MIN = OPENCONFIGSPANNINGTREETYPESSTPPORTSTATE_UNSET;
const OpenconfigSpanningTreeTypesSTPPORTSTATE OpenconfigSpanningTreeTypesSTPPORTSTATE_MAX = OPENCONFIGSPANNINGTREETYPESSTPPORTSTATE_BLOCKING;
const int OpenconfigSpanningTreeTypesSTPPORTSTATE_ARRAYSIZE = OpenconfigSpanningTreeTypesSTPPORTSTATE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigSpanningTreeTypesSTPPORTSTATE_descriptor();
inline const ::std::string& OpenconfigSpanningTreeTypesSTPPORTSTATE_Name(OpenconfigSpanningTreeTypesSTPPORTSTATE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigSpanningTreeTypesSTPPORTSTATE_descriptor(), value);
}
inline bool OpenconfigSpanningTreeTypesSTPPORTSTATE_Parse(
    const ::std::string& name, OpenconfigSpanningTreeTypesSTPPORTSTATE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigSpanningTreeTypesSTPPORTSTATE>(
    OpenconfigSpanningTreeTypesSTPPORTSTATE_descriptor(), name, value);
}
enum OpenconfigSpanningTreeTypesSTPPROTOCOL {
  OPENCONFIGSPANNINGTREETYPESSTPPROTOCOL_UNSET = 0,
  OPENCONFIGSPANNINGTREETYPESSTPPROTOCOL_MSTP = 10309415,
  OPENCONFIGSPANNINGTREETYPESSTPPROTOCOL_RSTP = 363977194,
  OPENCONFIGSPANNINGTREETYPESSTPPROTOCOL_RAPID_PVST = 473891845,
  OpenconfigSpanningTreeTypesSTPPROTOCOL_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigSpanningTreeTypesSTPPROTOCOL_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigSpanningTreeTypesSTPPROTOCOL_IsValid(int value);
const OpenconfigSpanningTreeTypesSTPPROTOCOL OpenconfigSpanningTreeTypesSTPPROTOCOL_MIN = OPENCONFIGSPANNINGTREETYPESSTPPROTOCOL_UNSET;
const OpenconfigSpanningTreeTypesSTPPROTOCOL OpenconfigSpanningTreeTypesSTPPROTOCOL_MAX = OPENCONFIGSPANNINGTREETYPESSTPPROTOCOL_RAPID_PVST;
const int OpenconfigSpanningTreeTypesSTPPROTOCOL_ARRAYSIZE = OpenconfigSpanningTreeTypesSTPPROTOCOL_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigSpanningTreeTypesSTPPROTOCOL_descriptor();
inline const ::std::string& OpenconfigSpanningTreeTypesSTPPROTOCOL_Name(OpenconfigSpanningTreeTypesSTPPROTOCOL value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigSpanningTreeTypesSTPPROTOCOL_descriptor(), value);
}
inline bool OpenconfigSpanningTreeTypesSTPPROTOCOL_Parse(
    const ::std::string& name, OpenconfigSpanningTreeTypesSTPPROTOCOL* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigSpanningTreeTypesSTPPROTOCOL>(
    OpenconfigSpanningTreeTypesSTPPROTOCOL_descriptor(), name, value);
}
enum OpenconfigSystemLoggingSYSLOGFACILITY {
  OPENCONFIGSYSTEMLOGGINGSYSLOGFACILITY_UNSET = 0,
  OPENCONFIGSYSTEMLOGGINGSYSLOGFACILITY_AUTHPRIV = 1992095,
  OPENCONFIGSYSTEMLOGGINGSYSLOGFACILITY_MAIL = 110300463,
  OPENCONFIGSYSTEMLOGGINGSYSLOGFACILITY_LOCAL5 = 196925136,
  OPENCONFIGSYSTEMLOGGINGSYSLOGFACILITY_LOCAL4 = 196925137,
  OPENCONFIGSYSTEMLOGGINGSYSLOGFACILITY_LOCAL7 = 196925138,
  OPENCONFIGSYSTEMLOGGINGSYSLOGFACILITY_LOCAL6 = 196925139,
  OPENCONFIGSYSTEMLOGGINGSYSLOGFACILITY_LOCAL1 = 196925140,
  OPENCONFIGSYSTEMLOGGINGSYSLOGFACILITY_LOCAL0 = 196925141,
  OPENCONFIGSYSTEMLOGGINGSYSLOGFACILITY_LOCAL3 = 196925142,
  OPENCONFIGSYSTEMLOGGINGSYSLOGFACILITY_LOCAL2 = 196925143,
  OPENCONFIGSYSTEMLOGGINGSYSLOGFACILITY_ALL = 252252703,
  OPENCONFIGSYSTEMLOGGINGSYSLOGFACILITY_CONSOLE = 336452861,
  OPENCONFIGSYSTEMLOGGINGSYSLOGFACILITY_NTP = 350428412,
  OPENCONFIGSYSTEMLOGGINGSYSLOGFACILITY_KERNEL = 398004525,
  OPENCONFIGSYSTEMLOGGINGSYSLOGFACILITY_AUDIT = 477963459,
  OPENCONFIGSYSTEMLOGGINGSYSLOGFACILITY_AUTH = 478239772,
  OPENCONFIGSYSTEMLOGGINGSYSLOGFACILITY_SYSTEM_DAEMON = 499486404,
  OPENCONFIGSYSTEMLOGGINGSYSLOGFACILITY_SYSLOG = 508909033,
  OPENCONFIGSYSTEMLOGGINGSYSLOGFACILITY_USER = 523894347,
  OpenconfigSystemLoggingSYSLOGFACILITY_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigSystemLoggingSYSLOGFACILITY_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigSystemLoggingSYSLOGFACILITY_IsValid(int value);
const OpenconfigSystemLoggingSYSLOGFACILITY OpenconfigSystemLoggingSYSLOGFACILITY_MIN = OPENCONFIGSYSTEMLOGGINGSYSLOGFACILITY_UNSET;
const OpenconfigSystemLoggingSYSLOGFACILITY OpenconfigSystemLoggingSYSLOGFACILITY_MAX = OPENCONFIGSYSTEMLOGGINGSYSLOGFACILITY_USER;
const int OpenconfigSystemLoggingSYSLOGFACILITY_ARRAYSIZE = OpenconfigSystemLoggingSYSLOGFACILITY_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigSystemLoggingSYSLOGFACILITY_descriptor();
inline const ::std::string& OpenconfigSystemLoggingSYSLOGFACILITY_Name(OpenconfigSystemLoggingSYSLOGFACILITY value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigSystemLoggingSYSLOGFACILITY_descriptor(), value);
}
inline bool OpenconfigSystemLoggingSYSLOGFACILITY_Parse(
    const ::std::string& name, OpenconfigSystemLoggingSYSLOGFACILITY* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigSystemLoggingSYSLOGFACILITY>(
    OpenconfigSystemLoggingSYSLOGFACILITY_descriptor(), name, value);
}
enum OpenconfigSystemLoggingSyslogSeverity {
  OPENCONFIGSYSTEMLOGGINGSYSLOGSEVERITY_UNSET = 0,
  OPENCONFIGSYSTEMLOGGINGSYSLOGSEVERITY_EMERGENCY = 1,
  OPENCONFIGSYSTEMLOGGINGSYSLOGSEVERITY_ALERT = 2,
  OPENCONFIGSYSTEMLOGGINGSYSLOGSEVERITY_CRITICAL = 3,
  OPENCONFIGSYSTEMLOGGINGSYSLOGSEVERITY_ERROR = 4,
  OPENCONFIGSYSTEMLOGGINGSYSLOGSEVERITY_WARNING = 5,
  OPENCONFIGSYSTEMLOGGINGSYSLOGSEVERITY_NOTICE = 6,
  OPENCONFIGSYSTEMLOGGINGSYSLOGSEVERITY_INFORMATIONAL = 7,
  OPENCONFIGSYSTEMLOGGINGSYSLOGSEVERITY_DEBUG = 8,
  OpenconfigSystemLoggingSyslogSeverity_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigSystemLoggingSyslogSeverity_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigSystemLoggingSyslogSeverity_IsValid(int value);
const OpenconfigSystemLoggingSyslogSeverity OpenconfigSystemLoggingSyslogSeverity_MIN = OPENCONFIGSYSTEMLOGGINGSYSLOGSEVERITY_UNSET;
const OpenconfigSystemLoggingSyslogSeverity OpenconfigSystemLoggingSyslogSeverity_MAX = OPENCONFIGSYSTEMLOGGINGSYSLOGSEVERITY_DEBUG;
const int OpenconfigSystemLoggingSyslogSeverity_ARRAYSIZE = OpenconfigSystemLoggingSyslogSeverity_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigSystemLoggingSyslogSeverity_descriptor();
inline const ::std::string& OpenconfigSystemLoggingSyslogSeverity_Name(OpenconfigSystemLoggingSyslogSeverity value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigSystemLoggingSyslogSeverity_descriptor(), value);
}
inline bool OpenconfigSystemLoggingSyslogSeverity_Parse(
    const ::std::string& name, OpenconfigSystemLoggingSyslogSeverity* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigSystemLoggingSyslogSeverity>(
    OpenconfigSystemLoggingSyslogSeverity_descriptor(), name, value);
}
enum OpenconfigSystemNTPAUTHTYPE {
  OPENCONFIGSYSTEMNTPAUTHTYPE_UNSET = 0,
  OPENCONFIGSYSTEMNTPAUTHTYPE_NTP_AUTH_MD5 = 142463499,
  OpenconfigSystemNTPAUTHTYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigSystemNTPAUTHTYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigSystemNTPAUTHTYPE_IsValid(int value);
const OpenconfigSystemNTPAUTHTYPE OpenconfigSystemNTPAUTHTYPE_MIN = OPENCONFIGSYSTEMNTPAUTHTYPE_UNSET;
const OpenconfigSystemNTPAUTHTYPE OpenconfigSystemNTPAUTHTYPE_MAX = OPENCONFIGSYSTEMNTPAUTHTYPE_NTP_AUTH_MD5;
const int OpenconfigSystemNTPAUTHTYPE_ARRAYSIZE = OpenconfigSystemNTPAUTHTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigSystemNTPAUTHTYPE_descriptor();
inline const ::std::string& OpenconfigSystemNTPAUTHTYPE_Name(OpenconfigSystemNTPAUTHTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigSystemNTPAUTHTYPE_descriptor(), value);
}
inline bool OpenconfigSystemNTPAUTHTYPE_Parse(
    const ::std::string& name, OpenconfigSystemNTPAUTHTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigSystemNTPAUTHTYPE>(
    OpenconfigSystemNTPAUTHTYPE_descriptor(), name, value);
}
enum OpenconfigTelemetryTypesDATAENCODINGMETHOD {
  OPENCONFIGTELEMETRYTYPESDATAENCODINGMETHOD_UNSET = 0,
  OPENCONFIGTELEMETRYTYPESDATAENCODINGMETHOD_ENC_XML = 204407329,
  OPENCONFIGTELEMETRYTYPESDATAENCODINGMETHOD_ENC_PROTO3 = 215360919,
  OPENCONFIGTELEMETRYTYPESDATAENCODINGMETHOD_ENC_JSON_IETF = 437483571,
  OpenconfigTelemetryTypesDATAENCODINGMETHOD_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigTelemetryTypesDATAENCODINGMETHOD_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigTelemetryTypesDATAENCODINGMETHOD_IsValid(int value);
const OpenconfigTelemetryTypesDATAENCODINGMETHOD OpenconfigTelemetryTypesDATAENCODINGMETHOD_MIN = OPENCONFIGTELEMETRYTYPESDATAENCODINGMETHOD_UNSET;
const OpenconfigTelemetryTypesDATAENCODINGMETHOD OpenconfigTelemetryTypesDATAENCODINGMETHOD_MAX = OPENCONFIGTELEMETRYTYPESDATAENCODINGMETHOD_ENC_JSON_IETF;
const int OpenconfigTelemetryTypesDATAENCODINGMETHOD_ARRAYSIZE = OpenconfigTelemetryTypesDATAENCODINGMETHOD_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigTelemetryTypesDATAENCODINGMETHOD_descriptor();
inline const ::std::string& OpenconfigTelemetryTypesDATAENCODINGMETHOD_Name(OpenconfigTelemetryTypesDATAENCODINGMETHOD value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigTelemetryTypesDATAENCODINGMETHOD_descriptor(), value);
}
inline bool OpenconfigTelemetryTypesDATAENCODINGMETHOD_Parse(
    const ::std::string& name, OpenconfigTelemetryTypesDATAENCODINGMETHOD* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigTelemetryTypesDATAENCODINGMETHOD>(
    OpenconfigTelemetryTypesDATAENCODINGMETHOD_descriptor(), name, value);
}
enum OpenconfigTelemetryTypesSTREAMPROTOCOL {
  OPENCONFIGTELEMETRYTYPESSTREAMPROTOCOL_UNSET = 0,
  OPENCONFIGTELEMETRYTYPESSTREAMPROTOCOL_STREAM_WEBSOCKET_RPC = 30081208,
  OPENCONFIGTELEMETRYTYPESSTREAMPROTOCOL_STREAM_SSH = 351617103,
  OPENCONFIGTELEMETRYTYPESSTREAMPROTOCOL_STREAM_JSON_RPC = 398987529,
  OPENCONFIGTELEMETRYTYPESSTREAMPROTOCOL_STREAM_THRIFT_RPC = 412665066,
  OPENCONFIGTELEMETRYTYPESSTREAMPROTOCOL_STREAM_GRPC = 494836683,
  OpenconfigTelemetryTypesSTREAMPROTOCOL_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigTelemetryTypesSTREAMPROTOCOL_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigTelemetryTypesSTREAMPROTOCOL_IsValid(int value);
const OpenconfigTelemetryTypesSTREAMPROTOCOL OpenconfigTelemetryTypesSTREAMPROTOCOL_MIN = OPENCONFIGTELEMETRYTYPESSTREAMPROTOCOL_UNSET;
const OpenconfigTelemetryTypesSTREAMPROTOCOL OpenconfigTelemetryTypesSTREAMPROTOCOL_MAX = OPENCONFIGTELEMETRYTYPESSTREAMPROTOCOL_STREAM_GRPC;
const int OpenconfigTelemetryTypesSTREAMPROTOCOL_ARRAYSIZE = OpenconfigTelemetryTypesSTREAMPROTOCOL_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigTelemetryTypesSTREAMPROTOCOL_descriptor();
inline const ::std::string& OpenconfigTelemetryTypesSTREAMPROTOCOL_Name(OpenconfigTelemetryTypesSTREAMPROTOCOL value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigTelemetryTypesSTREAMPROTOCOL_descriptor(), value);
}
inline bool OpenconfigTelemetryTypesSTREAMPROTOCOL_Parse(
    const ::std::string& name, OpenconfigTelemetryTypesSTREAMPROTOCOL* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigTelemetryTypesSTREAMPROTOCOL>(
    OpenconfigTelemetryTypesSTREAMPROTOCOL_descriptor(), name, value);
}
enum OpenconfigTerminalDeviceAdminStateType {
  OPENCONFIGTERMINALDEVICEADMINSTATETYPE_UNSET = 0,
  OPENCONFIGTERMINALDEVICEADMINSTATETYPE_ENABLED = 1,
  OPENCONFIGTERMINALDEVICEADMINSTATETYPE_DISABLED = 2,
  OPENCONFIGTERMINALDEVICEADMINSTATETYPE_MAINT = 3,
  OpenconfigTerminalDeviceAdminStateType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigTerminalDeviceAdminStateType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigTerminalDeviceAdminStateType_IsValid(int value);
const OpenconfigTerminalDeviceAdminStateType OpenconfigTerminalDeviceAdminStateType_MIN = OPENCONFIGTERMINALDEVICEADMINSTATETYPE_UNSET;
const OpenconfigTerminalDeviceAdminStateType OpenconfigTerminalDeviceAdminStateType_MAX = OPENCONFIGTERMINALDEVICEADMINSTATETYPE_MAINT;
const int OpenconfigTerminalDeviceAdminStateType_ARRAYSIZE = OpenconfigTerminalDeviceAdminStateType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigTerminalDeviceAdminStateType_descriptor();
inline const ::std::string& OpenconfigTerminalDeviceAdminStateType_Name(OpenconfigTerminalDeviceAdminStateType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigTerminalDeviceAdminStateType_descriptor(), value);
}
inline bool OpenconfigTerminalDeviceAdminStateType_Parse(
    const ::std::string& name, OpenconfigTerminalDeviceAdminStateType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigTerminalDeviceAdminStateType>(
    OpenconfigTerminalDeviceAdminStateType_descriptor(), name, value);
}
enum OpenconfigTerminalDeviceLoopbackModeType {
  OPENCONFIGTERMINALDEVICELOOPBACKMODETYPE_NONE = 0,
  OPENCONFIGTERMINALDEVICELOOPBACKMODETYPE_FACILITY = 2,
  OPENCONFIGTERMINALDEVICELOOPBACKMODETYPE_TERMINAL = 3,
  OpenconfigTerminalDeviceLoopbackModeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigTerminalDeviceLoopbackModeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigTerminalDeviceLoopbackModeType_IsValid(int value);
const OpenconfigTerminalDeviceLoopbackModeType OpenconfigTerminalDeviceLoopbackModeType_MIN = OPENCONFIGTERMINALDEVICELOOPBACKMODETYPE_NONE;
const OpenconfigTerminalDeviceLoopbackModeType OpenconfigTerminalDeviceLoopbackModeType_MAX = OPENCONFIGTERMINALDEVICELOOPBACKMODETYPE_TERMINAL;
const int OpenconfigTerminalDeviceLoopbackModeType_ARRAYSIZE = OpenconfigTerminalDeviceLoopbackModeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigTerminalDeviceLoopbackModeType_descriptor();
inline const ::std::string& OpenconfigTerminalDeviceLoopbackModeType_Name(OpenconfigTerminalDeviceLoopbackModeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigTerminalDeviceLoopbackModeType_descriptor(), value);
}
inline bool OpenconfigTerminalDeviceLoopbackModeType_Parse(
    const ::std::string& name, OpenconfigTerminalDeviceLoopbackModeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigTerminalDeviceLoopbackModeType>(
    OpenconfigTerminalDeviceLoopbackModeType_descriptor(), name, value);
}
enum OpenconfigTransportLineCommonAdminStateType {
  OPENCONFIGTRANSPORTLINECOMMONADMINSTATETYPE_UNSET = 0,
  OPENCONFIGTRANSPORTLINECOMMONADMINSTATETYPE_ENABLED = 1,
  OPENCONFIGTRANSPORTLINECOMMONADMINSTATETYPE_DISABLED = 2,
  OPENCONFIGTRANSPORTLINECOMMONADMINSTATETYPE_MAINT = 3,
  OpenconfigTransportLineCommonAdminStateType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigTransportLineCommonAdminStateType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigTransportLineCommonAdminStateType_IsValid(int value);
const OpenconfigTransportLineCommonAdminStateType OpenconfigTransportLineCommonAdminStateType_MIN = OPENCONFIGTRANSPORTLINECOMMONADMINSTATETYPE_UNSET;
const OpenconfigTransportLineCommonAdminStateType OpenconfigTransportLineCommonAdminStateType_MAX = OPENCONFIGTRANSPORTLINECOMMONADMINSTATETYPE_MAINT;
const int OpenconfigTransportLineCommonAdminStateType_ARRAYSIZE = OpenconfigTransportLineCommonAdminStateType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigTransportLineCommonAdminStateType_descriptor();
inline const ::std::string& OpenconfigTransportLineCommonAdminStateType_Name(OpenconfigTransportLineCommonAdminStateType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigTransportLineCommonAdminStateType_descriptor(), value);
}
inline bool OpenconfigTransportLineCommonAdminStateType_Parse(
    const ::std::string& name, OpenconfigTransportLineCommonAdminStateType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigTransportLineCommonAdminStateType>(
    OpenconfigTransportLineCommonAdminStateType_descriptor(), name, value);
}
enum OpenconfigTransportLineCommonOPTICALLINEPORTTYPE {
  OPENCONFIGTRANSPORTLINECOMMONOPTICALLINEPORTTYPE_UNSET = 0,
  OPENCONFIGTRANSPORTLINECOMMONOPTICALLINEPORTTYPE_ADD = 62142554,
  OPENCONFIGTRANSPORTLINECOMMONOPTICALLINEPORTTYPE_DROP = 107734774,
  OPENCONFIGTRANSPORTLINECOMMONOPTICALLINEPORTTYPE_INGRESS = 112508882,
  OPENCONFIGTRANSPORTLINECOMMONOPTICALLINEPORTTYPE_EGRESS = 309493124,
  OPENCONFIGTRANSPORTLINECOMMONOPTICALLINEPORTTYPE_MONITOR = 510510041,
  OpenconfigTransportLineCommonOPTICALLINEPORTTYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigTransportLineCommonOPTICALLINEPORTTYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigTransportLineCommonOPTICALLINEPORTTYPE_IsValid(int value);
const OpenconfigTransportLineCommonOPTICALLINEPORTTYPE OpenconfigTransportLineCommonOPTICALLINEPORTTYPE_MIN = OPENCONFIGTRANSPORTLINECOMMONOPTICALLINEPORTTYPE_UNSET;
const OpenconfigTransportLineCommonOPTICALLINEPORTTYPE OpenconfigTransportLineCommonOPTICALLINEPORTTYPE_MAX = OPENCONFIGTRANSPORTLINECOMMONOPTICALLINEPORTTYPE_MONITOR;
const int OpenconfigTransportLineCommonOPTICALLINEPORTTYPE_ARRAYSIZE = OpenconfigTransportLineCommonOPTICALLINEPORTTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigTransportLineCommonOPTICALLINEPORTTYPE_descriptor();
inline const ::std::string& OpenconfigTransportLineCommonOPTICALLINEPORTTYPE_Name(OpenconfigTransportLineCommonOPTICALLINEPORTTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigTransportLineCommonOPTICALLINEPORTTYPE_descriptor(), value);
}
inline bool OpenconfigTransportLineCommonOPTICALLINEPORTTYPE_Parse(
    const ::std::string& name, OpenconfigTransportLineCommonOPTICALLINEPORTTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigTransportLineCommonOPTICALLINEPORTTYPE>(
    OpenconfigTransportLineCommonOPTICALLINEPORTTYPE_descriptor(), name, value);
}
enum OpenconfigTransportLineProtectionAPSPATHS {
  OPENCONFIGTRANSPORTLINEPROTECTIONAPSPATHS_UNSET = 0,
  OPENCONFIGTRANSPORTLINEPROTECTIONAPSPATHS_PRIMARY = 87909830,
  OPENCONFIGTRANSPORTLINEPROTECTIONAPSPATHS_SECONDARY = 289818058,
  OpenconfigTransportLineProtectionAPSPATHS_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigTransportLineProtectionAPSPATHS_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigTransportLineProtectionAPSPATHS_IsValid(int value);
const OpenconfigTransportLineProtectionAPSPATHS OpenconfigTransportLineProtectionAPSPATHS_MIN = OPENCONFIGTRANSPORTLINEPROTECTIONAPSPATHS_UNSET;
const OpenconfigTransportLineProtectionAPSPATHS OpenconfigTransportLineProtectionAPSPATHS_MAX = OPENCONFIGTRANSPORTLINEPROTECTIONAPSPATHS_SECONDARY;
const int OpenconfigTransportLineProtectionAPSPATHS_ARRAYSIZE = OpenconfigTransportLineProtectionAPSPATHS_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigTransportLineProtectionAPSPATHS_descriptor();
inline const ::std::string& OpenconfigTransportLineProtectionAPSPATHS_Name(OpenconfigTransportLineProtectionAPSPATHS value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigTransportLineProtectionAPSPATHS_descriptor(), value);
}
inline bool OpenconfigTransportLineProtectionAPSPATHS_Parse(
    const ::std::string& name, OpenconfigTransportLineProtectionAPSPATHS* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigTransportLineProtectionAPSPATHS>(
    OpenconfigTransportLineProtectionAPSPATHS_descriptor(), name, value);
}
enum OpenconfigTransportTypesETHERNETPMDTYPE {
  OPENCONFIGTRANSPORTTYPESETHERNETPMDTYPE_UNSET = 0,
  OPENCONFIGTRANSPORTTYPESETHERNETPMDTYPE_ETH_100G_AOC = 53257267,
  OPENCONFIGTRANSPORTTYPESETHERNETPMDTYPE_ETH_100GBASE_CWDM4 = 55024014,
  OPENCONFIGTRANSPORTTYPESETHERNETPMDTYPE_ETH_10GBASE_SR = 65679294,
  OPENCONFIGTRANSPORTTYPESETHERNETPMDTYPE_ETH_100GBASE_CLR4 = 79394438,
  OPENCONFIGTRANSPORTTYPESETHERNETPMDTYPE_ETH_4X10GBASE_LR = 107546431,
  OPENCONFIGTRANSPORTTYPESETHERNETPMDTYPE_ETH_4X10GBASE_SR = 124311282,
  OPENCONFIGTRANSPORTTYPESETHERNETPMDTYPE_ETH_40GBASE_ER4 = 209786485,
  OPENCONFIGTRANSPORTTYPESETHERNETPMDTYPE_ETH_10GBASE_ZR = 216677957,
  OPENCONFIGTRANSPORTTYPESETHERNETPMDTYPE_ETH_100G_ACC = 254588695,
  OPENCONFIGTRANSPORTTYPESETHERNETPMDTYPE_ETH_UNDEFINED = 264053939,
  OPENCONFIGTRANSPORTTYPESETHERNETPMDTYPE_ETH_10GBASE_LRM = 300085572,
  OPENCONFIGTRANSPORTTYPESETHERNETPMDTYPE_ETH_10GBASE_ER = 300565924,
  OPENCONFIGTRANSPORTTYPESETHERNETPMDTYPE_ETH_40GBASE_LR4 = 311584992,
  OPENCONFIGTRANSPORTTYPESETHERNETPMDTYPE_ETH_100GBASE_PSM4 = 331446205,
  OPENCONFIGTRANSPORTTYPESETHERNETPMDTYPE_ETH_40GBASE_SR4 = 341664355,
  OPENCONFIGTRANSPORTTYPESETHERNETPMDTYPE_ETH_40GBASE_CR4 = 344327411,
  OPENCONFIGTRANSPORTTYPESETHERNETPMDTYPE_ETH_40GBASE_PSM4 = 388488590,
  OPENCONFIGTRANSPORTTYPESETHERNETPMDTYPE_ETH_100GBASE_LR4 = 396712729,
  OPENCONFIGTRANSPORTTYPESETHERNETPMDTYPE_ETH_100GBASE_SR10 = 446413941,
  OPENCONFIGTRANSPORTTYPESETHERNETPMDTYPE_ETH_10GBASE_LR = 451564659,
  OPENCONFIGTRANSPORTTYPESETHERNETPMDTYPE_ETH_100GBASE_SR4 = 492392898,
  OPENCONFIGTRANSPORTTYPESETHERNETPMDTYPE_ETH_100GBASE_CR4 = 494926994,
  OPENCONFIGTRANSPORTTYPESETHERNETPMDTYPE_ETH_100GBASE_ER4 = 495912708,
  OpenconfigTransportTypesETHERNETPMDTYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigTransportTypesETHERNETPMDTYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigTransportTypesETHERNETPMDTYPE_IsValid(int value);
const OpenconfigTransportTypesETHERNETPMDTYPE OpenconfigTransportTypesETHERNETPMDTYPE_MIN = OPENCONFIGTRANSPORTTYPESETHERNETPMDTYPE_UNSET;
const OpenconfigTransportTypesETHERNETPMDTYPE OpenconfigTransportTypesETHERNETPMDTYPE_MAX = OPENCONFIGTRANSPORTTYPESETHERNETPMDTYPE_ETH_100GBASE_ER4;
const int OpenconfigTransportTypesETHERNETPMDTYPE_ARRAYSIZE = OpenconfigTransportTypesETHERNETPMDTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigTransportTypesETHERNETPMDTYPE_descriptor();
inline const ::std::string& OpenconfigTransportTypesETHERNETPMDTYPE_Name(OpenconfigTransportTypesETHERNETPMDTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigTransportTypesETHERNETPMDTYPE_descriptor(), value);
}
inline bool OpenconfigTransportTypesETHERNETPMDTYPE_Parse(
    const ::std::string& name, OpenconfigTransportTypesETHERNETPMDTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigTransportTypesETHERNETPMDTYPE>(
    OpenconfigTransportTypesETHERNETPMDTYPE_descriptor(), name, value);
}
enum OpenconfigTransportTypesFIBERCONNECTORTYPE {
  OPENCONFIGTRANSPORTTYPESFIBERCONNECTORTYPE_UNSET = 0,
  OPENCONFIGTRANSPORTTYPESFIBERCONNECTORTYPE_MPO_CONNECTOR = 299077970,
  OPENCONFIGTRANSPORTTYPESFIBERCONNECTORTYPE_SC_CONNECTOR = 300083266,
  OPENCONFIGTRANSPORTTYPESFIBERCONNECTORTYPE_LC_CONNECTOR = 416622211,
  OpenconfigTransportTypesFIBERCONNECTORTYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigTransportTypesFIBERCONNECTORTYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigTransportTypesFIBERCONNECTORTYPE_IsValid(int value);
const OpenconfigTransportTypesFIBERCONNECTORTYPE OpenconfigTransportTypesFIBERCONNECTORTYPE_MIN = OPENCONFIGTRANSPORTTYPESFIBERCONNECTORTYPE_UNSET;
const OpenconfigTransportTypesFIBERCONNECTORTYPE OpenconfigTransportTypesFIBERCONNECTORTYPE_MAX = OPENCONFIGTRANSPORTTYPESFIBERCONNECTORTYPE_LC_CONNECTOR;
const int OpenconfigTransportTypesFIBERCONNECTORTYPE_ARRAYSIZE = OpenconfigTransportTypesFIBERCONNECTORTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigTransportTypesFIBERCONNECTORTYPE_descriptor();
inline const ::std::string& OpenconfigTransportTypesFIBERCONNECTORTYPE_Name(OpenconfigTransportTypesFIBERCONNECTORTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigTransportTypesFIBERCONNECTORTYPE_descriptor(), value);
}
inline bool OpenconfigTransportTypesFIBERCONNECTORTYPE_Parse(
    const ::std::string& name, OpenconfigTransportTypesFIBERCONNECTORTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigTransportTypesFIBERCONNECTORTYPE>(
    OpenconfigTransportTypesFIBERCONNECTORTYPE_descriptor(), name, value);
}
enum OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE {
  OPENCONFIGTRANSPORTTYPESLOGICALELEMENTPROTOCOLTYPE_UNSET = 0,
  OPENCONFIGTRANSPORTTYPESLOGICALELEMENTPROTOCOLTYPE_PROT_OTN = 76371778,
  OPENCONFIGTRANSPORTTYPESLOGICALELEMENTPROTOCOLTYPE_PROT_ETHERNET = 461892616,
  OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE_IsValid(int value);
const OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE_MIN = OPENCONFIGTRANSPORTTYPESLOGICALELEMENTPROTOCOLTYPE_UNSET;
const OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE_MAX = OPENCONFIGTRANSPORTTYPESLOGICALELEMENTPROTOCOLTYPE_PROT_ETHERNET;
const int OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE_ARRAYSIZE = OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE_descriptor();
inline const ::std::string& OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE_Name(OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE_descriptor(), value);
}
inline bool OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE_Parse(
    const ::std::string& name, OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE>(
    OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE_descriptor(), name, value);
}
enum OpenconfigTransportTypesOTNAPPLICATIONCODE {
  OPENCONFIGTRANSPORTTYPESOTNAPPLICATIONCODE_UNSET = 0,
  OPENCONFIGTRANSPORTTYPESOTNAPPLICATIONCODE_P1S1_2D2 = 36897107,
  OPENCONFIGTRANSPORTTYPESOTNAPPLICATIONCODE_P1L1_2D1 = 312342241,
  OPENCONFIGTRANSPORTTYPESOTNAPPLICATIONCODE_P1L1_2D2 = 312342242,
  OPENCONFIGTRANSPORTTYPESOTNAPPLICATIONCODE_OTN_UNDEFINED = 483351549,
  OpenconfigTransportTypesOTNAPPLICATIONCODE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigTransportTypesOTNAPPLICATIONCODE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigTransportTypesOTNAPPLICATIONCODE_IsValid(int value);
const OpenconfigTransportTypesOTNAPPLICATIONCODE OpenconfigTransportTypesOTNAPPLICATIONCODE_MIN = OPENCONFIGTRANSPORTTYPESOTNAPPLICATIONCODE_UNSET;
const OpenconfigTransportTypesOTNAPPLICATIONCODE OpenconfigTransportTypesOTNAPPLICATIONCODE_MAX = OPENCONFIGTRANSPORTTYPESOTNAPPLICATIONCODE_OTN_UNDEFINED;
const int OpenconfigTransportTypesOTNAPPLICATIONCODE_ARRAYSIZE = OpenconfigTransportTypesOTNAPPLICATIONCODE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigTransportTypesOTNAPPLICATIONCODE_descriptor();
inline const ::std::string& OpenconfigTransportTypesOTNAPPLICATIONCODE_Name(OpenconfigTransportTypesOTNAPPLICATIONCODE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigTransportTypesOTNAPPLICATIONCODE_descriptor(), value);
}
inline bool OpenconfigTransportTypesOTNAPPLICATIONCODE_Parse(
    const ::std::string& name, OpenconfigTransportTypesOTNAPPLICATIONCODE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigTransportTypesOTNAPPLICATIONCODE>(
    OpenconfigTransportTypesOTNAPPLICATIONCODE_descriptor(), name, value);
}
enum OpenconfigTransportTypesSONETAPPLICATIONCODE {
  OPENCONFIGTRANSPORTTYPESSONETAPPLICATIONCODE_UNSET = 0,
  OPENCONFIGTRANSPORTTYPESSONETAPPLICATIONCODE_VSR2000_3R5 = 34006129,
  OPENCONFIGTRANSPORTTYPESSONETAPPLICATIONCODE_VSR2000_3R2 = 34006134,
  OPENCONFIGTRANSPORTTYPESSONETAPPLICATIONCODE_VSR2000_3R3 = 34006135,
  OPENCONFIGTRANSPORTTYPESSONETAPPLICATIONCODE_SONET_UNDEFINED = 453962205,
  OpenconfigTransportTypesSONETAPPLICATIONCODE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigTransportTypesSONETAPPLICATIONCODE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigTransportTypesSONETAPPLICATIONCODE_IsValid(int value);
const OpenconfigTransportTypesSONETAPPLICATIONCODE OpenconfigTransportTypesSONETAPPLICATIONCODE_MIN = OPENCONFIGTRANSPORTTYPESSONETAPPLICATIONCODE_UNSET;
const OpenconfigTransportTypesSONETAPPLICATIONCODE OpenconfigTransportTypesSONETAPPLICATIONCODE_MAX = OPENCONFIGTRANSPORTTYPESSONETAPPLICATIONCODE_SONET_UNDEFINED;
const int OpenconfigTransportTypesSONETAPPLICATIONCODE_ARRAYSIZE = OpenconfigTransportTypesSONETAPPLICATIONCODE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigTransportTypesSONETAPPLICATIONCODE_descriptor();
inline const ::std::string& OpenconfigTransportTypesSONETAPPLICATIONCODE_Name(OpenconfigTransportTypesSONETAPPLICATIONCODE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigTransportTypesSONETAPPLICATIONCODE_descriptor(), value);
}
inline bool OpenconfigTransportTypesSONETAPPLICATIONCODE_Parse(
    const ::std::string& name, OpenconfigTransportTypesSONETAPPLICATIONCODE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigTransportTypesSONETAPPLICATIONCODE>(
    OpenconfigTransportTypesSONETAPPLICATIONCODE_descriptor(), name, value);
}
enum OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE {
  OPENCONFIGTRANSPORTTYPESTRANSCEIVERFORMFACTORTYPE_UNSET = 0,
  OPENCONFIGTRANSPORTTYPESTRANSCEIVERFORMFACTORTYPE_NON_PLUGGABLE = 122026302,
  OPENCONFIGTRANSPORTTYPESTRANSCEIVERFORMFACTORTYPE_CFP4 = 173799280,
  OPENCONFIGTRANSPORTTYPESTRANSCEIVERFORMFACTORTYPE_CFP2 = 173799286,
  OPENCONFIGTRANSPORTTYPESTRANSCEIVERFORMFACTORTYPE_QSFP = 248871057,
  OPENCONFIGTRANSPORTTYPESTRANSCEIVERFORMFACTORTYPE_CPAK = 254820462,
  OPENCONFIGTRANSPORTTYPESTRANSCEIVERFORMFACTORTYPE_QSFP_PLUS = 262580700,
  OPENCONFIGTRANSPORTTYPESTRANSCEIVERFORMFACTORTYPE_X2 = 323305909,
  OPENCONFIGTRANSPORTTYPESTRANSCEIVERFORMFACTORTYPE_OTHER = 336705815,
  OPENCONFIGTRANSPORTTYPESTRANSCEIVERFORMFACTORTYPE_CFP = 348964396,
  OPENCONFIGTRANSPORTTYPESTRANSCEIVERFORMFACTORTYPE_SFP = 351614684,
  OPENCONFIGTRANSPORTTYPESTRANSCEIVERFORMFACTORTYPE_QSFP28 = 371578331,
  OPENCONFIGTRANSPORTTYPESTRANSCEIVERFORMFACTORTYPE_XFP = 386302595,
  OPENCONFIGTRANSPORTTYPESTRANSCEIVERFORMFACTORTYPE_SFP_PLUS = 428513243,
  OPENCONFIGTRANSPORTTYPESTRANSCEIVERFORMFACTORTYPE_CFP2_ACO = 479072844,
  OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE_IsValid(int value);
const OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE_MIN = OPENCONFIGTRANSPORTTYPESTRANSCEIVERFORMFACTORTYPE_UNSET;
const OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE_MAX = OPENCONFIGTRANSPORTTYPESTRANSCEIVERFORMFACTORTYPE_CFP2_ACO;
const int OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE_ARRAYSIZE = OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE_descriptor();
inline const ::std::string& OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE_Name(OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE_descriptor(), value);
}
inline bool OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE_Parse(
    const ::std::string& name, OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE>(
    OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE_descriptor(), name, value);
}
enum OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE {
  OPENCONFIGTRANSPORTTYPESTRIBUTARYPROTOCOLTYPE_UNSET = 0,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYPROTOCOLTYPE_PROT_OC768 = 16859078,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYPROTOCOLTYPE_PROT_OTU1E = 92500889,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYPROTOCOLTYPE_PROT_OTU4 = 124622385,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYPROTOCOLTYPE_PROT_OTU3 = 124622390,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYPROTOCOLTYPE_PROT_OTU2 = 124622391,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYPROTOCOLTYPE_PROT_ODUCN = 125467980,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYPROTOCOLTYPE_PROT_ODU4 = 127285313,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYPROTOCOLTYPE_PROT_ODU3 = 127285318,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYPROTOCOLTYPE_PROT_ODU2 = 127285319,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYPROTOCOLTYPE_PROT_OTU2E = 142833872,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYPROTOCOLTYPE_PROT_OC48 = 143211405,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYPROTOCOLTYPE_PROT_STM16 = 244881710,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYPROTOCOLTYPE_PROT_1GE = 257542584,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYPROTOCOLTYPE_PROT_100G_MLG = 279056864,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYPROTOCOLTYPE_PROT_100GE = 310019448,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYPROTOCOLTYPE_PROT_STM64 = 362325033,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYPROTOCOLTYPE_PROT_40GE = 366888211,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYPROTOCOLTYPE_PROT_10GE_WAN = 368604491,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYPROTOCOLTYPE_PROT_STM256 = 390106586,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYPROTOCOLTYPE_PROT_OTUCN = 394498172,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYPROTOCOLTYPE_PROT_ODU2E = 410687360,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYPROTOCOLTYPE_PROT_10GE_LAN = 506556672,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYPROTOCOLTYPE_PROT_OC192 = 536658191,
  OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE_IsValid(int value);
const OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE_MIN = OPENCONFIGTRANSPORTTYPESTRIBUTARYPROTOCOLTYPE_UNSET;
const OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE_MAX = OPENCONFIGTRANSPORTTYPESTRIBUTARYPROTOCOLTYPE_PROT_OC192;
const int OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE_ARRAYSIZE = OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE_descriptor();
inline const ::std::string& OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE_Name(OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE_descriptor(), value);
}
inline bool OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE_Parse(
    const ::std::string& name, OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE>(
    OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE_descriptor(), name, value);
}
enum OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE {
  OPENCONFIGTRANSPORTTYPESTRIBUTARYRATECLASSTYPE_UNSET = 0,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYRATECLASSTYPE_TRIB_RATE_40G = 63565836,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYRATECLASSTYPE_TRIB_RATE_1G = 114060885,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYRATECLASSTYPE_TRIB_RATE_150G = 212183688,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYRATECLASSTYPE_TRIB_RATE_100G = 244952005,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYRATECLASSTYPE_TRIB_RATE_200G = 252980176,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYRATECLASSTYPE_TRIB_RATE_300G = 276612395,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYRATECLASSTYPE_TRIB_RATE_250G = 285696653,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYRATECLASSTYPE_TRIB_RATE_400G = 300257766,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYRATECLASSTYPE_TRIB_RATE_10G = 366043073,
  OPENCONFIGTRANSPORTTYPESTRIBUTARYRATECLASSTYPE_TRIB_RATE_2_5G = 504977349,
  OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE_IsValid(int value);
const OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE_MIN = OPENCONFIGTRANSPORTTYPESTRIBUTARYRATECLASSTYPE_UNSET;
const OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE_MAX = OPENCONFIGTRANSPORTTYPESTRIBUTARYRATECLASSTYPE_TRIB_RATE_2_5G;
const int OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE_ARRAYSIZE = OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE_descriptor();
inline const ::std::string& OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE_Name(OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE_descriptor(), value);
}
inline bool OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE_Parse(
    const ::std::string& name, OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE>(
    OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE_descriptor(), name, value);
}
enum OpenconfigVlanTypesTPIDTYPES {
  OPENCONFIGVLANTYPESTPIDTYPES_UNSET = 0,
  OPENCONFIGVLANTYPESTPIDTYPES_TPID_0X9100 = 43366784,
  OPENCONFIGVLANTYPESTPIDTYPES_TPID_0X88A8 = 167692657,
  OPENCONFIGVLANTYPESTPIDTYPES_TPID_0X8100 = 253072231,
  OPENCONFIGVLANTYPESTPIDTYPES_TPID_0X9200 = 345856891,
  OpenconfigVlanTypesTPIDTYPES_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigVlanTypesTPIDTYPES_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigVlanTypesTPIDTYPES_IsValid(int value);
const OpenconfigVlanTypesTPIDTYPES OpenconfigVlanTypesTPIDTYPES_MIN = OPENCONFIGVLANTYPESTPIDTYPES_UNSET;
const OpenconfigVlanTypesTPIDTYPES OpenconfigVlanTypesTPIDTYPES_MAX = OPENCONFIGVLANTYPESTPIDTYPES_TPID_0X9200;
const int OpenconfigVlanTypesTPIDTYPES_ARRAYSIZE = OpenconfigVlanTypesTPIDTYPES_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigVlanTypesTPIDTYPES_descriptor();
inline const ::std::string& OpenconfigVlanTypesTPIDTYPES_Name(OpenconfigVlanTypesTPIDTYPES value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigVlanTypesTPIDTYPES_descriptor(), value);
}
inline bool OpenconfigVlanTypesTPIDTYPES_Parse(
    const ::std::string& name, OpenconfigVlanTypesTPIDTYPES* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigVlanTypesTPIDTYPES>(
    OpenconfigVlanTypesTPIDTYPES_descriptor(), name, value);
}
enum OpenconfigVlanVlanModeType {
  OPENCONFIGVLANVLANMODETYPE_UNSET = 0,
  OPENCONFIGVLANVLANMODETYPE_ACCESS = 1,
  OPENCONFIGVLANVLANMODETYPE_TRUNK = 2,
  OpenconfigVlanVlanModeType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigVlanVlanModeType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigVlanVlanModeType_IsValid(int value);
const OpenconfigVlanVlanModeType OpenconfigVlanVlanModeType_MIN = OPENCONFIGVLANVLANMODETYPE_UNSET;
const OpenconfigVlanVlanModeType OpenconfigVlanVlanModeType_MAX = OPENCONFIGVLANVLANMODETYPE_TRUNK;
const int OpenconfigVlanVlanModeType_ARRAYSIZE = OpenconfigVlanVlanModeType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigVlanVlanModeType_descriptor();
inline const ::std::string& OpenconfigVlanVlanModeType_Name(OpenconfigVlanVlanModeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigVlanVlanModeType_descriptor(), value);
}
inline bool OpenconfigVlanVlanModeType_Parse(
    const ::std::string& name, OpenconfigVlanVlanModeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigVlanVlanModeType>(
    OpenconfigVlanVlanModeType_descriptor(), name, value);
}
enum OpenconfigWavelengthRouterAdminStateType {
  OPENCONFIGWAVELENGTHROUTERADMINSTATETYPE_UNSET = 0,
  OPENCONFIGWAVELENGTHROUTERADMINSTATETYPE_ENABLED = 1,
  OPENCONFIGWAVELENGTHROUTERADMINSTATETYPE_DISABLED = 2,
  OPENCONFIGWAVELENGTHROUTERADMINSTATETYPE_MAINT = 3,
  OpenconfigWavelengthRouterAdminStateType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigWavelengthRouterAdminStateType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigWavelengthRouterAdminStateType_IsValid(int value);
const OpenconfigWavelengthRouterAdminStateType OpenconfigWavelengthRouterAdminStateType_MIN = OPENCONFIGWAVELENGTHROUTERADMINSTATETYPE_UNSET;
const OpenconfigWavelengthRouterAdminStateType OpenconfigWavelengthRouterAdminStateType_MAX = OPENCONFIGWAVELENGTHROUTERADMINSTATETYPE_MAINT;
const int OpenconfigWavelengthRouterAdminStateType_ARRAYSIZE = OpenconfigWavelengthRouterAdminStateType_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigWavelengthRouterAdminStateType_descriptor();
inline const ::std::string& OpenconfigWavelengthRouterAdminStateType_Name(OpenconfigWavelengthRouterAdminStateType value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigWavelengthRouterAdminStateType_descriptor(), value);
}
inline bool OpenconfigWavelengthRouterAdminStateType_Parse(
    const ::std::string& name, OpenconfigWavelengthRouterAdminStateType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigWavelengthRouterAdminStateType>(
    OpenconfigWavelengthRouterAdminStateType_descriptor(), name, value);
}
enum OpenconfigWifiTypesAPSTATE {
  OPENCONFIGWIFITYPESAPSTATE_UNSET = 0,
  OPENCONFIGWIFITYPESAPSTATE_UPGRADING = 349995057,
  OPENCONFIGWIFITYPESAPSTATE_UP = 473784083,
  OPENCONFIGWIFITYPESAPSTATE_DOWN = 529095792,
  OpenconfigWifiTypesAPSTATE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigWifiTypesAPSTATE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigWifiTypesAPSTATE_IsValid(int value);
const OpenconfigWifiTypesAPSTATE OpenconfigWifiTypesAPSTATE_MIN = OPENCONFIGWIFITYPESAPSTATE_UNSET;
const OpenconfigWifiTypesAPSTATE OpenconfigWifiTypesAPSTATE_MAX = OPENCONFIGWIFITYPESAPSTATE_DOWN;
const int OpenconfigWifiTypesAPSTATE_ARRAYSIZE = OpenconfigWifiTypesAPSTATE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigWifiTypesAPSTATE_descriptor();
inline const ::std::string& OpenconfigWifiTypesAPSTATE_Name(OpenconfigWifiTypesAPSTATE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigWifiTypesAPSTATE_descriptor(), value);
}
inline bool OpenconfigWifiTypesAPSTATE_Parse(
    const ::std::string& name, OpenconfigWifiTypesAPSTATE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigWifiTypesAPSTATE>(
    OpenconfigWifiTypesAPSTATE_descriptor(), name, value);
}
enum OpenconfigWifiTypesCHANGEREASONTYPE {
  OPENCONFIGWIFITYPESCHANGEREASONTYPE_UNSET = 0,
  OPENCONFIGWIFITYPESCHANGEREASONTYPE_DFS = 214232444,
  OPENCONFIGWIFITYPESCHANGEREASONTYPE_NOISE = 335803595,
  OPENCONFIGWIFITYPESCHANGEREASONTYPE_ERRORS = 478307970,
  OPENCONFIGWIFITYPESCHANGEREASONTYPE_BETTER_CHANNEL = 522287195,
  OpenconfigWifiTypesCHANGEREASONTYPE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigWifiTypesCHANGEREASONTYPE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigWifiTypesCHANGEREASONTYPE_IsValid(int value);
const OpenconfigWifiTypesCHANGEREASONTYPE OpenconfigWifiTypesCHANGEREASONTYPE_MIN = OPENCONFIGWIFITYPESCHANGEREASONTYPE_UNSET;
const OpenconfigWifiTypesCHANGEREASONTYPE OpenconfigWifiTypesCHANGEREASONTYPE_MAX = OPENCONFIGWIFITYPESCHANGEREASONTYPE_BETTER_CHANNEL;
const int OpenconfigWifiTypesCHANGEREASONTYPE_ARRAYSIZE = OpenconfigWifiTypesCHANGEREASONTYPE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigWifiTypesCHANGEREASONTYPE_descriptor();
inline const ::std::string& OpenconfigWifiTypesCHANGEREASONTYPE_Name(OpenconfigWifiTypesCHANGEREASONTYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigWifiTypesCHANGEREASONTYPE_descriptor(), value);
}
inline bool OpenconfigWifiTypesCHANGEREASONTYPE_Parse(
    const ::std::string& name, OpenconfigWifiTypesCHANGEREASONTYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigWifiTypesCHANGEREASONTYPE>(
    OpenconfigWifiTypesCHANGEREASONTYPE_descriptor(), name, value);
}
enum OpenconfigWifiTypesCLIENTCAPABILITIES {
  OPENCONFIGWIFITYPESCLIENTCAPABILITIES_UNSET = 0,
  OPENCONFIGWIFITYPESCLIENTCAPABILITIES_DOT_11R = 25636203,
  OPENCONFIGWIFITYPESCLIENTCAPABILITIES_DOT_11V = 25636207,
  OPENCONFIGWIFITYPESCLIENTCAPABILITIES_MU_BEAMFORMEE = 91046411,
  OPENCONFIGWIFITYPESCLIENTCAPABILITIES_MU_BEAMFORMER = 91046428,
  OpenconfigWifiTypesCLIENTCAPABILITIES_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigWifiTypesCLIENTCAPABILITIES_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigWifiTypesCLIENTCAPABILITIES_IsValid(int value);
const OpenconfigWifiTypesCLIENTCAPABILITIES OpenconfigWifiTypesCLIENTCAPABILITIES_MIN = OPENCONFIGWIFITYPESCLIENTCAPABILITIES_UNSET;
const OpenconfigWifiTypesCLIENTCAPABILITIES OpenconfigWifiTypesCLIENTCAPABILITIES_MAX = OPENCONFIGWIFITYPESCLIENTCAPABILITIES_MU_BEAMFORMER;
const int OpenconfigWifiTypesCLIENTCAPABILITIES_ARRAYSIZE = OpenconfigWifiTypesCLIENTCAPABILITIES_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigWifiTypesCLIENTCAPABILITIES_descriptor();
inline const ::std::string& OpenconfigWifiTypesCLIENTCAPABILITIES_Name(OpenconfigWifiTypesCLIENTCAPABILITIES value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigWifiTypesCLIENTCAPABILITIES_descriptor(), value);
}
inline bool OpenconfigWifiTypesCLIENTCAPABILITIES_Parse(
    const ::std::string& name, OpenconfigWifiTypesCLIENTCAPABILITIES* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigWifiTypesCLIENTCAPABILITIES>(
    OpenconfigWifiTypesCLIENTCAPABILITIES_descriptor(), name, value);
}
enum OpenconfigWifiTypesCLIENTSTATE {
  OPENCONFIGWIFITYPESCLIENTSTATE_UNSET = 0,
  OPENCONFIGWIFITYPESCLIENTSTATE_BLACKLISTED = 15955476,
  OPENCONFIGWIFITYPESCLIENTSTATE_DHCP_FAILURE = 102600160,
  OPENCONFIGWIFITYPESCLIENTSTATE_L2AUTH_REQD = 172626369,
  OPENCONFIGWIFITYPESCLIENTSTATE_POWERSAVE = 237538718,
  OPENCONFIGWIFITYPESCLIENTSTATE_AUTHENTICATED = 250384215,
  OPENCONFIGWIFITYPESCLIENTSTATE_L2AUTH_FAILURE_REJECT = 254800713,
  OPENCONFIGWIFITYPESCLIENTSTATE_L2AUTH_FAILURE_TIMEOUT = 317830585,
  OPENCONFIGWIFITYPESCLIENTSTATE_L3AUTH_REQD = 360142606,
  OPENCONFIGWIFITYPESCLIENTSTATE_ASSOCIATED = 422077472,
  OPENCONFIGWIFITYPESCLIENTSTATE_L3AUTH_FAILURE = 454415440,
  OPENCONFIGWIFITYPESCLIENTSTATE_DHCP_REQD = 487220542,
  OpenconfigWifiTypesCLIENTSTATE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigWifiTypesCLIENTSTATE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigWifiTypesCLIENTSTATE_IsValid(int value);
const OpenconfigWifiTypesCLIENTSTATE OpenconfigWifiTypesCLIENTSTATE_MIN = OPENCONFIGWIFITYPESCLIENTSTATE_UNSET;
const OpenconfigWifiTypesCLIENTSTATE OpenconfigWifiTypesCLIENTSTATE_MAX = OPENCONFIGWIFITYPESCLIENTSTATE_DHCP_REQD;
const int OpenconfigWifiTypesCLIENTSTATE_ARRAYSIZE = OpenconfigWifiTypesCLIENTSTATE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigWifiTypesCLIENTSTATE_descriptor();
inline const ::std::string& OpenconfigWifiTypesCLIENTSTATE_Name(OpenconfigWifiTypesCLIENTSTATE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigWifiTypesCLIENTSTATE_descriptor(), value);
}
inline bool OpenconfigWifiTypesCLIENTSTATE_Parse(
    const ::std::string& name, OpenconfigWifiTypesCLIENTSTATE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigWifiTypesCLIENTSTATE>(
    OpenconfigWifiTypesCLIENTSTATE_descriptor(), name, value);
}
enum OpenconfigWifiTypesDATARATE {
  OPENCONFIGWIFITYPESDATARATE_UNSET = 0,
  OPENCONFIGWIFITYPESDATARATE_RATE_36MB = 22775585,
  OPENCONFIGWIFITYPESDATARATE_RATE_48MB = 25614470,
  OPENCONFIGWIFITYPESDATARATE_RATE_18MB = 119882321,
  OPENCONFIGWIFITYPESDATARATE_RATE_11MB = 188458380,
  OPENCONFIGWIFITYPESDATARATE_RATE_12MB = 188669959,
  OPENCONFIGWIFITYPESDATARATE_RATE_24MB = 300116088,
  OPENCONFIGWIFITYPESDATARATE_RATE_54MB = 329841425,
  OPENCONFIGWIFITYPESDATARATE_RATE_6MB = 414074926,
  OPENCONFIGWIFITYPESDATARATE_RATE_1MB = 414234913,
  OPENCONFIGWIFITYPESDATARATE_RATE_2MB = 414676330,
  OPENCONFIGWIFITYPESDATARATE_RATE_9MB = 415489049,
  OPENCONFIGWIFITYPESDATARATE_RATE_5_5MB = 461601010,
  OpenconfigWifiTypesDATARATE_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigWifiTypesDATARATE_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigWifiTypesDATARATE_IsValid(int value);
const OpenconfigWifiTypesDATARATE OpenconfigWifiTypesDATARATE_MIN = OPENCONFIGWIFITYPESDATARATE_UNSET;
const OpenconfigWifiTypesDATARATE OpenconfigWifiTypesDATARATE_MAX = OPENCONFIGWIFITYPESDATARATE_RATE_5_5MB;
const int OpenconfigWifiTypesDATARATE_ARRAYSIZE = OpenconfigWifiTypesDATARATE_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigWifiTypesDATARATE_descriptor();
inline const ::std::string& OpenconfigWifiTypesDATARATE_Name(OpenconfigWifiTypesDATARATE value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigWifiTypesDATARATE_descriptor(), value);
}
inline bool OpenconfigWifiTypesDATARATE_Parse(
    const ::std::string& name, OpenconfigWifiTypesDATARATE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigWifiTypesDATARATE>(
    OpenconfigWifiTypesDATARATE_descriptor(), name, value);
}
enum OpenconfigWifiTypesOPERATINGFREQUENCY {
  OPENCONFIGWIFITYPESOPERATINGFREQUENCY_UNSET = 0,
  OPENCONFIGWIFITYPESOPERATINGFREQUENCY_FREQ_5GHZ = 327040220,
  OPENCONFIGWIFITYPESOPERATINGFREQUENCY_FREQ_2_5_GHZ = 383787092,
  OPENCONFIGWIFITYPESOPERATINGFREQUENCY_FREQ_2GHZ = 508963537,
  OpenconfigWifiTypesOPERATINGFREQUENCY_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  OpenconfigWifiTypesOPERATINGFREQUENCY_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool OpenconfigWifiTypesOPERATINGFREQUENCY_IsValid(int value);
const OpenconfigWifiTypesOPERATINGFREQUENCY OpenconfigWifiTypesOPERATINGFREQUENCY_MIN = OPENCONFIGWIFITYPESOPERATINGFREQUENCY_UNSET;
const OpenconfigWifiTypesOPERATINGFREQUENCY OpenconfigWifiTypesOPERATINGFREQUENCY_MAX = OPENCONFIGWIFITYPESOPERATINGFREQUENCY_FREQ_2GHZ;
const int OpenconfigWifiTypesOPERATINGFREQUENCY_ARRAYSIZE = OpenconfigWifiTypesOPERATINGFREQUENCY_MAX + 1;

const ::google::protobuf::EnumDescriptor* OpenconfigWifiTypesOPERATINGFREQUENCY_descriptor();
inline const ::std::string& OpenconfigWifiTypesOPERATINGFREQUENCY_Name(OpenconfigWifiTypesOPERATINGFREQUENCY value) {
  return ::google::protobuf::internal::NameOfEnum(
    OpenconfigWifiTypesOPERATINGFREQUENCY_descriptor(), value);
}
inline bool OpenconfigWifiTypesOPERATINGFREQUENCY_Parse(
    const ::std::string& name, OpenconfigWifiTypesOPERATINGFREQUENCY* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OpenconfigWifiTypesOPERATINGFREQUENCY>(
    OpenconfigWifiTypesOPERATINGFREQUENCY_descriptor(), name, value);
}
// ===================================================================


// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace enums
}  // namespace openconfig

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::openconfig::enums::IETFInterfacesInterfaceType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::IETFInterfacesInterfaceType>() {
  return ::openconfig::enums::IETFInterfacesInterfaceType_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE>() {
  return ::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE>() {
  return ::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE>() {
  return ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigAaaTypesAAASERVERTYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigAaaTypesAAASERVERTYPE>() {
  return ::openconfig::enums::OpenconfigAaaTypesAAASERVERTYPE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigAaaTypesSYSTEMDEFINEDROLES> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigAaaTypesSYSTEMDEFINEDROLES>() {
  return ::openconfig::enums::OpenconfigAaaTypesSYSTEMDEFINEDROLES_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigAccessPointsAccessPointsAccessPointSystemCpusCpuStateIndex> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigAccessPointsAccessPointsAccessPointSystemCpusCpuStateIndex>() {
  return ::openconfig::enums::OpenconfigAccessPointsAccessPointsAccessPointSystemCpusCpuStateIndex_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigAclACLCOUNTERCAPABILITY> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigAclACLCOUNTERCAPABILITY>() {
  return ::openconfig::enums::OpenconfigAclACLCOUNTERCAPABILITY_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigAclACLTYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigAclACLTYPE>() {
  return ::openconfig::enums::OpenconfigAclACLTYPE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigDestinationPort> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigDestinationPort>() {
  return ::openconfig::enums::OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigDestinationPort_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigSourcePort> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigSourcePort>() {
  return ::openconfig::enums::OpenconfigAclAclAclSetsAclSetAclEntriesAclEntryTransportConfigSourcePort_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigAclFORWARDINGACTION> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigAclFORWARDINGACTION>() {
  return ::openconfig::enums::OpenconfigAclFORWARDINGACTION_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigAclLOGACTION> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigAclLOGACTION>() {
  return ::openconfig::enums::OpenconfigAclLOGACTION_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY>() {
  return ::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMTYPEID> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMTYPEID>() {
  return ::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMTYPEID_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigCatalogTypesCATALOGMEMBERTYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigCatalogTypesCATALOGMEMBERTYPE>() {
  return ::openconfig::enums::OpenconfigCatalogTypesCATALOGMEMBERTYPE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigCatalogTypesIMPLEMENTATIONSTATUSTYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigCatalogTypesIMPLEMENTATIONSTATUSTYPE>() {
  return ::openconfig::enums::OpenconfigCatalogTypesIMPLEMENTATIONSTATUSTYPE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigCatalogTypesMODULECATEGORYBASE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigCatalogTypesMODULECATEGORYBASE>() {
  return ::openconfig::enums::OpenconfigCatalogTypesMODULECATEGORYBASE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigCatalogTypesMODULESTATUSTYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigCatalogTypesMODULESTATUSTYPE>() {
  return ::openconfig::enums::OpenconfigCatalogTypesMODULESTATUSTYPE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigCatalogTypesMODULESUBCATEGORYBASE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigCatalogTypesMODULESUBCATEGORYBASE>() {
  return ::openconfig::enums::OpenconfigCatalogTypesMODULESUBCATEGORYBASE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigCatalogTypesORGANIZATIONTYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigCatalogTypesORGANIZATIONTYPE>() {
  return ::openconfig::enums::OpenconfigCatalogTypesORGANIZATIONTYPE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigIfAggregateAggregationType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigIfAggregateAggregationType>() {
  return ::openconfig::enums::OpenconfigIfAggregateAggregationType_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigIfEthernetETHERNETSPEED> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigIfEthernetETHERNETSPEED>() {
  return ::openconfig::enums::OpenconfigIfEthernetETHERNETSPEED_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigIfIpIpAddressOrigin> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigIfIpIpAddressOrigin>() {
  return ::openconfig::enums::OpenconfigIfIpIpAddressOrigin_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigIfIpNeighborOrigin> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigIfIpNeighborOrigin>() {
  return ::openconfig::enums::OpenconfigIfIpNeighborOrigin_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigLacpLacpActivityType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigLacpLacpActivityType>() {
  return ::openconfig::enums::OpenconfigLacpLacpActivityType_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigLacpLacpPeriodType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigLacpLacpPeriodType>() {
  return ::openconfig::enums::OpenconfigLacpLacpPeriodType_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigLacpLacpSynchronizationType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigLacpLacpSynchronizationType>() {
  return ::openconfig::enums::OpenconfigLacpLacpSynchronizationType_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigLacpLacpTimeoutType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigLacpLacpTimeoutType>() {
  return ::openconfig::enums::OpenconfigLacpLacpTimeoutType_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigLldpChassisIdType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigLldpChassisIdType>() {
  return ::openconfig::enums::OpenconfigLldpChassisIdType_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigLldpPortIdType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigLldpPortIdType>() {
  return ::openconfig::enums::OpenconfigLldpPortIdType_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigLldpTypesLLDPSYSTEMCAPABILITY> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigLldpTypesLLDPSYSTEMCAPABILITY>() {
  return ::openconfig::enums::OpenconfigLldpTypesLLDPSYSTEMCAPABILITY_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigLldpTypesLLDPTLV> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigLldpTypesLLDPTLV>() {
  return ::openconfig::enums::OpenconfigLldpTypesLLDPTLV_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigOpenflowFailureMode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigOpenflowFailureMode>() {
  return ::openconfig::enums::OpenconfigOpenflowFailureMode_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigOpenflowTransport> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigOpenflowTransport>() {
  return ::openconfig::enums::OpenconfigOpenflowTransport_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigOpticalAmplifierFIBERTYPEPROFILE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigOpticalAmplifierFIBERTYPEPROFILE>() {
  return ::openconfig::enums::OpenconfigOpticalAmplifierFIBERTYPEPROFILE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigOpticalAmplifierGAINRANGE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigOpticalAmplifierGAINRANGE>() {
  return ::openconfig::enums::OpenconfigOpticalAmplifierGAINRANGE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE>() {
  return ::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE>() {
  return ::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigPacketMatchTypesETHERTYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigPacketMatchTypesETHERTYPE>() {
  return ::openconfig::enums::OpenconfigPacketMatchTypesETHERTYPE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigPacketMatchTypesIPPROTOCOL> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigPacketMatchTypesIPPROTOCOL>() {
  return ::openconfig::enums::OpenconfigPacketMatchTypesIPPROTOCOL_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigPacketMatchTypesTCPFLAGS> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigPacketMatchTypesTCPFLAGS>() {
  return ::openconfig::enums::OpenconfigPacketMatchTypesTCPFLAGS_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigPlatformLinecardComponentPowerType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigPlatformLinecardComponentPowerType>() {
  return ::openconfig::enums::OpenconfigPlatformLinecardComponentPowerType_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigPlatformTypesCOMPONENTOPERSTATUS> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigPlatformTypesCOMPONENTOPERSTATUS>() {
  return ::openconfig::enums::OpenconfigPlatformTypesCOMPONENTOPERSTATUS_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT>() {
  return ::openconfig::enums::OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT>() {
  return ::openconfig::enums::OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigProbesTestType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigProbesTestType>() {
  return ::openconfig::enums::OpenconfigProbesTestType_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigQosQueueBehavior> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigQosQueueBehavior>() {
  return ::openconfig::enums::OpenconfigQosQueueBehavior_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigQosTypesQOSQUEUETYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigQosTypesQOSQUEUETYPE>() {
  return ::openconfig::enums::OpenconfigQosTypesQOSQUEUETYPE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigQosTypesQOSSCHEDULERTYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigQosTypesQOSSCHEDULERTYPE>() {
  return ::openconfig::enums::OpenconfigQosTypesQOSSCHEDULERTYPE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigSpanningTreeStpGuardType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigSpanningTreeStpGuardType>() {
  return ::openconfig::enums::OpenconfigSpanningTreeStpGuardType_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigSpanningTreeStpLinkType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigSpanningTreeStpLinkType>() {
  return ::openconfig::enums::OpenconfigSpanningTreeStpLinkType_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPEDGEPORT> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPEDGEPORT>() {
  return ::openconfig::enums::OpenconfigSpanningTreeTypesSTPEDGEPORT_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTROLE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTROLE>() {
  return ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTROLE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTSTATE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTSTATE>() {
  return ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTSTATE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPROTOCOL> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPROTOCOL>() {
  return ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPROTOCOL_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY>() {
  return ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity>() {
  return ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigSystemNTPAUTHTYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigSystemNTPAUTHTYPE>() {
  return ::openconfig::enums::OpenconfigSystemNTPAUTHTYPE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigTelemetryTypesDATAENCODINGMETHOD> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigTelemetryTypesDATAENCODINGMETHOD>() {
  return ::openconfig::enums::OpenconfigTelemetryTypesDATAENCODINGMETHOD_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigTelemetryTypesSTREAMPROTOCOL> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigTelemetryTypesSTREAMPROTOCOL>() {
  return ::openconfig::enums::OpenconfigTelemetryTypesSTREAMPROTOCOL_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigTerminalDeviceAdminStateType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigTerminalDeviceAdminStateType>() {
  return ::openconfig::enums::OpenconfigTerminalDeviceAdminStateType_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigTerminalDeviceLoopbackModeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigTerminalDeviceLoopbackModeType>() {
  return ::openconfig::enums::OpenconfigTerminalDeviceLoopbackModeType_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigTransportLineCommonAdminStateType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigTransportLineCommonAdminStateType>() {
  return ::openconfig::enums::OpenconfigTransportLineCommonAdminStateType_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigTransportLineCommonOPTICALLINEPORTTYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigTransportLineCommonOPTICALLINEPORTTYPE>() {
  return ::openconfig::enums::OpenconfigTransportLineCommonOPTICALLINEPORTTYPE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigTransportLineProtectionAPSPATHS> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigTransportLineProtectionAPSPATHS>() {
  return ::openconfig::enums::OpenconfigTransportLineProtectionAPSPATHS_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigTransportTypesETHERNETPMDTYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigTransportTypesETHERNETPMDTYPE>() {
  return ::openconfig::enums::OpenconfigTransportTypesETHERNETPMDTYPE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigTransportTypesFIBERCONNECTORTYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigTransportTypesFIBERCONNECTORTYPE>() {
  return ::openconfig::enums::OpenconfigTransportTypesFIBERCONNECTORTYPE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE>() {
  return ::openconfig::enums::OpenconfigTransportTypesLOGICALELEMENTPROTOCOLTYPE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigTransportTypesOTNAPPLICATIONCODE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigTransportTypesOTNAPPLICATIONCODE>() {
  return ::openconfig::enums::OpenconfigTransportTypesOTNAPPLICATIONCODE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigTransportTypesSONETAPPLICATIONCODE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigTransportTypesSONETAPPLICATIONCODE>() {
  return ::openconfig::enums::OpenconfigTransportTypesSONETAPPLICATIONCODE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE>() {
  return ::openconfig::enums::OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE>() {
  return ::openconfig::enums::OpenconfigTransportTypesTRIBUTARYPROTOCOLTYPE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE>() {
  return ::openconfig::enums::OpenconfigTransportTypesTRIBUTARYRATECLASSTYPE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigVlanTypesTPIDTYPES> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigVlanTypesTPIDTYPES>() {
  return ::openconfig::enums::OpenconfigVlanTypesTPIDTYPES_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigVlanVlanModeType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigVlanVlanModeType>() {
  return ::openconfig::enums::OpenconfigVlanVlanModeType_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigWavelengthRouterAdminStateType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigWavelengthRouterAdminStateType>() {
  return ::openconfig::enums::OpenconfigWavelengthRouterAdminStateType_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigWifiTypesAPSTATE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigWifiTypesAPSTATE>() {
  return ::openconfig::enums::OpenconfigWifiTypesAPSTATE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigWifiTypesCHANGEREASONTYPE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigWifiTypesCHANGEREASONTYPE>() {
  return ::openconfig::enums::OpenconfigWifiTypesCHANGEREASONTYPE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigWifiTypesCLIENTCAPABILITIES> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigWifiTypesCLIENTCAPABILITIES>() {
  return ::openconfig::enums::OpenconfigWifiTypesCLIENTCAPABILITIES_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigWifiTypesCLIENTSTATE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigWifiTypesCLIENTSTATE>() {
  return ::openconfig::enums::OpenconfigWifiTypesCLIENTSTATE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigWifiTypesDATARATE> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigWifiTypesDATARATE>() {
  return ::openconfig::enums::OpenconfigWifiTypesDATARATE_descriptor();
}
template <> struct is_proto_enum< ::openconfig::enums::OpenconfigWifiTypesOPERATINGFREQUENCY> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::enums::OpenconfigWifiTypesOPERATINGFREQUENCY>() {
  return ::openconfig::enums::OpenconfigWifiTypesOPERATINGFREQUENCY_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_openconfig_2fenums_2fenums_2eproto__INCLUDED
