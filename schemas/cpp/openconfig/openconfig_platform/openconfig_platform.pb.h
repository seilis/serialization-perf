// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: openconfig/openconfig_platform/openconfig_platform.proto

#ifndef PROTOBUF_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto__INCLUDED
#define PROTOBUF_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "github.com/openconfig/ygot/proto/ywrapper/ywrapper.pb.h"
#include "github.com/openconfig/ygot/proto/yext/yext.pb.h"
#include "openconfig/enums/enums.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[81];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsComponents_Component_Backplane_ConfigImpl();
void InitDefaultsComponents_Component_Backplane_Config();
void InitDefaultsComponents_Component_Backplane_StateImpl();
void InitDefaultsComponents_Component_Backplane_State();
void InitDefaultsComponents_Component_BackplaneImpl();
void InitDefaultsComponents_Component_Backplane();
void InitDefaultsComponents_Component_Chassis_ConfigImpl();
void InitDefaultsComponents_Component_Chassis_Config();
void InitDefaultsComponents_Component_Chassis_StateImpl();
void InitDefaultsComponents_Component_Chassis_State();
void InitDefaultsComponents_Component_ChassisImpl();
void InitDefaultsComponents_Component_Chassis();
void InitDefaultsComponents_Component_ConfigImpl();
void InitDefaultsComponents_Component_Config();
void InitDefaultsComponents_Component_Cpu_ConfigImpl();
void InitDefaultsComponents_Component_Cpu_Config();
void InitDefaultsComponents_Component_Cpu_StateImpl();
void InitDefaultsComponents_Component_Cpu_State();
void InitDefaultsComponents_Component_Cpu_Utilization_StateImpl();
void InitDefaultsComponents_Component_Cpu_Utilization_State();
void InitDefaultsComponents_Component_Cpu_UtilizationImpl();
void InitDefaultsComponents_Component_Cpu_Utilization();
void InitDefaultsComponents_Component_CpuImpl();
void InitDefaultsComponents_Component_Cpu();
void InitDefaultsComponents_Component_Fabric_ConfigImpl();
void InitDefaultsComponents_Component_Fabric_Config();
void InitDefaultsComponents_Component_Fabric_StateImpl();
void InitDefaultsComponents_Component_Fabric_State();
void InitDefaultsComponents_Component_FabricImpl();
void InitDefaultsComponents_Component_Fabric();
void InitDefaultsComponents_Component_Fan_ConfigImpl();
void InitDefaultsComponents_Component_Fan_Config();
void InitDefaultsComponents_Component_Fan_StateImpl();
void InitDefaultsComponents_Component_Fan_State();
void InitDefaultsComponents_Component_FanImpl();
void InitDefaultsComponents_Component_Fan();
void InitDefaultsComponents_Component_IntegratedCircuit_ConfigImpl();
void InitDefaultsComponents_Component_IntegratedCircuit_Config();
void InitDefaultsComponents_Component_IntegratedCircuit_StateImpl();
void InitDefaultsComponents_Component_IntegratedCircuit_State();
void InitDefaultsComponents_Component_IntegratedCircuitImpl();
void InitDefaultsComponents_Component_IntegratedCircuit();
void InitDefaultsComponents_Component_Linecard_ConfigImpl();
void InitDefaultsComponents_Component_Linecard_Config();
void InitDefaultsComponents_Component_Linecard_StateImpl();
void InitDefaultsComponents_Component_Linecard_State();
void InitDefaultsComponents_Component_LinecardImpl();
void InitDefaultsComponents_Component_Linecard();
void InitDefaultsComponents_Component_OpticalChannel_ConfigImpl();
void InitDefaultsComponents_Component_OpticalChannel_Config();
void InitDefaultsComponents_Component_OpticalChannel_State_ChromaticDispersionImpl();
void InitDefaultsComponents_Component_OpticalChannel_State_ChromaticDispersion();
void InitDefaultsComponents_Component_OpticalChannel_State_InputPowerImpl();
void InitDefaultsComponents_Component_OpticalChannel_State_InputPower();
void InitDefaultsComponents_Component_OpticalChannel_State_LaserBiasCurrentImpl();
void InitDefaultsComponents_Component_OpticalChannel_State_LaserBiasCurrent();
void InitDefaultsComponents_Component_OpticalChannel_State_OutputPowerImpl();
void InitDefaultsComponents_Component_OpticalChannel_State_OutputPower();
void InitDefaultsComponents_Component_OpticalChannel_State_PolarizationDependentLossImpl();
void InitDefaultsComponents_Component_OpticalChannel_State_PolarizationDependentLoss();
void InitDefaultsComponents_Component_OpticalChannel_State_PolarizationModeDispersionImpl();
void InitDefaultsComponents_Component_OpticalChannel_State_PolarizationModeDispersion();
void InitDefaultsComponents_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersionImpl();
void InitDefaultsComponents_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion();
void InitDefaultsComponents_Component_OpticalChannel_StateImpl();
void InitDefaultsComponents_Component_OpticalChannel_State();
void InitDefaultsComponents_Component_OpticalChannelImpl();
void InitDefaultsComponents_Component_OpticalChannel();
void InitDefaultsComponents_Component_OpticalPort_ConfigImpl();
void InitDefaultsComponents_Component_OpticalPort_Config();
void InitDefaultsComponents_Component_OpticalPort_State_InputPowerImpl();
void InitDefaultsComponents_Component_OpticalPort_State_InputPower();
void InitDefaultsComponents_Component_OpticalPort_State_OutputPowerImpl();
void InitDefaultsComponents_Component_OpticalPort_State_OutputPower();
void InitDefaultsComponents_Component_OpticalPort_StateImpl();
void InitDefaultsComponents_Component_OpticalPort_State();
void InitDefaultsComponents_Component_OpticalPortImpl();
void InitDefaultsComponents_Component_OpticalPort();
void InitDefaultsComponents_Component_Port_BreakoutMode_ConfigImpl();
void InitDefaultsComponents_Component_Port_BreakoutMode_Config();
void InitDefaultsComponents_Component_Port_BreakoutMode_StateImpl();
void InitDefaultsComponents_Component_Port_BreakoutMode_State();
void InitDefaultsComponents_Component_Port_BreakoutModeImpl();
void InitDefaultsComponents_Component_Port_BreakoutMode();
void InitDefaultsComponents_Component_Port_ConfigImpl();
void InitDefaultsComponents_Component_Port_Config();
void InitDefaultsComponents_Component_Port_StateImpl();
void InitDefaultsComponents_Component_Port_State();
void InitDefaultsComponents_Component_PortImpl();
void InitDefaultsComponents_Component_Port();
void InitDefaultsComponents_Component_PowerSupply_ConfigImpl();
void InitDefaultsComponents_Component_PowerSupply_Config();
void InitDefaultsComponents_Component_PowerSupply_StateImpl();
void InitDefaultsComponents_Component_PowerSupply_State();
void InitDefaultsComponents_Component_PowerSupplyImpl();
void InitDefaultsComponents_Component_PowerSupply();
void InitDefaultsComponents_Component_Properties_Property_ConfigImpl();
void InitDefaultsComponents_Component_Properties_Property_Config();
void InitDefaultsComponents_Component_Properties_Property_StateImpl();
void InitDefaultsComponents_Component_Properties_Property_State();
void InitDefaultsComponents_Component_Properties_PropertyImpl();
void InitDefaultsComponents_Component_Properties_Property();
void InitDefaultsComponents_Component_Properties_PropertyKeyImpl();
void InitDefaultsComponents_Component_Properties_PropertyKey();
void InitDefaultsComponents_Component_PropertiesImpl();
void InitDefaultsComponents_Component_Properties();
void InitDefaultsComponents_Component_State_MemoryImpl();
void InitDefaultsComponents_Component_State_Memory();
void InitDefaultsComponents_Component_State_TemperatureImpl();
void InitDefaultsComponents_Component_State_Temperature();
void InitDefaultsComponents_Component_StateImpl();
void InitDefaultsComponents_Component_State();
void InitDefaultsComponents_Component_Storage_ConfigImpl();
void InitDefaultsComponents_Component_Storage_Config();
void InitDefaultsComponents_Component_Storage_StateImpl();
void InitDefaultsComponents_Component_Storage_State();
void InitDefaultsComponents_Component_StorageImpl();
void InitDefaultsComponents_Component_Storage();
void InitDefaultsComponents_Component_Subcomponents_Subcomponent_ConfigImpl();
void InitDefaultsComponents_Component_Subcomponents_Subcomponent_Config();
void InitDefaultsComponents_Component_Subcomponents_Subcomponent_StateImpl();
void InitDefaultsComponents_Component_Subcomponents_Subcomponent_State();
void InitDefaultsComponents_Component_Subcomponents_SubcomponentImpl();
void InitDefaultsComponents_Component_Subcomponents_Subcomponent();
void InitDefaultsComponents_Component_Subcomponents_SubcomponentKeyImpl();
void InitDefaultsComponents_Component_Subcomponents_SubcomponentKey();
void InitDefaultsComponents_Component_SubcomponentsImpl();
void InitDefaultsComponents_Component_Subcomponents();
void InitDefaultsComponents_Component_Transceiver_ConfigImpl();
void InitDefaultsComponents_Component_Transceiver_Config();
void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_ConfigImpl();
void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_Config();
void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_InputPowerImpl();
void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_InputPower();
void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrentImpl();
void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent();
void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_OutputPowerImpl();
void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower();
void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_StateImpl();
void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State();
void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_ChannelImpl();
void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel();
void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_ChannelKeyImpl();
void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_ChannelKey();
void InitDefaultsComponents_Component_Transceiver_PhysicalChannelsImpl();
void InitDefaultsComponents_Component_Transceiver_PhysicalChannels();
void InitDefaultsComponents_Component_Transceiver_State_InputPowerImpl();
void InitDefaultsComponents_Component_Transceiver_State_InputPower();
void InitDefaultsComponents_Component_Transceiver_State_LaserBiasCurrentImpl();
void InitDefaultsComponents_Component_Transceiver_State_LaserBiasCurrent();
void InitDefaultsComponents_Component_Transceiver_State_OutputPowerImpl();
void InitDefaultsComponents_Component_Transceiver_State_OutputPower();
void InitDefaultsComponents_Component_Transceiver_StateImpl();
void InitDefaultsComponents_Component_Transceiver_State();
void InitDefaultsComponents_Component_TransceiverImpl();
void InitDefaultsComponents_Component_Transceiver();
void InitDefaultsComponents_ComponentImpl();
void InitDefaultsComponents_Component();
void InitDefaultsComponents_ComponentKeyImpl();
void InitDefaultsComponents_ComponentKey();
void InitDefaultsComponentsImpl();
void InitDefaultsComponents();
inline void InitDefaults() {
  InitDefaultsComponents_Component_Backplane_Config();
  InitDefaultsComponents_Component_Backplane_State();
  InitDefaultsComponents_Component_Backplane();
  InitDefaultsComponents_Component_Chassis_Config();
  InitDefaultsComponents_Component_Chassis_State();
  InitDefaultsComponents_Component_Chassis();
  InitDefaultsComponents_Component_Config();
  InitDefaultsComponents_Component_Cpu_Config();
  InitDefaultsComponents_Component_Cpu_State();
  InitDefaultsComponents_Component_Cpu_Utilization_State();
  InitDefaultsComponents_Component_Cpu_Utilization();
  InitDefaultsComponents_Component_Cpu();
  InitDefaultsComponents_Component_Fabric_Config();
  InitDefaultsComponents_Component_Fabric_State();
  InitDefaultsComponents_Component_Fabric();
  InitDefaultsComponents_Component_Fan_Config();
  InitDefaultsComponents_Component_Fan_State();
  InitDefaultsComponents_Component_Fan();
  InitDefaultsComponents_Component_IntegratedCircuit_Config();
  InitDefaultsComponents_Component_IntegratedCircuit_State();
  InitDefaultsComponents_Component_IntegratedCircuit();
  InitDefaultsComponents_Component_Linecard_Config();
  InitDefaultsComponents_Component_Linecard_State();
  InitDefaultsComponents_Component_Linecard();
  InitDefaultsComponents_Component_OpticalChannel_Config();
  InitDefaultsComponents_Component_OpticalChannel_State_ChromaticDispersion();
  InitDefaultsComponents_Component_OpticalChannel_State_InputPower();
  InitDefaultsComponents_Component_OpticalChannel_State_LaserBiasCurrent();
  InitDefaultsComponents_Component_OpticalChannel_State_OutputPower();
  InitDefaultsComponents_Component_OpticalChannel_State_PolarizationDependentLoss();
  InitDefaultsComponents_Component_OpticalChannel_State_PolarizationModeDispersion();
  InitDefaultsComponents_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion();
  InitDefaultsComponents_Component_OpticalChannel_State();
  InitDefaultsComponents_Component_OpticalChannel();
  InitDefaultsComponents_Component_OpticalPort_Config();
  InitDefaultsComponents_Component_OpticalPort_State_InputPower();
  InitDefaultsComponents_Component_OpticalPort_State_OutputPower();
  InitDefaultsComponents_Component_OpticalPort_State();
  InitDefaultsComponents_Component_OpticalPort();
  InitDefaultsComponents_Component_Port_BreakoutMode_Config();
  InitDefaultsComponents_Component_Port_BreakoutMode_State();
  InitDefaultsComponents_Component_Port_BreakoutMode();
  InitDefaultsComponents_Component_Port_Config();
  InitDefaultsComponents_Component_Port_State();
  InitDefaultsComponents_Component_Port();
  InitDefaultsComponents_Component_PowerSupply_Config();
  InitDefaultsComponents_Component_PowerSupply_State();
  InitDefaultsComponents_Component_PowerSupply();
  InitDefaultsComponents_Component_Properties_Property_Config();
  InitDefaultsComponents_Component_Properties_Property_State();
  InitDefaultsComponents_Component_Properties_Property();
  InitDefaultsComponents_Component_Properties_PropertyKey();
  InitDefaultsComponents_Component_Properties();
  InitDefaultsComponents_Component_State_Memory();
  InitDefaultsComponents_Component_State_Temperature();
  InitDefaultsComponents_Component_State();
  InitDefaultsComponents_Component_Storage_Config();
  InitDefaultsComponents_Component_Storage_State();
  InitDefaultsComponents_Component_Storage();
  InitDefaultsComponents_Component_Subcomponents_Subcomponent_Config();
  InitDefaultsComponents_Component_Subcomponents_Subcomponent_State();
  InitDefaultsComponents_Component_Subcomponents_Subcomponent();
  InitDefaultsComponents_Component_Subcomponents_SubcomponentKey();
  InitDefaultsComponents_Component_Subcomponents();
  InitDefaultsComponents_Component_Transceiver_Config();
  InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_Config();
  InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_InputPower();
  InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent();
  InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower();
  InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State();
  InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel();
  InitDefaultsComponents_Component_Transceiver_PhysicalChannels_ChannelKey();
  InitDefaultsComponents_Component_Transceiver_PhysicalChannels();
  InitDefaultsComponents_Component_Transceiver_State_InputPower();
  InitDefaultsComponents_Component_Transceiver_State_LaserBiasCurrent();
  InitDefaultsComponents_Component_Transceiver_State_OutputPower();
  InitDefaultsComponents_Component_Transceiver_State();
  InitDefaultsComponents_Component_Transceiver();
  InitDefaultsComponents_Component();
  InitDefaultsComponents_ComponentKey();
  InitDefaultsComponents();
}
}  // namespace protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto
namespace openconfig {
namespace openconfig_platform {
class Components;
class ComponentsDefaultTypeInternal;
extern ComponentsDefaultTypeInternal _Components_default_instance_;
class Components_Component;
class Components_ComponentDefaultTypeInternal;
extern Components_ComponentDefaultTypeInternal _Components_Component_default_instance_;
class Components_ComponentKey;
class Components_ComponentKeyDefaultTypeInternal;
extern Components_ComponentKeyDefaultTypeInternal _Components_ComponentKey_default_instance_;
class Components_Component_Backplane;
class Components_Component_BackplaneDefaultTypeInternal;
extern Components_Component_BackplaneDefaultTypeInternal _Components_Component_Backplane_default_instance_;
class Components_Component_Backplane_Config;
class Components_Component_Backplane_ConfigDefaultTypeInternal;
extern Components_Component_Backplane_ConfigDefaultTypeInternal _Components_Component_Backplane_Config_default_instance_;
class Components_Component_Backplane_State;
class Components_Component_Backplane_StateDefaultTypeInternal;
extern Components_Component_Backplane_StateDefaultTypeInternal _Components_Component_Backplane_State_default_instance_;
class Components_Component_Chassis;
class Components_Component_ChassisDefaultTypeInternal;
extern Components_Component_ChassisDefaultTypeInternal _Components_Component_Chassis_default_instance_;
class Components_Component_Chassis_Config;
class Components_Component_Chassis_ConfigDefaultTypeInternal;
extern Components_Component_Chassis_ConfigDefaultTypeInternal _Components_Component_Chassis_Config_default_instance_;
class Components_Component_Chassis_State;
class Components_Component_Chassis_StateDefaultTypeInternal;
extern Components_Component_Chassis_StateDefaultTypeInternal _Components_Component_Chassis_State_default_instance_;
class Components_Component_Config;
class Components_Component_ConfigDefaultTypeInternal;
extern Components_Component_ConfigDefaultTypeInternal _Components_Component_Config_default_instance_;
class Components_Component_Cpu;
class Components_Component_CpuDefaultTypeInternal;
extern Components_Component_CpuDefaultTypeInternal _Components_Component_Cpu_default_instance_;
class Components_Component_Cpu_Config;
class Components_Component_Cpu_ConfigDefaultTypeInternal;
extern Components_Component_Cpu_ConfigDefaultTypeInternal _Components_Component_Cpu_Config_default_instance_;
class Components_Component_Cpu_State;
class Components_Component_Cpu_StateDefaultTypeInternal;
extern Components_Component_Cpu_StateDefaultTypeInternal _Components_Component_Cpu_State_default_instance_;
class Components_Component_Cpu_Utilization;
class Components_Component_Cpu_UtilizationDefaultTypeInternal;
extern Components_Component_Cpu_UtilizationDefaultTypeInternal _Components_Component_Cpu_Utilization_default_instance_;
class Components_Component_Cpu_Utilization_State;
class Components_Component_Cpu_Utilization_StateDefaultTypeInternal;
extern Components_Component_Cpu_Utilization_StateDefaultTypeInternal _Components_Component_Cpu_Utilization_State_default_instance_;
class Components_Component_Fabric;
class Components_Component_FabricDefaultTypeInternal;
extern Components_Component_FabricDefaultTypeInternal _Components_Component_Fabric_default_instance_;
class Components_Component_Fabric_Config;
class Components_Component_Fabric_ConfigDefaultTypeInternal;
extern Components_Component_Fabric_ConfigDefaultTypeInternal _Components_Component_Fabric_Config_default_instance_;
class Components_Component_Fabric_State;
class Components_Component_Fabric_StateDefaultTypeInternal;
extern Components_Component_Fabric_StateDefaultTypeInternal _Components_Component_Fabric_State_default_instance_;
class Components_Component_Fan;
class Components_Component_FanDefaultTypeInternal;
extern Components_Component_FanDefaultTypeInternal _Components_Component_Fan_default_instance_;
class Components_Component_Fan_Config;
class Components_Component_Fan_ConfigDefaultTypeInternal;
extern Components_Component_Fan_ConfigDefaultTypeInternal _Components_Component_Fan_Config_default_instance_;
class Components_Component_Fan_State;
class Components_Component_Fan_StateDefaultTypeInternal;
extern Components_Component_Fan_StateDefaultTypeInternal _Components_Component_Fan_State_default_instance_;
class Components_Component_IntegratedCircuit;
class Components_Component_IntegratedCircuitDefaultTypeInternal;
extern Components_Component_IntegratedCircuitDefaultTypeInternal _Components_Component_IntegratedCircuit_default_instance_;
class Components_Component_IntegratedCircuit_Config;
class Components_Component_IntegratedCircuit_ConfigDefaultTypeInternal;
extern Components_Component_IntegratedCircuit_ConfigDefaultTypeInternal _Components_Component_IntegratedCircuit_Config_default_instance_;
class Components_Component_IntegratedCircuit_State;
class Components_Component_IntegratedCircuit_StateDefaultTypeInternal;
extern Components_Component_IntegratedCircuit_StateDefaultTypeInternal _Components_Component_IntegratedCircuit_State_default_instance_;
class Components_Component_Linecard;
class Components_Component_LinecardDefaultTypeInternal;
extern Components_Component_LinecardDefaultTypeInternal _Components_Component_Linecard_default_instance_;
class Components_Component_Linecard_Config;
class Components_Component_Linecard_ConfigDefaultTypeInternal;
extern Components_Component_Linecard_ConfigDefaultTypeInternal _Components_Component_Linecard_Config_default_instance_;
class Components_Component_Linecard_State;
class Components_Component_Linecard_StateDefaultTypeInternal;
extern Components_Component_Linecard_StateDefaultTypeInternal _Components_Component_Linecard_State_default_instance_;
class Components_Component_OpticalChannel;
class Components_Component_OpticalChannelDefaultTypeInternal;
extern Components_Component_OpticalChannelDefaultTypeInternal _Components_Component_OpticalChannel_default_instance_;
class Components_Component_OpticalChannel_Config;
class Components_Component_OpticalChannel_ConfigDefaultTypeInternal;
extern Components_Component_OpticalChannel_ConfigDefaultTypeInternal _Components_Component_OpticalChannel_Config_default_instance_;
class Components_Component_OpticalChannel_State;
class Components_Component_OpticalChannel_StateDefaultTypeInternal;
extern Components_Component_OpticalChannel_StateDefaultTypeInternal _Components_Component_OpticalChannel_State_default_instance_;
class Components_Component_OpticalChannel_State_ChromaticDispersion;
class Components_Component_OpticalChannel_State_ChromaticDispersionDefaultTypeInternal;
extern Components_Component_OpticalChannel_State_ChromaticDispersionDefaultTypeInternal _Components_Component_OpticalChannel_State_ChromaticDispersion_default_instance_;
class Components_Component_OpticalChannel_State_InputPower;
class Components_Component_OpticalChannel_State_InputPowerDefaultTypeInternal;
extern Components_Component_OpticalChannel_State_InputPowerDefaultTypeInternal _Components_Component_OpticalChannel_State_InputPower_default_instance_;
class Components_Component_OpticalChannel_State_LaserBiasCurrent;
class Components_Component_OpticalChannel_State_LaserBiasCurrentDefaultTypeInternal;
extern Components_Component_OpticalChannel_State_LaserBiasCurrentDefaultTypeInternal _Components_Component_OpticalChannel_State_LaserBiasCurrent_default_instance_;
class Components_Component_OpticalChannel_State_OutputPower;
class Components_Component_OpticalChannel_State_OutputPowerDefaultTypeInternal;
extern Components_Component_OpticalChannel_State_OutputPowerDefaultTypeInternal _Components_Component_OpticalChannel_State_OutputPower_default_instance_;
class Components_Component_OpticalChannel_State_PolarizationDependentLoss;
class Components_Component_OpticalChannel_State_PolarizationDependentLossDefaultTypeInternal;
extern Components_Component_OpticalChannel_State_PolarizationDependentLossDefaultTypeInternal _Components_Component_OpticalChannel_State_PolarizationDependentLoss_default_instance_;
class Components_Component_OpticalChannel_State_PolarizationModeDispersion;
class Components_Component_OpticalChannel_State_PolarizationModeDispersionDefaultTypeInternal;
extern Components_Component_OpticalChannel_State_PolarizationModeDispersionDefaultTypeInternal _Components_Component_OpticalChannel_State_PolarizationModeDispersion_default_instance_;
class Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion;
class Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersionDefaultTypeInternal;
extern Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersionDefaultTypeInternal _Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion_default_instance_;
class Components_Component_OpticalPort;
class Components_Component_OpticalPortDefaultTypeInternal;
extern Components_Component_OpticalPortDefaultTypeInternal _Components_Component_OpticalPort_default_instance_;
class Components_Component_OpticalPort_Config;
class Components_Component_OpticalPort_ConfigDefaultTypeInternal;
extern Components_Component_OpticalPort_ConfigDefaultTypeInternal _Components_Component_OpticalPort_Config_default_instance_;
class Components_Component_OpticalPort_State;
class Components_Component_OpticalPort_StateDefaultTypeInternal;
extern Components_Component_OpticalPort_StateDefaultTypeInternal _Components_Component_OpticalPort_State_default_instance_;
class Components_Component_OpticalPort_State_InputPower;
class Components_Component_OpticalPort_State_InputPowerDefaultTypeInternal;
extern Components_Component_OpticalPort_State_InputPowerDefaultTypeInternal _Components_Component_OpticalPort_State_InputPower_default_instance_;
class Components_Component_OpticalPort_State_OutputPower;
class Components_Component_OpticalPort_State_OutputPowerDefaultTypeInternal;
extern Components_Component_OpticalPort_State_OutputPowerDefaultTypeInternal _Components_Component_OpticalPort_State_OutputPower_default_instance_;
class Components_Component_Port;
class Components_Component_PortDefaultTypeInternal;
extern Components_Component_PortDefaultTypeInternal _Components_Component_Port_default_instance_;
class Components_Component_Port_BreakoutMode;
class Components_Component_Port_BreakoutModeDefaultTypeInternal;
extern Components_Component_Port_BreakoutModeDefaultTypeInternal _Components_Component_Port_BreakoutMode_default_instance_;
class Components_Component_Port_BreakoutMode_Config;
class Components_Component_Port_BreakoutMode_ConfigDefaultTypeInternal;
extern Components_Component_Port_BreakoutMode_ConfigDefaultTypeInternal _Components_Component_Port_BreakoutMode_Config_default_instance_;
class Components_Component_Port_BreakoutMode_State;
class Components_Component_Port_BreakoutMode_StateDefaultTypeInternal;
extern Components_Component_Port_BreakoutMode_StateDefaultTypeInternal _Components_Component_Port_BreakoutMode_State_default_instance_;
class Components_Component_Port_Config;
class Components_Component_Port_ConfigDefaultTypeInternal;
extern Components_Component_Port_ConfigDefaultTypeInternal _Components_Component_Port_Config_default_instance_;
class Components_Component_Port_State;
class Components_Component_Port_StateDefaultTypeInternal;
extern Components_Component_Port_StateDefaultTypeInternal _Components_Component_Port_State_default_instance_;
class Components_Component_PowerSupply;
class Components_Component_PowerSupplyDefaultTypeInternal;
extern Components_Component_PowerSupplyDefaultTypeInternal _Components_Component_PowerSupply_default_instance_;
class Components_Component_PowerSupply_Config;
class Components_Component_PowerSupply_ConfigDefaultTypeInternal;
extern Components_Component_PowerSupply_ConfigDefaultTypeInternal _Components_Component_PowerSupply_Config_default_instance_;
class Components_Component_PowerSupply_State;
class Components_Component_PowerSupply_StateDefaultTypeInternal;
extern Components_Component_PowerSupply_StateDefaultTypeInternal _Components_Component_PowerSupply_State_default_instance_;
class Components_Component_Properties;
class Components_Component_PropertiesDefaultTypeInternal;
extern Components_Component_PropertiesDefaultTypeInternal _Components_Component_Properties_default_instance_;
class Components_Component_Properties_Property;
class Components_Component_Properties_PropertyDefaultTypeInternal;
extern Components_Component_Properties_PropertyDefaultTypeInternal _Components_Component_Properties_Property_default_instance_;
class Components_Component_Properties_PropertyKey;
class Components_Component_Properties_PropertyKeyDefaultTypeInternal;
extern Components_Component_Properties_PropertyKeyDefaultTypeInternal _Components_Component_Properties_PropertyKey_default_instance_;
class Components_Component_Properties_Property_Config;
class Components_Component_Properties_Property_ConfigDefaultTypeInternal;
extern Components_Component_Properties_Property_ConfigDefaultTypeInternal _Components_Component_Properties_Property_Config_default_instance_;
class Components_Component_Properties_Property_State;
class Components_Component_Properties_Property_StateDefaultTypeInternal;
extern Components_Component_Properties_Property_StateDefaultTypeInternal _Components_Component_Properties_Property_State_default_instance_;
class Components_Component_State;
class Components_Component_StateDefaultTypeInternal;
extern Components_Component_StateDefaultTypeInternal _Components_Component_State_default_instance_;
class Components_Component_State_Memory;
class Components_Component_State_MemoryDefaultTypeInternal;
extern Components_Component_State_MemoryDefaultTypeInternal _Components_Component_State_Memory_default_instance_;
class Components_Component_State_Temperature;
class Components_Component_State_TemperatureDefaultTypeInternal;
extern Components_Component_State_TemperatureDefaultTypeInternal _Components_Component_State_Temperature_default_instance_;
class Components_Component_Storage;
class Components_Component_StorageDefaultTypeInternal;
extern Components_Component_StorageDefaultTypeInternal _Components_Component_Storage_default_instance_;
class Components_Component_Storage_Config;
class Components_Component_Storage_ConfigDefaultTypeInternal;
extern Components_Component_Storage_ConfigDefaultTypeInternal _Components_Component_Storage_Config_default_instance_;
class Components_Component_Storage_State;
class Components_Component_Storage_StateDefaultTypeInternal;
extern Components_Component_Storage_StateDefaultTypeInternal _Components_Component_Storage_State_default_instance_;
class Components_Component_Subcomponents;
class Components_Component_SubcomponentsDefaultTypeInternal;
extern Components_Component_SubcomponentsDefaultTypeInternal _Components_Component_Subcomponents_default_instance_;
class Components_Component_Subcomponents_Subcomponent;
class Components_Component_Subcomponents_SubcomponentDefaultTypeInternal;
extern Components_Component_Subcomponents_SubcomponentDefaultTypeInternal _Components_Component_Subcomponents_Subcomponent_default_instance_;
class Components_Component_Subcomponents_SubcomponentKey;
class Components_Component_Subcomponents_SubcomponentKeyDefaultTypeInternal;
extern Components_Component_Subcomponents_SubcomponentKeyDefaultTypeInternal _Components_Component_Subcomponents_SubcomponentKey_default_instance_;
class Components_Component_Subcomponents_Subcomponent_Config;
class Components_Component_Subcomponents_Subcomponent_ConfigDefaultTypeInternal;
extern Components_Component_Subcomponents_Subcomponent_ConfigDefaultTypeInternal _Components_Component_Subcomponents_Subcomponent_Config_default_instance_;
class Components_Component_Subcomponents_Subcomponent_State;
class Components_Component_Subcomponents_Subcomponent_StateDefaultTypeInternal;
extern Components_Component_Subcomponents_Subcomponent_StateDefaultTypeInternal _Components_Component_Subcomponents_Subcomponent_State_default_instance_;
class Components_Component_Transceiver;
class Components_Component_TransceiverDefaultTypeInternal;
extern Components_Component_TransceiverDefaultTypeInternal _Components_Component_Transceiver_default_instance_;
class Components_Component_Transceiver_Config;
class Components_Component_Transceiver_ConfigDefaultTypeInternal;
extern Components_Component_Transceiver_ConfigDefaultTypeInternal _Components_Component_Transceiver_Config_default_instance_;
class Components_Component_Transceiver_PhysicalChannels;
class Components_Component_Transceiver_PhysicalChannelsDefaultTypeInternal;
extern Components_Component_Transceiver_PhysicalChannelsDefaultTypeInternal _Components_Component_Transceiver_PhysicalChannels_default_instance_;
class Components_Component_Transceiver_PhysicalChannels_Channel;
class Components_Component_Transceiver_PhysicalChannels_ChannelDefaultTypeInternal;
extern Components_Component_Transceiver_PhysicalChannels_ChannelDefaultTypeInternal _Components_Component_Transceiver_PhysicalChannels_Channel_default_instance_;
class Components_Component_Transceiver_PhysicalChannels_ChannelKey;
class Components_Component_Transceiver_PhysicalChannels_ChannelKeyDefaultTypeInternal;
extern Components_Component_Transceiver_PhysicalChannels_ChannelKeyDefaultTypeInternal _Components_Component_Transceiver_PhysicalChannels_ChannelKey_default_instance_;
class Components_Component_Transceiver_PhysicalChannels_Channel_Config;
class Components_Component_Transceiver_PhysicalChannels_Channel_ConfigDefaultTypeInternal;
extern Components_Component_Transceiver_PhysicalChannels_Channel_ConfigDefaultTypeInternal _Components_Component_Transceiver_PhysicalChannels_Channel_Config_default_instance_;
class Components_Component_Transceiver_PhysicalChannels_Channel_State;
class Components_Component_Transceiver_PhysicalChannels_Channel_StateDefaultTypeInternal;
extern Components_Component_Transceiver_PhysicalChannels_Channel_StateDefaultTypeInternal _Components_Component_Transceiver_PhysicalChannels_Channel_State_default_instance_;
class Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower;
class Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPowerDefaultTypeInternal;
extern Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPowerDefaultTypeInternal _Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower_default_instance_;
class Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent;
class Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrentDefaultTypeInternal;
extern Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrentDefaultTypeInternal _Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent_default_instance_;
class Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower;
class Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPowerDefaultTypeInternal;
extern Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPowerDefaultTypeInternal _Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower_default_instance_;
class Components_Component_Transceiver_State;
class Components_Component_Transceiver_StateDefaultTypeInternal;
extern Components_Component_Transceiver_StateDefaultTypeInternal _Components_Component_Transceiver_State_default_instance_;
class Components_Component_Transceiver_State_InputPower;
class Components_Component_Transceiver_State_InputPowerDefaultTypeInternal;
extern Components_Component_Transceiver_State_InputPowerDefaultTypeInternal _Components_Component_Transceiver_State_InputPower_default_instance_;
class Components_Component_Transceiver_State_LaserBiasCurrent;
class Components_Component_Transceiver_State_LaserBiasCurrentDefaultTypeInternal;
extern Components_Component_Transceiver_State_LaserBiasCurrentDefaultTypeInternal _Components_Component_Transceiver_State_LaserBiasCurrent_default_instance_;
class Components_Component_Transceiver_State_OutputPower;
class Components_Component_Transceiver_State_OutputPowerDefaultTypeInternal;
extern Components_Component_Transceiver_State_OutputPowerDefaultTypeInternal _Components_Component_Transceiver_State_OutputPower_default_instance_;
}  // namespace openconfig_platform
}  // namespace openconfig
namespace openconfig {
namespace openconfig_platform {

enum Components_Component_Transceiver_State_Present {
  Components_Component_Transceiver_State_Present_PRESENT_UNSET = 0,
  Components_Component_Transceiver_State_Present_PRESENT_PRESENT = 1,
  Components_Component_Transceiver_State_Present_PRESENT_NOT_PRESENT = 2,
  Components_Component_Transceiver_State_Present_Components_Component_Transceiver_State_Present_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  Components_Component_Transceiver_State_Present_Components_Component_Transceiver_State_Present_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool Components_Component_Transceiver_State_Present_IsValid(int value);
const Components_Component_Transceiver_State_Present Components_Component_Transceiver_State_Present_Present_MIN = Components_Component_Transceiver_State_Present_PRESENT_UNSET;
const Components_Component_Transceiver_State_Present Components_Component_Transceiver_State_Present_Present_MAX = Components_Component_Transceiver_State_Present_PRESENT_NOT_PRESENT;
const int Components_Component_Transceiver_State_Present_Present_ARRAYSIZE = Components_Component_Transceiver_State_Present_Present_MAX + 1;

const ::google::protobuf::EnumDescriptor* Components_Component_Transceiver_State_Present_descriptor();
inline const ::std::string& Components_Component_Transceiver_State_Present_Name(Components_Component_Transceiver_State_Present value) {
  return ::google::protobuf::internal::NameOfEnum(
    Components_Component_Transceiver_State_Present_descriptor(), value);
}
inline bool Components_Component_Transceiver_State_Present_Parse(
    const ::std::string& name, Components_Component_Transceiver_State_Present* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Components_Component_Transceiver_State_Present>(
    Components_Component_Transceiver_State_Present_descriptor(), name, value);
}
// ===================================================================

class Components_Component_Backplane_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Backplane.Config) */ {
 public:
  Components_Component_Backplane_Config();
  virtual ~Components_Component_Backplane_Config();

  Components_Component_Backplane_Config(const Components_Component_Backplane_Config& from);

  inline Components_Component_Backplane_Config& operator=(const Components_Component_Backplane_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Backplane_Config(Components_Component_Backplane_Config&& from) noexcept
    : Components_Component_Backplane_Config() {
    *this = ::std::move(from);
  }

  inline Components_Component_Backplane_Config& operator=(Components_Component_Backplane_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Backplane_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Backplane_Config* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Backplane_Config*>(
               &_Components_Component_Backplane_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Components_Component_Backplane_Config* other);
  friend void swap(Components_Component_Backplane_Config& a, Components_Component_Backplane_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Backplane_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Backplane_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Backplane_Config& from);
  void MergeFrom(const Components_Component_Backplane_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Backplane_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Backplane.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Backplane_ConfigImpl();
};
// -------------------------------------------------------------------

class Components_Component_Backplane_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Backplane.State) */ {
 public:
  Components_Component_Backplane_State();
  virtual ~Components_Component_Backplane_State();

  Components_Component_Backplane_State(const Components_Component_Backplane_State& from);

  inline Components_Component_Backplane_State& operator=(const Components_Component_Backplane_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Backplane_State(Components_Component_Backplane_State&& from) noexcept
    : Components_Component_Backplane_State() {
    *this = ::std::move(from);
  }

  inline Components_Component_Backplane_State& operator=(Components_Component_Backplane_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Backplane_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Backplane_State* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Backplane_State*>(
               &_Components_Component_Backplane_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Components_Component_Backplane_State* other);
  friend void swap(Components_Component_Backplane_State& a, Components_Component_Backplane_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Backplane_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Backplane_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Backplane_State& from);
  void MergeFrom(const Components_Component_Backplane_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Backplane_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Backplane.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Backplane_StateImpl();
};
// -------------------------------------------------------------------

class Components_Component_Backplane : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Backplane) */ {
 public:
  Components_Component_Backplane();
  virtual ~Components_Component_Backplane();

  Components_Component_Backplane(const Components_Component_Backplane& from);

  inline Components_Component_Backplane& operator=(const Components_Component_Backplane& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Backplane(Components_Component_Backplane&& from) noexcept
    : Components_Component_Backplane() {
    *this = ::std::move(from);
  }

  inline Components_Component_Backplane& operator=(Components_Component_Backplane&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Backplane& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Backplane* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Backplane*>(
               &_Components_Component_Backplane_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Components_Component_Backplane* other);
  friend void swap(Components_Component_Backplane& a, Components_Component_Backplane& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Backplane* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Backplane* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Backplane& from);
  void MergeFrom(const Components_Component_Backplane& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Backplane* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component_Backplane_Config Config;
  typedef Components_Component_Backplane_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_platform.Components.Component.Backplane.Config config = 112681526 [(.yext.schemapath) = "/components/component/backplane/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 112681526;
  const ::openconfig::openconfig_platform::Components_Component_Backplane_Config& config() const;
  ::openconfig::openconfig_platform::Components_Component_Backplane_Config* release_config();
  ::openconfig::openconfig_platform::Components_Component_Backplane_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_platform::Components_Component_Backplane_Config* config);

  // .openconfig.openconfig_platform.Components.Component.Backplane.State state = 238113123 [(.yext.schemapath) = "/components/component/backplane/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 238113123;
  const ::openconfig::openconfig_platform::Components_Component_Backplane_State& state() const;
  ::openconfig::openconfig_platform::Components_Component_Backplane_State* release_state();
  ::openconfig::openconfig_platform::Components_Component_Backplane_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_platform::Components_Component_Backplane_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Backplane)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_platform::Components_Component_Backplane_Config* config_;
  ::openconfig::openconfig_platform::Components_Component_Backplane_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_BackplaneImpl();
};
// -------------------------------------------------------------------

class Components_Component_Chassis_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Chassis.Config) */ {
 public:
  Components_Component_Chassis_Config();
  virtual ~Components_Component_Chassis_Config();

  Components_Component_Chassis_Config(const Components_Component_Chassis_Config& from);

  inline Components_Component_Chassis_Config& operator=(const Components_Component_Chassis_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Chassis_Config(Components_Component_Chassis_Config&& from) noexcept
    : Components_Component_Chassis_Config() {
    *this = ::std::move(from);
  }

  inline Components_Component_Chassis_Config& operator=(Components_Component_Chassis_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Chassis_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Chassis_Config* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Chassis_Config*>(
               &_Components_Component_Chassis_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(Components_Component_Chassis_Config* other);
  friend void swap(Components_Component_Chassis_Config& a, Components_Component_Chassis_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Chassis_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Chassis_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Chassis_Config& from);
  void MergeFrom(const Components_Component_Chassis_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Chassis_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Chassis.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Chassis_ConfigImpl();
};
// -------------------------------------------------------------------

class Components_Component_Chassis_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Chassis.State) */ {
 public:
  Components_Component_Chassis_State();
  virtual ~Components_Component_Chassis_State();

  Components_Component_Chassis_State(const Components_Component_Chassis_State& from);

  inline Components_Component_Chassis_State& operator=(const Components_Component_Chassis_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Chassis_State(Components_Component_Chassis_State&& from) noexcept
    : Components_Component_Chassis_State() {
    *this = ::std::move(from);
  }

  inline Components_Component_Chassis_State& operator=(Components_Component_Chassis_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Chassis_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Chassis_State* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Chassis_State*>(
               &_Components_Component_Chassis_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Components_Component_Chassis_State* other);
  friend void swap(Components_Component_Chassis_State& a, Components_Component_Chassis_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Chassis_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Chassis_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Chassis_State& from);
  void MergeFrom(const Components_Component_Chassis_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Chassis_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Chassis.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Chassis_StateImpl();
};
// -------------------------------------------------------------------

class Components_Component_Chassis : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Chassis) */ {
 public:
  Components_Component_Chassis();
  virtual ~Components_Component_Chassis();

  Components_Component_Chassis(const Components_Component_Chassis& from);

  inline Components_Component_Chassis& operator=(const Components_Component_Chassis& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Chassis(Components_Component_Chassis&& from) noexcept
    : Components_Component_Chassis() {
    *this = ::std::move(from);
  }

  inline Components_Component_Chassis& operator=(Components_Component_Chassis&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Chassis& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Chassis* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Chassis*>(
               &_Components_Component_Chassis_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(Components_Component_Chassis* other);
  friend void swap(Components_Component_Chassis& a, Components_Component_Chassis& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Chassis* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Chassis* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Chassis& from);
  void MergeFrom(const Components_Component_Chassis& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Chassis* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component_Chassis_Config Config;
  typedef Components_Component_Chassis_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_platform.Components.Component.Chassis.State state = 88528910 [(.yext.schemapath) = "/components/component/chassis/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 88528910;
  const ::openconfig::openconfig_platform::Components_Component_Chassis_State& state() const;
  ::openconfig::openconfig_platform::Components_Component_Chassis_State* release_state();
  ::openconfig::openconfig_platform::Components_Component_Chassis_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_platform::Components_Component_Chassis_State* state);

  // .openconfig.openconfig_platform.Components.Component.Chassis.Config config = 473125305 [(.yext.schemapath) = "/components/component/chassis/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 473125305;
  const ::openconfig::openconfig_platform::Components_Component_Chassis_Config& config() const;
  ::openconfig::openconfig_platform::Components_Component_Chassis_Config* release_config();
  ::openconfig::openconfig_platform::Components_Component_Chassis_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_platform::Components_Component_Chassis_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Chassis)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_platform::Components_Component_Chassis_State* state_;
  ::openconfig::openconfig_platform::Components_Component_Chassis_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_ChassisImpl();
};
// -------------------------------------------------------------------

class Components_Component_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Config) */ {
 public:
  Components_Component_Config();
  virtual ~Components_Component_Config();

  Components_Component_Config(const Components_Component_Config& from);

  inline Components_Component_Config& operator=(const Components_Component_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Config(Components_Component_Config&& from) noexcept
    : Components_Component_Config() {
    *this = ::std::move(from);
  }

  inline Components_Component_Config& operator=(Components_Component_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Config* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Config*>(
               &_Components_Component_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(Components_Component_Config* other);
  friend void swap(Components_Component_Config& a, Components_Component_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Config& from);
  void MergeFrom(const Components_Component_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue name = 118287144 [(.yext.schemapath) = "/components/component/config/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 118287144;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* name_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_ConfigImpl();
};
// -------------------------------------------------------------------

class Components_Component_Cpu_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Cpu.Config) */ {
 public:
  Components_Component_Cpu_Config();
  virtual ~Components_Component_Cpu_Config();

  Components_Component_Cpu_Config(const Components_Component_Cpu_Config& from);

  inline Components_Component_Cpu_Config& operator=(const Components_Component_Cpu_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Cpu_Config(Components_Component_Cpu_Config&& from) noexcept
    : Components_Component_Cpu_Config() {
    *this = ::std::move(from);
  }

  inline Components_Component_Cpu_Config& operator=(Components_Component_Cpu_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Cpu_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Cpu_Config* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Cpu_Config*>(
               &_Components_Component_Cpu_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(Components_Component_Cpu_Config* other);
  friend void swap(Components_Component_Cpu_Config& a, Components_Component_Cpu_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Cpu_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Cpu_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Cpu_Config& from);
  void MergeFrom(const Components_Component_Cpu_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Cpu_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Cpu.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Cpu_ConfigImpl();
};
// -------------------------------------------------------------------

class Components_Component_Cpu_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Cpu.State) */ {
 public:
  Components_Component_Cpu_State();
  virtual ~Components_Component_Cpu_State();

  Components_Component_Cpu_State(const Components_Component_Cpu_State& from);

  inline Components_Component_Cpu_State& operator=(const Components_Component_Cpu_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Cpu_State(Components_Component_Cpu_State&& from) noexcept
    : Components_Component_Cpu_State() {
    *this = ::std::move(from);
  }

  inline Components_Component_Cpu_State& operator=(Components_Component_Cpu_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Cpu_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Cpu_State* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Cpu_State*>(
               &_Components_Component_Cpu_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(Components_Component_Cpu_State* other);
  friend void swap(Components_Component_Cpu_State& a, Components_Component_Cpu_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Cpu_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Cpu_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Cpu_State& from);
  void MergeFrom(const Components_Component_Cpu_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Cpu_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Cpu.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Cpu_StateImpl();
};
// -------------------------------------------------------------------

class Components_Component_Cpu_Utilization_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State) */ {
 public:
  Components_Component_Cpu_Utilization_State();
  virtual ~Components_Component_Cpu_Utilization_State();

  Components_Component_Cpu_Utilization_State(const Components_Component_Cpu_Utilization_State& from);

  inline Components_Component_Cpu_Utilization_State& operator=(const Components_Component_Cpu_Utilization_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Cpu_Utilization_State(Components_Component_Cpu_Utilization_State&& from) noexcept
    : Components_Component_Cpu_Utilization_State() {
    *this = ::std::move(from);
  }

  inline Components_Component_Cpu_Utilization_State& operator=(Components_Component_Cpu_Utilization_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Cpu_Utilization_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Cpu_Utilization_State* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Cpu_Utilization_State*>(
               &_Components_Component_Cpu_Utilization_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(Components_Component_Cpu_Utilization_State* other);
  friend void swap(Components_Component_Cpu_Utilization_State& a, Components_Component_Cpu_Utilization_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Cpu_Utilization_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Cpu_Utilization_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Cpu_Utilization_State& from);
  void MergeFrom(const Components_Component_Cpu_Utilization_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Cpu_Utilization_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue max = 40556458 [(.yext.schemapath) = "/components/component/cpu/utilization/state/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 40556458;
  const ::ywrapper::UintValue& max() const;
  ::ywrapper::UintValue* release_max();
  ::ywrapper::UintValue* mutable_max();
  void set_allocated_max(::ywrapper::UintValue* max);

  // .ywrapper.UintValue min = 174777348 [(.yext.schemapath) = "/components/component/cpu/utilization/state/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 174777348;
  const ::ywrapper::UintValue& min() const;
  ::ywrapper::UintValue* release_min();
  ::ywrapper::UintValue* mutable_min();
  void set_allocated_min(::ywrapper::UintValue* min);

  // .ywrapper.UintValue avg = 223138920 [(.yext.schemapath) = "/components/component/cpu/utilization/state/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 223138920;
  const ::ywrapper::UintValue& avg() const;
  ::ywrapper::UintValue* release_avg();
  ::ywrapper::UintValue* mutable_avg();
  void set_allocated_avg(::ywrapper::UintValue* avg);

  // .ywrapper.UintValue interval = 245556819 [(.yext.schemapath) = "/components/component/cpu/utilization/state/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 245556819;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.UintValue instant = 356037459 [(.yext.schemapath) = "/components/component/cpu/utilization/state/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 356037459;
  const ::ywrapper::UintValue& instant() const;
  ::ywrapper::UintValue* release_instant();
  ::ywrapper::UintValue* mutable_instant();
  void set_allocated_instant(::ywrapper::UintValue* instant);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* max_;
  ::ywrapper::UintValue* min_;
  ::ywrapper::UintValue* avg_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::UintValue* instant_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Cpu_Utilization_StateImpl();
};
// -------------------------------------------------------------------

class Components_Component_Cpu_Utilization : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Cpu.Utilization) */ {
 public:
  Components_Component_Cpu_Utilization();
  virtual ~Components_Component_Cpu_Utilization();

  Components_Component_Cpu_Utilization(const Components_Component_Cpu_Utilization& from);

  inline Components_Component_Cpu_Utilization& operator=(const Components_Component_Cpu_Utilization& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Cpu_Utilization(Components_Component_Cpu_Utilization&& from) noexcept
    : Components_Component_Cpu_Utilization() {
    *this = ::std::move(from);
  }

  inline Components_Component_Cpu_Utilization& operator=(Components_Component_Cpu_Utilization&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Cpu_Utilization& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Cpu_Utilization* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Cpu_Utilization*>(
               &_Components_Component_Cpu_Utilization_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(Components_Component_Cpu_Utilization* other);
  friend void swap(Components_Component_Cpu_Utilization& a, Components_Component_Cpu_Utilization& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Cpu_Utilization* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Cpu_Utilization* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Cpu_Utilization& from);
  void MergeFrom(const Components_Component_Cpu_Utilization& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Cpu_Utilization* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component_Cpu_Utilization_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State state = 140553669 [(.yext.schemapath) = "/components/component/cpu/utilization/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 140553669;
  const ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization_State& state() const;
  ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization_State* release_state();
  ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_platform::Components_Component_Cpu_Utilization_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Cpu.Utilization)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Cpu_UtilizationImpl();
};
// -------------------------------------------------------------------

class Components_Component_Cpu : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Cpu) */ {
 public:
  Components_Component_Cpu();
  virtual ~Components_Component_Cpu();

  Components_Component_Cpu(const Components_Component_Cpu& from);

  inline Components_Component_Cpu& operator=(const Components_Component_Cpu& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Cpu(Components_Component_Cpu&& from) noexcept
    : Components_Component_Cpu() {
    *this = ::std::move(from);
  }

  inline Components_Component_Cpu& operator=(Components_Component_Cpu&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Cpu& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Cpu* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Cpu*>(
               &_Components_Component_Cpu_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(Components_Component_Cpu* other);
  friend void swap(Components_Component_Cpu& a, Components_Component_Cpu& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Cpu* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Cpu* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Cpu& from);
  void MergeFrom(const Components_Component_Cpu& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Cpu* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component_Cpu_Config Config;
  typedef Components_Component_Cpu_State State;
  typedef Components_Component_Cpu_Utilization Utilization;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_platform.Components.Component.Cpu.Config config = 14534639 [(.yext.schemapath) = "/components/component/cpu/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 14534639;
  const ::openconfig::openconfig_platform::Components_Component_Cpu_Config& config() const;
  ::openconfig::openconfig_platform::Components_Component_Cpu_Config* release_config();
  ::openconfig::openconfig_platform::Components_Component_Cpu_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_platform::Components_Component_Cpu_Config* config);

  // .openconfig.openconfig_platform.Components.Component.Cpu.Utilization utilization = 437681307 [(.yext.schemapath) = "/components/component/cpu/utilization"];
  bool has_utilization() const;
  void clear_utilization();
  static const int kUtilizationFieldNumber = 437681307;
  const ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization& utilization() const;
  ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization* release_utilization();
  ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization* mutable_utilization();
  void set_allocated_utilization(::openconfig::openconfig_platform::Components_Component_Cpu_Utilization* utilization);

  // .openconfig.openconfig_platform.Components.Component.Cpu.State state = 493359968 [(.yext.schemapath) = "/components/component/cpu/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 493359968;
  const ::openconfig::openconfig_platform::Components_Component_Cpu_State& state() const;
  ::openconfig::openconfig_platform::Components_Component_Cpu_State* release_state();
  ::openconfig::openconfig_platform::Components_Component_Cpu_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_platform::Components_Component_Cpu_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Cpu)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_platform::Components_Component_Cpu_Config* config_;
  ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization* utilization_;
  ::openconfig::openconfig_platform::Components_Component_Cpu_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_CpuImpl();
};
// -------------------------------------------------------------------

class Components_Component_Fabric_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Fabric.Config) */ {
 public:
  Components_Component_Fabric_Config();
  virtual ~Components_Component_Fabric_Config();

  Components_Component_Fabric_Config(const Components_Component_Fabric_Config& from);

  inline Components_Component_Fabric_Config& operator=(const Components_Component_Fabric_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Fabric_Config(Components_Component_Fabric_Config&& from) noexcept
    : Components_Component_Fabric_Config() {
    *this = ::std::move(from);
  }

  inline Components_Component_Fabric_Config& operator=(Components_Component_Fabric_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Fabric_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Fabric_Config* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Fabric_Config*>(
               &_Components_Component_Fabric_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(Components_Component_Fabric_Config* other);
  friend void swap(Components_Component_Fabric_Config& a, Components_Component_Fabric_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Fabric_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Fabric_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Fabric_Config& from);
  void MergeFrom(const Components_Component_Fabric_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Fabric_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Fabric.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Fabric_ConfigImpl();
};
// -------------------------------------------------------------------

class Components_Component_Fabric_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Fabric.State) */ {
 public:
  Components_Component_Fabric_State();
  virtual ~Components_Component_Fabric_State();

  Components_Component_Fabric_State(const Components_Component_Fabric_State& from);

  inline Components_Component_Fabric_State& operator=(const Components_Component_Fabric_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Fabric_State(Components_Component_Fabric_State&& from) noexcept
    : Components_Component_Fabric_State() {
    *this = ::std::move(from);
  }

  inline Components_Component_Fabric_State& operator=(Components_Component_Fabric_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Fabric_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Fabric_State* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Fabric_State*>(
               &_Components_Component_Fabric_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(Components_Component_Fabric_State* other);
  friend void swap(Components_Component_Fabric_State& a, Components_Component_Fabric_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Fabric_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Fabric_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Fabric_State& from);
  void MergeFrom(const Components_Component_Fabric_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Fabric_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Fabric.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Fabric_StateImpl();
};
// -------------------------------------------------------------------

class Components_Component_Fabric : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Fabric) */ {
 public:
  Components_Component_Fabric();
  virtual ~Components_Component_Fabric();

  Components_Component_Fabric(const Components_Component_Fabric& from);

  inline Components_Component_Fabric& operator=(const Components_Component_Fabric& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Fabric(Components_Component_Fabric&& from) noexcept
    : Components_Component_Fabric() {
    *this = ::std::move(from);
  }

  inline Components_Component_Fabric& operator=(Components_Component_Fabric&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Fabric& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Fabric* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Fabric*>(
               &_Components_Component_Fabric_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(Components_Component_Fabric* other);
  friend void swap(Components_Component_Fabric& a, Components_Component_Fabric& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Fabric* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Fabric* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Fabric& from);
  void MergeFrom(const Components_Component_Fabric& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Fabric* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component_Fabric_Config Config;
  typedef Components_Component_Fabric_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_platform.Components.Component.Fabric.State state = 140431213 [(.yext.schemapath) = "/components/component/fabric/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 140431213;
  const ::openconfig::openconfig_platform::Components_Component_Fabric_State& state() const;
  ::openconfig::openconfig_platform::Components_Component_Fabric_State* release_state();
  ::openconfig::openconfig_platform::Components_Component_Fabric_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_platform::Components_Component_Fabric_State* state);

  // .openconfig.openconfig_platform.Components.Component.Fabric.Config config = 145493716 [(.yext.schemapath) = "/components/component/fabric/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 145493716;
  const ::openconfig::openconfig_platform::Components_Component_Fabric_Config& config() const;
  ::openconfig::openconfig_platform::Components_Component_Fabric_Config* release_config();
  ::openconfig::openconfig_platform::Components_Component_Fabric_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_platform::Components_Component_Fabric_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Fabric)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_platform::Components_Component_Fabric_State* state_;
  ::openconfig::openconfig_platform::Components_Component_Fabric_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_FabricImpl();
};
// -------------------------------------------------------------------

class Components_Component_Fan_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Fan.Config) */ {
 public:
  Components_Component_Fan_Config();
  virtual ~Components_Component_Fan_Config();

  Components_Component_Fan_Config(const Components_Component_Fan_Config& from);

  inline Components_Component_Fan_Config& operator=(const Components_Component_Fan_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Fan_Config(Components_Component_Fan_Config&& from) noexcept
    : Components_Component_Fan_Config() {
    *this = ::std::move(from);
  }

  inline Components_Component_Fan_Config& operator=(Components_Component_Fan_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Fan_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Fan_Config* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Fan_Config*>(
               &_Components_Component_Fan_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(Components_Component_Fan_Config* other);
  friend void swap(Components_Component_Fan_Config& a, Components_Component_Fan_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Fan_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Fan_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Fan_Config& from);
  void MergeFrom(const Components_Component_Fan_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Fan_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Fan.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Fan_ConfigImpl();
};
// -------------------------------------------------------------------

class Components_Component_Fan_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Fan.State) */ {
 public:
  Components_Component_Fan_State();
  virtual ~Components_Component_Fan_State();

  Components_Component_Fan_State(const Components_Component_Fan_State& from);

  inline Components_Component_Fan_State& operator=(const Components_Component_Fan_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Fan_State(Components_Component_Fan_State&& from) noexcept
    : Components_Component_Fan_State() {
    *this = ::std::move(from);
  }

  inline Components_Component_Fan_State& operator=(Components_Component_Fan_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Fan_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Fan_State* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Fan_State*>(
               &_Components_Component_Fan_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(Components_Component_Fan_State* other);
  friend void swap(Components_Component_Fan_State& a, Components_Component_Fan_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Fan_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Fan_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Fan_State& from);
  void MergeFrom(const Components_Component_Fan_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Fan_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue speed = 39662101 [(.yext.schemapath) = "/components/component/fan/state/speed"];
  bool has_speed() const;
  void clear_speed();
  static const int kSpeedFieldNumber = 39662101;
  const ::ywrapper::UintValue& speed() const;
  ::ywrapper::UintValue* release_speed();
  ::ywrapper::UintValue* mutable_speed();
  void set_allocated_speed(::ywrapper::UintValue* speed);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Fan.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* speed_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Fan_StateImpl();
};
// -------------------------------------------------------------------

class Components_Component_Fan : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Fan) */ {
 public:
  Components_Component_Fan();
  virtual ~Components_Component_Fan();

  Components_Component_Fan(const Components_Component_Fan& from);

  inline Components_Component_Fan& operator=(const Components_Component_Fan& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Fan(Components_Component_Fan&& from) noexcept
    : Components_Component_Fan() {
    *this = ::std::move(from);
  }

  inline Components_Component_Fan& operator=(Components_Component_Fan&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Fan& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Fan* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Fan*>(
               &_Components_Component_Fan_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(Components_Component_Fan* other);
  friend void swap(Components_Component_Fan& a, Components_Component_Fan& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Fan* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Fan* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Fan& from);
  void MergeFrom(const Components_Component_Fan& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Fan* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component_Fan_Config Config;
  typedef Components_Component_Fan_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_platform.Components.Component.Fan.State state = 105888817 [(.yext.schemapath) = "/components/component/fan/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 105888817;
  const ::openconfig::openconfig_platform::Components_Component_Fan_State& state() const;
  ::openconfig::openconfig_platform::Components_Component_Fan_State* release_state();
  ::openconfig::openconfig_platform::Components_Component_Fan_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_platform::Components_Component_Fan_State* state);

  // .openconfig.openconfig_platform.Components.Component.Fan.Config config = 532415128 [(.yext.schemapath) = "/components/component/fan/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 532415128;
  const ::openconfig::openconfig_platform::Components_Component_Fan_Config& config() const;
  ::openconfig::openconfig_platform::Components_Component_Fan_Config* release_config();
  ::openconfig::openconfig_platform::Components_Component_Fan_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_platform::Components_Component_Fan_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Fan)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_platform::Components_Component_Fan_State* state_;
  ::openconfig::openconfig_platform::Components_Component_Fan_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_FanImpl();
};
// -------------------------------------------------------------------

class Components_Component_IntegratedCircuit_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.Config) */ {
 public:
  Components_Component_IntegratedCircuit_Config();
  virtual ~Components_Component_IntegratedCircuit_Config();

  Components_Component_IntegratedCircuit_Config(const Components_Component_IntegratedCircuit_Config& from);

  inline Components_Component_IntegratedCircuit_Config& operator=(const Components_Component_IntegratedCircuit_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_IntegratedCircuit_Config(Components_Component_IntegratedCircuit_Config&& from) noexcept
    : Components_Component_IntegratedCircuit_Config() {
    *this = ::std::move(from);
  }

  inline Components_Component_IntegratedCircuit_Config& operator=(Components_Component_IntegratedCircuit_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_IntegratedCircuit_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_IntegratedCircuit_Config* internal_default_instance() {
    return reinterpret_cast<const Components_Component_IntegratedCircuit_Config*>(
               &_Components_Component_IntegratedCircuit_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(Components_Component_IntegratedCircuit_Config* other);
  friend void swap(Components_Component_IntegratedCircuit_Config& a, Components_Component_IntegratedCircuit_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_IntegratedCircuit_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_IntegratedCircuit_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_IntegratedCircuit_Config& from);
  void MergeFrom(const Components_Component_IntegratedCircuit_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_IntegratedCircuit_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_IntegratedCircuit_ConfigImpl();
};
// -------------------------------------------------------------------

class Components_Component_IntegratedCircuit_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.State) */ {
 public:
  Components_Component_IntegratedCircuit_State();
  virtual ~Components_Component_IntegratedCircuit_State();

  Components_Component_IntegratedCircuit_State(const Components_Component_IntegratedCircuit_State& from);

  inline Components_Component_IntegratedCircuit_State& operator=(const Components_Component_IntegratedCircuit_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_IntegratedCircuit_State(Components_Component_IntegratedCircuit_State&& from) noexcept
    : Components_Component_IntegratedCircuit_State() {
    *this = ::std::move(from);
  }

  inline Components_Component_IntegratedCircuit_State& operator=(Components_Component_IntegratedCircuit_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_IntegratedCircuit_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_IntegratedCircuit_State* internal_default_instance() {
    return reinterpret_cast<const Components_Component_IntegratedCircuit_State*>(
               &_Components_Component_IntegratedCircuit_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(Components_Component_IntegratedCircuit_State* other);
  friend void swap(Components_Component_IntegratedCircuit_State& a, Components_Component_IntegratedCircuit_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_IntegratedCircuit_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_IntegratedCircuit_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_IntegratedCircuit_State& from);
  void MergeFrom(const Components_Component_IntegratedCircuit_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_IntegratedCircuit_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_IntegratedCircuit_StateImpl();
};
// -------------------------------------------------------------------

class Components_Component_IntegratedCircuit : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.IntegratedCircuit) */ {
 public:
  Components_Component_IntegratedCircuit();
  virtual ~Components_Component_IntegratedCircuit();

  Components_Component_IntegratedCircuit(const Components_Component_IntegratedCircuit& from);

  inline Components_Component_IntegratedCircuit& operator=(const Components_Component_IntegratedCircuit& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_IntegratedCircuit(Components_Component_IntegratedCircuit&& from) noexcept
    : Components_Component_IntegratedCircuit() {
    *this = ::std::move(from);
  }

  inline Components_Component_IntegratedCircuit& operator=(Components_Component_IntegratedCircuit&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_IntegratedCircuit& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_IntegratedCircuit* internal_default_instance() {
    return reinterpret_cast<const Components_Component_IntegratedCircuit*>(
               &_Components_Component_IntegratedCircuit_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(Components_Component_IntegratedCircuit* other);
  friend void swap(Components_Component_IntegratedCircuit& a, Components_Component_IntegratedCircuit& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_IntegratedCircuit* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_IntegratedCircuit* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_IntegratedCircuit& from);
  void MergeFrom(const Components_Component_IntegratedCircuit& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_IntegratedCircuit* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component_IntegratedCircuit_Config Config;
  typedef Components_Component_IntegratedCircuit_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_platform.Components.Component.IntegratedCircuit.Config config = 104535454 [(.yext.schemapath) = "/components/component/integrated-circuit/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 104535454;
  const ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_Config& config() const;
  ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_Config* release_config();
  ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_Config* config);

  // .openconfig.openconfig_platform.Components.Component.IntegratedCircuit.State state = 401234699 [(.yext.schemapath) = "/components/component/integrated-circuit/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 401234699;
  const ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_State& state() const;
  ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_State* release_state();
  ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.IntegratedCircuit)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_Config* config_;
  ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_IntegratedCircuitImpl();
};
// -------------------------------------------------------------------

class Components_Component_Linecard_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Linecard.Config) */ {
 public:
  Components_Component_Linecard_Config();
  virtual ~Components_Component_Linecard_Config();

  Components_Component_Linecard_Config(const Components_Component_Linecard_Config& from);

  inline Components_Component_Linecard_Config& operator=(const Components_Component_Linecard_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Linecard_Config(Components_Component_Linecard_Config&& from) noexcept
    : Components_Component_Linecard_Config() {
    *this = ::std::move(from);
  }

  inline Components_Component_Linecard_Config& operator=(Components_Component_Linecard_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Linecard_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Linecard_Config* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Linecard_Config*>(
               &_Components_Component_Linecard_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(Components_Component_Linecard_Config* other);
  friend void swap(Components_Component_Linecard_Config& a, Components_Component_Linecard_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Linecard_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Linecard_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Linecard_Config& from);
  void MergeFrom(const Components_Component_Linecard_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Linecard_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.enums.OpenconfigPlatformLinecardComponentPowerType power_admin_state = 460899237 [(.yext.schemapath) = "/components/component/linecard/config/power-admin-state"];
  void clear_power_admin_state();
  static const int kPowerAdminStateFieldNumber = 460899237;
  ::openconfig::enums::OpenconfigPlatformLinecardComponentPowerType power_admin_state() const;
  void set_power_admin_state(::openconfig::enums::OpenconfigPlatformLinecardComponentPowerType value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Linecard.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int power_admin_state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Linecard_ConfigImpl();
};
// -------------------------------------------------------------------

class Components_Component_Linecard_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Linecard.State) */ {
 public:
  Components_Component_Linecard_State();
  virtual ~Components_Component_Linecard_State();

  Components_Component_Linecard_State(const Components_Component_Linecard_State& from);

  inline Components_Component_Linecard_State& operator=(const Components_Component_Linecard_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Linecard_State(Components_Component_Linecard_State&& from) noexcept
    : Components_Component_Linecard_State() {
    *this = ::std::move(from);
  }

  inline Components_Component_Linecard_State& operator=(Components_Component_Linecard_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Linecard_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Linecard_State* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Linecard_State*>(
               &_Components_Component_Linecard_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(Components_Component_Linecard_State* other);
  friend void swap(Components_Component_Linecard_State& a, Components_Component_Linecard_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Linecard_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Linecard_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Linecard_State& from);
  void MergeFrom(const Components_Component_Linecard_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Linecard_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue slot_id = 426044457 [(.yext.schemapath) = "/components/component/linecard/state/slot-id"];
  bool has_slot_id() const;
  void clear_slot_id();
  static const int kSlotIdFieldNumber = 426044457;
  const ::ywrapper::StringValue& slot_id() const;
  ::ywrapper::StringValue* release_slot_id();
  ::ywrapper::StringValue* mutable_slot_id();
  void set_allocated_slot_id(::ywrapper::StringValue* slot_id);

  // .openconfig.enums.OpenconfigPlatformLinecardComponentPowerType power_admin_state = 443908706 [(.yext.schemapath) = "/components/component/linecard/state/power-admin-state"];
  void clear_power_admin_state();
  static const int kPowerAdminStateFieldNumber = 443908706;
  ::openconfig::enums::OpenconfigPlatformLinecardComponentPowerType power_admin_state() const;
  void set_power_admin_state(::openconfig::enums::OpenconfigPlatformLinecardComponentPowerType value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Linecard.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* slot_id_;
  int power_admin_state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Linecard_StateImpl();
};
// -------------------------------------------------------------------

class Components_Component_Linecard : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Linecard) */ {
 public:
  Components_Component_Linecard();
  virtual ~Components_Component_Linecard();

  Components_Component_Linecard(const Components_Component_Linecard& from);

  inline Components_Component_Linecard& operator=(const Components_Component_Linecard& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Linecard(Components_Component_Linecard&& from) noexcept
    : Components_Component_Linecard() {
    *this = ::std::move(from);
  }

  inline Components_Component_Linecard& operator=(Components_Component_Linecard&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Linecard& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Linecard* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Linecard*>(
               &_Components_Component_Linecard_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(Components_Component_Linecard* other);
  friend void swap(Components_Component_Linecard& a, Components_Component_Linecard& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Linecard* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Linecard* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Linecard& from);
  void MergeFrom(const Components_Component_Linecard& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Linecard* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component_Linecard_Config Config;
  typedef Components_Component_Linecard_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_platform.Components.Component.Linecard.State state = 252073466 [(.yext.schemapath) = "/components/component/linecard/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 252073466;
  const ::openconfig::openconfig_platform::Components_Component_Linecard_State& state() const;
  ::openconfig::openconfig_platform::Components_Component_Linecard_State* release_state();
  ::openconfig::openconfig_platform::Components_Component_Linecard_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_platform::Components_Component_Linecard_State* state);

  // .openconfig.openconfig_platform.Components.Component.Linecard.Config config = 421310981 [(.yext.schemapath) = "/components/component/linecard/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 421310981;
  const ::openconfig::openconfig_platform::Components_Component_Linecard_Config& config() const;
  ::openconfig::openconfig_platform::Components_Component_Linecard_Config* release_config();
  ::openconfig::openconfig_platform::Components_Component_Linecard_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_platform::Components_Component_Linecard_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Linecard)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_platform::Components_Component_Linecard_State* state_;
  ::openconfig::openconfig_platform::Components_Component_Linecard_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_LinecardImpl();
};
// -------------------------------------------------------------------

class Components_Component_OpticalChannel_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config) */ {
 public:
  Components_Component_OpticalChannel_Config();
  virtual ~Components_Component_OpticalChannel_Config();

  Components_Component_OpticalChannel_Config(const Components_Component_OpticalChannel_Config& from);

  inline Components_Component_OpticalChannel_Config& operator=(const Components_Component_OpticalChannel_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_OpticalChannel_Config(Components_Component_OpticalChannel_Config&& from) noexcept
    : Components_Component_OpticalChannel_Config() {
    *this = ::std::move(from);
  }

  inline Components_Component_OpticalChannel_Config& operator=(Components_Component_OpticalChannel_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_OpticalChannel_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_OpticalChannel_Config* internal_default_instance() {
    return reinterpret_cast<const Components_Component_OpticalChannel_Config*>(
               &_Components_Component_OpticalChannel_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(Components_Component_OpticalChannel_Config* other);
  friend void swap(Components_Component_OpticalChannel_Config& a, Components_Component_OpticalChannel_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_OpticalChannel_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_OpticalChannel_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_OpticalChannel_Config& from);
  void MergeFrom(const Components_Component_OpticalChannel_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_OpticalChannel_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue frequency = 26841272 [(.yext.schemapath) = "/components/component/optical-channel/config/frequency"];
  bool has_frequency() const;
  void clear_frequency();
  static const int kFrequencyFieldNumber = 26841272;
  const ::ywrapper::UintValue& frequency() const;
  ::ywrapper::UintValue* release_frequency();
  ::ywrapper::UintValue* mutable_frequency();
  void set_allocated_frequency(::ywrapper::UintValue* frequency);

  // .ywrapper.Decimal64Value target_output_power = 62472149 [(.yext.schemapath) = "/components/component/optical-channel/config/target-output-power"];
  bool has_target_output_power() const;
  void clear_target_output_power();
  static const int kTargetOutputPowerFieldNumber = 62472149;
  const ::ywrapper::Decimal64Value& target_output_power() const;
  ::ywrapper::Decimal64Value* release_target_output_power();
  ::ywrapper::Decimal64Value* mutable_target_output_power();
  void set_allocated_target_output_power(::ywrapper::Decimal64Value* target_output_power);

  // .ywrapper.StringValue line_port = 177586852 [(.yext.schemapath) = "/components/component/optical-channel/config/line-port"];
  bool has_line_port() const;
  void clear_line_port();
  static const int kLinePortFieldNumber = 177586852;
  const ::ywrapper::StringValue& line_port() const;
  ::ywrapper::StringValue* release_line_port();
  ::ywrapper::StringValue* mutable_line_port();
  void set_allocated_line_port(::ywrapper::StringValue* line_port);

  // .ywrapper.UintValue operational_mode = 220459914 [(.yext.schemapath) = "/components/component/optical-channel/config/operational-mode"];
  bool has_operational_mode() const;
  void clear_operational_mode();
  static const int kOperationalModeFieldNumber = 220459914;
  const ::ywrapper::UintValue& operational_mode() const;
  ::ywrapper::UintValue* release_operational_mode();
  ::ywrapper::UintValue* mutable_operational_mode();
  void set_allocated_operational_mode(::ywrapper::UintValue* operational_mode);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* frequency_;
  ::ywrapper::Decimal64Value* target_output_power_;
  ::ywrapper::StringValue* line_port_;
  ::ywrapper::UintValue* operational_mode_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_ConfigImpl();
};
// -------------------------------------------------------------------

class Components_Component_OpticalChannel_State_ChromaticDispersion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion) */ {
 public:
  Components_Component_OpticalChannel_State_ChromaticDispersion();
  virtual ~Components_Component_OpticalChannel_State_ChromaticDispersion();

  Components_Component_OpticalChannel_State_ChromaticDispersion(const Components_Component_OpticalChannel_State_ChromaticDispersion& from);

  inline Components_Component_OpticalChannel_State_ChromaticDispersion& operator=(const Components_Component_OpticalChannel_State_ChromaticDispersion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_OpticalChannel_State_ChromaticDispersion(Components_Component_OpticalChannel_State_ChromaticDispersion&& from) noexcept
    : Components_Component_OpticalChannel_State_ChromaticDispersion() {
    *this = ::std::move(from);
  }

  inline Components_Component_OpticalChannel_State_ChromaticDispersion& operator=(Components_Component_OpticalChannel_State_ChromaticDispersion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_OpticalChannel_State_ChromaticDispersion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_OpticalChannel_State_ChromaticDispersion* internal_default_instance() {
    return reinterpret_cast<const Components_Component_OpticalChannel_State_ChromaticDispersion*>(
               &_Components_Component_OpticalChannel_State_ChromaticDispersion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(Components_Component_OpticalChannel_State_ChromaticDispersion* other);
  friend void swap(Components_Component_OpticalChannel_State_ChromaticDispersion& a, Components_Component_OpticalChannel_State_ChromaticDispersion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_OpticalChannel_State_ChromaticDispersion* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_OpticalChannel_State_ChromaticDispersion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_OpticalChannel_State_ChromaticDispersion& from);
  void MergeFrom(const Components_Component_OpticalChannel_State_ChromaticDispersion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_OpticalChannel_State_ChromaticDispersion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value avg = 264868115 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 264868115;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // .ywrapper.Decimal64Value max = 380327293 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 380327293;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // .ywrapper.Decimal64Value instant = 423301068 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 423301068;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.Decimal64Value min = 514548211 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 514548211;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* avg_;
  ::ywrapper::Decimal64Value* max_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::Decimal64Value* min_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_ChromaticDispersionImpl();
};
// -------------------------------------------------------------------

class Components_Component_OpticalChannel_State_InputPower : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower) */ {
 public:
  Components_Component_OpticalChannel_State_InputPower();
  virtual ~Components_Component_OpticalChannel_State_InputPower();

  Components_Component_OpticalChannel_State_InputPower(const Components_Component_OpticalChannel_State_InputPower& from);

  inline Components_Component_OpticalChannel_State_InputPower& operator=(const Components_Component_OpticalChannel_State_InputPower& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_OpticalChannel_State_InputPower(Components_Component_OpticalChannel_State_InputPower&& from) noexcept
    : Components_Component_OpticalChannel_State_InputPower() {
    *this = ::std::move(from);
  }

  inline Components_Component_OpticalChannel_State_InputPower& operator=(Components_Component_OpticalChannel_State_InputPower&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_OpticalChannel_State_InputPower& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_OpticalChannel_State_InputPower* internal_default_instance() {
    return reinterpret_cast<const Components_Component_OpticalChannel_State_InputPower*>(
               &_Components_Component_OpticalChannel_State_InputPower_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(Components_Component_OpticalChannel_State_InputPower* other);
  friend void swap(Components_Component_OpticalChannel_State_InputPower& a, Components_Component_OpticalChannel_State_InputPower& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_OpticalChannel_State_InputPower* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_OpticalChannel_State_InputPower* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_OpticalChannel_State_InputPower& from);
  void MergeFrom(const Components_Component_OpticalChannel_State_InputPower& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_OpticalChannel_State_InputPower* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue interval = 97973455 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 97973455;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.Decimal64Value avg = 119392212 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 119392212;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // .ywrapper.Decimal64Value max = 335529838 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 335529838;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // .ywrapper.Decimal64Value min = 469750720 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 469750720;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // .ywrapper.Decimal64Value instant = 477503791 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 477503791;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::Decimal64Value* avg_;
  ::ywrapper::Decimal64Value* max_;
  ::ywrapper::Decimal64Value* min_;
  ::ywrapper::Decimal64Value* instant_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_InputPowerImpl();
};
// -------------------------------------------------------------------

class Components_Component_OpticalChannel_State_LaserBiasCurrent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent) */ {
 public:
  Components_Component_OpticalChannel_State_LaserBiasCurrent();
  virtual ~Components_Component_OpticalChannel_State_LaserBiasCurrent();

  Components_Component_OpticalChannel_State_LaserBiasCurrent(const Components_Component_OpticalChannel_State_LaserBiasCurrent& from);

  inline Components_Component_OpticalChannel_State_LaserBiasCurrent& operator=(const Components_Component_OpticalChannel_State_LaserBiasCurrent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_OpticalChannel_State_LaserBiasCurrent(Components_Component_OpticalChannel_State_LaserBiasCurrent&& from) noexcept
    : Components_Component_OpticalChannel_State_LaserBiasCurrent() {
    *this = ::std::move(from);
  }

  inline Components_Component_OpticalChannel_State_LaserBiasCurrent& operator=(Components_Component_OpticalChannel_State_LaserBiasCurrent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_OpticalChannel_State_LaserBiasCurrent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_OpticalChannel_State_LaserBiasCurrent* internal_default_instance() {
    return reinterpret_cast<const Components_Component_OpticalChannel_State_LaserBiasCurrent*>(
               &_Components_Component_OpticalChannel_State_LaserBiasCurrent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(Components_Component_OpticalChannel_State_LaserBiasCurrent* other);
  friend void swap(Components_Component_OpticalChannel_State_LaserBiasCurrent& a, Components_Component_OpticalChannel_State_LaserBiasCurrent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_OpticalChannel_State_LaserBiasCurrent* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_OpticalChannel_State_LaserBiasCurrent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_OpticalChannel_State_LaserBiasCurrent& from);
  void MergeFrom(const Components_Component_OpticalChannel_State_LaserBiasCurrent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_OpticalChannel_State_LaserBiasCurrent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value instant = 49268100 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 49268100;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.Decimal64Value min = 98557579 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 98557579;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // .ywrapper.Decimal64Value avg = 114747003 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 114747003;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // .ywrapper.Decimal64Value max = 232778501 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 232778501;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // .ywrapper.UintValue interval = 345098114 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 345098114;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::Decimal64Value* min_;
  ::ywrapper::Decimal64Value* avg_;
  ::ywrapper::Decimal64Value* max_;
  ::ywrapper::UintValue* interval_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_LaserBiasCurrentImpl();
};
// -------------------------------------------------------------------

class Components_Component_OpticalChannel_State_OutputPower : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower) */ {
 public:
  Components_Component_OpticalChannel_State_OutputPower();
  virtual ~Components_Component_OpticalChannel_State_OutputPower();

  Components_Component_OpticalChannel_State_OutputPower(const Components_Component_OpticalChannel_State_OutputPower& from);

  inline Components_Component_OpticalChannel_State_OutputPower& operator=(const Components_Component_OpticalChannel_State_OutputPower& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_OpticalChannel_State_OutputPower(Components_Component_OpticalChannel_State_OutputPower&& from) noexcept
    : Components_Component_OpticalChannel_State_OutputPower() {
    *this = ::std::move(from);
  }

  inline Components_Component_OpticalChannel_State_OutputPower& operator=(Components_Component_OpticalChannel_State_OutputPower&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_OpticalChannel_State_OutputPower& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_OpticalChannel_State_OutputPower* internal_default_instance() {
    return reinterpret_cast<const Components_Component_OpticalChannel_State_OutputPower*>(
               &_Components_Component_OpticalChannel_State_OutputPower_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(Components_Component_OpticalChannel_State_OutputPower* other);
  friend void swap(Components_Component_OpticalChannel_State_OutputPower& a, Components_Component_OpticalChannel_State_OutputPower& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_OpticalChannel_State_OutputPower* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_OpticalChannel_State_OutputPower* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_OpticalChannel_State_OutputPower& from);
  void MergeFrom(const Components_Component_OpticalChannel_State_OutputPower& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_OpticalChannel_State_OutputPower* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value max = 252544967 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 252544967;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // .ywrapper.Decimal64Value instant = 307832130 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 307832130;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.UintValue interval = 322482692 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 322482692;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.Decimal64Value min = 386765881 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 386765881;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // .ywrapper.Decimal64Value avg = 468682565 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 468682565;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* max_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::Decimal64Value* min_;
  ::ywrapper::Decimal64Value* avg_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_OutputPowerImpl();
};
// -------------------------------------------------------------------

class Components_Component_OpticalChannel_State_PolarizationDependentLoss : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss) */ {
 public:
  Components_Component_OpticalChannel_State_PolarizationDependentLoss();
  virtual ~Components_Component_OpticalChannel_State_PolarizationDependentLoss();

  Components_Component_OpticalChannel_State_PolarizationDependentLoss(const Components_Component_OpticalChannel_State_PolarizationDependentLoss& from);

  inline Components_Component_OpticalChannel_State_PolarizationDependentLoss& operator=(const Components_Component_OpticalChannel_State_PolarizationDependentLoss& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_OpticalChannel_State_PolarizationDependentLoss(Components_Component_OpticalChannel_State_PolarizationDependentLoss&& from) noexcept
    : Components_Component_OpticalChannel_State_PolarizationDependentLoss() {
    *this = ::std::move(from);
  }

  inline Components_Component_OpticalChannel_State_PolarizationDependentLoss& operator=(Components_Component_OpticalChannel_State_PolarizationDependentLoss&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_OpticalChannel_State_PolarizationDependentLoss& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_OpticalChannel_State_PolarizationDependentLoss* internal_default_instance() {
    return reinterpret_cast<const Components_Component_OpticalChannel_State_PolarizationDependentLoss*>(
               &_Components_Component_OpticalChannel_State_PolarizationDependentLoss_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(Components_Component_OpticalChannel_State_PolarizationDependentLoss* other);
  friend void swap(Components_Component_OpticalChannel_State_PolarizationDependentLoss& a, Components_Component_OpticalChannel_State_PolarizationDependentLoss& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_OpticalChannel_State_PolarizationDependentLoss* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_OpticalChannel_State_PolarizationDependentLoss* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_OpticalChannel_State_PolarizationDependentLoss& from);
  void MergeFrom(const Components_Component_OpticalChannel_State_PolarizationDependentLoss& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_OpticalChannel_State_PolarizationDependentLoss* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value min = 11682014 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 11682014;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // .ywrapper.Decimal64Value instant = 32098901 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 32098901;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.Decimal64Value max = 145902896 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 145902896;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // .ywrapper.UintValue interval = 460602601 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 460602601;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.Decimal64Value avg = 533746774 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 533746774;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* min_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::Decimal64Value* max_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::Decimal64Value* avg_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_PolarizationDependentLossImpl();
};
// -------------------------------------------------------------------

class Components_Component_OpticalChannel_State_PolarizationModeDispersion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion) */ {
 public:
  Components_Component_OpticalChannel_State_PolarizationModeDispersion();
  virtual ~Components_Component_OpticalChannel_State_PolarizationModeDispersion();

  Components_Component_OpticalChannel_State_PolarizationModeDispersion(const Components_Component_OpticalChannel_State_PolarizationModeDispersion& from);

  inline Components_Component_OpticalChannel_State_PolarizationModeDispersion& operator=(const Components_Component_OpticalChannel_State_PolarizationModeDispersion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_OpticalChannel_State_PolarizationModeDispersion(Components_Component_OpticalChannel_State_PolarizationModeDispersion&& from) noexcept
    : Components_Component_OpticalChannel_State_PolarizationModeDispersion() {
    *this = ::std::move(from);
  }

  inline Components_Component_OpticalChannel_State_PolarizationModeDispersion& operator=(Components_Component_OpticalChannel_State_PolarizationModeDispersion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_OpticalChannel_State_PolarizationModeDispersion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_OpticalChannel_State_PolarizationModeDispersion* internal_default_instance() {
    return reinterpret_cast<const Components_Component_OpticalChannel_State_PolarizationModeDispersion*>(
               &_Components_Component_OpticalChannel_State_PolarizationModeDispersion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(Components_Component_OpticalChannel_State_PolarizationModeDispersion* other);
  friend void swap(Components_Component_OpticalChannel_State_PolarizationModeDispersion& a, Components_Component_OpticalChannel_State_PolarizationModeDispersion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_OpticalChannel_State_PolarizationModeDispersion* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_OpticalChannel_State_PolarizationModeDispersion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_OpticalChannel_State_PolarizationModeDispersion& from);
  void MergeFrom(const Components_Component_OpticalChannel_State_PolarizationModeDispersion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_OpticalChannel_State_PolarizationModeDispersion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value max = 19068223 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 19068223;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // .ywrapper.Decimal64Value instant = 42582794 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 42582794;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.Decimal64Value avg = 237752797 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 237752797;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // .ywrapper.Decimal64Value min = 421718209 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 421718209;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* max_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::Decimal64Value* avg_;
  ::ywrapper::Decimal64Value* min_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_PolarizationModeDispersionImpl();
};
// -------------------------------------------------------------------

class Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion) */ {
 public:
  Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion();
  virtual ~Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion();

  Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion(const Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion& from);

  inline Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion& operator=(const Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion(Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion&& from) noexcept
    : Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion() {
    *this = ::std::move(from);
  }

  inline Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion& operator=(Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion* internal_default_instance() {
    return reinterpret_cast<const Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion*>(
               &_Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion* other);
  friend void swap(Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion& a, Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion& from);
  void MergeFrom(const Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value instant = 14501164 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 14501164;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.Decimal64Value min = 27962195 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 27962195;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // .ywrapper.Decimal64Value avg = 315050099 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 315050099;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // .ywrapper.Decimal64Value max = 430612189 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 430612189;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::Decimal64Value* min_;
  ::ywrapper::Decimal64Value* avg_;
  ::ywrapper::Decimal64Value* max_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersionImpl();
};
// -------------------------------------------------------------------

class Components_Component_OpticalChannel_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.OpticalChannel.State) */ {
 public:
  Components_Component_OpticalChannel_State();
  virtual ~Components_Component_OpticalChannel_State();

  Components_Component_OpticalChannel_State(const Components_Component_OpticalChannel_State& from);

  inline Components_Component_OpticalChannel_State& operator=(const Components_Component_OpticalChannel_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_OpticalChannel_State(Components_Component_OpticalChannel_State&& from) noexcept
    : Components_Component_OpticalChannel_State() {
    *this = ::std::move(from);
  }

  inline Components_Component_OpticalChannel_State& operator=(Components_Component_OpticalChannel_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_OpticalChannel_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_OpticalChannel_State* internal_default_instance() {
    return reinterpret_cast<const Components_Component_OpticalChannel_State*>(
               &_Components_Component_OpticalChannel_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(Components_Component_OpticalChannel_State* other);
  friend void swap(Components_Component_OpticalChannel_State& a, Components_Component_OpticalChannel_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_OpticalChannel_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_OpticalChannel_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_OpticalChannel_State& from);
  void MergeFrom(const Components_Component_OpticalChannel_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_OpticalChannel_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component_OpticalChannel_State_ChromaticDispersion ChromaticDispersion;
  typedef Components_Component_OpticalChannel_State_InputPower InputPower;
  typedef Components_Component_OpticalChannel_State_LaserBiasCurrent LaserBiasCurrent;
  typedef Components_Component_OpticalChannel_State_OutputPower OutputPower;
  typedef Components_Component_OpticalChannel_State_PolarizationDependentLoss PolarizationDependentLoss;
  typedef Components_Component_OpticalChannel_State_PolarizationModeDispersion PolarizationModeDispersion;
  typedef Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion SecondOrderPolarizationModeDispersion;

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue operational_mode = 85276411 [(.yext.schemapath) = "/components/component/optical-channel/state/operational-mode"];
  bool has_operational_mode() const;
  void clear_operational_mode();
  static const int kOperationalModeFieldNumber = 85276411;
  const ::ywrapper::UintValue& operational_mode() const;
  ::ywrapper::UintValue* release_operational_mode();
  ::ywrapper::UintValue* mutable_operational_mode();
  void set_allocated_operational_mode(::ywrapper::UintValue* operational_mode);

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent laser_bias_current = 91725622 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current"];
  bool has_laser_bias_current() const;
  void clear_laser_bias_current();
  static const int kLaserBiasCurrentFieldNumber = 91725622;
  const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_LaserBiasCurrent& laser_bias_current() const;
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_LaserBiasCurrent* release_laser_bias_current();
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_LaserBiasCurrent* mutable_laser_bias_current();
  void set_allocated_laser_bias_current(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_LaserBiasCurrent* laser_bias_current);

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion chromatic_dispersion = 99469822 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion"];
  bool has_chromatic_dispersion() const;
  void clear_chromatic_dispersion();
  static const int kChromaticDispersionFieldNumber = 99469822;
  const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_ChromaticDispersion& chromatic_dispersion() const;
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_ChromaticDispersion* release_chromatic_dispersion();
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_ChromaticDispersion* mutable_chromatic_dispersion();
  void set_allocated_chromatic_dispersion(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_ChromaticDispersion* chromatic_dispersion);

  // .ywrapper.StringValue line_port = 123348347 [(.yext.schemapath) = "/components/component/optical-channel/state/line-port"];
  bool has_line_port() const;
  void clear_line_port();
  static const int kLinePortFieldNumber = 123348347;
  const ::ywrapper::StringValue& line_port() const;
  ::ywrapper::StringValue* release_line_port();
  ::ywrapper::StringValue* mutable_line_port();
  void set_allocated_line_port(::ywrapper::StringValue* line_port);

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion polarization_mode_dispersion = 145763652 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion"];
  bool has_polarization_mode_dispersion() const;
  void clear_polarization_mode_dispersion();
  static const int kPolarizationModeDispersionFieldNumber = 145763652;
  const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationModeDispersion& polarization_mode_dispersion() const;
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationModeDispersion* release_polarization_mode_dispersion();
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationModeDispersion* mutable_polarization_mode_dispersion();
  void set_allocated_polarization_mode_dispersion(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationModeDispersion* polarization_mode_dispersion);

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower output_power = 190162364 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power"];
  bool has_output_power() const;
  void clear_output_power();
  static const int kOutputPowerFieldNumber = 190162364;
  const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_OutputPower& output_power() const;
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_OutputPower* release_output_power();
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_OutputPower* mutable_output_power();
  void set_allocated_output_power(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_OutputPower* output_power);

  // .ywrapper.Decimal64Value target_output_power = 257534242 [(.yext.schemapath) = "/components/component/optical-channel/state/target-output-power"];
  bool has_target_output_power() const;
  void clear_target_output_power();
  static const int kTargetOutputPowerFieldNumber = 257534242;
  const ::ywrapper::Decimal64Value& target_output_power() const;
  ::ywrapper::Decimal64Value* release_target_output_power();
  ::ywrapper::Decimal64Value* mutable_target_output_power();
  void set_allocated_target_output_power(::ywrapper::Decimal64Value* target_output_power);

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower input_power = 324789833 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power"];
  bool has_input_power() const;
  void clear_input_power();
  static const int kInputPowerFieldNumber = 324789833;
  const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_InputPower& input_power() const;
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_InputPower* release_input_power();
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_InputPower* mutable_input_power();
  void set_allocated_input_power(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_InputPower* input_power);

  // .ywrapper.UintValue group_id = 327440498 [(.yext.schemapath) = "/components/component/optical-channel/state/group-id"];
  bool has_group_id() const;
  void clear_group_id();
  static const int kGroupIdFieldNumber = 327440498;
  const ::ywrapper::UintValue& group_id() const;
  ::ywrapper::UintValue* release_group_id();
  ::ywrapper::UintValue* mutable_group_id();
  void set_allocated_group_id(::ywrapper::UintValue* group_id);

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss polarization_dependent_loss = 384302551 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss"];
  bool has_polarization_dependent_loss() const;
  void clear_polarization_dependent_loss();
  static const int kPolarizationDependentLossFieldNumber = 384302551;
  const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationDependentLoss& polarization_dependent_loss() const;
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationDependentLoss* release_polarization_dependent_loss();
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationDependentLoss* mutable_polarization_dependent_loss();
  void set_allocated_polarization_dependent_loss(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationDependentLoss* polarization_dependent_loss);

  // .ywrapper.UintValue frequency = 429916835 [(.yext.schemapath) = "/components/component/optical-channel/state/frequency"];
  bool has_frequency() const;
  void clear_frequency();
  static const int kFrequencyFieldNumber = 429916835;
  const ::ywrapper::UintValue& frequency() const;
  ::ywrapper::UintValue* release_frequency();
  ::ywrapper::UintValue* mutable_frequency();
  void set_allocated_frequency(::ywrapper::UintValue* frequency);

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion second_order_polarization_mode_dispersion = 442862686 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion"];
  bool has_second_order_polarization_mode_dispersion() const;
  void clear_second_order_polarization_mode_dispersion();
  static const int kSecondOrderPolarizationModeDispersionFieldNumber = 442862686;
  const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion& second_order_polarization_mode_dispersion() const;
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion* release_second_order_polarization_mode_dispersion();
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion* mutable_second_order_polarization_mode_dispersion();
  void set_allocated_second_order_polarization_mode_dispersion(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion* second_order_polarization_mode_dispersion);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.OpticalChannel.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* operational_mode_;
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_LaserBiasCurrent* laser_bias_current_;
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_ChromaticDispersion* chromatic_dispersion_;
  ::ywrapper::StringValue* line_port_;
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationModeDispersion* polarization_mode_dispersion_;
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_OutputPower* output_power_;
  ::ywrapper::Decimal64Value* target_output_power_;
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_InputPower* input_power_;
  ::ywrapper::UintValue* group_id_;
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationDependentLoss* polarization_dependent_loss_;
  ::ywrapper::UintValue* frequency_;
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion* second_order_polarization_mode_dispersion_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_StateImpl();
};
// -------------------------------------------------------------------

class Components_Component_OpticalChannel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.OpticalChannel) */ {
 public:
  Components_Component_OpticalChannel();
  virtual ~Components_Component_OpticalChannel();

  Components_Component_OpticalChannel(const Components_Component_OpticalChannel& from);

  inline Components_Component_OpticalChannel& operator=(const Components_Component_OpticalChannel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_OpticalChannel(Components_Component_OpticalChannel&& from) noexcept
    : Components_Component_OpticalChannel() {
    *this = ::std::move(from);
  }

  inline Components_Component_OpticalChannel& operator=(Components_Component_OpticalChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_OpticalChannel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_OpticalChannel* internal_default_instance() {
    return reinterpret_cast<const Components_Component_OpticalChannel*>(
               &_Components_Component_OpticalChannel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(Components_Component_OpticalChannel* other);
  friend void swap(Components_Component_OpticalChannel& a, Components_Component_OpticalChannel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_OpticalChannel* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_OpticalChannel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_OpticalChannel& from);
  void MergeFrom(const Components_Component_OpticalChannel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_OpticalChannel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component_OpticalChannel_Config Config;
  typedef Components_Component_OpticalChannel_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State state = 84008816 [(.yext.schemapath) = "/components/component/optical-channel/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 84008816;
  const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State& state() const;
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State* release_state();
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State* state);

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.Config config = 456634943 [(.yext.schemapath) = "/components/component/optical-channel/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 456634943;
  const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_Config& config() const;
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_Config* release_config();
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_platform::Components_Component_OpticalChannel_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.OpticalChannel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State* state_;
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannelImpl();
};
// -------------------------------------------------------------------

class Components_Component_OpticalPort_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.OpticalPort.Config) */ {
 public:
  Components_Component_OpticalPort_Config();
  virtual ~Components_Component_OpticalPort_Config();

  Components_Component_OpticalPort_Config(const Components_Component_OpticalPort_Config& from);

  inline Components_Component_OpticalPort_Config& operator=(const Components_Component_OpticalPort_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_OpticalPort_Config(Components_Component_OpticalPort_Config&& from) noexcept
    : Components_Component_OpticalPort_Config() {
    *this = ::std::move(from);
  }

  inline Components_Component_OpticalPort_Config& operator=(Components_Component_OpticalPort_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_OpticalPort_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_OpticalPort_Config* internal_default_instance() {
    return reinterpret_cast<const Components_Component_OpticalPort_Config*>(
               &_Components_Component_OpticalPort_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(Components_Component_OpticalPort_Config* other);
  friend void swap(Components_Component_OpticalPort_Config& a, Components_Component_OpticalPort_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_OpticalPort_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_OpticalPort_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_OpticalPort_Config& from);
  void MergeFrom(const Components_Component_OpticalPort_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_OpticalPort_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.enums.OpenconfigTransportLineCommonAdminStateType admin_state = 404520277 [(.yext.schemapath) = "/components/component/optical-port/config/admin-state"];
  void clear_admin_state();
  static const int kAdminStateFieldNumber = 404520277;
  ::openconfig::enums::OpenconfigTransportLineCommonAdminStateType admin_state() const;
  void set_admin_state(::openconfig::enums::OpenconfigTransportLineCommonAdminStateType value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.OpticalPort.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int admin_state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalPort_ConfigImpl();
};
// -------------------------------------------------------------------

class Components_Component_OpticalPort_State_InputPower : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower) */ {
 public:
  Components_Component_OpticalPort_State_InputPower();
  virtual ~Components_Component_OpticalPort_State_InputPower();

  Components_Component_OpticalPort_State_InputPower(const Components_Component_OpticalPort_State_InputPower& from);

  inline Components_Component_OpticalPort_State_InputPower& operator=(const Components_Component_OpticalPort_State_InputPower& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_OpticalPort_State_InputPower(Components_Component_OpticalPort_State_InputPower&& from) noexcept
    : Components_Component_OpticalPort_State_InputPower() {
    *this = ::std::move(from);
  }

  inline Components_Component_OpticalPort_State_InputPower& operator=(Components_Component_OpticalPort_State_InputPower&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_OpticalPort_State_InputPower& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_OpticalPort_State_InputPower* internal_default_instance() {
    return reinterpret_cast<const Components_Component_OpticalPort_State_InputPower*>(
               &_Components_Component_OpticalPort_State_InputPower_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(Components_Component_OpticalPort_State_InputPower* other);
  friend void swap(Components_Component_OpticalPort_State_InputPower& a, Components_Component_OpticalPort_State_InputPower& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_OpticalPort_State_InputPower* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_OpticalPort_State_InputPower* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_OpticalPort_State_InputPower& from);
  void MergeFrom(const Components_Component_OpticalPort_State_InputPower& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_OpticalPort_State_InputPower* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value instant = 65040985 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 65040985;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.UintValue interval = 110463805 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 110463805;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.Decimal64Value avg = 209718746 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 209718746;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // .ywrapper.Decimal64Value min = 362585490 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 362585490;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // .ywrapper.Decimal64Value max = 496806636 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 496806636;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::Decimal64Value* avg_;
  ::ywrapper::Decimal64Value* min_;
  ::ywrapper::Decimal64Value* max_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalPort_State_InputPowerImpl();
};
// -------------------------------------------------------------------

class Components_Component_OpticalPort_State_OutputPower : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower) */ {
 public:
  Components_Component_OpticalPort_State_OutputPower();
  virtual ~Components_Component_OpticalPort_State_OutputPower();

  Components_Component_OpticalPort_State_OutputPower(const Components_Component_OpticalPort_State_OutputPower& from);

  inline Components_Component_OpticalPort_State_OutputPower& operator=(const Components_Component_OpticalPort_State_OutputPower& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_OpticalPort_State_OutputPower(Components_Component_OpticalPort_State_OutputPower&& from) noexcept
    : Components_Component_OpticalPort_State_OutputPower() {
    *this = ::std::move(from);
  }

  inline Components_Component_OpticalPort_State_OutputPower& operator=(Components_Component_OpticalPort_State_OutputPower&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_OpticalPort_State_OutputPower& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_OpticalPort_State_OutputPower* internal_default_instance() {
    return reinterpret_cast<const Components_Component_OpticalPort_State_OutputPower*>(
               &_Components_Component_OpticalPort_State_OutputPower_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(Components_Component_OpticalPort_State_OutputPower* other);
  friend void swap(Components_Component_OpticalPort_State_OutputPower& a, Components_Component_OpticalPort_State_OutputPower& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_OpticalPort_State_OutputPower* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_OpticalPort_State_OutputPower* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_OpticalPort_State_OutputPower& from);
  void MergeFrom(const Components_Component_OpticalPort_State_OutputPower& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_OpticalPort_State_OutputPower* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue interval = 21615678 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 21615678;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.Decimal64Value max = 55150297 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 55150297;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // .ywrapper.Decimal64Value avg = 69943463 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 69943463;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // .ywrapper.Decimal64Value instant = 359103520 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 359103520;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.Decimal64Value min = 457800295 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 457800295;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::Decimal64Value* max_;
  ::ywrapper::Decimal64Value* avg_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::Decimal64Value* min_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalPort_State_OutputPowerImpl();
};
// -------------------------------------------------------------------

class Components_Component_OpticalPort_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.OpticalPort.State) */ {
 public:
  Components_Component_OpticalPort_State();
  virtual ~Components_Component_OpticalPort_State();

  Components_Component_OpticalPort_State(const Components_Component_OpticalPort_State& from);

  inline Components_Component_OpticalPort_State& operator=(const Components_Component_OpticalPort_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_OpticalPort_State(Components_Component_OpticalPort_State&& from) noexcept
    : Components_Component_OpticalPort_State() {
    *this = ::std::move(from);
  }

  inline Components_Component_OpticalPort_State& operator=(Components_Component_OpticalPort_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_OpticalPort_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_OpticalPort_State* internal_default_instance() {
    return reinterpret_cast<const Components_Component_OpticalPort_State*>(
               &_Components_Component_OpticalPort_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(Components_Component_OpticalPort_State* other);
  friend void swap(Components_Component_OpticalPort_State& a, Components_Component_OpticalPort_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_OpticalPort_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_OpticalPort_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_OpticalPort_State& from);
  void MergeFrom(const Components_Component_OpticalPort_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_OpticalPort_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component_OpticalPort_State_InputPower InputPower;
  typedef Components_Component_OpticalPort_State_OutputPower OutputPower;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower output_power = 96781594 [(.yext.schemapath) = "/components/component/optical-port/state/output-power"];
  bool has_output_power() const;
  void clear_output_power();
  static const int kOutputPowerFieldNumber = 96781594;
  const ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_OutputPower& output_power() const;
  ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_OutputPower* release_output_power();
  ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_OutputPower* mutable_output_power();
  void set_allocated_output_power(::openconfig::openconfig_platform::Components_Component_OpticalPort_State_OutputPower* output_power);

  // .openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower input_power = 526337635 [(.yext.schemapath) = "/components/component/optical-port/state/input-power"];
  bool has_input_power() const;
  void clear_input_power();
  static const int kInputPowerFieldNumber = 526337635;
  const ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_InputPower& input_power() const;
  ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_InputPower* release_input_power();
  ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_InputPower* mutable_input_power();
  void set_allocated_input_power(::openconfig::openconfig_platform::Components_Component_OpticalPort_State_InputPower* input_power);

  // .openconfig.enums.OpenconfigTransportLineCommonOPTICALLINEPORTTYPE optical_port_type = 144411818 [(.yext.schemapath) = "/components/component/optical-port/state/optical-port-type"];
  void clear_optical_port_type();
  static const int kOpticalPortTypeFieldNumber = 144411818;
  ::openconfig::enums::OpenconfigTransportLineCommonOPTICALLINEPORTTYPE optical_port_type() const;
  void set_optical_port_type(::openconfig::enums::OpenconfigTransportLineCommonOPTICALLINEPORTTYPE value);

  // .openconfig.enums.OpenconfigTransportLineCommonAdminStateType admin_state = 386106910 [(.yext.schemapath) = "/components/component/optical-port/state/admin-state"];
  void clear_admin_state();
  static const int kAdminStateFieldNumber = 386106910;
  ::openconfig::enums::OpenconfigTransportLineCommonAdminStateType admin_state() const;
  void set_admin_state(::openconfig::enums::OpenconfigTransportLineCommonAdminStateType value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.OpticalPort.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_OutputPower* output_power_;
  ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_InputPower* input_power_;
  int optical_port_type_;
  int admin_state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalPort_StateImpl();
};
// -------------------------------------------------------------------

class Components_Component_OpticalPort : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.OpticalPort) */ {
 public:
  Components_Component_OpticalPort();
  virtual ~Components_Component_OpticalPort();

  Components_Component_OpticalPort(const Components_Component_OpticalPort& from);

  inline Components_Component_OpticalPort& operator=(const Components_Component_OpticalPort& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_OpticalPort(Components_Component_OpticalPort&& from) noexcept
    : Components_Component_OpticalPort() {
    *this = ::std::move(from);
  }

  inline Components_Component_OpticalPort& operator=(Components_Component_OpticalPort&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_OpticalPort& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_OpticalPort* internal_default_instance() {
    return reinterpret_cast<const Components_Component_OpticalPort*>(
               &_Components_Component_OpticalPort_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(Components_Component_OpticalPort* other);
  friend void swap(Components_Component_OpticalPort& a, Components_Component_OpticalPort& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_OpticalPort* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_OpticalPort* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_OpticalPort& from);
  void MergeFrom(const Components_Component_OpticalPort& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_OpticalPort* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component_OpticalPort_Config Config;
  typedef Components_Component_OpticalPort_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_platform.Components.Component.OpticalPort.State state = 262913006 [(.yext.schemapath) = "/components/component/optical-port/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 262913006;
  const ::openconfig::openconfig_platform::Components_Component_OpticalPort_State& state() const;
  ::openconfig::openconfig_platform::Components_Component_OpticalPort_State* release_state();
  ::openconfig::openconfig_platform::Components_Component_OpticalPort_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_platform::Components_Component_OpticalPort_State* state);

  // .openconfig.openconfig_platform.Components.Component.OpticalPort.Config config = 419723289 [(.yext.schemapath) = "/components/component/optical-port/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 419723289;
  const ::openconfig::openconfig_platform::Components_Component_OpticalPort_Config& config() const;
  ::openconfig::openconfig_platform::Components_Component_OpticalPort_Config* release_config();
  ::openconfig::openconfig_platform::Components_Component_OpticalPort_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_platform::Components_Component_OpticalPort_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.OpticalPort)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_platform::Components_Component_OpticalPort_State* state_;
  ::openconfig::openconfig_platform::Components_Component_OpticalPort_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalPortImpl();
};
// -------------------------------------------------------------------

class Components_Component_Port_BreakoutMode_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config) */ {
 public:
  Components_Component_Port_BreakoutMode_Config();
  virtual ~Components_Component_Port_BreakoutMode_Config();

  Components_Component_Port_BreakoutMode_Config(const Components_Component_Port_BreakoutMode_Config& from);

  inline Components_Component_Port_BreakoutMode_Config& operator=(const Components_Component_Port_BreakoutMode_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Port_BreakoutMode_Config(Components_Component_Port_BreakoutMode_Config&& from) noexcept
    : Components_Component_Port_BreakoutMode_Config() {
    *this = ::std::move(from);
  }

  inline Components_Component_Port_BreakoutMode_Config& operator=(Components_Component_Port_BreakoutMode_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Port_BreakoutMode_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Port_BreakoutMode_Config* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Port_BreakoutMode_Config*>(
               &_Components_Component_Port_BreakoutMode_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(Components_Component_Port_BreakoutMode_Config* other);
  friend void swap(Components_Component_Port_BreakoutMode_Config& a, Components_Component_Port_BreakoutMode_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Port_BreakoutMode_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Port_BreakoutMode_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Port_BreakoutMode_Config& from);
  void MergeFrom(const Components_Component_Port_BreakoutMode_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Port_BreakoutMode_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue num_channels = 207420976 [(.yext.schemapath) = "/components/component/port/breakout-mode/config/num-channels"];
  bool has_num_channels() const;
  void clear_num_channels();
  static const int kNumChannelsFieldNumber = 207420976;
  const ::ywrapper::UintValue& num_channels() const;
  ::ywrapper::UintValue* release_num_channels();
  ::ywrapper::UintValue* mutable_num_channels();
  void set_allocated_num_channels(::ywrapper::UintValue* num_channels);

  // .openconfig.enums.OpenconfigIfEthernetETHERNETSPEED channel_speed = 133662836 [(.yext.schemapath) = "/components/component/port/breakout-mode/config/channel-speed"];
  void clear_channel_speed();
  static const int kChannelSpeedFieldNumber = 133662836;
  ::openconfig::enums::OpenconfigIfEthernetETHERNETSPEED channel_speed() const;
  void set_channel_speed(::openconfig::enums::OpenconfigIfEthernetETHERNETSPEED value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* num_channels_;
  int channel_speed_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Port_BreakoutMode_ConfigImpl();
};
// -------------------------------------------------------------------

class Components_Component_Port_BreakoutMode_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State) */ {
 public:
  Components_Component_Port_BreakoutMode_State();
  virtual ~Components_Component_Port_BreakoutMode_State();

  Components_Component_Port_BreakoutMode_State(const Components_Component_Port_BreakoutMode_State& from);

  inline Components_Component_Port_BreakoutMode_State& operator=(const Components_Component_Port_BreakoutMode_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Port_BreakoutMode_State(Components_Component_Port_BreakoutMode_State&& from) noexcept
    : Components_Component_Port_BreakoutMode_State() {
    *this = ::std::move(from);
  }

  inline Components_Component_Port_BreakoutMode_State& operator=(Components_Component_Port_BreakoutMode_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Port_BreakoutMode_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Port_BreakoutMode_State* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Port_BreakoutMode_State*>(
               &_Components_Component_Port_BreakoutMode_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(Components_Component_Port_BreakoutMode_State* other);
  friend void swap(Components_Component_Port_BreakoutMode_State& a, Components_Component_Port_BreakoutMode_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Port_BreakoutMode_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Port_BreakoutMode_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Port_BreakoutMode_State& from);
  void MergeFrom(const Components_Component_Port_BreakoutMode_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Port_BreakoutMode_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue num_channels = 514493927 [(.yext.schemapath) = "/components/component/port/breakout-mode/state/num-channels"];
  bool has_num_channels() const;
  void clear_num_channels();
  static const int kNumChannelsFieldNumber = 514493927;
  const ::ywrapper::UintValue& num_channels() const;
  ::ywrapper::UintValue* release_num_channels();
  ::ywrapper::UintValue* mutable_num_channels();
  void set_allocated_num_channels(::ywrapper::UintValue* num_channels);

  // .openconfig.enums.OpenconfigIfEthernetETHERNETSPEED channel_speed = 512097777 [(.yext.schemapath) = "/components/component/port/breakout-mode/state/channel-speed"];
  void clear_channel_speed();
  static const int kChannelSpeedFieldNumber = 512097777;
  ::openconfig::enums::OpenconfigIfEthernetETHERNETSPEED channel_speed() const;
  void set_channel_speed(::openconfig::enums::OpenconfigIfEthernetETHERNETSPEED value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* num_channels_;
  int channel_speed_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Port_BreakoutMode_StateImpl();
};
// -------------------------------------------------------------------

class Components_Component_Port_BreakoutMode : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode) */ {
 public:
  Components_Component_Port_BreakoutMode();
  virtual ~Components_Component_Port_BreakoutMode();

  Components_Component_Port_BreakoutMode(const Components_Component_Port_BreakoutMode& from);

  inline Components_Component_Port_BreakoutMode& operator=(const Components_Component_Port_BreakoutMode& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Port_BreakoutMode(Components_Component_Port_BreakoutMode&& from) noexcept
    : Components_Component_Port_BreakoutMode() {
    *this = ::std::move(from);
  }

  inline Components_Component_Port_BreakoutMode& operator=(Components_Component_Port_BreakoutMode&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Port_BreakoutMode& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Port_BreakoutMode* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Port_BreakoutMode*>(
               &_Components_Component_Port_BreakoutMode_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(Components_Component_Port_BreakoutMode* other);
  friend void swap(Components_Component_Port_BreakoutMode& a, Components_Component_Port_BreakoutMode& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Port_BreakoutMode* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Port_BreakoutMode* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Port_BreakoutMode& from);
  void MergeFrom(const Components_Component_Port_BreakoutMode& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Port_BreakoutMode* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component_Port_BreakoutMode_Config Config;
  typedef Components_Component_Port_BreakoutMode_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State state = 72628467 [(.yext.schemapath) = "/components/component/port/breakout-mode/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 72628467;
  const ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_State& state() const;
  ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_State* release_state();
  ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_State* state);

  // .openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config config = 448331782 [(.yext.schemapath) = "/components/component/port/breakout-mode/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 448331782;
  const ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_Config& config() const;
  ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_Config* release_config();
  ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_State* state_;
  ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Port_BreakoutModeImpl();
};
// -------------------------------------------------------------------

class Components_Component_Port_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Port.Config) */ {
 public:
  Components_Component_Port_Config();
  virtual ~Components_Component_Port_Config();

  Components_Component_Port_Config(const Components_Component_Port_Config& from);

  inline Components_Component_Port_Config& operator=(const Components_Component_Port_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Port_Config(Components_Component_Port_Config&& from) noexcept
    : Components_Component_Port_Config() {
    *this = ::std::move(from);
  }

  inline Components_Component_Port_Config& operator=(Components_Component_Port_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Port_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Port_Config* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Port_Config*>(
               &_Components_Component_Port_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(Components_Component_Port_Config* other);
  friend void swap(Components_Component_Port_Config& a, Components_Component_Port_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Port_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Port_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Port_Config& from);
  void MergeFrom(const Components_Component_Port_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Port_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Port.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Port_ConfigImpl();
};
// -------------------------------------------------------------------

class Components_Component_Port_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Port.State) */ {
 public:
  Components_Component_Port_State();
  virtual ~Components_Component_Port_State();

  Components_Component_Port_State(const Components_Component_Port_State& from);

  inline Components_Component_Port_State& operator=(const Components_Component_Port_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Port_State(Components_Component_Port_State&& from) noexcept
    : Components_Component_Port_State() {
    *this = ::std::move(from);
  }

  inline Components_Component_Port_State& operator=(Components_Component_Port_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Port_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Port_State* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Port_State*>(
               &_Components_Component_Port_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(Components_Component_Port_State* other);
  friend void swap(Components_Component_Port_State& a, Components_Component_Port_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Port_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Port_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Port_State& from);
  void MergeFrom(const Components_Component_Port_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Port_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Port.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Port_StateImpl();
};
// -------------------------------------------------------------------

class Components_Component_Port : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Port) */ {
 public:
  Components_Component_Port();
  virtual ~Components_Component_Port();

  Components_Component_Port(const Components_Component_Port& from);

  inline Components_Component_Port& operator=(const Components_Component_Port& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Port(Components_Component_Port&& from) noexcept
    : Components_Component_Port() {
    *this = ::std::move(from);
  }

  inline Components_Component_Port& operator=(Components_Component_Port&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Port& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Port* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Port*>(
               &_Components_Component_Port_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(Components_Component_Port* other);
  friend void swap(Components_Component_Port& a, Components_Component_Port& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Port* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Port* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Port& from);
  void MergeFrom(const Components_Component_Port& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Port* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component_Port_BreakoutMode BreakoutMode;
  typedef Components_Component_Port_Config Config;
  typedef Components_Component_Port_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_platform.Components.Component.Port.Config config = 229703406 [(.yext.schemapath) = "/components/component/port/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 229703406;
  const ::openconfig::openconfig_platform::Components_Component_Port_Config& config() const;
  ::openconfig::openconfig_platform::Components_Component_Port_Config* release_config();
  ::openconfig::openconfig_platform::Components_Component_Port_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_platform::Components_Component_Port_Config* config);

  // .openconfig.openconfig_platform.Components.Component.Port.State state = 326598427 [(.yext.schemapath) = "/components/component/port/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 326598427;
  const ::openconfig::openconfig_platform::Components_Component_Port_State& state() const;
  ::openconfig::openconfig_platform::Components_Component_Port_State* release_state();
  ::openconfig::openconfig_platform::Components_Component_Port_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_platform::Components_Component_Port_State* state);

  // .openconfig.openconfig_platform.Components.Component.Port.BreakoutMode breakout_mode = 508830081 [(.yext.schemapath) = "/components/component/port/breakout-mode"];
  bool has_breakout_mode() const;
  void clear_breakout_mode();
  static const int kBreakoutModeFieldNumber = 508830081;
  const ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode& breakout_mode() const;
  ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode* release_breakout_mode();
  ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode* mutable_breakout_mode();
  void set_allocated_breakout_mode(::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode* breakout_mode);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Port)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_platform::Components_Component_Port_Config* config_;
  ::openconfig::openconfig_platform::Components_Component_Port_State* state_;
  ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode* breakout_mode_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_PortImpl();
};
// -------------------------------------------------------------------

class Components_Component_PowerSupply_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.PowerSupply.Config) */ {
 public:
  Components_Component_PowerSupply_Config();
  virtual ~Components_Component_PowerSupply_Config();

  Components_Component_PowerSupply_Config(const Components_Component_PowerSupply_Config& from);

  inline Components_Component_PowerSupply_Config& operator=(const Components_Component_PowerSupply_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_PowerSupply_Config(Components_Component_PowerSupply_Config&& from) noexcept
    : Components_Component_PowerSupply_Config() {
    *this = ::std::move(from);
  }

  inline Components_Component_PowerSupply_Config& operator=(Components_Component_PowerSupply_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_PowerSupply_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_PowerSupply_Config* internal_default_instance() {
    return reinterpret_cast<const Components_Component_PowerSupply_Config*>(
               &_Components_Component_PowerSupply_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(Components_Component_PowerSupply_Config* other);
  friend void swap(Components_Component_PowerSupply_Config& a, Components_Component_PowerSupply_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_PowerSupply_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_PowerSupply_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_PowerSupply_Config& from);
  void MergeFrom(const Components_Component_PowerSupply_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_PowerSupply_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.BoolValue enabled = 276021544 [(.yext.schemapath) = "/components/component/power-supply/config/enabled"];
  bool has_enabled() const;
  void clear_enabled();
  static const int kEnabledFieldNumber = 276021544;
  const ::ywrapper::BoolValue& enabled() const;
  ::ywrapper::BoolValue* release_enabled();
  ::ywrapper::BoolValue* mutable_enabled();
  void set_allocated_enabled(::ywrapper::BoolValue* enabled);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.PowerSupply.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::BoolValue* enabled_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_PowerSupply_ConfigImpl();
};
// -------------------------------------------------------------------

class Components_Component_PowerSupply_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.PowerSupply.State) */ {
 public:
  Components_Component_PowerSupply_State();
  virtual ~Components_Component_PowerSupply_State();

  Components_Component_PowerSupply_State(const Components_Component_PowerSupply_State& from);

  inline Components_Component_PowerSupply_State& operator=(const Components_Component_PowerSupply_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_PowerSupply_State(Components_Component_PowerSupply_State&& from) noexcept
    : Components_Component_PowerSupply_State() {
    *this = ::std::move(from);
  }

  inline Components_Component_PowerSupply_State& operator=(Components_Component_PowerSupply_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_PowerSupply_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_PowerSupply_State* internal_default_instance() {
    return reinterpret_cast<const Components_Component_PowerSupply_State*>(
               &_Components_Component_PowerSupply_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(Components_Component_PowerSupply_State* other);
  friend void swap(Components_Component_PowerSupply_State& a, Components_Component_PowerSupply_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_PowerSupply_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_PowerSupply_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_PowerSupply_State& from);
  void MergeFrom(const Components_Component_PowerSupply_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_PowerSupply_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.BytesValue output_voltage = 180631100 [(.yext.schemapath) = "/components/component/power-supply/state/output-voltage"];
  bool has_output_voltage() const;
  void clear_output_voltage();
  static const int kOutputVoltageFieldNumber = 180631100;
  const ::ywrapper::BytesValue& output_voltage() const;
  ::ywrapper::BytesValue* release_output_voltage();
  ::ywrapper::BytesValue* mutable_output_voltage();
  void set_allocated_output_voltage(::ywrapper::BytesValue* output_voltage);

  // .ywrapper.BytesValue capacity = 212758134 [(.yext.schemapath) = "/components/component/power-supply/state/capacity"];
  bool has_capacity() const;
  void clear_capacity();
  static const int kCapacityFieldNumber = 212758134;
  const ::ywrapper::BytesValue& capacity() const;
  ::ywrapper::BytesValue* release_capacity();
  ::ywrapper::BytesValue* mutable_capacity();
  void set_allocated_capacity(::ywrapper::BytesValue* capacity);

  // .ywrapper.BoolValue enabled = 221635705 [(.yext.schemapath) = "/components/component/power-supply/state/enabled"];
  bool has_enabled() const;
  void clear_enabled();
  static const int kEnabledFieldNumber = 221635705;
  const ::ywrapper::BoolValue& enabled() const;
  ::ywrapper::BoolValue* release_enabled();
  ::ywrapper::BoolValue* mutable_enabled();
  void set_allocated_enabled(::ywrapper::BoolValue* enabled);

  // .ywrapper.BytesValue output_power = 255979333 [(.yext.schemapath) = "/components/component/power-supply/state/output-power"];
  bool has_output_power() const;
  void clear_output_power();
  static const int kOutputPowerFieldNumber = 255979333;
  const ::ywrapper::BytesValue& output_power() const;
  ::ywrapper::BytesValue* release_output_power();
  ::ywrapper::BytesValue* mutable_output_power();
  void set_allocated_output_power(::ywrapper::BytesValue* output_power);

  // .ywrapper.BytesValue input_current = 259601702 [(.yext.schemapath) = "/components/component/power-supply/state/input-current"];
  bool has_input_current() const;
  void clear_input_current();
  static const int kInputCurrentFieldNumber = 259601702;
  const ::ywrapper::BytesValue& input_current() const;
  ::ywrapper::BytesValue* release_input_current();
  ::ywrapper::BytesValue* mutable_input_current();
  void set_allocated_input_current(::ywrapper::BytesValue* input_current);

  // .ywrapper.BytesValue input_voltage = 368014879 [(.yext.schemapath) = "/components/component/power-supply/state/input-voltage"];
  bool has_input_voltage() const;
  void clear_input_voltage();
  static const int kInputVoltageFieldNumber = 368014879;
  const ::ywrapper::BytesValue& input_voltage() const;
  ::ywrapper::BytesValue* release_input_voltage();
  ::ywrapper::BytesValue* mutable_input_voltage();
  void set_allocated_input_voltage(::ywrapper::BytesValue* input_voltage);

  // .ywrapper.BytesValue output_current = 456498973 [(.yext.schemapath) = "/components/component/power-supply/state/output-current"];
  bool has_output_current() const;
  void clear_output_current();
  static const int kOutputCurrentFieldNumber = 456498973;
  const ::ywrapper::BytesValue& output_current() const;
  ::ywrapper::BytesValue* release_output_current();
  ::ywrapper::BytesValue* mutable_output_current();
  void set_allocated_output_current(::ywrapper::BytesValue* output_current);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.PowerSupply.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::BytesValue* output_voltage_;
  ::ywrapper::BytesValue* capacity_;
  ::ywrapper::BoolValue* enabled_;
  ::ywrapper::BytesValue* output_power_;
  ::ywrapper::BytesValue* input_current_;
  ::ywrapper::BytesValue* input_voltage_;
  ::ywrapper::BytesValue* output_current_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_PowerSupply_StateImpl();
};
// -------------------------------------------------------------------

class Components_Component_PowerSupply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.PowerSupply) */ {
 public:
  Components_Component_PowerSupply();
  virtual ~Components_Component_PowerSupply();

  Components_Component_PowerSupply(const Components_Component_PowerSupply& from);

  inline Components_Component_PowerSupply& operator=(const Components_Component_PowerSupply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_PowerSupply(Components_Component_PowerSupply&& from) noexcept
    : Components_Component_PowerSupply() {
    *this = ::std::move(from);
  }

  inline Components_Component_PowerSupply& operator=(Components_Component_PowerSupply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_PowerSupply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_PowerSupply* internal_default_instance() {
    return reinterpret_cast<const Components_Component_PowerSupply*>(
               &_Components_Component_PowerSupply_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(Components_Component_PowerSupply* other);
  friend void swap(Components_Component_PowerSupply& a, Components_Component_PowerSupply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_PowerSupply* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_PowerSupply* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_PowerSupply& from);
  void MergeFrom(const Components_Component_PowerSupply& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_PowerSupply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component_PowerSupply_Config Config;
  typedef Components_Component_PowerSupply_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_platform.Components.Component.PowerSupply.Config config = 285921994 [(.yext.schemapath) = "/components/component/power-supply/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 285921994;
  const ::openconfig::openconfig_platform::Components_Component_PowerSupply_Config& config() const;
  ::openconfig::openconfig_platform::Components_Component_PowerSupply_Config* release_config();
  ::openconfig::openconfig_platform::Components_Component_PowerSupply_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_platform::Components_Component_PowerSupply_Config* config);

  // .openconfig.openconfig_platform.Components.Component.PowerSupply.State state = 327902055 [(.yext.schemapath) = "/components/component/power-supply/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 327902055;
  const ::openconfig::openconfig_platform::Components_Component_PowerSupply_State& state() const;
  ::openconfig::openconfig_platform::Components_Component_PowerSupply_State* release_state();
  ::openconfig::openconfig_platform::Components_Component_PowerSupply_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_platform::Components_Component_PowerSupply_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.PowerSupply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_platform::Components_Component_PowerSupply_Config* config_;
  ::openconfig::openconfig_platform::Components_Component_PowerSupply_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_PowerSupplyImpl();
};
// -------------------------------------------------------------------

class Components_Component_Properties_Property_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Properties.Property.Config) */ {
 public:
  Components_Component_Properties_Property_Config();
  virtual ~Components_Component_Properties_Property_Config();

  Components_Component_Properties_Property_Config(const Components_Component_Properties_Property_Config& from);

  inline Components_Component_Properties_Property_Config& operator=(const Components_Component_Properties_Property_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Properties_Property_Config(Components_Component_Properties_Property_Config&& from) noexcept
    : Components_Component_Properties_Property_Config() {
    *this = ::std::move(from);
  }

  inline Components_Component_Properties_Property_Config& operator=(Components_Component_Properties_Property_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Properties_Property_Config& default_instance();

  enum ValueCase {
    kValueBool = 320942043,
    kValueSint64 = 532815527,
    kValueString = 259657076,
    kValueUint64 = 1206141,
    kValueDecimal64Value = 342547513,
    VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Properties_Property_Config* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Properties_Property_Config*>(
               &_Components_Component_Properties_Property_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(Components_Component_Properties_Property_Config* other);
  friend void swap(Components_Component_Properties_Property_Config& a, Components_Component_Properties_Property_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Properties_Property_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Properties_Property_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Properties_Property_Config& from);
  void MergeFrom(const Components_Component_Properties_Property_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Properties_Property_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue name = 516657476 [(.yext.schemapath) = "/components/component/properties/property/config/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 516657476;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // bool value_bool = 320942043;
  private:
  bool has_value_bool() const;
  public:
  void clear_value_bool();
  static const int kValueBoolFieldNumber = 320942043;
  bool value_bool() const;
  void set_value_bool(bool value);

  // sint64 value_sint64 = 532815527;
  private:
  bool has_value_sint64() const;
  public:
  void clear_value_sint64();
  static const int kValueSint64FieldNumber = 532815527;
  ::google::protobuf::int64 value_sint64() const;
  void set_value_sint64(::google::protobuf::int64 value);

  // string value_string = 259657076;
  private:
  bool has_value_string() const;
  public:
  void clear_value_string();
  static const int kValueStringFieldNumber = 259657076;
  const ::std::string& value_string() const;
  void set_value_string(const ::std::string& value);
  #if LANG_CXX11
  void set_value_string(::std::string&& value);
  #endif
  void set_value_string(const char* value);
  void set_value_string(const char* value, size_t size);
  ::std::string* mutable_value_string();
  ::std::string* release_value_string();
  void set_allocated_value_string(::std::string* value_string);

  // uint64 value_uint64 = 1206141;
  private:
  bool has_value_uint64() const;
  public:
  void clear_value_uint64();
  static const int kValueUint64FieldNumber = 1206141;
  ::google::protobuf::uint64 value_uint64() const;
  void set_value_uint64(::google::protobuf::uint64 value);

  // .ywrapper.Decimal64Value value_decimal64value = 342547513;
  bool has_value_decimal64value() const;
  void clear_value_decimal64value();
  static const int kValueDecimal64ValueFieldNumber = 342547513;
  const ::ywrapper::Decimal64Value& value_decimal64value() const;
  ::ywrapper::Decimal64Value* release_value_decimal64value();
  ::ywrapper::Decimal64Value* mutable_value_decimal64value();
  void set_allocated_value_decimal64value(::ywrapper::Decimal64Value* value_decimal64value);

  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Properties.Property.Config)
 private:
  void set_has_value_bool();
  void set_has_value_sint64();
  void set_has_value_string();
  void set_has_value_uint64();
  void set_has_value_decimal64value();

  inline bool has_value() const;
  void clear_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* name_;
  union ValueUnion {
    ValueUnion() {}
    bool value_bool_;
    ::google::protobuf::int64 value_sint64_;
    ::google::protobuf::internal::ArenaStringPtr value_string_;
    ::google::protobuf::uint64 value_uint64_;
    ::ywrapper::Decimal64Value* value_decimal64value_;
  } value_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Properties_Property_ConfigImpl();
};
// -------------------------------------------------------------------

class Components_Component_Properties_Property_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Properties.Property.State) */ {
 public:
  Components_Component_Properties_Property_State();
  virtual ~Components_Component_Properties_Property_State();

  Components_Component_Properties_Property_State(const Components_Component_Properties_Property_State& from);

  inline Components_Component_Properties_Property_State& operator=(const Components_Component_Properties_Property_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Properties_Property_State(Components_Component_Properties_Property_State&& from) noexcept
    : Components_Component_Properties_Property_State() {
    *this = ::std::move(from);
  }

  inline Components_Component_Properties_Property_State& operator=(Components_Component_Properties_Property_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Properties_Property_State& default_instance();

  enum ValueCase {
    kValueBool = 14419492,
    kValueSint64 = 524890380,
    kValueString = 189491959,
    kValueUint64 = 534672330,
    kValueDecimal64Value = 190240218,
    VALUE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Properties_Property_State* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Properties_Property_State*>(
               &_Components_Component_Properties_Property_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(Components_Component_Properties_Property_State* other);
  friend void swap(Components_Component_Properties_Property_State& a, Components_Component_Properties_Property_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Properties_Property_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Properties_Property_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Properties_Property_State& from);
  void MergeFrom(const Components_Component_Properties_Property_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Properties_Property_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue name = 71072955 [(.yext.schemapath) = "/components/component/properties/property/state/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 71072955;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .ywrapper.BoolValue configurable = 264996693 [(.yext.schemapath) = "/components/component/properties/property/state/configurable"];
  bool has_configurable() const;
  void clear_configurable();
  static const int kConfigurableFieldNumber = 264996693;
  const ::ywrapper::BoolValue& configurable() const;
  ::ywrapper::BoolValue* release_configurable();
  ::ywrapper::BoolValue* mutable_configurable();
  void set_allocated_configurable(::ywrapper::BoolValue* configurable);

  // bool value_bool = 14419492;
  private:
  bool has_value_bool() const;
  public:
  void clear_value_bool();
  static const int kValueBoolFieldNumber = 14419492;
  bool value_bool() const;
  void set_value_bool(bool value);

  // sint64 value_sint64 = 524890380;
  private:
  bool has_value_sint64() const;
  public:
  void clear_value_sint64();
  static const int kValueSint64FieldNumber = 524890380;
  ::google::protobuf::int64 value_sint64() const;
  void set_value_sint64(::google::protobuf::int64 value);

  // string value_string = 189491959;
  private:
  bool has_value_string() const;
  public:
  void clear_value_string();
  static const int kValueStringFieldNumber = 189491959;
  const ::std::string& value_string() const;
  void set_value_string(const ::std::string& value);
  #if LANG_CXX11
  void set_value_string(::std::string&& value);
  #endif
  void set_value_string(const char* value);
  void set_value_string(const char* value, size_t size);
  ::std::string* mutable_value_string();
  ::std::string* release_value_string();
  void set_allocated_value_string(::std::string* value_string);

  // uint64 value_uint64 = 534672330;
  private:
  bool has_value_uint64() const;
  public:
  void clear_value_uint64();
  static const int kValueUint64FieldNumber = 534672330;
  ::google::protobuf::uint64 value_uint64() const;
  void set_value_uint64(::google::protobuf::uint64 value);

  // .ywrapper.Decimal64Value value_decimal64value = 190240218;
  bool has_value_decimal64value() const;
  void clear_value_decimal64value();
  static const int kValueDecimal64ValueFieldNumber = 190240218;
  const ::ywrapper::Decimal64Value& value_decimal64value() const;
  ::ywrapper::Decimal64Value* release_value_decimal64value();
  ::ywrapper::Decimal64Value* mutable_value_decimal64value();
  void set_allocated_value_decimal64value(::ywrapper::Decimal64Value* value_decimal64value);

  ValueCase value_case() const;
  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Properties.Property.State)
 private:
  void set_has_value_bool();
  void set_has_value_sint64();
  void set_has_value_string();
  void set_has_value_uint64();
  void set_has_value_decimal64value();

  inline bool has_value() const;
  void clear_value();
  inline void clear_has_value();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* name_;
  ::ywrapper::BoolValue* configurable_;
  union ValueUnion {
    ValueUnion() {}
    bool value_bool_;
    ::google::protobuf::int64 value_sint64_;
    ::google::protobuf::internal::ArenaStringPtr value_string_;
    ::google::protobuf::uint64 value_uint64_;
    ::ywrapper::Decimal64Value* value_decimal64value_;
  } value_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Properties_Property_StateImpl();
};
// -------------------------------------------------------------------

class Components_Component_Properties_Property : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Properties.Property) */ {
 public:
  Components_Component_Properties_Property();
  virtual ~Components_Component_Properties_Property();

  Components_Component_Properties_Property(const Components_Component_Properties_Property& from);

  inline Components_Component_Properties_Property& operator=(const Components_Component_Properties_Property& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Properties_Property(Components_Component_Properties_Property&& from) noexcept
    : Components_Component_Properties_Property() {
    *this = ::std::move(from);
  }

  inline Components_Component_Properties_Property& operator=(Components_Component_Properties_Property&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Properties_Property& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Properties_Property* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Properties_Property*>(
               &_Components_Component_Properties_Property_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(Components_Component_Properties_Property* other);
  friend void swap(Components_Component_Properties_Property& a, Components_Component_Properties_Property& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Properties_Property* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Properties_Property* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Properties_Property& from);
  void MergeFrom(const Components_Component_Properties_Property& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Properties_Property* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component_Properties_Property_Config Config;
  typedef Components_Component_Properties_Property_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_platform.Components.Component.Properties.Property.State state = 19033227 [(.yext.schemapath) = "/components/component/properties/property/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 19033227;
  const ::openconfig::openconfig_platform::Components_Component_Properties_Property_State& state() const;
  ::openconfig::openconfig_platform::Components_Component_Properties_Property_State* release_state();
  ::openconfig::openconfig_platform::Components_Component_Properties_Property_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_platform::Components_Component_Properties_Property_State* state);

  // .openconfig.openconfig_platform.Components.Component.Properties.Property.Config config = 159293982 [(.yext.schemapath) = "/components/component/properties/property/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 159293982;
  const ::openconfig::openconfig_platform::Components_Component_Properties_Property_Config& config() const;
  ::openconfig::openconfig_platform::Components_Component_Properties_Property_Config* release_config();
  ::openconfig::openconfig_platform::Components_Component_Properties_Property_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_platform::Components_Component_Properties_Property_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Properties.Property)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_platform::Components_Component_Properties_Property_State* state_;
  ::openconfig::openconfig_platform::Components_Component_Properties_Property_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Properties_PropertyImpl();
};
// -------------------------------------------------------------------

class Components_Component_Properties_PropertyKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey) */ {
 public:
  Components_Component_Properties_PropertyKey();
  virtual ~Components_Component_Properties_PropertyKey();

  Components_Component_Properties_PropertyKey(const Components_Component_Properties_PropertyKey& from);

  inline Components_Component_Properties_PropertyKey& operator=(const Components_Component_Properties_PropertyKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Properties_PropertyKey(Components_Component_Properties_PropertyKey&& from) noexcept
    : Components_Component_Properties_PropertyKey() {
    *this = ::std::move(from);
  }

  inline Components_Component_Properties_PropertyKey& operator=(Components_Component_Properties_PropertyKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Properties_PropertyKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Properties_PropertyKey* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Properties_PropertyKey*>(
               &_Components_Component_Properties_PropertyKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(Components_Component_Properties_PropertyKey* other);
  friend void swap(Components_Component_Properties_PropertyKey& a, Components_Component_Properties_PropertyKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Properties_PropertyKey* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Properties_PropertyKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Properties_PropertyKey& from);
  void MergeFrom(const Components_Component_Properties_PropertyKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Properties_PropertyKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1 [(.yext.schemapath) = "/components/component/properties/property/name"];
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .openconfig.openconfig_platform.Components.Component.Properties.Property property = 2;
  bool has_property() const;
  void clear_property();
  static const int kPropertyFieldNumber = 2;
  const ::openconfig::openconfig_platform::Components_Component_Properties_Property& property() const;
  ::openconfig::openconfig_platform::Components_Component_Properties_Property* release_property();
  ::openconfig::openconfig_platform::Components_Component_Properties_Property* mutable_property();
  void set_allocated_property(::openconfig::openconfig_platform::Components_Component_Properties_Property* property);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::openconfig::openconfig_platform::Components_Component_Properties_Property* property_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Properties_PropertyKeyImpl();
};
// -------------------------------------------------------------------

class Components_Component_Properties : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Properties) */ {
 public:
  Components_Component_Properties();
  virtual ~Components_Component_Properties();

  Components_Component_Properties(const Components_Component_Properties& from);

  inline Components_Component_Properties& operator=(const Components_Component_Properties& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Properties(Components_Component_Properties&& from) noexcept
    : Components_Component_Properties() {
    *this = ::std::move(from);
  }

  inline Components_Component_Properties& operator=(Components_Component_Properties&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Properties& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Properties* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Properties*>(
               &_Components_Component_Properties_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(Components_Component_Properties* other);
  friend void swap(Components_Component_Properties& a, Components_Component_Properties& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Properties* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Properties* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Properties& from);
  void MergeFrom(const Components_Component_Properties& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Properties* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component_Properties_Property Property;
  typedef Components_Component_Properties_PropertyKey PropertyKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_platform.Components.Component.Properties.PropertyKey property = 502076969 [(.yext.schemapath) = "/components/component/properties/property"];
  int property_size() const;
  void clear_property();
  static const int kPropertyFieldNumber = 502076969;
  const ::openconfig::openconfig_platform::Components_Component_Properties_PropertyKey& property(int index) const;
  ::openconfig::openconfig_platform::Components_Component_Properties_PropertyKey* mutable_property(int index);
  ::openconfig::openconfig_platform::Components_Component_Properties_PropertyKey* add_property();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_platform::Components_Component_Properties_PropertyKey >*
      mutable_property();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_platform::Components_Component_Properties_PropertyKey >&
      property() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Properties)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_platform::Components_Component_Properties_PropertyKey > property_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_PropertiesImpl();
};
// -------------------------------------------------------------------

class Components_Component_State_Memory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.State.Memory) */ {
 public:
  Components_Component_State_Memory();
  virtual ~Components_Component_State_Memory();

  Components_Component_State_Memory(const Components_Component_State_Memory& from);

  inline Components_Component_State_Memory& operator=(const Components_Component_State_Memory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_State_Memory(Components_Component_State_Memory&& from) noexcept
    : Components_Component_State_Memory() {
    *this = ::std::move(from);
  }

  inline Components_Component_State_Memory& operator=(Components_Component_State_Memory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_State_Memory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_State_Memory* internal_default_instance() {
    return reinterpret_cast<const Components_Component_State_Memory*>(
               &_Components_Component_State_Memory_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(Components_Component_State_Memory* other);
  friend void swap(Components_Component_State_Memory& a, Components_Component_State_Memory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_State_Memory* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_State_Memory* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_State_Memory& from);
  void MergeFrom(const Components_Component_State_Memory& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_State_Memory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue utilized = 235118644 [(.yext.schemapath) = "/components/component/state/memory/utilized"];
  bool has_utilized() const;
  void clear_utilized();
  static const int kUtilizedFieldNumber = 235118644;
  const ::ywrapper::UintValue& utilized() const;
  ::ywrapper::UintValue* release_utilized();
  ::ywrapper::UintValue* mutable_utilized();
  void set_allocated_utilized(::ywrapper::UintValue* utilized);

  // .ywrapper.UintValue available = 322322459 [(.yext.schemapath) = "/components/component/state/memory/available"];
  bool has_available() const;
  void clear_available();
  static const int kAvailableFieldNumber = 322322459;
  const ::ywrapper::UintValue& available() const;
  ::ywrapper::UintValue* release_available();
  ::ywrapper::UintValue* mutable_available();
  void set_allocated_available(::ywrapper::UintValue* available);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.State.Memory)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* utilized_;
  ::ywrapper::UintValue* available_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_State_MemoryImpl();
};
// -------------------------------------------------------------------

class Components_Component_State_Temperature : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.State.Temperature) */ {
 public:
  Components_Component_State_Temperature();
  virtual ~Components_Component_State_Temperature();

  Components_Component_State_Temperature(const Components_Component_State_Temperature& from);

  inline Components_Component_State_Temperature& operator=(const Components_Component_State_Temperature& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_State_Temperature(Components_Component_State_Temperature&& from) noexcept
    : Components_Component_State_Temperature() {
    *this = ::std::move(from);
  }

  inline Components_Component_State_Temperature& operator=(Components_Component_State_Temperature&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_State_Temperature& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_State_Temperature* internal_default_instance() {
    return reinterpret_cast<const Components_Component_State_Temperature*>(
               &_Components_Component_State_Temperature_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(Components_Component_State_Temperature* other);
  friend void swap(Components_Component_State_Temperature& a, Components_Component_State_Temperature& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_State_Temperature* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_State_Temperature* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_State_Temperature& from);
  void MergeFrom(const Components_Component_State_Temperature& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_State_Temperature* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value min = 18747561 [(.yext.schemapath) = "/components/component/state/temperature/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 18747561;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // .ywrapper.Decimal64Value avg = 100651349 [(.yext.schemapath) = "/components/component/state/temperature/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 100651349;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // .ywrapper.BoolValue alarm_status = 176894761 [(.yext.schemapath) = "/components/component/state/temperature/alarm-status"];
  bool has_alarm_status() const;
  void clear_alarm_status();
  static const int kAlarmStatusFieldNumber = 176894761;
  const ::ywrapper::BoolValue& alarm_status() const;
  ::ywrapper::BoolValue* release_alarm_status();
  ::ywrapper::BoolValue* mutable_alarm_status();
  void set_allocated_alarm_status(::ywrapper::BoolValue* alarm_status);

  // .ywrapper.Decimal64Value instant = 206000082 [(.yext.schemapath) = "/components/component/state/temperature/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 206000082;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.UintValue alarm_threshold = 231489284 [(.yext.schemapath) = "/components/component/state/temperature/alarm-threshold"];
  bool has_alarm_threshold() const;
  void clear_alarm_threshold();
  static const int kAlarmThresholdFieldNumber = 231489284;
  const ::ywrapper::UintValue& alarm_threshold() const;
  ::ywrapper::UintValue* release_alarm_threshold();
  ::ywrapper::UintValue* mutable_alarm_threshold();
  void set_allocated_alarm_threshold(::ywrapper::UintValue* alarm_threshold);

  // .ywrapper.UintValue interval = 407404980 [(.yext.schemapath) = "/components/component/state/temperature/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 407404980;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.Decimal64Value max = 421397591 [(.yext.schemapath) = "/components/component/state/temperature/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 421397591;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // .openconfig.enums.OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY alarm_severity = 296397186 [(.yext.schemapath) = "/components/component/state/temperature/alarm-severity"];
  void clear_alarm_severity();
  static const int kAlarmSeverityFieldNumber = 296397186;
  ::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY alarm_severity() const;
  void set_alarm_severity(::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.State.Temperature)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* min_;
  ::ywrapper::Decimal64Value* avg_;
  ::ywrapper::BoolValue* alarm_status_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::UintValue* alarm_threshold_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::Decimal64Value* max_;
  int alarm_severity_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_State_TemperatureImpl();
};
// -------------------------------------------------------------------

class Components_Component_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.State) */ {
 public:
  Components_Component_State();
  virtual ~Components_Component_State();

  Components_Component_State(const Components_Component_State& from);

  inline Components_Component_State& operator=(const Components_Component_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_State(Components_Component_State&& from) noexcept
    : Components_Component_State() {
    *this = ::std::move(from);
  }

  inline Components_Component_State& operator=(Components_Component_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_State& default_instance();

  enum TypeCase {
    kTypeOpenconfigplatformtypesopenconfighardwarecomponent = 423705132,
    kTypeOpenconfigplatformtypesopenconfigsoftwarecomponent = 366278741,
    TYPE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_State* internal_default_instance() {
    return reinterpret_cast<const Components_Component_State*>(
               &_Components_Component_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(Components_Component_State* other);
  friend void swap(Components_Component_State& a, Components_Component_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_State& from);
  void MergeFrom(const Components_Component_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component_State_Memory Memory;
  typedef Components_Component_State_Temperature Temperature;

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue hardware_version = 49616205 [(.yext.schemapath) = "/components/component/state/hardware-version"];
  bool has_hardware_version() const;
  void clear_hardware_version();
  static const int kHardwareVersionFieldNumber = 49616205;
  const ::ywrapper::StringValue& hardware_version() const;
  ::ywrapper::StringValue* release_hardware_version();
  ::ywrapper::StringValue* mutable_hardware_version();
  void set_allocated_hardware_version(::ywrapper::StringValue* hardware_version);

  // .ywrapper.UintValue entity_id = 53940879 [(.yext.schemapath) = "/components/component/state/entity-id"];
  bool has_entity_id() const;
  void clear_entity_id();
  static const int kEntityIdFieldNumber = 53940879;
  const ::ywrapper::UintValue& entity_id() const;
  ::ywrapper::UintValue* release_entity_id();
  ::ywrapper::UintValue* mutable_entity_id();
  void set_allocated_entity_id(::ywrapper::UintValue* entity_id);

  // .ywrapper.StringValue mfg_name = 80033814 [(.yext.schemapath) = "/components/component/state/mfg-name"];
  bool has_mfg_name() const;
  void clear_mfg_name();
  static const int kMfgNameFieldNumber = 80033814;
  const ::ywrapper::StringValue& mfg_name() const;
  ::ywrapper::StringValue* release_mfg_name();
  ::ywrapper::StringValue* mutable_mfg_name();
  void set_allocated_mfg_name(::ywrapper::StringValue* mfg_name);

  // .ywrapper.StringValue name = 111678303 [(.yext.schemapath) = "/components/component/state/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 111678303;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .ywrapper.StringValue description = 167549616 [(.yext.schemapath) = "/components/component/state/description"];
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 167549616;
  const ::ywrapper::StringValue& description() const;
  ::ywrapper::StringValue* release_description();
  ::ywrapper::StringValue* mutable_description();
  void set_allocated_description(::ywrapper::StringValue* description);

  // .openconfig.openconfig_platform.Components.Component.State.Temperature temperature = 169040172 [(.yext.schemapath) = "/components/component/state/temperature"];
  bool has_temperature() const;
  void clear_temperature();
  static const int kTemperatureFieldNumber = 169040172;
  const ::openconfig::openconfig_platform::Components_Component_State_Temperature& temperature() const;
  ::openconfig::openconfig_platform::Components_Component_State_Temperature* release_temperature();
  ::openconfig::openconfig_platform::Components_Component_State_Temperature* mutable_temperature();
  void set_allocated_temperature(::openconfig::openconfig_platform::Components_Component_State_Temperature* temperature);

  // .ywrapper.StringValue part_no = 173082367 [(.yext.schemapath) = "/components/component/state/part-no"];
  bool has_part_no() const;
  void clear_part_no();
  static const int kPartNoFieldNumber = 173082367;
  const ::ywrapper::StringValue& part_no() const;
  ::ywrapper::StringValue* release_part_no();
  ::ywrapper::StringValue* mutable_part_no();
  void set_allocated_part_no(::ywrapper::StringValue* part_no);

  // .ywrapper.StringValue software_version = 220526526 [(.yext.schemapath) = "/components/component/state/software-version"];
  bool has_software_version() const;
  void clear_software_version();
  static const int kSoftwareVersionFieldNumber = 220526526;
  const ::ywrapper::StringValue& software_version() const;
  ::ywrapper::StringValue* release_software_version();
  ::ywrapper::StringValue* mutable_software_version();
  void set_allocated_software_version(::ywrapper::StringValue* software_version);

  // .ywrapper.StringValue firmware_version = 244667518 [(.yext.schemapath) = "/components/component/state/firmware-version"];
  bool has_firmware_version() const;
  void clear_firmware_version();
  static const int kFirmwareVersionFieldNumber = 244667518;
  const ::ywrapper::StringValue& firmware_version() const;
  ::ywrapper::StringValue* release_firmware_version();
  ::ywrapper::StringValue* mutable_firmware_version();
  void set_allocated_firmware_version(::ywrapper::StringValue* firmware_version);

  // .ywrapper.StringValue id = 246882465 [(.yext.schemapath) = "/components/component/state/id"];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 246882465;
  const ::ywrapper::StringValue& id() const;
  ::ywrapper::StringValue* release_id();
  ::ywrapper::StringValue* mutable_id();
  void set_allocated_id(::ywrapper::StringValue* id);

  // .ywrapper.UintValue used_power = 259754309 [(.yext.schemapath) = "/components/component/state/used-power"];
  bool has_used_power() const;
  void clear_used_power();
  static const int kUsedPowerFieldNumber = 259754309;
  const ::ywrapper::UintValue& used_power() const;
  ::ywrapper::UintValue* release_used_power();
  ::ywrapper::UintValue* mutable_used_power();
  void set_allocated_used_power(::ywrapper::UintValue* used_power);

  // .ywrapper.BoolValue equipment_mismatch = 311608903 [(.yext.schemapath) = "/components/component/state/equipment-mismatch"];
  bool has_equipment_mismatch() const;
  void clear_equipment_mismatch();
  static const int kEquipmentMismatchFieldNumber = 311608903;
  const ::ywrapper::BoolValue& equipment_mismatch() const;
  ::ywrapper::BoolValue* release_equipment_mismatch();
  ::ywrapper::BoolValue* mutable_equipment_mismatch();
  void set_allocated_equipment_mismatch(::ywrapper::BoolValue* equipment_mismatch);

  // .ywrapper.UintValue allocated_power = 382835825 [(.yext.schemapath) = "/components/component/state/allocated-power"];
  bool has_allocated_power() const;
  void clear_allocated_power();
  static const int kAllocatedPowerFieldNumber = 382835825;
  const ::ywrapper::UintValue& allocated_power() const;
  ::ywrapper::UintValue* release_allocated_power();
  ::ywrapper::UintValue* mutable_allocated_power();
  void set_allocated_allocated_power(::ywrapper::UintValue* allocated_power);

  // .openconfig.openconfig_platform.Components.Component.State.Memory memory = 443182963 [(.yext.schemapath) = "/components/component/state/memory"];
  bool has_memory() const;
  void clear_memory();
  static const int kMemoryFieldNumber = 443182963;
  const ::openconfig::openconfig_platform::Components_Component_State_Memory& memory() const;
  ::openconfig::openconfig_platform::Components_Component_State_Memory* release_memory();
  ::openconfig::openconfig_platform::Components_Component_State_Memory* mutable_memory();
  void set_allocated_memory(::openconfig::openconfig_platform::Components_Component_State_Memory* memory);

  // .ywrapper.BoolValue equipment_failure = 471038183 [(.yext.schemapath) = "/components/component/state/equipment-failure"];
  bool has_equipment_failure() const;
  void clear_equipment_failure();
  static const int kEquipmentFailureFieldNumber = 471038183;
  const ::ywrapper::BoolValue& equipment_failure() const;
  ::ywrapper::BoolValue* release_equipment_failure();
  ::ywrapper::BoolValue* mutable_equipment_failure();
  void set_allocated_equipment_failure(::ywrapper::BoolValue* equipment_failure);

  // .ywrapper.StringValue serial_no = 490029750 [(.yext.schemapath) = "/components/component/state/serial-no"];
  bool has_serial_no() const;
  void clear_serial_no();
  static const int kSerialNoFieldNumber = 490029750;
  const ::ywrapper::StringValue& serial_no() const;
  ::ywrapper::StringValue* release_serial_no();
  ::ywrapper::StringValue* mutable_serial_no();
  void set_allocated_serial_no(::ywrapper::StringValue* serial_no);

  // .openconfig.enums.OpenconfigPlatformTypesCOMPONENTOPERSTATUS oper_status = 378023501 [(.yext.schemapath) = "/components/component/state/oper-status"];
  void clear_oper_status();
  static const int kOperStatusFieldNumber = 378023501;
  ::openconfig::enums::OpenconfigPlatformTypesCOMPONENTOPERSTATUS oper_status() const;
  void set_oper_status(::openconfig::enums::OpenconfigPlatformTypesCOMPONENTOPERSTATUS value);

  // .openconfig.enums.OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT type_openconfigplatformtypesopenconfighardwarecomponent = 423705132;
  private:
  bool has_type_openconfigplatformtypesopenconfighardwarecomponent() const;
  public:
  void clear_type_openconfigplatformtypesopenconfighardwarecomponent();
  static const int kTypeOpenconfigplatformtypesopenconfighardwarecomponentFieldNumber = 423705132;
  ::openconfig::enums::OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT type_openconfigplatformtypesopenconfighardwarecomponent() const;
  void set_type_openconfigplatformtypesopenconfighardwarecomponent(::openconfig::enums::OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT value);

  // .openconfig.enums.OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT type_openconfigplatformtypesopenconfigsoftwarecomponent = 366278741;
  private:
  bool has_type_openconfigplatformtypesopenconfigsoftwarecomponent() const;
  public:
  void clear_type_openconfigplatformtypesopenconfigsoftwarecomponent();
  static const int kTypeOpenconfigplatformtypesopenconfigsoftwarecomponentFieldNumber = 366278741;
  ::openconfig::enums::OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT type_openconfigplatformtypesopenconfigsoftwarecomponent() const;
  void set_type_openconfigplatformtypesopenconfigsoftwarecomponent(::openconfig::enums::OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT value);

  TypeCase type_case() const;
  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.State)
 private:
  void set_has_type_openconfigplatformtypesopenconfighardwarecomponent();
  void set_has_type_openconfigplatformtypesopenconfigsoftwarecomponent();

  inline bool has_type() const;
  void clear_type();
  inline void clear_has_type();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* hardware_version_;
  ::ywrapper::UintValue* entity_id_;
  ::ywrapper::StringValue* mfg_name_;
  ::ywrapper::StringValue* name_;
  ::ywrapper::StringValue* description_;
  ::openconfig::openconfig_platform::Components_Component_State_Temperature* temperature_;
  ::ywrapper::StringValue* part_no_;
  ::ywrapper::StringValue* software_version_;
  ::ywrapper::StringValue* firmware_version_;
  ::ywrapper::StringValue* id_;
  ::ywrapper::UintValue* used_power_;
  ::ywrapper::BoolValue* equipment_mismatch_;
  ::ywrapper::UintValue* allocated_power_;
  ::openconfig::openconfig_platform::Components_Component_State_Memory* memory_;
  ::ywrapper::BoolValue* equipment_failure_;
  ::ywrapper::StringValue* serial_no_;
  int oper_status_;
  union TypeUnion {
    TypeUnion() {}
    int type_openconfigplatformtypesopenconfighardwarecomponent_;
    int type_openconfigplatformtypesopenconfigsoftwarecomponent_;
  } type_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_StateImpl();
};
// -------------------------------------------------------------------

class Components_Component_Storage_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Storage.Config) */ {
 public:
  Components_Component_Storage_Config();
  virtual ~Components_Component_Storage_Config();

  Components_Component_Storage_Config(const Components_Component_Storage_Config& from);

  inline Components_Component_Storage_Config& operator=(const Components_Component_Storage_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Storage_Config(Components_Component_Storage_Config&& from) noexcept
    : Components_Component_Storage_Config() {
    *this = ::std::move(from);
  }

  inline Components_Component_Storage_Config& operator=(Components_Component_Storage_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Storage_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Storage_Config* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Storage_Config*>(
               &_Components_Component_Storage_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(Components_Component_Storage_Config* other);
  friend void swap(Components_Component_Storage_Config& a, Components_Component_Storage_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Storage_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Storage_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Storage_Config& from);
  void MergeFrom(const Components_Component_Storage_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Storage_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Storage.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Storage_ConfigImpl();
};
// -------------------------------------------------------------------

class Components_Component_Storage_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Storage.State) */ {
 public:
  Components_Component_Storage_State();
  virtual ~Components_Component_Storage_State();

  Components_Component_Storage_State(const Components_Component_Storage_State& from);

  inline Components_Component_Storage_State& operator=(const Components_Component_Storage_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Storage_State(Components_Component_Storage_State&& from) noexcept
    : Components_Component_Storage_State() {
    *this = ::std::move(from);
  }

  inline Components_Component_Storage_State& operator=(Components_Component_Storage_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Storage_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Storage_State* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Storage_State*>(
               &_Components_Component_Storage_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(Components_Component_Storage_State* other);
  friend void swap(Components_Component_Storage_State& a, Components_Component_Storage_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Storage_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Storage_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Storage_State& from);
  void MergeFrom(const Components_Component_Storage_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Storage_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Storage.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Storage_StateImpl();
};
// -------------------------------------------------------------------

class Components_Component_Storage : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Storage) */ {
 public:
  Components_Component_Storage();
  virtual ~Components_Component_Storage();

  Components_Component_Storage(const Components_Component_Storage& from);

  inline Components_Component_Storage& operator=(const Components_Component_Storage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Storage(Components_Component_Storage&& from) noexcept
    : Components_Component_Storage() {
    *this = ::std::move(from);
  }

  inline Components_Component_Storage& operator=(Components_Component_Storage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Storage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Storage* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Storage*>(
               &_Components_Component_Storage_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(Components_Component_Storage* other);
  friend void swap(Components_Component_Storage& a, Components_Component_Storage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Storage* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Storage* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Storage& from);
  void MergeFrom(const Components_Component_Storage& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Storage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component_Storage_Config Config;
  typedef Components_Component_Storage_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_platform.Components.Component.Storage.State state = 68412165 [(.yext.schemapath) = "/components/component/storage/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 68412165;
  const ::openconfig::openconfig_platform::Components_Component_Storage_State& state() const;
  ::openconfig::openconfig_platform::Components_Component_Storage_State* release_state();
  ::openconfig::openconfig_platform::Components_Component_Storage_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_platform::Components_Component_Storage_State* state);

  // .openconfig.openconfig_platform.Components.Component.Storage.Config config = 522152076 [(.yext.schemapath) = "/components/component/storage/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 522152076;
  const ::openconfig::openconfig_platform::Components_Component_Storage_Config& config() const;
  ::openconfig::openconfig_platform::Components_Component_Storage_Config* release_config();
  ::openconfig::openconfig_platform::Components_Component_Storage_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_platform::Components_Component_Storage_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Storage)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_platform::Components_Component_Storage_State* state_;
  ::openconfig::openconfig_platform::Components_Component_Storage_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_StorageImpl();
};
// -------------------------------------------------------------------

class Components_Component_Subcomponents_Subcomponent_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config) */ {
 public:
  Components_Component_Subcomponents_Subcomponent_Config();
  virtual ~Components_Component_Subcomponents_Subcomponent_Config();

  Components_Component_Subcomponents_Subcomponent_Config(const Components_Component_Subcomponents_Subcomponent_Config& from);

  inline Components_Component_Subcomponents_Subcomponent_Config& operator=(const Components_Component_Subcomponents_Subcomponent_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Subcomponents_Subcomponent_Config(Components_Component_Subcomponents_Subcomponent_Config&& from) noexcept
    : Components_Component_Subcomponents_Subcomponent_Config() {
    *this = ::std::move(from);
  }

  inline Components_Component_Subcomponents_Subcomponent_Config& operator=(Components_Component_Subcomponents_Subcomponent_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Subcomponents_Subcomponent_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Subcomponents_Subcomponent_Config* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Subcomponents_Subcomponent_Config*>(
               &_Components_Component_Subcomponents_Subcomponent_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    59;

  void Swap(Components_Component_Subcomponents_Subcomponent_Config* other);
  friend void swap(Components_Component_Subcomponents_Subcomponent_Config& a, Components_Component_Subcomponents_Subcomponent_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Subcomponents_Subcomponent_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Subcomponents_Subcomponent_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Subcomponents_Subcomponent_Config& from);
  void MergeFrom(const Components_Component_Subcomponents_Subcomponent_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Subcomponents_Subcomponent_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue name = 137591847 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/config/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 137591847;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* name_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Subcomponents_Subcomponent_ConfigImpl();
};
// -------------------------------------------------------------------

class Components_Component_Subcomponents_Subcomponent_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State) */ {
 public:
  Components_Component_Subcomponents_Subcomponent_State();
  virtual ~Components_Component_Subcomponents_Subcomponent_State();

  Components_Component_Subcomponents_Subcomponent_State(const Components_Component_Subcomponents_Subcomponent_State& from);

  inline Components_Component_Subcomponents_Subcomponent_State& operator=(const Components_Component_Subcomponents_Subcomponent_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Subcomponents_Subcomponent_State(Components_Component_Subcomponents_Subcomponent_State&& from) noexcept
    : Components_Component_Subcomponents_Subcomponent_State() {
    *this = ::std::move(from);
  }

  inline Components_Component_Subcomponents_Subcomponent_State& operator=(Components_Component_Subcomponents_Subcomponent_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Subcomponents_Subcomponent_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Subcomponents_Subcomponent_State* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Subcomponents_Subcomponent_State*>(
               &_Components_Component_Subcomponents_Subcomponent_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(Components_Component_Subcomponents_Subcomponent_State* other);
  friend void swap(Components_Component_Subcomponents_Subcomponent_State& a, Components_Component_Subcomponents_Subcomponent_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Subcomponents_Subcomponent_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Subcomponents_Subcomponent_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Subcomponents_Subcomponent_State& from);
  void MergeFrom(const Components_Component_Subcomponents_Subcomponent_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Subcomponents_Subcomponent_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue name = 123244986 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/state/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 123244986;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* name_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Subcomponents_Subcomponent_StateImpl();
};
// -------------------------------------------------------------------

class Components_Component_Subcomponents_Subcomponent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent) */ {
 public:
  Components_Component_Subcomponents_Subcomponent();
  virtual ~Components_Component_Subcomponents_Subcomponent();

  Components_Component_Subcomponents_Subcomponent(const Components_Component_Subcomponents_Subcomponent& from);

  inline Components_Component_Subcomponents_Subcomponent& operator=(const Components_Component_Subcomponents_Subcomponent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Subcomponents_Subcomponent(Components_Component_Subcomponents_Subcomponent&& from) noexcept
    : Components_Component_Subcomponents_Subcomponent() {
    *this = ::std::move(from);
  }

  inline Components_Component_Subcomponents_Subcomponent& operator=(Components_Component_Subcomponents_Subcomponent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Subcomponents_Subcomponent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Subcomponents_Subcomponent* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Subcomponents_Subcomponent*>(
               &_Components_Component_Subcomponents_Subcomponent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    61;

  void Swap(Components_Component_Subcomponents_Subcomponent* other);
  friend void swap(Components_Component_Subcomponents_Subcomponent& a, Components_Component_Subcomponents_Subcomponent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Subcomponents_Subcomponent* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Subcomponents_Subcomponent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Subcomponents_Subcomponent& from);
  void MergeFrom(const Components_Component_Subcomponents_Subcomponent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Subcomponents_Subcomponent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component_Subcomponents_Subcomponent_Config Config;
  typedef Components_Component_Subcomponents_Subcomponent_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config config = 126822239 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 126822239;
  const ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_Config& config() const;
  ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_Config* release_config();
  ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_Config* config);

  // .openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State state = 293778704 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 293778704;
  const ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_State& state() const;
  ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_State* release_state();
  ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_Config* config_;
  ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Subcomponents_SubcomponentImpl();
};
// -------------------------------------------------------------------

class Components_Component_Subcomponents_SubcomponentKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey) */ {
 public:
  Components_Component_Subcomponents_SubcomponentKey();
  virtual ~Components_Component_Subcomponents_SubcomponentKey();

  Components_Component_Subcomponents_SubcomponentKey(const Components_Component_Subcomponents_SubcomponentKey& from);

  inline Components_Component_Subcomponents_SubcomponentKey& operator=(const Components_Component_Subcomponents_SubcomponentKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Subcomponents_SubcomponentKey(Components_Component_Subcomponents_SubcomponentKey&& from) noexcept
    : Components_Component_Subcomponents_SubcomponentKey() {
    *this = ::std::move(from);
  }

  inline Components_Component_Subcomponents_SubcomponentKey& operator=(Components_Component_Subcomponents_SubcomponentKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Subcomponents_SubcomponentKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Subcomponents_SubcomponentKey* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Subcomponents_SubcomponentKey*>(
               &_Components_Component_Subcomponents_SubcomponentKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    62;

  void Swap(Components_Component_Subcomponents_SubcomponentKey* other);
  friend void swap(Components_Component_Subcomponents_SubcomponentKey& a, Components_Component_Subcomponents_SubcomponentKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Subcomponents_SubcomponentKey* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Subcomponents_SubcomponentKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Subcomponents_SubcomponentKey& from);
  void MergeFrom(const Components_Component_Subcomponents_SubcomponentKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Subcomponents_SubcomponentKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/name"];
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent subcomponent = 2;
  bool has_subcomponent() const;
  void clear_subcomponent();
  static const int kSubcomponentFieldNumber = 2;
  const ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent& subcomponent() const;
  ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent* release_subcomponent();
  ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent* mutable_subcomponent();
  void set_allocated_subcomponent(::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent* subcomponent);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent* subcomponent_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Subcomponents_SubcomponentKeyImpl();
};
// -------------------------------------------------------------------

class Components_Component_Subcomponents : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Subcomponents) */ {
 public:
  Components_Component_Subcomponents();
  virtual ~Components_Component_Subcomponents();

  Components_Component_Subcomponents(const Components_Component_Subcomponents& from);

  inline Components_Component_Subcomponents& operator=(const Components_Component_Subcomponents& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Subcomponents(Components_Component_Subcomponents&& from) noexcept
    : Components_Component_Subcomponents() {
    *this = ::std::move(from);
  }

  inline Components_Component_Subcomponents& operator=(Components_Component_Subcomponents&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Subcomponents& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Subcomponents* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Subcomponents*>(
               &_Components_Component_Subcomponents_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    63;

  void Swap(Components_Component_Subcomponents* other);
  friend void swap(Components_Component_Subcomponents& a, Components_Component_Subcomponents& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Subcomponents* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Subcomponents* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Subcomponents& from);
  void MergeFrom(const Components_Component_Subcomponents& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Subcomponents* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component_Subcomponents_Subcomponent Subcomponent;
  typedef Components_Component_Subcomponents_SubcomponentKey SubcomponentKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey subcomponent = 282821422 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent"];
  int subcomponent_size() const;
  void clear_subcomponent();
  static const int kSubcomponentFieldNumber = 282821422;
  const ::openconfig::openconfig_platform::Components_Component_Subcomponents_SubcomponentKey& subcomponent(int index) const;
  ::openconfig::openconfig_platform::Components_Component_Subcomponents_SubcomponentKey* mutable_subcomponent(int index);
  ::openconfig::openconfig_platform::Components_Component_Subcomponents_SubcomponentKey* add_subcomponent();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_platform::Components_Component_Subcomponents_SubcomponentKey >*
      mutable_subcomponent();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_platform::Components_Component_Subcomponents_SubcomponentKey >&
      subcomponent() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Subcomponents)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_platform::Components_Component_Subcomponents_SubcomponentKey > subcomponent_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_SubcomponentsImpl();
};
// -------------------------------------------------------------------

class Components_Component_Transceiver_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Transceiver.Config) */ {
 public:
  Components_Component_Transceiver_Config();
  virtual ~Components_Component_Transceiver_Config();

  Components_Component_Transceiver_Config(const Components_Component_Transceiver_Config& from);

  inline Components_Component_Transceiver_Config& operator=(const Components_Component_Transceiver_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Transceiver_Config(Components_Component_Transceiver_Config&& from) noexcept
    : Components_Component_Transceiver_Config() {
    *this = ::std::move(from);
  }

  inline Components_Component_Transceiver_Config& operator=(Components_Component_Transceiver_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Transceiver_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Transceiver_Config* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Transceiver_Config*>(
               &_Components_Component_Transceiver_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    64;

  void Swap(Components_Component_Transceiver_Config* other);
  friend void swap(Components_Component_Transceiver_Config& a, Components_Component_Transceiver_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Transceiver_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Transceiver_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Transceiver_Config& from);
  void MergeFrom(const Components_Component_Transceiver_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Transceiver_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.BoolValue enabled = 202927581 [(.yext.schemapath) = "/components/component/transceiver/config/enabled"];
  bool has_enabled() const;
  void clear_enabled();
  static const int kEnabledFieldNumber = 202927581;
  const ::ywrapper::BoolValue& enabled() const;
  ::ywrapper::BoolValue* release_enabled();
  ::ywrapper::BoolValue* mutable_enabled();
  void set_allocated_enabled(::ywrapper::BoolValue* enabled);

  // .openconfig.enums.OpenconfigTransportTypesETHERNETPMDTYPE ethernet_pmd_preconf = 338246677 [(.yext.schemapath) = "/components/component/transceiver/config/ethernet-pmd-preconf"];
  void clear_ethernet_pmd_preconf();
  static const int kEthernetPmdPreconfFieldNumber = 338246677;
  ::openconfig::enums::OpenconfigTransportTypesETHERNETPMDTYPE ethernet_pmd_preconf() const;
  void set_ethernet_pmd_preconf(::openconfig::enums::OpenconfigTransportTypesETHERNETPMDTYPE value);

  // .openconfig.enums.OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE form_factor_preconf = 471604670 [(.yext.schemapath) = "/components/component/transceiver/config/form-factor-preconf"];
  void clear_form_factor_preconf();
  static const int kFormFactorPreconfFieldNumber = 471604670;
  ::openconfig::enums::OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE form_factor_preconf() const;
  void set_form_factor_preconf(::openconfig::enums::OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Transceiver.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::BoolValue* enabled_;
  int ethernet_pmd_preconf_;
  int form_factor_preconf_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_ConfigImpl();
};
// -------------------------------------------------------------------

class Components_Component_Transceiver_PhysicalChannels_Channel_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config) */ {
 public:
  Components_Component_Transceiver_PhysicalChannels_Channel_Config();
  virtual ~Components_Component_Transceiver_PhysicalChannels_Channel_Config();

  Components_Component_Transceiver_PhysicalChannels_Channel_Config(const Components_Component_Transceiver_PhysicalChannels_Channel_Config& from);

  inline Components_Component_Transceiver_PhysicalChannels_Channel_Config& operator=(const Components_Component_Transceiver_PhysicalChannels_Channel_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Transceiver_PhysicalChannels_Channel_Config(Components_Component_Transceiver_PhysicalChannels_Channel_Config&& from) noexcept
    : Components_Component_Transceiver_PhysicalChannels_Channel_Config() {
    *this = ::std::move(from);
  }

  inline Components_Component_Transceiver_PhysicalChannels_Channel_Config& operator=(Components_Component_Transceiver_PhysicalChannels_Channel_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Transceiver_PhysicalChannels_Channel_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Transceiver_PhysicalChannels_Channel_Config* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Transceiver_PhysicalChannels_Channel_Config*>(
               &_Components_Component_Transceiver_PhysicalChannels_Channel_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(Components_Component_Transceiver_PhysicalChannels_Channel_Config* other);
  friend void swap(Components_Component_Transceiver_PhysicalChannels_Channel_Config& a, Components_Component_Transceiver_PhysicalChannels_Channel_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Transceiver_PhysicalChannels_Channel_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Transceiver_PhysicalChannels_Channel_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Transceiver_PhysicalChannels_Channel_Config& from);
  void MergeFrom(const Components_Component_Transceiver_PhysicalChannels_Channel_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Transceiver_PhysicalChannels_Channel_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value target_output_power = 128341554 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config/target-output-power"];
  bool has_target_output_power() const;
  void clear_target_output_power();
  static const int kTargetOutputPowerFieldNumber = 128341554;
  const ::ywrapper::Decimal64Value& target_output_power() const;
  ::ywrapper::Decimal64Value* release_target_output_power();
  ::ywrapper::Decimal64Value* mutable_target_output_power();
  void set_allocated_target_output_power(::ywrapper::Decimal64Value* target_output_power);

  // .ywrapper.BoolValue tx_laser = 133868429 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config/tx-laser"];
  bool has_tx_laser() const;
  void clear_tx_laser();
  static const int kTxLaserFieldNumber = 133868429;
  const ::ywrapper::BoolValue& tx_laser() const;
  ::ywrapper::BoolValue* release_tx_laser();
  ::ywrapper::BoolValue* mutable_tx_laser();
  void set_allocated_tx_laser(::ywrapper::BoolValue* tx_laser);

  // .ywrapper.StringValue description = 314562795 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config/description"];
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 314562795;
  const ::ywrapper::StringValue& description() const;
  ::ywrapper::StringValue* release_description();
  ::ywrapper::StringValue* mutable_description();
  void set_allocated_description(::ywrapper::StringValue* description);

  // .ywrapper.UintValue index = 333658993 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config/index"];
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 333658993;
  const ::ywrapper::UintValue& index() const;
  ::ywrapper::UintValue* release_index();
  ::ywrapper::UintValue* mutable_index();
  void set_allocated_index(::ywrapper::UintValue* index);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* target_output_power_;
  ::ywrapper::BoolValue* tx_laser_;
  ::ywrapper::StringValue* description_;
  ::ywrapper::UintValue* index_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_ConfigImpl();
};
// -------------------------------------------------------------------

class Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower) */ {
 public:
  Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower();
  virtual ~Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower();

  Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower(const Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower& from);

  inline Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower& operator=(const Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower(Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower&& from) noexcept
    : Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower() {
    *this = ::std::move(from);
  }

  inline Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower& operator=(Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower*>(
               &_Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    66;

  void Swap(Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower* other);
  friend void swap(Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower& a, Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower& from);
  void MergeFrom(const Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue interval = 54371640 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 54371640;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.Decimal64Value instant = 59663094 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 59663094;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.Decimal64Value max = 73969555 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 73969555;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // .ywrapper.Decimal64Value avg = 425608185 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 425608185;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // .ywrapper.Decimal64Value min = 476619581 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 476619581;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::Decimal64Value* max_;
  ::ywrapper::Decimal64Value* avg_;
  ::ywrapper::Decimal64Value* min_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_InputPowerImpl();
};
// -------------------------------------------------------------------

class Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent) */ {
 public:
  Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent();
  virtual ~Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent();

  Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent(const Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent& from);

  inline Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent& operator=(const Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent(Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent&& from) noexcept
    : Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent() {
    *this = ::std::move(from);
  }

  inline Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent& operator=(Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent*>(
               &_Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    67;

  void Swap(Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent* other);
  friend void swap(Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent& a, Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent& from);
  void MergeFrom(const Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value min = 44118224 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 44118224;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // .ywrapper.Decimal64Value avg = 230643524 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 230643524;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // .ywrapper.Decimal64Value instant = 325376671 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 325376671;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.UintValue interval = 384153695 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 384153695;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.Decimal64Value max = 446768222 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 446768222;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* min_;
  ::ywrapper::Decimal64Value* avg_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::Decimal64Value* max_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrentImpl();
};
// -------------------------------------------------------------------

class Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower) */ {
 public:
  Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower();
  virtual ~Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower();

  Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower(const Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower& from);

  inline Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower& operator=(const Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower(Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower&& from) noexcept
    : Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower() {
    *this = ::std::move(from);
  }

  inline Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower& operator=(Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower*>(
               &_Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    68;

  void Swap(Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower* other);
  friend void swap(Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower& a, Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower& from);
  void MergeFrom(const Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value max = 85611000 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 85611000;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // .ywrapper.Decimal64Value instant = 110986605 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 110986605;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.Decimal64Value min = 219831926 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 219831926;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // .ywrapper.UintValue interval = 332288817 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 332288817;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.Decimal64Value avg = 470907710 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 470907710;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* max_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::Decimal64Value* min_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::Decimal64Value* avg_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_OutputPowerImpl();
};
// -------------------------------------------------------------------

class Components_Component_Transceiver_PhysicalChannels_Channel_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State) */ {
 public:
  Components_Component_Transceiver_PhysicalChannels_Channel_State();
  virtual ~Components_Component_Transceiver_PhysicalChannels_Channel_State();

  Components_Component_Transceiver_PhysicalChannels_Channel_State(const Components_Component_Transceiver_PhysicalChannels_Channel_State& from);

  inline Components_Component_Transceiver_PhysicalChannels_Channel_State& operator=(const Components_Component_Transceiver_PhysicalChannels_Channel_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Transceiver_PhysicalChannels_Channel_State(Components_Component_Transceiver_PhysicalChannels_Channel_State&& from) noexcept
    : Components_Component_Transceiver_PhysicalChannels_Channel_State() {
    *this = ::std::move(from);
  }

  inline Components_Component_Transceiver_PhysicalChannels_Channel_State& operator=(Components_Component_Transceiver_PhysicalChannels_Channel_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Transceiver_PhysicalChannels_Channel_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Transceiver_PhysicalChannels_Channel_State* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Transceiver_PhysicalChannels_Channel_State*>(
               &_Components_Component_Transceiver_PhysicalChannels_Channel_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    69;

  void Swap(Components_Component_Transceiver_PhysicalChannels_Channel_State* other);
  friend void swap(Components_Component_Transceiver_PhysicalChannels_Channel_State& a, Components_Component_Transceiver_PhysicalChannels_Channel_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Transceiver_PhysicalChannels_Channel_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Transceiver_PhysicalChannels_Channel_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Transceiver_PhysicalChannels_Channel_State& from);
  void MergeFrom(const Components_Component_Transceiver_PhysicalChannels_Channel_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Transceiver_PhysicalChannels_Channel_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower InputPower;
  typedef Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent LaserBiasCurrent;
  typedef Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower OutputPower;

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue description = 29929938 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/description"];
  bool has_description() const;
  void clear_description();
  static const int kDescriptionFieldNumber = 29929938;
  const ::ywrapper::StringValue& description() const;
  ::ywrapper::StringValue* release_description();
  ::ywrapper::StringValue* mutable_description();
  void set_allocated_description(::ywrapper::StringValue* description);

  // .ywrapper.UintValue index = 53274280 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/index"];
  bool has_index() const;
  void clear_index();
  static const int kIndexFieldNumber = 53274280;
  const ::ywrapper::UintValue& index() const;
  ::ywrapper::UintValue* release_index();
  ::ywrapper::UintValue* mutable_index();
  void set_allocated_index(::ywrapper::UintValue* index);

  // .ywrapper.UintValue output_frequency = 226348966 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-frequency"];
  bool has_output_frequency() const;
  void clear_output_frequency();
  static const int kOutputFrequencyFieldNumber = 226348966;
  const ::ywrapper::UintValue& output_frequency() const;
  ::ywrapper::UintValue* release_output_frequency();
  ::ywrapper::UintValue* mutable_output_frequency();
  void set_allocated_output_frequency(::ywrapper::UintValue* output_frequency);

  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower input_power = 303986504 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power"];
  bool has_input_power() const;
  void clear_input_power();
  static const int kInputPowerFieldNumber = 303986504;
  const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower& input_power() const;
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower* release_input_power();
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower* mutable_input_power();
  void set_allocated_input_power(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower* input_power);

  // .ywrapper.Decimal64Value target_output_power = 401597083 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/target-output-power"];
  bool has_target_output_power() const;
  void clear_target_output_power();
  static const int kTargetOutputPowerFieldNumber = 401597083;
  const ::ywrapper::Decimal64Value& target_output_power() const;
  ::ywrapper::Decimal64Value* release_target_output_power();
  ::ywrapper::Decimal64Value* mutable_target_output_power();
  void set_allocated_target_output_power(::ywrapper::Decimal64Value* target_output_power);

  // .ywrapper.BoolValue tx_laser = 415933878 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/tx-laser"];
  bool has_tx_laser() const;
  void clear_tx_laser();
  static const int kTxLaserFieldNumber = 415933878;
  const ::ywrapper::BoolValue& tx_laser() const;
  ::ywrapper::BoolValue* release_tx_laser();
  ::ywrapper::BoolValue* mutable_tx_laser();
  void set_allocated_tx_laser(::ywrapper::BoolValue* tx_laser);

  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower output_power = 436080879 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power"];
  bool has_output_power() const;
  void clear_output_power();
  static const int kOutputPowerFieldNumber = 436080879;
  const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower& output_power() const;
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower* release_output_power();
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower* mutable_output_power();
  void set_allocated_output_power(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower* output_power);

  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent laser_bias_current = 482909465 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current"];
  bool has_laser_bias_current() const;
  void clear_laser_bias_current();
  static const int kLaserBiasCurrentFieldNumber = 482909465;
  const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent& laser_bias_current() const;
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent* release_laser_bias_current();
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent* mutable_laser_bias_current();
  void set_allocated_laser_bias_current(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent* laser_bias_current);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* description_;
  ::ywrapper::UintValue* index_;
  ::ywrapper::UintValue* output_frequency_;
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower* input_power_;
  ::ywrapper::Decimal64Value* target_output_power_;
  ::ywrapper::BoolValue* tx_laser_;
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower* output_power_;
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent* laser_bias_current_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_StateImpl();
};
// -------------------------------------------------------------------

class Components_Component_Transceiver_PhysicalChannels_Channel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel) */ {
 public:
  Components_Component_Transceiver_PhysicalChannels_Channel();
  virtual ~Components_Component_Transceiver_PhysicalChannels_Channel();

  Components_Component_Transceiver_PhysicalChannels_Channel(const Components_Component_Transceiver_PhysicalChannels_Channel& from);

  inline Components_Component_Transceiver_PhysicalChannels_Channel& operator=(const Components_Component_Transceiver_PhysicalChannels_Channel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Transceiver_PhysicalChannels_Channel(Components_Component_Transceiver_PhysicalChannels_Channel&& from) noexcept
    : Components_Component_Transceiver_PhysicalChannels_Channel() {
    *this = ::std::move(from);
  }

  inline Components_Component_Transceiver_PhysicalChannels_Channel& operator=(Components_Component_Transceiver_PhysicalChannels_Channel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Transceiver_PhysicalChannels_Channel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Transceiver_PhysicalChannels_Channel* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Transceiver_PhysicalChannels_Channel*>(
               &_Components_Component_Transceiver_PhysicalChannels_Channel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    70;

  void Swap(Components_Component_Transceiver_PhysicalChannels_Channel* other);
  friend void swap(Components_Component_Transceiver_PhysicalChannels_Channel& a, Components_Component_Transceiver_PhysicalChannels_Channel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Transceiver_PhysicalChannels_Channel* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Transceiver_PhysicalChannels_Channel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Transceiver_PhysicalChannels_Channel& from);
  void MergeFrom(const Components_Component_Transceiver_PhysicalChannels_Channel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Transceiver_PhysicalChannels_Channel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component_Transceiver_PhysicalChannels_Channel_Config Config;
  typedef Components_Component_Transceiver_PhysicalChannels_Channel_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config config = 101023264 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 101023264;
  const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_Config& config() const;
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_Config* release_config();
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_Config* config);

  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State state = 282142105 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 282142105;
  const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State& state() const;
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State* release_state();
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_Config* config_;
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_ChannelImpl();
};
// -------------------------------------------------------------------

class Components_Component_Transceiver_PhysicalChannels_ChannelKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey) */ {
 public:
  Components_Component_Transceiver_PhysicalChannels_ChannelKey();
  virtual ~Components_Component_Transceiver_PhysicalChannels_ChannelKey();

  Components_Component_Transceiver_PhysicalChannels_ChannelKey(const Components_Component_Transceiver_PhysicalChannels_ChannelKey& from);

  inline Components_Component_Transceiver_PhysicalChannels_ChannelKey& operator=(const Components_Component_Transceiver_PhysicalChannels_ChannelKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Transceiver_PhysicalChannels_ChannelKey(Components_Component_Transceiver_PhysicalChannels_ChannelKey&& from) noexcept
    : Components_Component_Transceiver_PhysicalChannels_ChannelKey() {
    *this = ::std::move(from);
  }

  inline Components_Component_Transceiver_PhysicalChannels_ChannelKey& operator=(Components_Component_Transceiver_PhysicalChannels_ChannelKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Transceiver_PhysicalChannels_ChannelKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Transceiver_PhysicalChannels_ChannelKey* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Transceiver_PhysicalChannels_ChannelKey*>(
               &_Components_Component_Transceiver_PhysicalChannels_ChannelKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    71;

  void Swap(Components_Component_Transceiver_PhysicalChannels_ChannelKey* other);
  friend void swap(Components_Component_Transceiver_PhysicalChannels_ChannelKey& a, Components_Component_Transceiver_PhysicalChannels_ChannelKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Transceiver_PhysicalChannels_ChannelKey* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Transceiver_PhysicalChannels_ChannelKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Transceiver_PhysicalChannels_ChannelKey& from);
  void MergeFrom(const Components_Component_Transceiver_PhysicalChannels_ChannelKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Transceiver_PhysicalChannels_ChannelKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel channel = 2;
  bool has_channel() const;
  void clear_channel();
  static const int kChannelFieldNumber = 2;
  const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel& channel() const;
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel* release_channel();
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel* mutable_channel();
  void set_allocated_channel(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel* channel);

  // uint64 index = 1 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/index"];
  void clear_index();
  static const int kIndexFieldNumber = 1;
  ::google::protobuf::uint64 index() const;
  void set_index(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel* channel_;
  ::google::protobuf::uint64 index_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_ChannelKeyImpl();
};
// -------------------------------------------------------------------

class Components_Component_Transceiver_PhysicalChannels : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels) */ {
 public:
  Components_Component_Transceiver_PhysicalChannels();
  virtual ~Components_Component_Transceiver_PhysicalChannels();

  Components_Component_Transceiver_PhysicalChannels(const Components_Component_Transceiver_PhysicalChannels& from);

  inline Components_Component_Transceiver_PhysicalChannels& operator=(const Components_Component_Transceiver_PhysicalChannels& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Transceiver_PhysicalChannels(Components_Component_Transceiver_PhysicalChannels&& from) noexcept
    : Components_Component_Transceiver_PhysicalChannels() {
    *this = ::std::move(from);
  }

  inline Components_Component_Transceiver_PhysicalChannels& operator=(Components_Component_Transceiver_PhysicalChannels&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Transceiver_PhysicalChannels& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Transceiver_PhysicalChannels* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Transceiver_PhysicalChannels*>(
               &_Components_Component_Transceiver_PhysicalChannels_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    72;

  void Swap(Components_Component_Transceiver_PhysicalChannels* other);
  friend void swap(Components_Component_Transceiver_PhysicalChannels& a, Components_Component_Transceiver_PhysicalChannels& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Transceiver_PhysicalChannels* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Transceiver_PhysicalChannels* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Transceiver_PhysicalChannels& from);
  void MergeFrom(const Components_Component_Transceiver_PhysicalChannels& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Transceiver_PhysicalChannels* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component_Transceiver_PhysicalChannels_Channel Channel;
  typedef Components_Component_Transceiver_PhysicalChannels_ChannelKey ChannelKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey channel = 359124959 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel"];
  int channel_size() const;
  void clear_channel();
  static const int kChannelFieldNumber = 359124959;
  const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_ChannelKey& channel(int index) const;
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_ChannelKey* mutable_channel(int index);
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_ChannelKey* add_channel();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_ChannelKey >*
      mutable_channel();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_ChannelKey >&
      channel() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_ChannelKey > channel_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannelsImpl();
};
// -------------------------------------------------------------------

class Components_Component_Transceiver_State_InputPower : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower) */ {
 public:
  Components_Component_Transceiver_State_InputPower();
  virtual ~Components_Component_Transceiver_State_InputPower();

  Components_Component_Transceiver_State_InputPower(const Components_Component_Transceiver_State_InputPower& from);

  inline Components_Component_Transceiver_State_InputPower& operator=(const Components_Component_Transceiver_State_InputPower& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Transceiver_State_InputPower(Components_Component_Transceiver_State_InputPower&& from) noexcept
    : Components_Component_Transceiver_State_InputPower() {
    *this = ::std::move(from);
  }

  inline Components_Component_Transceiver_State_InputPower& operator=(Components_Component_Transceiver_State_InputPower&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Transceiver_State_InputPower& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Transceiver_State_InputPower* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Transceiver_State_InputPower*>(
               &_Components_Component_Transceiver_State_InputPower_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    73;

  void Swap(Components_Component_Transceiver_State_InputPower* other);
  friend void swap(Components_Component_Transceiver_State_InputPower& a, Components_Component_Transceiver_State_InputPower& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Transceiver_State_InputPower* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Transceiver_State_InputPower* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Transceiver_State_InputPower& from);
  void MergeFrom(const Components_Component_Transceiver_State_InputPower& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Transceiver_State_InputPower* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value instant = 29798419 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 29798419;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.UintValue interval = 192286739 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 192286739;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.Decimal64Value max = 242200938 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 242200938;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // .ywrapper.Decimal64Value min = 376421828 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 376421828;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // .ywrapper.Decimal64Value avg = 424783144 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 424783144;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::Decimal64Value* max_;
  ::ywrapper::Decimal64Value* min_;
  ::ywrapper::Decimal64Value* avg_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_State_InputPowerImpl();
};
// -------------------------------------------------------------------

class Components_Component_Transceiver_State_LaserBiasCurrent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent) */ {
 public:
  Components_Component_Transceiver_State_LaserBiasCurrent();
  virtual ~Components_Component_Transceiver_State_LaserBiasCurrent();

  Components_Component_Transceiver_State_LaserBiasCurrent(const Components_Component_Transceiver_State_LaserBiasCurrent& from);

  inline Components_Component_Transceiver_State_LaserBiasCurrent& operator=(const Components_Component_Transceiver_State_LaserBiasCurrent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Transceiver_State_LaserBiasCurrent(Components_Component_Transceiver_State_LaserBiasCurrent&& from) noexcept
    : Components_Component_Transceiver_State_LaserBiasCurrent() {
    *this = ::std::move(from);
  }

  inline Components_Component_Transceiver_State_LaserBiasCurrent& operator=(Components_Component_Transceiver_State_LaserBiasCurrent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Transceiver_State_LaserBiasCurrent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Transceiver_State_LaserBiasCurrent* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Transceiver_State_LaserBiasCurrent*>(
               &_Components_Component_Transceiver_State_LaserBiasCurrent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    74;

  void Swap(Components_Component_Transceiver_State_LaserBiasCurrent* other);
  friend void swap(Components_Component_Transceiver_State_LaserBiasCurrent& a, Components_Component_Transceiver_State_LaserBiasCurrent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Transceiver_State_LaserBiasCurrent* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Transceiver_State_LaserBiasCurrent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Transceiver_State_LaserBiasCurrent& from);
  void MergeFrom(const Components_Component_Transceiver_State_LaserBiasCurrent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Transceiver_State_LaserBiasCurrent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value max = 26814849 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 26814849;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // .ywrapper.Decimal64Value avg = 44193839 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 44193839;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // .ywrapper.Decimal64Value min = 161036031 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 161036031;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // .ywrapper.Decimal64Value instant = 400153624 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 400153624;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.UintValue interval = 482176166 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 482176166;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* max_;
  ::ywrapper::Decimal64Value* avg_;
  ::ywrapper::Decimal64Value* min_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::UintValue* interval_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_State_LaserBiasCurrentImpl();
};
// -------------------------------------------------------------------

class Components_Component_Transceiver_State_OutputPower : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower) */ {
 public:
  Components_Component_Transceiver_State_OutputPower();
  virtual ~Components_Component_Transceiver_State_OutputPower();

  Components_Component_Transceiver_State_OutputPower(const Components_Component_Transceiver_State_OutputPower& from);

  inline Components_Component_Transceiver_State_OutputPower& operator=(const Components_Component_Transceiver_State_OutputPower& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Transceiver_State_OutputPower(Components_Component_Transceiver_State_OutputPower&& from) noexcept
    : Components_Component_Transceiver_State_OutputPower() {
    *this = ::std::move(from);
  }

  inline Components_Component_Transceiver_State_OutputPower& operator=(Components_Component_Transceiver_State_OutputPower&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Transceiver_State_OutputPower& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Transceiver_State_OutputPower* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Transceiver_State_OutputPower*>(
               &_Components_Component_Transceiver_State_OutputPower_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    75;

  void Swap(Components_Component_Transceiver_State_OutputPower* other);
  friend void swap(Components_Component_Transceiver_State_OutputPower& a, Components_Component_Transceiver_State_OutputPower& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Transceiver_State_OutputPower* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Transceiver_State_OutputPower* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Transceiver_State_OutputPower& from);
  void MergeFrom(const Components_Component_Transceiver_State_OutputPower& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Transceiver_State_OutputPower* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value instant = 45091486 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 45091486;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.Decimal64Value avg = 103469393 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 103469393;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // .ywrapper.UintValue interval = 140247632 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 140247632;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.Decimal64Value max = 286038891 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 286038891;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // .ywrapper.Decimal64Value min = 420259781 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 420259781;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::Decimal64Value* avg_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::Decimal64Value* max_;
  ::ywrapper::Decimal64Value* min_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_State_OutputPowerImpl();
};
// -------------------------------------------------------------------

class Components_Component_Transceiver_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Transceiver.State) */ {
 public:
  Components_Component_Transceiver_State();
  virtual ~Components_Component_Transceiver_State();

  Components_Component_Transceiver_State(const Components_Component_Transceiver_State& from);

  inline Components_Component_Transceiver_State& operator=(const Components_Component_Transceiver_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Transceiver_State(Components_Component_Transceiver_State&& from) noexcept
    : Components_Component_Transceiver_State() {
    *this = ::std::move(from);
  }

  inline Components_Component_Transceiver_State& operator=(Components_Component_Transceiver_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Transceiver_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Transceiver_State* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Transceiver_State*>(
               &_Components_Component_Transceiver_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    76;

  void Swap(Components_Component_Transceiver_State* other);
  friend void swap(Components_Component_Transceiver_State& a, Components_Component_Transceiver_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Transceiver_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Transceiver_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Transceiver_State& from);
  void MergeFrom(const Components_Component_Transceiver_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Transceiver_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component_Transceiver_State_InputPower InputPower;
  typedef Components_Component_Transceiver_State_LaserBiasCurrent LaserBiasCurrent;
  typedef Components_Component_Transceiver_State_OutputPower OutputPower;

  typedef Components_Component_Transceiver_State_Present Present;
  static const Present PRESENT_UNSET =
    Components_Component_Transceiver_State_Present_PRESENT_UNSET;
  static const Present PRESENT_PRESENT =
    Components_Component_Transceiver_State_Present_PRESENT_PRESENT;
  static const Present PRESENT_NOT_PRESENT =
    Components_Component_Transceiver_State_Present_PRESENT_NOT_PRESENT;
  static inline bool Present_IsValid(int value) {
    return Components_Component_Transceiver_State_Present_IsValid(value);
  }
  static const Present Present_MIN =
    Components_Component_Transceiver_State_Present_Present_MIN;
  static const Present Present_MAX =
    Components_Component_Transceiver_State_Present_Present_MAX;
  static const int Present_ARRAYSIZE =
    Components_Component_Transceiver_State_Present_Present_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Present_descriptor() {
    return Components_Component_Transceiver_State_Present_descriptor();
  }
  static inline const ::std::string& Present_Name(Present value) {
    return Components_Component_Transceiver_State_Present_Name(value);
  }
  static inline bool Present_Parse(const ::std::string& name,
      Present* value) {
    return Components_Component_Transceiver_State_Present_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower input_power = 41561605 [(.yext.schemapath) = "/components/component/transceiver/state/input-power"];
  bool has_input_power() const;
  void clear_input_power();
  static const int kInputPowerFieldNumber = 41561605;
  const ::openconfig::openconfig_platform::Components_Component_Transceiver_State_InputPower& input_power() const;
  ::openconfig::openconfig_platform::Components_Component_Transceiver_State_InputPower* release_input_power();
  ::openconfig::openconfig_platform::Components_Component_Transceiver_State_InputPower* mutable_input_power();
  void set_allocated_input_power(::openconfig::openconfig_platform::Components_Component_Transceiver_State_InputPower* input_power);

  // .ywrapper.StringValue serial_no = 48331837 [(.yext.schemapath) = "/components/component/transceiver/state/serial-no"];
  bool has_serial_no() const;
  void clear_serial_no();
  static const int kSerialNoFieldNumber = 48331837;
  const ::ywrapper::StringValue& serial_no() const;
  ::ywrapper::StringValue* release_serial_no();
  ::ywrapper::StringValue* mutable_serial_no();
  void set_allocated_serial_no(::ywrapper::StringValue* serial_no);

  // .ywrapper.StringValue vendor_rev = 62133637 [(.yext.schemapath) = "/components/component/transceiver/state/vendor-rev"];
  bool has_vendor_rev() const;
  void clear_vendor_rev();
  static const int kVendorRevFieldNumber = 62133637;
  const ::ywrapper::StringValue& vendor_rev() const;
  ::ywrapper::StringValue* release_vendor_rev();
  ::ywrapper::StringValue* mutable_vendor_rev();
  void set_allocated_vendor_rev(::ywrapper::StringValue* vendor_rev);

  // .ywrapper.BoolValue fault_condition = 66972341 [(.yext.schemapath) = "/components/component/transceiver/state/fault-condition"];
  bool has_fault_condition() const;
  void clear_fault_condition();
  static const int kFaultConditionFieldNumber = 66972341;
  const ::ywrapper::BoolValue& fault_condition() const;
  ::ywrapper::BoolValue* release_fault_condition();
  ::ywrapper::BoolValue* mutable_fault_condition();
  void set_allocated_fault_condition(::ywrapper::BoolValue* fault_condition);

  // .ywrapper.IntValue internal_temp = 109715519 [(.yext.schemapath) = "/components/component/transceiver/state/internal-temp"];
  bool has_internal_temp() const;
  void clear_internal_temp();
  static const int kInternalTempFieldNumber = 109715519;
  const ::ywrapper::IntValue& internal_temp() const;
  ::ywrapper::IntValue* release_internal_temp();
  ::ywrapper::IntValue* mutable_internal_temp();
  void set_allocated_internal_temp(::ywrapper::IntValue* internal_temp);

  // .ywrapper.StringValue vendor = 186283901 [(.yext.schemapath) = "/components/component/transceiver/state/vendor"];
  bool has_vendor() const;
  void clear_vendor();
  static const int kVendorFieldNumber = 186283901;
  const ::ywrapper::StringValue& vendor() const;
  ::ywrapper::StringValue* release_vendor();
  ::ywrapper::StringValue* mutable_vendor();
  void set_allocated_vendor(::ywrapper::StringValue* vendor);

  // .openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower output_power = 242740240 [(.yext.schemapath) = "/components/component/transceiver/state/output-power"];
  bool has_output_power() const;
  void clear_output_power();
  static const int kOutputPowerFieldNumber = 242740240;
  const ::openconfig::openconfig_platform::Components_Component_Transceiver_State_OutputPower& output_power() const;
  ::openconfig::openconfig_platform::Components_Component_Transceiver_State_OutputPower* release_output_power();
  ::openconfig::openconfig_platform::Components_Component_Transceiver_State_OutputPower* mutable_output_power();
  void set_allocated_output_power(::openconfig::openconfig_platform::Components_Component_Transceiver_State_OutputPower* output_power);

  // .ywrapper.StringValue vendor_part = 246872941 [(.yext.schemapath) = "/components/component/transceiver/state/vendor-part"];
  bool has_vendor_part() const;
  void clear_vendor_part();
  static const int kVendorPartFieldNumber = 246872941;
  const ::ywrapper::StringValue& vendor_part() const;
  ::ywrapper::StringValue* release_vendor_part();
  ::ywrapper::StringValue* mutable_vendor_part();
  void set_allocated_vendor_part(::ywrapper::StringValue* vendor_part);

  // .ywrapper.BoolValue enabled = 252306382 [(.yext.schemapath) = "/components/component/transceiver/state/enabled"];
  bool has_enabled() const;
  void clear_enabled();
  static const int kEnabledFieldNumber = 252306382;
  const ::ywrapper::BoolValue& enabled() const;
  ::ywrapper::BoolValue* release_enabled();
  ::ywrapper::BoolValue* mutable_enabled();
  void set_allocated_enabled(::ywrapper::BoolValue* enabled);

  // .ywrapper.StringValue date_code = 323636967 [(.yext.schemapath) = "/components/component/transceiver/state/date-code"];
  bool has_date_code() const;
  void clear_date_code();
  static const int kDateCodeFieldNumber = 323636967;
  const ::ywrapper::StringValue& date_code() const;
  ::ywrapper::StringValue* release_date_code();
  ::ywrapper::StringValue* mutable_date_code();
  void set_allocated_date_code(::ywrapper::StringValue* date_code);

  // .openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent laser_bias_current = 422928146 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current"];
  bool has_laser_bias_current() const;
  void clear_laser_bias_current();
  static const int kLaserBiasCurrentFieldNumber = 422928146;
  const ::openconfig::openconfig_platform::Components_Component_Transceiver_State_LaserBiasCurrent& laser_bias_current() const;
  ::openconfig::openconfig_platform::Components_Component_Transceiver_State_LaserBiasCurrent* release_laser_bias_current();
  ::openconfig::openconfig_platform::Components_Component_Transceiver_State_LaserBiasCurrent* mutable_laser_bias_current();
  void set_allocated_laser_bias_current(::openconfig::openconfig_platform::Components_Component_Transceiver_State_LaserBiasCurrent* laser_bias_current);

  // .openconfig.enums.OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE form_factor = 11627927 [(.yext.schemapath) = "/components/component/transceiver/state/form-factor"];
  void clear_form_factor();
  static const int kFormFactorFieldNumber = 11627927;
  ::openconfig::enums::OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE form_factor() const;
  void set_form_factor(::openconfig::enums::OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE value);

  // .openconfig.openconfig_platform.Components.Component.Transceiver.State.Present present = 171782640 [(.yext.schemapath) = "/components/component/transceiver/state/present"];
  void clear_present();
  static const int kPresentFieldNumber = 171782640;
  ::openconfig::openconfig_platform::Components_Component_Transceiver_State_Present present() const;
  void set_present(::openconfig::openconfig_platform::Components_Component_Transceiver_State_Present value);

  // .openconfig.enums.OpenconfigTransportTypesFIBERCONNECTORTYPE connector_type = 252758609 [(.yext.schemapath) = "/components/component/transceiver/state/connector-type"];
  void clear_connector_type();
  static const int kConnectorTypeFieldNumber = 252758609;
  ::openconfig::enums::OpenconfigTransportTypesFIBERCONNECTORTYPE connector_type() const;
  void set_connector_type(::openconfig::enums::OpenconfigTransportTypesFIBERCONNECTORTYPE value);

  // .openconfig.enums.OpenconfigTransportTypesOTNAPPLICATIONCODE otn_compliance_code = 302597810 [(.yext.schemapath) = "/components/component/transceiver/state/otn-compliance-code"];
  void clear_otn_compliance_code();
  static const int kOtnComplianceCodeFieldNumber = 302597810;
  ::openconfig::enums::OpenconfigTransportTypesOTNAPPLICATIONCODE otn_compliance_code() const;
  void set_otn_compliance_code(::openconfig::enums::OpenconfigTransportTypesOTNAPPLICATIONCODE value);

  // .openconfig.enums.OpenconfigTransportTypesSONETAPPLICATIONCODE sonet_sdh_compliance_code = 354799300 [(.yext.schemapath) = "/components/component/transceiver/state/sonet-sdh-compliance-code"];
  void clear_sonet_sdh_compliance_code();
  static const int kSonetSdhComplianceCodeFieldNumber = 354799300;
  ::openconfig::enums::OpenconfigTransportTypesSONETAPPLICATIONCODE sonet_sdh_compliance_code() const;
  void set_sonet_sdh_compliance_code(::openconfig::enums::OpenconfigTransportTypesSONETAPPLICATIONCODE value);

  // .openconfig.enums.OpenconfigTransportTypesETHERNETPMDTYPE ethernet_pmd = 416980802 [(.yext.schemapath) = "/components/component/transceiver/state/ethernet-pmd"];
  void clear_ethernet_pmd();
  static const int kEthernetPmdFieldNumber = 416980802;
  ::openconfig::enums::OpenconfigTransportTypesETHERNETPMDTYPE ethernet_pmd() const;
  void set_ethernet_pmd(::openconfig::enums::OpenconfigTransportTypesETHERNETPMDTYPE value);

  // .openconfig.enums.OpenconfigTransportTypesETHERNETPMDTYPE ethernet_pmd_preconf = 424376104 [(.yext.schemapath) = "/components/component/transceiver/state/ethernet-pmd-preconf"];
  void clear_ethernet_pmd_preconf();
  static const int kEthernetPmdPreconfFieldNumber = 424376104;
  ::openconfig::enums::OpenconfigTransportTypesETHERNETPMDTYPE ethernet_pmd_preconf() const;
  void set_ethernet_pmd_preconf(::openconfig::enums::OpenconfigTransportTypesETHERNETPMDTYPE value);

  // .openconfig.enums.OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE form_factor_preconf = 518555017 [(.yext.schemapath) = "/components/component/transceiver/state/form-factor-preconf"];
  void clear_form_factor_preconf();
  static const int kFormFactorPreconfFieldNumber = 518555017;
  ::openconfig::enums::OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE form_factor_preconf() const;
  void set_form_factor_preconf(::openconfig::enums::OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Transceiver.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_platform::Components_Component_Transceiver_State_InputPower* input_power_;
  ::ywrapper::StringValue* serial_no_;
  ::ywrapper::StringValue* vendor_rev_;
  ::ywrapper::BoolValue* fault_condition_;
  ::ywrapper::IntValue* internal_temp_;
  ::ywrapper::StringValue* vendor_;
  ::openconfig::openconfig_platform::Components_Component_Transceiver_State_OutputPower* output_power_;
  ::ywrapper::StringValue* vendor_part_;
  ::ywrapper::BoolValue* enabled_;
  ::ywrapper::StringValue* date_code_;
  ::openconfig::openconfig_platform::Components_Component_Transceiver_State_LaserBiasCurrent* laser_bias_current_;
  int form_factor_;
  int present_;
  int connector_type_;
  int otn_compliance_code_;
  int sonet_sdh_compliance_code_;
  int ethernet_pmd_;
  int ethernet_pmd_preconf_;
  int form_factor_preconf_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_StateImpl();
};
// -------------------------------------------------------------------

class Components_Component_Transceiver : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component.Transceiver) */ {
 public:
  Components_Component_Transceiver();
  virtual ~Components_Component_Transceiver();

  Components_Component_Transceiver(const Components_Component_Transceiver& from);

  inline Components_Component_Transceiver& operator=(const Components_Component_Transceiver& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component_Transceiver(Components_Component_Transceiver&& from) noexcept
    : Components_Component_Transceiver() {
    *this = ::std::move(from);
  }

  inline Components_Component_Transceiver& operator=(Components_Component_Transceiver&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component_Transceiver& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component_Transceiver* internal_default_instance() {
    return reinterpret_cast<const Components_Component_Transceiver*>(
               &_Components_Component_Transceiver_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    77;

  void Swap(Components_Component_Transceiver* other);
  friend void swap(Components_Component_Transceiver& a, Components_Component_Transceiver& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component_Transceiver* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component_Transceiver* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component_Transceiver& from);
  void MergeFrom(const Components_Component_Transceiver& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component_Transceiver* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component_Transceiver_Config Config;
  typedef Components_Component_Transceiver_PhysicalChannels PhysicalChannels;
  typedef Components_Component_Transceiver_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels physical_channels = 144337163 [(.yext.schemapath) = "/components/component/transceiver/physical-channels"];
  bool has_physical_channels() const;
  void clear_physical_channels();
  static const int kPhysicalChannelsFieldNumber = 144337163;
  const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels& physical_channels() const;
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels* release_physical_channels();
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels* mutable_physical_channels();
  void set_allocated_physical_channels(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels* physical_channels);

  // .openconfig.openconfig_platform.Components.Component.Transceiver.State state = 171036572 [(.yext.schemapath) = "/components/component/transceiver/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 171036572;
  const ::openconfig::openconfig_platform::Components_Component_Transceiver_State& state() const;
  ::openconfig::openconfig_platform::Components_Component_Transceiver_State* release_state();
  ::openconfig::openconfig_platform::Components_Component_Transceiver_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_platform::Components_Component_Transceiver_State* state);

  // .openconfig.openconfig_platform.Components.Component.Transceiver.Config config = 532347803 [(.yext.schemapath) = "/components/component/transceiver/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 532347803;
  const ::openconfig::openconfig_platform::Components_Component_Transceiver_Config& config() const;
  ::openconfig::openconfig_platform::Components_Component_Transceiver_Config* release_config();
  ::openconfig::openconfig_platform::Components_Component_Transceiver_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_platform::Components_Component_Transceiver_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component.Transceiver)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels* physical_channels_;
  ::openconfig::openconfig_platform::Components_Component_Transceiver_State* state_;
  ::openconfig::openconfig_platform::Components_Component_Transceiver_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_TransceiverImpl();
};
// -------------------------------------------------------------------

class Components_Component : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.Component) */ {
 public:
  Components_Component();
  virtual ~Components_Component();

  Components_Component(const Components_Component& from);

  inline Components_Component& operator=(const Components_Component& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_Component(Components_Component&& from) noexcept
    : Components_Component() {
    *this = ::std::move(from);
  }

  inline Components_Component& operator=(Components_Component&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_Component& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_Component* internal_default_instance() {
    return reinterpret_cast<const Components_Component*>(
               &_Components_Component_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    78;

  void Swap(Components_Component* other);
  friend void swap(Components_Component& a, Components_Component& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_Component* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_Component* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_Component& from);
  void MergeFrom(const Components_Component& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_Component* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component_Backplane Backplane;
  typedef Components_Component_Chassis Chassis;
  typedef Components_Component_Config Config;
  typedef Components_Component_Cpu Cpu;
  typedef Components_Component_Fabric Fabric;
  typedef Components_Component_Fan Fan;
  typedef Components_Component_IntegratedCircuit IntegratedCircuit;
  typedef Components_Component_Linecard Linecard;
  typedef Components_Component_OpticalChannel OpticalChannel;
  typedef Components_Component_OpticalPort OpticalPort;
  typedef Components_Component_Port Port;
  typedef Components_Component_PowerSupply PowerSupply;
  typedef Components_Component_Properties Properties;
  typedef Components_Component_State State;
  typedef Components_Component_Storage Storage;
  typedef Components_Component_Subcomponents Subcomponents;
  typedef Components_Component_Transceiver Transceiver;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_platform.Components.Component.Linecard linecard = 18894832 [(.yext.schemapath) = "/components/component/linecard"];
  bool has_linecard() const;
  void clear_linecard();
  static const int kLinecardFieldNumber = 18894832;
  const ::openconfig::openconfig_platform::Components_Component_Linecard& linecard() const;
  ::openconfig::openconfig_platform::Components_Component_Linecard* release_linecard();
  ::openconfig::openconfig_platform::Components_Component_Linecard* mutable_linecard();
  void set_allocated_linecard(::openconfig::openconfig_platform::Components_Component_Linecard* linecard);

  // .openconfig.openconfig_platform.Components.Component.Backplane backplane = 23572881 [(.yext.schemapath) = "/components/component/backplane"];
  bool has_backplane() const;
  void clear_backplane();
  static const int kBackplaneFieldNumber = 23572881;
  const ::openconfig::openconfig_platform::Components_Component_Backplane& backplane() const;
  ::openconfig::openconfig_platform::Components_Component_Backplane* release_backplane();
  ::openconfig::openconfig_platform::Components_Component_Backplane* mutable_backplane();
  void set_allocated_backplane(::openconfig::openconfig_platform::Components_Component_Backplane* backplane);

  // .openconfig.openconfig_platform.Components.Component.Transceiver transceiver = 40802250 [(.yext.schemapath) = "/components/component/transceiver"];
  bool has_transceiver() const;
  void clear_transceiver();
  static const int kTransceiverFieldNumber = 40802250;
  const ::openconfig::openconfig_platform::Components_Component_Transceiver& transceiver() const;
  ::openconfig::openconfig_platform::Components_Component_Transceiver* release_transceiver();
  ::openconfig::openconfig_platform::Components_Component_Transceiver* mutable_transceiver();
  void set_allocated_transceiver(::openconfig::openconfig_platform::Components_Component_Transceiver* transceiver);

  // .openconfig.openconfig_platform.Components.Component.Cpu cpu = 60886558 [(.yext.schemapath) = "/components/component/cpu"];
  bool has_cpu() const;
  void clear_cpu();
  static const int kCpuFieldNumber = 60886558;
  const ::openconfig::openconfig_platform::Components_Component_Cpu& cpu() const;
  ::openconfig::openconfig_platform::Components_Component_Cpu* release_cpu();
  ::openconfig::openconfig_platform::Components_Component_Cpu* mutable_cpu();
  void set_allocated_cpu(::openconfig::openconfig_platform::Components_Component_Cpu* cpu);

  // .openconfig.openconfig_platform.Components.Component.Fabric fabric = 101006771 [(.yext.schemapath) = "/components/component/fabric"];
  bool has_fabric() const;
  void clear_fabric();
  static const int kFabricFieldNumber = 101006771;
  const ::openconfig::openconfig_platform::Components_Component_Fabric& fabric() const;
  ::openconfig::openconfig_platform::Components_Component_Fabric* release_fabric();
  ::openconfig::openconfig_platform::Components_Component_Fabric* mutable_fabric();
  void set_allocated_fabric(::openconfig::openconfig_platform::Components_Component_Fabric* fabric);

  // .openconfig.openconfig_platform.Components.Component.OpticalPort optical_port = 101313940 [(.yext.schemapath) = "/components/component/optical-port"];
  bool has_optical_port() const;
  void clear_optical_port();
  static const int kOpticalPortFieldNumber = 101313940;
  const ::openconfig::openconfig_platform::Components_Component_OpticalPort& optical_port() const;
  ::openconfig::openconfig_platform::Components_Component_OpticalPort* release_optical_port();
  ::openconfig::openconfig_platform::Components_Component_OpticalPort* mutable_optical_port();
  void set_allocated_optical_port(::openconfig::openconfig_platform::Components_Component_OpticalPort* optical_port);

  // .openconfig.openconfig_platform.Components.Component.Properties properties = 107529735 [(.yext.schemapath) = "/components/component/properties"];
  bool has_properties() const;
  void clear_properties();
  static const int kPropertiesFieldNumber = 107529735;
  const ::openconfig::openconfig_platform::Components_Component_Properties& properties() const;
  ::openconfig::openconfig_platform::Components_Component_Properties* release_properties();
  ::openconfig::openconfig_platform::Components_Component_Properties* mutable_properties();
  void set_allocated_properties(::openconfig::openconfig_platform::Components_Component_Properties* properties);

  // .openconfig.openconfig_platform.Components.Component.Fan fan = 111660679 [(.yext.schemapath) = "/components/component/fan"];
  bool has_fan() const;
  void clear_fan();
  static const int kFanFieldNumber = 111660679;
  const ::openconfig::openconfig_platform::Components_Component_Fan& fan() const;
  ::openconfig::openconfig_platform::Components_Component_Fan* release_fan();
  ::openconfig::openconfig_platform::Components_Component_Fan* mutable_fan();
  void set_allocated_fan(::openconfig::openconfig_platform::Components_Component_Fan* fan);

  // .openconfig.openconfig_platform.Components.Component.Chassis chassis = 153681076 [(.yext.schemapath) = "/components/component/chassis"];
  bool has_chassis() const;
  void clear_chassis();
  static const int kChassisFieldNumber = 153681076;
  const ::openconfig::openconfig_platform::Components_Component_Chassis& chassis() const;
  ::openconfig::openconfig_platform::Components_Component_Chassis* release_chassis();
  ::openconfig::openconfig_platform::Components_Component_Chassis* mutable_chassis();
  void set_allocated_chassis(::openconfig::openconfig_platform::Components_Component_Chassis* chassis);

  // .openconfig.openconfig_platform.Components.Component.IntegratedCircuit integrated_circuit = 195631273 [(.yext.schemapath) = "/components/component/integrated-circuit"];
  bool has_integrated_circuit() const;
  void clear_integrated_circuit();
  static const int kIntegratedCircuitFieldNumber = 195631273;
  const ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit& integrated_circuit() const;
  ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit* release_integrated_circuit();
  ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit* mutable_integrated_circuit();
  void set_allocated_integrated_circuit(::openconfig::openconfig_platform::Components_Component_IntegratedCircuit* integrated_circuit);

  // .openconfig.openconfig_platform.Components.Component.State state = 317480023 [(.yext.schemapath) = "/components/component/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 317480023;
  const ::openconfig::openconfig_platform::Components_Component_State& state() const;
  ::openconfig::openconfig_platform::Components_Component_State* release_state();
  ::openconfig::openconfig_platform::Components_Component_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_platform::Components_Component_State* state);

  // .openconfig.openconfig_platform.Components.Component.Subcomponents subcomponents = 374810450 [(.yext.schemapath) = "/components/component/subcomponents"];
  bool has_subcomponents() const;
  void clear_subcomponents();
  static const int kSubcomponentsFieldNumber = 374810450;
  const ::openconfig::openconfig_platform::Components_Component_Subcomponents& subcomponents() const;
  ::openconfig::openconfig_platform::Components_Component_Subcomponents* release_subcomponents();
  ::openconfig::openconfig_platform::Components_Component_Subcomponents* mutable_subcomponents();
  void set_allocated_subcomponents(::openconfig::openconfig_platform::Components_Component_Subcomponents* subcomponents);

  // .openconfig.openconfig_platform.Components.Component.Storage storage = 403943259 [(.yext.schemapath) = "/components/component/storage"];
  bool has_storage() const;
  void clear_storage();
  static const int kStorageFieldNumber = 403943259;
  const ::openconfig::openconfig_platform::Components_Component_Storage& storage() const;
  ::openconfig::openconfig_platform::Components_Component_Storage* release_storage();
  ::openconfig::openconfig_platform::Components_Component_Storage* mutable_storage();
  void set_allocated_storage(::openconfig::openconfig_platform::Components_Component_Storage* storage);

  // .openconfig.openconfig_platform.Components.Component.Config config = 405956410 [(.yext.schemapath) = "/components/component/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 405956410;
  const ::openconfig::openconfig_platform::Components_Component_Config& config() const;
  ::openconfig::openconfig_platform::Components_Component_Config* release_config();
  ::openconfig::openconfig_platform::Components_Component_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_platform::Components_Component_Config* config);

  // .openconfig.openconfig_platform.Components.Component.PowerSupply power_supply = 438616709 [(.yext.schemapath) = "/components/component/power-supply"];
  bool has_power_supply() const;
  void clear_power_supply();
  static const int kPowerSupplyFieldNumber = 438616709;
  const ::openconfig::openconfig_platform::Components_Component_PowerSupply& power_supply() const;
  ::openconfig::openconfig_platform::Components_Component_PowerSupply* release_power_supply();
  ::openconfig::openconfig_platform::Components_Component_PowerSupply* mutable_power_supply();
  void set_allocated_power_supply(::openconfig::openconfig_platform::Components_Component_PowerSupply* power_supply);

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel optical_channel = 465649934 [(.yext.schemapath) = "/components/component/optical-channel"];
  bool has_optical_channel() const;
  void clear_optical_channel();
  static const int kOpticalChannelFieldNumber = 465649934;
  const ::openconfig::openconfig_platform::Components_Component_OpticalChannel& optical_channel() const;
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel* release_optical_channel();
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel* mutable_optical_channel();
  void set_allocated_optical_channel(::openconfig::openconfig_platform::Components_Component_OpticalChannel* optical_channel);

  // .openconfig.openconfig_platform.Components.Component.Port port = 529421081 [(.yext.schemapath) = "/components/component/port"];
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 529421081;
  const ::openconfig::openconfig_platform::Components_Component_Port& port() const;
  ::openconfig::openconfig_platform::Components_Component_Port* release_port();
  ::openconfig::openconfig_platform::Components_Component_Port* mutable_port();
  void set_allocated_port(::openconfig::openconfig_platform::Components_Component_Port* port);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.Component)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_platform::Components_Component_Linecard* linecard_;
  ::openconfig::openconfig_platform::Components_Component_Backplane* backplane_;
  ::openconfig::openconfig_platform::Components_Component_Transceiver* transceiver_;
  ::openconfig::openconfig_platform::Components_Component_Cpu* cpu_;
  ::openconfig::openconfig_platform::Components_Component_Fabric* fabric_;
  ::openconfig::openconfig_platform::Components_Component_OpticalPort* optical_port_;
  ::openconfig::openconfig_platform::Components_Component_Properties* properties_;
  ::openconfig::openconfig_platform::Components_Component_Fan* fan_;
  ::openconfig::openconfig_platform::Components_Component_Chassis* chassis_;
  ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit* integrated_circuit_;
  ::openconfig::openconfig_platform::Components_Component_State* state_;
  ::openconfig::openconfig_platform::Components_Component_Subcomponents* subcomponents_;
  ::openconfig::openconfig_platform::Components_Component_Storage* storage_;
  ::openconfig::openconfig_platform::Components_Component_Config* config_;
  ::openconfig::openconfig_platform::Components_Component_PowerSupply* power_supply_;
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel* optical_channel_;
  ::openconfig::openconfig_platform::Components_Component_Port* port_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_ComponentImpl();
};
// -------------------------------------------------------------------

class Components_ComponentKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components.ComponentKey) */ {
 public:
  Components_ComponentKey();
  virtual ~Components_ComponentKey();

  Components_ComponentKey(const Components_ComponentKey& from);

  inline Components_ComponentKey& operator=(const Components_ComponentKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components_ComponentKey(Components_ComponentKey&& from) noexcept
    : Components_ComponentKey() {
    *this = ::std::move(from);
  }

  inline Components_ComponentKey& operator=(Components_ComponentKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components_ComponentKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components_ComponentKey* internal_default_instance() {
    return reinterpret_cast<const Components_ComponentKey*>(
               &_Components_ComponentKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    79;

  void Swap(Components_ComponentKey* other);
  friend void swap(Components_ComponentKey& a, Components_ComponentKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components_ComponentKey* New() const PROTOBUF_FINAL { return New(NULL); }

  Components_ComponentKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components_ComponentKey& from);
  void MergeFrom(const Components_ComponentKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components_ComponentKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1 [(.yext.schemapath) = "/components/component/name"];
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .openconfig.openconfig_platform.Components.Component component = 2;
  bool has_component() const;
  void clear_component();
  static const int kComponentFieldNumber = 2;
  const ::openconfig::openconfig_platform::Components_Component& component() const;
  ::openconfig::openconfig_platform::Components_Component* release_component();
  ::openconfig::openconfig_platform::Components_Component* mutable_component();
  void set_allocated_component(::openconfig::openconfig_platform::Components_Component* component);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components.ComponentKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::openconfig::openconfig_platform::Components_Component* component_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_ComponentKeyImpl();
};
// -------------------------------------------------------------------

class Components : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_platform.Components) */ {
 public:
  Components();
  virtual ~Components();

  Components(const Components& from);

  inline Components& operator=(const Components& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Components(Components&& from) noexcept
    : Components() {
    *this = ::std::move(from);
  }

  inline Components& operator=(Components&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Components& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Components* internal_default_instance() {
    return reinterpret_cast<const Components*>(
               &_Components_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    80;

  void Swap(Components* other);
  friend void swap(Components& a, Components& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Components* New() const PROTOBUF_FINAL { return New(NULL); }

  Components* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Components& from);
  void MergeFrom(const Components& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Components* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Components_Component Component;
  typedef Components_ComponentKey ComponentKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_platform.Components.ComponentKey component = 51431701 [(.yext.schemapath) = "/components/component"];
  int component_size() const;
  void clear_component();
  static const int kComponentFieldNumber = 51431701;
  const ::openconfig::openconfig_platform::Components_ComponentKey& component(int index) const;
  ::openconfig::openconfig_platform::Components_ComponentKey* mutable_component(int index);
  ::openconfig::openconfig_platform::Components_ComponentKey* add_component();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_platform::Components_ComponentKey >*
      mutable_component();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_platform::Components_ComponentKey >&
      component() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_platform.Components)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_platform::Components_ComponentKey > component_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponentsImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Components_Component_Backplane_Config

// -------------------------------------------------------------------

// Components_Component_Backplane_State

// -------------------------------------------------------------------

// Components_Component_Backplane

// .openconfig.openconfig_platform.Components.Component.Backplane.Config config = 112681526 [(.yext.schemapath) = "/components/component/backplane/config"];
inline bool Components_Component_Backplane::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Components_Component_Backplane::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Backplane_Config& Components_Component_Backplane::config() const {
  const ::openconfig::openconfig_platform::Components_Component_Backplane_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Backplane.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Backplane_Config*>(
      &::openconfig::openconfig_platform::_Components_Component_Backplane_Config_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Backplane_Config* Components_Component_Backplane::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Backplane.config)
  
  ::openconfig::openconfig_platform::Components_Component_Backplane_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Backplane_Config* Components_Component_Backplane::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Backplane_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Backplane.config)
  return config_;
}
inline void Components_Component_Backplane::set_allocated_config(::openconfig::openconfig_platform::Components_Component_Backplane_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Backplane.config)
}

// .openconfig.openconfig_platform.Components.Component.Backplane.State state = 238113123 [(.yext.schemapath) = "/components/component/backplane/state"];
inline bool Components_Component_Backplane::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Components_Component_Backplane::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Backplane_State& Components_Component_Backplane::state() const {
  const ::openconfig::openconfig_platform::Components_Component_Backplane_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Backplane.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Backplane_State*>(
      &::openconfig::openconfig_platform::_Components_Component_Backplane_State_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Backplane_State* Components_Component_Backplane::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Backplane.state)
  
  ::openconfig::openconfig_platform::Components_Component_Backplane_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Backplane_State* Components_Component_Backplane::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Backplane_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Backplane.state)
  return state_;
}
inline void Components_Component_Backplane::set_allocated_state(::openconfig::openconfig_platform::Components_Component_Backplane_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Backplane.state)
}

// -------------------------------------------------------------------

// Components_Component_Chassis_Config

// -------------------------------------------------------------------

// Components_Component_Chassis_State

// -------------------------------------------------------------------

// Components_Component_Chassis

// .openconfig.openconfig_platform.Components.Component.Chassis.Config config = 473125305 [(.yext.schemapath) = "/components/component/chassis/config"];
inline bool Components_Component_Chassis::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Components_Component_Chassis::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Chassis_Config& Components_Component_Chassis::config() const {
  const ::openconfig::openconfig_platform::Components_Component_Chassis_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Chassis.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Chassis_Config*>(
      &::openconfig::openconfig_platform::_Components_Component_Chassis_Config_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Chassis_Config* Components_Component_Chassis::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Chassis.config)
  
  ::openconfig::openconfig_platform::Components_Component_Chassis_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Chassis_Config* Components_Component_Chassis::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Chassis_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Chassis.config)
  return config_;
}
inline void Components_Component_Chassis::set_allocated_config(::openconfig::openconfig_platform::Components_Component_Chassis_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Chassis.config)
}

// .openconfig.openconfig_platform.Components.Component.Chassis.State state = 88528910 [(.yext.schemapath) = "/components/component/chassis/state"];
inline bool Components_Component_Chassis::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Components_Component_Chassis::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Chassis_State& Components_Component_Chassis::state() const {
  const ::openconfig::openconfig_platform::Components_Component_Chassis_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Chassis.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Chassis_State*>(
      &::openconfig::openconfig_platform::_Components_Component_Chassis_State_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Chassis_State* Components_Component_Chassis::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Chassis.state)
  
  ::openconfig::openconfig_platform::Components_Component_Chassis_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Chassis_State* Components_Component_Chassis::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Chassis_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Chassis.state)
  return state_;
}
inline void Components_Component_Chassis::set_allocated_state(::openconfig::openconfig_platform::Components_Component_Chassis_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Chassis.state)
}

// -------------------------------------------------------------------

// Components_Component_Config

// .ywrapper.StringValue name = 118287144 [(.yext.schemapath) = "/components/component/config/name"];
inline bool Components_Component_Config::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& Components_Component_Config::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Config.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Components_Component_Config::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Config.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Components_Component_Config::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Config.name)
  return name_;
}
inline void Components_Component_Config::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Config.name)
}

// -------------------------------------------------------------------

// Components_Component_Cpu_Config

// -------------------------------------------------------------------

// Components_Component_Cpu_State

// -------------------------------------------------------------------

// Components_Component_Cpu_Utilization_State

// .ywrapper.UintValue avg = 223138920 [(.yext.schemapath) = "/components/component/cpu/utilization/state/avg"];
inline bool Components_Component_Cpu_Utilization_State::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_Cpu_Utilization_State::avg() const {
  const ::ywrapper::UintValue* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_Cpu_Utilization_State::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State.avg)
  
  ::ywrapper::UintValue* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_Cpu_Utilization_State::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State.avg)
  return avg_;
}
inline void Components_Component_Cpu_Utilization_State::set_allocated_avg(::ywrapper::UintValue* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State.avg)
}

// .ywrapper.UintValue instant = 356037459 [(.yext.schemapath) = "/components/component/cpu/utilization/state/instant"];
inline bool Components_Component_Cpu_Utilization_State::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_Cpu_Utilization_State::instant() const {
  const ::ywrapper::UintValue* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_Cpu_Utilization_State::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State.instant)
  
  ::ywrapper::UintValue* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_Cpu_Utilization_State::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State.instant)
  return instant_;
}
inline void Components_Component_Cpu_Utilization_State::set_allocated_instant(::ywrapper::UintValue* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State.instant)
}

// .ywrapper.UintValue interval = 245556819 [(.yext.schemapath) = "/components/component/cpu/utilization/state/interval"];
inline bool Components_Component_Cpu_Utilization_State::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_Cpu_Utilization_State::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_Cpu_Utilization_State::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_Cpu_Utilization_State::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State.interval)
  return interval_;
}
inline void Components_Component_Cpu_Utilization_State::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State.interval)
}

// .ywrapper.UintValue max = 40556458 [(.yext.schemapath) = "/components/component/cpu/utilization/state/max"];
inline bool Components_Component_Cpu_Utilization_State::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_Cpu_Utilization_State::max() const {
  const ::ywrapper::UintValue* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_Cpu_Utilization_State::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State.max)
  
  ::ywrapper::UintValue* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_Cpu_Utilization_State::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State.max)
  return max_;
}
inline void Components_Component_Cpu_Utilization_State::set_allocated_max(::ywrapper::UintValue* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State.max)
}

// .ywrapper.UintValue min = 174777348 [(.yext.schemapath) = "/components/component/cpu/utilization/state/min"];
inline bool Components_Component_Cpu_Utilization_State::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_Cpu_Utilization_State::min() const {
  const ::ywrapper::UintValue* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_Cpu_Utilization_State::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State.min)
  
  ::ywrapper::UintValue* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_Cpu_Utilization_State::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State.min)
  return min_;
}
inline void Components_Component_Cpu_Utilization_State::set_allocated_min(::ywrapper::UintValue* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State.min)
}

// -------------------------------------------------------------------

// Components_Component_Cpu_Utilization

// .openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State state = 140553669 [(.yext.schemapath) = "/components/component/cpu/utilization/state"];
inline bool Components_Component_Cpu_Utilization::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Components_Component_Cpu_Utilization::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization_State& Components_Component_Cpu_Utilization::state() const {
  const ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization_State*>(
      &::openconfig::openconfig_platform::_Components_Component_Cpu_Utilization_State_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization_State* Components_Component_Cpu_Utilization::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.state)
  
  ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization_State* Components_Component_Cpu_Utilization::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.state)
  return state_;
}
inline void Components_Component_Cpu_Utilization::set_allocated_state(::openconfig::openconfig_platform::Components_Component_Cpu_Utilization_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.state)
}

// -------------------------------------------------------------------

// Components_Component_Cpu

// .openconfig.openconfig_platform.Components.Component.Cpu.Config config = 14534639 [(.yext.schemapath) = "/components/component/cpu/config"];
inline bool Components_Component_Cpu::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Components_Component_Cpu::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Cpu_Config& Components_Component_Cpu::config() const {
  const ::openconfig::openconfig_platform::Components_Component_Cpu_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Cpu.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Cpu_Config*>(
      &::openconfig::openconfig_platform::_Components_Component_Cpu_Config_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Cpu_Config* Components_Component_Cpu::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Cpu.config)
  
  ::openconfig::openconfig_platform::Components_Component_Cpu_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Cpu_Config* Components_Component_Cpu::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Cpu_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Cpu.config)
  return config_;
}
inline void Components_Component_Cpu::set_allocated_config(::openconfig::openconfig_platform::Components_Component_Cpu_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Cpu.config)
}

// .openconfig.openconfig_platform.Components.Component.Cpu.State state = 493359968 [(.yext.schemapath) = "/components/component/cpu/state"];
inline bool Components_Component_Cpu::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Components_Component_Cpu::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Cpu_State& Components_Component_Cpu::state() const {
  const ::openconfig::openconfig_platform::Components_Component_Cpu_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Cpu.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Cpu_State*>(
      &::openconfig::openconfig_platform::_Components_Component_Cpu_State_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Cpu_State* Components_Component_Cpu::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Cpu.state)
  
  ::openconfig::openconfig_platform::Components_Component_Cpu_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Cpu_State* Components_Component_Cpu::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Cpu_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Cpu.state)
  return state_;
}
inline void Components_Component_Cpu::set_allocated_state(::openconfig::openconfig_platform::Components_Component_Cpu_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Cpu.state)
}

// .openconfig.openconfig_platform.Components.Component.Cpu.Utilization utilization = 437681307 [(.yext.schemapath) = "/components/component/cpu/utilization"];
inline bool Components_Component_Cpu::has_utilization() const {
  return this != internal_default_instance() && utilization_ != NULL;
}
inline void Components_Component_Cpu::clear_utilization() {
  if (GetArenaNoVirtual() == NULL && utilization_ != NULL) {
    delete utilization_;
  }
  utilization_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization& Components_Component_Cpu::utilization() const {
  const ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization* p = utilization_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Cpu.utilization)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization*>(
      &::openconfig::openconfig_platform::_Components_Component_Cpu_Utilization_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization* Components_Component_Cpu::release_utilization() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Cpu.utilization)
  
  ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization* temp = utilization_;
  utilization_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization* Components_Component_Cpu::mutable_utilization() {
  
  if (utilization_ == NULL) {
    utilization_ = new ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Cpu.utilization)
  return utilization_;
}
inline void Components_Component_Cpu::set_allocated_utilization(::openconfig::openconfig_platform::Components_Component_Cpu_Utilization* utilization) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete utilization_;
  }
  if (utilization) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      utilization = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, utilization, submessage_arena);
    }
    
  } else {
    
  }
  utilization_ = utilization;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Cpu.utilization)
}

// -------------------------------------------------------------------

// Components_Component_Fabric_Config

// -------------------------------------------------------------------

// Components_Component_Fabric_State

// -------------------------------------------------------------------

// Components_Component_Fabric

// .openconfig.openconfig_platform.Components.Component.Fabric.Config config = 145493716 [(.yext.schemapath) = "/components/component/fabric/config"];
inline bool Components_Component_Fabric::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Components_Component_Fabric::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Fabric_Config& Components_Component_Fabric::config() const {
  const ::openconfig::openconfig_platform::Components_Component_Fabric_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Fabric.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Fabric_Config*>(
      &::openconfig::openconfig_platform::_Components_Component_Fabric_Config_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Fabric_Config* Components_Component_Fabric::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Fabric.config)
  
  ::openconfig::openconfig_platform::Components_Component_Fabric_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Fabric_Config* Components_Component_Fabric::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Fabric_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Fabric.config)
  return config_;
}
inline void Components_Component_Fabric::set_allocated_config(::openconfig::openconfig_platform::Components_Component_Fabric_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Fabric.config)
}

// .openconfig.openconfig_platform.Components.Component.Fabric.State state = 140431213 [(.yext.schemapath) = "/components/component/fabric/state"];
inline bool Components_Component_Fabric::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Components_Component_Fabric::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Fabric_State& Components_Component_Fabric::state() const {
  const ::openconfig::openconfig_platform::Components_Component_Fabric_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Fabric.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Fabric_State*>(
      &::openconfig::openconfig_platform::_Components_Component_Fabric_State_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Fabric_State* Components_Component_Fabric::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Fabric.state)
  
  ::openconfig::openconfig_platform::Components_Component_Fabric_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Fabric_State* Components_Component_Fabric::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Fabric_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Fabric.state)
  return state_;
}
inline void Components_Component_Fabric::set_allocated_state(::openconfig::openconfig_platform::Components_Component_Fabric_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Fabric.state)
}

// -------------------------------------------------------------------

// Components_Component_Fan_Config

// -------------------------------------------------------------------

// Components_Component_Fan_State

// .ywrapper.UintValue speed = 39662101 [(.yext.schemapath) = "/components/component/fan/state/speed"];
inline bool Components_Component_Fan_State::has_speed() const {
  return this != internal_default_instance() && speed_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_Fan_State::speed() const {
  const ::ywrapper::UintValue* p = speed_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Fan.State.speed)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_Fan_State::release_speed() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Fan.State.speed)
  
  ::ywrapper::UintValue* temp = speed_;
  speed_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_Fan_State::mutable_speed() {
  
  if (speed_ == NULL) {
    speed_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Fan.State.speed)
  return speed_;
}
inline void Components_Component_Fan_State::set_allocated_speed(::ywrapper::UintValue* speed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(speed_);
  }
  if (speed) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      speed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, speed, submessage_arena);
    }
    
  } else {
    
  }
  speed_ = speed;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Fan.State.speed)
}

// -------------------------------------------------------------------

// Components_Component_Fan

// .openconfig.openconfig_platform.Components.Component.Fan.Config config = 532415128 [(.yext.schemapath) = "/components/component/fan/config"];
inline bool Components_Component_Fan::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Components_Component_Fan::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Fan_Config& Components_Component_Fan::config() const {
  const ::openconfig::openconfig_platform::Components_Component_Fan_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Fan.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Fan_Config*>(
      &::openconfig::openconfig_platform::_Components_Component_Fan_Config_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Fan_Config* Components_Component_Fan::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Fan.config)
  
  ::openconfig::openconfig_platform::Components_Component_Fan_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Fan_Config* Components_Component_Fan::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Fan_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Fan.config)
  return config_;
}
inline void Components_Component_Fan::set_allocated_config(::openconfig::openconfig_platform::Components_Component_Fan_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Fan.config)
}

// .openconfig.openconfig_platform.Components.Component.Fan.State state = 105888817 [(.yext.schemapath) = "/components/component/fan/state"];
inline bool Components_Component_Fan::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Components_Component_Fan::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Fan_State& Components_Component_Fan::state() const {
  const ::openconfig::openconfig_platform::Components_Component_Fan_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Fan.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Fan_State*>(
      &::openconfig::openconfig_platform::_Components_Component_Fan_State_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Fan_State* Components_Component_Fan::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Fan.state)
  
  ::openconfig::openconfig_platform::Components_Component_Fan_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Fan_State* Components_Component_Fan::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Fan_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Fan.state)
  return state_;
}
inline void Components_Component_Fan::set_allocated_state(::openconfig::openconfig_platform::Components_Component_Fan_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Fan.state)
}

// -------------------------------------------------------------------

// Components_Component_IntegratedCircuit_Config

// -------------------------------------------------------------------

// Components_Component_IntegratedCircuit_State

// -------------------------------------------------------------------

// Components_Component_IntegratedCircuit

// .openconfig.openconfig_platform.Components.Component.IntegratedCircuit.Config config = 104535454 [(.yext.schemapath) = "/components/component/integrated-circuit/config"];
inline bool Components_Component_IntegratedCircuit::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Components_Component_IntegratedCircuit::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_Config& Components_Component_IntegratedCircuit::config() const {
  const ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_Config*>(
      &::openconfig::openconfig_platform::_Components_Component_IntegratedCircuit_Config_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_Config* Components_Component_IntegratedCircuit::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.config)
  
  ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_Config* Components_Component_IntegratedCircuit::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.config)
  return config_;
}
inline void Components_Component_IntegratedCircuit::set_allocated_config(::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.config)
}

// .openconfig.openconfig_platform.Components.Component.IntegratedCircuit.State state = 401234699 [(.yext.schemapath) = "/components/component/integrated-circuit/state"];
inline bool Components_Component_IntegratedCircuit::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Components_Component_IntegratedCircuit::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_State& Components_Component_IntegratedCircuit::state() const {
  const ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_State*>(
      &::openconfig::openconfig_platform::_Components_Component_IntegratedCircuit_State_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_State* Components_Component_IntegratedCircuit::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.state)
  
  ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_State* Components_Component_IntegratedCircuit::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.state)
  return state_;
}
inline void Components_Component_IntegratedCircuit::set_allocated_state(::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.state)
}

// -------------------------------------------------------------------

// Components_Component_Linecard_Config

// .openconfig.enums.OpenconfigPlatformLinecardComponentPowerType power_admin_state = 460899237 [(.yext.schemapath) = "/components/component/linecard/config/power-admin-state"];
inline void Components_Component_Linecard_Config::clear_power_admin_state() {
  power_admin_state_ = 0;
}
inline ::openconfig::enums::OpenconfigPlatformLinecardComponentPowerType Components_Component_Linecard_Config::power_admin_state() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Linecard.Config.power_admin_state)
  return static_cast< ::openconfig::enums::OpenconfigPlatformLinecardComponentPowerType >(power_admin_state_);
}
inline void Components_Component_Linecard_Config::set_power_admin_state(::openconfig::enums::OpenconfigPlatformLinecardComponentPowerType value) {
  
  power_admin_state_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Linecard.Config.power_admin_state)
}

// -------------------------------------------------------------------

// Components_Component_Linecard_State

// .openconfig.enums.OpenconfigPlatformLinecardComponentPowerType power_admin_state = 443908706 [(.yext.schemapath) = "/components/component/linecard/state/power-admin-state"];
inline void Components_Component_Linecard_State::clear_power_admin_state() {
  power_admin_state_ = 0;
}
inline ::openconfig::enums::OpenconfigPlatformLinecardComponentPowerType Components_Component_Linecard_State::power_admin_state() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Linecard.State.power_admin_state)
  return static_cast< ::openconfig::enums::OpenconfigPlatformLinecardComponentPowerType >(power_admin_state_);
}
inline void Components_Component_Linecard_State::set_power_admin_state(::openconfig::enums::OpenconfigPlatformLinecardComponentPowerType value) {
  
  power_admin_state_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Linecard.State.power_admin_state)
}

// .ywrapper.StringValue slot_id = 426044457 [(.yext.schemapath) = "/components/component/linecard/state/slot-id"];
inline bool Components_Component_Linecard_State::has_slot_id() const {
  return this != internal_default_instance() && slot_id_ != NULL;
}
inline const ::ywrapper::StringValue& Components_Component_Linecard_State::slot_id() const {
  const ::ywrapper::StringValue* p = slot_id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Linecard.State.slot_id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Components_Component_Linecard_State::release_slot_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Linecard.State.slot_id)
  
  ::ywrapper::StringValue* temp = slot_id_;
  slot_id_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Components_Component_Linecard_State::mutable_slot_id() {
  
  if (slot_id_ == NULL) {
    slot_id_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Linecard.State.slot_id)
  return slot_id_;
}
inline void Components_Component_Linecard_State::set_allocated_slot_id(::ywrapper::StringValue* slot_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(slot_id_);
  }
  if (slot_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      slot_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, slot_id, submessage_arena);
    }
    
  } else {
    
  }
  slot_id_ = slot_id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Linecard.State.slot_id)
}

// -------------------------------------------------------------------

// Components_Component_Linecard

// .openconfig.openconfig_platform.Components.Component.Linecard.Config config = 421310981 [(.yext.schemapath) = "/components/component/linecard/config"];
inline bool Components_Component_Linecard::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Components_Component_Linecard::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Linecard_Config& Components_Component_Linecard::config() const {
  const ::openconfig::openconfig_platform::Components_Component_Linecard_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Linecard.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Linecard_Config*>(
      &::openconfig::openconfig_platform::_Components_Component_Linecard_Config_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Linecard_Config* Components_Component_Linecard::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Linecard.config)
  
  ::openconfig::openconfig_platform::Components_Component_Linecard_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Linecard_Config* Components_Component_Linecard::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Linecard_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Linecard.config)
  return config_;
}
inline void Components_Component_Linecard::set_allocated_config(::openconfig::openconfig_platform::Components_Component_Linecard_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Linecard.config)
}

// .openconfig.openconfig_platform.Components.Component.Linecard.State state = 252073466 [(.yext.schemapath) = "/components/component/linecard/state"];
inline bool Components_Component_Linecard::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Components_Component_Linecard::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Linecard_State& Components_Component_Linecard::state() const {
  const ::openconfig::openconfig_platform::Components_Component_Linecard_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Linecard.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Linecard_State*>(
      &::openconfig::openconfig_platform::_Components_Component_Linecard_State_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Linecard_State* Components_Component_Linecard::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Linecard.state)
  
  ::openconfig::openconfig_platform::Components_Component_Linecard_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Linecard_State* Components_Component_Linecard::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Linecard_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Linecard.state)
  return state_;
}
inline void Components_Component_Linecard::set_allocated_state(::openconfig::openconfig_platform::Components_Component_Linecard_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Linecard.state)
}

// -------------------------------------------------------------------

// Components_Component_OpticalChannel_Config

// .ywrapper.UintValue frequency = 26841272 [(.yext.schemapath) = "/components/component/optical-channel/config/frequency"];
inline bool Components_Component_OpticalChannel_Config::has_frequency() const {
  return this != internal_default_instance() && frequency_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_OpticalChannel_Config::frequency() const {
  const ::ywrapper::UintValue* p = frequency_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config.frequency)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_OpticalChannel_Config::release_frequency() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config.frequency)
  
  ::ywrapper::UintValue* temp = frequency_;
  frequency_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_OpticalChannel_Config::mutable_frequency() {
  
  if (frequency_ == NULL) {
    frequency_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config.frequency)
  return frequency_;
}
inline void Components_Component_OpticalChannel_Config::set_allocated_frequency(::ywrapper::UintValue* frequency) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(frequency_);
  }
  if (frequency) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      frequency = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, frequency, submessage_arena);
    }
    
  } else {
    
  }
  frequency_ = frequency;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config.frequency)
}

// .ywrapper.StringValue line_port = 177586852 [(.yext.schemapath) = "/components/component/optical-channel/config/line-port"];
inline bool Components_Component_OpticalChannel_Config::has_line_port() const {
  return this != internal_default_instance() && line_port_ != NULL;
}
inline const ::ywrapper::StringValue& Components_Component_OpticalChannel_Config::line_port() const {
  const ::ywrapper::StringValue* p = line_port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config.line_port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Components_Component_OpticalChannel_Config::release_line_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config.line_port)
  
  ::ywrapper::StringValue* temp = line_port_;
  line_port_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Components_Component_OpticalChannel_Config::mutable_line_port() {
  
  if (line_port_ == NULL) {
    line_port_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config.line_port)
  return line_port_;
}
inline void Components_Component_OpticalChannel_Config::set_allocated_line_port(::ywrapper::StringValue* line_port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(line_port_);
  }
  if (line_port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      line_port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, line_port, submessage_arena);
    }
    
  } else {
    
  }
  line_port_ = line_port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config.line_port)
}

// .ywrapper.UintValue operational_mode = 220459914 [(.yext.schemapath) = "/components/component/optical-channel/config/operational-mode"];
inline bool Components_Component_OpticalChannel_Config::has_operational_mode() const {
  return this != internal_default_instance() && operational_mode_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_OpticalChannel_Config::operational_mode() const {
  const ::ywrapper::UintValue* p = operational_mode_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config.operational_mode)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_OpticalChannel_Config::release_operational_mode() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config.operational_mode)
  
  ::ywrapper::UintValue* temp = operational_mode_;
  operational_mode_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_OpticalChannel_Config::mutable_operational_mode() {
  
  if (operational_mode_ == NULL) {
    operational_mode_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config.operational_mode)
  return operational_mode_;
}
inline void Components_Component_OpticalChannel_Config::set_allocated_operational_mode(::ywrapper::UintValue* operational_mode) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(operational_mode_);
  }
  if (operational_mode) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      operational_mode = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, operational_mode, submessage_arena);
    }
    
  } else {
    
  }
  operational_mode_ = operational_mode;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config.operational_mode)
}

// .ywrapper.Decimal64Value target_output_power = 62472149 [(.yext.schemapath) = "/components/component/optical-channel/config/target-output-power"];
inline bool Components_Component_OpticalChannel_Config::has_target_output_power() const {
  return this != internal_default_instance() && target_output_power_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_Config::target_output_power() const {
  const ::ywrapper::Decimal64Value* p = target_output_power_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config.target_output_power)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_Config::release_target_output_power() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config.target_output_power)
  
  ::ywrapper::Decimal64Value* temp = target_output_power_;
  target_output_power_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_Config::mutable_target_output_power() {
  
  if (target_output_power_ == NULL) {
    target_output_power_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config.target_output_power)
  return target_output_power_;
}
inline void Components_Component_OpticalChannel_Config::set_allocated_target_output_power(::ywrapper::Decimal64Value* target_output_power) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(target_output_power_);
  }
  if (target_output_power) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      target_output_power = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target_output_power, submessage_arena);
    }
    
  } else {
    
  }
  target_output_power_ = target_output_power;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config.target_output_power)
}

// -------------------------------------------------------------------

// Components_Component_OpticalChannel_State_ChromaticDispersion

// .ywrapper.Decimal64Value avg = 264868115 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion/avg"];
inline bool Components_Component_OpticalChannel_State_ChromaticDispersion::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_ChromaticDispersion::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_ChromaticDispersion::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_ChromaticDispersion::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion.avg)
  return avg_;
}
inline void Components_Component_OpticalChannel_State_ChromaticDispersion::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion.avg)
}

// .ywrapper.Decimal64Value instant = 423301068 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion/instant"];
inline bool Components_Component_OpticalChannel_State_ChromaticDispersion::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_ChromaticDispersion::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_ChromaticDispersion::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_ChromaticDispersion::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion.instant)
  return instant_;
}
inline void Components_Component_OpticalChannel_State_ChromaticDispersion::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion.instant)
}

// .ywrapper.Decimal64Value max = 380327293 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion/max"];
inline bool Components_Component_OpticalChannel_State_ChromaticDispersion::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_ChromaticDispersion::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_ChromaticDispersion::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_ChromaticDispersion::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion.max)
  return max_;
}
inline void Components_Component_OpticalChannel_State_ChromaticDispersion::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion.max)
}

// .ywrapper.Decimal64Value min = 514548211 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion/min"];
inline bool Components_Component_OpticalChannel_State_ChromaticDispersion::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_ChromaticDispersion::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_ChromaticDispersion::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_ChromaticDispersion::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion.min)
  return min_;
}
inline void Components_Component_OpticalChannel_State_ChromaticDispersion::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion.min)
}

// -------------------------------------------------------------------

// Components_Component_OpticalChannel_State_InputPower

// .ywrapper.Decimal64Value avg = 119392212 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/avg"];
inline bool Components_Component_OpticalChannel_State_InputPower::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_InputPower::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_InputPower::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_InputPower::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower.avg)
  return avg_;
}
inline void Components_Component_OpticalChannel_State_InputPower::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower.avg)
}

// .ywrapper.Decimal64Value instant = 477503791 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/instant"];
inline bool Components_Component_OpticalChannel_State_InputPower::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_InputPower::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_InputPower::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_InputPower::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower.instant)
  return instant_;
}
inline void Components_Component_OpticalChannel_State_InputPower::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower.instant)
}

// .ywrapper.UintValue interval = 97973455 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/interval"];
inline bool Components_Component_OpticalChannel_State_InputPower::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_OpticalChannel_State_InputPower::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_OpticalChannel_State_InputPower::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_OpticalChannel_State_InputPower::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower.interval)
  return interval_;
}
inline void Components_Component_OpticalChannel_State_InputPower::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower.interval)
}

// .ywrapper.Decimal64Value max = 335529838 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/max"];
inline bool Components_Component_OpticalChannel_State_InputPower::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_InputPower::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_InputPower::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_InputPower::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower.max)
  return max_;
}
inline void Components_Component_OpticalChannel_State_InputPower::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower.max)
}

// .ywrapper.Decimal64Value min = 469750720 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/min"];
inline bool Components_Component_OpticalChannel_State_InputPower::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_InputPower::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_InputPower::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_InputPower::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower.min)
  return min_;
}
inline void Components_Component_OpticalChannel_State_InputPower::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower.min)
}

// -------------------------------------------------------------------

// Components_Component_OpticalChannel_State_LaserBiasCurrent

// .ywrapper.Decimal64Value avg = 114747003 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/avg"];
inline bool Components_Component_OpticalChannel_State_LaserBiasCurrent::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_LaserBiasCurrent::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_LaserBiasCurrent::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_LaserBiasCurrent::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent.avg)
  return avg_;
}
inline void Components_Component_OpticalChannel_State_LaserBiasCurrent::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent.avg)
}

// .ywrapper.Decimal64Value instant = 49268100 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/instant"];
inline bool Components_Component_OpticalChannel_State_LaserBiasCurrent::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_LaserBiasCurrent::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_LaserBiasCurrent::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_LaserBiasCurrent::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent.instant)
  return instant_;
}
inline void Components_Component_OpticalChannel_State_LaserBiasCurrent::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent.instant)
}

// .ywrapper.UintValue interval = 345098114 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/interval"];
inline bool Components_Component_OpticalChannel_State_LaserBiasCurrent::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_OpticalChannel_State_LaserBiasCurrent::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_OpticalChannel_State_LaserBiasCurrent::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_OpticalChannel_State_LaserBiasCurrent::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent.interval)
  return interval_;
}
inline void Components_Component_OpticalChannel_State_LaserBiasCurrent::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent.interval)
}

// .ywrapper.Decimal64Value max = 232778501 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/max"];
inline bool Components_Component_OpticalChannel_State_LaserBiasCurrent::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_LaserBiasCurrent::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_LaserBiasCurrent::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_LaserBiasCurrent::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent.max)
  return max_;
}
inline void Components_Component_OpticalChannel_State_LaserBiasCurrent::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent.max)
}

// .ywrapper.Decimal64Value min = 98557579 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/min"];
inline bool Components_Component_OpticalChannel_State_LaserBiasCurrent::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_LaserBiasCurrent::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_LaserBiasCurrent::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_LaserBiasCurrent::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent.min)
  return min_;
}
inline void Components_Component_OpticalChannel_State_LaserBiasCurrent::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent.min)
}

// -------------------------------------------------------------------

// Components_Component_OpticalChannel_State_OutputPower

// .ywrapper.Decimal64Value avg = 468682565 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/avg"];
inline bool Components_Component_OpticalChannel_State_OutputPower::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_OutputPower::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_OutputPower::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_OutputPower::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower.avg)
  return avg_;
}
inline void Components_Component_OpticalChannel_State_OutputPower::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower.avg)
}

// .ywrapper.Decimal64Value instant = 307832130 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/instant"];
inline bool Components_Component_OpticalChannel_State_OutputPower::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_OutputPower::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_OutputPower::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_OutputPower::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower.instant)
  return instant_;
}
inline void Components_Component_OpticalChannel_State_OutputPower::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower.instant)
}

// .ywrapper.UintValue interval = 322482692 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/interval"];
inline bool Components_Component_OpticalChannel_State_OutputPower::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_OpticalChannel_State_OutputPower::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_OpticalChannel_State_OutputPower::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_OpticalChannel_State_OutputPower::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower.interval)
  return interval_;
}
inline void Components_Component_OpticalChannel_State_OutputPower::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower.interval)
}

// .ywrapper.Decimal64Value max = 252544967 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/max"];
inline bool Components_Component_OpticalChannel_State_OutputPower::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_OutputPower::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_OutputPower::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_OutputPower::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower.max)
  return max_;
}
inline void Components_Component_OpticalChannel_State_OutputPower::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower.max)
}

// .ywrapper.Decimal64Value min = 386765881 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/min"];
inline bool Components_Component_OpticalChannel_State_OutputPower::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_OutputPower::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_OutputPower::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_OutputPower::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower.min)
  return min_;
}
inline void Components_Component_OpticalChannel_State_OutputPower::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower.min)
}

// -------------------------------------------------------------------

// Components_Component_OpticalChannel_State_PolarizationDependentLoss

// .ywrapper.Decimal64Value avg = 533746774 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/avg"];
inline bool Components_Component_OpticalChannel_State_PolarizationDependentLoss::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_PolarizationDependentLoss::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_PolarizationDependentLoss::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_PolarizationDependentLoss::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss.avg)
  return avg_;
}
inline void Components_Component_OpticalChannel_State_PolarizationDependentLoss::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss.avg)
}

// .ywrapper.Decimal64Value instant = 32098901 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/instant"];
inline bool Components_Component_OpticalChannel_State_PolarizationDependentLoss::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_PolarizationDependentLoss::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_PolarizationDependentLoss::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_PolarizationDependentLoss::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss.instant)
  return instant_;
}
inline void Components_Component_OpticalChannel_State_PolarizationDependentLoss::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss.instant)
}

// .ywrapper.UintValue interval = 460602601 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/interval"];
inline bool Components_Component_OpticalChannel_State_PolarizationDependentLoss::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_OpticalChannel_State_PolarizationDependentLoss::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_OpticalChannel_State_PolarizationDependentLoss::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_OpticalChannel_State_PolarizationDependentLoss::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss.interval)
  return interval_;
}
inline void Components_Component_OpticalChannel_State_PolarizationDependentLoss::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss.interval)
}

// .ywrapper.Decimal64Value max = 145902896 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/max"];
inline bool Components_Component_OpticalChannel_State_PolarizationDependentLoss::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_PolarizationDependentLoss::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_PolarizationDependentLoss::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_PolarizationDependentLoss::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss.max)
  return max_;
}
inline void Components_Component_OpticalChannel_State_PolarizationDependentLoss::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss.max)
}

// .ywrapper.Decimal64Value min = 11682014 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/min"];
inline bool Components_Component_OpticalChannel_State_PolarizationDependentLoss::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_PolarizationDependentLoss::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_PolarizationDependentLoss::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_PolarizationDependentLoss::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss.min)
  return min_;
}
inline void Components_Component_OpticalChannel_State_PolarizationDependentLoss::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss.min)
}

// -------------------------------------------------------------------

// Components_Component_OpticalChannel_State_PolarizationModeDispersion

// .ywrapper.Decimal64Value avg = 237752797 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion/avg"];
inline bool Components_Component_OpticalChannel_State_PolarizationModeDispersion::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_PolarizationModeDispersion::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_PolarizationModeDispersion::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_PolarizationModeDispersion::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion.avg)
  return avg_;
}
inline void Components_Component_OpticalChannel_State_PolarizationModeDispersion::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion.avg)
}

// .ywrapper.Decimal64Value instant = 42582794 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion/instant"];
inline bool Components_Component_OpticalChannel_State_PolarizationModeDispersion::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_PolarizationModeDispersion::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_PolarizationModeDispersion::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_PolarizationModeDispersion::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion.instant)
  return instant_;
}
inline void Components_Component_OpticalChannel_State_PolarizationModeDispersion::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion.instant)
}

// .ywrapper.Decimal64Value max = 19068223 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion/max"];
inline bool Components_Component_OpticalChannel_State_PolarizationModeDispersion::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_PolarizationModeDispersion::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_PolarizationModeDispersion::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_PolarizationModeDispersion::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion.max)
  return max_;
}
inline void Components_Component_OpticalChannel_State_PolarizationModeDispersion::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion.max)
}

// .ywrapper.Decimal64Value min = 421718209 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion/min"];
inline bool Components_Component_OpticalChannel_State_PolarizationModeDispersion::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_PolarizationModeDispersion::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_PolarizationModeDispersion::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_PolarizationModeDispersion::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion.min)
  return min_;
}
inline void Components_Component_OpticalChannel_State_PolarizationModeDispersion::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion.min)
}

// -------------------------------------------------------------------

// Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion

// .ywrapper.Decimal64Value avg = 315050099 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/avg"];
inline bool Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion.avg)
  return avg_;
}
inline void Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion.avg)
}

// .ywrapper.Decimal64Value instant = 14501164 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/instant"];
inline bool Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion.instant)
  return instant_;
}
inline void Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion.instant)
}

// .ywrapper.Decimal64Value max = 430612189 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/max"];
inline bool Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion.max)
  return max_;
}
inline void Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion.max)
}

// .ywrapper.Decimal64Value min = 27962195 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/min"];
inline bool Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion.min)
  return min_;
}
inline void Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion.min)
}

// -------------------------------------------------------------------

// Components_Component_OpticalChannel_State

// .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion chromatic_dispersion = 99469822 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion"];
inline bool Components_Component_OpticalChannel_State::has_chromatic_dispersion() const {
  return this != internal_default_instance() && chromatic_dispersion_ != NULL;
}
inline void Components_Component_OpticalChannel_State::clear_chromatic_dispersion() {
  if (GetArenaNoVirtual() == NULL && chromatic_dispersion_ != NULL) {
    delete chromatic_dispersion_;
  }
  chromatic_dispersion_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_ChromaticDispersion& Components_Component_OpticalChannel_State::chromatic_dispersion() const {
  const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_ChromaticDispersion* p = chromatic_dispersion_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.chromatic_dispersion)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_ChromaticDispersion*>(
      &::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_ChromaticDispersion_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_ChromaticDispersion* Components_Component_OpticalChannel_State::release_chromatic_dispersion() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.chromatic_dispersion)
  
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_ChromaticDispersion* temp = chromatic_dispersion_;
  chromatic_dispersion_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_ChromaticDispersion* Components_Component_OpticalChannel_State::mutable_chromatic_dispersion() {
  
  if (chromatic_dispersion_ == NULL) {
    chromatic_dispersion_ = new ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_ChromaticDispersion;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.chromatic_dispersion)
  return chromatic_dispersion_;
}
inline void Components_Component_OpticalChannel_State::set_allocated_chromatic_dispersion(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_ChromaticDispersion* chromatic_dispersion) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete chromatic_dispersion_;
  }
  if (chromatic_dispersion) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      chromatic_dispersion = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, chromatic_dispersion, submessage_arena);
    }
    
  } else {
    
  }
  chromatic_dispersion_ = chromatic_dispersion;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.chromatic_dispersion)
}

// .ywrapper.UintValue frequency = 429916835 [(.yext.schemapath) = "/components/component/optical-channel/state/frequency"];
inline bool Components_Component_OpticalChannel_State::has_frequency() const {
  return this != internal_default_instance() && frequency_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_OpticalChannel_State::frequency() const {
  const ::ywrapper::UintValue* p = frequency_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.frequency)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_OpticalChannel_State::release_frequency() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.frequency)
  
  ::ywrapper::UintValue* temp = frequency_;
  frequency_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_OpticalChannel_State::mutable_frequency() {
  
  if (frequency_ == NULL) {
    frequency_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.frequency)
  return frequency_;
}
inline void Components_Component_OpticalChannel_State::set_allocated_frequency(::ywrapper::UintValue* frequency) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(frequency_);
  }
  if (frequency) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      frequency = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, frequency, submessage_arena);
    }
    
  } else {
    
  }
  frequency_ = frequency;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.frequency)
}

// .ywrapper.UintValue group_id = 327440498 [(.yext.schemapath) = "/components/component/optical-channel/state/group-id"];
inline bool Components_Component_OpticalChannel_State::has_group_id() const {
  return this != internal_default_instance() && group_id_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_OpticalChannel_State::group_id() const {
  const ::ywrapper::UintValue* p = group_id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.group_id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_OpticalChannel_State::release_group_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.group_id)
  
  ::ywrapper::UintValue* temp = group_id_;
  group_id_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_OpticalChannel_State::mutable_group_id() {
  
  if (group_id_ == NULL) {
    group_id_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.group_id)
  return group_id_;
}
inline void Components_Component_OpticalChannel_State::set_allocated_group_id(::ywrapper::UintValue* group_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(group_id_);
  }
  if (group_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      group_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, group_id, submessage_arena);
    }
    
  } else {
    
  }
  group_id_ = group_id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.group_id)
}

// .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower input_power = 324789833 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power"];
inline bool Components_Component_OpticalChannel_State::has_input_power() const {
  return this != internal_default_instance() && input_power_ != NULL;
}
inline void Components_Component_OpticalChannel_State::clear_input_power() {
  if (GetArenaNoVirtual() == NULL && input_power_ != NULL) {
    delete input_power_;
  }
  input_power_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_InputPower& Components_Component_OpticalChannel_State::input_power() const {
  const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_InputPower* p = input_power_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.input_power)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_InputPower*>(
      &::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_InputPower_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_InputPower* Components_Component_OpticalChannel_State::release_input_power() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.input_power)
  
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_InputPower* temp = input_power_;
  input_power_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_InputPower* Components_Component_OpticalChannel_State::mutable_input_power() {
  
  if (input_power_ == NULL) {
    input_power_ = new ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_InputPower;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.input_power)
  return input_power_;
}
inline void Components_Component_OpticalChannel_State::set_allocated_input_power(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_InputPower* input_power) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete input_power_;
  }
  if (input_power) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      input_power = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, input_power, submessage_arena);
    }
    
  } else {
    
  }
  input_power_ = input_power;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.input_power)
}

// .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent laser_bias_current = 91725622 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current"];
inline bool Components_Component_OpticalChannel_State::has_laser_bias_current() const {
  return this != internal_default_instance() && laser_bias_current_ != NULL;
}
inline void Components_Component_OpticalChannel_State::clear_laser_bias_current() {
  if (GetArenaNoVirtual() == NULL && laser_bias_current_ != NULL) {
    delete laser_bias_current_;
  }
  laser_bias_current_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_LaserBiasCurrent& Components_Component_OpticalChannel_State::laser_bias_current() const {
  const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_LaserBiasCurrent* p = laser_bias_current_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.laser_bias_current)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_LaserBiasCurrent*>(
      &::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_LaserBiasCurrent_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_LaserBiasCurrent* Components_Component_OpticalChannel_State::release_laser_bias_current() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.laser_bias_current)
  
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_LaserBiasCurrent* temp = laser_bias_current_;
  laser_bias_current_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_LaserBiasCurrent* Components_Component_OpticalChannel_State::mutable_laser_bias_current() {
  
  if (laser_bias_current_ == NULL) {
    laser_bias_current_ = new ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_LaserBiasCurrent;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.laser_bias_current)
  return laser_bias_current_;
}
inline void Components_Component_OpticalChannel_State::set_allocated_laser_bias_current(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_LaserBiasCurrent* laser_bias_current) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete laser_bias_current_;
  }
  if (laser_bias_current) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      laser_bias_current = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, laser_bias_current, submessage_arena);
    }
    
  } else {
    
  }
  laser_bias_current_ = laser_bias_current;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.laser_bias_current)
}

// .ywrapper.StringValue line_port = 123348347 [(.yext.schemapath) = "/components/component/optical-channel/state/line-port"];
inline bool Components_Component_OpticalChannel_State::has_line_port() const {
  return this != internal_default_instance() && line_port_ != NULL;
}
inline const ::ywrapper::StringValue& Components_Component_OpticalChannel_State::line_port() const {
  const ::ywrapper::StringValue* p = line_port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.line_port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Components_Component_OpticalChannel_State::release_line_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.line_port)
  
  ::ywrapper::StringValue* temp = line_port_;
  line_port_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Components_Component_OpticalChannel_State::mutable_line_port() {
  
  if (line_port_ == NULL) {
    line_port_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.line_port)
  return line_port_;
}
inline void Components_Component_OpticalChannel_State::set_allocated_line_port(::ywrapper::StringValue* line_port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(line_port_);
  }
  if (line_port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      line_port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, line_port, submessage_arena);
    }
    
  } else {
    
  }
  line_port_ = line_port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.line_port)
}

// .ywrapper.UintValue operational_mode = 85276411 [(.yext.schemapath) = "/components/component/optical-channel/state/operational-mode"];
inline bool Components_Component_OpticalChannel_State::has_operational_mode() const {
  return this != internal_default_instance() && operational_mode_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_OpticalChannel_State::operational_mode() const {
  const ::ywrapper::UintValue* p = operational_mode_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.operational_mode)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_OpticalChannel_State::release_operational_mode() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.operational_mode)
  
  ::ywrapper::UintValue* temp = operational_mode_;
  operational_mode_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_OpticalChannel_State::mutable_operational_mode() {
  
  if (operational_mode_ == NULL) {
    operational_mode_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.operational_mode)
  return operational_mode_;
}
inline void Components_Component_OpticalChannel_State::set_allocated_operational_mode(::ywrapper::UintValue* operational_mode) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(operational_mode_);
  }
  if (operational_mode) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      operational_mode = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, operational_mode, submessage_arena);
    }
    
  } else {
    
  }
  operational_mode_ = operational_mode;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.operational_mode)
}

// .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower output_power = 190162364 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power"];
inline bool Components_Component_OpticalChannel_State::has_output_power() const {
  return this != internal_default_instance() && output_power_ != NULL;
}
inline void Components_Component_OpticalChannel_State::clear_output_power() {
  if (GetArenaNoVirtual() == NULL && output_power_ != NULL) {
    delete output_power_;
  }
  output_power_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_OutputPower& Components_Component_OpticalChannel_State::output_power() const {
  const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_OutputPower* p = output_power_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.output_power)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_OutputPower*>(
      &::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_OutputPower_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_OutputPower* Components_Component_OpticalChannel_State::release_output_power() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.output_power)
  
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_OutputPower* temp = output_power_;
  output_power_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_OutputPower* Components_Component_OpticalChannel_State::mutable_output_power() {
  
  if (output_power_ == NULL) {
    output_power_ = new ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_OutputPower;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.output_power)
  return output_power_;
}
inline void Components_Component_OpticalChannel_State::set_allocated_output_power(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_OutputPower* output_power) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete output_power_;
  }
  if (output_power) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      output_power = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, output_power, submessage_arena);
    }
    
  } else {
    
  }
  output_power_ = output_power;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.output_power)
}

// .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss polarization_dependent_loss = 384302551 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss"];
inline bool Components_Component_OpticalChannel_State::has_polarization_dependent_loss() const {
  return this != internal_default_instance() && polarization_dependent_loss_ != NULL;
}
inline void Components_Component_OpticalChannel_State::clear_polarization_dependent_loss() {
  if (GetArenaNoVirtual() == NULL && polarization_dependent_loss_ != NULL) {
    delete polarization_dependent_loss_;
  }
  polarization_dependent_loss_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationDependentLoss& Components_Component_OpticalChannel_State::polarization_dependent_loss() const {
  const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationDependentLoss* p = polarization_dependent_loss_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.polarization_dependent_loss)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationDependentLoss*>(
      &::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_PolarizationDependentLoss_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationDependentLoss* Components_Component_OpticalChannel_State::release_polarization_dependent_loss() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.polarization_dependent_loss)
  
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationDependentLoss* temp = polarization_dependent_loss_;
  polarization_dependent_loss_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationDependentLoss* Components_Component_OpticalChannel_State::mutable_polarization_dependent_loss() {
  
  if (polarization_dependent_loss_ == NULL) {
    polarization_dependent_loss_ = new ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationDependentLoss;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.polarization_dependent_loss)
  return polarization_dependent_loss_;
}
inline void Components_Component_OpticalChannel_State::set_allocated_polarization_dependent_loss(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationDependentLoss* polarization_dependent_loss) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete polarization_dependent_loss_;
  }
  if (polarization_dependent_loss) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      polarization_dependent_loss = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, polarization_dependent_loss, submessage_arena);
    }
    
  } else {
    
  }
  polarization_dependent_loss_ = polarization_dependent_loss;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.polarization_dependent_loss)
}

// .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion polarization_mode_dispersion = 145763652 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion"];
inline bool Components_Component_OpticalChannel_State::has_polarization_mode_dispersion() const {
  return this != internal_default_instance() && polarization_mode_dispersion_ != NULL;
}
inline void Components_Component_OpticalChannel_State::clear_polarization_mode_dispersion() {
  if (GetArenaNoVirtual() == NULL && polarization_mode_dispersion_ != NULL) {
    delete polarization_mode_dispersion_;
  }
  polarization_mode_dispersion_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationModeDispersion& Components_Component_OpticalChannel_State::polarization_mode_dispersion() const {
  const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationModeDispersion* p = polarization_mode_dispersion_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.polarization_mode_dispersion)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationModeDispersion*>(
      &::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_PolarizationModeDispersion_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationModeDispersion* Components_Component_OpticalChannel_State::release_polarization_mode_dispersion() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.polarization_mode_dispersion)
  
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationModeDispersion* temp = polarization_mode_dispersion_;
  polarization_mode_dispersion_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationModeDispersion* Components_Component_OpticalChannel_State::mutable_polarization_mode_dispersion() {
  
  if (polarization_mode_dispersion_ == NULL) {
    polarization_mode_dispersion_ = new ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationModeDispersion;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.polarization_mode_dispersion)
  return polarization_mode_dispersion_;
}
inline void Components_Component_OpticalChannel_State::set_allocated_polarization_mode_dispersion(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationModeDispersion* polarization_mode_dispersion) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete polarization_mode_dispersion_;
  }
  if (polarization_mode_dispersion) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      polarization_mode_dispersion = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, polarization_mode_dispersion, submessage_arena);
    }
    
  } else {
    
  }
  polarization_mode_dispersion_ = polarization_mode_dispersion;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.polarization_mode_dispersion)
}

// .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion second_order_polarization_mode_dispersion = 442862686 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion"];
inline bool Components_Component_OpticalChannel_State::has_second_order_polarization_mode_dispersion() const {
  return this != internal_default_instance() && second_order_polarization_mode_dispersion_ != NULL;
}
inline void Components_Component_OpticalChannel_State::clear_second_order_polarization_mode_dispersion() {
  if (GetArenaNoVirtual() == NULL && second_order_polarization_mode_dispersion_ != NULL) {
    delete second_order_polarization_mode_dispersion_;
  }
  second_order_polarization_mode_dispersion_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion& Components_Component_OpticalChannel_State::second_order_polarization_mode_dispersion() const {
  const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion* p = second_order_polarization_mode_dispersion_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.second_order_polarization_mode_dispersion)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion*>(
      &::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion* Components_Component_OpticalChannel_State::release_second_order_polarization_mode_dispersion() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.second_order_polarization_mode_dispersion)
  
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion* temp = second_order_polarization_mode_dispersion_;
  second_order_polarization_mode_dispersion_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion* Components_Component_OpticalChannel_State::mutable_second_order_polarization_mode_dispersion() {
  
  if (second_order_polarization_mode_dispersion_ == NULL) {
    second_order_polarization_mode_dispersion_ = new ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.second_order_polarization_mode_dispersion)
  return second_order_polarization_mode_dispersion_;
}
inline void Components_Component_OpticalChannel_State::set_allocated_second_order_polarization_mode_dispersion(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion* second_order_polarization_mode_dispersion) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete second_order_polarization_mode_dispersion_;
  }
  if (second_order_polarization_mode_dispersion) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      second_order_polarization_mode_dispersion = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, second_order_polarization_mode_dispersion, submessage_arena);
    }
    
  } else {
    
  }
  second_order_polarization_mode_dispersion_ = second_order_polarization_mode_dispersion;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.second_order_polarization_mode_dispersion)
}

// .ywrapper.Decimal64Value target_output_power = 257534242 [(.yext.schemapath) = "/components/component/optical-channel/state/target-output-power"];
inline bool Components_Component_OpticalChannel_State::has_target_output_power() const {
  return this != internal_default_instance() && target_output_power_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalChannel_State::target_output_power() const {
  const ::ywrapper::Decimal64Value* p = target_output_power_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.target_output_power)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State::release_target_output_power() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.target_output_power)
  
  ::ywrapper::Decimal64Value* temp = target_output_power_;
  target_output_power_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalChannel_State::mutable_target_output_power() {
  
  if (target_output_power_ == NULL) {
    target_output_power_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.target_output_power)
  return target_output_power_;
}
inline void Components_Component_OpticalChannel_State::set_allocated_target_output_power(::ywrapper::Decimal64Value* target_output_power) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(target_output_power_);
  }
  if (target_output_power) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      target_output_power = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target_output_power, submessage_arena);
    }
    
  } else {
    
  }
  target_output_power_ = target_output_power;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.target_output_power)
}

// -------------------------------------------------------------------

// Components_Component_OpticalChannel

// .openconfig.openconfig_platform.Components.Component.OpticalChannel.Config config = 456634943 [(.yext.schemapath) = "/components/component/optical-channel/config"];
inline bool Components_Component_OpticalChannel::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Components_Component_OpticalChannel::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_Config& Components_Component_OpticalChannel::config() const {
  const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_Config*>(
      &::openconfig::openconfig_platform::_Components_Component_OpticalChannel_Config_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalChannel_Config* Components_Component_OpticalChannel::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.config)
  
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalChannel_Config* Components_Component_OpticalChannel::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_OpticalChannel_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.config)
  return config_;
}
inline void Components_Component_OpticalChannel::set_allocated_config(::openconfig::openconfig_platform::Components_Component_OpticalChannel_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.config)
}

// .openconfig.openconfig_platform.Components.Component.OpticalChannel.State state = 84008816 [(.yext.schemapath) = "/components/component/optical-channel/state"];
inline bool Components_Component_OpticalChannel::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Components_Component_OpticalChannel::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State& Components_Component_OpticalChannel::state() const {
  const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalChannel.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State*>(
      &::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State* Components_Component_OpticalChannel::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalChannel.state)
  
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State* Components_Component_OpticalChannel::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalChannel.state)
  return state_;
}
inline void Components_Component_OpticalChannel::set_allocated_state(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalChannel.state)
}

// -------------------------------------------------------------------

// Components_Component_OpticalPort_Config

// .openconfig.enums.OpenconfigTransportLineCommonAdminStateType admin_state = 404520277 [(.yext.schemapath) = "/components/component/optical-port/config/admin-state"];
inline void Components_Component_OpticalPort_Config::clear_admin_state() {
  admin_state_ = 0;
}
inline ::openconfig::enums::OpenconfigTransportLineCommonAdminStateType Components_Component_OpticalPort_Config::admin_state() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalPort.Config.admin_state)
  return static_cast< ::openconfig::enums::OpenconfigTransportLineCommonAdminStateType >(admin_state_);
}
inline void Components_Component_OpticalPort_Config::set_admin_state(::openconfig::enums::OpenconfigTransportLineCommonAdminStateType value) {
  
  admin_state_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.OpticalPort.Config.admin_state)
}

// -------------------------------------------------------------------

// Components_Component_OpticalPort_State_InputPower

// .ywrapper.Decimal64Value avg = 209718746 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/avg"];
inline bool Components_Component_OpticalPort_State_InputPower::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalPort_State_InputPower::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalPort_State_InputPower::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalPort_State_InputPower::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower.avg)
  return avg_;
}
inline void Components_Component_OpticalPort_State_InputPower::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower.avg)
}

// .ywrapper.Decimal64Value instant = 65040985 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/instant"];
inline bool Components_Component_OpticalPort_State_InputPower::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalPort_State_InputPower::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalPort_State_InputPower::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalPort_State_InputPower::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower.instant)
  return instant_;
}
inline void Components_Component_OpticalPort_State_InputPower::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower.instant)
}

// .ywrapper.UintValue interval = 110463805 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/interval"];
inline bool Components_Component_OpticalPort_State_InputPower::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_OpticalPort_State_InputPower::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_OpticalPort_State_InputPower::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_OpticalPort_State_InputPower::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower.interval)
  return interval_;
}
inline void Components_Component_OpticalPort_State_InputPower::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower.interval)
}

// .ywrapper.Decimal64Value max = 496806636 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/max"];
inline bool Components_Component_OpticalPort_State_InputPower::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalPort_State_InputPower::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalPort_State_InputPower::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalPort_State_InputPower::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower.max)
  return max_;
}
inline void Components_Component_OpticalPort_State_InputPower::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower.max)
}

// .ywrapper.Decimal64Value min = 362585490 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/min"];
inline bool Components_Component_OpticalPort_State_InputPower::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalPort_State_InputPower::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalPort_State_InputPower::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalPort_State_InputPower::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower.min)
  return min_;
}
inline void Components_Component_OpticalPort_State_InputPower::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower.min)
}

// -------------------------------------------------------------------

// Components_Component_OpticalPort_State_OutputPower

// .ywrapper.Decimal64Value avg = 69943463 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/avg"];
inline bool Components_Component_OpticalPort_State_OutputPower::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalPort_State_OutputPower::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalPort_State_OutputPower::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalPort_State_OutputPower::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower.avg)
  return avg_;
}
inline void Components_Component_OpticalPort_State_OutputPower::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower.avg)
}

// .ywrapper.Decimal64Value instant = 359103520 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/instant"];
inline bool Components_Component_OpticalPort_State_OutputPower::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalPort_State_OutputPower::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalPort_State_OutputPower::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalPort_State_OutputPower::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower.instant)
  return instant_;
}
inline void Components_Component_OpticalPort_State_OutputPower::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower.instant)
}

// .ywrapper.UintValue interval = 21615678 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/interval"];
inline bool Components_Component_OpticalPort_State_OutputPower::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_OpticalPort_State_OutputPower::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_OpticalPort_State_OutputPower::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_OpticalPort_State_OutputPower::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower.interval)
  return interval_;
}
inline void Components_Component_OpticalPort_State_OutputPower::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower.interval)
}

// .ywrapper.Decimal64Value max = 55150297 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/max"];
inline bool Components_Component_OpticalPort_State_OutputPower::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalPort_State_OutputPower::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalPort_State_OutputPower::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalPort_State_OutputPower::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower.max)
  return max_;
}
inline void Components_Component_OpticalPort_State_OutputPower::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower.max)
}

// .ywrapper.Decimal64Value min = 457800295 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/min"];
inline bool Components_Component_OpticalPort_State_OutputPower::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_OpticalPort_State_OutputPower::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalPort_State_OutputPower::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_OpticalPort_State_OutputPower::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower.min)
  return min_;
}
inline void Components_Component_OpticalPort_State_OutputPower::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower.min)
}

// -------------------------------------------------------------------

// Components_Component_OpticalPort_State

// .openconfig.enums.OpenconfigTransportLineCommonAdminStateType admin_state = 386106910 [(.yext.schemapath) = "/components/component/optical-port/state/admin-state"];
inline void Components_Component_OpticalPort_State::clear_admin_state() {
  admin_state_ = 0;
}
inline ::openconfig::enums::OpenconfigTransportLineCommonAdminStateType Components_Component_OpticalPort_State::admin_state() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalPort.State.admin_state)
  return static_cast< ::openconfig::enums::OpenconfigTransportLineCommonAdminStateType >(admin_state_);
}
inline void Components_Component_OpticalPort_State::set_admin_state(::openconfig::enums::OpenconfigTransportLineCommonAdminStateType value) {
  
  admin_state_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.OpticalPort.State.admin_state)
}

// .openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower input_power = 526337635 [(.yext.schemapath) = "/components/component/optical-port/state/input-power"];
inline bool Components_Component_OpticalPort_State::has_input_power() const {
  return this != internal_default_instance() && input_power_ != NULL;
}
inline void Components_Component_OpticalPort_State::clear_input_power() {
  if (GetArenaNoVirtual() == NULL && input_power_ != NULL) {
    delete input_power_;
  }
  input_power_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_InputPower& Components_Component_OpticalPort_State::input_power() const {
  const ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_InputPower* p = input_power_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalPort.State.input_power)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_InputPower*>(
      &::openconfig::openconfig_platform::_Components_Component_OpticalPort_State_InputPower_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_InputPower* Components_Component_OpticalPort_State::release_input_power() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalPort.State.input_power)
  
  ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_InputPower* temp = input_power_;
  input_power_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_InputPower* Components_Component_OpticalPort_State::mutable_input_power() {
  
  if (input_power_ == NULL) {
    input_power_ = new ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_InputPower;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalPort.State.input_power)
  return input_power_;
}
inline void Components_Component_OpticalPort_State::set_allocated_input_power(::openconfig::openconfig_platform::Components_Component_OpticalPort_State_InputPower* input_power) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete input_power_;
  }
  if (input_power) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      input_power = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, input_power, submessage_arena);
    }
    
  } else {
    
  }
  input_power_ = input_power;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalPort.State.input_power)
}

// .openconfig.enums.OpenconfigTransportLineCommonOPTICALLINEPORTTYPE optical_port_type = 144411818 [(.yext.schemapath) = "/components/component/optical-port/state/optical-port-type"];
inline void Components_Component_OpticalPort_State::clear_optical_port_type() {
  optical_port_type_ = 0;
}
inline ::openconfig::enums::OpenconfigTransportLineCommonOPTICALLINEPORTTYPE Components_Component_OpticalPort_State::optical_port_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalPort.State.optical_port_type)
  return static_cast< ::openconfig::enums::OpenconfigTransportLineCommonOPTICALLINEPORTTYPE >(optical_port_type_);
}
inline void Components_Component_OpticalPort_State::set_optical_port_type(::openconfig::enums::OpenconfigTransportLineCommonOPTICALLINEPORTTYPE value) {
  
  optical_port_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.OpticalPort.State.optical_port_type)
}

// .openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower output_power = 96781594 [(.yext.schemapath) = "/components/component/optical-port/state/output-power"];
inline bool Components_Component_OpticalPort_State::has_output_power() const {
  return this != internal_default_instance() && output_power_ != NULL;
}
inline void Components_Component_OpticalPort_State::clear_output_power() {
  if (GetArenaNoVirtual() == NULL && output_power_ != NULL) {
    delete output_power_;
  }
  output_power_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_OutputPower& Components_Component_OpticalPort_State::output_power() const {
  const ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_OutputPower* p = output_power_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalPort.State.output_power)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_OutputPower*>(
      &::openconfig::openconfig_platform::_Components_Component_OpticalPort_State_OutputPower_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_OutputPower* Components_Component_OpticalPort_State::release_output_power() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalPort.State.output_power)
  
  ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_OutputPower* temp = output_power_;
  output_power_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_OutputPower* Components_Component_OpticalPort_State::mutable_output_power() {
  
  if (output_power_ == NULL) {
    output_power_ = new ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_OutputPower;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalPort.State.output_power)
  return output_power_;
}
inline void Components_Component_OpticalPort_State::set_allocated_output_power(::openconfig::openconfig_platform::Components_Component_OpticalPort_State_OutputPower* output_power) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete output_power_;
  }
  if (output_power) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      output_power = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, output_power, submessage_arena);
    }
    
  } else {
    
  }
  output_power_ = output_power;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalPort.State.output_power)
}

// -------------------------------------------------------------------

// Components_Component_OpticalPort

// .openconfig.openconfig_platform.Components.Component.OpticalPort.Config config = 419723289 [(.yext.schemapath) = "/components/component/optical-port/config"];
inline bool Components_Component_OpticalPort::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Components_Component_OpticalPort::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_OpticalPort_Config& Components_Component_OpticalPort::config() const {
  const ::openconfig::openconfig_platform::Components_Component_OpticalPort_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalPort.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_OpticalPort_Config*>(
      &::openconfig::openconfig_platform::_Components_Component_OpticalPort_Config_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalPort_Config* Components_Component_OpticalPort::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalPort.config)
  
  ::openconfig::openconfig_platform::Components_Component_OpticalPort_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalPort_Config* Components_Component_OpticalPort::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_OpticalPort_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalPort.config)
  return config_;
}
inline void Components_Component_OpticalPort::set_allocated_config(::openconfig::openconfig_platform::Components_Component_OpticalPort_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalPort.config)
}

// .openconfig.openconfig_platform.Components.Component.OpticalPort.State state = 262913006 [(.yext.schemapath) = "/components/component/optical-port/state"];
inline bool Components_Component_OpticalPort::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Components_Component_OpticalPort::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_OpticalPort_State& Components_Component_OpticalPort::state() const {
  const ::openconfig::openconfig_platform::Components_Component_OpticalPort_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.OpticalPort.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_OpticalPort_State*>(
      &::openconfig::openconfig_platform::_Components_Component_OpticalPort_State_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalPort_State* Components_Component_OpticalPort::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.OpticalPort.state)
  
  ::openconfig::openconfig_platform::Components_Component_OpticalPort_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalPort_State* Components_Component_OpticalPort::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_OpticalPort_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.OpticalPort.state)
  return state_;
}
inline void Components_Component_OpticalPort::set_allocated_state(::openconfig::openconfig_platform::Components_Component_OpticalPort_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.OpticalPort.state)
}

// -------------------------------------------------------------------

// Components_Component_Port_BreakoutMode_Config

// .openconfig.enums.OpenconfigIfEthernetETHERNETSPEED channel_speed = 133662836 [(.yext.schemapath) = "/components/component/port/breakout-mode/config/channel-speed"];
inline void Components_Component_Port_BreakoutMode_Config::clear_channel_speed() {
  channel_speed_ = 0;
}
inline ::openconfig::enums::OpenconfigIfEthernetETHERNETSPEED Components_Component_Port_BreakoutMode_Config::channel_speed() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config.channel_speed)
  return static_cast< ::openconfig::enums::OpenconfigIfEthernetETHERNETSPEED >(channel_speed_);
}
inline void Components_Component_Port_BreakoutMode_Config::set_channel_speed(::openconfig::enums::OpenconfigIfEthernetETHERNETSPEED value) {
  
  channel_speed_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config.channel_speed)
}

// .ywrapper.UintValue num_channels = 207420976 [(.yext.schemapath) = "/components/component/port/breakout-mode/config/num-channels"];
inline bool Components_Component_Port_BreakoutMode_Config::has_num_channels() const {
  return this != internal_default_instance() && num_channels_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_Port_BreakoutMode_Config::num_channels() const {
  const ::ywrapper::UintValue* p = num_channels_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config.num_channels)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_Port_BreakoutMode_Config::release_num_channels() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config.num_channels)
  
  ::ywrapper::UintValue* temp = num_channels_;
  num_channels_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_Port_BreakoutMode_Config::mutable_num_channels() {
  
  if (num_channels_ == NULL) {
    num_channels_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config.num_channels)
  return num_channels_;
}
inline void Components_Component_Port_BreakoutMode_Config::set_allocated_num_channels(::ywrapper::UintValue* num_channels) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(num_channels_);
  }
  if (num_channels) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      num_channels = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, num_channels, submessage_arena);
    }
    
  } else {
    
  }
  num_channels_ = num_channels;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config.num_channels)
}

// -------------------------------------------------------------------

// Components_Component_Port_BreakoutMode_State

// .openconfig.enums.OpenconfigIfEthernetETHERNETSPEED channel_speed = 512097777 [(.yext.schemapath) = "/components/component/port/breakout-mode/state/channel-speed"];
inline void Components_Component_Port_BreakoutMode_State::clear_channel_speed() {
  channel_speed_ = 0;
}
inline ::openconfig::enums::OpenconfigIfEthernetETHERNETSPEED Components_Component_Port_BreakoutMode_State::channel_speed() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State.channel_speed)
  return static_cast< ::openconfig::enums::OpenconfigIfEthernetETHERNETSPEED >(channel_speed_);
}
inline void Components_Component_Port_BreakoutMode_State::set_channel_speed(::openconfig::enums::OpenconfigIfEthernetETHERNETSPEED value) {
  
  channel_speed_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State.channel_speed)
}

// .ywrapper.UintValue num_channels = 514493927 [(.yext.schemapath) = "/components/component/port/breakout-mode/state/num-channels"];
inline bool Components_Component_Port_BreakoutMode_State::has_num_channels() const {
  return this != internal_default_instance() && num_channels_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_Port_BreakoutMode_State::num_channels() const {
  const ::ywrapper::UintValue* p = num_channels_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State.num_channels)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_Port_BreakoutMode_State::release_num_channels() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State.num_channels)
  
  ::ywrapper::UintValue* temp = num_channels_;
  num_channels_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_Port_BreakoutMode_State::mutable_num_channels() {
  
  if (num_channels_ == NULL) {
    num_channels_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State.num_channels)
  return num_channels_;
}
inline void Components_Component_Port_BreakoutMode_State::set_allocated_num_channels(::ywrapper::UintValue* num_channels) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(num_channels_);
  }
  if (num_channels) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      num_channels = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, num_channels, submessage_arena);
    }
    
  } else {
    
  }
  num_channels_ = num_channels;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State.num_channels)
}

// -------------------------------------------------------------------

// Components_Component_Port_BreakoutMode

// .openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config config = 448331782 [(.yext.schemapath) = "/components/component/port/breakout-mode/config"];
inline bool Components_Component_Port_BreakoutMode::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Components_Component_Port_BreakoutMode::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_Config& Components_Component_Port_BreakoutMode::config() const {
  const ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_Config*>(
      &::openconfig::openconfig_platform::_Components_Component_Port_BreakoutMode_Config_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_Config* Components_Component_Port_BreakoutMode::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.config)
  
  ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_Config* Components_Component_Port_BreakoutMode::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.config)
  return config_;
}
inline void Components_Component_Port_BreakoutMode::set_allocated_config(::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.config)
}

// .openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State state = 72628467 [(.yext.schemapath) = "/components/component/port/breakout-mode/state"];
inline bool Components_Component_Port_BreakoutMode::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Components_Component_Port_BreakoutMode::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_State& Components_Component_Port_BreakoutMode::state() const {
  const ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_State*>(
      &::openconfig::openconfig_platform::_Components_Component_Port_BreakoutMode_State_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_State* Components_Component_Port_BreakoutMode::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.state)
  
  ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_State* Components_Component_Port_BreakoutMode::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.state)
  return state_;
}
inline void Components_Component_Port_BreakoutMode::set_allocated_state(::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.state)
}

// -------------------------------------------------------------------

// Components_Component_Port_Config

// -------------------------------------------------------------------

// Components_Component_Port_State

// -------------------------------------------------------------------

// Components_Component_Port

// .openconfig.openconfig_platform.Components.Component.Port.BreakoutMode breakout_mode = 508830081 [(.yext.schemapath) = "/components/component/port/breakout-mode"];
inline bool Components_Component_Port::has_breakout_mode() const {
  return this != internal_default_instance() && breakout_mode_ != NULL;
}
inline void Components_Component_Port::clear_breakout_mode() {
  if (GetArenaNoVirtual() == NULL && breakout_mode_ != NULL) {
    delete breakout_mode_;
  }
  breakout_mode_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode& Components_Component_Port::breakout_mode() const {
  const ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode* p = breakout_mode_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Port.breakout_mode)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode*>(
      &::openconfig::openconfig_platform::_Components_Component_Port_BreakoutMode_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode* Components_Component_Port::release_breakout_mode() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Port.breakout_mode)
  
  ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode* temp = breakout_mode_;
  breakout_mode_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode* Components_Component_Port::mutable_breakout_mode() {
  
  if (breakout_mode_ == NULL) {
    breakout_mode_ = new ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Port.breakout_mode)
  return breakout_mode_;
}
inline void Components_Component_Port::set_allocated_breakout_mode(::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode* breakout_mode) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete breakout_mode_;
  }
  if (breakout_mode) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      breakout_mode = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, breakout_mode, submessage_arena);
    }
    
  } else {
    
  }
  breakout_mode_ = breakout_mode;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Port.breakout_mode)
}

// .openconfig.openconfig_platform.Components.Component.Port.Config config = 229703406 [(.yext.schemapath) = "/components/component/port/config"];
inline bool Components_Component_Port::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Components_Component_Port::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Port_Config& Components_Component_Port::config() const {
  const ::openconfig::openconfig_platform::Components_Component_Port_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Port.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Port_Config*>(
      &::openconfig::openconfig_platform::_Components_Component_Port_Config_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Port_Config* Components_Component_Port::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Port.config)
  
  ::openconfig::openconfig_platform::Components_Component_Port_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Port_Config* Components_Component_Port::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Port_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Port.config)
  return config_;
}
inline void Components_Component_Port::set_allocated_config(::openconfig::openconfig_platform::Components_Component_Port_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Port.config)
}

// .openconfig.openconfig_platform.Components.Component.Port.State state = 326598427 [(.yext.schemapath) = "/components/component/port/state"];
inline bool Components_Component_Port::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Components_Component_Port::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Port_State& Components_Component_Port::state() const {
  const ::openconfig::openconfig_platform::Components_Component_Port_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Port.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Port_State*>(
      &::openconfig::openconfig_platform::_Components_Component_Port_State_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Port_State* Components_Component_Port::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Port.state)
  
  ::openconfig::openconfig_platform::Components_Component_Port_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Port_State* Components_Component_Port::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Port_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Port.state)
  return state_;
}
inline void Components_Component_Port::set_allocated_state(::openconfig::openconfig_platform::Components_Component_Port_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Port.state)
}

// -------------------------------------------------------------------

// Components_Component_PowerSupply_Config

// .ywrapper.BoolValue enabled = 276021544 [(.yext.schemapath) = "/components/component/power-supply/config/enabled"];
inline bool Components_Component_PowerSupply_Config::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
inline const ::ywrapper::BoolValue& Components_Component_PowerSupply_Config::enabled() const {
  const ::ywrapper::BoolValue* p = enabled_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.PowerSupply.Config.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Components_Component_PowerSupply_Config::release_enabled() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.PowerSupply.Config.enabled)
  
  ::ywrapper::BoolValue* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Components_Component_PowerSupply_Config::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.PowerSupply.Config.enabled)
  return enabled_;
}
inline void Components_Component_PowerSupply_Config::set_allocated_enabled(::ywrapper::BoolValue* enabled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enabled_);
  }
  if (enabled) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enabled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enabled, submessage_arena);
    }
    
  } else {
    
  }
  enabled_ = enabled;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.PowerSupply.Config.enabled)
}

// -------------------------------------------------------------------

// Components_Component_PowerSupply_State

// .ywrapper.BytesValue capacity = 212758134 [(.yext.schemapath) = "/components/component/power-supply/state/capacity"];
inline bool Components_Component_PowerSupply_State::has_capacity() const {
  return this != internal_default_instance() && capacity_ != NULL;
}
inline const ::ywrapper::BytesValue& Components_Component_PowerSupply_State::capacity() const {
  const ::ywrapper::BytesValue* p = capacity_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.PowerSupply.State.capacity)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BytesValue*>(
      &::ywrapper::_BytesValue_default_instance_);
}
inline ::ywrapper::BytesValue* Components_Component_PowerSupply_State::release_capacity() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.PowerSupply.State.capacity)
  
  ::ywrapper::BytesValue* temp = capacity_;
  capacity_ = NULL;
  return temp;
}
inline ::ywrapper::BytesValue* Components_Component_PowerSupply_State::mutable_capacity() {
  
  if (capacity_ == NULL) {
    capacity_ = new ::ywrapper::BytesValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.PowerSupply.State.capacity)
  return capacity_;
}
inline void Components_Component_PowerSupply_State::set_allocated_capacity(::ywrapper::BytesValue* capacity) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(capacity_);
  }
  if (capacity) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      capacity = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, capacity, submessage_arena);
    }
    
  } else {
    
  }
  capacity_ = capacity;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.PowerSupply.State.capacity)
}

// .ywrapper.BoolValue enabled = 221635705 [(.yext.schemapath) = "/components/component/power-supply/state/enabled"];
inline bool Components_Component_PowerSupply_State::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
inline const ::ywrapper::BoolValue& Components_Component_PowerSupply_State::enabled() const {
  const ::ywrapper::BoolValue* p = enabled_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.PowerSupply.State.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Components_Component_PowerSupply_State::release_enabled() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.PowerSupply.State.enabled)
  
  ::ywrapper::BoolValue* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Components_Component_PowerSupply_State::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.PowerSupply.State.enabled)
  return enabled_;
}
inline void Components_Component_PowerSupply_State::set_allocated_enabled(::ywrapper::BoolValue* enabled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enabled_);
  }
  if (enabled) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enabled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enabled, submessage_arena);
    }
    
  } else {
    
  }
  enabled_ = enabled;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.PowerSupply.State.enabled)
}

// .ywrapper.BytesValue input_current = 259601702 [(.yext.schemapath) = "/components/component/power-supply/state/input-current"];
inline bool Components_Component_PowerSupply_State::has_input_current() const {
  return this != internal_default_instance() && input_current_ != NULL;
}
inline const ::ywrapper::BytesValue& Components_Component_PowerSupply_State::input_current() const {
  const ::ywrapper::BytesValue* p = input_current_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.PowerSupply.State.input_current)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BytesValue*>(
      &::ywrapper::_BytesValue_default_instance_);
}
inline ::ywrapper::BytesValue* Components_Component_PowerSupply_State::release_input_current() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.PowerSupply.State.input_current)
  
  ::ywrapper::BytesValue* temp = input_current_;
  input_current_ = NULL;
  return temp;
}
inline ::ywrapper::BytesValue* Components_Component_PowerSupply_State::mutable_input_current() {
  
  if (input_current_ == NULL) {
    input_current_ = new ::ywrapper::BytesValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.PowerSupply.State.input_current)
  return input_current_;
}
inline void Components_Component_PowerSupply_State::set_allocated_input_current(::ywrapper::BytesValue* input_current) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(input_current_);
  }
  if (input_current) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      input_current = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, input_current, submessage_arena);
    }
    
  } else {
    
  }
  input_current_ = input_current;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.PowerSupply.State.input_current)
}

// .ywrapper.BytesValue input_voltage = 368014879 [(.yext.schemapath) = "/components/component/power-supply/state/input-voltage"];
inline bool Components_Component_PowerSupply_State::has_input_voltage() const {
  return this != internal_default_instance() && input_voltage_ != NULL;
}
inline const ::ywrapper::BytesValue& Components_Component_PowerSupply_State::input_voltage() const {
  const ::ywrapper::BytesValue* p = input_voltage_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.PowerSupply.State.input_voltage)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BytesValue*>(
      &::ywrapper::_BytesValue_default_instance_);
}
inline ::ywrapper::BytesValue* Components_Component_PowerSupply_State::release_input_voltage() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.PowerSupply.State.input_voltage)
  
  ::ywrapper::BytesValue* temp = input_voltage_;
  input_voltage_ = NULL;
  return temp;
}
inline ::ywrapper::BytesValue* Components_Component_PowerSupply_State::mutable_input_voltage() {
  
  if (input_voltage_ == NULL) {
    input_voltage_ = new ::ywrapper::BytesValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.PowerSupply.State.input_voltage)
  return input_voltage_;
}
inline void Components_Component_PowerSupply_State::set_allocated_input_voltage(::ywrapper::BytesValue* input_voltage) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(input_voltage_);
  }
  if (input_voltage) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      input_voltage = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, input_voltage, submessage_arena);
    }
    
  } else {
    
  }
  input_voltage_ = input_voltage;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.PowerSupply.State.input_voltage)
}

// .ywrapper.BytesValue output_current = 456498973 [(.yext.schemapath) = "/components/component/power-supply/state/output-current"];
inline bool Components_Component_PowerSupply_State::has_output_current() const {
  return this != internal_default_instance() && output_current_ != NULL;
}
inline const ::ywrapper::BytesValue& Components_Component_PowerSupply_State::output_current() const {
  const ::ywrapper::BytesValue* p = output_current_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.PowerSupply.State.output_current)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BytesValue*>(
      &::ywrapper::_BytesValue_default_instance_);
}
inline ::ywrapper::BytesValue* Components_Component_PowerSupply_State::release_output_current() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.PowerSupply.State.output_current)
  
  ::ywrapper::BytesValue* temp = output_current_;
  output_current_ = NULL;
  return temp;
}
inline ::ywrapper::BytesValue* Components_Component_PowerSupply_State::mutable_output_current() {
  
  if (output_current_ == NULL) {
    output_current_ = new ::ywrapper::BytesValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.PowerSupply.State.output_current)
  return output_current_;
}
inline void Components_Component_PowerSupply_State::set_allocated_output_current(::ywrapper::BytesValue* output_current) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(output_current_);
  }
  if (output_current) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      output_current = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, output_current, submessage_arena);
    }
    
  } else {
    
  }
  output_current_ = output_current;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.PowerSupply.State.output_current)
}

// .ywrapper.BytesValue output_power = 255979333 [(.yext.schemapath) = "/components/component/power-supply/state/output-power"];
inline bool Components_Component_PowerSupply_State::has_output_power() const {
  return this != internal_default_instance() && output_power_ != NULL;
}
inline const ::ywrapper::BytesValue& Components_Component_PowerSupply_State::output_power() const {
  const ::ywrapper::BytesValue* p = output_power_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.PowerSupply.State.output_power)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BytesValue*>(
      &::ywrapper::_BytesValue_default_instance_);
}
inline ::ywrapper::BytesValue* Components_Component_PowerSupply_State::release_output_power() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.PowerSupply.State.output_power)
  
  ::ywrapper::BytesValue* temp = output_power_;
  output_power_ = NULL;
  return temp;
}
inline ::ywrapper::BytesValue* Components_Component_PowerSupply_State::mutable_output_power() {
  
  if (output_power_ == NULL) {
    output_power_ = new ::ywrapper::BytesValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.PowerSupply.State.output_power)
  return output_power_;
}
inline void Components_Component_PowerSupply_State::set_allocated_output_power(::ywrapper::BytesValue* output_power) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(output_power_);
  }
  if (output_power) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      output_power = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, output_power, submessage_arena);
    }
    
  } else {
    
  }
  output_power_ = output_power;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.PowerSupply.State.output_power)
}

// .ywrapper.BytesValue output_voltage = 180631100 [(.yext.schemapath) = "/components/component/power-supply/state/output-voltage"];
inline bool Components_Component_PowerSupply_State::has_output_voltage() const {
  return this != internal_default_instance() && output_voltage_ != NULL;
}
inline const ::ywrapper::BytesValue& Components_Component_PowerSupply_State::output_voltage() const {
  const ::ywrapper::BytesValue* p = output_voltage_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.PowerSupply.State.output_voltage)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BytesValue*>(
      &::ywrapper::_BytesValue_default_instance_);
}
inline ::ywrapper::BytesValue* Components_Component_PowerSupply_State::release_output_voltage() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.PowerSupply.State.output_voltage)
  
  ::ywrapper::BytesValue* temp = output_voltage_;
  output_voltage_ = NULL;
  return temp;
}
inline ::ywrapper::BytesValue* Components_Component_PowerSupply_State::mutable_output_voltage() {
  
  if (output_voltage_ == NULL) {
    output_voltage_ = new ::ywrapper::BytesValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.PowerSupply.State.output_voltage)
  return output_voltage_;
}
inline void Components_Component_PowerSupply_State::set_allocated_output_voltage(::ywrapper::BytesValue* output_voltage) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(output_voltage_);
  }
  if (output_voltage) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      output_voltage = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, output_voltage, submessage_arena);
    }
    
  } else {
    
  }
  output_voltage_ = output_voltage;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.PowerSupply.State.output_voltage)
}

// -------------------------------------------------------------------

// Components_Component_PowerSupply

// .openconfig.openconfig_platform.Components.Component.PowerSupply.Config config = 285921994 [(.yext.schemapath) = "/components/component/power-supply/config"];
inline bool Components_Component_PowerSupply::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Components_Component_PowerSupply::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_PowerSupply_Config& Components_Component_PowerSupply::config() const {
  const ::openconfig::openconfig_platform::Components_Component_PowerSupply_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.PowerSupply.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_PowerSupply_Config*>(
      &::openconfig::openconfig_platform::_Components_Component_PowerSupply_Config_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_PowerSupply_Config* Components_Component_PowerSupply::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.PowerSupply.config)
  
  ::openconfig::openconfig_platform::Components_Component_PowerSupply_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_PowerSupply_Config* Components_Component_PowerSupply::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_PowerSupply_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.PowerSupply.config)
  return config_;
}
inline void Components_Component_PowerSupply::set_allocated_config(::openconfig::openconfig_platform::Components_Component_PowerSupply_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.PowerSupply.config)
}

// .openconfig.openconfig_platform.Components.Component.PowerSupply.State state = 327902055 [(.yext.schemapath) = "/components/component/power-supply/state"];
inline bool Components_Component_PowerSupply::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Components_Component_PowerSupply::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_PowerSupply_State& Components_Component_PowerSupply::state() const {
  const ::openconfig::openconfig_platform::Components_Component_PowerSupply_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.PowerSupply.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_PowerSupply_State*>(
      &::openconfig::openconfig_platform::_Components_Component_PowerSupply_State_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_PowerSupply_State* Components_Component_PowerSupply::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.PowerSupply.state)
  
  ::openconfig::openconfig_platform::Components_Component_PowerSupply_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_PowerSupply_State* Components_Component_PowerSupply::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_PowerSupply_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.PowerSupply.state)
  return state_;
}
inline void Components_Component_PowerSupply::set_allocated_state(::openconfig::openconfig_platform::Components_Component_PowerSupply_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.PowerSupply.state)
}

// -------------------------------------------------------------------

// Components_Component_Properties_Property_Config

// .ywrapper.StringValue name = 516657476 [(.yext.schemapath) = "/components/component/properties/property/config/name"];
inline bool Components_Component_Properties_Property_Config::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& Components_Component_Properties_Property_Config::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Properties.Property.Config.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Components_Component_Properties_Property_Config::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Properties.Property.Config.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Components_Component_Properties_Property_Config::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Properties.Property.Config.name)
  return name_;
}
inline void Components_Component_Properties_Property_Config::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Properties.Property.Config.name)
}

// bool value_bool = 320942043;
inline bool Components_Component_Properties_Property_Config::has_value_bool() const {
  return value_case() == kValueBool;
}
inline void Components_Component_Properties_Property_Config::set_has_value_bool() {
  _oneof_case_[0] = kValueBool;
}
inline void Components_Component_Properties_Property_Config::clear_value_bool() {
  if (has_value_bool()) {
    value_.value_bool_ = false;
    clear_has_value();
  }
}
inline bool Components_Component_Properties_Property_Config::value_bool() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Properties.Property.Config.value_bool)
  if (has_value_bool()) {
    return value_.value_bool_;
  }
  return false;
}
inline void Components_Component_Properties_Property_Config::set_value_bool(bool value) {
  if (!has_value_bool()) {
    clear_value();
    set_has_value_bool();
  }
  value_.value_bool_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Properties.Property.Config.value_bool)
}

// sint64 value_sint64 = 532815527;
inline bool Components_Component_Properties_Property_Config::has_value_sint64() const {
  return value_case() == kValueSint64;
}
inline void Components_Component_Properties_Property_Config::set_has_value_sint64() {
  _oneof_case_[0] = kValueSint64;
}
inline void Components_Component_Properties_Property_Config::clear_value_sint64() {
  if (has_value_sint64()) {
    value_.value_sint64_ = GOOGLE_LONGLONG(0);
    clear_has_value();
  }
}
inline ::google::protobuf::int64 Components_Component_Properties_Property_Config::value_sint64() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Properties.Property.Config.value_sint64)
  if (has_value_sint64()) {
    return value_.value_sint64_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void Components_Component_Properties_Property_Config::set_value_sint64(::google::protobuf::int64 value) {
  if (!has_value_sint64()) {
    clear_value();
    set_has_value_sint64();
  }
  value_.value_sint64_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Properties.Property.Config.value_sint64)
}

// string value_string = 259657076;
inline bool Components_Component_Properties_Property_Config::has_value_string() const {
  return value_case() == kValueString;
}
inline void Components_Component_Properties_Property_Config::set_has_value_string() {
  _oneof_case_[0] = kValueString;
}
inline void Components_Component_Properties_Property_Config::clear_value_string() {
  if (has_value_string()) {
    value_.value_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
inline const ::std::string& Components_Component_Properties_Property_Config::value_string() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Properties.Property.Config.value_string)
  if (has_value_string()) {
    return value_.value_string_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Components_Component_Properties_Property_Config::set_value_string(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Properties.Property.Config.value_string)
  if (!has_value_string()) {
    clear_value();
    set_has_value_string();
    value_.value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.value_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Properties.Property.Config.value_string)
}
#if LANG_CXX11
inline void Components_Component_Properties_Property_Config::set_value_string(::std::string&& value) {
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Properties.Property.Config.value_string)
  if (!has_value_string()) {
    clear_value();
    set_has_value_string();
    value_.value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.value_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_platform.Components.Component.Properties.Property.Config.value_string)
}
#endif
inline void Components_Component_Properties_Property_Config::set_value_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_value_string()) {
    clear_value();
    set_has_value_string();
    value_.value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.value_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_platform.Components.Component.Properties.Property.Config.value_string)
}
inline void Components_Component_Properties_Property_Config::set_value_string(const char* value, size_t size) {
  if (!has_value_string()) {
    clear_value();
    set_has_value_string();
    value_.value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.value_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_platform.Components.Component.Properties.Property.Config.value_string)
}
inline ::std::string* Components_Component_Properties_Property_Config::mutable_value_string() {
  if (!has_value_string()) {
    clear_value();
    set_has_value_string();
    value_.value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Properties.Property.Config.value_string)
  return value_.value_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Components_Component_Properties_Property_Config::release_value_string() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Properties.Property.Config.value_string)
  if (has_value_string()) {
    clear_has_value();
    return value_.value_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void Components_Component_Properties_Property_Config::set_allocated_value_string(::std::string* value_string) {
  if (!has_value_string()) {
    value_.value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (value_string != NULL) {
    set_has_value_string();
    value_.value_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        value_string);
  }
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Properties.Property.Config.value_string)
}

// uint64 value_uint64 = 1206141;
inline bool Components_Component_Properties_Property_Config::has_value_uint64() const {
  return value_case() == kValueUint64;
}
inline void Components_Component_Properties_Property_Config::set_has_value_uint64() {
  _oneof_case_[0] = kValueUint64;
}
inline void Components_Component_Properties_Property_Config::clear_value_uint64() {
  if (has_value_uint64()) {
    value_.value_uint64_ = GOOGLE_ULONGLONG(0);
    clear_has_value();
  }
}
inline ::google::protobuf::uint64 Components_Component_Properties_Property_Config::value_uint64() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Properties.Property.Config.value_uint64)
  if (has_value_uint64()) {
    return value_.value_uint64_;
  }
  return GOOGLE_ULONGLONG(0);
}
inline void Components_Component_Properties_Property_Config::set_value_uint64(::google::protobuf::uint64 value) {
  if (!has_value_uint64()) {
    clear_value();
    set_has_value_uint64();
  }
  value_.value_uint64_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Properties.Property.Config.value_uint64)
}

// .ywrapper.Decimal64Value value_decimal64value = 342547513;
inline bool Components_Component_Properties_Property_Config::has_value_decimal64value() const {
  return value_case() == kValueDecimal64Value;
}
inline void Components_Component_Properties_Property_Config::set_has_value_decimal64value() {
  _oneof_case_[0] = kValueDecimal64Value;
}
inline ::ywrapper::Decimal64Value* Components_Component_Properties_Property_Config::release_value_decimal64value() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Properties.Property.Config.value_decimal64value)
  if (has_value_decimal64value()) {
    clear_has_value();
      ::ywrapper::Decimal64Value* temp = value_.value_decimal64value_;
    value_.value_decimal64value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::ywrapper::Decimal64Value& Components_Component_Properties_Property_Config::value_decimal64value() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Properties.Property.Config.value_decimal64value)
  return has_value_decimal64value()
      ? *value_.value_decimal64value_
      : *reinterpret_cast< ::ywrapper::Decimal64Value*>(&::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Properties_Property_Config::mutable_value_decimal64value() {
  if (!has_value_decimal64value()) {
    clear_value();
    set_has_value_decimal64value();
    value_.value_decimal64value_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Properties.Property.Config.value_decimal64value)
  return value_.value_decimal64value_;
}

inline bool Components_Component_Properties_Property_Config::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void Components_Component_Properties_Property_Config::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline Components_Component_Properties_Property_Config::ValueCase Components_Component_Properties_Property_Config::value_case() const {
  return Components_Component_Properties_Property_Config::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Components_Component_Properties_Property_State

// .ywrapper.BoolValue configurable = 264996693 [(.yext.schemapath) = "/components/component/properties/property/state/configurable"];
inline bool Components_Component_Properties_Property_State::has_configurable() const {
  return this != internal_default_instance() && configurable_ != NULL;
}
inline const ::ywrapper::BoolValue& Components_Component_Properties_Property_State::configurable() const {
  const ::ywrapper::BoolValue* p = configurable_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Properties.Property.State.configurable)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Components_Component_Properties_Property_State::release_configurable() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Properties.Property.State.configurable)
  
  ::ywrapper::BoolValue* temp = configurable_;
  configurable_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Components_Component_Properties_Property_State::mutable_configurable() {
  
  if (configurable_ == NULL) {
    configurable_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Properties.Property.State.configurable)
  return configurable_;
}
inline void Components_Component_Properties_Property_State::set_allocated_configurable(::ywrapper::BoolValue* configurable) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(configurable_);
  }
  if (configurable) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      configurable = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, configurable, submessage_arena);
    }
    
  } else {
    
  }
  configurable_ = configurable;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Properties.Property.State.configurable)
}

// .ywrapper.StringValue name = 71072955 [(.yext.schemapath) = "/components/component/properties/property/state/name"];
inline bool Components_Component_Properties_Property_State::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& Components_Component_Properties_Property_State::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Properties.Property.State.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Components_Component_Properties_Property_State::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Properties.Property.State.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Components_Component_Properties_Property_State::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Properties.Property.State.name)
  return name_;
}
inline void Components_Component_Properties_Property_State::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Properties.Property.State.name)
}

// bool value_bool = 14419492;
inline bool Components_Component_Properties_Property_State::has_value_bool() const {
  return value_case() == kValueBool;
}
inline void Components_Component_Properties_Property_State::set_has_value_bool() {
  _oneof_case_[0] = kValueBool;
}
inline void Components_Component_Properties_Property_State::clear_value_bool() {
  if (has_value_bool()) {
    value_.value_bool_ = false;
    clear_has_value();
  }
}
inline bool Components_Component_Properties_Property_State::value_bool() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Properties.Property.State.value_bool)
  if (has_value_bool()) {
    return value_.value_bool_;
  }
  return false;
}
inline void Components_Component_Properties_Property_State::set_value_bool(bool value) {
  if (!has_value_bool()) {
    clear_value();
    set_has_value_bool();
  }
  value_.value_bool_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Properties.Property.State.value_bool)
}

// sint64 value_sint64 = 524890380;
inline bool Components_Component_Properties_Property_State::has_value_sint64() const {
  return value_case() == kValueSint64;
}
inline void Components_Component_Properties_Property_State::set_has_value_sint64() {
  _oneof_case_[0] = kValueSint64;
}
inline void Components_Component_Properties_Property_State::clear_value_sint64() {
  if (has_value_sint64()) {
    value_.value_sint64_ = GOOGLE_LONGLONG(0);
    clear_has_value();
  }
}
inline ::google::protobuf::int64 Components_Component_Properties_Property_State::value_sint64() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Properties.Property.State.value_sint64)
  if (has_value_sint64()) {
    return value_.value_sint64_;
  }
  return GOOGLE_LONGLONG(0);
}
inline void Components_Component_Properties_Property_State::set_value_sint64(::google::protobuf::int64 value) {
  if (!has_value_sint64()) {
    clear_value();
    set_has_value_sint64();
  }
  value_.value_sint64_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Properties.Property.State.value_sint64)
}

// string value_string = 189491959;
inline bool Components_Component_Properties_Property_State::has_value_string() const {
  return value_case() == kValueString;
}
inline void Components_Component_Properties_Property_State::set_has_value_string() {
  _oneof_case_[0] = kValueString;
}
inline void Components_Component_Properties_Property_State::clear_value_string() {
  if (has_value_string()) {
    value_.value_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_value();
  }
}
inline const ::std::string& Components_Component_Properties_Property_State::value_string() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Properties.Property.State.value_string)
  if (has_value_string()) {
    return value_.value_string_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void Components_Component_Properties_Property_State::set_value_string(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Properties.Property.State.value_string)
  if (!has_value_string()) {
    clear_value();
    set_has_value_string();
    value_.value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.value_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Properties.Property.State.value_string)
}
#if LANG_CXX11
inline void Components_Component_Properties_Property_State::set_value_string(::std::string&& value) {
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Properties.Property.State.value_string)
  if (!has_value_string()) {
    clear_value();
    set_has_value_string();
    value_.value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.value_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_platform.Components.Component.Properties.Property.State.value_string)
}
#endif
inline void Components_Component_Properties_Property_State::set_value_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_value_string()) {
    clear_value();
    set_has_value_string();
    value_.value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.value_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_platform.Components.Component.Properties.Property.State.value_string)
}
inline void Components_Component_Properties_Property_State::set_value_string(const char* value, size_t size) {
  if (!has_value_string()) {
    clear_value();
    set_has_value_string();
    value_.value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  value_.value_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_platform.Components.Component.Properties.Property.State.value_string)
}
inline ::std::string* Components_Component_Properties_Property_State::mutable_value_string() {
  if (!has_value_string()) {
    clear_value();
    set_has_value_string();
    value_.value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Properties.Property.State.value_string)
  return value_.value_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Components_Component_Properties_Property_State::release_value_string() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Properties.Property.State.value_string)
  if (has_value_string()) {
    clear_has_value();
    return value_.value_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void Components_Component_Properties_Property_State::set_allocated_value_string(::std::string* value_string) {
  if (!has_value_string()) {
    value_.value_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_value();
  if (value_string != NULL) {
    set_has_value_string();
    value_.value_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        value_string);
  }
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Properties.Property.State.value_string)
}

// uint64 value_uint64 = 534672330;
inline bool Components_Component_Properties_Property_State::has_value_uint64() const {
  return value_case() == kValueUint64;
}
inline void Components_Component_Properties_Property_State::set_has_value_uint64() {
  _oneof_case_[0] = kValueUint64;
}
inline void Components_Component_Properties_Property_State::clear_value_uint64() {
  if (has_value_uint64()) {
    value_.value_uint64_ = GOOGLE_ULONGLONG(0);
    clear_has_value();
  }
}
inline ::google::protobuf::uint64 Components_Component_Properties_Property_State::value_uint64() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Properties.Property.State.value_uint64)
  if (has_value_uint64()) {
    return value_.value_uint64_;
  }
  return GOOGLE_ULONGLONG(0);
}
inline void Components_Component_Properties_Property_State::set_value_uint64(::google::protobuf::uint64 value) {
  if (!has_value_uint64()) {
    clear_value();
    set_has_value_uint64();
  }
  value_.value_uint64_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Properties.Property.State.value_uint64)
}

// .ywrapper.Decimal64Value value_decimal64value = 190240218;
inline bool Components_Component_Properties_Property_State::has_value_decimal64value() const {
  return value_case() == kValueDecimal64Value;
}
inline void Components_Component_Properties_Property_State::set_has_value_decimal64value() {
  _oneof_case_[0] = kValueDecimal64Value;
}
inline ::ywrapper::Decimal64Value* Components_Component_Properties_Property_State::release_value_decimal64value() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Properties.Property.State.value_decimal64value)
  if (has_value_decimal64value()) {
    clear_has_value();
      ::ywrapper::Decimal64Value* temp = value_.value_decimal64value_;
    value_.value_decimal64value_ = NULL;
    return temp;
  } else {
    return NULL;
  }
}
inline const ::ywrapper::Decimal64Value& Components_Component_Properties_Property_State::value_decimal64value() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Properties.Property.State.value_decimal64value)
  return has_value_decimal64value()
      ? *value_.value_decimal64value_
      : *reinterpret_cast< ::ywrapper::Decimal64Value*>(&::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Properties_Property_State::mutable_value_decimal64value() {
  if (!has_value_decimal64value()) {
    clear_value();
    set_has_value_decimal64value();
    value_.value_decimal64value_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Properties.Property.State.value_decimal64value)
  return value_.value_decimal64value_;
}

inline bool Components_Component_Properties_Property_State::has_value() const {
  return value_case() != VALUE_NOT_SET;
}
inline void Components_Component_Properties_Property_State::clear_has_value() {
  _oneof_case_[0] = VALUE_NOT_SET;
}
inline Components_Component_Properties_Property_State::ValueCase Components_Component_Properties_Property_State::value_case() const {
  return Components_Component_Properties_Property_State::ValueCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Components_Component_Properties_Property

// .openconfig.openconfig_platform.Components.Component.Properties.Property.Config config = 159293982 [(.yext.schemapath) = "/components/component/properties/property/config"];
inline bool Components_Component_Properties_Property::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Components_Component_Properties_Property::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Properties_Property_Config& Components_Component_Properties_Property::config() const {
  const ::openconfig::openconfig_platform::Components_Component_Properties_Property_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Properties.Property.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Properties_Property_Config*>(
      &::openconfig::openconfig_platform::_Components_Component_Properties_Property_Config_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Properties_Property_Config* Components_Component_Properties_Property::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Properties.Property.config)
  
  ::openconfig::openconfig_platform::Components_Component_Properties_Property_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Properties_Property_Config* Components_Component_Properties_Property::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Properties_Property_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Properties.Property.config)
  return config_;
}
inline void Components_Component_Properties_Property::set_allocated_config(::openconfig::openconfig_platform::Components_Component_Properties_Property_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Properties.Property.config)
}

// .openconfig.openconfig_platform.Components.Component.Properties.Property.State state = 19033227 [(.yext.schemapath) = "/components/component/properties/property/state"];
inline bool Components_Component_Properties_Property::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Components_Component_Properties_Property::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Properties_Property_State& Components_Component_Properties_Property::state() const {
  const ::openconfig::openconfig_platform::Components_Component_Properties_Property_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Properties.Property.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Properties_Property_State*>(
      &::openconfig::openconfig_platform::_Components_Component_Properties_Property_State_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Properties_Property_State* Components_Component_Properties_Property::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Properties.Property.state)
  
  ::openconfig::openconfig_platform::Components_Component_Properties_Property_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Properties_Property_State* Components_Component_Properties_Property::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Properties_Property_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Properties.Property.state)
  return state_;
}
inline void Components_Component_Properties_Property::set_allocated_state(::openconfig::openconfig_platform::Components_Component_Properties_Property_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Properties.Property.state)
}

// -------------------------------------------------------------------

// Components_Component_Properties_PropertyKey

// string name = 1 [(.yext.schemapath) = "/components/component/properties/property/name"];
inline void Components_Component_Properties_PropertyKey::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Components_Component_Properties_PropertyKey::name() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey.name)
  return name_.GetNoArena();
}
inline void Components_Component_Properties_PropertyKey::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey.name)
}
#if LANG_CXX11
inline void Components_Component_Properties_PropertyKey::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey.name)
}
#endif
inline void Components_Component_Properties_PropertyKey::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey.name)
}
inline void Components_Component_Properties_PropertyKey::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey.name)
}
inline ::std::string* Components_Component_Properties_PropertyKey::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Components_Component_Properties_PropertyKey::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Components_Component_Properties_PropertyKey::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey.name)
}

// .openconfig.openconfig_platform.Components.Component.Properties.Property property = 2;
inline bool Components_Component_Properties_PropertyKey::has_property() const {
  return this != internal_default_instance() && property_ != NULL;
}
inline void Components_Component_Properties_PropertyKey::clear_property() {
  if (GetArenaNoVirtual() == NULL && property_ != NULL) {
    delete property_;
  }
  property_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Properties_Property& Components_Component_Properties_PropertyKey::property() const {
  const ::openconfig::openconfig_platform::Components_Component_Properties_Property* p = property_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey.property)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Properties_Property*>(
      &::openconfig::openconfig_platform::_Components_Component_Properties_Property_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Properties_Property* Components_Component_Properties_PropertyKey::release_property() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey.property)
  
  ::openconfig::openconfig_platform::Components_Component_Properties_Property* temp = property_;
  property_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Properties_Property* Components_Component_Properties_PropertyKey::mutable_property() {
  
  if (property_ == NULL) {
    property_ = new ::openconfig::openconfig_platform::Components_Component_Properties_Property;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey.property)
  return property_;
}
inline void Components_Component_Properties_PropertyKey::set_allocated_property(::openconfig::openconfig_platform::Components_Component_Properties_Property* property) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete property_;
  }
  if (property) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      property = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, property, submessage_arena);
    }
    
  } else {
    
  }
  property_ = property;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey.property)
}

// -------------------------------------------------------------------

// Components_Component_Properties

// repeated .openconfig.openconfig_platform.Components.Component.Properties.PropertyKey property = 502076969 [(.yext.schemapath) = "/components/component/properties/property"];
inline int Components_Component_Properties::property_size() const {
  return property_.size();
}
inline void Components_Component_Properties::clear_property() {
  property_.Clear();
}
inline const ::openconfig::openconfig_platform::Components_Component_Properties_PropertyKey& Components_Component_Properties::property(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Properties.property)
  return property_.Get(index);
}
inline ::openconfig::openconfig_platform::Components_Component_Properties_PropertyKey* Components_Component_Properties::mutable_property(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Properties.property)
  return property_.Mutable(index);
}
inline ::openconfig::openconfig_platform::Components_Component_Properties_PropertyKey* Components_Component_Properties::add_property() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_platform.Components.Component.Properties.property)
  return property_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_platform::Components_Component_Properties_PropertyKey >*
Components_Component_Properties::mutable_property() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_platform.Components.Component.Properties.property)
  return &property_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_platform::Components_Component_Properties_PropertyKey >&
Components_Component_Properties::property() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_platform.Components.Component.Properties.property)
  return property_;
}

// -------------------------------------------------------------------

// Components_Component_State_Memory

// .ywrapper.UintValue available = 322322459 [(.yext.schemapath) = "/components/component/state/memory/available"];
inline bool Components_Component_State_Memory::has_available() const {
  return this != internal_default_instance() && available_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_State_Memory::available() const {
  const ::ywrapper::UintValue* p = available_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.Memory.available)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_State_Memory::release_available() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.State.Memory.available)
  
  ::ywrapper::UintValue* temp = available_;
  available_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_State_Memory::mutable_available() {
  
  if (available_ == NULL) {
    available_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.State.Memory.available)
  return available_;
}
inline void Components_Component_State_Memory::set_allocated_available(::ywrapper::UintValue* available) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(available_);
  }
  if (available) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      available = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, available, submessage_arena);
    }
    
  } else {
    
  }
  available_ = available;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.State.Memory.available)
}

// .ywrapper.UintValue utilized = 235118644 [(.yext.schemapath) = "/components/component/state/memory/utilized"];
inline bool Components_Component_State_Memory::has_utilized() const {
  return this != internal_default_instance() && utilized_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_State_Memory::utilized() const {
  const ::ywrapper::UintValue* p = utilized_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.Memory.utilized)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_State_Memory::release_utilized() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.State.Memory.utilized)
  
  ::ywrapper::UintValue* temp = utilized_;
  utilized_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_State_Memory::mutable_utilized() {
  
  if (utilized_ == NULL) {
    utilized_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.State.Memory.utilized)
  return utilized_;
}
inline void Components_Component_State_Memory::set_allocated_utilized(::ywrapper::UintValue* utilized) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(utilized_);
  }
  if (utilized) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      utilized = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, utilized, submessage_arena);
    }
    
  } else {
    
  }
  utilized_ = utilized;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.State.Memory.utilized)
}

// -------------------------------------------------------------------

// Components_Component_State_Temperature

// .openconfig.enums.OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY alarm_severity = 296397186 [(.yext.schemapath) = "/components/component/state/temperature/alarm-severity"];
inline void Components_Component_State_Temperature::clear_alarm_severity() {
  alarm_severity_ = 0;
}
inline ::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY Components_Component_State_Temperature::alarm_severity() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.Temperature.alarm_severity)
  return static_cast< ::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY >(alarm_severity_);
}
inline void Components_Component_State_Temperature::set_alarm_severity(::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY value) {
  
  alarm_severity_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.State.Temperature.alarm_severity)
}

// .ywrapper.BoolValue alarm_status = 176894761 [(.yext.schemapath) = "/components/component/state/temperature/alarm-status"];
inline bool Components_Component_State_Temperature::has_alarm_status() const {
  return this != internal_default_instance() && alarm_status_ != NULL;
}
inline const ::ywrapper::BoolValue& Components_Component_State_Temperature::alarm_status() const {
  const ::ywrapper::BoolValue* p = alarm_status_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.Temperature.alarm_status)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Components_Component_State_Temperature::release_alarm_status() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.State.Temperature.alarm_status)
  
  ::ywrapper::BoolValue* temp = alarm_status_;
  alarm_status_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Components_Component_State_Temperature::mutable_alarm_status() {
  
  if (alarm_status_ == NULL) {
    alarm_status_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.State.Temperature.alarm_status)
  return alarm_status_;
}
inline void Components_Component_State_Temperature::set_allocated_alarm_status(::ywrapper::BoolValue* alarm_status) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(alarm_status_);
  }
  if (alarm_status) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      alarm_status = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, alarm_status, submessage_arena);
    }
    
  } else {
    
  }
  alarm_status_ = alarm_status;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.State.Temperature.alarm_status)
}

// .ywrapper.UintValue alarm_threshold = 231489284 [(.yext.schemapath) = "/components/component/state/temperature/alarm-threshold"];
inline bool Components_Component_State_Temperature::has_alarm_threshold() const {
  return this != internal_default_instance() && alarm_threshold_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_State_Temperature::alarm_threshold() const {
  const ::ywrapper::UintValue* p = alarm_threshold_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.Temperature.alarm_threshold)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_State_Temperature::release_alarm_threshold() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.State.Temperature.alarm_threshold)
  
  ::ywrapper::UintValue* temp = alarm_threshold_;
  alarm_threshold_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_State_Temperature::mutable_alarm_threshold() {
  
  if (alarm_threshold_ == NULL) {
    alarm_threshold_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.State.Temperature.alarm_threshold)
  return alarm_threshold_;
}
inline void Components_Component_State_Temperature::set_allocated_alarm_threshold(::ywrapper::UintValue* alarm_threshold) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(alarm_threshold_);
  }
  if (alarm_threshold) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      alarm_threshold = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, alarm_threshold, submessage_arena);
    }
    
  } else {
    
  }
  alarm_threshold_ = alarm_threshold;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.State.Temperature.alarm_threshold)
}

// .ywrapper.Decimal64Value avg = 100651349 [(.yext.schemapath) = "/components/component/state/temperature/avg"];
inline bool Components_Component_State_Temperature::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_State_Temperature::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.Temperature.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_State_Temperature::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.State.Temperature.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_State_Temperature::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.State.Temperature.avg)
  return avg_;
}
inline void Components_Component_State_Temperature::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.State.Temperature.avg)
}

// .ywrapper.Decimal64Value instant = 206000082 [(.yext.schemapath) = "/components/component/state/temperature/instant"];
inline bool Components_Component_State_Temperature::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_State_Temperature::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.Temperature.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_State_Temperature::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.State.Temperature.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_State_Temperature::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.State.Temperature.instant)
  return instant_;
}
inline void Components_Component_State_Temperature::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.State.Temperature.instant)
}

// .ywrapper.UintValue interval = 407404980 [(.yext.schemapath) = "/components/component/state/temperature/interval"];
inline bool Components_Component_State_Temperature::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_State_Temperature::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.Temperature.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_State_Temperature::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.State.Temperature.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_State_Temperature::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.State.Temperature.interval)
  return interval_;
}
inline void Components_Component_State_Temperature::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.State.Temperature.interval)
}

// .ywrapper.Decimal64Value max = 421397591 [(.yext.schemapath) = "/components/component/state/temperature/max"];
inline bool Components_Component_State_Temperature::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_State_Temperature::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.Temperature.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_State_Temperature::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.State.Temperature.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_State_Temperature::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.State.Temperature.max)
  return max_;
}
inline void Components_Component_State_Temperature::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.State.Temperature.max)
}

// .ywrapper.Decimal64Value min = 18747561 [(.yext.schemapath) = "/components/component/state/temperature/min"];
inline bool Components_Component_State_Temperature::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_State_Temperature::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.Temperature.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_State_Temperature::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.State.Temperature.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_State_Temperature::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.State.Temperature.min)
  return min_;
}
inline void Components_Component_State_Temperature::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.State.Temperature.min)
}

// -------------------------------------------------------------------

// Components_Component_State

// .ywrapper.UintValue allocated_power = 382835825 [(.yext.schemapath) = "/components/component/state/allocated-power"];
inline bool Components_Component_State::has_allocated_power() const {
  return this != internal_default_instance() && allocated_power_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_State::allocated_power() const {
  const ::ywrapper::UintValue* p = allocated_power_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.allocated_power)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_State::release_allocated_power() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.State.allocated_power)
  
  ::ywrapper::UintValue* temp = allocated_power_;
  allocated_power_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_State::mutable_allocated_power() {
  
  if (allocated_power_ == NULL) {
    allocated_power_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.State.allocated_power)
  return allocated_power_;
}
inline void Components_Component_State::set_allocated_allocated_power(::ywrapper::UintValue* allocated_power) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(allocated_power_);
  }
  if (allocated_power) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      allocated_power = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, allocated_power, submessage_arena);
    }
    
  } else {
    
  }
  allocated_power_ = allocated_power;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.State.allocated_power)
}

// .ywrapper.StringValue description = 167549616 [(.yext.schemapath) = "/components/component/state/description"];
inline bool Components_Component_State::has_description() const {
  return this != internal_default_instance() && description_ != NULL;
}
inline const ::ywrapper::StringValue& Components_Component_State::description() const {
  const ::ywrapper::StringValue* p = description_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.description)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Components_Component_State::release_description() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.State.description)
  
  ::ywrapper::StringValue* temp = description_;
  description_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Components_Component_State::mutable_description() {
  
  if (description_ == NULL) {
    description_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.State.description)
  return description_;
}
inline void Components_Component_State::set_allocated_description(::ywrapper::StringValue* description) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(description_);
  }
  if (description) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      description = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, description, submessage_arena);
    }
    
  } else {
    
  }
  description_ = description;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.State.description)
}

// .ywrapper.UintValue entity_id = 53940879 [(.yext.schemapath) = "/components/component/state/entity-id"];
inline bool Components_Component_State::has_entity_id() const {
  return this != internal_default_instance() && entity_id_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_State::entity_id() const {
  const ::ywrapper::UintValue* p = entity_id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.entity_id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_State::release_entity_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.State.entity_id)
  
  ::ywrapper::UintValue* temp = entity_id_;
  entity_id_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_State::mutable_entity_id() {
  
  if (entity_id_ == NULL) {
    entity_id_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.State.entity_id)
  return entity_id_;
}
inline void Components_Component_State::set_allocated_entity_id(::ywrapper::UintValue* entity_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(entity_id_);
  }
  if (entity_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      entity_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, entity_id, submessage_arena);
    }
    
  } else {
    
  }
  entity_id_ = entity_id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.State.entity_id)
}

// .ywrapper.BoolValue equipment_failure = 471038183 [(.yext.schemapath) = "/components/component/state/equipment-failure"];
inline bool Components_Component_State::has_equipment_failure() const {
  return this != internal_default_instance() && equipment_failure_ != NULL;
}
inline const ::ywrapper::BoolValue& Components_Component_State::equipment_failure() const {
  const ::ywrapper::BoolValue* p = equipment_failure_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.equipment_failure)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Components_Component_State::release_equipment_failure() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.State.equipment_failure)
  
  ::ywrapper::BoolValue* temp = equipment_failure_;
  equipment_failure_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Components_Component_State::mutable_equipment_failure() {
  
  if (equipment_failure_ == NULL) {
    equipment_failure_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.State.equipment_failure)
  return equipment_failure_;
}
inline void Components_Component_State::set_allocated_equipment_failure(::ywrapper::BoolValue* equipment_failure) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(equipment_failure_);
  }
  if (equipment_failure) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      equipment_failure = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, equipment_failure, submessage_arena);
    }
    
  } else {
    
  }
  equipment_failure_ = equipment_failure;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.State.equipment_failure)
}

// .ywrapper.BoolValue equipment_mismatch = 311608903 [(.yext.schemapath) = "/components/component/state/equipment-mismatch"];
inline bool Components_Component_State::has_equipment_mismatch() const {
  return this != internal_default_instance() && equipment_mismatch_ != NULL;
}
inline const ::ywrapper::BoolValue& Components_Component_State::equipment_mismatch() const {
  const ::ywrapper::BoolValue* p = equipment_mismatch_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.equipment_mismatch)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Components_Component_State::release_equipment_mismatch() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.State.equipment_mismatch)
  
  ::ywrapper::BoolValue* temp = equipment_mismatch_;
  equipment_mismatch_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Components_Component_State::mutable_equipment_mismatch() {
  
  if (equipment_mismatch_ == NULL) {
    equipment_mismatch_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.State.equipment_mismatch)
  return equipment_mismatch_;
}
inline void Components_Component_State::set_allocated_equipment_mismatch(::ywrapper::BoolValue* equipment_mismatch) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(equipment_mismatch_);
  }
  if (equipment_mismatch) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      equipment_mismatch = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, equipment_mismatch, submessage_arena);
    }
    
  } else {
    
  }
  equipment_mismatch_ = equipment_mismatch;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.State.equipment_mismatch)
}

// .ywrapper.StringValue firmware_version = 244667518 [(.yext.schemapath) = "/components/component/state/firmware-version"];
inline bool Components_Component_State::has_firmware_version() const {
  return this != internal_default_instance() && firmware_version_ != NULL;
}
inline const ::ywrapper::StringValue& Components_Component_State::firmware_version() const {
  const ::ywrapper::StringValue* p = firmware_version_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.firmware_version)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Components_Component_State::release_firmware_version() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.State.firmware_version)
  
  ::ywrapper::StringValue* temp = firmware_version_;
  firmware_version_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Components_Component_State::mutable_firmware_version() {
  
  if (firmware_version_ == NULL) {
    firmware_version_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.State.firmware_version)
  return firmware_version_;
}
inline void Components_Component_State::set_allocated_firmware_version(::ywrapper::StringValue* firmware_version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(firmware_version_);
  }
  if (firmware_version) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      firmware_version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, firmware_version, submessage_arena);
    }
    
  } else {
    
  }
  firmware_version_ = firmware_version;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.State.firmware_version)
}

// .ywrapper.StringValue hardware_version = 49616205 [(.yext.schemapath) = "/components/component/state/hardware-version"];
inline bool Components_Component_State::has_hardware_version() const {
  return this != internal_default_instance() && hardware_version_ != NULL;
}
inline const ::ywrapper::StringValue& Components_Component_State::hardware_version() const {
  const ::ywrapper::StringValue* p = hardware_version_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.hardware_version)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Components_Component_State::release_hardware_version() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.State.hardware_version)
  
  ::ywrapper::StringValue* temp = hardware_version_;
  hardware_version_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Components_Component_State::mutable_hardware_version() {
  
  if (hardware_version_ == NULL) {
    hardware_version_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.State.hardware_version)
  return hardware_version_;
}
inline void Components_Component_State::set_allocated_hardware_version(::ywrapper::StringValue* hardware_version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hardware_version_);
  }
  if (hardware_version) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hardware_version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hardware_version, submessage_arena);
    }
    
  } else {
    
  }
  hardware_version_ = hardware_version;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.State.hardware_version)
}

// .ywrapper.StringValue id = 246882465 [(.yext.schemapath) = "/components/component/state/id"];
inline bool Components_Component_State::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::ywrapper::StringValue& Components_Component_State::id() const {
  const ::ywrapper::StringValue* p = id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Components_Component_State::release_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.State.id)
  
  ::ywrapper::StringValue* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Components_Component_State::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.State.id)
  return id_;
}
inline void Components_Component_State::set_allocated_id(::ywrapper::StringValue* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.State.id)
}

// .openconfig.openconfig_platform.Components.Component.State.Memory memory = 443182963 [(.yext.schemapath) = "/components/component/state/memory"];
inline bool Components_Component_State::has_memory() const {
  return this != internal_default_instance() && memory_ != NULL;
}
inline void Components_Component_State::clear_memory() {
  if (GetArenaNoVirtual() == NULL && memory_ != NULL) {
    delete memory_;
  }
  memory_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_State_Memory& Components_Component_State::memory() const {
  const ::openconfig::openconfig_platform::Components_Component_State_Memory* p = memory_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.memory)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_State_Memory*>(
      &::openconfig::openconfig_platform::_Components_Component_State_Memory_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_State_Memory* Components_Component_State::release_memory() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.State.memory)
  
  ::openconfig::openconfig_platform::Components_Component_State_Memory* temp = memory_;
  memory_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_State_Memory* Components_Component_State::mutable_memory() {
  
  if (memory_ == NULL) {
    memory_ = new ::openconfig::openconfig_platform::Components_Component_State_Memory;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.State.memory)
  return memory_;
}
inline void Components_Component_State::set_allocated_memory(::openconfig::openconfig_platform::Components_Component_State_Memory* memory) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete memory_;
  }
  if (memory) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      memory = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, memory, submessage_arena);
    }
    
  } else {
    
  }
  memory_ = memory;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.State.memory)
}

// .ywrapper.StringValue mfg_name = 80033814 [(.yext.schemapath) = "/components/component/state/mfg-name"];
inline bool Components_Component_State::has_mfg_name() const {
  return this != internal_default_instance() && mfg_name_ != NULL;
}
inline const ::ywrapper::StringValue& Components_Component_State::mfg_name() const {
  const ::ywrapper::StringValue* p = mfg_name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.mfg_name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Components_Component_State::release_mfg_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.State.mfg_name)
  
  ::ywrapper::StringValue* temp = mfg_name_;
  mfg_name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Components_Component_State::mutable_mfg_name() {
  
  if (mfg_name_ == NULL) {
    mfg_name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.State.mfg_name)
  return mfg_name_;
}
inline void Components_Component_State::set_allocated_mfg_name(::ywrapper::StringValue* mfg_name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mfg_name_);
  }
  if (mfg_name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mfg_name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mfg_name, submessage_arena);
    }
    
  } else {
    
  }
  mfg_name_ = mfg_name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.State.mfg_name)
}

// .ywrapper.StringValue name = 111678303 [(.yext.schemapath) = "/components/component/state/name"];
inline bool Components_Component_State::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& Components_Component_State::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Components_Component_State::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.State.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Components_Component_State::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.State.name)
  return name_;
}
inline void Components_Component_State::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.State.name)
}

// .openconfig.enums.OpenconfigPlatformTypesCOMPONENTOPERSTATUS oper_status = 378023501 [(.yext.schemapath) = "/components/component/state/oper-status"];
inline void Components_Component_State::clear_oper_status() {
  oper_status_ = 0;
}
inline ::openconfig::enums::OpenconfigPlatformTypesCOMPONENTOPERSTATUS Components_Component_State::oper_status() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.oper_status)
  return static_cast< ::openconfig::enums::OpenconfigPlatformTypesCOMPONENTOPERSTATUS >(oper_status_);
}
inline void Components_Component_State::set_oper_status(::openconfig::enums::OpenconfigPlatformTypesCOMPONENTOPERSTATUS value) {
  
  oper_status_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.State.oper_status)
}

// .ywrapper.StringValue part_no = 173082367 [(.yext.schemapath) = "/components/component/state/part-no"];
inline bool Components_Component_State::has_part_no() const {
  return this != internal_default_instance() && part_no_ != NULL;
}
inline const ::ywrapper::StringValue& Components_Component_State::part_no() const {
  const ::ywrapper::StringValue* p = part_no_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.part_no)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Components_Component_State::release_part_no() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.State.part_no)
  
  ::ywrapper::StringValue* temp = part_no_;
  part_no_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Components_Component_State::mutable_part_no() {
  
  if (part_no_ == NULL) {
    part_no_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.State.part_no)
  return part_no_;
}
inline void Components_Component_State::set_allocated_part_no(::ywrapper::StringValue* part_no) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(part_no_);
  }
  if (part_no) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      part_no = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, part_no, submessage_arena);
    }
    
  } else {
    
  }
  part_no_ = part_no;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.State.part_no)
}

// .ywrapper.StringValue serial_no = 490029750 [(.yext.schemapath) = "/components/component/state/serial-no"];
inline bool Components_Component_State::has_serial_no() const {
  return this != internal_default_instance() && serial_no_ != NULL;
}
inline const ::ywrapper::StringValue& Components_Component_State::serial_no() const {
  const ::ywrapper::StringValue* p = serial_no_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.serial_no)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Components_Component_State::release_serial_no() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.State.serial_no)
  
  ::ywrapper::StringValue* temp = serial_no_;
  serial_no_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Components_Component_State::mutable_serial_no() {
  
  if (serial_no_ == NULL) {
    serial_no_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.State.serial_no)
  return serial_no_;
}
inline void Components_Component_State::set_allocated_serial_no(::ywrapper::StringValue* serial_no) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(serial_no_);
  }
  if (serial_no) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      serial_no = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, serial_no, submessage_arena);
    }
    
  } else {
    
  }
  serial_no_ = serial_no;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.State.serial_no)
}

// .ywrapper.StringValue software_version = 220526526 [(.yext.schemapath) = "/components/component/state/software-version"];
inline bool Components_Component_State::has_software_version() const {
  return this != internal_default_instance() && software_version_ != NULL;
}
inline const ::ywrapper::StringValue& Components_Component_State::software_version() const {
  const ::ywrapper::StringValue* p = software_version_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.software_version)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Components_Component_State::release_software_version() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.State.software_version)
  
  ::ywrapper::StringValue* temp = software_version_;
  software_version_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Components_Component_State::mutable_software_version() {
  
  if (software_version_ == NULL) {
    software_version_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.State.software_version)
  return software_version_;
}
inline void Components_Component_State::set_allocated_software_version(::ywrapper::StringValue* software_version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(software_version_);
  }
  if (software_version) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      software_version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, software_version, submessage_arena);
    }
    
  } else {
    
  }
  software_version_ = software_version;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.State.software_version)
}

// .openconfig.openconfig_platform.Components.Component.State.Temperature temperature = 169040172 [(.yext.schemapath) = "/components/component/state/temperature"];
inline bool Components_Component_State::has_temperature() const {
  return this != internal_default_instance() && temperature_ != NULL;
}
inline void Components_Component_State::clear_temperature() {
  if (GetArenaNoVirtual() == NULL && temperature_ != NULL) {
    delete temperature_;
  }
  temperature_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_State_Temperature& Components_Component_State::temperature() const {
  const ::openconfig::openconfig_platform::Components_Component_State_Temperature* p = temperature_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.temperature)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_State_Temperature*>(
      &::openconfig::openconfig_platform::_Components_Component_State_Temperature_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_State_Temperature* Components_Component_State::release_temperature() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.State.temperature)
  
  ::openconfig::openconfig_platform::Components_Component_State_Temperature* temp = temperature_;
  temperature_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_State_Temperature* Components_Component_State::mutable_temperature() {
  
  if (temperature_ == NULL) {
    temperature_ = new ::openconfig::openconfig_platform::Components_Component_State_Temperature;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.State.temperature)
  return temperature_;
}
inline void Components_Component_State::set_allocated_temperature(::openconfig::openconfig_platform::Components_Component_State_Temperature* temperature) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete temperature_;
  }
  if (temperature) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      temperature = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, temperature, submessage_arena);
    }
    
  } else {
    
  }
  temperature_ = temperature;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.State.temperature)
}

// .openconfig.enums.OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT type_openconfigplatformtypesopenconfighardwarecomponent = 423705132;
inline bool Components_Component_State::has_type_openconfigplatformtypesopenconfighardwarecomponent() const {
  return type_case() == kTypeOpenconfigplatformtypesopenconfighardwarecomponent;
}
inline void Components_Component_State::set_has_type_openconfigplatformtypesopenconfighardwarecomponent() {
  _oneof_case_[0] = kTypeOpenconfigplatformtypesopenconfighardwarecomponent;
}
inline void Components_Component_State::clear_type_openconfigplatformtypesopenconfighardwarecomponent() {
  if (has_type_openconfigplatformtypesopenconfighardwarecomponent()) {
    type_.type_openconfigplatformtypesopenconfighardwarecomponent_ = 0;
    clear_has_type();
  }
}
inline ::openconfig::enums::OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT Components_Component_State::type_openconfigplatformtypesopenconfighardwarecomponent() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.type_openconfigplatformtypesopenconfighardwarecomponent)
  if (has_type_openconfigplatformtypesopenconfighardwarecomponent()) {
    return static_cast< ::openconfig::enums::OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT >(type_.type_openconfigplatformtypesopenconfighardwarecomponent_);
  }
  return static_cast< ::openconfig::enums::OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT >(0);
}
inline void Components_Component_State::set_type_openconfigplatformtypesopenconfighardwarecomponent(::openconfig::enums::OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT value) {
  if (!has_type_openconfigplatformtypesopenconfighardwarecomponent()) {
    clear_type();
    set_has_type_openconfigplatformtypesopenconfighardwarecomponent();
  }
  type_.type_openconfigplatformtypesopenconfighardwarecomponent_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.State.type_openconfigplatformtypesopenconfighardwarecomponent)
}

// .openconfig.enums.OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT type_openconfigplatformtypesopenconfigsoftwarecomponent = 366278741;
inline bool Components_Component_State::has_type_openconfigplatformtypesopenconfigsoftwarecomponent() const {
  return type_case() == kTypeOpenconfigplatformtypesopenconfigsoftwarecomponent;
}
inline void Components_Component_State::set_has_type_openconfigplatformtypesopenconfigsoftwarecomponent() {
  _oneof_case_[0] = kTypeOpenconfigplatformtypesopenconfigsoftwarecomponent;
}
inline void Components_Component_State::clear_type_openconfigplatformtypesopenconfigsoftwarecomponent() {
  if (has_type_openconfigplatformtypesopenconfigsoftwarecomponent()) {
    type_.type_openconfigplatformtypesopenconfigsoftwarecomponent_ = 0;
    clear_has_type();
  }
}
inline ::openconfig::enums::OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT Components_Component_State::type_openconfigplatformtypesopenconfigsoftwarecomponent() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.type_openconfigplatformtypesopenconfigsoftwarecomponent)
  if (has_type_openconfigplatformtypesopenconfigsoftwarecomponent()) {
    return static_cast< ::openconfig::enums::OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT >(type_.type_openconfigplatformtypesopenconfigsoftwarecomponent_);
  }
  return static_cast< ::openconfig::enums::OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT >(0);
}
inline void Components_Component_State::set_type_openconfigplatformtypesopenconfigsoftwarecomponent(::openconfig::enums::OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT value) {
  if (!has_type_openconfigplatformtypesopenconfigsoftwarecomponent()) {
    clear_type();
    set_has_type_openconfigplatformtypesopenconfigsoftwarecomponent();
  }
  type_.type_openconfigplatformtypesopenconfigsoftwarecomponent_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.State.type_openconfigplatformtypesopenconfigsoftwarecomponent)
}

// .ywrapper.UintValue used_power = 259754309 [(.yext.schemapath) = "/components/component/state/used-power"];
inline bool Components_Component_State::has_used_power() const {
  return this != internal_default_instance() && used_power_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_State::used_power() const {
  const ::ywrapper::UintValue* p = used_power_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.State.used_power)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_State::release_used_power() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.State.used_power)
  
  ::ywrapper::UintValue* temp = used_power_;
  used_power_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_State::mutable_used_power() {
  
  if (used_power_ == NULL) {
    used_power_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.State.used_power)
  return used_power_;
}
inline void Components_Component_State::set_allocated_used_power(::ywrapper::UintValue* used_power) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(used_power_);
  }
  if (used_power) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      used_power = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, used_power, submessage_arena);
    }
    
  } else {
    
  }
  used_power_ = used_power;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.State.used_power)
}

inline bool Components_Component_State::has_type() const {
  return type_case() != TYPE_NOT_SET;
}
inline void Components_Component_State::clear_has_type() {
  _oneof_case_[0] = TYPE_NOT_SET;
}
inline Components_Component_State::TypeCase Components_Component_State::type_case() const {
  return Components_Component_State::TypeCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// Components_Component_Storage_Config

// -------------------------------------------------------------------

// Components_Component_Storage_State

// -------------------------------------------------------------------

// Components_Component_Storage

// .openconfig.openconfig_platform.Components.Component.Storage.Config config = 522152076 [(.yext.schemapath) = "/components/component/storage/config"];
inline bool Components_Component_Storage::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Components_Component_Storage::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Storage_Config& Components_Component_Storage::config() const {
  const ::openconfig::openconfig_platform::Components_Component_Storage_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Storage.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Storage_Config*>(
      &::openconfig::openconfig_platform::_Components_Component_Storage_Config_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Storage_Config* Components_Component_Storage::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Storage.config)
  
  ::openconfig::openconfig_platform::Components_Component_Storage_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Storage_Config* Components_Component_Storage::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Storage_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Storage.config)
  return config_;
}
inline void Components_Component_Storage::set_allocated_config(::openconfig::openconfig_platform::Components_Component_Storage_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Storage.config)
}

// .openconfig.openconfig_platform.Components.Component.Storage.State state = 68412165 [(.yext.schemapath) = "/components/component/storage/state"];
inline bool Components_Component_Storage::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Components_Component_Storage::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Storage_State& Components_Component_Storage::state() const {
  const ::openconfig::openconfig_platform::Components_Component_Storage_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Storage.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Storage_State*>(
      &::openconfig::openconfig_platform::_Components_Component_Storage_State_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Storage_State* Components_Component_Storage::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Storage.state)
  
  ::openconfig::openconfig_platform::Components_Component_Storage_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Storage_State* Components_Component_Storage::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Storage_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Storage.state)
  return state_;
}
inline void Components_Component_Storage::set_allocated_state(::openconfig::openconfig_platform::Components_Component_Storage_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Storage.state)
}

// -------------------------------------------------------------------

// Components_Component_Subcomponents_Subcomponent_Config

// .ywrapper.StringValue name = 137591847 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/config/name"];
inline bool Components_Component_Subcomponents_Subcomponent_Config::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& Components_Component_Subcomponents_Subcomponent_Config::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Components_Component_Subcomponents_Subcomponent_Config::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Components_Component_Subcomponents_Subcomponent_Config::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config.name)
  return name_;
}
inline void Components_Component_Subcomponents_Subcomponent_Config::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config.name)
}

// -------------------------------------------------------------------

// Components_Component_Subcomponents_Subcomponent_State

// .ywrapper.StringValue name = 123244986 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/state/name"];
inline bool Components_Component_Subcomponents_Subcomponent_State::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& Components_Component_Subcomponents_Subcomponent_State::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Components_Component_Subcomponents_Subcomponent_State::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Components_Component_Subcomponents_Subcomponent_State::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State.name)
  return name_;
}
inline void Components_Component_Subcomponents_Subcomponent_State::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State.name)
}

// -------------------------------------------------------------------

// Components_Component_Subcomponents_Subcomponent

// .openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config config = 126822239 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/config"];
inline bool Components_Component_Subcomponents_Subcomponent::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Components_Component_Subcomponents_Subcomponent::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_Config& Components_Component_Subcomponents_Subcomponent::config() const {
  const ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_Config*>(
      &::openconfig::openconfig_platform::_Components_Component_Subcomponents_Subcomponent_Config_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_Config* Components_Component_Subcomponents_Subcomponent::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.config)
  
  ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_Config* Components_Component_Subcomponents_Subcomponent::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.config)
  return config_;
}
inline void Components_Component_Subcomponents_Subcomponent::set_allocated_config(::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.config)
}

// .openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State state = 293778704 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/state"];
inline bool Components_Component_Subcomponents_Subcomponent::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Components_Component_Subcomponents_Subcomponent::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_State& Components_Component_Subcomponents_Subcomponent::state() const {
  const ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_State*>(
      &::openconfig::openconfig_platform::_Components_Component_Subcomponents_Subcomponent_State_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_State* Components_Component_Subcomponents_Subcomponent::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.state)
  
  ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_State* Components_Component_Subcomponents_Subcomponent::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.state)
  return state_;
}
inline void Components_Component_Subcomponents_Subcomponent::set_allocated_state(::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.state)
}

// -------------------------------------------------------------------

// Components_Component_Subcomponents_SubcomponentKey

// string name = 1 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/name"];
inline void Components_Component_Subcomponents_SubcomponentKey::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Components_Component_Subcomponents_SubcomponentKey::name() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey.name)
  return name_.GetNoArena();
}
inline void Components_Component_Subcomponents_SubcomponentKey::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey.name)
}
#if LANG_CXX11
inline void Components_Component_Subcomponents_SubcomponentKey::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey.name)
}
#endif
inline void Components_Component_Subcomponents_SubcomponentKey::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey.name)
}
inline void Components_Component_Subcomponents_SubcomponentKey::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey.name)
}
inline ::std::string* Components_Component_Subcomponents_SubcomponentKey::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Components_Component_Subcomponents_SubcomponentKey::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Components_Component_Subcomponents_SubcomponentKey::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey.name)
}

// .openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent subcomponent = 2;
inline bool Components_Component_Subcomponents_SubcomponentKey::has_subcomponent() const {
  return this != internal_default_instance() && subcomponent_ != NULL;
}
inline void Components_Component_Subcomponents_SubcomponentKey::clear_subcomponent() {
  if (GetArenaNoVirtual() == NULL && subcomponent_ != NULL) {
    delete subcomponent_;
  }
  subcomponent_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent& Components_Component_Subcomponents_SubcomponentKey::subcomponent() const {
  const ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent* p = subcomponent_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey.subcomponent)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent*>(
      &::openconfig::openconfig_platform::_Components_Component_Subcomponents_Subcomponent_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent* Components_Component_Subcomponents_SubcomponentKey::release_subcomponent() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey.subcomponent)
  
  ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent* temp = subcomponent_;
  subcomponent_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent* Components_Component_Subcomponents_SubcomponentKey::mutable_subcomponent() {
  
  if (subcomponent_ == NULL) {
    subcomponent_ = new ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey.subcomponent)
  return subcomponent_;
}
inline void Components_Component_Subcomponents_SubcomponentKey::set_allocated_subcomponent(::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent* subcomponent) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete subcomponent_;
  }
  if (subcomponent) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      subcomponent = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, subcomponent, submessage_arena);
    }
    
  } else {
    
  }
  subcomponent_ = subcomponent;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey.subcomponent)
}

// -------------------------------------------------------------------

// Components_Component_Subcomponents

// repeated .openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey subcomponent = 282821422 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent"];
inline int Components_Component_Subcomponents::subcomponent_size() const {
  return subcomponent_.size();
}
inline void Components_Component_Subcomponents::clear_subcomponent() {
  subcomponent_.Clear();
}
inline const ::openconfig::openconfig_platform::Components_Component_Subcomponents_SubcomponentKey& Components_Component_Subcomponents::subcomponent(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Subcomponents.subcomponent)
  return subcomponent_.Get(index);
}
inline ::openconfig::openconfig_platform::Components_Component_Subcomponents_SubcomponentKey* Components_Component_Subcomponents::mutable_subcomponent(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Subcomponents.subcomponent)
  return subcomponent_.Mutable(index);
}
inline ::openconfig::openconfig_platform::Components_Component_Subcomponents_SubcomponentKey* Components_Component_Subcomponents::add_subcomponent() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_platform.Components.Component.Subcomponents.subcomponent)
  return subcomponent_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_platform::Components_Component_Subcomponents_SubcomponentKey >*
Components_Component_Subcomponents::mutable_subcomponent() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_platform.Components.Component.Subcomponents.subcomponent)
  return &subcomponent_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_platform::Components_Component_Subcomponents_SubcomponentKey >&
Components_Component_Subcomponents::subcomponent() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_platform.Components.Component.Subcomponents.subcomponent)
  return subcomponent_;
}

// -------------------------------------------------------------------

// Components_Component_Transceiver_Config

// .ywrapper.BoolValue enabled = 202927581 [(.yext.schemapath) = "/components/component/transceiver/config/enabled"];
inline bool Components_Component_Transceiver_Config::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
inline const ::ywrapper::BoolValue& Components_Component_Transceiver_Config::enabled() const {
  const ::ywrapper::BoolValue* p = enabled_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.Config.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Components_Component_Transceiver_Config::release_enabled() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.Config.enabled)
  
  ::ywrapper::BoolValue* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Components_Component_Transceiver_Config::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.Config.enabled)
  return enabled_;
}
inline void Components_Component_Transceiver_Config::set_allocated_enabled(::ywrapper::BoolValue* enabled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enabled_);
  }
  if (enabled) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enabled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enabled, submessage_arena);
    }
    
  } else {
    
  }
  enabled_ = enabled;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.Config.enabled)
}

// .openconfig.enums.OpenconfigTransportTypesETHERNETPMDTYPE ethernet_pmd_preconf = 338246677 [(.yext.schemapath) = "/components/component/transceiver/config/ethernet-pmd-preconf"];
inline void Components_Component_Transceiver_Config::clear_ethernet_pmd_preconf() {
  ethernet_pmd_preconf_ = 0;
}
inline ::openconfig::enums::OpenconfigTransportTypesETHERNETPMDTYPE Components_Component_Transceiver_Config::ethernet_pmd_preconf() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.Config.ethernet_pmd_preconf)
  return static_cast< ::openconfig::enums::OpenconfigTransportTypesETHERNETPMDTYPE >(ethernet_pmd_preconf_);
}
inline void Components_Component_Transceiver_Config::set_ethernet_pmd_preconf(::openconfig::enums::OpenconfigTransportTypesETHERNETPMDTYPE value) {
  
  ethernet_pmd_preconf_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Transceiver.Config.ethernet_pmd_preconf)
}

// .openconfig.enums.OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE form_factor_preconf = 471604670 [(.yext.schemapath) = "/components/component/transceiver/config/form-factor-preconf"];
inline void Components_Component_Transceiver_Config::clear_form_factor_preconf() {
  form_factor_preconf_ = 0;
}
inline ::openconfig::enums::OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE Components_Component_Transceiver_Config::form_factor_preconf() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.Config.form_factor_preconf)
  return static_cast< ::openconfig::enums::OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE >(form_factor_preconf_);
}
inline void Components_Component_Transceiver_Config::set_form_factor_preconf(::openconfig::enums::OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE value) {
  
  form_factor_preconf_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Transceiver.Config.form_factor_preconf)
}

// -------------------------------------------------------------------

// Components_Component_Transceiver_PhysicalChannels_Channel_Config

// .ywrapper.StringValue description = 314562795 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config/description"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel_Config::has_description() const {
  return this != internal_default_instance() && description_ != NULL;
}
inline const ::ywrapper::StringValue& Components_Component_Transceiver_PhysicalChannels_Channel_Config::description() const {
  const ::ywrapper::StringValue* p = description_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config.description)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Components_Component_Transceiver_PhysicalChannels_Channel_Config::release_description() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config.description)
  
  ::ywrapper::StringValue* temp = description_;
  description_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Components_Component_Transceiver_PhysicalChannels_Channel_Config::mutable_description() {
  
  if (description_ == NULL) {
    description_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config.description)
  return description_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_Config::set_allocated_description(::ywrapper::StringValue* description) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(description_);
  }
  if (description) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      description = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, description, submessage_arena);
    }
    
  } else {
    
  }
  description_ = description;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config.description)
}

// .ywrapper.UintValue index = 333658993 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config/index"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel_Config::has_index() const {
  return this != internal_default_instance() && index_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_Transceiver_PhysicalChannels_Channel_Config::index() const {
  const ::ywrapper::UintValue* p = index_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config.index)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_Transceiver_PhysicalChannels_Channel_Config::release_index() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config.index)
  
  ::ywrapper::UintValue* temp = index_;
  index_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_Transceiver_PhysicalChannels_Channel_Config::mutable_index() {
  
  if (index_ == NULL) {
    index_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config.index)
  return index_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_Config::set_allocated_index(::ywrapper::UintValue* index) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(index_);
  }
  if (index) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      index = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, index, submessage_arena);
    }
    
  } else {
    
  }
  index_ = index;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config.index)
}

// .ywrapper.Decimal64Value target_output_power = 128341554 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config/target-output-power"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel_Config::has_target_output_power() const {
  return this != internal_default_instance() && target_output_power_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_Transceiver_PhysicalChannels_Channel_Config::target_output_power() const {
  const ::ywrapper::Decimal64Value* p = target_output_power_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config.target_output_power)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_Config::release_target_output_power() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config.target_output_power)
  
  ::ywrapper::Decimal64Value* temp = target_output_power_;
  target_output_power_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_Config::mutable_target_output_power() {
  
  if (target_output_power_ == NULL) {
    target_output_power_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config.target_output_power)
  return target_output_power_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_Config::set_allocated_target_output_power(::ywrapper::Decimal64Value* target_output_power) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(target_output_power_);
  }
  if (target_output_power) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      target_output_power = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target_output_power, submessage_arena);
    }
    
  } else {
    
  }
  target_output_power_ = target_output_power;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config.target_output_power)
}

// .ywrapper.BoolValue tx_laser = 133868429 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config/tx-laser"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel_Config::has_tx_laser() const {
  return this != internal_default_instance() && tx_laser_ != NULL;
}
inline const ::ywrapper::BoolValue& Components_Component_Transceiver_PhysicalChannels_Channel_Config::tx_laser() const {
  const ::ywrapper::BoolValue* p = tx_laser_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config.tx_laser)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Components_Component_Transceiver_PhysicalChannels_Channel_Config::release_tx_laser() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config.tx_laser)
  
  ::ywrapper::BoolValue* temp = tx_laser_;
  tx_laser_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Components_Component_Transceiver_PhysicalChannels_Channel_Config::mutable_tx_laser() {
  
  if (tx_laser_ == NULL) {
    tx_laser_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config.tx_laser)
  return tx_laser_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_Config::set_allocated_tx_laser(::ywrapper::BoolValue* tx_laser) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_laser_);
  }
  if (tx_laser) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_laser = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_laser, submessage_arena);
    }
    
  } else {
    
  }
  tx_laser_ = tx_laser;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config.tx_laser)
}

// -------------------------------------------------------------------

// Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower

// .ywrapper.Decimal64Value avg = 425608185 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/avg"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower.avg)
  return avg_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower.avg)
}

// .ywrapper.Decimal64Value instant = 59663094 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/instant"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower.instant)
  return instant_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower.instant)
}

// .ywrapper.UintValue interval = 54371640 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/interval"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower.interval)
  return interval_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower.interval)
}

// .ywrapper.Decimal64Value max = 73969555 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/max"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower.max)
  return max_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower.max)
}

// .ywrapper.Decimal64Value min = 476619581 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/min"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower.min)
  return min_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower.min)
}

// -------------------------------------------------------------------

// Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent

// .ywrapper.Decimal64Value avg = 230643524 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/avg"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent.avg)
  return avg_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent.avg)
}

// .ywrapper.Decimal64Value instant = 325376671 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/instant"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent.instant)
  return instant_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent.instant)
}

// .ywrapper.UintValue interval = 384153695 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/interval"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent.interval)
  return interval_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent.interval)
}

// .ywrapper.Decimal64Value max = 446768222 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/max"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent.max)
  return max_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent.max)
}

// .ywrapper.Decimal64Value min = 44118224 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/min"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent.min)
  return min_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent.min)
}

// -------------------------------------------------------------------

// Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower

// .ywrapper.Decimal64Value avg = 470907710 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/avg"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower.avg)
  return avg_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower.avg)
}

// .ywrapper.Decimal64Value instant = 110986605 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/instant"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower.instant)
  return instant_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower.instant)
}

// .ywrapper.UintValue interval = 332288817 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/interval"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower.interval)
  return interval_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower.interval)
}

// .ywrapper.Decimal64Value max = 85611000 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/max"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower.max)
  return max_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower.max)
}

// .ywrapper.Decimal64Value min = 219831926 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/min"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower.min)
  return min_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower.min)
}

// -------------------------------------------------------------------

// Components_Component_Transceiver_PhysicalChannels_Channel_State

// .ywrapper.StringValue description = 29929938 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/description"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel_State::has_description() const {
  return this != internal_default_instance() && description_ != NULL;
}
inline const ::ywrapper::StringValue& Components_Component_Transceiver_PhysicalChannels_Channel_State::description() const {
  const ::ywrapper::StringValue* p = description_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.description)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Components_Component_Transceiver_PhysicalChannels_Channel_State::release_description() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.description)
  
  ::ywrapper::StringValue* temp = description_;
  description_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Components_Component_Transceiver_PhysicalChannels_Channel_State::mutable_description() {
  
  if (description_ == NULL) {
    description_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.description)
  return description_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_State::set_allocated_description(::ywrapper::StringValue* description) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(description_);
  }
  if (description) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      description = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, description, submessage_arena);
    }
    
  } else {
    
  }
  description_ = description;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.description)
}

// .ywrapper.UintValue index = 53274280 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/index"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel_State::has_index() const {
  return this != internal_default_instance() && index_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_Transceiver_PhysicalChannels_Channel_State::index() const {
  const ::ywrapper::UintValue* p = index_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.index)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_Transceiver_PhysicalChannels_Channel_State::release_index() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.index)
  
  ::ywrapper::UintValue* temp = index_;
  index_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_Transceiver_PhysicalChannels_Channel_State::mutable_index() {
  
  if (index_ == NULL) {
    index_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.index)
  return index_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_State::set_allocated_index(::ywrapper::UintValue* index) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(index_);
  }
  if (index) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      index = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, index, submessage_arena);
    }
    
  } else {
    
  }
  index_ = index;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.index)
}

// .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower input_power = 303986504 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel_State::has_input_power() const {
  return this != internal_default_instance() && input_power_ != NULL;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_State::clear_input_power() {
  if (GetArenaNoVirtual() == NULL && input_power_ != NULL) {
    delete input_power_;
  }
  input_power_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower& Components_Component_Transceiver_PhysicalChannels_Channel_State::input_power() const {
  const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower* p = input_power_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.input_power)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower*>(
      &::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower* Components_Component_Transceiver_PhysicalChannels_Channel_State::release_input_power() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.input_power)
  
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower* temp = input_power_;
  input_power_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower* Components_Component_Transceiver_PhysicalChannels_Channel_State::mutable_input_power() {
  
  if (input_power_ == NULL) {
    input_power_ = new ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.input_power)
  return input_power_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_State::set_allocated_input_power(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower* input_power) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete input_power_;
  }
  if (input_power) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      input_power = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, input_power, submessage_arena);
    }
    
  } else {
    
  }
  input_power_ = input_power;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.input_power)
}

// .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent laser_bias_current = 482909465 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel_State::has_laser_bias_current() const {
  return this != internal_default_instance() && laser_bias_current_ != NULL;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_State::clear_laser_bias_current() {
  if (GetArenaNoVirtual() == NULL && laser_bias_current_ != NULL) {
    delete laser_bias_current_;
  }
  laser_bias_current_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent& Components_Component_Transceiver_PhysicalChannels_Channel_State::laser_bias_current() const {
  const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent* p = laser_bias_current_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.laser_bias_current)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent*>(
      &::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent* Components_Component_Transceiver_PhysicalChannels_Channel_State::release_laser_bias_current() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.laser_bias_current)
  
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent* temp = laser_bias_current_;
  laser_bias_current_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent* Components_Component_Transceiver_PhysicalChannels_Channel_State::mutable_laser_bias_current() {
  
  if (laser_bias_current_ == NULL) {
    laser_bias_current_ = new ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.laser_bias_current)
  return laser_bias_current_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_State::set_allocated_laser_bias_current(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent* laser_bias_current) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete laser_bias_current_;
  }
  if (laser_bias_current) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      laser_bias_current = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, laser_bias_current, submessage_arena);
    }
    
  } else {
    
  }
  laser_bias_current_ = laser_bias_current;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.laser_bias_current)
}

// .ywrapper.UintValue output_frequency = 226348966 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-frequency"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel_State::has_output_frequency() const {
  return this != internal_default_instance() && output_frequency_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_Transceiver_PhysicalChannels_Channel_State::output_frequency() const {
  const ::ywrapper::UintValue* p = output_frequency_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.output_frequency)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_Transceiver_PhysicalChannels_Channel_State::release_output_frequency() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.output_frequency)
  
  ::ywrapper::UintValue* temp = output_frequency_;
  output_frequency_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_Transceiver_PhysicalChannels_Channel_State::mutable_output_frequency() {
  
  if (output_frequency_ == NULL) {
    output_frequency_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.output_frequency)
  return output_frequency_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_State::set_allocated_output_frequency(::ywrapper::UintValue* output_frequency) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(output_frequency_);
  }
  if (output_frequency) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      output_frequency = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, output_frequency, submessage_arena);
    }
    
  } else {
    
  }
  output_frequency_ = output_frequency;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.output_frequency)
}

// .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower output_power = 436080879 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel_State::has_output_power() const {
  return this != internal_default_instance() && output_power_ != NULL;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_State::clear_output_power() {
  if (GetArenaNoVirtual() == NULL && output_power_ != NULL) {
    delete output_power_;
  }
  output_power_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower& Components_Component_Transceiver_PhysicalChannels_Channel_State::output_power() const {
  const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower* p = output_power_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.output_power)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower*>(
      &::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower* Components_Component_Transceiver_PhysicalChannels_Channel_State::release_output_power() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.output_power)
  
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower* temp = output_power_;
  output_power_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower* Components_Component_Transceiver_PhysicalChannels_Channel_State::mutable_output_power() {
  
  if (output_power_ == NULL) {
    output_power_ = new ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.output_power)
  return output_power_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_State::set_allocated_output_power(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower* output_power) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete output_power_;
  }
  if (output_power) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      output_power = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, output_power, submessage_arena);
    }
    
  } else {
    
  }
  output_power_ = output_power;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.output_power)
}

// .ywrapper.Decimal64Value target_output_power = 401597083 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/target-output-power"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel_State::has_target_output_power() const {
  return this != internal_default_instance() && target_output_power_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_Transceiver_PhysicalChannels_Channel_State::target_output_power() const {
  const ::ywrapper::Decimal64Value* p = target_output_power_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.target_output_power)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_State::release_target_output_power() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.target_output_power)
  
  ::ywrapper::Decimal64Value* temp = target_output_power_;
  target_output_power_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_PhysicalChannels_Channel_State::mutable_target_output_power() {
  
  if (target_output_power_ == NULL) {
    target_output_power_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.target_output_power)
  return target_output_power_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_State::set_allocated_target_output_power(::ywrapper::Decimal64Value* target_output_power) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(target_output_power_);
  }
  if (target_output_power) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      target_output_power = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target_output_power, submessage_arena);
    }
    
  } else {
    
  }
  target_output_power_ = target_output_power;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.target_output_power)
}

// .ywrapper.BoolValue tx_laser = 415933878 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/tx-laser"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel_State::has_tx_laser() const {
  return this != internal_default_instance() && tx_laser_ != NULL;
}
inline const ::ywrapper::BoolValue& Components_Component_Transceiver_PhysicalChannels_Channel_State::tx_laser() const {
  const ::ywrapper::BoolValue* p = tx_laser_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.tx_laser)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Components_Component_Transceiver_PhysicalChannels_Channel_State::release_tx_laser() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.tx_laser)
  
  ::ywrapper::BoolValue* temp = tx_laser_;
  tx_laser_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Components_Component_Transceiver_PhysicalChannels_Channel_State::mutable_tx_laser() {
  
  if (tx_laser_ == NULL) {
    tx_laser_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.tx_laser)
  return tx_laser_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel_State::set_allocated_tx_laser(::ywrapper::BoolValue* tx_laser) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(tx_laser_);
  }
  if (tx_laser) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tx_laser = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tx_laser, submessage_arena);
    }
    
  } else {
    
  }
  tx_laser_ = tx_laser;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.tx_laser)
}

// -------------------------------------------------------------------

// Components_Component_Transceiver_PhysicalChannels_Channel

// .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config config = 101023264 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_Config& Components_Component_Transceiver_PhysicalChannels_Channel::config() const {
  const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_Config*>(
      &::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_Config_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_Config* Components_Component_Transceiver_PhysicalChannels_Channel::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.config)
  
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_Config* Components_Component_Transceiver_PhysicalChannels_Channel::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.config)
  return config_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel::set_allocated_config(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.config)
}

// .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State state = 282142105 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state"];
inline bool Components_Component_Transceiver_PhysicalChannels_Channel::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State& Components_Component_Transceiver_PhysicalChannels_Channel::state() const {
  const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State*>(
      &::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State* Components_Component_Transceiver_PhysicalChannels_Channel::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.state)
  
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State* Components_Component_Transceiver_PhysicalChannels_Channel::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.state)
  return state_;
}
inline void Components_Component_Transceiver_PhysicalChannels_Channel::set_allocated_state(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.state)
}

// -------------------------------------------------------------------

// Components_Component_Transceiver_PhysicalChannels_ChannelKey

// uint64 index = 1 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/index"];
inline void Components_Component_Transceiver_PhysicalChannels_ChannelKey::clear_index() {
  index_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Components_Component_Transceiver_PhysicalChannels_ChannelKey::index() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey.index)
  return index_;
}
inline void Components_Component_Transceiver_PhysicalChannels_ChannelKey::set_index(::google::protobuf::uint64 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey.index)
}

// .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel channel = 2;
inline bool Components_Component_Transceiver_PhysicalChannels_ChannelKey::has_channel() const {
  return this != internal_default_instance() && channel_ != NULL;
}
inline void Components_Component_Transceiver_PhysicalChannels_ChannelKey::clear_channel() {
  if (GetArenaNoVirtual() == NULL && channel_ != NULL) {
    delete channel_;
  }
  channel_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel& Components_Component_Transceiver_PhysicalChannels_ChannelKey::channel() const {
  const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel* p = channel_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey.channel)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel*>(
      &::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel* Components_Component_Transceiver_PhysicalChannels_ChannelKey::release_channel() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey.channel)
  
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel* temp = channel_;
  channel_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel* Components_Component_Transceiver_PhysicalChannels_ChannelKey::mutable_channel() {
  
  if (channel_ == NULL) {
    channel_ = new ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey.channel)
  return channel_;
}
inline void Components_Component_Transceiver_PhysicalChannels_ChannelKey::set_allocated_channel(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel* channel) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete channel_;
  }
  if (channel) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      channel = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, channel, submessage_arena);
    }
    
  } else {
    
  }
  channel_ = channel;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey.channel)
}

// -------------------------------------------------------------------

// Components_Component_Transceiver_PhysicalChannels

// repeated .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey channel = 359124959 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel"];
inline int Components_Component_Transceiver_PhysicalChannels::channel_size() const {
  return channel_.size();
}
inline void Components_Component_Transceiver_PhysicalChannels::clear_channel() {
  channel_.Clear();
}
inline const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_ChannelKey& Components_Component_Transceiver_PhysicalChannels::channel(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.channel)
  return channel_.Get(index);
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_ChannelKey* Components_Component_Transceiver_PhysicalChannels::mutable_channel(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.channel)
  return channel_.Mutable(index);
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_ChannelKey* Components_Component_Transceiver_PhysicalChannels::add_channel() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.channel)
  return channel_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_ChannelKey >*
Components_Component_Transceiver_PhysicalChannels::mutable_channel() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.channel)
  return &channel_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_ChannelKey >&
Components_Component_Transceiver_PhysicalChannels::channel() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.channel)
  return channel_;
}

// -------------------------------------------------------------------

// Components_Component_Transceiver_State_InputPower

// .ywrapper.Decimal64Value avg = 424783144 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/avg"];
inline bool Components_Component_Transceiver_State_InputPower::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_Transceiver_State_InputPower::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_State_InputPower::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_State_InputPower::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower.avg)
  return avg_;
}
inline void Components_Component_Transceiver_State_InputPower::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower.avg)
}

// .ywrapper.Decimal64Value instant = 29798419 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/instant"];
inline bool Components_Component_Transceiver_State_InputPower::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_Transceiver_State_InputPower::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_State_InputPower::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_State_InputPower::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower.instant)
  return instant_;
}
inline void Components_Component_Transceiver_State_InputPower::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower.instant)
}

// .ywrapper.UintValue interval = 192286739 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/interval"];
inline bool Components_Component_Transceiver_State_InputPower::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_Transceiver_State_InputPower::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_Transceiver_State_InputPower::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_Transceiver_State_InputPower::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower.interval)
  return interval_;
}
inline void Components_Component_Transceiver_State_InputPower::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower.interval)
}

// .ywrapper.Decimal64Value max = 242200938 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/max"];
inline bool Components_Component_Transceiver_State_InputPower::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_Transceiver_State_InputPower::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_State_InputPower::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_State_InputPower::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower.max)
  return max_;
}
inline void Components_Component_Transceiver_State_InputPower::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower.max)
}

// .ywrapper.Decimal64Value min = 376421828 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/min"];
inline bool Components_Component_Transceiver_State_InputPower::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_Transceiver_State_InputPower::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_State_InputPower::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_State_InputPower::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower.min)
  return min_;
}
inline void Components_Component_Transceiver_State_InputPower::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower.min)
}

// -------------------------------------------------------------------

// Components_Component_Transceiver_State_LaserBiasCurrent

// .ywrapper.Decimal64Value avg = 44193839 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/avg"];
inline bool Components_Component_Transceiver_State_LaserBiasCurrent::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_Transceiver_State_LaserBiasCurrent::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_State_LaserBiasCurrent::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_State_LaserBiasCurrent::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent.avg)
  return avg_;
}
inline void Components_Component_Transceiver_State_LaserBiasCurrent::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent.avg)
}

// .ywrapper.Decimal64Value instant = 400153624 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/instant"];
inline bool Components_Component_Transceiver_State_LaserBiasCurrent::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_Transceiver_State_LaserBiasCurrent::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_State_LaserBiasCurrent::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_State_LaserBiasCurrent::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent.instant)
  return instant_;
}
inline void Components_Component_Transceiver_State_LaserBiasCurrent::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent.instant)
}

// .ywrapper.UintValue interval = 482176166 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/interval"];
inline bool Components_Component_Transceiver_State_LaserBiasCurrent::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_Transceiver_State_LaserBiasCurrent::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_Transceiver_State_LaserBiasCurrent::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_Transceiver_State_LaserBiasCurrent::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent.interval)
  return interval_;
}
inline void Components_Component_Transceiver_State_LaserBiasCurrent::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent.interval)
}

// .ywrapper.Decimal64Value max = 26814849 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/max"];
inline bool Components_Component_Transceiver_State_LaserBiasCurrent::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_Transceiver_State_LaserBiasCurrent::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_State_LaserBiasCurrent::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_State_LaserBiasCurrent::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent.max)
  return max_;
}
inline void Components_Component_Transceiver_State_LaserBiasCurrent::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent.max)
}

// .ywrapper.Decimal64Value min = 161036031 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/min"];
inline bool Components_Component_Transceiver_State_LaserBiasCurrent::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_Transceiver_State_LaserBiasCurrent::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_State_LaserBiasCurrent::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_State_LaserBiasCurrent::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent.min)
  return min_;
}
inline void Components_Component_Transceiver_State_LaserBiasCurrent::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent.min)
}

// -------------------------------------------------------------------

// Components_Component_Transceiver_State_OutputPower

// .ywrapper.Decimal64Value avg = 103469393 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/avg"];
inline bool Components_Component_Transceiver_State_OutputPower::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_Transceiver_State_OutputPower::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_State_OutputPower::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_State_OutputPower::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower.avg)
  return avg_;
}
inline void Components_Component_Transceiver_State_OutputPower::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower.avg)
}

// .ywrapper.Decimal64Value instant = 45091486 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/instant"];
inline bool Components_Component_Transceiver_State_OutputPower::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_Transceiver_State_OutputPower::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_State_OutputPower::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_State_OutputPower::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower.instant)
  return instant_;
}
inline void Components_Component_Transceiver_State_OutputPower::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower.instant)
}

// .ywrapper.UintValue interval = 140247632 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/interval"];
inline bool Components_Component_Transceiver_State_OutputPower::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& Components_Component_Transceiver_State_OutputPower::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Components_Component_Transceiver_State_OutputPower::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Components_Component_Transceiver_State_OutputPower::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower.interval)
  return interval_;
}
inline void Components_Component_Transceiver_State_OutputPower::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower.interval)
}

// .ywrapper.Decimal64Value max = 286038891 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/max"];
inline bool Components_Component_Transceiver_State_OutputPower::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_Transceiver_State_OutputPower::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_State_OutputPower::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_State_OutputPower::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower.max)
  return max_;
}
inline void Components_Component_Transceiver_State_OutputPower::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower.max)
}

// .ywrapper.Decimal64Value min = 420259781 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/min"];
inline bool Components_Component_Transceiver_State_OutputPower::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& Components_Component_Transceiver_State_OutputPower::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_State_OutputPower::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* Components_Component_Transceiver_State_OutputPower::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower.min)
  return min_;
}
inline void Components_Component_Transceiver_State_OutputPower::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower.min)
}

// -------------------------------------------------------------------

// Components_Component_Transceiver_State

// .openconfig.enums.OpenconfigTransportTypesFIBERCONNECTORTYPE connector_type = 252758609 [(.yext.schemapath) = "/components/component/transceiver/state/connector-type"];
inline void Components_Component_Transceiver_State::clear_connector_type() {
  connector_type_ = 0;
}
inline ::openconfig::enums::OpenconfigTransportTypesFIBERCONNECTORTYPE Components_Component_Transceiver_State::connector_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.connector_type)
  return static_cast< ::openconfig::enums::OpenconfigTransportTypesFIBERCONNECTORTYPE >(connector_type_);
}
inline void Components_Component_Transceiver_State::set_connector_type(::openconfig::enums::OpenconfigTransportTypesFIBERCONNECTORTYPE value) {
  
  connector_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Transceiver.State.connector_type)
}

// .ywrapper.StringValue date_code = 323636967 [(.yext.schemapath) = "/components/component/transceiver/state/date-code"];
inline bool Components_Component_Transceiver_State::has_date_code() const {
  return this != internal_default_instance() && date_code_ != NULL;
}
inline const ::ywrapper::StringValue& Components_Component_Transceiver_State::date_code() const {
  const ::ywrapper::StringValue* p = date_code_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.date_code)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Components_Component_Transceiver_State::release_date_code() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.State.date_code)
  
  ::ywrapper::StringValue* temp = date_code_;
  date_code_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Components_Component_Transceiver_State::mutable_date_code() {
  
  if (date_code_ == NULL) {
    date_code_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.State.date_code)
  return date_code_;
}
inline void Components_Component_Transceiver_State::set_allocated_date_code(::ywrapper::StringValue* date_code) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(date_code_);
  }
  if (date_code) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      date_code = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, date_code, submessage_arena);
    }
    
  } else {
    
  }
  date_code_ = date_code;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.State.date_code)
}

// .ywrapper.BoolValue enabled = 252306382 [(.yext.schemapath) = "/components/component/transceiver/state/enabled"];
inline bool Components_Component_Transceiver_State::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
inline const ::ywrapper::BoolValue& Components_Component_Transceiver_State::enabled() const {
  const ::ywrapper::BoolValue* p = enabled_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Components_Component_Transceiver_State::release_enabled() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.State.enabled)
  
  ::ywrapper::BoolValue* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Components_Component_Transceiver_State::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.State.enabled)
  return enabled_;
}
inline void Components_Component_Transceiver_State::set_allocated_enabled(::ywrapper::BoolValue* enabled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enabled_);
  }
  if (enabled) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enabled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enabled, submessage_arena);
    }
    
  } else {
    
  }
  enabled_ = enabled;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.State.enabled)
}

// .openconfig.enums.OpenconfigTransportTypesETHERNETPMDTYPE ethernet_pmd = 416980802 [(.yext.schemapath) = "/components/component/transceiver/state/ethernet-pmd"];
inline void Components_Component_Transceiver_State::clear_ethernet_pmd() {
  ethernet_pmd_ = 0;
}
inline ::openconfig::enums::OpenconfigTransportTypesETHERNETPMDTYPE Components_Component_Transceiver_State::ethernet_pmd() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.ethernet_pmd)
  return static_cast< ::openconfig::enums::OpenconfigTransportTypesETHERNETPMDTYPE >(ethernet_pmd_);
}
inline void Components_Component_Transceiver_State::set_ethernet_pmd(::openconfig::enums::OpenconfigTransportTypesETHERNETPMDTYPE value) {
  
  ethernet_pmd_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Transceiver.State.ethernet_pmd)
}

// .openconfig.enums.OpenconfigTransportTypesETHERNETPMDTYPE ethernet_pmd_preconf = 424376104 [(.yext.schemapath) = "/components/component/transceiver/state/ethernet-pmd-preconf"];
inline void Components_Component_Transceiver_State::clear_ethernet_pmd_preconf() {
  ethernet_pmd_preconf_ = 0;
}
inline ::openconfig::enums::OpenconfigTransportTypesETHERNETPMDTYPE Components_Component_Transceiver_State::ethernet_pmd_preconf() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.ethernet_pmd_preconf)
  return static_cast< ::openconfig::enums::OpenconfigTransportTypesETHERNETPMDTYPE >(ethernet_pmd_preconf_);
}
inline void Components_Component_Transceiver_State::set_ethernet_pmd_preconf(::openconfig::enums::OpenconfigTransportTypesETHERNETPMDTYPE value) {
  
  ethernet_pmd_preconf_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Transceiver.State.ethernet_pmd_preconf)
}

// .ywrapper.BoolValue fault_condition = 66972341 [(.yext.schemapath) = "/components/component/transceiver/state/fault-condition"];
inline bool Components_Component_Transceiver_State::has_fault_condition() const {
  return this != internal_default_instance() && fault_condition_ != NULL;
}
inline const ::ywrapper::BoolValue& Components_Component_Transceiver_State::fault_condition() const {
  const ::ywrapper::BoolValue* p = fault_condition_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.fault_condition)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Components_Component_Transceiver_State::release_fault_condition() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.State.fault_condition)
  
  ::ywrapper::BoolValue* temp = fault_condition_;
  fault_condition_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Components_Component_Transceiver_State::mutable_fault_condition() {
  
  if (fault_condition_ == NULL) {
    fault_condition_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.State.fault_condition)
  return fault_condition_;
}
inline void Components_Component_Transceiver_State::set_allocated_fault_condition(::ywrapper::BoolValue* fault_condition) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(fault_condition_);
  }
  if (fault_condition) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fault_condition = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fault_condition, submessage_arena);
    }
    
  } else {
    
  }
  fault_condition_ = fault_condition;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.State.fault_condition)
}

// .openconfig.enums.OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE form_factor = 11627927 [(.yext.schemapath) = "/components/component/transceiver/state/form-factor"];
inline void Components_Component_Transceiver_State::clear_form_factor() {
  form_factor_ = 0;
}
inline ::openconfig::enums::OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE Components_Component_Transceiver_State::form_factor() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.form_factor)
  return static_cast< ::openconfig::enums::OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE >(form_factor_);
}
inline void Components_Component_Transceiver_State::set_form_factor(::openconfig::enums::OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE value) {
  
  form_factor_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Transceiver.State.form_factor)
}

// .openconfig.enums.OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE form_factor_preconf = 518555017 [(.yext.schemapath) = "/components/component/transceiver/state/form-factor-preconf"];
inline void Components_Component_Transceiver_State::clear_form_factor_preconf() {
  form_factor_preconf_ = 0;
}
inline ::openconfig::enums::OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE Components_Component_Transceiver_State::form_factor_preconf() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.form_factor_preconf)
  return static_cast< ::openconfig::enums::OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE >(form_factor_preconf_);
}
inline void Components_Component_Transceiver_State::set_form_factor_preconf(::openconfig::enums::OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE value) {
  
  form_factor_preconf_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Transceiver.State.form_factor_preconf)
}

// .openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower input_power = 41561605 [(.yext.schemapath) = "/components/component/transceiver/state/input-power"];
inline bool Components_Component_Transceiver_State::has_input_power() const {
  return this != internal_default_instance() && input_power_ != NULL;
}
inline void Components_Component_Transceiver_State::clear_input_power() {
  if (GetArenaNoVirtual() == NULL && input_power_ != NULL) {
    delete input_power_;
  }
  input_power_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Transceiver_State_InputPower& Components_Component_Transceiver_State::input_power() const {
  const ::openconfig::openconfig_platform::Components_Component_Transceiver_State_InputPower* p = input_power_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.input_power)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Transceiver_State_InputPower*>(
      &::openconfig::openconfig_platform::_Components_Component_Transceiver_State_InputPower_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver_State_InputPower* Components_Component_Transceiver_State::release_input_power() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.State.input_power)
  
  ::openconfig::openconfig_platform::Components_Component_Transceiver_State_InputPower* temp = input_power_;
  input_power_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver_State_InputPower* Components_Component_Transceiver_State::mutable_input_power() {
  
  if (input_power_ == NULL) {
    input_power_ = new ::openconfig::openconfig_platform::Components_Component_Transceiver_State_InputPower;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.State.input_power)
  return input_power_;
}
inline void Components_Component_Transceiver_State::set_allocated_input_power(::openconfig::openconfig_platform::Components_Component_Transceiver_State_InputPower* input_power) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete input_power_;
  }
  if (input_power) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      input_power = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, input_power, submessage_arena);
    }
    
  } else {
    
  }
  input_power_ = input_power;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.State.input_power)
}

// .ywrapper.IntValue internal_temp = 109715519 [(.yext.schemapath) = "/components/component/transceiver/state/internal-temp"];
inline bool Components_Component_Transceiver_State::has_internal_temp() const {
  return this != internal_default_instance() && internal_temp_ != NULL;
}
inline const ::ywrapper::IntValue& Components_Component_Transceiver_State::internal_temp() const {
  const ::ywrapper::IntValue* p = internal_temp_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.internal_temp)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::IntValue*>(
      &::ywrapper::_IntValue_default_instance_);
}
inline ::ywrapper::IntValue* Components_Component_Transceiver_State::release_internal_temp() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.State.internal_temp)
  
  ::ywrapper::IntValue* temp = internal_temp_;
  internal_temp_ = NULL;
  return temp;
}
inline ::ywrapper::IntValue* Components_Component_Transceiver_State::mutable_internal_temp() {
  
  if (internal_temp_ == NULL) {
    internal_temp_ = new ::ywrapper::IntValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.State.internal_temp)
  return internal_temp_;
}
inline void Components_Component_Transceiver_State::set_allocated_internal_temp(::ywrapper::IntValue* internal_temp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(internal_temp_);
  }
  if (internal_temp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      internal_temp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, internal_temp, submessage_arena);
    }
    
  } else {
    
  }
  internal_temp_ = internal_temp;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.State.internal_temp)
}

// .openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent laser_bias_current = 422928146 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current"];
inline bool Components_Component_Transceiver_State::has_laser_bias_current() const {
  return this != internal_default_instance() && laser_bias_current_ != NULL;
}
inline void Components_Component_Transceiver_State::clear_laser_bias_current() {
  if (GetArenaNoVirtual() == NULL && laser_bias_current_ != NULL) {
    delete laser_bias_current_;
  }
  laser_bias_current_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Transceiver_State_LaserBiasCurrent& Components_Component_Transceiver_State::laser_bias_current() const {
  const ::openconfig::openconfig_platform::Components_Component_Transceiver_State_LaserBiasCurrent* p = laser_bias_current_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.laser_bias_current)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Transceiver_State_LaserBiasCurrent*>(
      &::openconfig::openconfig_platform::_Components_Component_Transceiver_State_LaserBiasCurrent_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver_State_LaserBiasCurrent* Components_Component_Transceiver_State::release_laser_bias_current() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.State.laser_bias_current)
  
  ::openconfig::openconfig_platform::Components_Component_Transceiver_State_LaserBiasCurrent* temp = laser_bias_current_;
  laser_bias_current_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver_State_LaserBiasCurrent* Components_Component_Transceiver_State::mutable_laser_bias_current() {
  
  if (laser_bias_current_ == NULL) {
    laser_bias_current_ = new ::openconfig::openconfig_platform::Components_Component_Transceiver_State_LaserBiasCurrent;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.State.laser_bias_current)
  return laser_bias_current_;
}
inline void Components_Component_Transceiver_State::set_allocated_laser_bias_current(::openconfig::openconfig_platform::Components_Component_Transceiver_State_LaserBiasCurrent* laser_bias_current) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete laser_bias_current_;
  }
  if (laser_bias_current) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      laser_bias_current = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, laser_bias_current, submessage_arena);
    }
    
  } else {
    
  }
  laser_bias_current_ = laser_bias_current;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.State.laser_bias_current)
}

// .openconfig.enums.OpenconfigTransportTypesOTNAPPLICATIONCODE otn_compliance_code = 302597810 [(.yext.schemapath) = "/components/component/transceiver/state/otn-compliance-code"];
inline void Components_Component_Transceiver_State::clear_otn_compliance_code() {
  otn_compliance_code_ = 0;
}
inline ::openconfig::enums::OpenconfigTransportTypesOTNAPPLICATIONCODE Components_Component_Transceiver_State::otn_compliance_code() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.otn_compliance_code)
  return static_cast< ::openconfig::enums::OpenconfigTransportTypesOTNAPPLICATIONCODE >(otn_compliance_code_);
}
inline void Components_Component_Transceiver_State::set_otn_compliance_code(::openconfig::enums::OpenconfigTransportTypesOTNAPPLICATIONCODE value) {
  
  otn_compliance_code_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Transceiver.State.otn_compliance_code)
}

// .openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower output_power = 242740240 [(.yext.schemapath) = "/components/component/transceiver/state/output-power"];
inline bool Components_Component_Transceiver_State::has_output_power() const {
  return this != internal_default_instance() && output_power_ != NULL;
}
inline void Components_Component_Transceiver_State::clear_output_power() {
  if (GetArenaNoVirtual() == NULL && output_power_ != NULL) {
    delete output_power_;
  }
  output_power_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Transceiver_State_OutputPower& Components_Component_Transceiver_State::output_power() const {
  const ::openconfig::openconfig_platform::Components_Component_Transceiver_State_OutputPower* p = output_power_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.output_power)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Transceiver_State_OutputPower*>(
      &::openconfig::openconfig_platform::_Components_Component_Transceiver_State_OutputPower_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver_State_OutputPower* Components_Component_Transceiver_State::release_output_power() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.State.output_power)
  
  ::openconfig::openconfig_platform::Components_Component_Transceiver_State_OutputPower* temp = output_power_;
  output_power_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver_State_OutputPower* Components_Component_Transceiver_State::mutable_output_power() {
  
  if (output_power_ == NULL) {
    output_power_ = new ::openconfig::openconfig_platform::Components_Component_Transceiver_State_OutputPower;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.State.output_power)
  return output_power_;
}
inline void Components_Component_Transceiver_State::set_allocated_output_power(::openconfig::openconfig_platform::Components_Component_Transceiver_State_OutputPower* output_power) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete output_power_;
  }
  if (output_power) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      output_power = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, output_power, submessage_arena);
    }
    
  } else {
    
  }
  output_power_ = output_power;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.State.output_power)
}

// .openconfig.openconfig_platform.Components.Component.Transceiver.State.Present present = 171782640 [(.yext.schemapath) = "/components/component/transceiver/state/present"];
inline void Components_Component_Transceiver_State::clear_present() {
  present_ = 0;
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver_State_Present Components_Component_Transceiver_State::present() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.present)
  return static_cast< ::openconfig::openconfig_platform::Components_Component_Transceiver_State_Present >(present_);
}
inline void Components_Component_Transceiver_State::set_present(::openconfig::openconfig_platform::Components_Component_Transceiver_State_Present value) {
  
  present_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Transceiver.State.present)
}

// .ywrapper.StringValue serial_no = 48331837 [(.yext.schemapath) = "/components/component/transceiver/state/serial-no"];
inline bool Components_Component_Transceiver_State::has_serial_no() const {
  return this != internal_default_instance() && serial_no_ != NULL;
}
inline const ::ywrapper::StringValue& Components_Component_Transceiver_State::serial_no() const {
  const ::ywrapper::StringValue* p = serial_no_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.serial_no)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Components_Component_Transceiver_State::release_serial_no() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.State.serial_no)
  
  ::ywrapper::StringValue* temp = serial_no_;
  serial_no_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Components_Component_Transceiver_State::mutable_serial_no() {
  
  if (serial_no_ == NULL) {
    serial_no_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.State.serial_no)
  return serial_no_;
}
inline void Components_Component_Transceiver_State::set_allocated_serial_no(::ywrapper::StringValue* serial_no) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(serial_no_);
  }
  if (serial_no) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      serial_no = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, serial_no, submessage_arena);
    }
    
  } else {
    
  }
  serial_no_ = serial_no;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.State.serial_no)
}

// .openconfig.enums.OpenconfigTransportTypesSONETAPPLICATIONCODE sonet_sdh_compliance_code = 354799300 [(.yext.schemapath) = "/components/component/transceiver/state/sonet-sdh-compliance-code"];
inline void Components_Component_Transceiver_State::clear_sonet_sdh_compliance_code() {
  sonet_sdh_compliance_code_ = 0;
}
inline ::openconfig::enums::OpenconfigTransportTypesSONETAPPLICATIONCODE Components_Component_Transceiver_State::sonet_sdh_compliance_code() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.sonet_sdh_compliance_code)
  return static_cast< ::openconfig::enums::OpenconfigTransportTypesSONETAPPLICATIONCODE >(sonet_sdh_compliance_code_);
}
inline void Components_Component_Transceiver_State::set_sonet_sdh_compliance_code(::openconfig::enums::OpenconfigTransportTypesSONETAPPLICATIONCODE value) {
  
  sonet_sdh_compliance_code_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.Component.Transceiver.State.sonet_sdh_compliance_code)
}

// .ywrapper.StringValue vendor = 186283901 [(.yext.schemapath) = "/components/component/transceiver/state/vendor"];
inline bool Components_Component_Transceiver_State::has_vendor() const {
  return this != internal_default_instance() && vendor_ != NULL;
}
inline const ::ywrapper::StringValue& Components_Component_Transceiver_State::vendor() const {
  const ::ywrapper::StringValue* p = vendor_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.vendor)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Components_Component_Transceiver_State::release_vendor() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.State.vendor)
  
  ::ywrapper::StringValue* temp = vendor_;
  vendor_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Components_Component_Transceiver_State::mutable_vendor() {
  
  if (vendor_ == NULL) {
    vendor_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.State.vendor)
  return vendor_;
}
inline void Components_Component_Transceiver_State::set_allocated_vendor(::ywrapper::StringValue* vendor) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(vendor_);
  }
  if (vendor) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vendor = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vendor, submessage_arena);
    }
    
  } else {
    
  }
  vendor_ = vendor;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.State.vendor)
}

// .ywrapper.StringValue vendor_part = 246872941 [(.yext.schemapath) = "/components/component/transceiver/state/vendor-part"];
inline bool Components_Component_Transceiver_State::has_vendor_part() const {
  return this != internal_default_instance() && vendor_part_ != NULL;
}
inline const ::ywrapper::StringValue& Components_Component_Transceiver_State::vendor_part() const {
  const ::ywrapper::StringValue* p = vendor_part_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.vendor_part)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Components_Component_Transceiver_State::release_vendor_part() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.State.vendor_part)
  
  ::ywrapper::StringValue* temp = vendor_part_;
  vendor_part_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Components_Component_Transceiver_State::mutable_vendor_part() {
  
  if (vendor_part_ == NULL) {
    vendor_part_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.State.vendor_part)
  return vendor_part_;
}
inline void Components_Component_Transceiver_State::set_allocated_vendor_part(::ywrapper::StringValue* vendor_part) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(vendor_part_);
  }
  if (vendor_part) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vendor_part = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vendor_part, submessage_arena);
    }
    
  } else {
    
  }
  vendor_part_ = vendor_part;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.State.vendor_part)
}

// .ywrapper.StringValue vendor_rev = 62133637 [(.yext.schemapath) = "/components/component/transceiver/state/vendor-rev"];
inline bool Components_Component_Transceiver_State::has_vendor_rev() const {
  return this != internal_default_instance() && vendor_rev_ != NULL;
}
inline const ::ywrapper::StringValue& Components_Component_Transceiver_State::vendor_rev() const {
  const ::ywrapper::StringValue* p = vendor_rev_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.State.vendor_rev)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Components_Component_Transceiver_State::release_vendor_rev() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.State.vendor_rev)
  
  ::ywrapper::StringValue* temp = vendor_rev_;
  vendor_rev_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Components_Component_Transceiver_State::mutable_vendor_rev() {
  
  if (vendor_rev_ == NULL) {
    vendor_rev_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.State.vendor_rev)
  return vendor_rev_;
}
inline void Components_Component_Transceiver_State::set_allocated_vendor_rev(::ywrapper::StringValue* vendor_rev) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(vendor_rev_);
  }
  if (vendor_rev) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vendor_rev = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vendor_rev, submessage_arena);
    }
    
  } else {
    
  }
  vendor_rev_ = vendor_rev;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.State.vendor_rev)
}

// -------------------------------------------------------------------

// Components_Component_Transceiver

// .openconfig.openconfig_platform.Components.Component.Transceiver.Config config = 532347803 [(.yext.schemapath) = "/components/component/transceiver/config"];
inline bool Components_Component_Transceiver::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Components_Component_Transceiver::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Transceiver_Config& Components_Component_Transceiver::config() const {
  const ::openconfig::openconfig_platform::Components_Component_Transceiver_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Transceiver_Config*>(
      &::openconfig::openconfig_platform::_Components_Component_Transceiver_Config_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver_Config* Components_Component_Transceiver::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.config)
  
  ::openconfig::openconfig_platform::Components_Component_Transceiver_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver_Config* Components_Component_Transceiver::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Transceiver_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.config)
  return config_;
}
inline void Components_Component_Transceiver::set_allocated_config(::openconfig::openconfig_platform::Components_Component_Transceiver_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.config)
}

// .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels physical_channels = 144337163 [(.yext.schemapath) = "/components/component/transceiver/physical-channels"];
inline bool Components_Component_Transceiver::has_physical_channels() const {
  return this != internal_default_instance() && physical_channels_ != NULL;
}
inline void Components_Component_Transceiver::clear_physical_channels() {
  if (GetArenaNoVirtual() == NULL && physical_channels_ != NULL) {
    delete physical_channels_;
  }
  physical_channels_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels& Components_Component_Transceiver::physical_channels() const {
  const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels* p = physical_channels_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.physical_channels)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels*>(
      &::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels* Components_Component_Transceiver::release_physical_channels() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.physical_channels)
  
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels* temp = physical_channels_;
  physical_channels_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels* Components_Component_Transceiver::mutable_physical_channels() {
  
  if (physical_channels_ == NULL) {
    physical_channels_ = new ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.physical_channels)
  return physical_channels_;
}
inline void Components_Component_Transceiver::set_allocated_physical_channels(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels* physical_channels) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete physical_channels_;
  }
  if (physical_channels) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      physical_channels = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, physical_channels, submessage_arena);
    }
    
  } else {
    
  }
  physical_channels_ = physical_channels;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.physical_channels)
}

// .openconfig.openconfig_platform.Components.Component.Transceiver.State state = 171036572 [(.yext.schemapath) = "/components/component/transceiver/state"];
inline bool Components_Component_Transceiver::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Components_Component_Transceiver::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Transceiver_State& Components_Component_Transceiver::state() const {
  const ::openconfig::openconfig_platform::Components_Component_Transceiver_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.Transceiver.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Transceiver_State*>(
      &::openconfig::openconfig_platform::_Components_Component_Transceiver_State_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver_State* Components_Component_Transceiver::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.Transceiver.state)
  
  ::openconfig::openconfig_platform::Components_Component_Transceiver_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver_State* Components_Component_Transceiver::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Transceiver_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.Transceiver.state)
  return state_;
}
inline void Components_Component_Transceiver::set_allocated_state(::openconfig::openconfig_platform::Components_Component_Transceiver_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Transceiver.state)
}

// -------------------------------------------------------------------

// Components_Component

// .openconfig.openconfig_platform.Components.Component.Backplane backplane = 23572881 [(.yext.schemapath) = "/components/component/backplane"];
inline bool Components_Component::has_backplane() const {
  return this != internal_default_instance() && backplane_ != NULL;
}
inline void Components_Component::clear_backplane() {
  if (GetArenaNoVirtual() == NULL && backplane_ != NULL) {
    delete backplane_;
  }
  backplane_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Backplane& Components_Component::backplane() const {
  const ::openconfig::openconfig_platform::Components_Component_Backplane* p = backplane_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.backplane)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Backplane*>(
      &::openconfig::openconfig_platform::_Components_Component_Backplane_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Backplane* Components_Component::release_backplane() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.backplane)
  
  ::openconfig::openconfig_platform::Components_Component_Backplane* temp = backplane_;
  backplane_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Backplane* Components_Component::mutable_backplane() {
  
  if (backplane_ == NULL) {
    backplane_ = new ::openconfig::openconfig_platform::Components_Component_Backplane;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.backplane)
  return backplane_;
}
inline void Components_Component::set_allocated_backplane(::openconfig::openconfig_platform::Components_Component_Backplane* backplane) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete backplane_;
  }
  if (backplane) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      backplane = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, backplane, submessage_arena);
    }
    
  } else {
    
  }
  backplane_ = backplane;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.backplane)
}

// .openconfig.openconfig_platform.Components.Component.Chassis chassis = 153681076 [(.yext.schemapath) = "/components/component/chassis"];
inline bool Components_Component::has_chassis() const {
  return this != internal_default_instance() && chassis_ != NULL;
}
inline void Components_Component::clear_chassis() {
  if (GetArenaNoVirtual() == NULL && chassis_ != NULL) {
    delete chassis_;
  }
  chassis_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Chassis& Components_Component::chassis() const {
  const ::openconfig::openconfig_platform::Components_Component_Chassis* p = chassis_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.chassis)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Chassis*>(
      &::openconfig::openconfig_platform::_Components_Component_Chassis_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Chassis* Components_Component::release_chassis() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.chassis)
  
  ::openconfig::openconfig_platform::Components_Component_Chassis* temp = chassis_;
  chassis_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Chassis* Components_Component::mutable_chassis() {
  
  if (chassis_ == NULL) {
    chassis_ = new ::openconfig::openconfig_platform::Components_Component_Chassis;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.chassis)
  return chassis_;
}
inline void Components_Component::set_allocated_chassis(::openconfig::openconfig_platform::Components_Component_Chassis* chassis) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete chassis_;
  }
  if (chassis) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      chassis = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, chassis, submessage_arena);
    }
    
  } else {
    
  }
  chassis_ = chassis;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.chassis)
}

// .openconfig.openconfig_platform.Components.Component.Config config = 405956410 [(.yext.schemapath) = "/components/component/config"];
inline bool Components_Component::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Components_Component::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Config& Components_Component::config() const {
  const ::openconfig::openconfig_platform::Components_Component_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Config*>(
      &::openconfig::openconfig_platform::_Components_Component_Config_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Config* Components_Component::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.config)
  
  ::openconfig::openconfig_platform::Components_Component_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Config* Components_Component::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.config)
  return config_;
}
inline void Components_Component::set_allocated_config(::openconfig::openconfig_platform::Components_Component_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.config)
}

// .openconfig.openconfig_platform.Components.Component.Cpu cpu = 60886558 [(.yext.schemapath) = "/components/component/cpu"];
inline bool Components_Component::has_cpu() const {
  return this != internal_default_instance() && cpu_ != NULL;
}
inline void Components_Component::clear_cpu() {
  if (GetArenaNoVirtual() == NULL && cpu_ != NULL) {
    delete cpu_;
  }
  cpu_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Cpu& Components_Component::cpu() const {
  const ::openconfig::openconfig_platform::Components_Component_Cpu* p = cpu_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.cpu)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Cpu*>(
      &::openconfig::openconfig_platform::_Components_Component_Cpu_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Cpu* Components_Component::release_cpu() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.cpu)
  
  ::openconfig::openconfig_platform::Components_Component_Cpu* temp = cpu_;
  cpu_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Cpu* Components_Component::mutable_cpu() {
  
  if (cpu_ == NULL) {
    cpu_ = new ::openconfig::openconfig_platform::Components_Component_Cpu;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.cpu)
  return cpu_;
}
inline void Components_Component::set_allocated_cpu(::openconfig::openconfig_platform::Components_Component_Cpu* cpu) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete cpu_;
  }
  if (cpu) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cpu = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cpu, submessage_arena);
    }
    
  } else {
    
  }
  cpu_ = cpu;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.cpu)
}

// .openconfig.openconfig_platform.Components.Component.Fabric fabric = 101006771 [(.yext.schemapath) = "/components/component/fabric"];
inline bool Components_Component::has_fabric() const {
  return this != internal_default_instance() && fabric_ != NULL;
}
inline void Components_Component::clear_fabric() {
  if (GetArenaNoVirtual() == NULL && fabric_ != NULL) {
    delete fabric_;
  }
  fabric_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Fabric& Components_Component::fabric() const {
  const ::openconfig::openconfig_platform::Components_Component_Fabric* p = fabric_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.fabric)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Fabric*>(
      &::openconfig::openconfig_platform::_Components_Component_Fabric_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Fabric* Components_Component::release_fabric() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.fabric)
  
  ::openconfig::openconfig_platform::Components_Component_Fabric* temp = fabric_;
  fabric_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Fabric* Components_Component::mutable_fabric() {
  
  if (fabric_ == NULL) {
    fabric_ = new ::openconfig::openconfig_platform::Components_Component_Fabric;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.fabric)
  return fabric_;
}
inline void Components_Component::set_allocated_fabric(::openconfig::openconfig_platform::Components_Component_Fabric* fabric) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete fabric_;
  }
  if (fabric) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fabric = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fabric, submessage_arena);
    }
    
  } else {
    
  }
  fabric_ = fabric;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.fabric)
}

// .openconfig.openconfig_platform.Components.Component.Fan fan = 111660679 [(.yext.schemapath) = "/components/component/fan"];
inline bool Components_Component::has_fan() const {
  return this != internal_default_instance() && fan_ != NULL;
}
inline void Components_Component::clear_fan() {
  if (GetArenaNoVirtual() == NULL && fan_ != NULL) {
    delete fan_;
  }
  fan_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Fan& Components_Component::fan() const {
  const ::openconfig::openconfig_platform::Components_Component_Fan* p = fan_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.fan)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Fan*>(
      &::openconfig::openconfig_platform::_Components_Component_Fan_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Fan* Components_Component::release_fan() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.fan)
  
  ::openconfig::openconfig_platform::Components_Component_Fan* temp = fan_;
  fan_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Fan* Components_Component::mutable_fan() {
  
  if (fan_ == NULL) {
    fan_ = new ::openconfig::openconfig_platform::Components_Component_Fan;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.fan)
  return fan_;
}
inline void Components_Component::set_allocated_fan(::openconfig::openconfig_platform::Components_Component_Fan* fan) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete fan_;
  }
  if (fan) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      fan = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, fan, submessage_arena);
    }
    
  } else {
    
  }
  fan_ = fan;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.fan)
}

// .openconfig.openconfig_platform.Components.Component.IntegratedCircuit integrated_circuit = 195631273 [(.yext.schemapath) = "/components/component/integrated-circuit"];
inline bool Components_Component::has_integrated_circuit() const {
  return this != internal_default_instance() && integrated_circuit_ != NULL;
}
inline void Components_Component::clear_integrated_circuit() {
  if (GetArenaNoVirtual() == NULL && integrated_circuit_ != NULL) {
    delete integrated_circuit_;
  }
  integrated_circuit_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit& Components_Component::integrated_circuit() const {
  const ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit* p = integrated_circuit_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.integrated_circuit)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit*>(
      &::openconfig::openconfig_platform::_Components_Component_IntegratedCircuit_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit* Components_Component::release_integrated_circuit() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.integrated_circuit)
  
  ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit* temp = integrated_circuit_;
  integrated_circuit_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit* Components_Component::mutable_integrated_circuit() {
  
  if (integrated_circuit_ == NULL) {
    integrated_circuit_ = new ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.integrated_circuit)
  return integrated_circuit_;
}
inline void Components_Component::set_allocated_integrated_circuit(::openconfig::openconfig_platform::Components_Component_IntegratedCircuit* integrated_circuit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete integrated_circuit_;
  }
  if (integrated_circuit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      integrated_circuit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, integrated_circuit, submessage_arena);
    }
    
  } else {
    
  }
  integrated_circuit_ = integrated_circuit;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.integrated_circuit)
}

// .openconfig.openconfig_platform.Components.Component.Linecard linecard = 18894832 [(.yext.schemapath) = "/components/component/linecard"];
inline bool Components_Component::has_linecard() const {
  return this != internal_default_instance() && linecard_ != NULL;
}
inline void Components_Component::clear_linecard() {
  if (GetArenaNoVirtual() == NULL && linecard_ != NULL) {
    delete linecard_;
  }
  linecard_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Linecard& Components_Component::linecard() const {
  const ::openconfig::openconfig_platform::Components_Component_Linecard* p = linecard_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.linecard)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Linecard*>(
      &::openconfig::openconfig_platform::_Components_Component_Linecard_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Linecard* Components_Component::release_linecard() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.linecard)
  
  ::openconfig::openconfig_platform::Components_Component_Linecard* temp = linecard_;
  linecard_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Linecard* Components_Component::mutable_linecard() {
  
  if (linecard_ == NULL) {
    linecard_ = new ::openconfig::openconfig_platform::Components_Component_Linecard;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.linecard)
  return linecard_;
}
inline void Components_Component::set_allocated_linecard(::openconfig::openconfig_platform::Components_Component_Linecard* linecard) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete linecard_;
  }
  if (linecard) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      linecard = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, linecard, submessage_arena);
    }
    
  } else {
    
  }
  linecard_ = linecard;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.linecard)
}

// .openconfig.openconfig_platform.Components.Component.OpticalChannel optical_channel = 465649934 [(.yext.schemapath) = "/components/component/optical-channel"];
inline bool Components_Component::has_optical_channel() const {
  return this != internal_default_instance() && optical_channel_ != NULL;
}
inline void Components_Component::clear_optical_channel() {
  if (GetArenaNoVirtual() == NULL && optical_channel_ != NULL) {
    delete optical_channel_;
  }
  optical_channel_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_OpticalChannel& Components_Component::optical_channel() const {
  const ::openconfig::openconfig_platform::Components_Component_OpticalChannel* p = optical_channel_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.optical_channel)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_OpticalChannel*>(
      &::openconfig::openconfig_platform::_Components_Component_OpticalChannel_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalChannel* Components_Component::release_optical_channel() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.optical_channel)
  
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel* temp = optical_channel_;
  optical_channel_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalChannel* Components_Component::mutable_optical_channel() {
  
  if (optical_channel_ == NULL) {
    optical_channel_ = new ::openconfig::openconfig_platform::Components_Component_OpticalChannel;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.optical_channel)
  return optical_channel_;
}
inline void Components_Component::set_allocated_optical_channel(::openconfig::openconfig_platform::Components_Component_OpticalChannel* optical_channel) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete optical_channel_;
  }
  if (optical_channel) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      optical_channel = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, optical_channel, submessage_arena);
    }
    
  } else {
    
  }
  optical_channel_ = optical_channel;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.optical_channel)
}

// .openconfig.openconfig_platform.Components.Component.OpticalPort optical_port = 101313940 [(.yext.schemapath) = "/components/component/optical-port"];
inline bool Components_Component::has_optical_port() const {
  return this != internal_default_instance() && optical_port_ != NULL;
}
inline void Components_Component::clear_optical_port() {
  if (GetArenaNoVirtual() == NULL && optical_port_ != NULL) {
    delete optical_port_;
  }
  optical_port_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_OpticalPort& Components_Component::optical_port() const {
  const ::openconfig::openconfig_platform::Components_Component_OpticalPort* p = optical_port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.optical_port)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_OpticalPort*>(
      &::openconfig::openconfig_platform::_Components_Component_OpticalPort_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalPort* Components_Component::release_optical_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.optical_port)
  
  ::openconfig::openconfig_platform::Components_Component_OpticalPort* temp = optical_port_;
  optical_port_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_OpticalPort* Components_Component::mutable_optical_port() {
  
  if (optical_port_ == NULL) {
    optical_port_ = new ::openconfig::openconfig_platform::Components_Component_OpticalPort;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.optical_port)
  return optical_port_;
}
inline void Components_Component::set_allocated_optical_port(::openconfig::openconfig_platform::Components_Component_OpticalPort* optical_port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete optical_port_;
  }
  if (optical_port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      optical_port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, optical_port, submessage_arena);
    }
    
  } else {
    
  }
  optical_port_ = optical_port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.optical_port)
}

// .openconfig.openconfig_platform.Components.Component.Port port = 529421081 [(.yext.schemapath) = "/components/component/port"];
inline bool Components_Component::has_port() const {
  return this != internal_default_instance() && port_ != NULL;
}
inline void Components_Component::clear_port() {
  if (GetArenaNoVirtual() == NULL && port_ != NULL) {
    delete port_;
  }
  port_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Port& Components_Component::port() const {
  const ::openconfig::openconfig_platform::Components_Component_Port* p = port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.port)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Port*>(
      &::openconfig::openconfig_platform::_Components_Component_Port_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Port* Components_Component::release_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.port)
  
  ::openconfig::openconfig_platform::Components_Component_Port* temp = port_;
  port_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Port* Components_Component::mutable_port() {
  
  if (port_ == NULL) {
    port_ = new ::openconfig::openconfig_platform::Components_Component_Port;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.port)
  return port_;
}
inline void Components_Component::set_allocated_port(::openconfig::openconfig_platform::Components_Component_Port* port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete port_;
  }
  if (port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, port, submessage_arena);
    }
    
  } else {
    
  }
  port_ = port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.port)
}

// .openconfig.openconfig_platform.Components.Component.PowerSupply power_supply = 438616709 [(.yext.schemapath) = "/components/component/power-supply"];
inline bool Components_Component::has_power_supply() const {
  return this != internal_default_instance() && power_supply_ != NULL;
}
inline void Components_Component::clear_power_supply() {
  if (GetArenaNoVirtual() == NULL && power_supply_ != NULL) {
    delete power_supply_;
  }
  power_supply_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_PowerSupply& Components_Component::power_supply() const {
  const ::openconfig::openconfig_platform::Components_Component_PowerSupply* p = power_supply_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.power_supply)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_PowerSupply*>(
      &::openconfig::openconfig_platform::_Components_Component_PowerSupply_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_PowerSupply* Components_Component::release_power_supply() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.power_supply)
  
  ::openconfig::openconfig_platform::Components_Component_PowerSupply* temp = power_supply_;
  power_supply_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_PowerSupply* Components_Component::mutable_power_supply() {
  
  if (power_supply_ == NULL) {
    power_supply_ = new ::openconfig::openconfig_platform::Components_Component_PowerSupply;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.power_supply)
  return power_supply_;
}
inline void Components_Component::set_allocated_power_supply(::openconfig::openconfig_platform::Components_Component_PowerSupply* power_supply) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete power_supply_;
  }
  if (power_supply) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      power_supply = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, power_supply, submessage_arena);
    }
    
  } else {
    
  }
  power_supply_ = power_supply;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.power_supply)
}

// .openconfig.openconfig_platform.Components.Component.Properties properties = 107529735 [(.yext.schemapath) = "/components/component/properties"];
inline bool Components_Component::has_properties() const {
  return this != internal_default_instance() && properties_ != NULL;
}
inline void Components_Component::clear_properties() {
  if (GetArenaNoVirtual() == NULL && properties_ != NULL) {
    delete properties_;
  }
  properties_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Properties& Components_Component::properties() const {
  const ::openconfig::openconfig_platform::Components_Component_Properties* p = properties_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.properties)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Properties*>(
      &::openconfig::openconfig_platform::_Components_Component_Properties_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Properties* Components_Component::release_properties() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.properties)
  
  ::openconfig::openconfig_platform::Components_Component_Properties* temp = properties_;
  properties_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Properties* Components_Component::mutable_properties() {
  
  if (properties_ == NULL) {
    properties_ = new ::openconfig::openconfig_platform::Components_Component_Properties;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.properties)
  return properties_;
}
inline void Components_Component::set_allocated_properties(::openconfig::openconfig_platform::Components_Component_Properties* properties) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete properties_;
  }
  if (properties) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      properties = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, properties, submessage_arena);
    }
    
  } else {
    
  }
  properties_ = properties;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.properties)
}

// .openconfig.openconfig_platform.Components.Component.State state = 317480023 [(.yext.schemapath) = "/components/component/state"];
inline bool Components_Component::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Components_Component::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_State& Components_Component::state() const {
  const ::openconfig::openconfig_platform::Components_Component_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_State*>(
      &::openconfig::openconfig_platform::_Components_Component_State_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_State* Components_Component::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.state)
  
  ::openconfig::openconfig_platform::Components_Component_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_State* Components_Component::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.state)
  return state_;
}
inline void Components_Component::set_allocated_state(::openconfig::openconfig_platform::Components_Component_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.state)
}

// .openconfig.openconfig_platform.Components.Component.Storage storage = 403943259 [(.yext.schemapath) = "/components/component/storage"];
inline bool Components_Component::has_storage() const {
  return this != internal_default_instance() && storage_ != NULL;
}
inline void Components_Component::clear_storage() {
  if (GetArenaNoVirtual() == NULL && storage_ != NULL) {
    delete storage_;
  }
  storage_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Storage& Components_Component::storage() const {
  const ::openconfig::openconfig_platform::Components_Component_Storage* p = storage_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.storage)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Storage*>(
      &::openconfig::openconfig_platform::_Components_Component_Storage_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Storage* Components_Component::release_storage() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.storage)
  
  ::openconfig::openconfig_platform::Components_Component_Storage* temp = storage_;
  storage_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Storage* Components_Component::mutable_storage() {
  
  if (storage_ == NULL) {
    storage_ = new ::openconfig::openconfig_platform::Components_Component_Storage;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.storage)
  return storage_;
}
inline void Components_Component::set_allocated_storage(::openconfig::openconfig_platform::Components_Component_Storage* storage) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete storage_;
  }
  if (storage) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      storage = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, storage, submessage_arena);
    }
    
  } else {
    
  }
  storage_ = storage;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.storage)
}

// .openconfig.openconfig_platform.Components.Component.Subcomponents subcomponents = 374810450 [(.yext.schemapath) = "/components/component/subcomponents"];
inline bool Components_Component::has_subcomponents() const {
  return this != internal_default_instance() && subcomponents_ != NULL;
}
inline void Components_Component::clear_subcomponents() {
  if (GetArenaNoVirtual() == NULL && subcomponents_ != NULL) {
    delete subcomponents_;
  }
  subcomponents_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Subcomponents& Components_Component::subcomponents() const {
  const ::openconfig::openconfig_platform::Components_Component_Subcomponents* p = subcomponents_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.subcomponents)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Subcomponents*>(
      &::openconfig::openconfig_platform::_Components_Component_Subcomponents_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Subcomponents* Components_Component::release_subcomponents() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.subcomponents)
  
  ::openconfig::openconfig_platform::Components_Component_Subcomponents* temp = subcomponents_;
  subcomponents_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Subcomponents* Components_Component::mutable_subcomponents() {
  
  if (subcomponents_ == NULL) {
    subcomponents_ = new ::openconfig::openconfig_platform::Components_Component_Subcomponents;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.subcomponents)
  return subcomponents_;
}
inline void Components_Component::set_allocated_subcomponents(::openconfig::openconfig_platform::Components_Component_Subcomponents* subcomponents) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete subcomponents_;
  }
  if (subcomponents) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      subcomponents = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, subcomponents, submessage_arena);
    }
    
  } else {
    
  }
  subcomponents_ = subcomponents;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.subcomponents)
}

// .openconfig.openconfig_platform.Components.Component.Transceiver transceiver = 40802250 [(.yext.schemapath) = "/components/component/transceiver"];
inline bool Components_Component::has_transceiver() const {
  return this != internal_default_instance() && transceiver_ != NULL;
}
inline void Components_Component::clear_transceiver() {
  if (GetArenaNoVirtual() == NULL && transceiver_ != NULL) {
    delete transceiver_;
  }
  transceiver_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component_Transceiver& Components_Component::transceiver() const {
  const ::openconfig::openconfig_platform::Components_Component_Transceiver* p = transceiver_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.Component.transceiver)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component_Transceiver*>(
      &::openconfig::openconfig_platform::_Components_Component_Transceiver_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver* Components_Component::release_transceiver() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.Component.transceiver)
  
  ::openconfig::openconfig_platform::Components_Component_Transceiver* temp = transceiver_;
  transceiver_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component_Transceiver* Components_Component::mutable_transceiver() {
  
  if (transceiver_ == NULL) {
    transceiver_ = new ::openconfig::openconfig_platform::Components_Component_Transceiver;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.Component.transceiver)
  return transceiver_;
}
inline void Components_Component::set_allocated_transceiver(::openconfig::openconfig_platform::Components_Component_Transceiver* transceiver) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete transceiver_;
  }
  if (transceiver) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      transceiver = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, transceiver, submessage_arena);
    }
    
  } else {
    
  }
  transceiver_ = transceiver;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.transceiver)
}

// -------------------------------------------------------------------

// Components_ComponentKey

// string name = 1 [(.yext.schemapath) = "/components/component/name"];
inline void Components_ComponentKey::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Components_ComponentKey::name() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.ComponentKey.name)
  return name_.GetNoArena();
}
inline void Components_ComponentKey::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_platform.Components.ComponentKey.name)
}
#if LANG_CXX11
inline void Components_ComponentKey::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_platform.Components.ComponentKey.name)
}
#endif
inline void Components_ComponentKey::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_platform.Components.ComponentKey.name)
}
inline void Components_ComponentKey::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_platform.Components.ComponentKey.name)
}
inline ::std::string* Components_ComponentKey::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.ComponentKey.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Components_ComponentKey::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.ComponentKey.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Components_ComponentKey::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.ComponentKey.name)
}

// .openconfig.openconfig_platform.Components.Component component = 2;
inline bool Components_ComponentKey::has_component() const {
  return this != internal_default_instance() && component_ != NULL;
}
inline void Components_ComponentKey::clear_component() {
  if (GetArenaNoVirtual() == NULL && component_ != NULL) {
    delete component_;
  }
  component_ = NULL;
}
inline const ::openconfig::openconfig_platform::Components_Component& Components_ComponentKey::component() const {
  const ::openconfig::openconfig_platform::Components_Component* p = component_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.ComponentKey.component)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_platform::Components_Component*>(
      &::openconfig::openconfig_platform::_Components_Component_default_instance_);
}
inline ::openconfig::openconfig_platform::Components_Component* Components_ComponentKey::release_component() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_platform.Components.ComponentKey.component)
  
  ::openconfig::openconfig_platform::Components_Component* temp = component_;
  component_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_platform::Components_Component* Components_ComponentKey::mutable_component() {
  
  if (component_ == NULL) {
    component_ = new ::openconfig::openconfig_platform::Components_Component;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.ComponentKey.component)
  return component_;
}
inline void Components_ComponentKey::set_allocated_component(::openconfig::openconfig_platform::Components_Component* component) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete component_;
  }
  if (component) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      component = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, component, submessage_arena);
    }
    
  } else {
    
  }
  component_ = component;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.ComponentKey.component)
}

// -------------------------------------------------------------------

// Components

// repeated .openconfig.openconfig_platform.Components.ComponentKey component = 51431701 [(.yext.schemapath) = "/components/component"];
inline int Components::component_size() const {
  return component_.size();
}
inline void Components::clear_component() {
  component_.Clear();
}
inline const ::openconfig::openconfig_platform::Components_ComponentKey& Components::component(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_platform.Components.component)
  return component_.Get(index);
}
inline ::openconfig::openconfig_platform::Components_ComponentKey* Components::mutable_component(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_platform.Components.component)
  return component_.Mutable(index);
}
inline ::openconfig::openconfig_platform::Components_ComponentKey* Components::add_component() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_platform.Components.component)
  return component_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_platform::Components_ComponentKey >*
Components::mutable_component() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_platform.Components.component)
  return &component_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_platform::Components_ComponentKey >&
Components::component() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_platform.Components.component)
  return component_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace openconfig_platform
}  // namespace openconfig

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::openconfig::openconfig_platform::Components_Component_Transceiver_State_Present> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::openconfig_platform::Components_Component_Transceiver_State_Present>() {
  return ::openconfig::openconfig_platform::Components_Component_Transceiver_State_Present_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto__INCLUDED
