// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: openconfig/openconfig_platform/openconfig_platform.proto

#include "openconfig/openconfig_platform/openconfig_platform.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace openconfig {
namespace openconfig_platform {
class Components_Component_Backplane_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Backplane_Config>
      _instance;
} _Components_Component_Backplane_Config_default_instance_;
class Components_Component_Backplane_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Backplane_State>
      _instance;
} _Components_Component_Backplane_State_default_instance_;
class Components_Component_BackplaneDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Backplane>
      _instance;
} _Components_Component_Backplane_default_instance_;
class Components_Component_Chassis_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Chassis_Config>
      _instance;
} _Components_Component_Chassis_Config_default_instance_;
class Components_Component_Chassis_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Chassis_State>
      _instance;
} _Components_Component_Chassis_State_default_instance_;
class Components_Component_ChassisDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Chassis>
      _instance;
} _Components_Component_Chassis_default_instance_;
class Components_Component_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Config>
      _instance;
} _Components_Component_Config_default_instance_;
class Components_Component_Cpu_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Cpu_Config>
      _instance;
} _Components_Component_Cpu_Config_default_instance_;
class Components_Component_Cpu_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Cpu_State>
      _instance;
} _Components_Component_Cpu_State_default_instance_;
class Components_Component_Cpu_Utilization_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Cpu_Utilization_State>
      _instance;
} _Components_Component_Cpu_Utilization_State_default_instance_;
class Components_Component_Cpu_UtilizationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Cpu_Utilization>
      _instance;
} _Components_Component_Cpu_Utilization_default_instance_;
class Components_Component_CpuDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Cpu>
      _instance;
} _Components_Component_Cpu_default_instance_;
class Components_Component_Fabric_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Fabric_Config>
      _instance;
} _Components_Component_Fabric_Config_default_instance_;
class Components_Component_Fabric_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Fabric_State>
      _instance;
} _Components_Component_Fabric_State_default_instance_;
class Components_Component_FabricDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Fabric>
      _instance;
} _Components_Component_Fabric_default_instance_;
class Components_Component_Fan_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Fan_Config>
      _instance;
} _Components_Component_Fan_Config_default_instance_;
class Components_Component_Fan_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Fan_State>
      _instance;
} _Components_Component_Fan_State_default_instance_;
class Components_Component_FanDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Fan>
      _instance;
} _Components_Component_Fan_default_instance_;
class Components_Component_IntegratedCircuit_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_IntegratedCircuit_Config>
      _instance;
} _Components_Component_IntegratedCircuit_Config_default_instance_;
class Components_Component_IntegratedCircuit_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_IntegratedCircuit_State>
      _instance;
} _Components_Component_IntegratedCircuit_State_default_instance_;
class Components_Component_IntegratedCircuitDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_IntegratedCircuit>
      _instance;
} _Components_Component_IntegratedCircuit_default_instance_;
class Components_Component_Linecard_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Linecard_Config>
      _instance;
} _Components_Component_Linecard_Config_default_instance_;
class Components_Component_Linecard_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Linecard_State>
      _instance;
} _Components_Component_Linecard_State_default_instance_;
class Components_Component_LinecardDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Linecard>
      _instance;
} _Components_Component_Linecard_default_instance_;
class Components_Component_OpticalChannel_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_OpticalChannel_Config>
      _instance;
} _Components_Component_OpticalChannel_Config_default_instance_;
class Components_Component_OpticalChannel_State_ChromaticDispersionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_OpticalChannel_State_ChromaticDispersion>
      _instance;
} _Components_Component_OpticalChannel_State_ChromaticDispersion_default_instance_;
class Components_Component_OpticalChannel_State_InputPowerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_OpticalChannel_State_InputPower>
      _instance;
} _Components_Component_OpticalChannel_State_InputPower_default_instance_;
class Components_Component_OpticalChannel_State_LaserBiasCurrentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_OpticalChannel_State_LaserBiasCurrent>
      _instance;
} _Components_Component_OpticalChannel_State_LaserBiasCurrent_default_instance_;
class Components_Component_OpticalChannel_State_OutputPowerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_OpticalChannel_State_OutputPower>
      _instance;
} _Components_Component_OpticalChannel_State_OutputPower_default_instance_;
class Components_Component_OpticalChannel_State_PolarizationDependentLossDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_OpticalChannel_State_PolarizationDependentLoss>
      _instance;
} _Components_Component_OpticalChannel_State_PolarizationDependentLoss_default_instance_;
class Components_Component_OpticalChannel_State_PolarizationModeDispersionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_OpticalChannel_State_PolarizationModeDispersion>
      _instance;
} _Components_Component_OpticalChannel_State_PolarizationModeDispersion_default_instance_;
class Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion>
      _instance;
} _Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion_default_instance_;
class Components_Component_OpticalChannel_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_OpticalChannel_State>
      _instance;
} _Components_Component_OpticalChannel_State_default_instance_;
class Components_Component_OpticalChannelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_OpticalChannel>
      _instance;
} _Components_Component_OpticalChannel_default_instance_;
class Components_Component_OpticalPort_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_OpticalPort_Config>
      _instance;
} _Components_Component_OpticalPort_Config_default_instance_;
class Components_Component_OpticalPort_State_InputPowerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_OpticalPort_State_InputPower>
      _instance;
} _Components_Component_OpticalPort_State_InputPower_default_instance_;
class Components_Component_OpticalPort_State_OutputPowerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_OpticalPort_State_OutputPower>
      _instance;
} _Components_Component_OpticalPort_State_OutputPower_default_instance_;
class Components_Component_OpticalPort_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_OpticalPort_State>
      _instance;
} _Components_Component_OpticalPort_State_default_instance_;
class Components_Component_OpticalPortDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_OpticalPort>
      _instance;
} _Components_Component_OpticalPort_default_instance_;
class Components_Component_Port_BreakoutMode_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Port_BreakoutMode_Config>
      _instance;
} _Components_Component_Port_BreakoutMode_Config_default_instance_;
class Components_Component_Port_BreakoutMode_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Port_BreakoutMode_State>
      _instance;
} _Components_Component_Port_BreakoutMode_State_default_instance_;
class Components_Component_Port_BreakoutModeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Port_BreakoutMode>
      _instance;
} _Components_Component_Port_BreakoutMode_default_instance_;
class Components_Component_Port_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Port_Config>
      _instance;
} _Components_Component_Port_Config_default_instance_;
class Components_Component_Port_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Port_State>
      _instance;
} _Components_Component_Port_State_default_instance_;
class Components_Component_PortDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Port>
      _instance;
} _Components_Component_Port_default_instance_;
class Components_Component_PowerSupply_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_PowerSupply_Config>
      _instance;
} _Components_Component_PowerSupply_Config_default_instance_;
class Components_Component_PowerSupply_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_PowerSupply_State>
      _instance;
} _Components_Component_PowerSupply_State_default_instance_;
class Components_Component_PowerSupplyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_PowerSupply>
      _instance;
} _Components_Component_PowerSupply_default_instance_;
class Components_Component_Properties_Property_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Properties_Property_Config>
      _instance;
  bool value_bool_;
  ::google::protobuf::int64 value_sint64_;
  ::google::protobuf::internal::ArenaStringPtr value_string_;
  ::google::protobuf::uint64 value_uint64_;
  const ::ywrapper::Decimal64Value* value_decimal64value_;
} _Components_Component_Properties_Property_Config_default_instance_;
class Components_Component_Properties_Property_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Properties_Property_State>
      _instance;
  bool value_bool_;
  ::google::protobuf::int64 value_sint64_;
  ::google::protobuf::internal::ArenaStringPtr value_string_;
  ::google::protobuf::uint64 value_uint64_;
  const ::ywrapper::Decimal64Value* value_decimal64value_;
} _Components_Component_Properties_Property_State_default_instance_;
class Components_Component_Properties_PropertyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Properties_Property>
      _instance;
} _Components_Component_Properties_Property_default_instance_;
class Components_Component_Properties_PropertyKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Properties_PropertyKey>
      _instance;
} _Components_Component_Properties_PropertyKey_default_instance_;
class Components_Component_PropertiesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Properties>
      _instance;
} _Components_Component_Properties_default_instance_;
class Components_Component_State_MemoryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_State_Memory>
      _instance;
} _Components_Component_State_Memory_default_instance_;
class Components_Component_State_TemperatureDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_State_Temperature>
      _instance;
} _Components_Component_State_Temperature_default_instance_;
class Components_Component_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_State>
      _instance;
  int type_openconfigplatformtypesopenconfighardwarecomponent_;
  int type_openconfigplatformtypesopenconfigsoftwarecomponent_;
} _Components_Component_State_default_instance_;
class Components_Component_Storage_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Storage_Config>
      _instance;
} _Components_Component_Storage_Config_default_instance_;
class Components_Component_Storage_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Storage_State>
      _instance;
} _Components_Component_Storage_State_default_instance_;
class Components_Component_StorageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Storage>
      _instance;
} _Components_Component_Storage_default_instance_;
class Components_Component_Subcomponents_Subcomponent_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Subcomponents_Subcomponent_Config>
      _instance;
} _Components_Component_Subcomponents_Subcomponent_Config_default_instance_;
class Components_Component_Subcomponents_Subcomponent_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Subcomponents_Subcomponent_State>
      _instance;
} _Components_Component_Subcomponents_Subcomponent_State_default_instance_;
class Components_Component_Subcomponents_SubcomponentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Subcomponents_Subcomponent>
      _instance;
} _Components_Component_Subcomponents_Subcomponent_default_instance_;
class Components_Component_Subcomponents_SubcomponentKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Subcomponents_SubcomponentKey>
      _instance;
} _Components_Component_Subcomponents_SubcomponentKey_default_instance_;
class Components_Component_SubcomponentsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Subcomponents>
      _instance;
} _Components_Component_Subcomponents_default_instance_;
class Components_Component_Transceiver_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Transceiver_Config>
      _instance;
} _Components_Component_Transceiver_Config_default_instance_;
class Components_Component_Transceiver_PhysicalChannels_Channel_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Transceiver_PhysicalChannels_Channel_Config>
      _instance;
} _Components_Component_Transceiver_PhysicalChannels_Channel_Config_default_instance_;
class Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPowerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower>
      _instance;
} _Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower_default_instance_;
class Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent>
      _instance;
} _Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent_default_instance_;
class Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPowerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower>
      _instance;
} _Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower_default_instance_;
class Components_Component_Transceiver_PhysicalChannels_Channel_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Transceiver_PhysicalChannels_Channel_State>
      _instance;
} _Components_Component_Transceiver_PhysicalChannels_Channel_State_default_instance_;
class Components_Component_Transceiver_PhysicalChannels_ChannelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Transceiver_PhysicalChannels_Channel>
      _instance;
} _Components_Component_Transceiver_PhysicalChannels_Channel_default_instance_;
class Components_Component_Transceiver_PhysicalChannels_ChannelKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Transceiver_PhysicalChannels_ChannelKey>
      _instance;
} _Components_Component_Transceiver_PhysicalChannels_ChannelKey_default_instance_;
class Components_Component_Transceiver_PhysicalChannelsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Transceiver_PhysicalChannels>
      _instance;
} _Components_Component_Transceiver_PhysicalChannels_default_instance_;
class Components_Component_Transceiver_State_InputPowerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Transceiver_State_InputPower>
      _instance;
} _Components_Component_Transceiver_State_InputPower_default_instance_;
class Components_Component_Transceiver_State_LaserBiasCurrentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Transceiver_State_LaserBiasCurrent>
      _instance;
} _Components_Component_Transceiver_State_LaserBiasCurrent_default_instance_;
class Components_Component_Transceiver_State_OutputPowerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Transceiver_State_OutputPower>
      _instance;
} _Components_Component_Transceiver_State_OutputPower_default_instance_;
class Components_Component_Transceiver_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Transceiver_State>
      _instance;
} _Components_Component_Transceiver_State_default_instance_;
class Components_Component_TransceiverDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component_Transceiver>
      _instance;
} _Components_Component_Transceiver_default_instance_;
class Components_ComponentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_Component>
      _instance;
} _Components_Component_default_instance_;
class Components_ComponentKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components_ComponentKey>
      _instance;
} _Components_ComponentKey_default_instance_;
class ComponentsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Components>
      _instance;
} _Components_default_instance_;
}  // namespace openconfig_platform
}  // namespace openconfig
namespace protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto {
void InitDefaultsComponents_Component_Backplane_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Backplane_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Backplane_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Backplane_Config::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Backplane_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Backplane_ConfigImpl);
}

void InitDefaultsComponents_Component_Backplane_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Backplane_State_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Backplane_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Backplane_State::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Backplane_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Backplane_StateImpl);
}

void InitDefaultsComponents_Component_BackplaneImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Backplane_Config();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Backplane_State();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Backplane_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Backplane();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Backplane::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Backplane() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_BackplaneImpl);
}

void InitDefaultsComponents_Component_Chassis_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Chassis_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Chassis_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Chassis_Config::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Chassis_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Chassis_ConfigImpl);
}

void InitDefaultsComponents_Component_Chassis_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Chassis_State_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Chassis_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Chassis_State::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Chassis_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Chassis_StateImpl);
}

void InitDefaultsComponents_Component_ChassisImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Chassis_Config();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Chassis_State();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Chassis_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Chassis();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Chassis::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Chassis() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_ChassisImpl);
}

void InitDefaultsComponents_Component_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Config::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_ConfigImpl);
}

void InitDefaultsComponents_Component_Cpu_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Cpu_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Cpu_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Cpu_Config::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Cpu_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Cpu_ConfigImpl);
}

void InitDefaultsComponents_Component_Cpu_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Cpu_State_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Cpu_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Cpu_State::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Cpu_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Cpu_StateImpl);
}

void InitDefaultsComponents_Component_Cpu_Utilization_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Cpu_Utilization_State_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization_State::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Cpu_Utilization_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Cpu_Utilization_StateImpl);
}

void InitDefaultsComponents_Component_Cpu_UtilizationImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Cpu_Utilization_State();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Cpu_Utilization_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Cpu_Utilization() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Cpu_UtilizationImpl);
}

void InitDefaultsComponents_Component_CpuImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Cpu_Config();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Cpu_State();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Cpu_Utilization();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Cpu_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Cpu();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Cpu::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Cpu() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_CpuImpl);
}

void InitDefaultsComponents_Component_Fabric_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Fabric_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Fabric_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Fabric_Config::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Fabric_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Fabric_ConfigImpl);
}

void InitDefaultsComponents_Component_Fabric_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Fabric_State_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Fabric_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Fabric_State::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Fabric_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Fabric_StateImpl);
}

void InitDefaultsComponents_Component_FabricImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Fabric_Config();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Fabric_State();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Fabric_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Fabric();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Fabric::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Fabric() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_FabricImpl);
}

void InitDefaultsComponents_Component_Fan_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Fan_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Fan_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Fan_Config::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Fan_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Fan_ConfigImpl);
}

void InitDefaultsComponents_Component_Fan_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Fan_State_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Fan_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Fan_State::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Fan_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Fan_StateImpl);
}

void InitDefaultsComponents_Component_FanImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Fan_Config();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Fan_State();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Fan_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Fan();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Fan::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Fan() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_FanImpl);
}

void InitDefaultsComponents_Component_IntegratedCircuit_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_IntegratedCircuit_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_Config::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_IntegratedCircuit_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_IntegratedCircuit_ConfigImpl);
}

void InitDefaultsComponents_Component_IntegratedCircuit_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_IntegratedCircuit_State_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_State::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_IntegratedCircuit_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_IntegratedCircuit_StateImpl);
}

void InitDefaultsComponents_Component_IntegratedCircuitImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_IntegratedCircuit_Config();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_IntegratedCircuit_State();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_IntegratedCircuit_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_IntegratedCircuit() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_IntegratedCircuitImpl);
}

void InitDefaultsComponents_Component_Linecard_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Linecard_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Linecard_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Linecard_Config::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Linecard_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Linecard_ConfigImpl);
}

void InitDefaultsComponents_Component_Linecard_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Linecard_State_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Linecard_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Linecard_State::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Linecard_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Linecard_StateImpl);
}

void InitDefaultsComponents_Component_LinecardImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Linecard_Config();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Linecard_State();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Linecard_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Linecard();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Linecard::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Linecard() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_LinecardImpl);
}

void InitDefaultsComponents_Component_OpticalChannel_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_OpticalChannel_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_OpticalChannel_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_Config::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_OpticalChannel_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_OpticalChannel_ConfigImpl);
}

void InitDefaultsComponents_Component_OpticalChannel_State_ChromaticDispersionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_ChromaticDispersion_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_ChromaticDispersion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_ChromaticDispersion::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_OpticalChannel_State_ChromaticDispersion() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_OpticalChannel_State_ChromaticDispersionImpl);
}

void InitDefaultsComponents_Component_OpticalChannel_State_InputPowerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_InputPower_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_InputPower();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_InputPower::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_OpticalChannel_State_InputPower() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_OpticalChannel_State_InputPowerImpl);
}

void InitDefaultsComponents_Component_OpticalChannel_State_LaserBiasCurrentImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_LaserBiasCurrent_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_LaserBiasCurrent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_LaserBiasCurrent::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_OpticalChannel_State_LaserBiasCurrent() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_OpticalChannel_State_LaserBiasCurrentImpl);
}

void InitDefaultsComponents_Component_OpticalChannel_State_OutputPowerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_OutputPower_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_OutputPower();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_OutputPower::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_OpticalChannel_State_OutputPower() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_OpticalChannel_State_OutputPowerImpl);
}

void InitDefaultsComponents_Component_OpticalChannel_State_PolarizationDependentLossImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_PolarizationDependentLoss_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationDependentLoss();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationDependentLoss::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_OpticalChannel_State_PolarizationDependentLoss() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_OpticalChannel_State_PolarizationDependentLossImpl);
}

void InitDefaultsComponents_Component_OpticalChannel_State_PolarizationModeDispersionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_PolarizationModeDispersion_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationModeDispersion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationModeDispersion::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_OpticalChannel_State_PolarizationModeDispersion() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_OpticalChannel_State_PolarizationModeDispersionImpl);
}

void InitDefaultsComponents_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersionImpl);
}

void InitDefaultsComponents_Component_OpticalChannel_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_ChromaticDispersion();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_InputPower();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_LaserBiasCurrent();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_OutputPower();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_PolarizationDependentLoss();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_PolarizationModeDispersion();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_OpticalChannel_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_OpticalChannel_StateImpl);
}

void InitDefaultsComponents_Component_OpticalChannelImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_Config();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_OpticalChannel_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_OpticalChannel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_OpticalChannel::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_OpticalChannel() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_OpticalChannelImpl);
}

void InitDefaultsComponents_Component_OpticalPort_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_OpticalPort_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_OpticalPort_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_OpticalPort_Config::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_OpticalPort_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_OpticalPort_ConfigImpl);
}

void InitDefaultsComponents_Component_OpticalPort_State_InputPowerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_OpticalPort_State_InputPower_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_InputPower();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_InputPower::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_OpticalPort_State_InputPower() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_OpticalPort_State_InputPowerImpl);
}

void InitDefaultsComponents_Component_OpticalPort_State_OutputPowerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_OpticalPort_State_OutputPower_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_OutputPower();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_OutputPower::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_OpticalPort_State_OutputPower() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_OpticalPort_State_OutputPowerImpl);
}

void InitDefaultsComponents_Component_OpticalPort_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalPort_State_InputPower();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalPort_State_OutputPower();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_OpticalPort_State_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_OpticalPort_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_OpticalPort_State::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_OpticalPort_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_OpticalPort_StateImpl);
}

void InitDefaultsComponents_Component_OpticalPortImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalPort_Config();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalPort_State();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_OpticalPort_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_OpticalPort();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_OpticalPort::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_OpticalPort() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_OpticalPortImpl);
}

void InitDefaultsComponents_Component_Port_BreakoutMode_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Port_BreakoutMode_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_Config::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Port_BreakoutMode_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Port_BreakoutMode_ConfigImpl);
}

void InitDefaultsComponents_Component_Port_BreakoutMode_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Port_BreakoutMode_State_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_State::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Port_BreakoutMode_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Port_BreakoutMode_StateImpl);
}

void InitDefaultsComponents_Component_Port_BreakoutModeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Port_BreakoutMode_Config();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Port_BreakoutMode_State();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Port_BreakoutMode_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Port_BreakoutMode() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Port_BreakoutModeImpl);
}

void InitDefaultsComponents_Component_Port_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Port_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Port_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Port_Config::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Port_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Port_ConfigImpl);
}

void InitDefaultsComponents_Component_Port_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Port_State_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Port_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Port_State::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Port_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Port_StateImpl);
}

void InitDefaultsComponents_Component_PortImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Port_BreakoutMode();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Port_Config();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Port_State();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Port_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Port();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Port::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Port() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_PortImpl);
}

void InitDefaultsComponents_Component_PowerSupply_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBoolValue();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_PowerSupply_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_PowerSupply_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_PowerSupply_Config::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_PowerSupply_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_PowerSupply_ConfigImpl);
}

void InitDefaultsComponents_Component_PowerSupply_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBytesValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBoolValue();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_PowerSupply_State_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_PowerSupply_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_PowerSupply_State::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_PowerSupply_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_PowerSupply_StateImpl);
}

void InitDefaultsComponents_Component_PowerSupplyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_PowerSupply_Config();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_PowerSupply_State();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_PowerSupply_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_PowerSupply();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_PowerSupply::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_PowerSupply() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_PowerSupplyImpl);
}

void InitDefaultsComponents_Component_Properties_Property_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Properties_Property_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Properties_Property_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Properties_Property_Config::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Properties_Property_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Properties_Property_ConfigImpl);
}

void InitDefaultsComponents_Component_Properties_Property_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBoolValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Properties_Property_State_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Properties_Property_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Properties_Property_State::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Properties_Property_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Properties_Property_StateImpl);
}

void InitDefaultsComponents_Component_Properties_PropertyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Properties_Property_Config();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Properties_Property_State();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Properties_Property_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Properties_Property();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Properties_Property::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Properties_Property() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Properties_PropertyImpl);
}

void InitDefaultsComponents_Component_Properties_PropertyKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Properties_Property();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Properties_PropertyKey_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Properties_PropertyKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Properties_PropertyKey::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Properties_PropertyKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Properties_PropertyKeyImpl);
}

void InitDefaultsComponents_Component_PropertiesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Properties_PropertyKey();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Properties_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Properties();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Properties::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Properties() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_PropertiesImpl);
}

void InitDefaultsComponents_Component_State_MemoryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_State_Memory_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_State_Memory();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_State_Memory::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_State_Memory() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_State_MemoryImpl);
}

void InitDefaultsComponents_Component_State_TemperatureImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBoolValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_State_Temperature_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_State_Temperature();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_State_Temperature::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_State_Temperature() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_State_TemperatureImpl);
}

void InitDefaultsComponents_Component_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBoolValue();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_State_Memory();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_State_Temperature();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_State_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_State::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_StateImpl);
}

void InitDefaultsComponents_Component_Storage_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Storage_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Storage_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Storage_Config::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Storage_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Storage_ConfigImpl);
}

void InitDefaultsComponents_Component_Storage_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Storage_State_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Storage_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Storage_State::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Storage_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Storage_StateImpl);
}

void InitDefaultsComponents_Component_StorageImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Storage_Config();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Storage_State();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Storage_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Storage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Storage::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Storage() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_StorageImpl);
}

void InitDefaultsComponents_Component_Subcomponents_Subcomponent_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Subcomponents_Subcomponent_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_Config::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Subcomponents_Subcomponent_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Subcomponents_Subcomponent_ConfigImpl);
}

void InitDefaultsComponents_Component_Subcomponents_Subcomponent_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Subcomponents_Subcomponent_State_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_State::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Subcomponents_Subcomponent_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Subcomponents_Subcomponent_StateImpl);
}

void InitDefaultsComponents_Component_Subcomponents_SubcomponentImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Subcomponents_Subcomponent_Config();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Subcomponents_Subcomponent_State();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Subcomponents_Subcomponent_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Subcomponents_Subcomponent() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Subcomponents_SubcomponentImpl);
}

void InitDefaultsComponents_Component_Subcomponents_SubcomponentKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Subcomponents_Subcomponent();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Subcomponents_SubcomponentKey_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Subcomponents_SubcomponentKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Subcomponents_SubcomponentKey::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Subcomponents_SubcomponentKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Subcomponents_SubcomponentKeyImpl);
}

void InitDefaultsComponents_Component_SubcomponentsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Subcomponents_SubcomponentKey();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Subcomponents_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Subcomponents();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Subcomponents::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Subcomponents() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_SubcomponentsImpl);
}

void InitDefaultsComponents_Component_Transceiver_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBoolValue();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Transceiver_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Transceiver_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Transceiver_Config::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Transceiver_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Transceiver_ConfigImpl);
}

void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBoolValue();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_Config::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_ConfigImpl);
}

void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_InputPowerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_InputPower() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_InputPowerImpl);
}

void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrentImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrentImpl);
}

void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_OutputPowerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_OutputPowerImpl);
}

void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_InputPower();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBoolValue();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_StateImpl);
}

void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_ChannelImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_Config();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Transceiver_PhysicalChannels_ChannelImpl);
}

void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_ChannelKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_ChannelKey_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_ChannelKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_ChannelKey::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Transceiver_PhysicalChannels_ChannelKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Transceiver_PhysicalChannels_ChannelKeyImpl);
}

void InitDefaultsComponents_Component_Transceiver_PhysicalChannelsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_ChannelKey();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Transceiver_PhysicalChannels() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Transceiver_PhysicalChannelsImpl);
}

void InitDefaultsComponents_Component_Transceiver_State_InputPowerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Transceiver_State_InputPower_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Transceiver_State_InputPower();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Transceiver_State_InputPower::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Transceiver_State_InputPower() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Transceiver_State_InputPowerImpl);
}

void InitDefaultsComponents_Component_Transceiver_State_LaserBiasCurrentImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Transceiver_State_LaserBiasCurrent_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Transceiver_State_LaserBiasCurrent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Transceiver_State_LaserBiasCurrent::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Transceiver_State_LaserBiasCurrent() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Transceiver_State_LaserBiasCurrentImpl);
}

void InitDefaultsComponents_Component_Transceiver_State_OutputPowerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Transceiver_State_OutputPower_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Transceiver_State_OutputPower();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Transceiver_State_OutputPower::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Transceiver_State_OutputPower() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Transceiver_State_OutputPowerImpl);
}

void InitDefaultsComponents_Component_Transceiver_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBoolValue();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_State_InputPower();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsIntValue();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_State_LaserBiasCurrent();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_State_OutputPower();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Transceiver_State_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Transceiver_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Transceiver_State::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Transceiver_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_Transceiver_StateImpl);
}

void InitDefaultsComponents_Component_TransceiverImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_Config();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_State();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_Transceiver_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component_Transceiver();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component_Transceiver::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component_Transceiver() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_Component_TransceiverImpl);
}

void InitDefaultsComponents_ComponentImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Backplane();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Chassis();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Config();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Cpu();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Fabric();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Fan();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_IntegratedCircuit();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Linecard();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalPort();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Port();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_PowerSupply();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Properties();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_State();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Storage();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Subcomponents();
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_Component_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_Component();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_Component::InitAsDefaultInstance();
}

void InitDefaultsComponents_Component() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_ComponentImpl);
}

void InitDefaultsComponents_ComponentKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_ComponentKey_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components_ComponentKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components_ComponentKey::InitAsDefaultInstance();
}

void InitDefaultsComponents_ComponentKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponents_ComponentKeyImpl);
}

void InitDefaultsComponentsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_ComponentKey();
  {
    void* ptr = &::openconfig::openconfig_platform::_Components_default_instance_;
    new (ptr) ::openconfig::openconfig_platform::Components();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_platform::Components::InitAsDefaultInstance();
}

void InitDefaultsComponents() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsComponentsImpl);
}

::google::protobuf::Metadata file_level_metadata[81];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Backplane_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Backplane_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Backplane, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Backplane, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Backplane, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Chassis_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Chassis_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Chassis, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Chassis, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Chassis, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Config, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Cpu_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Cpu_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Cpu_Utilization_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Cpu_Utilization_State, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Cpu_Utilization_State, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Cpu_Utilization_State, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Cpu_Utilization_State, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Cpu_Utilization_State, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Cpu_Utilization, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Cpu_Utilization, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Cpu, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Cpu, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Cpu, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Cpu, utilization_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Fabric_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Fabric_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Fabric, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Fabric, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Fabric, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Fan_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Fan_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Fan_State, speed_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Fan, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Fan, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Fan, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_IntegratedCircuit, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_IntegratedCircuit, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_IntegratedCircuit, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Linecard_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Linecard_Config, power_admin_state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Linecard_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Linecard_State, power_admin_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Linecard_State, slot_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Linecard, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Linecard, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Linecard, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_Config, frequency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_Config, line_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_Config, operational_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_Config, target_output_power_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_ChromaticDispersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_ChromaticDispersion, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_ChromaticDispersion, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_ChromaticDispersion, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_ChromaticDispersion, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_InputPower, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_InputPower, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_InputPower, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_InputPower, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_InputPower, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_InputPower, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_LaserBiasCurrent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_LaserBiasCurrent, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_LaserBiasCurrent, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_LaserBiasCurrent, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_LaserBiasCurrent, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_LaserBiasCurrent, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_OutputPower, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_OutputPower, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_OutputPower, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_OutputPower, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_OutputPower, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_OutputPower, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationDependentLoss, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationDependentLoss, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationDependentLoss, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationDependentLoss, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationDependentLoss, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationDependentLoss, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationModeDispersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationModeDispersion, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationModeDispersion, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationModeDispersion, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationModeDispersion, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State, chromatic_dispersion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State, frequency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State, group_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State, input_power_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State, laser_bias_current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State, line_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State, operational_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State, output_power_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State, polarization_dependent_loss_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State, polarization_mode_dispersion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State, second_order_polarization_mode_dispersion_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State, target_output_power_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalChannel, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalPort_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalPort_Config, admin_state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalPort_State_InputPower, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalPort_State_InputPower, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalPort_State_InputPower, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalPort_State_InputPower, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalPort_State_InputPower, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalPort_State_InputPower, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalPort_State_OutputPower, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalPort_State_OutputPower, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalPort_State_OutputPower, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalPort_State_OutputPower, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalPort_State_OutputPower, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalPort_State_OutputPower, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalPort_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalPort_State, admin_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalPort_State, input_power_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalPort_State, optical_port_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalPort_State, output_power_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalPort, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalPort, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_OpticalPort, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_Config, channel_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_Config, num_channels_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_State, channel_speed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_State, num_channels_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Port_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Port_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Port, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Port, breakout_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Port, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Port, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_PowerSupply_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_PowerSupply_Config, enabled_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_PowerSupply_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_PowerSupply_State, capacity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_PowerSupply_State, enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_PowerSupply_State, input_current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_PowerSupply_State, input_voltage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_PowerSupply_State, output_current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_PowerSupply_State, output_power_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_PowerSupply_State, output_voltage_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_PowerSupply, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_PowerSupply, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_PowerSupply, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Properties_Property_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Properties_Property_Config, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Properties_Property_Config, name_),
  offsetof(::openconfig::openconfig_platform::Components_Component_Properties_Property_ConfigDefaultTypeInternal, value_bool_),
  offsetof(::openconfig::openconfig_platform::Components_Component_Properties_Property_ConfigDefaultTypeInternal, value_sint64_),
  offsetof(::openconfig::openconfig_platform::Components_Component_Properties_Property_ConfigDefaultTypeInternal, value_string_),
  offsetof(::openconfig::openconfig_platform::Components_Component_Properties_Property_ConfigDefaultTypeInternal, value_uint64_),
  offsetof(::openconfig::openconfig_platform::Components_Component_Properties_Property_ConfigDefaultTypeInternal, value_decimal64value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Properties_Property_Config, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Properties_Property_State, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Properties_Property_State, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Properties_Property_State, configurable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Properties_Property_State, name_),
  offsetof(::openconfig::openconfig_platform::Components_Component_Properties_Property_StateDefaultTypeInternal, value_bool_),
  offsetof(::openconfig::openconfig_platform::Components_Component_Properties_Property_StateDefaultTypeInternal, value_sint64_),
  offsetof(::openconfig::openconfig_platform::Components_Component_Properties_Property_StateDefaultTypeInternal, value_string_),
  offsetof(::openconfig::openconfig_platform::Components_Component_Properties_Property_StateDefaultTypeInternal, value_uint64_),
  offsetof(::openconfig::openconfig_platform::Components_Component_Properties_Property_StateDefaultTypeInternal, value_decimal64value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Properties_Property_State, value_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Properties_Property, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Properties_Property, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Properties_Property, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Properties_PropertyKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Properties_PropertyKey, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Properties_PropertyKey, property_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Properties, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Properties, property_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State_Memory, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State_Memory, available_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State_Memory, utilized_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State_Temperature, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State_Temperature, alarm_severity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State_Temperature, alarm_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State_Temperature, alarm_threshold_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State_Temperature, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State_Temperature, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State_Temperature, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State_Temperature, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State_Temperature, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State, allocated_power_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State, entity_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State, equipment_failure_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State, equipment_mismatch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State, firmware_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State, hardware_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State, memory_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State, mfg_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State, oper_status_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State, part_no_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State, serial_no_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State, software_version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State, temperature_),
  offsetof(::openconfig::openconfig_platform::Components_Component_StateDefaultTypeInternal, type_openconfigplatformtypesopenconfighardwarecomponent_),
  offsetof(::openconfig::openconfig_platform::Components_Component_StateDefaultTypeInternal, type_openconfigplatformtypesopenconfigsoftwarecomponent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State, used_power_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_State, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Storage_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Storage_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Storage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Storage, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Storage, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_Config, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_State, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Subcomponents_SubcomponentKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Subcomponents_SubcomponentKey, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Subcomponents_SubcomponentKey, subcomponent_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Subcomponents, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Subcomponents, subcomponent_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_Config, enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_Config, ethernet_pmd_preconf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_Config, form_factor_preconf_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_Config, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_Config, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_Config, target_output_power_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_Config, tx_laser_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State, input_power_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State, laser_bias_current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State, output_frequency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State, output_power_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State, target_output_power_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State, tx_laser_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_ChannelKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_ChannelKey, index_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_ChannelKey, channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels, channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State_InputPower, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State_InputPower, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State_InputPower, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State_InputPower, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State_InputPower, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State_InputPower, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State_LaserBiasCurrent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State_LaserBiasCurrent, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State_LaserBiasCurrent, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State_LaserBiasCurrent, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State_LaserBiasCurrent, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State_LaserBiasCurrent, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State_OutputPower, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State_OutputPower, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State_OutputPower, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State_OutputPower, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State_OutputPower, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State_OutputPower, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State, connector_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State, date_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State, enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State, ethernet_pmd_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State, ethernet_pmd_preconf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State, fault_condition_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State, form_factor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State, form_factor_preconf_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State, input_power_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State, internal_temp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State, laser_bias_current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State, otn_compliance_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State, output_power_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State, present_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State, serial_no_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State, sonet_sdh_compliance_code_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State, vendor_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State, vendor_part_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver_State, vendor_rev_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver, physical_channels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component_Transceiver, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component, backplane_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component, chassis_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component, cpu_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component, fabric_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component, fan_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component, integrated_circuit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component, linecard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component, optical_channel_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component, optical_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component, power_supply_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component, properties_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component, storage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component, subcomponents_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_Component, transceiver_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_ComponentKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_ComponentKey, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components_ComponentKey, component_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_platform::Components, component_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Backplane_Config)},
  { 5, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Backplane_State)},
  { 10, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Backplane)},
  { 17, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Chassis_Config)},
  { 22, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Chassis_State)},
  { 27, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Chassis)},
  { 34, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Config)},
  { 40, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Cpu_Config)},
  { 45, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Cpu_State)},
  { 50, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Cpu_Utilization_State)},
  { 60, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Cpu_Utilization)},
  { 66, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Cpu)},
  { 74, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Fabric_Config)},
  { 79, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Fabric_State)},
  { 84, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Fabric)},
  { 91, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Fan_Config)},
  { 96, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Fan_State)},
  { 102, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Fan)},
  { 109, -1, sizeof(::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_Config)},
  { 114, -1, sizeof(::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_State)},
  { 119, -1, sizeof(::openconfig::openconfig_platform::Components_Component_IntegratedCircuit)},
  { 126, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Linecard_Config)},
  { 132, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Linecard_State)},
  { 139, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Linecard)},
  { 146, -1, sizeof(::openconfig::openconfig_platform::Components_Component_OpticalChannel_Config)},
  { 155, -1, sizeof(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_ChromaticDispersion)},
  { 164, -1, sizeof(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_InputPower)},
  { 174, -1, sizeof(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_LaserBiasCurrent)},
  { 184, -1, sizeof(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_OutputPower)},
  { 194, -1, sizeof(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationDependentLoss)},
  { 204, -1, sizeof(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationModeDispersion)},
  { 213, -1, sizeof(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion)},
  { 222, -1, sizeof(::openconfig::openconfig_platform::Components_Component_OpticalChannel_State)},
  { 239, -1, sizeof(::openconfig::openconfig_platform::Components_Component_OpticalChannel)},
  { 246, -1, sizeof(::openconfig::openconfig_platform::Components_Component_OpticalPort_Config)},
  { 252, -1, sizeof(::openconfig::openconfig_platform::Components_Component_OpticalPort_State_InputPower)},
  { 262, -1, sizeof(::openconfig::openconfig_platform::Components_Component_OpticalPort_State_OutputPower)},
  { 272, -1, sizeof(::openconfig::openconfig_platform::Components_Component_OpticalPort_State)},
  { 281, -1, sizeof(::openconfig::openconfig_platform::Components_Component_OpticalPort)},
  { 288, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_Config)},
  { 295, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_State)},
  { 302, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode)},
  { 309, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Port_Config)},
  { 314, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Port_State)},
  { 319, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Port)},
  { 327, -1, sizeof(::openconfig::openconfig_platform::Components_Component_PowerSupply_Config)},
  { 333, -1, sizeof(::openconfig::openconfig_platform::Components_Component_PowerSupply_State)},
  { 345, -1, sizeof(::openconfig::openconfig_platform::Components_Component_PowerSupply)},
  { 352, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Properties_Property_Config)},
  { 364, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Properties_Property_State)},
  { 377, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Properties_Property)},
  { 384, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Properties_PropertyKey)},
  { 391, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Properties)},
  { 397, -1, sizeof(::openconfig::openconfig_platform::Components_Component_State_Memory)},
  { 404, -1, sizeof(::openconfig::openconfig_platform::Components_Component_State_Temperature)},
  { 417, -1, sizeof(::openconfig::openconfig_platform::Components_Component_State)},
  { 442, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Storage_Config)},
  { 447, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Storage_State)},
  { 452, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Storage)},
  { 459, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_Config)},
  { 465, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_State)},
  { 471, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent)},
  { 478, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Subcomponents_SubcomponentKey)},
  { 485, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Subcomponents)},
  { 491, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Transceiver_Config)},
  { 499, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_Config)},
  { 508, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower)},
  { 518, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent)},
  { 528, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower)},
  { 538, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State)},
  { 551, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel)},
  { 558, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_ChannelKey)},
  { 565, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels)},
  { 571, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Transceiver_State_InputPower)},
  { 581, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Transceiver_State_LaserBiasCurrent)},
  { 591, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Transceiver_State_OutputPower)},
  { 601, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Transceiver_State)},
  { 625, -1, sizeof(::openconfig::openconfig_platform::Components_Component_Transceiver)},
  { 633, -1, sizeof(::openconfig::openconfig_platform::Components_Component)},
  { 655, -1, sizeof(::openconfig::openconfig_platform::Components_ComponentKey)},
  { 662, -1, sizeof(::openconfig::openconfig_platform::Components)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Backplane_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Backplane_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Backplane_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Chassis_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Chassis_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Chassis_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Cpu_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Cpu_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Cpu_Utilization_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Cpu_Utilization_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Cpu_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Fabric_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Fabric_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Fabric_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Fan_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Fan_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Fan_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_IntegratedCircuit_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_IntegratedCircuit_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_IntegratedCircuit_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Linecard_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Linecard_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Linecard_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_OpticalChannel_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_ChromaticDispersion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_InputPower_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_LaserBiasCurrent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_OutputPower_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_PolarizationDependentLoss_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_PolarizationModeDispersion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_OpticalChannel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_OpticalPort_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_OpticalPort_State_InputPower_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_OpticalPort_State_OutputPower_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_OpticalPort_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_OpticalPort_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Port_BreakoutMode_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Port_BreakoutMode_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Port_BreakoutMode_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Port_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Port_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Port_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_PowerSupply_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_PowerSupply_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_PowerSupply_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Properties_Property_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Properties_Property_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Properties_Property_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Properties_PropertyKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Properties_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_State_Memory_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_State_Temperature_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Storage_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Storage_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Storage_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Subcomponents_Subcomponent_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Subcomponents_Subcomponent_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Subcomponents_Subcomponent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Subcomponents_SubcomponentKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Subcomponents_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Transceiver_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_ChannelKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Transceiver_State_InputPower_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Transceiver_State_LaserBiasCurrent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Transceiver_State_OutputPower_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Transceiver_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_Transceiver_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_Component_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_ComponentKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_platform::_Components_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "openconfig/openconfig_platform/openconfig_platform.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 81);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n8openconfig/openconfig_platform/opencon"
      "fig_platform.proto\022\036openconfig.openconfi"
      "g_platform\0328github.com/openconfig/ygot/p"
      "roto/ywrapper/ywrapper.proto\0320github.com"
      "/openconfig/ygot/proto/yext/yext.proto\032\034"
      "openconfig/enums/enums.proto\"\234\377\001\n\nCompon"
      "ents\022g\n\tcomponent\030\225\222\303\030 \003(\01327.openconfig."
      "openconfig_platform.Components.Component"
      "KeyB\030\202A\025/components/component\032\234\375\001\n\tCompo"
      "nent\022x\n\tbackplane\030\221\343\236\013 \001(\0132>.openconfig."
      "openconfig_platform.Components.Component"
      ".BackplaneB\"\202A\037/components/component/bac"
      "kplane\022r\n\007chassis\030\264\371\243I \001(\0132<.openconfig."
      "openconfig_platform.Components.Component"
      ".ChassisB \202A\035/components/component/chass"
      "is\022p\n\006config\030\272\316\311\301\001 \001(\0132;.openconfig.open"
      "config_platform.Components.Component.Con"
      "figB\037\202A\034/components/component/config\022f\n\003"
      "cpu\030\236\234\204\035 \001(\01328.openconfig.openconfig_pla"
      "tform.Components.Component.CpuB\034\202A\031/comp"
      "onents/component/cpu\022o\n\006fabric\030\263\373\2240 \001(\0132"
      ";.openconfig.openconfig_platform.Compone"
      "nts.Component.FabricB\037\202A\034/components/com"
      "ponent/fabric\022f\n\003fan\030\207\235\2375 \001(\01328.openconf"
      "ig.openconfig_platform.Components.Compon"
      "ent.FanB\034\202A\031/components/component/fan\022\222\001"
      "\n\022integrated_circuit\030\251\261\244] \001(\0132F.openconf"
      "ig.openconfig_platform.Components.Compon"
      "ent.IntegratedCircuitB+\202A(/components/co"
      "mponent/integrated-circuit\022u\n\010linecard\030\360"
      "\237\201\t \001(\0132=.openconfig.openconfig_platform"
      ".Components.Component.LinecardB!\202A\036/comp"
      "onents/component/linecard\022\212\001\n\017optical_ch"
      "annel\030\216\202\205\336\001 \001(\0132C.openconfig.openconfig_"
      "platform.Components.Component.OpticalCha"
      "nnelB(\202A%/components/component/optical-c"
      "hannel\022\200\001\n\014optical_port\030\224\333\2470 \001(\0132@.openc"
      "onfig.openconfig_platform.Components.Com"
      "ponent.OpticalPortB%\202A\"/components/compo"
      "nent/optical-port\022j\n\004port\030\231\246\271\374\001 \001(\01329.op"
      "enconfig.openconfig_platform.Components."
      "Component.PortB\035\202A\032/components/component"
      "/port\022\201\001\n\014power_supply\030\205\205\223\321\001 \001(\0132@.openc"
      "onfig.openconfig_platform.Components.Com"
      "ponent.PowerSupplyB%\202A\"/components/compo"
      "nent/power-supply\022{\n\nproperties\030\207\214\2433 \001(\013"
      "2\?.openconfig.openconfig_platform.Compon"
      "ents.Component.PropertiesB#\202A /component"
      "s/component/properties\022m\n\005state\030\327\270\261\227\001 \001("
      "\0132:.openconfig.openconfig_platform.Compo"
      "nents.Component.StateB\036\202A\033/components/co"
      "mponent/state\022s\n\007storage\030\333\336\316\300\001 \001(\0132<.ope"
      "nconfig.openconfig_platform.Components.C"
      "omponent.StorageB \202A\035/components/compone"
      "nt/storage\022\205\001\n\rsubcomponents\030\322\316\334\262\001 \001(\0132B"
      ".openconfig.openconfig_platform.Componen"
      "ts.Component.SubcomponentsB&\202A#/componen"
      "ts/component/subcomponents\022~\n\013transceive"
      "r\030\312\257\272\023 \001(\0132@.openconfig.openconfig_platf"
      "orm.Components.Component.TransceiverB$\202A"
      "!/components/component/transceiver\032\247\002\n\tB"
      "ackplane\022\203\001\n\006config\030\266\304\3355 \001(\0132E.openconfi"
      "g.openconfig_platform.Components.Compone"
      "nt.Backplane.ConfigB)\202A&/components/comp"
      "onent/backplane/config\022\200\001\n\005state\030\343\242\305q \001("
      "\0132D.openconfig.openconfig_platform.Compo"
      "nents.Component.Backplane.StateB(\202A%/com"
      "ponents/component/backplane/state\032\010\n\006Con"
      "fig\032\007\n\005State\032\235\002\n\007Chassis\022\200\001\n\006config\030\271\243\315\341"
      "\001 \001(\0132C.openconfig.openconfig_platform.C"
      "omponents.Component.Chassis.ConfigB\'\202A$/"
      "components/component/chassis/config\022|\n\005s"
      "tate\030\216\260\233* \001(\0132B.openconfig.openconfig_pl"
      "atform.Components.Component.Chassis.Stat"
      "eB&\202A#/components/component/chassis/stat"
      "e\032\010\n\006Config\032\007\n\005State\032V\n\006Config\022L\n\004name\030\250"
      "\326\2638 \001(\0132\025.ywrapper.StringValueB$\202A!/comp"
      "onents/component/config/name\032\213\010\n\003Cpu\022w\n\006"
      "config\030\357\217\367\006 \001(\0132\?.openconfig.openconfig_"
      "platform.Components.Component.Cpu.Config"
      "B#\202A /components/component/cpu/config\022u\n"
      "\005state\030\340\246\240\353\001 \001(\0132>.openconfig.openconfig"
      "_platform.Components.Component.Cpu.State"
      "B\"\202A\037/components/component/cpu/state\022\207\001\n"
      "\013utilization\030\233\371\331\320\001 \001(\0132D.openconfig.open"
      "config_platform.Components.Component.Cpu"
      ".UtilizationB(\202A%/components/component/c"
      "pu/utilization\032\010\n\006Config\032\007\n\005State\032\366\004\n\013Ut"
      "ilization\022\214\001\n\005state\030\305\333\202C \001(\0132J.openconfi"
      "g.openconfig_platform.Components.Compone"
      "nt.Cpu.Utilization.StateB.\202A+/components"
      "/component/cpu/utilization/state\032\327\003\n\005Sta"
      "te\022W\n\003avg\030\350\250\263j \001(\0132\023.ywrapper.UintValueB"
      "2\202A//components/component/cpu/utilizatio"
      "n/state/avg\022`\n\007instant\030\323\346\342\251\001 \001(\0132\023.ywrap"
      "per.UintValueB6\202A3/components/component/"
      "cpu/utilization/state/instant\022a\n\010interva"
      "l\030\323\314\213u \001(\0132\023.ywrapper.UintValueB7\202A4/com"
      "ponents/component/cpu/utilization/state/"
      "interval\022W\n\003max\030\252\257\253\023 \001(\0132\023.ywrapper.Uint"
      "ValueB2\202A//components/component/cpu/util"
      "ization/state/max\022W\n\003min\030\204\310\253S \001(\0132\023.ywra"
      "pper.UintValueB2\202A//components/component"
      "/cpu/utilization/state/min\032\226\002\n\006Fabric\022}\n"
      "\006config\030\324\235\260E \001(\0132B.openconfig.openconfig"
      "_platform.Components.Component.Fabric.Co"
      "nfigB&\202A#/components/component/fabric/co"
      "nfig\022z\n\005state\030\355\236\373B \001(\0132A.openconfig.open"
      "config_platform.Components.Component.Fab"
      "ric.StateB%\202A\"/components/component/fabr"
      "ic/state\032\010\n\006Config\032\007\n\005State\032\331\002\n\003Fan\022x\n\006c"
      "onfig\030\230\205\360\375\001 \001(\0132\?.openconfig.openconfig_"
      "platform.Components.Component.Fan.Config"
      "B#\202A /components/component/fan/config\022t\n"
      "\005state\030\261\370\2762 \001(\0132>.openconfig.openconfig_"
      "platform.Components.Component.Fan.StateB"
      "\"\202A\037/components/component/fan/state\032\010\n\006C"
      "onfig\032X\n\005State\022O\n\005speed\030\225\344\364\022 \001(\0132\023.ywrap"
      "per.UintValueB(\202A%/components/component/"
      "fan/state/speed\032\322\002\n\021IntegratedCircuit\022\224\001"
      "\n\006config\030\236\253\3541 \001(\0132M.openconfig.openconfi"
      "g_platform.Components.Component.Integrat"
      "edCircuit.ConfigB2\202A//components/compone"
      "nt/integrated-circuit/config\022\222\001\n\005state\030\213"
      "\266\251\277\001 \001(\0132L.openconfig.openconfig_platfor"
      "m.Components.Component.IntegratedCircuit"
      ".StateB1\202A./components/component/integra"
      "ted-circuit/state\032\010\n\006Config\032\007\n\005State\032\270\005\n"
      "\010Linecard\022\202\001\n\006config\030\205\344\362\310\001 \001(\0132D.opencon"
      "fig.openconfig_platform.Components.Compo"
      "nent.Linecard.ConfigB(\202A%/components/com"
      "ponent/linecard/config\022~\n\005state\030\372\253\231x \001(\013"
      "2C.openconfig.openconfig_platform.Compon"
      "ents.Component.Linecard.StateB\'\202A$/compo"
      "nents/component/linecard/state\032\244\001\n\006Confi"
      "g\022\231\001\n\021power_admin_state\030\245\207\343\333\001 \001(\0162>.open"
      "config.enums.OpenconfigPlatformLinecardC"
      "omponentPowerTypeB:\202A7/components/compon"
      "ent/linecard/config/power-admin-state\032\377\001"
      "\n\005State\022\230\001\n\021power_admin_state\030\342\204\326\323\001 \001(\0162"
      ">.openconfig.enums.OpenconfigPlatformLin"
      "ecardComponentPowerTypeB9\202A6/components/"
      "component/linecard/state/power-admin-sta"
      "te\022[\n\007slot_id\030\251\330\223\313\001 \001(\0132\025.ywrapper.Strin"
      "gValueB/\202A,/components/component/linecar"
      "d/state/slot-id\032\3574\n\016OpticalChannel\022\217\001\n\006c"
      "onfig\030\277\344\336\331\001 \001(\0132J.openconfig.openconfig_"
      "platform.Components.Component.OpticalCha"
      "nnel.ConfigB/\202A,/components/component/op"
      "tical-channel/config\022\213\001\n\005state\030\360\276\207( \001(\0132"
      "I.openconfig.openconfig_platform.Compone"
      "nts.Component.OpticalChannel.StateB.\202A+/"
      "components/component/optical-channel/sta"
      "te\032\311\003\n\006Config\022d\n\tfrequency\030\270\241\346\014 \001(\0132\023.yw"
      "rapper.UintValueB9\202A6/components/compone"
      "nt/optical-channel/config/frequency\022f\n\tl"
      "ine_port\030\244\205\327T \001(\0132\025.ywrapper.StringValue"
      "B9\202A6/components/component/optical-chann"
      "el/config/line-port\022r\n\020operational_mode\030"
      "\212\347\217i \001(\0132\023.ywrapper.UintValueB@\202A=/compo"
      "nents/component/optical-channel/config/o"
      "perational-mode\022}\n\023target_output_power\030\325"
      "\377\344\035 \001(\0132\030.ywrapper.Decimal64ValueBC\202A@/c"
      "omponents/component/optical-channel/conf"
      "ig/target-output-power\032\360.\n\005State\022\303\001\n\024chr"
      "omatic_dispersion\030\376\223\267/ \001(\0132].openconfig."
      "openconfig_platform.Components.Component"
      ".OpticalChannel.State.ChromaticDispersio"
      "nBC\202A@/components/component/optical-chan"
      "nel/state/chromatic-dispersion\022d\n\tfreque"
      "ncy\030\243\205\200\315\001 \001(\0132\023.ywrapper.UintValueB8\202A5/"
      "components/component/optical-channel/sta"
      "te/frequency\022b\n\010group_id\030\362\260\221\234\001 \001(\0132\023.ywr"
      "apper.UintValueB7\202A4/components/componen"
      "t/optical-channel/state/group-id\022\251\001\n\013inp"
      "ut_power\030\311\314\357\232\001 \001(\0132T.openconfig.openconf"
      "ig_platform.Components.Component.Optical"
      "Channel.State.InputPowerB:\202A7/components"
      "/component/optical-channel/state/input-p"
      "ower\022\274\001\n\022laser_bias_current\030\266\276\336+ \001(\0132Z.o"
      "penconfig.openconfig_platform.Components"
      ".Component.OpticalChannel.State.LaserBia"
      "sCurrentBA\202A>/components/component/optic"
      "al-channel/state/laser-bias-current\022e\n\tl"
      "ine_port\030\373\312\350: \001(\0132\025.ywrapper.StringValue"
      "B8\202A5/components/component/optical-chann"
      "el/state/line-port\022q\n\020operational_mode\030\373"
      "\355\324( \001(\0132\023.ywrapper.UintValueB\?\202A</compon"
      "ents/component/optical-channel/state/ope"
      "rational-mode\022\253\001\n\014output_power\030\274\313\326Z \001(\0132"
      "U.openconfig.openconfig_platform.Compone"
      "nts.Component.OpticalChannel.State.Outpu"
      "tPowerB;\202A8/components/component/optical"
      "-channel/state/output-power\022\330\001\n\033polariza"
      "tion_dependent_loss\030\327\373\237\267\001 \001(\0132c.openconf"
      "ig.openconfig_platform.Components.Compon"
      "ent.OpticalChannel.State.PolarizationDep"
      "endentLossBJ\202AG/components/component/opt"
      "ical-channel/state/polarization-dependen"
      "t-loss\022\332\001\n\034polarization_mode_dispersion\030"
      "\304\332\300E \001(\0132d.openconfig.openconfig_platfor"
      "m.Components.Component.OpticalChannel.St"
      "ate.PolarizationModeDispersionBK\202AH/comp"
      "onents/component/optical-channel/state/p"
      "olarization-mode-dispersion\022\200\002\n)second_o"
      "rder_polarization_mode_dispersion\030\336\230\226\323\001 "
      "\001(\0132o.openconfig.openconfig_platform.Com"
      "ponents.Component.OpticalChannel.State.S"
      "econdOrderPolarizationModeDispersionBX\202A"
      "U/components/component/optical-channel/s"
      "tate/second-order-polarization-mode-disp"
      "ersion\022|\n\023target_output_power\030\242\322\346z \001(\0132\030"
      ".ywrapper.Decimal64ValueBB\202A\?/components"
      "/component/optical-channel/state/target-"
      "output-power\032\354\003\n\023ChromaticDispersion\022q\n\003"
      "avg\030\223\242\246~ \001(\0132\030.ywrapper.Decimal64ValueBG"
      "\202AD/components/component/optical-channel"
      "/state/chromatic-dispersion/avg\022z\n\007insta"
      "nt\030\314\237\354\311\001 \001(\0132\030.ywrapper.Decimal64ValueBK"
      "\202AH/components/component/optical-channel"
      "/state/chromatic-dispersion/instant\022r\n\003m"
      "ax\030\375\252\255\265\001 \001(\0132\030.ywrapper.Decimal64ValueBG"
      "\202AD/components/component/optical-channel"
      "/state/chromatic-dispersion/max\022r\n\003min\030\363"
      "\303\255\365\001 \001(\0132\030.ywrapper.Decimal64ValueBG\202AD/"
      "components/component/optical-channel/sta"
      "te/chromatic-dispersion/min\032\256\004\n\nInputPow"
      "er\022h\n\003avg\030\324\217\3678 \001(\0132\030.ywrapper.Decimal64V"
      "alueB>\202A;/components/component/optical-c"
      "hannel/state/input-power/avg\022q\n\007instant\030"
      "\257\302\330\343\001 \001(\0132\030.ywrapper.Decimal64ValueBB\202A\?"
      "/components/component/optical-channel/st"
      "ate/input-power/instant\022m\n\010interval\030\317\351\333."
      " \001(\0132\023.ywrapper.UintValueBC\202A@/component"
      "s/component/optical-channel/state/input-"
      "power/interval\022i\n\003max\030\356\216\377\237\001 \001(\0132\030.ywrapp"
      "er.Decimal64ValueB>\202A;/components/compon"
      "ent/optical-channel/state/input-power/ma"
      "x\022i\n\003min\030\300\247\377\337\001 \001(\0132\030.ywrapper.Decimal64V"
      "alueB>\202A;/components/component/optical-c"
      "hannel/state/input-power/min\032\325\004\n\020LaserBi"
      "asCurrent\022o\n\003avg\030\373\314\3336 \001(\0132\030.ywrapper.Dec"
      "imal64ValueBE\202AB/components/component/op"
      "tical-channel/state/laser-bias-current/a"
      "vg\022w\n\007instant\030\204\213\277\027 \001(\0132\030.ywrapper.Decima"
      "l64ValueBI\202AF/components/component/optic"
      "al-channel/state/laser-bias-current/inst"
      "ant\022u\n\010interval\030\202\217\307\244\001 \001(\0132\023.ywrapper.Uin"
      "tValueBJ\202AG/components/component/optical"
      "-channel/state/laser-bias-current/interv"
      "al\022o\n\003max\030\205\326\377n \001(\0132\030.ywrapper.Decimal64V"
      "alueBE\202AB/components/component/optical-c"
      "hannel/state/laser-bias-current/max\022o\n\003m"
      "in\030\213\275\377. \001(\0132\030.ywrapper.Decimal64ValueBE\202"
      "AB/components/component/optical-channel/"
      "state/laser-bias-current/min\032\265\004\n\013OutputP"
      "ower\022j\n\003avg\030\305\216\276\337\001 \001(\0132\030.ywrapper.Decimal"
      "64ValueB\?\202A</components/component/optica"
      "l-channel/state/output-power/avg\022r\n\007inst"
      "ant\030\302\312\344\222\001 \001(\0132\030.ywrapper.Decimal64ValueB"
      "C\202A@/components/component/optical-channe"
      "l/state/output-power/instant\022o\n\010interval"
      "\030\204\344\342\231\001 \001(\0132\023.ywrapper.UintValueBD\202AA/com"
      "ponents/component/optical-channel/state/"
      "output-power/interval\022i\n\003max\030\307\217\266x \001(\0132\030."
      "ywrapper.Decimal64ValueB\?\202A</components/"
      "component/optical-channel/state/output-p"
      "ower/max\022j\n\003min\030\271\250\266\270\001 \001(\0132\030.ywrapper.Dec"
      "imal64ValueB\?\202A</components/component/op"
      "tical-channel/state/output-power/min\032\215\005\n"
      "\031PolarizationDependentLoss\022y\n\003avg\030\326\250\301\376\001 "
      "\001(\0132\030.ywrapper.Decimal64ValueBN\202AK/compo"
      "nents/component/optical-channel/state/po"
      "larization-dependent-loss/avg\022\200\001\n\007instan"
      "t\030\325\224\247\017 \001(\0132\030.ywrapper.Decimal64ValueBR\202A"
      "O/components/component/optical-channel/s"
      "tate/polarization-dependent-loss/instant"
      "\022~\n\010interval\030\351\371\320\333\001 \001(\0132\023.ywrapper.UintVa"
      "lueBS\202AP/components/component/optical-ch"
      "annel/state/polarization-dependent-loss/"
      "interval\022x\n\003max\030\260\232\311E \001(\0132\030.ywrapper.Deci"
      "mal64ValueBN\202AK/components/component/opt"
      "ical-channel/state/polarization-dependen"
      "t-loss/max\022x\n\003min\030\336\201\311\005 \001(\0132\030.ywrapper.De"
      "cimal64ValueBN\202AK/components/component/o"
      "ptical-channel/state/polarization-depend"
      "ent-loss/min\032\222\004\n\032PolarizationModeDispers"
      "ion\022y\n\003avg\030\335\243\257q \001(\0132\030.ywrapper.Decimal64"
      "ValueBO\202AL/components/component/optical-"
      "channel/state/polarization-mode-dispersi"
      "on/avg\022\201\001\n\007instant\030\212\206\247\024 \001(\0132\030.ywrapper.D"
      "ecimal64ValueBS\202AP/components/component/"
      "optical-channel/state/polarization-mode-"
      "dispersion/instant\022y\n\003max\030\277\352\213\t \001(\0132\030.ywr"
      "apper.Decimal64ValueBO\202AL/components/com"
      "ponent/optical-channel/state/polarizatio"
      "n-mode-dispersion/max\022z\n\003min\030\301\321\213\311\001 \001(\0132\030"
      ".ywrapper.Decimal64ValueBO\202AL/components"
      "/component/optical-channel/state/polariz"
      "ation-mode-dispersion/min\032\325\004\n%SecondOrde"
      "rPolarizationModeDispersion\022\207\001\n\003avg\030\363\220\235\226"
      "\001 \001(\0132\030.ywrapper.Decimal64ValueB\\\202AY/com"
      "ponents/component/optical-channel/state/"
      "second-order-polarization-mode-dispersio"
      "n/avg\022\216\001\n\007instant\030\254\212\365\006 \001(\0132\030.ywrapper.De"
      "cimal64ValueB`\202A]/components/component/o"
      "ptical-channel/state/second-order-polari"
      "zation-mode-dispersion/instant\022\207\001\n\003max\030\335"
      "\275\252\315\001 \001(\0132\030.ywrapper.Decimal64ValueB\\\202AY/"
      "components/component/optical-channel/sta"
      "te/second-order-polarization-mode-disper"
      "sion/max\022\206\001\n\003min\030\323\326\252\r \001(\0132\030.ywrapper.Dec"
      "imal64ValueB\\\202AY/components/component/op"
      "tical-channel/state/second-order-polariz"
      "ation-mode-dispersion/min\032\223\021\n\013OpticalPor"
      "t\022\211\001\n\006config\030\231\360\221\310\001 \001(\0132G.openconfig.open"
      "config_platform.Components.Component.Opt"
      "icalPort.ConfigB,\202A)/components/componen"
      "t/optical-port/config\022\205\001\n\005state\030\356\367\256} \001(\013"
      "2F.openconfig.openconfig_platform.Compon"
      "ents.Component.OpticalPort.StateB+\202A(/co"
      "mponents/component/optical-port/state\032\233\001"
      "\n\006Config\022\220\001\n\013admin_state\030\325\372\361\300\001 \001(\0162=.ope"
      "nconfig.enums.OpenconfigTransportLineCom"
      "monAdminStateTypeB8\202A5/components/compon"
      "ent/optical-port/config/admin-state\032\321\r\n\005"
      "State\022\217\001\n\013admin_state\030\236\214\216\270\001 \001(\0162=.openco"
      "nfig.enums.OpenconfigTransportLineCommon"
      "AdminStateTypeB7\202A4/components/component"
      "/optical-port/state/admin-state\022\243\001\n\013inpu"
      "t_power\030\343\214\375\372\001 \001(\0132Q.openconfig.openconfi"
      "g_platform.Components.Component.OpticalP"
      "ort.State.InputPowerB7\202A4/components/com"
      "ponent/optical-port/state/input-power\022\237\001"
      "\n\021optical_port_type\030\252\231\356D \001(\0162B.openconfi"
      "g.enums.OpenconfigTransportLineCommonOPT"
      "ICALLINEPORTTYPEB=\202A:/components/compone"
      "nt/optical-port/state/optical-port-type\022"
      "\245\001\n\014output_power\030\232\212\223. \001(\0132R.openconfig.o"
      "penconfig_platform.Components.Component."
      "OpticalPort.State.OutputPowerB8\202A5/compo"
      "nents/component/optical-port/state/outpu"
      "t-power\032\236\004\n\nInputPower\022e\n\003avg\030\332\233\200d \001(\0132\030"
      ".ywrapper.Decimal64ValueB;\202A8/components"
      "/component/optical-port/state/input-powe"
      "r/avg\022m\n\007instant\030\331\344\201\037 \001(\0132\030.ywrapper.Dec"
      "imal64ValueB\?\202A</components/component/op"
      "tical-port/state/input-power/instant\022j\n\010"
      "interval\030\275\226\3264 \001(\0132\023.ywrapper.UintValueB@"
      "\202A=/components/component/optical-port/st"
      "ate/input-power/interval\022f\n\003max\030\354\325\362\354\001 \001("
      "\0132\030.ywrapper.Decimal64ValueB;\202A8/compone"
      "nts/component/optical-port/state/input-p"
      "ower/max\022f\n\003min\030\222\273\362\254\001 \001(\0132\030.ywrapper.Dec"
      "imal64ValueB;\202A8/components/component/op"
      "tical-port/state/input-power/min\032\244\004\n\013Out"
      "putPower\022f\n\003avg\030\247\201\255! \001(\0132\030.ywrapper.Deci"
      "mal64ValueB<\202A9/components/component/opt"
      "ical-port/state/output-power/avg\022o\n\007inst"
      "ant\030\240\370\235\253\001 \001(\0132\030.ywrapper.Decimal64ValueB"
      "@\202A=/components/component/optical-port/s"
      "tate/output-power/instant\022k\n\010interval\030\276\250"
      "\247\n \001(\0132\023.ywrapper.UintValueBA\202A>/compone"
      "nts/component/optical-port/state/output-"
      "power/interval\022f\n\003max\030\331\215\246\032 \001(\0132\030.ywrappe"
      "r.Decimal64ValueB<\202A9/components/compone"
      "nt/optical-port/state/output-power/max\022g"
      "\n\003min\030\347\364\245\332\001 \001(\0132\030.ywrapper.Decimal64Valu"
      "eB<\202A9/components/component/optical-port"
      "/state/output-power/min\032\362\t\n\004Port\022\216\001\n\rbre"
      "akout_mode\030\201\303\320\362\001 \001(\0132F.openconfig.openco"
      "nfig_platform.Components.Component.Port."
      "BreakoutModeB+\202A(/components/component/p"
      "ort/breakout-mode\022y\n\006config\030\356\375\303m \001(\0132@.o"
      "penconfig.openconfig_platform.Components"
      ".Component.Port.ConfigB$\202A!/components/c"
      "omponent/port/config\022w\n\005state\030\233\376\335\233\001 \001(\0132"
      "\?.openconfig.openconfig_platform.Compone"
      "nts.Component.Port.StateB#\202A /components"
      "/component/port/state\032\321\006\n\014BreakoutMode\022\225"
      "\001\n\006config\030\206\200\344\325\001 \001(\0132M.openconfig.opencon"
      "fig_platform.Components.Component.Port.B"
      "reakoutMode.ConfigB2\202A//components/compo"
      "nent/port/breakout-mode/config\022\221\001\n\005state"
      "\030\363\361\320\" \001(\0132L.openconfig.openconfig_platfo"
      "rm.Components.Component.Port.BreakoutMod"
      "e.StateB1\202A./components/component/port/b"
      "reakout-mode/state\032\211\002\n\006Config\022\217\001\n\rchanne"
      "l_speed\030\364\220\336\? \001(\01623.openconfig.enums.Open"
      "configIfEthernetETHERNETSPEEDB@\202A=/compo"
      "nents/component/port/breakout-mode/confi"
      "g/channel-speed\022m\n\014num_channels\030\260\374\363b \001(\013"
      "2\023.ywrapper.UintValueB\?\202A</components/co"
      "mponent/port/breakout-mode/config/num-ch"
      "annels\032\210\002\n\005State\022\217\001\n\rchannel_speed\030\361\373\227\364\001"
      " \001(\01623.openconfig.enums.OpenconfigIfEthe"
      "rnetETHERNETSPEEDB\?\202A</components/compon"
      "ent/port/breakout-mode/state/channel-spe"
      "ed\022m\n\014num_channels\030\347\233\252\365\001 \001(\0132\023.ywrapper."
      "UintValueB>\202A;/components/component/port"
      "/breakout-mode/state/num-channels\032\010\n\006Con"
      "fig\032\007\n\005State\032\360\010\n\013PowerSupply\022\211\001\n\006config\030"
      "\312\245\253\210\001 \001(\0132G.openconfig.openconfig_platfo"
      "rm.Components.Component.PowerSupply.Conf"
      "igB,\202A)/components/component/power-suppl"
      "y/config\022\206\001\n\005state\030\347\306\255\234\001 \001(\0132F.openconfi"
      "g.openconfig_platform.Components.Compone"
      "nt.PowerSupply.StateB+\202A(/components/com"
      "ponent/power-supply/state\032h\n\006Config\022^\n\007e"
      "nabled\030\250\202\317\203\001 \001(\0132\023.ywrapper.BoolValueB4\202"
      "A1/components/component/power-supply/con"
      "fig/enabled\032\341\005\n\005State\022_\n\010capacity\030\366\334\271e \001"
      "(\0132\024.ywrapper.BytesValueB4\202A1/components"
      "/component/power-supply/state/capacity\022\\"
      "\n\007enabled\030\371\310\327i \001(\0132\023.ywrapper.BoolValueB"
      "3\202A0/components/component/power-supply/s"
      "tate/enabled\022i\n\rinput_current\030\246\352\344{ \001(\0132\024"
      ".ywrapper.BytesValueB9\202A6/components/com"
      "ponent/power-supply/state/input-current\022"
      "j\n\rinput_voltage\030\237\354\275\257\001 \001(\0132\024.ywrapper.By"
      "tesValueB9\202A6/components/component/power"
      "-supply/state/input-voltage\022l\n\016output_cu"
      "rrent\030\235\276\326\331\001 \001(\0132\024.ywrapper.BytesValueB:\202"
      "A7/components/component/power-supply/sta"
      "te/output-current\022g\n\014output_power\030\305\336\207z \001"
      "(\0132\024.ywrapper.BytesValueB8\202A5/components"
      "/component/power-supply/state/output-pow"
      "er\022k\n\016output_voltage\030\274\354\220V \001(\0132\024.ywrapper"
      ".BytesValueB:\202A7/components/component/po"
      "wer-supply/state/output-voltage\032\265\n\n\nProp"
      "erties\022\217\001\n\010property\030\251\254\264\357\001 \003(\0132K.openconf"
      "ig.openconfig_platform.Components.Compon"
      "ent.Properties.PropertyKeyB,\202A)/componen"
      "ts/component/properties/property\032\347\007\n\010Pro"
      "perty\022\227\001\n\006config\030\236\304\372K \001(\0132O.openconfig.o"
      "penconfig_platform.Components.Component."
      "Properties.Property.ConfigB3\202A0/componen"
      "ts/component/properties/property/config\022"
      "\224\001\n\005state\030\213\331\211\t \001(\0132N.openconfig.openconf"
      "ig_platform.Components.Component.Propert"
      "ies.Property.StateB2\202A//components/compo"
      "nent/properties/property/state\032\235\002\n\006Confi"
      "g\022a\n\004name\030\304\242\256\366\001 \001(\0132\025.ywrapper.StringVal"
      "ueB8\202A5/components/component/properties/"
      "property/config/name\022\030\n\nvalue_bool\030\333\337\204\231\001"
      " \001(\010H\000\022\032\n\014value_sint64\030\247\275\210\376\001 \001(\022H\000\022\031\n\014va"
      "lue_string\030\364\232\350{ \001(\tH\000\022\030\n\014value_uint64\030\375\316"
      "I \001(\004H\000\022<\n\024value_decimal64value\030\271\270\253\243\001 \001("
      "\0132\030.ywrapper.Decimal64ValueH\000B\007\n\005value\032\211"
      "\003\n\005State\022m\n\014configurable\030\325\216\256~ \001(\0132\023.ywra"
      "pper.BoolValueB\?\202A</components/component"
      "/properties/property/state/configurable\022"
      "_\n\004name\030\273\371\361! \001(\0132\025.ywrapper.StringValueB"
      "7\202A4/components/component/properties/pro"
      "perty/state/name\022\027\n\nvalue_bool\030\244\214\360\006 \001(\010H"
      "\000\022\032\n\014value_sint64\030\214\342\244\372\001 \001(\022H\000\022\031\n\014value_s"
      "tring\030\367\325\255Z \001(\tH\000\022\032\n\014value_uint64\030\312\347\371\376\001 \001"
      "(\004H\000\022;\n\024value_decimal64value\030\332\253\333Z \001(\0132\030."
      "ywrapper.Decimal64ValueH\000B\007\n\005value\032\252\001\n\013P"
      "ropertyKey\022\?\n\004name\030\001 \001(\tB1\202A./components"
      "/component/properties/property/name\022Z\n\010p"
      "roperty\030\002 \001(\0132H.openconfig.openconfig_pl"
      "atform.Components.Component.Properties.P"
      "roperty\032\304\027\n\005State\022`\n\017allocated_power\030\361\270\306"
      "\266\001 \001(\0132\023.ywrapper.UintValueB.\202A+/compone"
      "nts/component/state/allocated-power\022Y\n\013d"
      "escription\030\260\265\362O \001(\0132\025.ywrapper.StringVal"
      "ueB*\202A\'/components/component/state/descr"
      "iption\022S\n\tentity_id\030\217\245\334\031 \001(\0132\023.ywrapper."
      "UintValueB(\202A%/components/component/stat"
      "e/entity-id\022d\n\021equipment_failure\030\347\361\315\340\001 \001"
      "(\0132\023.ywrapper.BoolValueB0\202A-/components/"
      "component/state/equipment-failure\022f\n\022equ"
      "ipment_mismatch\030\307\214\313\224\001 \001(\0132\023.ywrapper.Boo"
      "lValueB1\202A./components/component/state/e"
      "quipment-mismatch\022c\n\020firmware_version\030\376\250"
      "\325t \001(\0132\025.ywrapper.StringValueB/\202A,/compo"
      "nents/component/state/firmware-version\022c"
      "\n\020hardware_version\030\315\252\324\027 \001(\0132\025.ywrapper.S"
      "tringValueB/\202A,/components/component/sta"
      "te/hardware-version\022G\n\002id\030\241\301\334u \001(\0132\025.ywr"
      "apper.StringValueB!\202A\036/components/compon"
      "ent/state/id\022|\n\006memory\030\363\336\251\323\001 \001(\0132A.openc"
      "onfig.openconfig_platform.Components.Com"
      "ponent.State.MemoryB%\202A\"/components/comp"
      "onent/state/memory\022S\n\010mfg_name\030\226\360\224& \001(\0132"
      "\025.ywrapper.StringValueB\'\202A$/components/c"
      "omponent/state/mfg-name\022K\n\004name\030\337\246\2405 \001(\013"
      "2\025.ywrapper.StringValueB#\202A /components/"
      "component/state/name\022\201\001\n\013oper_status\030\315\334\240"
      "\264\001 \001(\0162<.openconfig.enums.OpenconfigPlat"
      "formTypesCOMPONENTOPERSTATUSB*\202A\'/compon"
      "ents/component/state/oper-status\022Q\n\007part"
      "_no\030\377\215\304R \001(\0132\025.ywrapper.StringValueB&\202A#"
      "/components/component/state/part-no\022V\n\ts"
      "erial_no\030\266\205\325\351\001 \001(\0132\025.ywrapper.StringValu"
      "eB(\202A%/components/component/state/serial"
      "-no\022c\n\020software_version\030\276\357\223i \001(\0132\025.ywrap"
      "per.StringValueB/\202A,/components/componen"
      "t/state/software-version\022\212\001\n\013temperature"
      "\030\254\262\315P \001(\0132F.openconfig.openconfig_platfo"
      "rm.Components.Component.State.Temperatur"
      "eB*\202A\'/components/component/state/temper"
      "ature\022\213\001\n7type_openconfigplatformtypesop"
      "enconfighardwarecomponent\030\254\364\204\312\001 \001(\0162D.op"
      "enconfig.enums.OpenconfigPlatformTypesOP"
      "ENCONFIGHARDWARECOMPONENTH\000\022\213\001\n7type_ope"
      "nconfigplatformtypesopenconfigsoftwareco"
      "mponent\030\325\360\323\256\001 \001(\0162D.openconfig.enums.Ope"
      "nconfigPlatformTypesOPENCONFIGSOFTWARECO"
      "MPONENTH\000\022U\n\nused_power\030\305\222\356{ \001(\0132\023.ywrap"
      "per.UintValueB)\202A&/components/component/"
      "state/used-power\032\277\001\n\006Memory\022[\n\tavailable"
      "\030\233\200\331\231\001 \001(\0132\023.ywrapper.UintValueB/\202A,/com"
      "ponents/component/state/memory/available"
      "\022X\n\010utilized\030\264\300\216p \001(\0132\023.ywrapper.UintVal"
      "ueB.\202A+/components/component/state/memor"
      "y/utilized\032\311\006\n\013Temperature\022\224\001\n\016alarm_sev"
      "erity\030\202\323\252\215\001 \001(\0162=.openconfig.enums.Openc"
      "onfigAlarmTypesOPENCONFIGALARMSEVERITYB9"
      "\202A6/components/component/state/temperatu"
      "re/alarm-severity\022e\n\014alarm_status\030\251\346\254T \001"
      "(\0132\023.ywrapper.BoolValueB7\202A4/components/"
      "component/state/temperature/alarm-status"
      "\022k\n\017alarm_threshold\030\204\376\260n \001(\0132\023.ywrapper."
      "UintValueB:\202A7/components/component/stat"
      "e/temperature/alarm-threshold\022X\n\003avg\030\325\242\377"
      "/ \001(\0132\030.ywrapper.Decimal64ValueB.\202A+/com"
      "ponents/component/state/temperature/avg\022"
      "`\n\007instant\030\322\237\235b \001(\0132\030.ywrapper.Decimal64"
      "ValueB2\202A//components/component/state/te"
      "mperature/instant\022^\n\010interval\030\264\203\242\302\001 \001(\0132"
      "\023.ywrapper.UintValueB3\202A0/components/com"
      "ponent/state/temperature/interval\022Y\n\003max"
      "\030\327\210\370\310\001 \001(\0132\030.ywrapper.Decimal64ValueB.\202A"
      "+/components/component/state/temperature"
      "/max\022X\n\003min\030\251\241\370\010 \001(\0132\030.ywrapper.Decimal6"
      "4ValueB.\202A+/components/component/state/t"
      "emperature/minB\006\n\004type\032\235\002\n\007Storage\022\200\001\n\006c"
      "onfig\030\214\321\375\370\001 \001(\0132C.openconfig.openconfig_"
      "platform.Components.Component.Storage.Co"
      "nfigB\'\202A$/components/component/storage/c"
      "onfig\022|\n\005state\030\205\306\317  \001(\0132B.openconfig.ope"
      "nconfig_platform.Components.Component.St"
      "orage.StateB&\202A#/components/component/st"
      "orage/state\032\010\n\006Config\032\007\n\005State\032\271\007\n\rSubco"
      "mponents\022\241\001\n\014subcomponent\030\256\206\356\206\001 \003(\0132R.op"
      "enconfig.openconfig_platform.Components."
      "Component.Subcomponents.SubcomponentKeyB"
      "3\202A0/components/component/subcomponents/"
      "subcomponent\032\300\004\n\014Subcomponent\022\245\001\n\006config"
      "\030\337\316\274< \001(\0132V.openconfig.openconfig_platfo"
      "rm.Components.Component.Subcomponents.Su"
      "bcomponent.ConfigB:\202A7/components/compon"
      "ent/subcomponents/subcomponent/config\022\243\001"
      "\n\005state\030\220\352\212\214\001 \001(\0132U.openconfig.openconfi"
      "g_platform.Components.Component.Subcompo"
      "nents.Subcomponent.StateB9\202A6/components"
      "/component/subcomponents/subcomponent/st"
      "ate\032q\n\006Config\022g\n\004name\030\247\370\315A \001(\0132\025.ywrappe"
      "r.StringValueB\?\202A</components/component/"
      "subcomponents/subcomponent/config/name\032o"
      "\n\005State\022f\n\004name\030\272\243\342: \001(\0132\025.ywrapper.Stri"
      "ngValueB>\202A;/components/component/subcom"
      "ponents/subcomponent/state/name\032\300\001\n\017Subc"
      "omponentKey\022F\n\004name\030\001 \001(\tB8\202A5/component"
      "s/component/subcomponents/subcomponent/n"
      "ame\022e\n\014subcomponent\030\002 \001(\0132O.openconfig.o"
      "penconfig_platform.Components.Component."
      "Subcomponents.Subcomponent\032\370M\n\013Transceiv"
      "er\022\210\001\n\006config\030\233\367\353\375\001 \001(\0132G.openconfig.ope"
      "nconfig_platform.Components.Component.Tr"
      "ansceiver.ConfigB+\202A(/components/compone"
      "nt/transceiver/config\022\247\001\n\021physical_chann"
      "els\030\213\322\351D \001(\0132Q.openconfig.openconfig_pla"
      "tform.Components.Component.Transceiver.P"
      "hysicalChannelsB6\202A3/components/componen"
      "t/transceiver/physical-channels\022\204\001\n\005stat"
      "e\030\234\237\307Q \001(\0132F.openconfig.openconfig_platf"
      "orm.Components.Component.Transceiver.Sta"
      "teB*\202A\'/components/component/transceiver"
      "/state\032\256\003\n\006Config\022\\\n\007enabled\030\335\333\341` \001(\0132\023."
      "ywrapper.BoolValueB3\202A0/components/compo"
      "nent/transceiver/config/enabled\022\235\001\n\024ethe"
      "rnet_pmd_preconf\030\225\370\244\241\001 \001(\01629.openconfig."
      "enums.OpenconfigTransportTypesETHERNETPM"
      "DTYPEB@\202A=/components/component/transcei"
      "ver/config/ethernet-pmd-preconf\022\245\001\n\023form"
      "_factor_preconf\030\276\273\360\340\001 \001(\0162C.openconfig.e"
      "nums.OpenconfigTransportTypesTRANSCEIVER"
      "FORMFACTORTYPEB\?\202A</components/component"
      "/transceiver/config/form-factor-preconf\032"
      "\371$\n\020PhysicalChannels\022\261\001\n\007channel\030\337\237\237\253\001 \003"
      "(\0132\\.openconfig.openconfig_platform.Comp"
      "onents.Component.Transceiver.PhysicalCha"
      "nnels.ChannelKeyB>\202A;/components/compone"
      "nt/transceiver/physical-channels/channel"
      "\032\340!\n\007Channel\022\272\001\n\006config\030\240\374\2250 \001(\0132`.openc"
      "onfig.openconfig_platform.Components.Com"
      "ponent.Transceiver.PhysicalChannels.Chan"
      "nel.ConfigBE\202AB/components/component/tra"
      "nsceiver/physical-channels/channel/confi"
      "g\022\270\001\n\005state\030\231\313\304\206\001 \001(\0132_.openconfig.openc"
      "onfig_platform.Components.Component.Tran"
      "sceiver.PhysicalChannels.Channel.StateBD"
      "\202AA/components/component/transceiver/phy"
      "sical-channels/channel/state\032\221\004\n\006Config\022"
      "\201\001\n\013description\030\353\261\377\225\001 \001(\0132\025.ywrapper.Str"
      "ingValueBQ\202AN/components/component/trans"
      "ceiver/physical-channels/channel/config/"
      "description\022s\n\005index\030\361\366\214\237\001 \001(\0132\023.ywrappe"
      "r.UintValueBK\202AH/components/component/tr"
      "ansceiver/physical-channels/channel/conf"
      "ig/index\022\223\001\n\023target_output_power\030\262\254\231= \001("
      "\0132\030.ywrapper.Decimal64ValueBY\202AV/compone"
      "nts/component/transceiver/physical-chann"
      "els/channel/config/target-output-power\022x"
      "\n\010tx_laser\030\215\327\352\? \001(\0132\023.ywrapper.BoolValue"
      "BN\202AK/components/component/transceiver/p"
      "hysical-channels/channel/config/tx-laser"
      "\032\310\032\n\005State\022\177\n\013description\030\322\343\242\016 \001(\0132\025.ywr"
      "apper.StringValueBP\202AM/components/compon"
      "ent/transceiver/physical-channels/channe"
      "l/state/description\022q\n\005index\030\250\315\263\031 \001(\0132\023."
      "ywrapper.UintValueBJ\202AG/components/compo"
      "nent/transceiver/physical-channels/chann"
      "el/state/index\022\325\001\n\013input_power\030\310\356\371\220\001 \001(\013"
      "2j.openconfig.openconfig_platform.Compon"
      "ents.Component.Transceiver.PhysicalChann"
      "els.Channel.State.InputPowerBP\202AM/compon"
      "ents/component/transceiver/physical-chan"
      "nels/channel/state/input-power\022\351\001\n\022laser"
      "_bias_current\030\231\272\242\346\001 \001(\0132p.openconfig.ope"
      "nconfig_platform.Components.Component.Tr"
      "ansceiver.PhysicalChannels.Channel.State"
      ".LaserBiasCurrentBW\202AT/components/compon"
      "ent/transceiver/physical-channels/channe"
      "l/state/laser-bias-current\022\207\001\n\020output_fr"
      "equency\030\246\237\367k \001(\0132\023.ywrapper.UintValueBU\202"
      "AR/components/component/transceiver/phys"
      "ical-channels/channel/state/output-frequ"
      "ency\022\330\001\n\014output_power\030\357\241\370\317\001 \001(\0132k.openco"
      "nfig.openconfig_platform.Components.Comp"
      "onent.Transceiver.PhysicalChannels.Chann"
      "el.State.OutputPowerBQ\202AN/components/com"
      "ponent/transceiver/physical-channels/cha"
      "nnel/state/output-power\022\223\001\n\023target_outpu"
      "t_power\030\233\305\277\277\001 \001(\0132\030.ywrapper.Decimal64Va"
      "lueBX\202AU/components/component/transceive"
      "r/physical-channels/channel/state/target"
      "-output-power\022x\n\010tx_laser\030\266\313\252\306\001 \001(\0132\023.yw"
      "rapper.BoolValueBM\202AJ/components/compone"
      "nt/transceiver/physical-channels/channel"
      "/state/tx-laser\032\235\005\n\nInputPower\022\177\n\003avg\030\371\207"
      "\371\312\001 \001(\0132\030.ywrapper.Decimal64ValueBT\202AQ/c"
      "omponents/component/transceiver/physical"
      "-channels/channel/state/input-power/avg\022"
      "\206\001\n\007instant\030\366\305\271\034 \001(\0132\030.ywrapper.Decimal6"
      "4ValueBX\202AU/components/component/transce"
      "iver/physical-channels/channel/state/inp"
      "ut-power/instant\022\203\001\n\010interval\030\270\312\366\031 \001(\0132\023"
      ".ywrapper.UintValueBY\202AV/components/comp"
      "onent/transceiver/physical-channels/chan"
      "nel/state/input-power/interval\022~\n\003max\030\223\337"
      "\242# \001(\0132\030.ywrapper.Decimal64ValueBT\202AQ/co"
      "mponents/component/transceiver/physical-"
      "channels/channel/state/input-power/max\022\177"
      "\n\003min\030\275\306\242\343\001 \001(\0132\030.ywrapper.Decimal64Valu"
      "eBT\202AQ/components/component/transceiver/"
      "physical-channels/channel/state/input-po"
      "wer/min\032\312\005\n\020LaserBiasCurrent\022\205\001\n\003avg\030\304\256\375"
      "m \001(\0132\030.ywrapper.Decimal64ValueB[\202AX/com"
      "ponents/component/transceiver/physical-c"
      "hannels/channel/state/laser-bias-current"
      "/avg\022\216\001\n\007instant\030\237\265\223\233\001 \001(\0132\030.ywrapper.De"
      "cimal64ValueB_\202A\\/components/component/t"
      "ransceiver/physical-channels/channel/sta"
      "te/laser-bias-current/instant\022\213\001\n\010interv"
      "al\030\337\360\226\267\001 \001(\0132\023.ywrapper.UintValueB`\202A]/c"
      "omponents/component/transceiver/physical"
      "-channels/channel/state/laser-bias-curre"
      "nt/interval\022\206\001\n\003max\030\336\310\204\325\001 \001(\0132\030.ywrapper"
      ".Decimal64ValueB[\202AX/components/componen"
      "t/transceiver/physical-channels/channel/"
      "state/laser-bias-current/max\022\205\001\n\003min\030\320\341\204"
      "\025 \001(\0132\030.ywrapper.Decimal64ValueB[\202AX/com"
      "ponents/component/transceiver/physical-c"
      "hannels/channel/state/laser-bias-current"
      "/min\032\244\005\n\013OutputPower\022\200\001\n\003avg\030\276\366\305\340\001 \001(\0132\030"
      ".ywrapper.Decimal64ValueBU\202AR/components"
      "/component/transceiver/physical-channels"
      "/channel/state/output-power/avg\022\207\001\n\007inst"
      "ant\030\355\212\3664 \001(\0132\030.ywrapper.Decimal64ValueBY"
      "\202AV/components/component/transceiver/phy"
      "sical-channels/channel/state/output-powe"
      "r/instant\022\205\001\n\010interval\030\261\246\271\236\001 \001(\0132\023.ywrap"
      "per.UintValueBZ\202AW/components/component/"
      "transceiver/physical-channels/channel/st"
      "ate/output-power/interval\022\177\n\003max\030\370\243\351( \001("
      "\0132\030.ywrapper.Decimal64ValueBU\202AR/compone"
      "nts/component/transceiver/physical-chann"
      "els/channel/state/output-power/max\022\177\n\003mi"
      "n\030\366\274\351h \001(\0132\030.ywrapper.Decimal64ValueBU\202A"
      "R/components/component/transceiver/physi"
      "cal-channels/channel/state/output-power/"
      "min\032\315\001\n\nChannelKey\022S\n\005index\030\001 \001(\004BD\202AA/c"
      "omponents/component/transceiver/physical"
      "-channels/channel/index\022j\n\007channel\030\002 \001(\013"
      "2Y.openconfig.openconfig_platform.Compon"
      "ents.Component.Transceiver.PhysicalChann"
      "els.Channel\032\377!\n\005State\022\222\001\n\016connector_type"
      "\030\321\224\303x \001(\0162<.openconfig.enums.OpenconfigT"
      "ransportTypesFIBERCONNECTORTYPEB9\202A6/com"
      "ponents/component/transceiver/state/conn"
      "ector-type\022b\n\tdate_code\030\347\235\251\232\001 \001(\0132\025.ywra"
      "pper.StringValueB4\202A1/components/compone"
      "nt/transceiver/state/date-code\022[\n\007enable"
      "d\030\316\307\247x \001(\0132\023.ywrapper.BoolValueB2\202A//com"
      "ponents/component/transceiver/state/enab"
      "led\022\214\001\n\014ethernet_pmd\030\302\276\352\306\001 \001(\01629.opencon"
      "fig.enums.OpenconfigTransportTypesETHERN"
      "ETPMDTYPEB7\202A4/components/component/tran"
      "sceiver/state/ethernet-pmd\022\234\001\n\024ethernet_"
      "pmd_preconf\030\250\356\255\312\001 \001(\01629.openconfig.enums"
      ".OpenconfigTransportTypesETHERNETPMDTYPE"
      "B\?\202A</components/component/transceiver/s"
      "tate/ethernet-pmd-preconf\022k\n\017fault_condi"
      "tion\030\265\325\367\037 \001(\0132\023.ywrapper.BoolValueB:\202A7/"
      "components/component/transceiver/state/f"
      "ault-condition\022\223\001\n\013form_factor\030\227\333\305\005 \001(\0162"
      "C.openconfig.enums.OpenconfigTransportTy"
      "pesTRANSCEIVERFORMFACTORTYPEB6\202A3/compon"
      "ents/component/transceiver/state/form-fa"
      "ctor\022\244\001\n\023form_factor_preconf\030\211\213\242\367\001 \001(\0162C"
      ".openconfig.enums.OpenconfigTransportTyp"
      "esTRANSCEIVERFORMFACTORTYPEB>\202A;/compone"
      "nts/component/transceiver/state/form-fac"
      "tor-preconf\022\241\001\n\013input_power\030\205\334\350\023 \001(\0132Q.o"
      "penconfig.openconfig_platform.Components"
      ".Component.Transceiver.State.InputPowerB"
      "6\202A3/components/component/transceiver/st"
      "ate/input-power\022f\n\rinternal_temp\030\277\300\2504 \001("
      "\0132\022.ywrapper.IntValueB8\202A5/components/co"
      "mponent/transceiver/state/internal-temp\022"
      "\266\001\n\022laser_bias_current\030\222\276\325\311\001 \001(\0132W.openc"
      "onfig.openconfig_platform.Components.Com"
      "ponent.Transceiver.State.LaserBiasCurren"
      "tB=\202A:/components/component/transceiver/"
      "state/laser-bias-current\022\235\001\n\023otn_complia"
      "nce_code\030\262\215\245\220\001 \001(\0162<.openconfig.enums.Op"
      "enconfigTransportTypesOTNAPPLICATIONCODE"
      "B>\202A;/components/component/transceiver/s"
      "tate/otn-compliance-code\022\244\001\n\014output_powe"
      "r\030\220\330\337s \001(\0132R.openconfig.openconfig_platf"
      "orm.Components.Component.Transceiver.Sta"
      "te.OutputPowerB7\202A4/components/component"
      "/transceiver/state/output-power\022\226\001\n\007pres"
      "ent\030\360\343\364Q \001(\0162N.openconfig.openconfig_pla"
      "tform.Components.Component.Transceiver.S"
      "tate.PresentB2\202A//components/component/t"
      "ransceiver/state/present\022a\n\tserial_no\030\275\370"
      "\205\027 \001(\0132\025.ywrapper.StringValueB4\202A1/compo"
      "nents/component/transceiver/state/serial"
      "-no\022\253\001\n\031sonet_sdh_compliance_code\030\304\235\227\251\001 "
      "\001(\0162>.openconfig.enums.OpenconfigTranspo"
      "rtTypesSONETAPPLICATIONCODEBD\202AA/compone"
      "nts/component/transceiver/state/sonet-sd"
      "h-compliance-code\022[\n\006vendor\030\375\356\351X \001(\0132\025.y"
      "wrapper.StringValueB1\202A./components/comp"
      "onent/transceiver/state/vendor\022e\n\013vendor"
      "_part\030\355\366\333u \001(\0132\025.ywrapper.StringValueB6\202"
      "A3/components/component/transceiver/stat"
      "e/vendor-part\022c\n\nvendor_rev\030\205\253\320\035 \001(\0132\025.y"
      "wrapper.StringValueB5\202A2/components/comp"
      "onent/transceiver/state/vendor-rev\032\231\004\n\nI"
      "nputPower\022e\n\003avg\030\250\332\306\312\001 \001(\0132\030.ywrapper.De"
      "cimal64ValueB:\202A7/components/component/t"
      "ransceiver/state/input-power/avg\022l\n\007inst"
      "ant\030\223\340\232\016 \001(\0132\030.ywrapper.Decimal64ValueB>"
      "\202A;/components/component/transceiver/sta"
      "te/input-power/instant\022i\n\010interval\030\223\240\330[ "
      "\001(\0132\023.ywrapper.UintValueB\?\202A</components"
      "/component/transceiver/state/input-power"
      "/interval\022d\n\003max\030\352\342\276s \001(\0132\030.ywrapper.Dec"
      "imal64ValueB:\202A7/components/component/tr"
      "ansceiver/state/input-power/max\022e\n\003min\030\304"
      "\373\276\263\001 \001(\0132\030.ywrapper.Decimal64ValueB:\202A7/"
      "components/component/transceiver/state/i"
      "nput-power/min\032\302\004\n\020LaserBiasCurrent\022k\n\003a"
      "vg\030\257\260\211\025 \001(\0132\030.ywrapper.Decimal64ValueBA\202"
      "A>/components/component/transceiver/stat"
      "e/laser-bias-current/avg\022t\n\007instant\030\230\270\347\276"
      "\001 \001(\0132\030.ywrapper.Decimal64ValueBE\202AB/com"
      "ponents/component/transceiver/state/lase"
      "r-bias-current/instant\022q\n\010interval\030\246\331\365\345\001"
      " \001(\0132\023.ywrapper.UintValueBF\202AC/component"
      "s/component/transceiver/state/laser-bias"
      "-current/interval\022k\n\003max\030\201\323\344\014 \001(\0132\030.ywra"
      "pper.Decimal64ValueBA\202A>/components/comp"
      "onent/transceiver/state/laser-bias-curre"
      "nt/max\022k\n\003min\030\377\355\344L \001(\0132\030.ywrapper.Decima"
      "l64ValueBA\202A>/components/component/trans"
      "ceiver/state/laser-bias-current/min\032\237\004\n\013"
      "OutputPower\022e\n\003avg\030\321\242\2531 \001(\0132\030.ywrapper.D"
      "ecimal64ValueB;\202A8/components/component/"
      "transceiver/state/output-power/avg\022m\n\007in"
      "stant\030\236\225\300\025 \001(\0132\030.ywrapper.Decimal64Value"
      "B\?\202A</components/component/transceiver/s"
      "tate/output-power/instant\022j\n\010interval\030\320\204"
      "\360B \001(\0132\023.ywrapper.UintValueB@\202A=/compone"
      "nts/component/transceiver/state/output-p"
      "ower/interval\022f\n\003max\030\353\266\262\210\001 \001(\0132\030.ywrappe"
      "r.Decimal64ValueB;\202A8/components/compone"
      "nt/transceiver/state/output-power/max\022f\n"
      "\003min\030\305\317\262\310\001 \001(\0132\030.ywrapper.Decimal64Value"
      "B;\202A8/components/component/transceiver/s"
      "tate/output-power/min\"f\n\007Present\022\021\n\rPRES"
      "ENT_UNSET\020\000\022\037\n\017PRESENT_PRESENT\020\001\032\n\202A\007PRE"
      "SENT\022\'\n\023PRESENT_NOT_PRESENT\020\002\032\016\202A\013NOT_PR"
      "ESENT\032\204\001\n\014ComponentKey\022+\n\004name\030\001 \001(\tB\035\202A"
      "\032/components/component/name\022G\n\tcomponent"
      "\030\002 \001(\01324.openconfig.openconfig_platform."
      "Components.Componentb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 32908);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "openconfig/openconfig_platform/openconfig_platform.proto", &protobuf_RegisterTypes);
  ::protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::AddDescriptors();
  ::protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fyext_2fyext_2eproto::AddDescriptors();
  ::protobuf_openconfig_2fenums_2fenums_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto
namespace openconfig {
namespace openconfig_platform {
const ::google::protobuf::EnumDescriptor* Components_Component_Transceiver_State_Present_descriptor() {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_enum_descriptors[0];
}
bool Components_Component_Transceiver_State_Present_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Components_Component_Transceiver_State_Present Components_Component_Transceiver_State::PRESENT_UNSET;
const Components_Component_Transceiver_State_Present Components_Component_Transceiver_State::PRESENT_PRESENT;
const Components_Component_Transceiver_State_Present Components_Component_Transceiver_State::PRESENT_NOT_PRESENT;
const Components_Component_Transceiver_State_Present Components_Component_Transceiver_State::Present_MIN;
const Components_Component_Transceiver_State_Present Components_Component_Transceiver_State::Present_MAX;
const int Components_Component_Transceiver_State::Present_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Components_Component_Backplane_Config::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Backplane_Config::Components_Component_Backplane_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Backplane_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Backplane.Config)
}
Components_Component_Backplane_Config::Components_Component_Backplane_Config(const Components_Component_Backplane_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Backplane.Config)
}

void Components_Component_Backplane_Config::SharedCtor() {
  _cached_size_ = 0;
}

Components_Component_Backplane_Config::~Components_Component_Backplane_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Backplane.Config)
  SharedDtor();
}

void Components_Component_Backplane_Config::SharedDtor() {
}

void Components_Component_Backplane_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Backplane_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Backplane_Config& Components_Component_Backplane_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Backplane_Config();
  return *internal_default_instance();
}

Components_Component_Backplane_Config* Components_Component_Backplane_Config::New(::google::protobuf::Arena* arena) const {
  Components_Component_Backplane_Config* n = new Components_Component_Backplane_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Backplane_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Backplane.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Components_Component_Backplane_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Backplane.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Backplane.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Backplane.Config)
  return false;
#undef DO_
}

void Components_Component_Backplane_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Backplane.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Backplane.Config)
}

::google::protobuf::uint8* Components_Component_Backplane_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Backplane.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Backplane.Config)
  return target;
}

size_t Components_Component_Backplane_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Backplane.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Backplane_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Backplane.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Backplane_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Backplane_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Backplane.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Backplane.Config)
    MergeFrom(*source);
  }
}

void Components_Component_Backplane_Config::MergeFrom(const Components_Component_Backplane_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Backplane.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Components_Component_Backplane_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Backplane.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Backplane_Config::CopyFrom(const Components_Component_Backplane_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Backplane.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Backplane_Config::IsInitialized() const {
  return true;
}

void Components_Component_Backplane_Config::Swap(Components_Component_Backplane_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Backplane_Config::InternalSwap(Components_Component_Backplane_Config* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Backplane_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Backplane_State::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Backplane_State::Components_Component_Backplane_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Backplane_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Backplane.State)
}
Components_Component_Backplane_State::Components_Component_Backplane_State(const Components_Component_Backplane_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Backplane.State)
}

void Components_Component_Backplane_State::SharedCtor() {
  _cached_size_ = 0;
}

Components_Component_Backplane_State::~Components_Component_Backplane_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Backplane.State)
  SharedDtor();
}

void Components_Component_Backplane_State::SharedDtor() {
}

void Components_Component_Backplane_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Backplane_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Backplane_State& Components_Component_Backplane_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Backplane_State();
  return *internal_default_instance();
}

Components_Component_Backplane_State* Components_Component_Backplane_State::New(::google::protobuf::Arena* arena) const {
  Components_Component_Backplane_State* n = new Components_Component_Backplane_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Backplane_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Backplane.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Components_Component_Backplane_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Backplane.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Backplane.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Backplane.State)
  return false;
#undef DO_
}

void Components_Component_Backplane_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Backplane.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Backplane.State)
}

::google::protobuf::uint8* Components_Component_Backplane_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Backplane.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Backplane.State)
  return target;
}

size_t Components_Component_Backplane_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Backplane.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Backplane_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Backplane.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Backplane_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Backplane_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Backplane.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Backplane.State)
    MergeFrom(*source);
  }
}

void Components_Component_Backplane_State::MergeFrom(const Components_Component_Backplane_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Backplane.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Components_Component_Backplane_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Backplane.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Backplane_State::CopyFrom(const Components_Component_Backplane_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Backplane.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Backplane_State::IsInitialized() const {
  return true;
}

void Components_Component_Backplane_State::Swap(Components_Component_Backplane_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Backplane_State::InternalSwap(Components_Component_Backplane_State* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Backplane_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Backplane::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Backplane_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Backplane_Config*>(
      ::openconfig::openconfig_platform::Components_Component_Backplane_Config::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Backplane_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Backplane_State*>(
      ::openconfig::openconfig_platform::Components_Component_Backplane_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Backplane::kConfigFieldNumber;
const int Components_Component_Backplane::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Backplane::Components_Component_Backplane()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Backplane();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Backplane)
}
Components_Component_Backplane::Components_Component_Backplane(const Components_Component_Backplane& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Backplane_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Backplane_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Backplane)
}

void Components_Component_Backplane::SharedCtor() {
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&config_)) + sizeof(state_));
  _cached_size_ = 0;
}

Components_Component_Backplane::~Components_Component_Backplane() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Backplane)
  SharedDtor();
}

void Components_Component_Backplane::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete state_;
}

void Components_Component_Backplane::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Backplane::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Backplane& Components_Component_Backplane::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Backplane();
  return *internal_default_instance();
}

Components_Component_Backplane* Components_Component_Backplane::New(::google::protobuf::Arena* arena) const {
  Components_Component_Backplane* n = new Components_Component_Backplane;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Backplane::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Backplane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Backplane::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Backplane)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1904904986u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_platform.Components.Component.Backplane.Config config = 112681526 [(.yext.schemapath) = "/components/component/backplane/config"];
      case 112681526: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 901452210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Backplane.State state = 238113123 [(.yext.schemapath) = "/components/component/backplane/state"];
      case 238113123: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 1904904986 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Backplane)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Backplane)
  return false;
#undef DO_
}

void Components_Component_Backplane::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Backplane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Backplane.Config config = 112681526 [(.yext.schemapath) = "/components/component/backplane/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      112681526, *this->config_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Backplane.State state = 238113123 [(.yext.schemapath) = "/components/component/backplane/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      238113123, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Backplane)
}

::google::protobuf::uint8* Components_Component_Backplane::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Backplane)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Backplane.Config config = 112681526 [(.yext.schemapath) = "/components/component/backplane/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        112681526, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Backplane.State state = 238113123 [(.yext.schemapath) = "/components/component/backplane/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        238113123, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Backplane)
  return target;
}

size_t Components_Component_Backplane::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Backplane)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_platform.Components.Component.Backplane.Config config = 112681526 [(.yext.schemapath) = "/components/component/backplane/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_platform.Components.Component.Backplane.State state = 238113123 [(.yext.schemapath) = "/components/component/backplane/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Backplane::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Backplane)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Backplane* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Backplane>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Backplane)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Backplane)
    MergeFrom(*source);
  }
}

void Components_Component_Backplane::MergeFrom(const Components_Component_Backplane& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Backplane)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_platform::Components_Component_Backplane_Config::MergeFrom(from.config());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_platform::Components_Component_Backplane_State::MergeFrom(from.state());
  }
}

void Components_Component_Backplane::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Backplane)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Backplane::CopyFrom(const Components_Component_Backplane& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Backplane)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Backplane::IsInitialized() const {
  return true;
}

void Components_Component_Backplane::Swap(Components_Component_Backplane* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Backplane::InternalSwap(Components_Component_Backplane* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Backplane::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Chassis_Config::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Chassis_Config::Components_Component_Chassis_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Chassis_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Chassis.Config)
}
Components_Component_Chassis_Config::Components_Component_Chassis_Config(const Components_Component_Chassis_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Chassis.Config)
}

void Components_Component_Chassis_Config::SharedCtor() {
  _cached_size_ = 0;
}

Components_Component_Chassis_Config::~Components_Component_Chassis_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Chassis.Config)
  SharedDtor();
}

void Components_Component_Chassis_Config::SharedDtor() {
}

void Components_Component_Chassis_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Chassis_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Chassis_Config& Components_Component_Chassis_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Chassis_Config();
  return *internal_default_instance();
}

Components_Component_Chassis_Config* Components_Component_Chassis_Config::New(::google::protobuf::Arena* arena) const {
  Components_Component_Chassis_Config* n = new Components_Component_Chassis_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Chassis_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Chassis.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Components_Component_Chassis_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Chassis.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Chassis.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Chassis.Config)
  return false;
#undef DO_
}

void Components_Component_Chassis_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Chassis.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Chassis.Config)
}

::google::protobuf::uint8* Components_Component_Chassis_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Chassis.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Chassis.Config)
  return target;
}

size_t Components_Component_Chassis_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Chassis.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Chassis_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Chassis.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Chassis_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Chassis_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Chassis.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Chassis.Config)
    MergeFrom(*source);
  }
}

void Components_Component_Chassis_Config::MergeFrom(const Components_Component_Chassis_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Chassis.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Components_Component_Chassis_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Chassis.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Chassis_Config::CopyFrom(const Components_Component_Chassis_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Chassis.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Chassis_Config::IsInitialized() const {
  return true;
}

void Components_Component_Chassis_Config::Swap(Components_Component_Chassis_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Chassis_Config::InternalSwap(Components_Component_Chassis_Config* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Chassis_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Chassis_State::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Chassis_State::Components_Component_Chassis_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Chassis_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Chassis.State)
}
Components_Component_Chassis_State::Components_Component_Chassis_State(const Components_Component_Chassis_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Chassis.State)
}

void Components_Component_Chassis_State::SharedCtor() {
  _cached_size_ = 0;
}

Components_Component_Chassis_State::~Components_Component_Chassis_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Chassis.State)
  SharedDtor();
}

void Components_Component_Chassis_State::SharedDtor() {
}

void Components_Component_Chassis_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Chassis_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Chassis_State& Components_Component_Chassis_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Chassis_State();
  return *internal_default_instance();
}

Components_Component_Chassis_State* Components_Component_Chassis_State::New(::google::protobuf::Arena* arena) const {
  Components_Component_Chassis_State* n = new Components_Component_Chassis_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Chassis_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Chassis.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Components_Component_Chassis_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Chassis.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Chassis.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Chassis.State)
  return false;
#undef DO_
}

void Components_Component_Chassis_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Chassis.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Chassis.State)
}

::google::protobuf::uint8* Components_Component_Chassis_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Chassis.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Chassis.State)
  return target;
}

size_t Components_Component_Chassis_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Chassis.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Chassis_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Chassis.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Chassis_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Chassis_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Chassis.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Chassis.State)
    MergeFrom(*source);
  }
}

void Components_Component_Chassis_State::MergeFrom(const Components_Component_Chassis_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Chassis.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Components_Component_Chassis_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Chassis.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Chassis_State::CopyFrom(const Components_Component_Chassis_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Chassis.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Chassis_State::IsInitialized() const {
  return true;
}

void Components_Component_Chassis_State::Swap(Components_Component_Chassis_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Chassis_State::InternalSwap(Components_Component_Chassis_State* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Chassis_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Chassis::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Chassis_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Chassis_Config*>(
      ::openconfig::openconfig_platform::Components_Component_Chassis_Config::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Chassis_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Chassis_State*>(
      ::openconfig::openconfig_platform::Components_Component_Chassis_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Chassis::kConfigFieldNumber;
const int Components_Component_Chassis::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Chassis::Components_Component_Chassis()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Chassis();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Chassis)
}
Components_Component_Chassis::Components_Component_Chassis(const Components_Component_Chassis& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Chassis_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Chassis_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Chassis)
}

void Components_Component_Chassis::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&state_)) + sizeof(config_));
  _cached_size_ = 0;
}

Components_Component_Chassis::~Components_Component_Chassis() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Chassis)
  SharedDtor();
}

void Components_Component_Chassis::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
}

void Components_Component_Chassis::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Chassis::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Chassis& Components_Component_Chassis::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Chassis();
  return *internal_default_instance();
}

Components_Component_Chassis* Components_Component_Chassis::New(::google::protobuf::Arena* arena) const {
  Components_Component_Chassis* n = new Components_Component_Chassis;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Chassis::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Chassis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Chassis::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Chassis)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3785002442u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_platform.Components.Component.Chassis.State state = 88528910 [(.yext.schemapath) = "/components/component/chassis/state"];
      case 88528910: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 708231282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Chassis.Config config = 473125305 [(.yext.schemapath) = "/components/component/chassis/config"];
      case 473125305: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 3785002442 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Chassis)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Chassis)
  return false;
#undef DO_
}

void Components_Component_Chassis::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Chassis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Chassis.State state = 88528910 [(.yext.schemapath) = "/components/component/chassis/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      88528910, *this->state_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Chassis.Config config = 473125305 [(.yext.schemapath) = "/components/component/chassis/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      473125305, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Chassis)
}

::google::protobuf::uint8* Components_Component_Chassis::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Chassis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Chassis.State state = 88528910 [(.yext.schemapath) = "/components/component/chassis/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        88528910, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Chassis.Config config = 473125305 [(.yext.schemapath) = "/components/component/chassis/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        473125305, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Chassis)
  return target;
}

size_t Components_Component_Chassis::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Chassis)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_platform.Components.Component.Chassis.State state = 88528910 [(.yext.schemapath) = "/components/component/chassis/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_platform.Components.Component.Chassis.Config config = 473125305 [(.yext.schemapath) = "/components/component/chassis/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Chassis::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Chassis)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Chassis* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Chassis>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Chassis)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Chassis)
    MergeFrom(*source);
  }
}

void Components_Component_Chassis::MergeFrom(const Components_Component_Chassis& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Chassis)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_platform::Components_Component_Chassis_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_platform::Components_Component_Chassis_Config::MergeFrom(from.config());
  }
}

void Components_Component_Chassis::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Chassis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Chassis::CopyFrom(const Components_Component_Chassis& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Chassis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Chassis::IsInitialized() const {
  return true;
}

void Components_Component_Chassis::Swap(Components_Component_Chassis* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Chassis::InternalSwap(Components_Component_Chassis* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Chassis::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Config_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void Components_Component_Config::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Config::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Config::Components_Component_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Config)
}
Components_Component_Config::Components_Component_Config(const Components_Component_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Config)
}

void Components_Component_Config::SharedCtor() {
  name_ = NULL;
  _cached_size_ = 0;
}

Components_Component_Config::~Components_Component_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Config)
  SharedDtor();
}

void Components_Component_Config::SharedDtor() {
  if (this != internal_default_instance()) delete name_;
}

void Components_Component_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Config& Components_Component_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Config();
  return *internal_default_instance();
}

Components_Component_Config* Components_Component_Config::New(::google::protobuf::Arena* arena) const {
  Components_Component_Config* n = new Components_Component_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(946297154u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue name = 118287144 [(.yext.schemapath) = "/components/component/config/name"];
      case 118287144: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 946297154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Config)
  return false;
#undef DO_
}

void Components_Component_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue name = 118287144 [(.yext.schemapath) = "/components/component/config/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      118287144, *this->name_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Config)
}

::google::protobuf::uint8* Components_Component_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue name = 118287144 [(.yext.schemapath) = "/components/component/config/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        118287144, *this->name_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Config)
  return target;
}

size_t Components_Component_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue name = 118287144 [(.yext.schemapath) = "/components/component/config/name"];
  if (this->has_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Config)
    MergeFrom(*source);
  }
}

void Components_Component_Config::MergeFrom(const Components_Component_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
}

void Components_Component_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Config::CopyFrom(const Components_Component_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Config::IsInitialized() const {
  return true;
}

void Components_Component_Config::Swap(Components_Component_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Config::InternalSwap(Components_Component_Config* other) {
  using std::swap;
  swap(name_, other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Cpu_Config::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Cpu_Config::Components_Component_Cpu_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Cpu_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Cpu.Config)
}
Components_Component_Cpu_Config::Components_Component_Cpu_Config(const Components_Component_Cpu_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Cpu.Config)
}

void Components_Component_Cpu_Config::SharedCtor() {
  _cached_size_ = 0;
}

Components_Component_Cpu_Config::~Components_Component_Cpu_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Cpu.Config)
  SharedDtor();
}

void Components_Component_Cpu_Config::SharedDtor() {
}

void Components_Component_Cpu_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Cpu_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Cpu_Config& Components_Component_Cpu_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Cpu_Config();
  return *internal_default_instance();
}

Components_Component_Cpu_Config* Components_Component_Cpu_Config::New(::google::protobuf::Arena* arena) const {
  Components_Component_Cpu_Config* n = new Components_Component_Cpu_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Cpu_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Cpu.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Components_Component_Cpu_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Cpu.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Cpu.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Cpu.Config)
  return false;
#undef DO_
}

void Components_Component_Cpu_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Cpu.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Cpu.Config)
}

::google::protobuf::uint8* Components_Component_Cpu_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Cpu.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Cpu.Config)
  return target;
}

size_t Components_Component_Cpu_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Cpu.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Cpu_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Cpu.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Cpu_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Cpu_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Cpu.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Cpu.Config)
    MergeFrom(*source);
  }
}

void Components_Component_Cpu_Config::MergeFrom(const Components_Component_Cpu_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Cpu.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Components_Component_Cpu_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Cpu.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Cpu_Config::CopyFrom(const Components_Component_Cpu_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Cpu.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Cpu_Config::IsInitialized() const {
  return true;
}

void Components_Component_Cpu_Config::Swap(Components_Component_Cpu_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Cpu_Config::InternalSwap(Components_Component_Cpu_Config* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Cpu_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Cpu_State::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Cpu_State::Components_Component_Cpu_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Cpu_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Cpu.State)
}
Components_Component_Cpu_State::Components_Component_Cpu_State(const Components_Component_Cpu_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Cpu.State)
}

void Components_Component_Cpu_State::SharedCtor() {
  _cached_size_ = 0;
}

Components_Component_Cpu_State::~Components_Component_Cpu_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Cpu.State)
  SharedDtor();
}

void Components_Component_Cpu_State::SharedDtor() {
}

void Components_Component_Cpu_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Cpu_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Cpu_State& Components_Component_Cpu_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Cpu_State();
  return *internal_default_instance();
}

Components_Component_Cpu_State* Components_Component_Cpu_State::New(::google::protobuf::Arena* arena) const {
  Components_Component_Cpu_State* n = new Components_Component_Cpu_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Cpu_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Cpu.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Components_Component_Cpu_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Cpu.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Cpu.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Cpu.State)
  return false;
#undef DO_
}

void Components_Component_Cpu_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Cpu.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Cpu.State)
}

::google::protobuf::uint8* Components_Component_Cpu_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Cpu.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Cpu.State)
  return target;
}

size_t Components_Component_Cpu_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Cpu.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Cpu_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Cpu.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Cpu_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Cpu_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Cpu.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Cpu.State)
    MergeFrom(*source);
  }
}

void Components_Component_Cpu_State::MergeFrom(const Components_Component_Cpu_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Cpu.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Components_Component_Cpu_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Cpu.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Cpu_State::CopyFrom(const Components_Component_Cpu_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Cpu.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Cpu_State::IsInitialized() const {
  return true;
}

void Components_Component_Cpu_State::Swap(Components_Component_Cpu_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Cpu_State::InternalSwap(Components_Component_Cpu_State* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Cpu_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Cpu_Utilization_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Cpu_Utilization_State_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Cpu_Utilization_State_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Cpu_Utilization_State_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Cpu_Utilization_State_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Cpu_Utilization_State_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Components_Component_Cpu_Utilization_State::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void Components_Component_Cpu_Utilization_State::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void Components_Component_Cpu_Utilization_State::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void Components_Component_Cpu_Utilization_State::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void Components_Component_Cpu_Utilization_State::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Cpu_Utilization_State::kAvgFieldNumber;
const int Components_Component_Cpu_Utilization_State::kInstantFieldNumber;
const int Components_Component_Cpu_Utilization_State::kIntervalFieldNumber;
const int Components_Component_Cpu_Utilization_State::kMaxFieldNumber;
const int Components_Component_Cpu_Utilization_State::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Cpu_Utilization_State::Components_Component_Cpu_Utilization_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Cpu_Utilization_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State)
}
Components_Component_Cpu_Utilization_State::Components_Component_Cpu_Utilization_State(const Components_Component_Cpu_Utilization_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_max()) {
    max_ = new ::ywrapper::UintValue(*from.max_);
  } else {
    max_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::ywrapper::UintValue(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::UintValue(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_instant()) {
    instant_ = new ::ywrapper::UintValue(*from.instant_);
  } else {
    instant_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State)
}

void Components_Component_Cpu_Utilization_State::SharedCtor() {
  ::memset(&max_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instant_) -
      reinterpret_cast<char*>(&max_)) + sizeof(instant_));
  _cached_size_ = 0;
}

Components_Component_Cpu_Utilization_State::~Components_Component_Cpu_Utilization_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State)
  SharedDtor();
}

void Components_Component_Cpu_Utilization_State::SharedDtor() {
  if (this != internal_default_instance()) delete max_;
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete instant_;
}

void Components_Component_Cpu_Utilization_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Cpu_Utilization_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Cpu_Utilization_State& Components_Component_Cpu_Utilization_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Cpu_Utilization_State();
  return *internal_default_instance();
}

Components_Component_Cpu_Utilization_State* Components_Component_Cpu_Utilization_State::New(::google::protobuf::Arena* arena) const {
  Components_Component_Cpu_Utilization_State* n = new Components_Component_Cpu_Utilization_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Cpu_Utilization_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Cpu_Utilization_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2848299674u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue max = 40556458 [(.yext.schemapath) = "/components/component/cpu/utilization/state/max"];
      case 40556458: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 324451666 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue min = 174777348 [(.yext.schemapath) = "/components/component/cpu/utilization/state/min"];
      case 174777348: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 1398218786 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue avg = 223138920 [(.yext.schemapath) = "/components/component/cpu/utilization/state/avg"];
      case 223138920: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 1785111362 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue interval = 245556819 [(.yext.schemapath) = "/components/component/cpu/utilization/state/interval"];
      case 245556819: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 1964454554 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue instant = 356037459 [(.yext.schemapath) = "/components/component/cpu/utilization/state/instant"];
      case 356037459: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 2848299674 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State)
  return false;
#undef DO_
}

void Components_Component_Cpu_Utilization_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue max = 40556458 [(.yext.schemapath) = "/components/component/cpu/utilization/state/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40556458, *this->max_, output);
  }

  // .ywrapper.UintValue min = 174777348 [(.yext.schemapath) = "/components/component/cpu/utilization/state/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      174777348, *this->min_, output);
  }

  // .ywrapper.UintValue avg = 223138920 [(.yext.schemapath) = "/components/component/cpu/utilization/state/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      223138920, *this->avg_, output);
  }

  // .ywrapper.UintValue interval = 245556819 [(.yext.schemapath) = "/components/component/cpu/utilization/state/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      245556819, *this->interval_, output);
  }

  // .ywrapper.UintValue instant = 356037459 [(.yext.schemapath) = "/components/component/cpu/utilization/state/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      356037459, *this->instant_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State)
}

::google::protobuf::uint8* Components_Component_Cpu_Utilization_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue max = 40556458 [(.yext.schemapath) = "/components/component/cpu/utilization/state/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        40556458, *this->max_, deterministic, target);
  }

  // .ywrapper.UintValue min = 174777348 [(.yext.schemapath) = "/components/component/cpu/utilization/state/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        174777348, *this->min_, deterministic, target);
  }

  // .ywrapper.UintValue avg = 223138920 [(.yext.schemapath) = "/components/component/cpu/utilization/state/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        223138920, *this->avg_, deterministic, target);
  }

  // .ywrapper.UintValue interval = 245556819 [(.yext.schemapath) = "/components/component/cpu/utilization/state/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        245556819, *this->interval_, deterministic, target);
  }

  // .ywrapper.UintValue instant = 356037459 [(.yext.schemapath) = "/components/component/cpu/utilization/state/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        356037459, *this->instant_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State)
  return target;
}

size_t Components_Component_Cpu_Utilization_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue max = 40556458 [(.yext.schemapath) = "/components/component/cpu/utilization/state/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  // .ywrapper.UintValue min = 174777348 [(.yext.schemapath) = "/components/component/cpu/utilization/state/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  // .ywrapper.UintValue avg = 223138920 [(.yext.schemapath) = "/components/component/cpu/utilization/state/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.UintValue interval = 245556819 [(.yext.schemapath) = "/components/component/cpu/utilization/state/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.UintValue instant = 356037459 [(.yext.schemapath) = "/components/component/cpu/utilization/state/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Cpu_Utilization_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Cpu_Utilization_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Cpu_Utilization_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State)
    MergeFrom(*source);
  }
}

void Components_Component_Cpu_Utilization_State::MergeFrom(const Components_Component_Cpu_Utilization_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_max()) {
    mutable_max()->::ywrapper::UintValue::MergeFrom(from.max());
  }
  if (from.has_min()) {
    mutable_min()->::ywrapper::UintValue::MergeFrom(from.min());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::UintValue::MergeFrom(from.avg());
  }
  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_instant()) {
    mutable_instant()->::ywrapper::UintValue::MergeFrom(from.instant());
  }
}

void Components_Component_Cpu_Utilization_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Cpu_Utilization_State::CopyFrom(const Components_Component_Cpu_Utilization_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Cpu_Utilization_State::IsInitialized() const {
  return true;
}

void Components_Component_Cpu_Utilization_State::Swap(Components_Component_Cpu_Utilization_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Cpu_Utilization_State::InternalSwap(Components_Component_Cpu_Utilization_State* other) {
  using std::swap;
  swap(max_, other->max_);
  swap(min_, other->min_);
  swap(avg_, other->avg_);
  swap(interval_, other->interval_);
  swap(instant_, other->instant_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Cpu_Utilization_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Cpu_Utilization::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Cpu_Utilization_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization_State*>(
      ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Cpu_Utilization::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Cpu_Utilization::Components_Component_Cpu_Utilization()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Cpu_Utilization();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Cpu.Utilization)
}
Components_Component_Cpu_Utilization::Components_Component_Cpu_Utilization(const Components_Component_Cpu_Utilization& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Cpu.Utilization)
}

void Components_Component_Cpu_Utilization::SharedCtor() {
  state_ = NULL;
  _cached_size_ = 0;
}

Components_Component_Cpu_Utilization::~Components_Component_Cpu_Utilization() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Cpu.Utilization)
  SharedDtor();
}

void Components_Component_Cpu_Utilization::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
}

void Components_Component_Cpu_Utilization::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Cpu_Utilization::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Cpu_Utilization& Components_Component_Cpu_Utilization::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Cpu_Utilization();
  return *internal_default_instance();
}

Components_Component_Cpu_Utilization* Components_Component_Cpu_Utilization::New(::google::protobuf::Arena* arena) const {
  Components_Component_Cpu_Utilization* n = new Components_Component_Cpu_Utilization;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Cpu_Utilization::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Cpu.Utilization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Cpu_Utilization::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Cpu.Utilization)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1124429354u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State state = 140553669 [(.yext.schemapath) = "/components/component/cpu/utilization/state"];
      case 140553669: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 1124429354 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Cpu.Utilization)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Cpu.Utilization)
  return false;
#undef DO_
}

void Components_Component_Cpu_Utilization::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Cpu.Utilization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State state = 140553669 [(.yext.schemapath) = "/components/component/cpu/utilization/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      140553669, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Cpu.Utilization)
}

::google::protobuf::uint8* Components_Component_Cpu_Utilization::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Cpu.Utilization)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State state = 140553669 [(.yext.schemapath) = "/components/component/cpu/utilization/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        140553669, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Cpu.Utilization)
  return target;
}

size_t Components_Component_Cpu_Utilization::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Cpu.Utilization)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_platform.Components.Component.Cpu.Utilization.State state = 140553669 [(.yext.schemapath) = "/components/component/cpu/utilization/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Cpu_Utilization::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Cpu.Utilization)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Cpu_Utilization* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Cpu_Utilization>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Cpu.Utilization)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Cpu.Utilization)
    MergeFrom(*source);
  }
}

void Components_Component_Cpu_Utilization::MergeFrom(const Components_Component_Cpu_Utilization& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Cpu.Utilization)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_platform::Components_Component_Cpu_Utilization_State::MergeFrom(from.state());
  }
}

void Components_Component_Cpu_Utilization::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Cpu.Utilization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Cpu_Utilization::CopyFrom(const Components_Component_Cpu_Utilization& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Cpu.Utilization)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Cpu_Utilization::IsInitialized() const {
  return true;
}

void Components_Component_Cpu_Utilization::Swap(Components_Component_Cpu_Utilization* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Cpu_Utilization::InternalSwap(Components_Component_Cpu_Utilization* other) {
  using std::swap;
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Cpu_Utilization::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Cpu::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Cpu_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Cpu_Config*>(
      ::openconfig::openconfig_platform::Components_Component_Cpu_Config::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Cpu_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Cpu_State*>(
      ::openconfig::openconfig_platform::Components_Component_Cpu_State::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Cpu_default_instance_._instance.get_mutable()->utilization_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization*>(
      ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Cpu::kConfigFieldNumber;
const int Components_Component_Cpu::kStateFieldNumber;
const int Components_Component_Cpu::kUtilizationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Cpu::Components_Component_Cpu()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Cpu();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Cpu)
}
Components_Component_Cpu::Components_Component_Cpu(const Components_Component_Cpu& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Cpu_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_utilization()) {
    utilization_ = new ::openconfig::openconfig_platform::Components_Component_Cpu_Utilization(*from.utilization_);
  } else {
    utilization_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Cpu_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Cpu)
}

void Components_Component_Cpu::SharedCtor() {
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&config_)) + sizeof(state_));
  _cached_size_ = 0;
}

Components_Component_Cpu::~Components_Component_Cpu() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Cpu)
  SharedDtor();
}

void Components_Component_Cpu::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete utilization_;
  if (this != internal_default_instance()) delete state_;
}

void Components_Component_Cpu::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Cpu::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Cpu& Components_Component_Cpu::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Cpu();
  return *internal_default_instance();
}

Components_Component_Cpu* Components_Component_Cpu::New(::google::protobuf::Arena* arena) const {
  Components_Component_Cpu* n = new Components_Component_Cpu;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Cpu::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Cpu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && utilization_ != NULL) {
    delete utilization_;
  }
  utilization_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Cpu::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Cpu)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3946879746u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_platform.Components.Component.Cpu.Config config = 14534639 [(.yext.schemapath) = "/components/component/cpu/config"];
      case 14534639: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 116277114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Cpu.Utilization utilization = 437681307 [(.yext.schemapath) = "/components/component/cpu/utilization"];
      case 437681307: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 3501450458 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_utilization()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Cpu.State state = 493359968 [(.yext.schemapath) = "/components/component/cpu/state"];
      case 493359968: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 3946879746 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Cpu)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Cpu)
  return false;
#undef DO_
}

void Components_Component_Cpu::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Cpu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Cpu.Config config = 14534639 [(.yext.schemapath) = "/components/component/cpu/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14534639, *this->config_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Cpu.Utilization utilization = 437681307 [(.yext.schemapath) = "/components/component/cpu/utilization"];
  if (this->has_utilization()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      437681307, *this->utilization_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Cpu.State state = 493359968 [(.yext.schemapath) = "/components/component/cpu/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      493359968, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Cpu)
}

::google::protobuf::uint8* Components_Component_Cpu::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Cpu)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Cpu.Config config = 14534639 [(.yext.schemapath) = "/components/component/cpu/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14534639, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Cpu.Utilization utilization = 437681307 [(.yext.schemapath) = "/components/component/cpu/utilization"];
  if (this->has_utilization()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        437681307, *this->utilization_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Cpu.State state = 493359968 [(.yext.schemapath) = "/components/component/cpu/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        493359968, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Cpu)
  return target;
}

size_t Components_Component_Cpu::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Cpu)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_platform.Components.Component.Cpu.Config config = 14534639 [(.yext.schemapath) = "/components/component/cpu/config"];
  if (this->has_config()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_platform.Components.Component.Cpu.Utilization utilization = 437681307 [(.yext.schemapath) = "/components/component/cpu/utilization"];
  if (this->has_utilization()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->utilization_);
  }

  // .openconfig.openconfig_platform.Components.Component.Cpu.State state = 493359968 [(.yext.schemapath) = "/components/component/cpu/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Cpu::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Cpu)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Cpu* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Cpu>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Cpu)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Cpu)
    MergeFrom(*source);
  }
}

void Components_Component_Cpu::MergeFrom(const Components_Component_Cpu& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Cpu)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_platform::Components_Component_Cpu_Config::MergeFrom(from.config());
  }
  if (from.has_utilization()) {
    mutable_utilization()->::openconfig::openconfig_platform::Components_Component_Cpu_Utilization::MergeFrom(from.utilization());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_platform::Components_Component_Cpu_State::MergeFrom(from.state());
  }
}

void Components_Component_Cpu::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Cpu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Cpu::CopyFrom(const Components_Component_Cpu& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Cpu)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Cpu::IsInitialized() const {
  return true;
}

void Components_Component_Cpu::Swap(Components_Component_Cpu* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Cpu::InternalSwap(Components_Component_Cpu* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(utilization_, other->utilization_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Cpu::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Fabric_Config::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Fabric_Config::Components_Component_Fabric_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Fabric_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Fabric.Config)
}
Components_Component_Fabric_Config::Components_Component_Fabric_Config(const Components_Component_Fabric_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Fabric.Config)
}

void Components_Component_Fabric_Config::SharedCtor() {
  _cached_size_ = 0;
}

Components_Component_Fabric_Config::~Components_Component_Fabric_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Fabric.Config)
  SharedDtor();
}

void Components_Component_Fabric_Config::SharedDtor() {
}

void Components_Component_Fabric_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Fabric_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Fabric_Config& Components_Component_Fabric_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Fabric_Config();
  return *internal_default_instance();
}

Components_Component_Fabric_Config* Components_Component_Fabric_Config::New(::google::protobuf::Arena* arena) const {
  Components_Component_Fabric_Config* n = new Components_Component_Fabric_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Fabric_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Fabric.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Components_Component_Fabric_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Fabric.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Fabric.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Fabric.Config)
  return false;
#undef DO_
}

void Components_Component_Fabric_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Fabric.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Fabric.Config)
}

::google::protobuf::uint8* Components_Component_Fabric_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Fabric.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Fabric.Config)
  return target;
}

size_t Components_Component_Fabric_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Fabric.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Fabric_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Fabric.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Fabric_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Fabric_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Fabric.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Fabric.Config)
    MergeFrom(*source);
  }
}

void Components_Component_Fabric_Config::MergeFrom(const Components_Component_Fabric_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Fabric.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Components_Component_Fabric_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Fabric.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Fabric_Config::CopyFrom(const Components_Component_Fabric_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Fabric.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Fabric_Config::IsInitialized() const {
  return true;
}

void Components_Component_Fabric_Config::Swap(Components_Component_Fabric_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Fabric_Config::InternalSwap(Components_Component_Fabric_Config* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Fabric_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Fabric_State::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Fabric_State::Components_Component_Fabric_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Fabric_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Fabric.State)
}
Components_Component_Fabric_State::Components_Component_Fabric_State(const Components_Component_Fabric_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Fabric.State)
}

void Components_Component_Fabric_State::SharedCtor() {
  _cached_size_ = 0;
}

Components_Component_Fabric_State::~Components_Component_Fabric_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Fabric.State)
  SharedDtor();
}

void Components_Component_Fabric_State::SharedDtor() {
}

void Components_Component_Fabric_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Fabric_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Fabric_State& Components_Component_Fabric_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Fabric_State();
  return *internal_default_instance();
}

Components_Component_Fabric_State* Components_Component_Fabric_State::New(::google::protobuf::Arena* arena) const {
  Components_Component_Fabric_State* n = new Components_Component_Fabric_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Fabric_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Fabric.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Components_Component_Fabric_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Fabric.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Fabric.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Fabric.State)
  return false;
#undef DO_
}

void Components_Component_Fabric_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Fabric.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Fabric.State)
}

::google::protobuf::uint8* Components_Component_Fabric_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Fabric.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Fabric.State)
  return target;
}

size_t Components_Component_Fabric_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Fabric.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Fabric_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Fabric.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Fabric_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Fabric_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Fabric.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Fabric.State)
    MergeFrom(*source);
  }
}

void Components_Component_Fabric_State::MergeFrom(const Components_Component_Fabric_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Fabric.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Components_Component_Fabric_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Fabric.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Fabric_State::CopyFrom(const Components_Component_Fabric_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Fabric.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Fabric_State::IsInitialized() const {
  return true;
}

void Components_Component_Fabric_State::Swap(Components_Component_Fabric_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Fabric_State::InternalSwap(Components_Component_Fabric_State* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Fabric_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Fabric::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Fabric_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Fabric_Config*>(
      ::openconfig::openconfig_platform::Components_Component_Fabric_Config::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Fabric_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Fabric_State*>(
      ::openconfig::openconfig_platform::Components_Component_Fabric_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Fabric::kConfigFieldNumber;
const int Components_Component_Fabric::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Fabric::Components_Component_Fabric()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Fabric();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Fabric)
}
Components_Component_Fabric::Components_Component_Fabric(const Components_Component_Fabric& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Fabric_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Fabric_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Fabric)
}

void Components_Component_Fabric::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&state_)) + sizeof(config_));
  _cached_size_ = 0;
}

Components_Component_Fabric::~Components_Component_Fabric() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Fabric)
  SharedDtor();
}

void Components_Component_Fabric::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
}

void Components_Component_Fabric::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Fabric::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Fabric& Components_Component_Fabric::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Fabric();
  return *internal_default_instance();
}

Components_Component_Fabric* Components_Component_Fabric::New(::google::protobuf::Arena* arena) const {
  Components_Component_Fabric* n = new Components_Component_Fabric;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Fabric::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Fabric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Fabric::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Fabric)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1163949730u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_platform.Components.Component.Fabric.State state = 140431213 [(.yext.schemapath) = "/components/component/fabric/state"];
      case 140431213: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 1123449706 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Fabric.Config config = 145493716 [(.yext.schemapath) = "/components/component/fabric/config"];
      case 145493716: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 1163949730 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Fabric)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Fabric)
  return false;
#undef DO_
}

void Components_Component_Fabric::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Fabric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Fabric.State state = 140431213 [(.yext.schemapath) = "/components/component/fabric/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      140431213, *this->state_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Fabric.Config config = 145493716 [(.yext.schemapath) = "/components/component/fabric/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      145493716, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Fabric)
}

::google::protobuf::uint8* Components_Component_Fabric::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Fabric)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Fabric.State state = 140431213 [(.yext.schemapath) = "/components/component/fabric/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        140431213, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Fabric.Config config = 145493716 [(.yext.schemapath) = "/components/component/fabric/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        145493716, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Fabric)
  return target;
}

size_t Components_Component_Fabric::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Fabric)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_platform.Components.Component.Fabric.State state = 140431213 [(.yext.schemapath) = "/components/component/fabric/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_platform.Components.Component.Fabric.Config config = 145493716 [(.yext.schemapath) = "/components/component/fabric/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Fabric::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Fabric)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Fabric* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Fabric>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Fabric)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Fabric)
    MergeFrom(*source);
  }
}

void Components_Component_Fabric::MergeFrom(const Components_Component_Fabric& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Fabric)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_platform::Components_Component_Fabric_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_platform::Components_Component_Fabric_Config::MergeFrom(from.config());
  }
}

void Components_Component_Fabric::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Fabric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Fabric::CopyFrom(const Components_Component_Fabric& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Fabric)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Fabric::IsInitialized() const {
  return true;
}

void Components_Component_Fabric::Swap(Components_Component_Fabric* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Fabric::InternalSwap(Components_Component_Fabric* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Fabric::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Fan_Config::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Fan_Config::Components_Component_Fan_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Fan_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Fan.Config)
}
Components_Component_Fan_Config::Components_Component_Fan_Config(const Components_Component_Fan_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Fan.Config)
}

void Components_Component_Fan_Config::SharedCtor() {
  _cached_size_ = 0;
}

Components_Component_Fan_Config::~Components_Component_Fan_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Fan.Config)
  SharedDtor();
}

void Components_Component_Fan_Config::SharedDtor() {
}

void Components_Component_Fan_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Fan_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Fan_Config& Components_Component_Fan_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Fan_Config();
  return *internal_default_instance();
}

Components_Component_Fan_Config* Components_Component_Fan_Config::New(::google::protobuf::Arena* arena) const {
  Components_Component_Fan_Config* n = new Components_Component_Fan_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Fan_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Fan.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Components_Component_Fan_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Fan.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Fan.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Fan.Config)
  return false;
#undef DO_
}

void Components_Component_Fan_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Fan.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Fan.Config)
}

::google::protobuf::uint8* Components_Component_Fan_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Fan.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Fan.Config)
  return target;
}

size_t Components_Component_Fan_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Fan.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Fan_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Fan.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Fan_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Fan_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Fan.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Fan.Config)
    MergeFrom(*source);
  }
}

void Components_Component_Fan_Config::MergeFrom(const Components_Component_Fan_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Fan.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Components_Component_Fan_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Fan.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Fan_Config::CopyFrom(const Components_Component_Fan_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Fan.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Fan_Config::IsInitialized() const {
  return true;
}

void Components_Component_Fan_Config::Swap(Components_Component_Fan_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Fan_Config::InternalSwap(Components_Component_Fan_Config* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Fan_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Fan_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Fan_State_default_instance_._instance.get_mutable()->speed_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Components_Component_Fan_State::clear_speed() {
  if (GetArenaNoVirtual() == NULL && speed_ != NULL) {
    delete speed_;
  }
  speed_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Fan_State::kSpeedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Fan_State::Components_Component_Fan_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Fan_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Fan.State)
}
Components_Component_Fan_State::Components_Component_Fan_State(const Components_Component_Fan_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_speed()) {
    speed_ = new ::ywrapper::UintValue(*from.speed_);
  } else {
    speed_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Fan.State)
}

void Components_Component_Fan_State::SharedCtor() {
  speed_ = NULL;
  _cached_size_ = 0;
}

Components_Component_Fan_State::~Components_Component_Fan_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Fan.State)
  SharedDtor();
}

void Components_Component_Fan_State::SharedDtor() {
  if (this != internal_default_instance()) delete speed_;
}

void Components_Component_Fan_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Fan_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Fan_State& Components_Component_Fan_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Fan_State();
  return *internal_default_instance();
}

Components_Component_Fan_State* Components_Component_Fan_State::New(::google::protobuf::Arena* arena) const {
  Components_Component_Fan_State* n = new Components_Component_Fan_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Fan_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Fan.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && speed_ != NULL) {
    delete speed_;
  }
  speed_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Fan_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Fan.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(317296810u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue speed = 39662101 [(.yext.schemapath) = "/components/component/fan/state/speed"];
      case 39662101: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 317296810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_speed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Fan.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Fan.State)
  return false;
#undef DO_
}

void Components_Component_Fan_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Fan.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue speed = 39662101 [(.yext.schemapath) = "/components/component/fan/state/speed"];
  if (this->has_speed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      39662101, *this->speed_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Fan.State)
}

::google::protobuf::uint8* Components_Component_Fan_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Fan.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue speed = 39662101 [(.yext.schemapath) = "/components/component/fan/state/speed"];
  if (this->has_speed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        39662101, *this->speed_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Fan.State)
  return target;
}

size_t Components_Component_Fan_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Fan.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue speed = 39662101 [(.yext.schemapath) = "/components/component/fan/state/speed"];
  if (this->has_speed()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->speed_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Fan_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Fan.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Fan_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Fan_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Fan.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Fan.State)
    MergeFrom(*source);
  }
}

void Components_Component_Fan_State::MergeFrom(const Components_Component_Fan_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Fan.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_speed()) {
    mutable_speed()->::ywrapper::UintValue::MergeFrom(from.speed());
  }
}

void Components_Component_Fan_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Fan.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Fan_State::CopyFrom(const Components_Component_Fan_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Fan.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Fan_State::IsInitialized() const {
  return true;
}

void Components_Component_Fan_State::Swap(Components_Component_Fan_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Fan_State::InternalSwap(Components_Component_Fan_State* other) {
  using std::swap;
  swap(speed_, other->speed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Fan_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Fan::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Fan_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Fan_Config*>(
      ::openconfig::openconfig_platform::Components_Component_Fan_Config::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Fan_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Fan_State*>(
      ::openconfig::openconfig_platform::Components_Component_Fan_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Fan::kConfigFieldNumber;
const int Components_Component_Fan::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Fan::Components_Component_Fan()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Fan();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Fan)
}
Components_Component_Fan::Components_Component_Fan(const Components_Component_Fan& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Fan_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Fan_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Fan)
}

void Components_Component_Fan::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&state_)) + sizeof(config_));
  _cached_size_ = 0;
}

Components_Component_Fan::~Components_Component_Fan() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Fan)
  SharedDtor();
}

void Components_Component_Fan::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
}

void Components_Component_Fan::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Fan::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Fan& Components_Component_Fan::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Fan();
  return *internal_default_instance();
}

Components_Component_Fan* Components_Component_Fan::New(::google::protobuf::Arena* arena) const {
  Components_Component_Fan* n = new Components_Component_Fan;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Fan::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Fan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Fan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Fan)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4259321026u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_platform.Components.Component.Fan.State state = 105888817 [(.yext.schemapath) = "/components/component/fan/state"];
      case 105888817: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 847110538 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Fan.Config config = 532415128 [(.yext.schemapath) = "/components/component/fan/config"];
      case 532415128: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 4259321026 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Fan)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Fan)
  return false;
#undef DO_
}

void Components_Component_Fan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Fan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Fan.State state = 105888817 [(.yext.schemapath) = "/components/component/fan/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      105888817, *this->state_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Fan.Config config = 532415128 [(.yext.schemapath) = "/components/component/fan/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      532415128, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Fan)
}

::google::protobuf::uint8* Components_Component_Fan::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Fan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Fan.State state = 105888817 [(.yext.schemapath) = "/components/component/fan/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        105888817, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Fan.Config config = 532415128 [(.yext.schemapath) = "/components/component/fan/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        532415128, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Fan)
  return target;
}

size_t Components_Component_Fan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Fan)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_platform.Components.Component.Fan.State state = 105888817 [(.yext.schemapath) = "/components/component/fan/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_platform.Components.Component.Fan.Config config = 532415128 [(.yext.schemapath) = "/components/component/fan/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Fan::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Fan)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Fan* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Fan>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Fan)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Fan)
    MergeFrom(*source);
  }
}

void Components_Component_Fan::MergeFrom(const Components_Component_Fan& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Fan)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_platform::Components_Component_Fan_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_platform::Components_Component_Fan_Config::MergeFrom(from.config());
  }
}

void Components_Component_Fan::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Fan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Fan::CopyFrom(const Components_Component_Fan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Fan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Fan::IsInitialized() const {
  return true;
}

void Components_Component_Fan::Swap(Components_Component_Fan* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Fan::InternalSwap(Components_Component_Fan* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Fan::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_IntegratedCircuit_Config::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_IntegratedCircuit_Config::Components_Component_IntegratedCircuit_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_IntegratedCircuit_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.Config)
}
Components_Component_IntegratedCircuit_Config::Components_Component_IntegratedCircuit_Config(const Components_Component_IntegratedCircuit_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.Config)
}

void Components_Component_IntegratedCircuit_Config::SharedCtor() {
  _cached_size_ = 0;
}

Components_Component_IntegratedCircuit_Config::~Components_Component_IntegratedCircuit_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.Config)
  SharedDtor();
}

void Components_Component_IntegratedCircuit_Config::SharedDtor() {
}

void Components_Component_IntegratedCircuit_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_IntegratedCircuit_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_IntegratedCircuit_Config& Components_Component_IntegratedCircuit_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_IntegratedCircuit_Config();
  return *internal_default_instance();
}

Components_Component_IntegratedCircuit_Config* Components_Component_IntegratedCircuit_Config::New(::google::protobuf::Arena* arena) const {
  Components_Component_IntegratedCircuit_Config* n = new Components_Component_IntegratedCircuit_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_IntegratedCircuit_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Components_Component_IntegratedCircuit_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.Config)
  return false;
#undef DO_
}

void Components_Component_IntegratedCircuit_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.Config)
}

::google::protobuf::uint8* Components_Component_IntegratedCircuit_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.Config)
  return target;
}

size_t Components_Component_IntegratedCircuit_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_IntegratedCircuit_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_IntegratedCircuit_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_IntegratedCircuit_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.Config)
    MergeFrom(*source);
  }
}

void Components_Component_IntegratedCircuit_Config::MergeFrom(const Components_Component_IntegratedCircuit_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Components_Component_IntegratedCircuit_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_IntegratedCircuit_Config::CopyFrom(const Components_Component_IntegratedCircuit_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_IntegratedCircuit_Config::IsInitialized() const {
  return true;
}

void Components_Component_IntegratedCircuit_Config::Swap(Components_Component_IntegratedCircuit_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_IntegratedCircuit_Config::InternalSwap(Components_Component_IntegratedCircuit_Config* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_IntegratedCircuit_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_IntegratedCircuit_State::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_IntegratedCircuit_State::Components_Component_IntegratedCircuit_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_IntegratedCircuit_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.State)
}
Components_Component_IntegratedCircuit_State::Components_Component_IntegratedCircuit_State(const Components_Component_IntegratedCircuit_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.State)
}

void Components_Component_IntegratedCircuit_State::SharedCtor() {
  _cached_size_ = 0;
}

Components_Component_IntegratedCircuit_State::~Components_Component_IntegratedCircuit_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.State)
  SharedDtor();
}

void Components_Component_IntegratedCircuit_State::SharedDtor() {
}

void Components_Component_IntegratedCircuit_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_IntegratedCircuit_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_IntegratedCircuit_State& Components_Component_IntegratedCircuit_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_IntegratedCircuit_State();
  return *internal_default_instance();
}

Components_Component_IntegratedCircuit_State* Components_Component_IntegratedCircuit_State::New(::google::protobuf::Arena* arena) const {
  Components_Component_IntegratedCircuit_State* n = new Components_Component_IntegratedCircuit_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_IntegratedCircuit_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Components_Component_IntegratedCircuit_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.State)
  return false;
#undef DO_
}

void Components_Component_IntegratedCircuit_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.State)
}

::google::protobuf::uint8* Components_Component_IntegratedCircuit_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.State)
  return target;
}

size_t Components_Component_IntegratedCircuit_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_IntegratedCircuit_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_IntegratedCircuit_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_IntegratedCircuit_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.State)
    MergeFrom(*source);
  }
}

void Components_Component_IntegratedCircuit_State::MergeFrom(const Components_Component_IntegratedCircuit_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Components_Component_IntegratedCircuit_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_IntegratedCircuit_State::CopyFrom(const Components_Component_IntegratedCircuit_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.IntegratedCircuit.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_IntegratedCircuit_State::IsInitialized() const {
  return true;
}

void Components_Component_IntegratedCircuit_State::Swap(Components_Component_IntegratedCircuit_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_IntegratedCircuit_State::InternalSwap(Components_Component_IntegratedCircuit_State* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_IntegratedCircuit_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_IntegratedCircuit::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_IntegratedCircuit_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_Config*>(
      ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_Config::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_IntegratedCircuit_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_State*>(
      ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_IntegratedCircuit::kConfigFieldNumber;
const int Components_Component_IntegratedCircuit::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_IntegratedCircuit::Components_Component_IntegratedCircuit()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_IntegratedCircuit();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.IntegratedCircuit)
}
Components_Component_IntegratedCircuit::Components_Component_IntegratedCircuit(const Components_Component_IntegratedCircuit& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.IntegratedCircuit)
}

void Components_Component_IntegratedCircuit::SharedCtor() {
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&config_)) + sizeof(state_));
  _cached_size_ = 0;
}

Components_Component_IntegratedCircuit::~Components_Component_IntegratedCircuit() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.IntegratedCircuit)
  SharedDtor();
}

void Components_Component_IntegratedCircuit::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete state_;
}

void Components_Component_IntegratedCircuit::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_IntegratedCircuit::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_IntegratedCircuit& Components_Component_IntegratedCircuit::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_IntegratedCircuit();
  return *internal_default_instance();
}

Components_Component_IntegratedCircuit* Components_Component_IntegratedCircuit::New(::google::protobuf::Arena* arena) const {
  Components_Component_IntegratedCircuit* n = new Components_Component_IntegratedCircuit;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_IntegratedCircuit::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.IntegratedCircuit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_IntegratedCircuit::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.IntegratedCircuit)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3209877594u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_platform.Components.Component.IntegratedCircuit.Config config = 104535454 [(.yext.schemapath) = "/components/component/integrated-circuit/config"];
      case 104535454: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 836283634 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.IntegratedCircuit.State state = 401234699 [(.yext.schemapath) = "/components/component/integrated-circuit/state"];
      case 401234699: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 3209877594 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.IntegratedCircuit)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.IntegratedCircuit)
  return false;
#undef DO_
}

void Components_Component_IntegratedCircuit::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.IntegratedCircuit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.IntegratedCircuit.Config config = 104535454 [(.yext.schemapath) = "/components/component/integrated-circuit/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      104535454, *this->config_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.IntegratedCircuit.State state = 401234699 [(.yext.schemapath) = "/components/component/integrated-circuit/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      401234699, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.IntegratedCircuit)
}

::google::protobuf::uint8* Components_Component_IntegratedCircuit::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.IntegratedCircuit)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.IntegratedCircuit.Config config = 104535454 [(.yext.schemapath) = "/components/component/integrated-circuit/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        104535454, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.IntegratedCircuit.State state = 401234699 [(.yext.schemapath) = "/components/component/integrated-circuit/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        401234699, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.IntegratedCircuit)
  return target;
}

size_t Components_Component_IntegratedCircuit::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.IntegratedCircuit)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_platform.Components.Component.IntegratedCircuit.Config config = 104535454 [(.yext.schemapath) = "/components/component/integrated-circuit/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_platform.Components.Component.IntegratedCircuit.State state = 401234699 [(.yext.schemapath) = "/components/component/integrated-circuit/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_IntegratedCircuit::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.IntegratedCircuit)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_IntegratedCircuit* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_IntegratedCircuit>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.IntegratedCircuit)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.IntegratedCircuit)
    MergeFrom(*source);
  }
}

void Components_Component_IntegratedCircuit::MergeFrom(const Components_Component_IntegratedCircuit& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.IntegratedCircuit)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_Config::MergeFrom(from.config());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_platform::Components_Component_IntegratedCircuit_State::MergeFrom(from.state());
  }
}

void Components_Component_IntegratedCircuit::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.IntegratedCircuit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_IntegratedCircuit::CopyFrom(const Components_Component_IntegratedCircuit& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.IntegratedCircuit)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_IntegratedCircuit::IsInitialized() const {
  return true;
}

void Components_Component_IntegratedCircuit::Swap(Components_Component_IntegratedCircuit* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_IntegratedCircuit::InternalSwap(Components_Component_IntegratedCircuit* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_IntegratedCircuit::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Linecard_Config::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Linecard_Config::kPowerAdminStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Linecard_Config::Components_Component_Linecard_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Linecard_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Linecard.Config)
}
Components_Component_Linecard_Config::Components_Component_Linecard_Config(const Components_Component_Linecard_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  power_admin_state_ = from.power_admin_state_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Linecard.Config)
}

void Components_Component_Linecard_Config::SharedCtor() {
  power_admin_state_ = 0;
  _cached_size_ = 0;
}

Components_Component_Linecard_Config::~Components_Component_Linecard_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Linecard.Config)
  SharedDtor();
}

void Components_Component_Linecard_Config::SharedDtor() {
}

void Components_Component_Linecard_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Linecard_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Linecard_Config& Components_Component_Linecard_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Linecard_Config();
  return *internal_default_instance();
}

Components_Component_Linecard_Config* Components_Component_Linecard_Config::New(::google::protobuf::Arena* arena) const {
  Components_Component_Linecard_Config* n = new Components_Component_Linecard_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Linecard_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Linecard.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  power_admin_state_ = 0;
  _internal_metadata_.Clear();
}

bool Components_Component_Linecard_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Linecard.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3687193896u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.enums.OpenconfigPlatformLinecardComponentPowerType power_admin_state = 460899237 [(.yext.schemapath) = "/components/component/linecard/config/power-admin-state"];
      case 460899237: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 3687193896 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_power_admin_state(static_cast< ::openconfig::enums::OpenconfigPlatformLinecardComponentPowerType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Linecard.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Linecard.Config)
  return false;
#undef DO_
}

void Components_Component_Linecard_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Linecard.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigPlatformLinecardComponentPowerType power_admin_state = 460899237 [(.yext.schemapath) = "/components/component/linecard/config/power-admin-state"];
  if (this->power_admin_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      460899237, this->power_admin_state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Linecard.Config)
}

::google::protobuf::uint8* Components_Component_Linecard_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Linecard.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigPlatformLinecardComponentPowerType power_admin_state = 460899237 [(.yext.schemapath) = "/components/component/linecard/config/power-admin-state"];
  if (this->power_admin_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      460899237, this->power_admin_state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Linecard.Config)
  return target;
}

size_t Components_Component_Linecard_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Linecard.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.enums.OpenconfigPlatformLinecardComponentPowerType power_admin_state = 460899237 [(.yext.schemapath) = "/components/component/linecard/config/power-admin-state"];
  if (this->power_admin_state() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->power_admin_state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Linecard_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Linecard.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Linecard_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Linecard_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Linecard.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Linecard.Config)
    MergeFrom(*source);
  }
}

void Components_Component_Linecard_Config::MergeFrom(const Components_Component_Linecard_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Linecard.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.power_admin_state() != 0) {
    set_power_admin_state(from.power_admin_state());
  }
}

void Components_Component_Linecard_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Linecard.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Linecard_Config::CopyFrom(const Components_Component_Linecard_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Linecard.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Linecard_Config::IsInitialized() const {
  return true;
}

void Components_Component_Linecard_Config::Swap(Components_Component_Linecard_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Linecard_Config::InternalSwap(Components_Component_Linecard_Config* other) {
  using std::swap;
  swap(power_admin_state_, other->power_admin_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Linecard_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Linecard_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Linecard_State_default_instance_._instance.get_mutable()->slot_id_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void Components_Component_Linecard_State::clear_slot_id() {
  if (GetArenaNoVirtual() == NULL && slot_id_ != NULL) {
    delete slot_id_;
  }
  slot_id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Linecard_State::kPowerAdminStateFieldNumber;
const int Components_Component_Linecard_State::kSlotIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Linecard_State::Components_Component_Linecard_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Linecard_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Linecard.State)
}
Components_Component_Linecard_State::Components_Component_Linecard_State(const Components_Component_Linecard_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_slot_id()) {
    slot_id_ = new ::ywrapper::StringValue(*from.slot_id_);
  } else {
    slot_id_ = NULL;
  }
  power_admin_state_ = from.power_admin_state_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Linecard.State)
}

void Components_Component_Linecard_State::SharedCtor() {
  ::memset(&slot_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&power_admin_state_) -
      reinterpret_cast<char*>(&slot_id_)) + sizeof(power_admin_state_));
  _cached_size_ = 0;
}

Components_Component_Linecard_State::~Components_Component_Linecard_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Linecard.State)
  SharedDtor();
}

void Components_Component_Linecard_State::SharedDtor() {
  if (this != internal_default_instance()) delete slot_id_;
}

void Components_Component_Linecard_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Linecard_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Linecard_State& Components_Component_Linecard_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Linecard_State();
  return *internal_default_instance();
}

Components_Component_Linecard_State* Components_Component_Linecard_State::New(::google::protobuf::Arena* arena) const {
  Components_Component_Linecard_State* n = new Components_Component_Linecard_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Linecard_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Linecard.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && slot_id_ != NULL) {
    delete slot_id_;
  }
  slot_id_ = NULL;
  power_admin_state_ = 0;
  _internal_metadata_.Clear();
}

bool Components_Component_Linecard_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Linecard.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3551269648u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue slot_id = 426044457 [(.yext.schemapath) = "/components/component/linecard/state/slot-id"];
      case 426044457: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 3408355658 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_slot_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigPlatformLinecardComponentPowerType power_admin_state = 443908706 [(.yext.schemapath) = "/components/component/linecard/state/power-admin-state"];
      case 443908706: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 3551269648 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_power_admin_state(static_cast< ::openconfig::enums::OpenconfigPlatformLinecardComponentPowerType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Linecard.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Linecard.State)
  return false;
#undef DO_
}

void Components_Component_Linecard_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Linecard.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue slot_id = 426044457 [(.yext.schemapath) = "/components/component/linecard/state/slot-id"];
  if (this->has_slot_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      426044457, *this->slot_id_, output);
  }

  // .openconfig.enums.OpenconfigPlatformLinecardComponentPowerType power_admin_state = 443908706 [(.yext.schemapath) = "/components/component/linecard/state/power-admin-state"];
  if (this->power_admin_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      443908706, this->power_admin_state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Linecard.State)
}

::google::protobuf::uint8* Components_Component_Linecard_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Linecard.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue slot_id = 426044457 [(.yext.schemapath) = "/components/component/linecard/state/slot-id"];
  if (this->has_slot_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        426044457, *this->slot_id_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigPlatformLinecardComponentPowerType power_admin_state = 443908706 [(.yext.schemapath) = "/components/component/linecard/state/power-admin-state"];
  if (this->power_admin_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      443908706, this->power_admin_state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Linecard.State)
  return target;
}

size_t Components_Component_Linecard_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Linecard.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue slot_id = 426044457 [(.yext.schemapath) = "/components/component/linecard/state/slot-id"];
  if (this->has_slot_id()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->slot_id_);
  }

  // .openconfig.enums.OpenconfigPlatformLinecardComponentPowerType power_admin_state = 443908706 [(.yext.schemapath) = "/components/component/linecard/state/power-admin-state"];
  if (this->power_admin_state() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->power_admin_state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Linecard_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Linecard.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Linecard_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Linecard_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Linecard.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Linecard.State)
    MergeFrom(*source);
  }
}

void Components_Component_Linecard_State::MergeFrom(const Components_Component_Linecard_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Linecard.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_slot_id()) {
    mutable_slot_id()->::ywrapper::StringValue::MergeFrom(from.slot_id());
  }
  if (from.power_admin_state() != 0) {
    set_power_admin_state(from.power_admin_state());
  }
}

void Components_Component_Linecard_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Linecard.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Linecard_State::CopyFrom(const Components_Component_Linecard_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Linecard.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Linecard_State::IsInitialized() const {
  return true;
}

void Components_Component_Linecard_State::Swap(Components_Component_Linecard_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Linecard_State::InternalSwap(Components_Component_Linecard_State* other) {
  using std::swap;
  swap(slot_id_, other->slot_id_);
  swap(power_admin_state_, other->power_admin_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Linecard_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Linecard::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Linecard_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Linecard_Config*>(
      ::openconfig::openconfig_platform::Components_Component_Linecard_Config::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Linecard_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Linecard_State*>(
      ::openconfig::openconfig_platform::Components_Component_Linecard_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Linecard::kConfigFieldNumber;
const int Components_Component_Linecard::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Linecard::Components_Component_Linecard()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Linecard();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Linecard)
}
Components_Component_Linecard::Components_Component_Linecard(const Components_Component_Linecard& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Linecard_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Linecard_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Linecard)
}

void Components_Component_Linecard::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&state_)) + sizeof(config_));
  _cached_size_ = 0;
}

Components_Component_Linecard::~Components_Component_Linecard() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Linecard)
  SharedDtor();
}

void Components_Component_Linecard::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
}

void Components_Component_Linecard::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Linecard::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Linecard& Components_Component_Linecard::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Linecard();
  return *internal_default_instance();
}

Components_Component_Linecard* Components_Component_Linecard::New(::google::protobuf::Arena* arena) const {
  Components_Component_Linecard* n = new Components_Component_Linecard;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Linecard::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Linecard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Linecard::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Linecard)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3370487850u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_platform.Components.Component.Linecard.State state = 252073466 [(.yext.schemapath) = "/components/component/linecard/state"];
      case 252073466: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 2016587730 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Linecard.Config config = 421310981 [(.yext.schemapath) = "/components/component/linecard/config"];
      case 421310981: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 3370487850 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Linecard)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Linecard)
  return false;
#undef DO_
}

void Components_Component_Linecard::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Linecard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Linecard.State state = 252073466 [(.yext.schemapath) = "/components/component/linecard/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      252073466, *this->state_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Linecard.Config config = 421310981 [(.yext.schemapath) = "/components/component/linecard/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      421310981, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Linecard)
}

::google::protobuf::uint8* Components_Component_Linecard::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Linecard)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Linecard.State state = 252073466 [(.yext.schemapath) = "/components/component/linecard/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        252073466, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Linecard.Config config = 421310981 [(.yext.schemapath) = "/components/component/linecard/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        421310981, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Linecard)
  return target;
}

size_t Components_Component_Linecard::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Linecard)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_platform.Components.Component.Linecard.State state = 252073466 [(.yext.schemapath) = "/components/component/linecard/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_platform.Components.Component.Linecard.Config config = 421310981 [(.yext.schemapath) = "/components/component/linecard/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Linecard::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Linecard)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Linecard* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Linecard>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Linecard)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Linecard)
    MergeFrom(*source);
  }
}

void Components_Component_Linecard::MergeFrom(const Components_Component_Linecard& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Linecard)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_platform::Components_Component_Linecard_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_platform::Components_Component_Linecard_Config::MergeFrom(from.config());
  }
}

void Components_Component_Linecard::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Linecard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Linecard::CopyFrom(const Components_Component_Linecard& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Linecard)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Linecard::IsInitialized() const {
  return true;
}

void Components_Component_Linecard::Swap(Components_Component_Linecard* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Linecard::InternalSwap(Components_Component_Linecard* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Linecard::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_OpticalChannel_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_Config_default_instance_._instance.get_mutable()->frequency_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_Config_default_instance_._instance.get_mutable()->line_port_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_Config_default_instance_._instance.get_mutable()->operational_mode_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_Config_default_instance_._instance.get_mutable()->target_output_power_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void Components_Component_OpticalChannel_Config::clear_frequency() {
  if (GetArenaNoVirtual() == NULL && frequency_ != NULL) {
    delete frequency_;
  }
  frequency_ = NULL;
}
void Components_Component_OpticalChannel_Config::clear_line_port() {
  if (GetArenaNoVirtual() == NULL && line_port_ != NULL) {
    delete line_port_;
  }
  line_port_ = NULL;
}
void Components_Component_OpticalChannel_Config::clear_operational_mode() {
  if (GetArenaNoVirtual() == NULL && operational_mode_ != NULL) {
    delete operational_mode_;
  }
  operational_mode_ = NULL;
}
void Components_Component_OpticalChannel_Config::clear_target_output_power() {
  if (GetArenaNoVirtual() == NULL && target_output_power_ != NULL) {
    delete target_output_power_;
  }
  target_output_power_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_OpticalChannel_Config::kFrequencyFieldNumber;
const int Components_Component_OpticalChannel_Config::kLinePortFieldNumber;
const int Components_Component_OpticalChannel_Config::kOperationalModeFieldNumber;
const int Components_Component_OpticalChannel_Config::kTargetOutputPowerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_OpticalChannel_Config::Components_Component_OpticalChannel_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config)
}
Components_Component_OpticalChannel_Config::Components_Component_OpticalChannel_Config(const Components_Component_OpticalChannel_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_frequency()) {
    frequency_ = new ::ywrapper::UintValue(*from.frequency_);
  } else {
    frequency_ = NULL;
  }
  if (from.has_target_output_power()) {
    target_output_power_ = new ::ywrapper::Decimal64Value(*from.target_output_power_);
  } else {
    target_output_power_ = NULL;
  }
  if (from.has_line_port()) {
    line_port_ = new ::ywrapper::StringValue(*from.line_port_);
  } else {
    line_port_ = NULL;
  }
  if (from.has_operational_mode()) {
    operational_mode_ = new ::ywrapper::UintValue(*from.operational_mode_);
  } else {
    operational_mode_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config)
}

void Components_Component_OpticalChannel_Config::SharedCtor() {
  ::memset(&frequency_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&operational_mode_) -
      reinterpret_cast<char*>(&frequency_)) + sizeof(operational_mode_));
  _cached_size_ = 0;
}

Components_Component_OpticalChannel_Config::~Components_Component_OpticalChannel_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config)
  SharedDtor();
}

void Components_Component_OpticalChannel_Config::SharedDtor() {
  if (this != internal_default_instance()) delete frequency_;
  if (this != internal_default_instance()) delete target_output_power_;
  if (this != internal_default_instance()) delete line_port_;
  if (this != internal_default_instance()) delete operational_mode_;
}

void Components_Component_OpticalChannel_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_OpticalChannel_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_OpticalChannel_Config& Components_Component_OpticalChannel_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_Config();
  return *internal_default_instance();
}

Components_Component_OpticalChannel_Config* Components_Component_OpticalChannel_Config::New(::google::protobuf::Arena* arena) const {
  Components_Component_OpticalChannel_Config* n = new Components_Component_OpticalChannel_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_OpticalChannel_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && frequency_ != NULL) {
    delete frequency_;
  }
  frequency_ = NULL;
  if (GetArenaNoVirtual() == NULL && target_output_power_ != NULL) {
    delete target_output_power_;
  }
  target_output_power_ = NULL;
  if (GetArenaNoVirtual() == NULL && line_port_ != NULL) {
    delete line_port_;
  }
  line_port_ = NULL;
  if (GetArenaNoVirtual() == NULL && operational_mode_ != NULL) {
    delete operational_mode_;
  }
  operational_mode_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_OpticalChannel_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1763679314u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue frequency = 26841272 [(.yext.schemapath) = "/components/component/optical-channel/config/frequency"];
      case 26841272: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 214730178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_frequency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value target_output_power = 62472149 [(.yext.schemapath) = "/components/component/optical-channel/config/target-output-power"];
      case 62472149: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 499777194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target_output_power()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue line_port = 177586852 [(.yext.schemapath) = "/components/component/optical-channel/config/line-port"];
      case 177586852: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 1420694818 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_line_port()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue operational_mode = 220459914 [(.yext.schemapath) = "/components/component/optical-channel/config/operational-mode"];
      case 220459914: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 1763679314 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_operational_mode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config)
  return false;
#undef DO_
}

void Components_Component_OpticalChannel_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue frequency = 26841272 [(.yext.schemapath) = "/components/component/optical-channel/config/frequency"];
  if (this->has_frequency()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26841272, *this->frequency_, output);
  }

  // .ywrapper.Decimal64Value target_output_power = 62472149 [(.yext.schemapath) = "/components/component/optical-channel/config/target-output-power"];
  if (this->has_target_output_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      62472149, *this->target_output_power_, output);
  }

  // .ywrapper.StringValue line_port = 177586852 [(.yext.schemapath) = "/components/component/optical-channel/config/line-port"];
  if (this->has_line_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      177586852, *this->line_port_, output);
  }

  // .ywrapper.UintValue operational_mode = 220459914 [(.yext.schemapath) = "/components/component/optical-channel/config/operational-mode"];
  if (this->has_operational_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      220459914, *this->operational_mode_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config)
}

::google::protobuf::uint8* Components_Component_OpticalChannel_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue frequency = 26841272 [(.yext.schemapath) = "/components/component/optical-channel/config/frequency"];
  if (this->has_frequency()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26841272, *this->frequency_, deterministic, target);
  }

  // .ywrapper.Decimal64Value target_output_power = 62472149 [(.yext.schemapath) = "/components/component/optical-channel/config/target-output-power"];
  if (this->has_target_output_power()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        62472149, *this->target_output_power_, deterministic, target);
  }

  // .ywrapper.StringValue line_port = 177586852 [(.yext.schemapath) = "/components/component/optical-channel/config/line-port"];
  if (this->has_line_port()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        177586852, *this->line_port_, deterministic, target);
  }

  // .ywrapper.UintValue operational_mode = 220459914 [(.yext.schemapath) = "/components/component/optical-channel/config/operational-mode"];
  if (this->has_operational_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        220459914, *this->operational_mode_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config)
  return target;
}

size_t Components_Component_OpticalChannel_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue frequency = 26841272 [(.yext.schemapath) = "/components/component/optical-channel/config/frequency"];
  if (this->has_frequency()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->frequency_);
  }

  // .ywrapper.Decimal64Value target_output_power = 62472149 [(.yext.schemapath) = "/components/component/optical-channel/config/target-output-power"];
  if (this->has_target_output_power()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->target_output_power_);
  }

  // .ywrapper.StringValue line_port = 177586852 [(.yext.schemapath) = "/components/component/optical-channel/config/line-port"];
  if (this->has_line_port()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->line_port_);
  }

  // .ywrapper.UintValue operational_mode = 220459914 [(.yext.schemapath) = "/components/component/optical-channel/config/operational-mode"];
  if (this->has_operational_mode()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->operational_mode_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_OpticalChannel_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_OpticalChannel_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_OpticalChannel_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config)
    MergeFrom(*source);
  }
}

void Components_Component_OpticalChannel_Config::MergeFrom(const Components_Component_OpticalChannel_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_frequency()) {
    mutable_frequency()->::ywrapper::UintValue::MergeFrom(from.frequency());
  }
  if (from.has_target_output_power()) {
    mutable_target_output_power()->::ywrapper::Decimal64Value::MergeFrom(from.target_output_power());
  }
  if (from.has_line_port()) {
    mutable_line_port()->::ywrapper::StringValue::MergeFrom(from.line_port());
  }
  if (from.has_operational_mode()) {
    mutable_operational_mode()->::ywrapper::UintValue::MergeFrom(from.operational_mode());
  }
}

void Components_Component_OpticalChannel_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_OpticalChannel_Config::CopyFrom(const Components_Component_OpticalChannel_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_OpticalChannel_Config::IsInitialized() const {
  return true;
}

void Components_Component_OpticalChannel_Config::Swap(Components_Component_OpticalChannel_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_OpticalChannel_Config::InternalSwap(Components_Component_OpticalChannel_Config* other) {
  using std::swap;
  swap(frequency_, other->frequency_);
  swap(target_output_power_, other->target_output_power_);
  swap(line_port_, other->line_port_);
  swap(operational_mode_, other->operational_mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_OpticalChannel_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_OpticalChannel_State_ChromaticDispersion::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_ChromaticDispersion_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_ChromaticDispersion_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_ChromaticDispersion_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_ChromaticDispersion_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void Components_Component_OpticalChannel_State_ChromaticDispersion::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void Components_Component_OpticalChannel_State_ChromaticDispersion::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void Components_Component_OpticalChannel_State_ChromaticDispersion::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void Components_Component_OpticalChannel_State_ChromaticDispersion::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_OpticalChannel_State_ChromaticDispersion::kAvgFieldNumber;
const int Components_Component_OpticalChannel_State_ChromaticDispersion::kInstantFieldNumber;
const int Components_Component_OpticalChannel_State_ChromaticDispersion::kMaxFieldNumber;
const int Components_Component_OpticalChannel_State_ChromaticDispersion::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_OpticalChannel_State_ChromaticDispersion::Components_Component_OpticalChannel_State_ChromaticDispersion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_ChromaticDispersion();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion)
}
Components_Component_OpticalChannel_State_ChromaticDispersion::Components_Component_OpticalChannel_State_ChromaticDispersion(const Components_Component_OpticalChannel_State_ChromaticDispersion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion)
}

void Components_Component_OpticalChannel_State_ChromaticDispersion::SharedCtor() {
  ::memset(&avg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&min_) -
      reinterpret_cast<char*>(&avg_)) + sizeof(min_));
  _cached_size_ = 0;
}

Components_Component_OpticalChannel_State_ChromaticDispersion::~Components_Component_OpticalChannel_State_ChromaticDispersion() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion)
  SharedDtor();
}

void Components_Component_OpticalChannel_State_ChromaticDispersion::SharedDtor() {
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete max_;
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete min_;
}

void Components_Component_OpticalChannel_State_ChromaticDispersion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_OpticalChannel_State_ChromaticDispersion::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_OpticalChannel_State_ChromaticDispersion& Components_Component_OpticalChannel_State_ChromaticDispersion::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_ChromaticDispersion();
  return *internal_default_instance();
}

Components_Component_OpticalChannel_State_ChromaticDispersion* Components_Component_OpticalChannel_State_ChromaticDispersion::New(::google::protobuf::Arena* arena) const {
  Components_Component_OpticalChannel_State_ChromaticDispersion* n = new Components_Component_OpticalChannel_State_ChromaticDispersion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_OpticalChannel_State_ChromaticDispersion::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_OpticalChannel_State_ChromaticDispersion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4116385690u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value avg = 264868115 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion/avg"];
      case 264868115: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 2118944922 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value max = 380327293 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion/max"];
      case 380327293: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 3042618346 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value instant = 423301068 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion/instant"];
      case 423301068: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 3386408546 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value min = 514548211 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion/min"];
      case 514548211: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 4116385690 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion)
  return false;
#undef DO_
}

void Components_Component_OpticalChannel_State_ChromaticDispersion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value avg = 264868115 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      264868115, *this->avg_, output);
  }

  // .ywrapper.Decimal64Value max = 380327293 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      380327293, *this->max_, output);
  }

  // .ywrapper.Decimal64Value instant = 423301068 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      423301068, *this->instant_, output);
  }

  // .ywrapper.Decimal64Value min = 514548211 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      514548211, *this->min_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion)
}

::google::protobuf::uint8* Components_Component_OpticalChannel_State_ChromaticDispersion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value avg = 264868115 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        264868115, *this->avg_, deterministic, target);
  }

  // .ywrapper.Decimal64Value max = 380327293 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        380327293, *this->max_, deterministic, target);
  }

  // .ywrapper.Decimal64Value instant = 423301068 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        423301068, *this->instant_, deterministic, target);
  }

  // .ywrapper.Decimal64Value min = 514548211 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        514548211, *this->min_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion)
  return target;
}

size_t Components_Component_OpticalChannel_State_ChromaticDispersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value avg = 264868115 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.Decimal64Value max = 380327293 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  // .ywrapper.Decimal64Value instant = 423301068 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.Decimal64Value min = 514548211 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_OpticalChannel_State_ChromaticDispersion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_OpticalChannel_State_ChromaticDispersion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_OpticalChannel_State_ChromaticDispersion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion)
    MergeFrom(*source);
  }
}

void Components_Component_OpticalChannel_State_ChromaticDispersion::MergeFrom(const Components_Component_OpticalChannel_State_ChromaticDispersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
}

void Components_Component_OpticalChannel_State_ChromaticDispersion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_OpticalChannel_State_ChromaticDispersion::CopyFrom(const Components_Component_OpticalChannel_State_ChromaticDispersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_OpticalChannel_State_ChromaticDispersion::IsInitialized() const {
  return true;
}

void Components_Component_OpticalChannel_State_ChromaticDispersion::Swap(Components_Component_OpticalChannel_State_ChromaticDispersion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_OpticalChannel_State_ChromaticDispersion::InternalSwap(Components_Component_OpticalChannel_State_ChromaticDispersion* other) {
  using std::swap;
  swap(avg_, other->avg_);
  swap(max_, other->max_);
  swap(instant_, other->instant_);
  swap(min_, other->min_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_OpticalChannel_State_ChromaticDispersion::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_OpticalChannel_State_InputPower::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_InputPower_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_InputPower_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_InputPower_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_InputPower_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_InputPower_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void Components_Component_OpticalChannel_State_InputPower::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void Components_Component_OpticalChannel_State_InputPower::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void Components_Component_OpticalChannel_State_InputPower::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void Components_Component_OpticalChannel_State_InputPower::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void Components_Component_OpticalChannel_State_InputPower::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_OpticalChannel_State_InputPower::kAvgFieldNumber;
const int Components_Component_OpticalChannel_State_InputPower::kInstantFieldNumber;
const int Components_Component_OpticalChannel_State_InputPower::kIntervalFieldNumber;
const int Components_Component_OpticalChannel_State_InputPower::kMaxFieldNumber;
const int Components_Component_OpticalChannel_State_InputPower::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_OpticalChannel_State_InputPower::Components_Component_OpticalChannel_State_InputPower()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_InputPower();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower)
}
Components_Component_OpticalChannel_State_InputPower::Components_Component_OpticalChannel_State_InputPower(const Components_Component_OpticalChannel_State_InputPower& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower)
}

void Components_Component_OpticalChannel_State_InputPower::SharedCtor() {
  ::memset(&interval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instant_) -
      reinterpret_cast<char*>(&interval_)) + sizeof(instant_));
  _cached_size_ = 0;
}

Components_Component_OpticalChannel_State_InputPower::~Components_Component_OpticalChannel_State_InputPower() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower)
  SharedDtor();
}

void Components_Component_OpticalChannel_State_InputPower::SharedDtor() {
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete max_;
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete instant_;
}

void Components_Component_OpticalChannel_State_InputPower::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_OpticalChannel_State_InputPower::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_OpticalChannel_State_InputPower& Components_Component_OpticalChannel_State_InputPower::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_InputPower();
  return *internal_default_instance();
}

Components_Component_OpticalChannel_State_InputPower* Components_Component_OpticalChannel_State_InputPower::New(::google::protobuf::Arena* arena) const {
  Components_Component_OpticalChannel_State_InputPower* n = new Components_Component_OpticalChannel_State_InputPower;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_OpticalChannel_State_InputPower::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_OpticalChannel_State_InputPower::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3820030330u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue interval = 97973455 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/interval"];
      case 97973455: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 783787642 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 119392212 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/avg"];
      case 119392212: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 955137698 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value max = 335529838 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/max"];
      case 335529838: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 2684238706 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value min = 469750720 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/min"];
      case 469750720: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 3758005762 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value instant = 477503791 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/instant"];
      case 477503791: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 3820030330 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower)
  return false;
#undef DO_
}

void Components_Component_OpticalChannel_State_InputPower::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue interval = 97973455 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      97973455, *this->interval_, output);
  }

  // .ywrapper.Decimal64Value avg = 119392212 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      119392212, *this->avg_, output);
  }

  // .ywrapper.Decimal64Value max = 335529838 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      335529838, *this->max_, output);
  }

  // .ywrapper.Decimal64Value min = 469750720 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      469750720, *this->min_, output);
  }

  // .ywrapper.Decimal64Value instant = 477503791 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      477503791, *this->instant_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower)
}

::google::protobuf::uint8* Components_Component_OpticalChannel_State_InputPower::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue interval = 97973455 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        97973455, *this->interval_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 119392212 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        119392212, *this->avg_, deterministic, target);
  }

  // .ywrapper.Decimal64Value max = 335529838 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        335529838, *this->max_, deterministic, target);
  }

  // .ywrapper.Decimal64Value min = 469750720 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        469750720, *this->min_, deterministic, target);
  }

  // .ywrapper.Decimal64Value instant = 477503791 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        477503791, *this->instant_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower)
  return target;
}

size_t Components_Component_OpticalChannel_State_InputPower::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue interval = 97973455 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.Decimal64Value avg = 119392212 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.Decimal64Value max = 335529838 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  // .ywrapper.Decimal64Value min = 469750720 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  // .ywrapper.Decimal64Value instant = 477503791 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_OpticalChannel_State_InputPower::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_OpticalChannel_State_InputPower* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_OpticalChannel_State_InputPower>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower)
    MergeFrom(*source);
  }
}

void Components_Component_OpticalChannel_State_InputPower::MergeFrom(const Components_Component_OpticalChannel_State_InputPower& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
}

void Components_Component_OpticalChannel_State_InputPower::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_OpticalChannel_State_InputPower::CopyFrom(const Components_Component_OpticalChannel_State_InputPower& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_OpticalChannel_State_InputPower::IsInitialized() const {
  return true;
}

void Components_Component_OpticalChannel_State_InputPower::Swap(Components_Component_OpticalChannel_State_InputPower* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_OpticalChannel_State_InputPower::InternalSwap(Components_Component_OpticalChannel_State_InputPower* other) {
  using std::swap;
  swap(interval_, other->interval_);
  swap(avg_, other->avg_);
  swap(max_, other->max_);
  swap(min_, other->min_);
  swap(instant_, other->instant_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_OpticalChannel_State_InputPower::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_OpticalChannel_State_LaserBiasCurrent::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_LaserBiasCurrent_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_LaserBiasCurrent_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_LaserBiasCurrent_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_LaserBiasCurrent_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_LaserBiasCurrent_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void Components_Component_OpticalChannel_State_LaserBiasCurrent::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void Components_Component_OpticalChannel_State_LaserBiasCurrent::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void Components_Component_OpticalChannel_State_LaserBiasCurrent::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void Components_Component_OpticalChannel_State_LaserBiasCurrent::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void Components_Component_OpticalChannel_State_LaserBiasCurrent::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_OpticalChannel_State_LaserBiasCurrent::kAvgFieldNumber;
const int Components_Component_OpticalChannel_State_LaserBiasCurrent::kInstantFieldNumber;
const int Components_Component_OpticalChannel_State_LaserBiasCurrent::kIntervalFieldNumber;
const int Components_Component_OpticalChannel_State_LaserBiasCurrent::kMaxFieldNumber;
const int Components_Component_OpticalChannel_State_LaserBiasCurrent::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_OpticalChannel_State_LaserBiasCurrent::Components_Component_OpticalChannel_State_LaserBiasCurrent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_LaserBiasCurrent();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent)
}
Components_Component_OpticalChannel_State_LaserBiasCurrent::Components_Component_OpticalChannel_State_LaserBiasCurrent(const Components_Component_OpticalChannel_State_LaserBiasCurrent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent)
}

void Components_Component_OpticalChannel_State_LaserBiasCurrent::SharedCtor() {
  ::memset(&instant_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interval_) -
      reinterpret_cast<char*>(&instant_)) + sizeof(interval_));
  _cached_size_ = 0;
}

Components_Component_OpticalChannel_State_LaserBiasCurrent::~Components_Component_OpticalChannel_State_LaserBiasCurrent() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent)
  SharedDtor();
}

void Components_Component_OpticalChannel_State_LaserBiasCurrent::SharedDtor() {
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete max_;
  if (this != internal_default_instance()) delete interval_;
}

void Components_Component_OpticalChannel_State_LaserBiasCurrent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_OpticalChannel_State_LaserBiasCurrent::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_OpticalChannel_State_LaserBiasCurrent& Components_Component_OpticalChannel_State_LaserBiasCurrent::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_LaserBiasCurrent();
  return *internal_default_instance();
}

Components_Component_OpticalChannel_State_LaserBiasCurrent* Components_Component_OpticalChannel_State_LaserBiasCurrent::New(::google::protobuf::Arena* arena) const {
  Components_Component_OpticalChannel_State_LaserBiasCurrent* n = new Components_Component_OpticalChannel_State_LaserBiasCurrent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_OpticalChannel_State_LaserBiasCurrent::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_OpticalChannel_State_LaserBiasCurrent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2760784914u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value instant = 49268100 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/instant"];
      case 49268100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 394144802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value min = 98557579 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/min"];
      case 98557579: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 788460634 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 114747003 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/avg"];
      case 114747003: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 917976026 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value max = 232778501 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/max"];
      case 232778501: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 1862228010 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue interval = 345098114 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/interval"];
      case 345098114: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 2760784914 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent)
  return false;
#undef DO_
}

void Components_Component_OpticalChannel_State_LaserBiasCurrent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value instant = 49268100 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      49268100, *this->instant_, output);
  }

  // .ywrapper.Decimal64Value min = 98557579 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      98557579, *this->min_, output);
  }

  // .ywrapper.Decimal64Value avg = 114747003 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      114747003, *this->avg_, output);
  }

  // .ywrapper.Decimal64Value max = 232778501 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      232778501, *this->max_, output);
  }

  // .ywrapper.UintValue interval = 345098114 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      345098114, *this->interval_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent)
}

::google::protobuf::uint8* Components_Component_OpticalChannel_State_LaserBiasCurrent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value instant = 49268100 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        49268100, *this->instant_, deterministic, target);
  }

  // .ywrapper.Decimal64Value min = 98557579 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        98557579, *this->min_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 114747003 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        114747003, *this->avg_, deterministic, target);
  }

  // .ywrapper.Decimal64Value max = 232778501 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        232778501, *this->max_, deterministic, target);
  }

  // .ywrapper.UintValue interval = 345098114 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        345098114, *this->interval_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent)
  return target;
}

size_t Components_Component_OpticalChannel_State_LaserBiasCurrent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value instant = 49268100 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.Decimal64Value min = 98557579 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  // .ywrapper.Decimal64Value avg = 114747003 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.Decimal64Value max = 232778501 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  // .ywrapper.UintValue interval = 345098114 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_OpticalChannel_State_LaserBiasCurrent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_OpticalChannel_State_LaserBiasCurrent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_OpticalChannel_State_LaserBiasCurrent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent)
    MergeFrom(*source);
  }
}

void Components_Component_OpticalChannel_State_LaserBiasCurrent::MergeFrom(const Components_Component_OpticalChannel_State_LaserBiasCurrent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
}

void Components_Component_OpticalChannel_State_LaserBiasCurrent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_OpticalChannel_State_LaserBiasCurrent::CopyFrom(const Components_Component_OpticalChannel_State_LaserBiasCurrent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_OpticalChannel_State_LaserBiasCurrent::IsInitialized() const {
  return true;
}

void Components_Component_OpticalChannel_State_LaserBiasCurrent::Swap(Components_Component_OpticalChannel_State_LaserBiasCurrent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_OpticalChannel_State_LaserBiasCurrent::InternalSwap(Components_Component_OpticalChannel_State_LaserBiasCurrent* other) {
  using std::swap;
  swap(instant_, other->instant_);
  swap(min_, other->min_);
  swap(avg_, other->avg_);
  swap(max_, other->max_);
  swap(interval_, other->interval_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_OpticalChannel_State_LaserBiasCurrent::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_OpticalChannel_State_OutputPower::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_OutputPower_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_OutputPower_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_OutputPower_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_OutputPower_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_OutputPower_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void Components_Component_OpticalChannel_State_OutputPower::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void Components_Component_OpticalChannel_State_OutputPower::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void Components_Component_OpticalChannel_State_OutputPower::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void Components_Component_OpticalChannel_State_OutputPower::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void Components_Component_OpticalChannel_State_OutputPower::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_OpticalChannel_State_OutputPower::kAvgFieldNumber;
const int Components_Component_OpticalChannel_State_OutputPower::kInstantFieldNumber;
const int Components_Component_OpticalChannel_State_OutputPower::kIntervalFieldNumber;
const int Components_Component_OpticalChannel_State_OutputPower::kMaxFieldNumber;
const int Components_Component_OpticalChannel_State_OutputPower::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_OpticalChannel_State_OutputPower::Components_Component_OpticalChannel_State_OutputPower()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_OutputPower();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower)
}
Components_Component_OpticalChannel_State_OutputPower::Components_Component_OpticalChannel_State_OutputPower(const Components_Component_OpticalChannel_State_OutputPower& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower)
}

void Components_Component_OpticalChannel_State_OutputPower::SharedCtor() {
  ::memset(&max_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avg_) -
      reinterpret_cast<char*>(&max_)) + sizeof(avg_));
  _cached_size_ = 0;
}

Components_Component_OpticalChannel_State_OutputPower::~Components_Component_OpticalChannel_State_OutputPower() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower)
  SharedDtor();
}

void Components_Component_OpticalChannel_State_OutputPower::SharedDtor() {
  if (this != internal_default_instance()) delete max_;
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete avg_;
}

void Components_Component_OpticalChannel_State_OutputPower::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_OpticalChannel_State_OutputPower::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_OpticalChannel_State_OutputPower& Components_Component_OpticalChannel_State_OutputPower::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_OutputPower();
  return *internal_default_instance();
}

Components_Component_OpticalChannel_State_OutputPower* Components_Component_OpticalChannel_State_OutputPower::New(::google::protobuf::Arena* arena) const {
  Components_Component_OpticalChannel_State_OutputPower* n = new Components_Component_OpticalChannel_State_OutputPower;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_OpticalChannel_State_OutputPower::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_OpticalChannel_State_OutputPower::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3749460522u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value max = 252544967 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/max"];
      case 252544967: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 2020359738 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value instant = 307832130 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/instant"];
      case 307832130: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 2462657042 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue interval = 322482692 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/interval"];
      case 322482692: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 2579861538 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value min = 386765881 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/min"];
      case 386765881: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 3094127050 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 468682565 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/avg"];
      case 468682565: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 3749460522 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower)
  return false;
#undef DO_
}

void Components_Component_OpticalChannel_State_OutputPower::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value max = 252544967 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      252544967, *this->max_, output);
  }

  // .ywrapper.Decimal64Value instant = 307832130 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      307832130, *this->instant_, output);
  }

  // .ywrapper.UintValue interval = 322482692 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      322482692, *this->interval_, output);
  }

  // .ywrapper.Decimal64Value min = 386765881 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      386765881, *this->min_, output);
  }

  // .ywrapper.Decimal64Value avg = 468682565 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      468682565, *this->avg_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower)
}

::google::protobuf::uint8* Components_Component_OpticalChannel_State_OutputPower::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value max = 252544967 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        252544967, *this->max_, deterministic, target);
  }

  // .ywrapper.Decimal64Value instant = 307832130 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        307832130, *this->instant_, deterministic, target);
  }

  // .ywrapper.UintValue interval = 322482692 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        322482692, *this->interval_, deterministic, target);
  }

  // .ywrapper.Decimal64Value min = 386765881 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        386765881, *this->min_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 468682565 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        468682565, *this->avg_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower)
  return target;
}

size_t Components_Component_OpticalChannel_State_OutputPower::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value max = 252544967 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  // .ywrapper.Decimal64Value instant = 307832130 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.UintValue interval = 322482692 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.Decimal64Value min = 386765881 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  // .ywrapper.Decimal64Value avg = 468682565 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_OpticalChannel_State_OutputPower::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_OpticalChannel_State_OutputPower* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_OpticalChannel_State_OutputPower>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower)
    MergeFrom(*source);
  }
}

void Components_Component_OpticalChannel_State_OutputPower::MergeFrom(const Components_Component_OpticalChannel_State_OutputPower& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
}

void Components_Component_OpticalChannel_State_OutputPower::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_OpticalChannel_State_OutputPower::CopyFrom(const Components_Component_OpticalChannel_State_OutputPower& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_OpticalChannel_State_OutputPower::IsInitialized() const {
  return true;
}

void Components_Component_OpticalChannel_State_OutputPower::Swap(Components_Component_OpticalChannel_State_OutputPower* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_OpticalChannel_State_OutputPower::InternalSwap(Components_Component_OpticalChannel_State_OutputPower* other) {
  using std::swap;
  swap(max_, other->max_);
  swap(instant_, other->instant_);
  swap(interval_, other->interval_);
  swap(min_, other->min_);
  swap(avg_, other->avg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_OpticalChannel_State_OutputPower::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_OpticalChannel_State_PolarizationDependentLoss::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_PolarizationDependentLoss_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_PolarizationDependentLoss_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_PolarizationDependentLoss_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_PolarizationDependentLoss_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_PolarizationDependentLoss_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void Components_Component_OpticalChannel_State_PolarizationDependentLoss::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void Components_Component_OpticalChannel_State_PolarizationDependentLoss::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void Components_Component_OpticalChannel_State_PolarizationDependentLoss::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void Components_Component_OpticalChannel_State_PolarizationDependentLoss::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void Components_Component_OpticalChannel_State_PolarizationDependentLoss::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_OpticalChannel_State_PolarizationDependentLoss::kAvgFieldNumber;
const int Components_Component_OpticalChannel_State_PolarizationDependentLoss::kInstantFieldNumber;
const int Components_Component_OpticalChannel_State_PolarizationDependentLoss::kIntervalFieldNumber;
const int Components_Component_OpticalChannel_State_PolarizationDependentLoss::kMaxFieldNumber;
const int Components_Component_OpticalChannel_State_PolarizationDependentLoss::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_OpticalChannel_State_PolarizationDependentLoss::Components_Component_OpticalChannel_State_PolarizationDependentLoss()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_PolarizationDependentLoss();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss)
}
Components_Component_OpticalChannel_State_PolarizationDependentLoss::Components_Component_OpticalChannel_State_PolarizationDependentLoss(const Components_Component_OpticalChannel_State_PolarizationDependentLoss& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss)
}

void Components_Component_OpticalChannel_State_PolarizationDependentLoss::SharedCtor() {
  ::memset(&min_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avg_) -
      reinterpret_cast<char*>(&min_)) + sizeof(avg_));
  _cached_size_ = 0;
}

Components_Component_OpticalChannel_State_PolarizationDependentLoss::~Components_Component_OpticalChannel_State_PolarizationDependentLoss() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss)
  SharedDtor();
}

void Components_Component_OpticalChannel_State_PolarizationDependentLoss::SharedDtor() {
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete max_;
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete avg_;
}

void Components_Component_OpticalChannel_State_PolarizationDependentLoss::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_OpticalChannel_State_PolarizationDependentLoss::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_OpticalChannel_State_PolarizationDependentLoss& Components_Component_OpticalChannel_State_PolarizationDependentLoss::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_PolarizationDependentLoss();
  return *internal_default_instance();
}

Components_Component_OpticalChannel_State_PolarizationDependentLoss* Components_Component_OpticalChannel_State_PolarizationDependentLoss::New(::google::protobuf::Arena* arena) const {
  Components_Component_OpticalChannel_State_PolarizationDependentLoss* n = new Components_Component_OpticalChannel_State_PolarizationDependentLoss;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_OpticalChannel_State_PolarizationDependentLoss::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_OpticalChannel_State_PolarizationDependentLoss::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4269974194u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value min = 11682014 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/min"];
      case 11682014: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 93456114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value instant = 32098901 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/instant"];
      case 32098901: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 256791210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value max = 145902896 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/max"];
      case 145902896: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 1167223170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue interval = 460602601 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/interval"];
      case 460602601: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 3684820810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 533746774 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/avg"];
      case 533746774: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 4269974194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss)
  return false;
#undef DO_
}

void Components_Component_OpticalChannel_State_PolarizationDependentLoss::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value min = 11682014 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11682014, *this->min_, output);
  }

  // .ywrapper.Decimal64Value instant = 32098901 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32098901, *this->instant_, output);
  }

  // .ywrapper.Decimal64Value max = 145902896 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      145902896, *this->max_, output);
  }

  // .ywrapper.UintValue interval = 460602601 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      460602601, *this->interval_, output);
  }

  // .ywrapper.Decimal64Value avg = 533746774 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      533746774, *this->avg_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss)
}

::google::protobuf::uint8* Components_Component_OpticalChannel_State_PolarizationDependentLoss::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value min = 11682014 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11682014, *this->min_, deterministic, target);
  }

  // .ywrapper.Decimal64Value instant = 32098901 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        32098901, *this->instant_, deterministic, target);
  }

  // .ywrapper.Decimal64Value max = 145902896 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        145902896, *this->max_, deterministic, target);
  }

  // .ywrapper.UintValue interval = 460602601 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        460602601, *this->interval_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 533746774 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        533746774, *this->avg_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss)
  return target;
}

size_t Components_Component_OpticalChannel_State_PolarizationDependentLoss::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value min = 11682014 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/min"];
  if (this->has_min()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  // .ywrapper.Decimal64Value instant = 32098901 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/instant"];
  if (this->has_instant()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.Decimal64Value max = 145902896 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  // .ywrapper.UintValue interval = 460602601 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.Decimal64Value avg = 533746774 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_OpticalChannel_State_PolarizationDependentLoss::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_OpticalChannel_State_PolarizationDependentLoss* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_OpticalChannel_State_PolarizationDependentLoss>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss)
    MergeFrom(*source);
  }
}

void Components_Component_OpticalChannel_State_PolarizationDependentLoss::MergeFrom(const Components_Component_OpticalChannel_State_PolarizationDependentLoss& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
}

void Components_Component_OpticalChannel_State_PolarizationDependentLoss::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_OpticalChannel_State_PolarizationDependentLoss::CopyFrom(const Components_Component_OpticalChannel_State_PolarizationDependentLoss& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_OpticalChannel_State_PolarizationDependentLoss::IsInitialized() const {
  return true;
}

void Components_Component_OpticalChannel_State_PolarizationDependentLoss::Swap(Components_Component_OpticalChannel_State_PolarizationDependentLoss* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_OpticalChannel_State_PolarizationDependentLoss::InternalSwap(Components_Component_OpticalChannel_State_PolarizationDependentLoss* other) {
  using std::swap;
  swap(min_, other->min_);
  swap(instant_, other->instant_);
  swap(max_, other->max_);
  swap(interval_, other->interval_);
  swap(avg_, other->avg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_OpticalChannel_State_PolarizationDependentLoss::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_OpticalChannel_State_PolarizationModeDispersion::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_PolarizationModeDispersion_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_PolarizationModeDispersion_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_PolarizationModeDispersion_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_PolarizationModeDispersion_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void Components_Component_OpticalChannel_State_PolarizationModeDispersion::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void Components_Component_OpticalChannel_State_PolarizationModeDispersion::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void Components_Component_OpticalChannel_State_PolarizationModeDispersion::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void Components_Component_OpticalChannel_State_PolarizationModeDispersion::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_OpticalChannel_State_PolarizationModeDispersion::kAvgFieldNumber;
const int Components_Component_OpticalChannel_State_PolarizationModeDispersion::kInstantFieldNumber;
const int Components_Component_OpticalChannel_State_PolarizationModeDispersion::kMaxFieldNumber;
const int Components_Component_OpticalChannel_State_PolarizationModeDispersion::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_OpticalChannel_State_PolarizationModeDispersion::Components_Component_OpticalChannel_State_PolarizationModeDispersion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_PolarizationModeDispersion();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion)
}
Components_Component_OpticalChannel_State_PolarizationModeDispersion::Components_Component_OpticalChannel_State_PolarizationModeDispersion(const Components_Component_OpticalChannel_State_PolarizationModeDispersion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion)
}

void Components_Component_OpticalChannel_State_PolarizationModeDispersion::SharedCtor() {
  ::memset(&max_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&min_) -
      reinterpret_cast<char*>(&max_)) + sizeof(min_));
  _cached_size_ = 0;
}

Components_Component_OpticalChannel_State_PolarizationModeDispersion::~Components_Component_OpticalChannel_State_PolarizationModeDispersion() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion)
  SharedDtor();
}

void Components_Component_OpticalChannel_State_PolarizationModeDispersion::SharedDtor() {
  if (this != internal_default_instance()) delete max_;
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete min_;
}

void Components_Component_OpticalChannel_State_PolarizationModeDispersion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_OpticalChannel_State_PolarizationModeDispersion::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_OpticalChannel_State_PolarizationModeDispersion& Components_Component_OpticalChannel_State_PolarizationModeDispersion::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_PolarizationModeDispersion();
  return *internal_default_instance();
}

Components_Component_OpticalChannel_State_PolarizationModeDispersion* Components_Component_OpticalChannel_State_PolarizationModeDispersion::New(::google::protobuf::Arena* arena) const {
  Components_Component_OpticalChannel_State_PolarizationModeDispersion* n = new Components_Component_OpticalChannel_State_PolarizationModeDispersion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_OpticalChannel_State_PolarizationModeDispersion::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_OpticalChannel_State_PolarizationModeDispersion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3373745674u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value max = 19068223 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion/max"];
      case 19068223: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 152545786 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value instant = 42582794 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion/instant"];
      case 42582794: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 340662354 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 237752797 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion/avg"];
      case 237752797: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 1902022378 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value min = 421718209 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion/min"];
      case 421718209: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 3373745674 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion)
  return false;
#undef DO_
}

void Components_Component_OpticalChannel_State_PolarizationModeDispersion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value max = 19068223 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19068223, *this->max_, output);
  }

  // .ywrapper.Decimal64Value instant = 42582794 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      42582794, *this->instant_, output);
  }

  // .ywrapper.Decimal64Value avg = 237752797 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      237752797, *this->avg_, output);
  }

  // .ywrapper.Decimal64Value min = 421718209 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      421718209, *this->min_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion)
}

::google::protobuf::uint8* Components_Component_OpticalChannel_State_PolarizationModeDispersion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value max = 19068223 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19068223, *this->max_, deterministic, target);
  }

  // .ywrapper.Decimal64Value instant = 42582794 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        42582794, *this->instant_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 237752797 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        237752797, *this->avg_, deterministic, target);
  }

  // .ywrapper.Decimal64Value min = 421718209 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        421718209, *this->min_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion)
  return target;
}

size_t Components_Component_OpticalChannel_State_PolarizationModeDispersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value max = 19068223 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion/max"];
  if (this->has_max()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  // .ywrapper.Decimal64Value instant = 42582794 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.Decimal64Value avg = 237752797 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.Decimal64Value min = 421718209 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_OpticalChannel_State_PolarizationModeDispersion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_OpticalChannel_State_PolarizationModeDispersion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_OpticalChannel_State_PolarizationModeDispersion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion)
    MergeFrom(*source);
  }
}

void Components_Component_OpticalChannel_State_PolarizationModeDispersion::MergeFrom(const Components_Component_OpticalChannel_State_PolarizationModeDispersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
}

void Components_Component_OpticalChannel_State_PolarizationModeDispersion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_OpticalChannel_State_PolarizationModeDispersion::CopyFrom(const Components_Component_OpticalChannel_State_PolarizationModeDispersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_OpticalChannel_State_PolarizationModeDispersion::IsInitialized() const {
  return true;
}

void Components_Component_OpticalChannel_State_PolarizationModeDispersion::Swap(Components_Component_OpticalChannel_State_PolarizationModeDispersion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_OpticalChannel_State_PolarizationModeDispersion::InternalSwap(Components_Component_OpticalChannel_State_PolarizationModeDispersion* other) {
  using std::swap;
  swap(max_, other->max_);
  swap(instant_, other->instant_);
  swap(avg_, other->avg_);
  swap(min_, other->min_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_OpticalChannel_State_PolarizationModeDispersion::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::kAvgFieldNumber;
const int Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::kInstantFieldNumber;
const int Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::kMaxFieldNumber;
const int Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion)
}
Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion(const Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion)
}

void Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::SharedCtor() {
  ::memset(&instant_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_) -
      reinterpret_cast<char*>(&instant_)) + sizeof(max_));
  _cached_size_ = 0;
}

Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::~Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion)
  SharedDtor();
}

void Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::SharedDtor() {
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete max_;
}

void Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion& Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion();
  return *internal_default_instance();
}

Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion* Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::New(::google::protobuf::Arena* arena) const {
  Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion* n = new Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3444897514u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value instant = 14501164 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/instant"];
      case 14501164: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 116009314 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value min = 27962195 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/min"];
      case 27962195: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 223697562 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 315050099 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/avg"];
      case 315050099: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 2520400794 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value max = 430612189 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/max"];
      case 430612189: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 3444897514 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion)
  return false;
#undef DO_
}

void Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value instant = 14501164 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14501164, *this->instant_, output);
  }

  // .ywrapper.Decimal64Value min = 27962195 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      27962195, *this->min_, output);
  }

  // .ywrapper.Decimal64Value avg = 315050099 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      315050099, *this->avg_, output);
  }

  // .ywrapper.Decimal64Value max = 430612189 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      430612189, *this->max_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion)
}

::google::protobuf::uint8* Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value instant = 14501164 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14501164, *this->instant_, deterministic, target);
  }

  // .ywrapper.Decimal64Value min = 27962195 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        27962195, *this->min_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 315050099 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        315050099, *this->avg_, deterministic, target);
  }

  // .ywrapper.Decimal64Value max = 430612189 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        430612189, *this->max_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion)
  return target;
}

size_t Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value instant = 14501164 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/instant"];
  if (this->has_instant()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.Decimal64Value min = 27962195 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/min"];
  if (this->has_min()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  // .ywrapper.Decimal64Value avg = 315050099 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.Decimal64Value max = 430612189 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion)
    MergeFrom(*source);
  }
}

void Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::MergeFrom(const Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
}

void Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::CopyFrom(const Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::IsInitialized() const {
  return true;
}

void Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::Swap(Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::InternalSwap(Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion* other) {
  using std::swap;
  swap(instant_, other->instant_);
  swap(min_, other->min_);
  swap(avg_, other->avg_);
  swap(max_, other->max_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_OpticalChannel_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_default_instance_._instance.get_mutable()->chromatic_dispersion_ = const_cast< ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_ChromaticDispersion*>(
      ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_ChromaticDispersion::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_default_instance_._instance.get_mutable()->frequency_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_default_instance_._instance.get_mutable()->group_id_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_default_instance_._instance.get_mutable()->input_power_ = const_cast< ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_InputPower*>(
      ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_InputPower::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_default_instance_._instance.get_mutable()->laser_bias_current_ = const_cast< ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_LaserBiasCurrent*>(
      ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_LaserBiasCurrent::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_default_instance_._instance.get_mutable()->line_port_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_default_instance_._instance.get_mutable()->operational_mode_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_default_instance_._instance.get_mutable()->output_power_ = const_cast< ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_OutputPower*>(
      ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_OutputPower::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_default_instance_._instance.get_mutable()->polarization_dependent_loss_ = const_cast< ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationDependentLoss*>(
      ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationDependentLoss::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_default_instance_._instance.get_mutable()->polarization_mode_dispersion_ = const_cast< ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationModeDispersion*>(
      ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationModeDispersion::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_default_instance_._instance.get_mutable()->second_order_polarization_mode_dispersion_ = const_cast< ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion*>(
      ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_State_default_instance_._instance.get_mutable()->target_output_power_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void Components_Component_OpticalChannel_State::clear_frequency() {
  if (GetArenaNoVirtual() == NULL && frequency_ != NULL) {
    delete frequency_;
  }
  frequency_ = NULL;
}
void Components_Component_OpticalChannel_State::clear_group_id() {
  if (GetArenaNoVirtual() == NULL && group_id_ != NULL) {
    delete group_id_;
  }
  group_id_ = NULL;
}
void Components_Component_OpticalChannel_State::clear_line_port() {
  if (GetArenaNoVirtual() == NULL && line_port_ != NULL) {
    delete line_port_;
  }
  line_port_ = NULL;
}
void Components_Component_OpticalChannel_State::clear_operational_mode() {
  if (GetArenaNoVirtual() == NULL && operational_mode_ != NULL) {
    delete operational_mode_;
  }
  operational_mode_ = NULL;
}
void Components_Component_OpticalChannel_State::clear_target_output_power() {
  if (GetArenaNoVirtual() == NULL && target_output_power_ != NULL) {
    delete target_output_power_;
  }
  target_output_power_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_OpticalChannel_State::kChromaticDispersionFieldNumber;
const int Components_Component_OpticalChannel_State::kFrequencyFieldNumber;
const int Components_Component_OpticalChannel_State::kGroupIdFieldNumber;
const int Components_Component_OpticalChannel_State::kInputPowerFieldNumber;
const int Components_Component_OpticalChannel_State::kLaserBiasCurrentFieldNumber;
const int Components_Component_OpticalChannel_State::kLinePortFieldNumber;
const int Components_Component_OpticalChannel_State::kOperationalModeFieldNumber;
const int Components_Component_OpticalChannel_State::kOutputPowerFieldNumber;
const int Components_Component_OpticalChannel_State::kPolarizationDependentLossFieldNumber;
const int Components_Component_OpticalChannel_State::kPolarizationModeDispersionFieldNumber;
const int Components_Component_OpticalChannel_State::kSecondOrderPolarizationModeDispersionFieldNumber;
const int Components_Component_OpticalChannel_State::kTargetOutputPowerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_OpticalChannel_State::Components_Component_OpticalChannel_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.OpticalChannel.State)
}
Components_Component_OpticalChannel_State::Components_Component_OpticalChannel_State(const Components_Component_OpticalChannel_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_operational_mode()) {
    operational_mode_ = new ::ywrapper::UintValue(*from.operational_mode_);
  } else {
    operational_mode_ = NULL;
  }
  if (from.has_laser_bias_current()) {
    laser_bias_current_ = new ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_LaserBiasCurrent(*from.laser_bias_current_);
  } else {
    laser_bias_current_ = NULL;
  }
  if (from.has_chromatic_dispersion()) {
    chromatic_dispersion_ = new ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_ChromaticDispersion(*from.chromatic_dispersion_);
  } else {
    chromatic_dispersion_ = NULL;
  }
  if (from.has_line_port()) {
    line_port_ = new ::ywrapper::StringValue(*from.line_port_);
  } else {
    line_port_ = NULL;
  }
  if (from.has_polarization_mode_dispersion()) {
    polarization_mode_dispersion_ = new ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationModeDispersion(*from.polarization_mode_dispersion_);
  } else {
    polarization_mode_dispersion_ = NULL;
  }
  if (from.has_output_power()) {
    output_power_ = new ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_OutputPower(*from.output_power_);
  } else {
    output_power_ = NULL;
  }
  if (from.has_target_output_power()) {
    target_output_power_ = new ::ywrapper::Decimal64Value(*from.target_output_power_);
  } else {
    target_output_power_ = NULL;
  }
  if (from.has_input_power()) {
    input_power_ = new ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_InputPower(*from.input_power_);
  } else {
    input_power_ = NULL;
  }
  if (from.has_group_id()) {
    group_id_ = new ::ywrapper::UintValue(*from.group_id_);
  } else {
    group_id_ = NULL;
  }
  if (from.has_polarization_dependent_loss()) {
    polarization_dependent_loss_ = new ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationDependentLoss(*from.polarization_dependent_loss_);
  } else {
    polarization_dependent_loss_ = NULL;
  }
  if (from.has_frequency()) {
    frequency_ = new ::ywrapper::UintValue(*from.frequency_);
  } else {
    frequency_ = NULL;
  }
  if (from.has_second_order_polarization_mode_dispersion()) {
    second_order_polarization_mode_dispersion_ = new ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion(*from.second_order_polarization_mode_dispersion_);
  } else {
    second_order_polarization_mode_dispersion_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.OpticalChannel.State)
}

void Components_Component_OpticalChannel_State::SharedCtor() {
  ::memset(&operational_mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&second_order_polarization_mode_dispersion_) -
      reinterpret_cast<char*>(&operational_mode_)) + sizeof(second_order_polarization_mode_dispersion_));
  _cached_size_ = 0;
}

Components_Component_OpticalChannel_State::~Components_Component_OpticalChannel_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.OpticalChannel.State)
  SharedDtor();
}

void Components_Component_OpticalChannel_State::SharedDtor() {
  if (this != internal_default_instance()) delete operational_mode_;
  if (this != internal_default_instance()) delete laser_bias_current_;
  if (this != internal_default_instance()) delete chromatic_dispersion_;
  if (this != internal_default_instance()) delete line_port_;
  if (this != internal_default_instance()) delete polarization_mode_dispersion_;
  if (this != internal_default_instance()) delete output_power_;
  if (this != internal_default_instance()) delete target_output_power_;
  if (this != internal_default_instance()) delete input_power_;
  if (this != internal_default_instance()) delete group_id_;
  if (this != internal_default_instance()) delete polarization_dependent_loss_;
  if (this != internal_default_instance()) delete frequency_;
  if (this != internal_default_instance()) delete second_order_polarization_mode_dispersion_;
}

void Components_Component_OpticalChannel_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_OpticalChannel_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_OpticalChannel_State& Components_Component_OpticalChannel_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel_State();
  return *internal_default_instance();
}

Components_Component_OpticalChannel_State* Components_Component_OpticalChannel_State::New(::google::protobuf::Arena* arena) const {
  Components_Component_OpticalChannel_State* n = new Components_Component_OpticalChannel_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_OpticalChannel_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && operational_mode_ != NULL) {
    delete operational_mode_;
  }
  operational_mode_ = NULL;
  if (GetArenaNoVirtual() == NULL && laser_bias_current_ != NULL) {
    delete laser_bias_current_;
  }
  laser_bias_current_ = NULL;
  if (GetArenaNoVirtual() == NULL && chromatic_dispersion_ != NULL) {
    delete chromatic_dispersion_;
  }
  chromatic_dispersion_ = NULL;
  if (GetArenaNoVirtual() == NULL && line_port_ != NULL) {
    delete line_port_;
  }
  line_port_ = NULL;
  if (GetArenaNoVirtual() == NULL && polarization_mode_dispersion_ != NULL) {
    delete polarization_mode_dispersion_;
  }
  polarization_mode_dispersion_ = NULL;
  if (GetArenaNoVirtual() == NULL && output_power_ != NULL) {
    delete output_power_;
  }
  output_power_ = NULL;
  if (GetArenaNoVirtual() == NULL && target_output_power_ != NULL) {
    delete target_output_power_;
  }
  target_output_power_ = NULL;
  if (GetArenaNoVirtual() == NULL && input_power_ != NULL) {
    delete input_power_;
  }
  input_power_ = NULL;
  if (GetArenaNoVirtual() == NULL && group_id_ != NULL) {
    delete group_id_;
  }
  group_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && polarization_dependent_loss_ != NULL) {
    delete polarization_dependent_loss_;
  }
  polarization_dependent_loss_ = NULL;
  if (GetArenaNoVirtual() == NULL && frequency_ != NULL) {
    delete frequency_;
  }
  frequency_ = NULL;
  if (GetArenaNoVirtual() == NULL && second_order_polarization_mode_dispersion_ != NULL) {
    delete second_order_polarization_mode_dispersion_;
  }
  second_order_polarization_mode_dispersion_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_OpticalChannel_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3542901490u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue operational_mode = 85276411 [(.yext.schemapath) = "/components/component/optical-channel/state/operational-mode"];
      case 85276411: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 682211290 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_operational_mode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent laser_bias_current = 91725622 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current"];
      case 91725622: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 733804978 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_laser_bias_current()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion chromatic_dispersion = 99469822 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion"];
      case 99469822: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 795758578 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_chromatic_dispersion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue line_port = 123348347 [(.yext.schemapath) = "/components/component/optical-channel/state/line-port"];
      case 123348347: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 986786778 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_line_port()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion polarization_mode_dispersion = 145763652 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion"];
      case 145763652: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 1166109218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_polarization_mode_dispersion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower output_power = 190162364 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power"];
      case 190162364: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 1521298914 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output_power()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value target_output_power = 257534242 [(.yext.schemapath) = "/components/component/optical-channel/state/target-output-power"];
      case 257534242: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 2060273938 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target_output_power()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower input_power = 324789833 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power"];
      case 324789833: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 2598318666 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input_power()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue group_id = 327440498 [(.yext.schemapath) = "/components/component/optical-channel/state/group-id"];
      case 327440498: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 2619523986 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_group_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss polarization_dependent_loss = 384302551 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss"];
      case 384302551: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 3074420410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_polarization_dependent_loss()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue frequency = 429916835 [(.yext.schemapath) = "/components/component/optical-channel/state/frequency"];
      case 429916835: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 3439334682 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_frequency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion second_order_polarization_mode_dispersion = 442862686 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion"];
      case 442862686: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 3542901490 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_second_order_polarization_mode_dispersion()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.OpticalChannel.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.OpticalChannel.State)
  return false;
#undef DO_
}

void Components_Component_OpticalChannel_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue operational_mode = 85276411 [(.yext.schemapath) = "/components/component/optical-channel/state/operational-mode"];
  if (this->has_operational_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      85276411, *this->operational_mode_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent laser_bias_current = 91725622 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current"];
  if (this->has_laser_bias_current()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      91725622, *this->laser_bias_current_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion chromatic_dispersion = 99469822 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion"];
  if (this->has_chromatic_dispersion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      99469822, *this->chromatic_dispersion_, output);
  }

  // .ywrapper.StringValue line_port = 123348347 [(.yext.schemapath) = "/components/component/optical-channel/state/line-port"];
  if (this->has_line_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      123348347, *this->line_port_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion polarization_mode_dispersion = 145763652 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion"];
  if (this->has_polarization_mode_dispersion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      145763652, *this->polarization_mode_dispersion_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower output_power = 190162364 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power"];
  if (this->has_output_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      190162364, *this->output_power_, output);
  }

  // .ywrapper.Decimal64Value target_output_power = 257534242 [(.yext.schemapath) = "/components/component/optical-channel/state/target-output-power"];
  if (this->has_target_output_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      257534242, *this->target_output_power_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower input_power = 324789833 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power"];
  if (this->has_input_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      324789833, *this->input_power_, output);
  }

  // .ywrapper.UintValue group_id = 327440498 [(.yext.schemapath) = "/components/component/optical-channel/state/group-id"];
  if (this->has_group_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      327440498, *this->group_id_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss polarization_dependent_loss = 384302551 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss"];
  if (this->has_polarization_dependent_loss()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      384302551, *this->polarization_dependent_loss_, output);
  }

  // .ywrapper.UintValue frequency = 429916835 [(.yext.schemapath) = "/components/component/optical-channel/state/frequency"];
  if (this->has_frequency()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      429916835, *this->frequency_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion second_order_polarization_mode_dispersion = 442862686 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion"];
  if (this->has_second_order_polarization_mode_dispersion()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      442862686, *this->second_order_polarization_mode_dispersion_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.OpticalChannel.State)
}

::google::protobuf::uint8* Components_Component_OpticalChannel_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue operational_mode = 85276411 [(.yext.schemapath) = "/components/component/optical-channel/state/operational-mode"];
  if (this->has_operational_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        85276411, *this->operational_mode_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent laser_bias_current = 91725622 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current"];
  if (this->has_laser_bias_current()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        91725622, *this->laser_bias_current_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion chromatic_dispersion = 99469822 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion"];
  if (this->has_chromatic_dispersion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        99469822, *this->chromatic_dispersion_, deterministic, target);
  }

  // .ywrapper.StringValue line_port = 123348347 [(.yext.schemapath) = "/components/component/optical-channel/state/line-port"];
  if (this->has_line_port()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        123348347, *this->line_port_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion polarization_mode_dispersion = 145763652 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion"];
  if (this->has_polarization_mode_dispersion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        145763652, *this->polarization_mode_dispersion_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower output_power = 190162364 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power"];
  if (this->has_output_power()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        190162364, *this->output_power_, deterministic, target);
  }

  // .ywrapper.Decimal64Value target_output_power = 257534242 [(.yext.schemapath) = "/components/component/optical-channel/state/target-output-power"];
  if (this->has_target_output_power()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        257534242, *this->target_output_power_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower input_power = 324789833 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power"];
  if (this->has_input_power()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        324789833, *this->input_power_, deterministic, target);
  }

  // .ywrapper.UintValue group_id = 327440498 [(.yext.schemapath) = "/components/component/optical-channel/state/group-id"];
  if (this->has_group_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        327440498, *this->group_id_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss polarization_dependent_loss = 384302551 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss"];
  if (this->has_polarization_dependent_loss()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        384302551, *this->polarization_dependent_loss_, deterministic, target);
  }

  // .ywrapper.UintValue frequency = 429916835 [(.yext.schemapath) = "/components/component/optical-channel/state/frequency"];
  if (this->has_frequency()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        429916835, *this->frequency_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion second_order_polarization_mode_dispersion = 442862686 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion"];
  if (this->has_second_order_polarization_mode_dispersion()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        442862686, *this->second_order_polarization_mode_dispersion_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.OpticalChannel.State)
  return target;
}

size_t Components_Component_OpticalChannel_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue operational_mode = 85276411 [(.yext.schemapath) = "/components/component/optical-channel/state/operational-mode"];
  if (this->has_operational_mode()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->operational_mode_);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.LaserBiasCurrent laser_bias_current = 91725622 [(.yext.schemapath) = "/components/component/optical-channel/state/laser-bias-current"];
  if (this->has_laser_bias_current()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->laser_bias_current_);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.ChromaticDispersion chromatic_dispersion = 99469822 [(.yext.schemapath) = "/components/component/optical-channel/state/chromatic-dispersion"];
  if (this->has_chromatic_dispersion()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->chromatic_dispersion_);
  }

  // .ywrapper.StringValue line_port = 123348347 [(.yext.schemapath) = "/components/component/optical-channel/state/line-port"];
  if (this->has_line_port()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->line_port_);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationModeDispersion polarization_mode_dispersion = 145763652 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-mode-dispersion"];
  if (this->has_polarization_mode_dispersion()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->polarization_mode_dispersion_);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.OutputPower output_power = 190162364 [(.yext.schemapath) = "/components/component/optical-channel/state/output-power"];
  if (this->has_output_power()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->output_power_);
  }

  // .ywrapper.Decimal64Value target_output_power = 257534242 [(.yext.schemapath) = "/components/component/optical-channel/state/target-output-power"];
  if (this->has_target_output_power()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->target_output_power_);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.InputPower input_power = 324789833 [(.yext.schemapath) = "/components/component/optical-channel/state/input-power"];
  if (this->has_input_power()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->input_power_);
  }

  // .ywrapper.UintValue group_id = 327440498 [(.yext.schemapath) = "/components/component/optical-channel/state/group-id"];
  if (this->has_group_id()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->group_id_);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.PolarizationDependentLoss polarization_dependent_loss = 384302551 [(.yext.schemapath) = "/components/component/optical-channel/state/polarization-dependent-loss"];
  if (this->has_polarization_dependent_loss()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->polarization_dependent_loss_);
  }

  // .ywrapper.UintValue frequency = 429916835 [(.yext.schemapath) = "/components/component/optical-channel/state/frequency"];
  if (this->has_frequency()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->frequency_);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State.SecondOrderPolarizationModeDispersion second_order_polarization_mode_dispersion = 442862686 [(.yext.schemapath) = "/components/component/optical-channel/state/second-order-polarization-mode-dispersion"];
  if (this->has_second_order_polarization_mode_dispersion()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->second_order_polarization_mode_dispersion_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_OpticalChannel_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_OpticalChannel_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_OpticalChannel_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.OpticalChannel.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.OpticalChannel.State)
    MergeFrom(*source);
  }
}

void Components_Component_OpticalChannel_State::MergeFrom(const Components_Component_OpticalChannel_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_operational_mode()) {
    mutable_operational_mode()->::ywrapper::UintValue::MergeFrom(from.operational_mode());
  }
  if (from.has_laser_bias_current()) {
    mutable_laser_bias_current()->::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_LaserBiasCurrent::MergeFrom(from.laser_bias_current());
  }
  if (from.has_chromatic_dispersion()) {
    mutable_chromatic_dispersion()->::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_ChromaticDispersion::MergeFrom(from.chromatic_dispersion());
  }
  if (from.has_line_port()) {
    mutable_line_port()->::ywrapper::StringValue::MergeFrom(from.line_port());
  }
  if (from.has_polarization_mode_dispersion()) {
    mutable_polarization_mode_dispersion()->::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationModeDispersion::MergeFrom(from.polarization_mode_dispersion());
  }
  if (from.has_output_power()) {
    mutable_output_power()->::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_OutputPower::MergeFrom(from.output_power());
  }
  if (from.has_target_output_power()) {
    mutable_target_output_power()->::ywrapper::Decimal64Value::MergeFrom(from.target_output_power());
  }
  if (from.has_input_power()) {
    mutable_input_power()->::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_InputPower::MergeFrom(from.input_power());
  }
  if (from.has_group_id()) {
    mutable_group_id()->::ywrapper::UintValue::MergeFrom(from.group_id());
  }
  if (from.has_polarization_dependent_loss()) {
    mutable_polarization_dependent_loss()->::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_PolarizationDependentLoss::MergeFrom(from.polarization_dependent_loss());
  }
  if (from.has_frequency()) {
    mutable_frequency()->::ywrapper::UintValue::MergeFrom(from.frequency());
  }
  if (from.has_second_order_polarization_mode_dispersion()) {
    mutable_second_order_polarization_mode_dispersion()->::openconfig::openconfig_platform::Components_Component_OpticalChannel_State_SecondOrderPolarizationModeDispersion::MergeFrom(from.second_order_polarization_mode_dispersion());
  }
}

void Components_Component_OpticalChannel_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_OpticalChannel_State::CopyFrom(const Components_Component_OpticalChannel_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_OpticalChannel_State::IsInitialized() const {
  return true;
}

void Components_Component_OpticalChannel_State::Swap(Components_Component_OpticalChannel_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_OpticalChannel_State::InternalSwap(Components_Component_OpticalChannel_State* other) {
  using std::swap;
  swap(operational_mode_, other->operational_mode_);
  swap(laser_bias_current_, other->laser_bias_current_);
  swap(chromatic_dispersion_, other->chromatic_dispersion_);
  swap(line_port_, other->line_port_);
  swap(polarization_mode_dispersion_, other->polarization_mode_dispersion_);
  swap(output_power_, other->output_power_);
  swap(target_output_power_, other->target_output_power_);
  swap(input_power_, other->input_power_);
  swap(group_id_, other->group_id_);
  swap(polarization_dependent_loss_, other->polarization_dependent_loss_);
  swap(frequency_, other->frequency_);
  swap(second_order_polarization_mode_dispersion_, other->second_order_polarization_mode_dispersion_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_OpticalChannel_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_OpticalChannel::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_platform::Components_Component_OpticalChannel_Config*>(
      ::openconfig::openconfig_platform::Components_Component_OpticalChannel_Config::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalChannel_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State*>(
      ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_OpticalChannel::kConfigFieldNumber;
const int Components_Component_OpticalChannel::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_OpticalChannel::Components_Component_OpticalChannel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.OpticalChannel)
}
Components_Component_OpticalChannel::Components_Component_OpticalChannel(const Components_Component_OpticalChannel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_OpticalChannel_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_OpticalChannel_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.OpticalChannel)
}

void Components_Component_OpticalChannel::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&state_)) + sizeof(config_));
  _cached_size_ = 0;
}

Components_Component_OpticalChannel::~Components_Component_OpticalChannel() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.OpticalChannel)
  SharedDtor();
}

void Components_Component_OpticalChannel::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
}

void Components_Component_OpticalChannel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_OpticalChannel::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_OpticalChannel& Components_Component_OpticalChannel::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalChannel();
  return *internal_default_instance();
}

Components_Component_OpticalChannel* Components_Component_OpticalChannel::New(::google::protobuf::Arena* arena) const {
  Components_Component_OpticalChannel* n = new Components_Component_OpticalChannel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_OpticalChannel::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.OpticalChannel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_OpticalChannel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.OpticalChannel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3653079546u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State state = 84008816 [(.yext.schemapath) = "/components/component/optical-channel/state"];
      case 84008816: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 672070530 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.OpticalChannel.Config config = 456634943 [(.yext.schemapath) = "/components/component/optical-channel/config"];
      case 456634943: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 3653079546 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.OpticalChannel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.OpticalChannel)
  return false;
#undef DO_
}

void Components_Component_OpticalChannel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.OpticalChannel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State state = 84008816 [(.yext.schemapath) = "/components/component/optical-channel/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      84008816, *this->state_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.Config config = 456634943 [(.yext.schemapath) = "/components/component/optical-channel/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      456634943, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.OpticalChannel)
}

::google::protobuf::uint8* Components_Component_OpticalChannel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.OpticalChannel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State state = 84008816 [(.yext.schemapath) = "/components/component/optical-channel/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        84008816, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.Config config = 456634943 [(.yext.schemapath) = "/components/component/optical-channel/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        456634943, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.OpticalChannel)
  return target;
}

size_t Components_Component_OpticalChannel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.OpticalChannel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.State state = 84008816 [(.yext.schemapath) = "/components/component/optical-channel/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel.Config config = 456634943 [(.yext.schemapath) = "/components/component/optical-channel/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_OpticalChannel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_OpticalChannel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_OpticalChannel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.OpticalChannel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.OpticalChannel)
    MergeFrom(*source);
  }
}

void Components_Component_OpticalChannel::MergeFrom(const Components_Component_OpticalChannel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_platform::Components_Component_OpticalChannel_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_platform::Components_Component_OpticalChannel_Config::MergeFrom(from.config());
  }
}

void Components_Component_OpticalChannel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_OpticalChannel::CopyFrom(const Components_Component_OpticalChannel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalChannel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_OpticalChannel::IsInitialized() const {
  return true;
}

void Components_Component_OpticalChannel::Swap(Components_Component_OpticalChannel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_OpticalChannel::InternalSwap(Components_Component_OpticalChannel* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_OpticalChannel::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_OpticalPort_Config::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_OpticalPort_Config::kAdminStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_OpticalPort_Config::Components_Component_OpticalPort_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalPort_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.OpticalPort.Config)
}
Components_Component_OpticalPort_Config::Components_Component_OpticalPort_Config(const Components_Component_OpticalPort_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  admin_state_ = from.admin_state_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.OpticalPort.Config)
}

void Components_Component_OpticalPort_Config::SharedCtor() {
  admin_state_ = 0;
  _cached_size_ = 0;
}

Components_Component_OpticalPort_Config::~Components_Component_OpticalPort_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.OpticalPort.Config)
  SharedDtor();
}

void Components_Component_OpticalPort_Config::SharedDtor() {
}

void Components_Component_OpticalPort_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_OpticalPort_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_OpticalPort_Config& Components_Component_OpticalPort_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalPort_Config();
  return *internal_default_instance();
}

Components_Component_OpticalPort_Config* Components_Component_OpticalPort_Config::New(::google::protobuf::Arena* arena) const {
  Components_Component_OpticalPort_Config* n = new Components_Component_OpticalPort_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_OpticalPort_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.OpticalPort.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  admin_state_ = 0;
  _internal_metadata_.Clear();
}

bool Components_Component_OpticalPort_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.OpticalPort.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3236162216u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.enums.OpenconfigTransportLineCommonAdminStateType admin_state = 404520277 [(.yext.schemapath) = "/components/component/optical-port/config/admin-state"];
      case 404520277: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 3236162216 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_admin_state(static_cast< ::openconfig::enums::OpenconfigTransportLineCommonAdminStateType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.OpticalPort.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.OpticalPort.Config)
  return false;
#undef DO_
}

void Components_Component_OpticalPort_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.OpticalPort.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigTransportLineCommonAdminStateType admin_state = 404520277 [(.yext.schemapath) = "/components/component/optical-port/config/admin-state"];
  if (this->admin_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      404520277, this->admin_state(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.OpticalPort.Config)
}

::google::protobuf::uint8* Components_Component_OpticalPort_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.OpticalPort.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigTransportLineCommonAdminStateType admin_state = 404520277 [(.yext.schemapath) = "/components/component/optical-port/config/admin-state"];
  if (this->admin_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      404520277, this->admin_state(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.OpticalPort.Config)
  return target;
}

size_t Components_Component_OpticalPort_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.OpticalPort.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.enums.OpenconfigTransportLineCommonAdminStateType admin_state = 404520277 [(.yext.schemapath) = "/components/component/optical-port/config/admin-state"];
  if (this->admin_state() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->admin_state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_OpticalPort_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalPort.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_OpticalPort_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_OpticalPort_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.OpticalPort.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.OpticalPort.Config)
    MergeFrom(*source);
  }
}

void Components_Component_OpticalPort_Config::MergeFrom(const Components_Component_OpticalPort_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalPort.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.admin_state() != 0) {
    set_admin_state(from.admin_state());
  }
}

void Components_Component_OpticalPort_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalPort.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_OpticalPort_Config::CopyFrom(const Components_Component_OpticalPort_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalPort.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_OpticalPort_Config::IsInitialized() const {
  return true;
}

void Components_Component_OpticalPort_Config::Swap(Components_Component_OpticalPort_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_OpticalPort_Config::InternalSwap(Components_Component_OpticalPort_Config* other) {
  using std::swap;
  swap(admin_state_, other->admin_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_OpticalPort_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_OpticalPort_State_InputPower::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_OpticalPort_State_InputPower_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalPort_State_InputPower_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalPort_State_InputPower_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalPort_State_InputPower_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalPort_State_InputPower_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void Components_Component_OpticalPort_State_InputPower::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void Components_Component_OpticalPort_State_InputPower::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void Components_Component_OpticalPort_State_InputPower::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void Components_Component_OpticalPort_State_InputPower::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void Components_Component_OpticalPort_State_InputPower::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_OpticalPort_State_InputPower::kAvgFieldNumber;
const int Components_Component_OpticalPort_State_InputPower::kInstantFieldNumber;
const int Components_Component_OpticalPort_State_InputPower::kIntervalFieldNumber;
const int Components_Component_OpticalPort_State_InputPower::kMaxFieldNumber;
const int Components_Component_OpticalPort_State_InputPower::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_OpticalPort_State_InputPower::Components_Component_OpticalPort_State_InputPower()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalPort_State_InputPower();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower)
}
Components_Component_OpticalPort_State_InputPower::Components_Component_OpticalPort_State_InputPower(const Components_Component_OpticalPort_State_InputPower& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower)
}

void Components_Component_OpticalPort_State_InputPower::SharedCtor() {
  ::memset(&instant_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_) -
      reinterpret_cast<char*>(&instant_)) + sizeof(max_));
  _cached_size_ = 0;
}

Components_Component_OpticalPort_State_InputPower::~Components_Component_OpticalPort_State_InputPower() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower)
  SharedDtor();
}

void Components_Component_OpticalPort_State_InputPower::SharedDtor() {
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete max_;
}

void Components_Component_OpticalPort_State_InputPower::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_OpticalPort_State_InputPower::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_OpticalPort_State_InputPower& Components_Component_OpticalPort_State_InputPower::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalPort_State_InputPower();
  return *internal_default_instance();
}

Components_Component_OpticalPort_State_InputPower* Components_Component_OpticalPort_State_InputPower::New(::google::protobuf::Arena* arena) const {
  Components_Component_OpticalPort_State_InputPower* n = new Components_Component_OpticalPort_State_InputPower;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_OpticalPort_State_InputPower::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_OpticalPort_State_InputPower::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3974453090u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value instant = 65040985 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/instant"];
      case 65040985: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 520327882 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue interval = 110463805 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/interval"];
      case 110463805: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 883710442 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 209718746 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/avg"];
      case 209718746: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 1677749970 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value min = 362585490 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/min"];
      case 362585490: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 2900683922 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value max = 496806636 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/max"];
      case 496806636: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 3974453090 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower)
  return false;
#undef DO_
}

void Components_Component_OpticalPort_State_InputPower::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value instant = 65040985 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      65040985, *this->instant_, output);
  }

  // .ywrapper.UintValue interval = 110463805 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      110463805, *this->interval_, output);
  }

  // .ywrapper.Decimal64Value avg = 209718746 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      209718746, *this->avg_, output);
  }

  // .ywrapper.Decimal64Value min = 362585490 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      362585490, *this->min_, output);
  }

  // .ywrapper.Decimal64Value max = 496806636 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      496806636, *this->max_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower)
}

::google::protobuf::uint8* Components_Component_OpticalPort_State_InputPower::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value instant = 65040985 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        65040985, *this->instant_, deterministic, target);
  }

  // .ywrapper.UintValue interval = 110463805 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        110463805, *this->interval_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 209718746 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        209718746, *this->avg_, deterministic, target);
  }

  // .ywrapper.Decimal64Value min = 362585490 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        362585490, *this->min_, deterministic, target);
  }

  // .ywrapper.Decimal64Value max = 496806636 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        496806636, *this->max_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower)
  return target;
}

size_t Components_Component_OpticalPort_State_InputPower::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value instant = 65040985 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.UintValue interval = 110463805 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.Decimal64Value avg = 209718746 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.Decimal64Value min = 362585490 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  // .ywrapper.Decimal64Value max = 496806636 [(.yext.schemapath) = "/components/component/optical-port/state/input-power/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_OpticalPort_State_InputPower::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_OpticalPort_State_InputPower* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_OpticalPort_State_InputPower>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower)
    MergeFrom(*source);
  }
}

void Components_Component_OpticalPort_State_InputPower::MergeFrom(const Components_Component_OpticalPort_State_InputPower& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
}

void Components_Component_OpticalPort_State_InputPower::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_OpticalPort_State_InputPower::CopyFrom(const Components_Component_OpticalPort_State_InputPower& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_OpticalPort_State_InputPower::IsInitialized() const {
  return true;
}

void Components_Component_OpticalPort_State_InputPower::Swap(Components_Component_OpticalPort_State_InputPower* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_OpticalPort_State_InputPower::InternalSwap(Components_Component_OpticalPort_State_InputPower* other) {
  using std::swap;
  swap(instant_, other->instant_);
  swap(interval_, other->interval_);
  swap(avg_, other->avg_);
  swap(min_, other->min_);
  swap(max_, other->max_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_OpticalPort_State_InputPower::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_OpticalPort_State_OutputPower::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_OpticalPort_State_OutputPower_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalPort_State_OutputPower_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalPort_State_OutputPower_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalPort_State_OutputPower_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalPort_State_OutputPower_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void Components_Component_OpticalPort_State_OutputPower::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void Components_Component_OpticalPort_State_OutputPower::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void Components_Component_OpticalPort_State_OutputPower::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void Components_Component_OpticalPort_State_OutputPower::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void Components_Component_OpticalPort_State_OutputPower::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_OpticalPort_State_OutputPower::kAvgFieldNumber;
const int Components_Component_OpticalPort_State_OutputPower::kInstantFieldNumber;
const int Components_Component_OpticalPort_State_OutputPower::kIntervalFieldNumber;
const int Components_Component_OpticalPort_State_OutputPower::kMaxFieldNumber;
const int Components_Component_OpticalPort_State_OutputPower::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_OpticalPort_State_OutputPower::Components_Component_OpticalPort_State_OutputPower()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalPort_State_OutputPower();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower)
}
Components_Component_OpticalPort_State_OutputPower::Components_Component_OpticalPort_State_OutputPower(const Components_Component_OpticalPort_State_OutputPower& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower)
}

void Components_Component_OpticalPort_State_OutputPower::SharedCtor() {
  ::memset(&interval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&min_) -
      reinterpret_cast<char*>(&interval_)) + sizeof(min_));
  _cached_size_ = 0;
}

Components_Component_OpticalPort_State_OutputPower::~Components_Component_OpticalPort_State_OutputPower() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower)
  SharedDtor();
}

void Components_Component_OpticalPort_State_OutputPower::SharedDtor() {
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete max_;
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete min_;
}

void Components_Component_OpticalPort_State_OutputPower::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_OpticalPort_State_OutputPower::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_OpticalPort_State_OutputPower& Components_Component_OpticalPort_State_OutputPower::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalPort_State_OutputPower();
  return *internal_default_instance();
}

Components_Component_OpticalPort_State_OutputPower* Components_Component_OpticalPort_State_OutputPower::New(::google::protobuf::Arena* arena) const {
  Components_Component_OpticalPort_State_OutputPower* n = new Components_Component_OpticalPort_State_OutputPower;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_OpticalPort_State_OutputPower::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_OpticalPort_State_OutputPower::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3662402362u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue interval = 21615678 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/interval"];
      case 21615678: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 172925426 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value max = 55150297 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/max"];
      case 55150297: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 441202378 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 69943463 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/avg"];
      case 69943463: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 559547706 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value instant = 359103520 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/instant"];
      case 359103520: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 2872828162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value min = 457800295 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/min"];
      case 457800295: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 3662402362 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower)
  return false;
#undef DO_
}

void Components_Component_OpticalPort_State_OutputPower::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue interval = 21615678 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21615678, *this->interval_, output);
  }

  // .ywrapper.Decimal64Value max = 55150297 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      55150297, *this->max_, output);
  }

  // .ywrapper.Decimal64Value avg = 69943463 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      69943463, *this->avg_, output);
  }

  // .ywrapper.Decimal64Value instant = 359103520 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      359103520, *this->instant_, output);
  }

  // .ywrapper.Decimal64Value min = 457800295 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      457800295, *this->min_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower)
}

::google::protobuf::uint8* Components_Component_OpticalPort_State_OutputPower::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue interval = 21615678 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21615678, *this->interval_, deterministic, target);
  }

  // .ywrapper.Decimal64Value max = 55150297 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        55150297, *this->max_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 69943463 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        69943463, *this->avg_, deterministic, target);
  }

  // .ywrapper.Decimal64Value instant = 359103520 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        359103520, *this->instant_, deterministic, target);
  }

  // .ywrapper.Decimal64Value min = 457800295 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        457800295, *this->min_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower)
  return target;
}

size_t Components_Component_OpticalPort_State_OutputPower::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue interval = 21615678 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/interval"];
  if (this->has_interval()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.Decimal64Value max = 55150297 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  // .ywrapper.Decimal64Value avg = 69943463 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.Decimal64Value instant = 359103520 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.Decimal64Value min = 457800295 [(.yext.schemapath) = "/components/component/optical-port/state/output-power/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_OpticalPort_State_OutputPower::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_OpticalPort_State_OutputPower* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_OpticalPort_State_OutputPower>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower)
    MergeFrom(*source);
  }
}

void Components_Component_OpticalPort_State_OutputPower::MergeFrom(const Components_Component_OpticalPort_State_OutputPower& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
}

void Components_Component_OpticalPort_State_OutputPower::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_OpticalPort_State_OutputPower::CopyFrom(const Components_Component_OpticalPort_State_OutputPower& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_OpticalPort_State_OutputPower::IsInitialized() const {
  return true;
}

void Components_Component_OpticalPort_State_OutputPower::Swap(Components_Component_OpticalPort_State_OutputPower* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_OpticalPort_State_OutputPower::InternalSwap(Components_Component_OpticalPort_State_OutputPower* other) {
  using std::swap;
  swap(interval_, other->interval_);
  swap(max_, other->max_);
  swap(avg_, other->avg_);
  swap(instant_, other->instant_);
  swap(min_, other->min_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_OpticalPort_State_OutputPower::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_OpticalPort_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_OpticalPort_State_default_instance_._instance.get_mutable()->input_power_ = const_cast< ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_InputPower*>(
      ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_InputPower::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalPort_State_default_instance_._instance.get_mutable()->output_power_ = const_cast< ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_OutputPower*>(
      ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_OutputPower::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_OpticalPort_State::kAdminStateFieldNumber;
const int Components_Component_OpticalPort_State::kInputPowerFieldNumber;
const int Components_Component_OpticalPort_State::kOpticalPortTypeFieldNumber;
const int Components_Component_OpticalPort_State::kOutputPowerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_OpticalPort_State::Components_Component_OpticalPort_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalPort_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.OpticalPort.State)
}
Components_Component_OpticalPort_State::Components_Component_OpticalPort_State(const Components_Component_OpticalPort_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_output_power()) {
    output_power_ = new ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_OutputPower(*from.output_power_);
  } else {
    output_power_ = NULL;
  }
  if (from.has_input_power()) {
    input_power_ = new ::openconfig::openconfig_platform::Components_Component_OpticalPort_State_InputPower(*from.input_power_);
  } else {
    input_power_ = NULL;
  }
  ::memcpy(&optical_port_type_, &from.optical_port_type_,
    static_cast<size_t>(reinterpret_cast<char*>(&admin_state_) -
    reinterpret_cast<char*>(&optical_port_type_)) + sizeof(admin_state_));
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.OpticalPort.State)
}

void Components_Component_OpticalPort_State::SharedCtor() {
  ::memset(&output_power_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&admin_state_) -
      reinterpret_cast<char*>(&output_power_)) + sizeof(admin_state_));
  _cached_size_ = 0;
}

Components_Component_OpticalPort_State::~Components_Component_OpticalPort_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.OpticalPort.State)
  SharedDtor();
}

void Components_Component_OpticalPort_State::SharedDtor() {
  if (this != internal_default_instance()) delete output_power_;
  if (this != internal_default_instance()) delete input_power_;
}

void Components_Component_OpticalPort_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_OpticalPort_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_OpticalPort_State& Components_Component_OpticalPort_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalPort_State();
  return *internal_default_instance();
}

Components_Component_OpticalPort_State* Components_Component_OpticalPort_State::New(::google::protobuf::Arena* arena) const {
  Components_Component_OpticalPort_State* n = new Components_Component_OpticalPort_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_OpticalPort_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.OpticalPort.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && output_power_ != NULL) {
    delete output_power_;
  }
  output_power_ = NULL;
  if (GetArenaNoVirtual() == NULL && input_power_ != NULL) {
    delete input_power_;
  }
  input_power_ = NULL;
  ::memset(&optical_port_type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&admin_state_) -
      reinterpret_cast<char*>(&optical_port_type_)) + sizeof(admin_state_));
  _internal_metadata_.Clear();
}

bool Components_Component_OpticalPort_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.OpticalPort.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4210701082u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower output_power = 96781594 [(.yext.schemapath) = "/components/component/optical-port/state/output-power"];
      case 96781594: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 774252754 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output_power()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigTransportLineCommonOPTICALLINEPORTTYPE optical_port_type = 144411818 [(.yext.schemapath) = "/components/component/optical-port/state/optical-port-type"];
      case 144411818: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 1155294544 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_optical_port_type(static_cast< ::openconfig::enums::OpenconfigTransportLineCommonOPTICALLINEPORTTYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigTransportLineCommonAdminStateType admin_state = 386106910 [(.yext.schemapath) = "/components/component/optical-port/state/admin-state"];
      case 386106910: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 3088855280 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_admin_state(static_cast< ::openconfig::enums::OpenconfigTransportLineCommonAdminStateType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower input_power = 526337635 [(.yext.schemapath) = "/components/component/optical-port/state/input-power"];
      case 526337635: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 4210701082 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input_power()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.OpticalPort.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.OpticalPort.State)
  return false;
#undef DO_
}

void Components_Component_OpticalPort_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.OpticalPort.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower output_power = 96781594 [(.yext.schemapath) = "/components/component/optical-port/state/output-power"];
  if (this->has_output_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      96781594, *this->output_power_, output);
  }

  // .openconfig.enums.OpenconfigTransportLineCommonOPTICALLINEPORTTYPE optical_port_type = 144411818 [(.yext.schemapath) = "/components/component/optical-port/state/optical-port-type"];
  if (this->optical_port_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      144411818, this->optical_port_type(), output);
  }

  // .openconfig.enums.OpenconfigTransportLineCommonAdminStateType admin_state = 386106910 [(.yext.schemapath) = "/components/component/optical-port/state/admin-state"];
  if (this->admin_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      386106910, this->admin_state(), output);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower input_power = 526337635 [(.yext.schemapath) = "/components/component/optical-port/state/input-power"];
  if (this->has_input_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      526337635, *this->input_power_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.OpticalPort.State)
}

::google::protobuf::uint8* Components_Component_OpticalPort_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.OpticalPort.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower output_power = 96781594 [(.yext.schemapath) = "/components/component/optical-port/state/output-power"];
  if (this->has_output_power()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        96781594, *this->output_power_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigTransportLineCommonOPTICALLINEPORTTYPE optical_port_type = 144411818 [(.yext.schemapath) = "/components/component/optical-port/state/optical-port-type"];
  if (this->optical_port_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      144411818, this->optical_port_type(), target);
  }

  // .openconfig.enums.OpenconfigTransportLineCommonAdminStateType admin_state = 386106910 [(.yext.schemapath) = "/components/component/optical-port/state/admin-state"];
  if (this->admin_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      386106910, this->admin_state(), target);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower input_power = 526337635 [(.yext.schemapath) = "/components/component/optical-port/state/input-power"];
  if (this->has_input_power()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        526337635, *this->input_power_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.OpticalPort.State)
  return target;
}

size_t Components_Component_OpticalPort_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.OpticalPort.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_platform.Components.Component.OpticalPort.State.OutputPower output_power = 96781594 [(.yext.schemapath) = "/components/component/optical-port/state/output-power"];
  if (this->has_output_power()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->output_power_);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalPort.State.InputPower input_power = 526337635 [(.yext.schemapath) = "/components/component/optical-port/state/input-power"];
  if (this->has_input_power()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->input_power_);
  }

  // .openconfig.enums.OpenconfigTransportLineCommonOPTICALLINEPORTTYPE optical_port_type = 144411818 [(.yext.schemapath) = "/components/component/optical-port/state/optical-port-type"];
  if (this->optical_port_type() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->optical_port_type());
  }

  // .openconfig.enums.OpenconfigTransportLineCommonAdminStateType admin_state = 386106910 [(.yext.schemapath) = "/components/component/optical-port/state/admin-state"];
  if (this->admin_state() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->admin_state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_OpticalPort_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalPort.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_OpticalPort_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_OpticalPort_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.OpticalPort.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.OpticalPort.State)
    MergeFrom(*source);
  }
}

void Components_Component_OpticalPort_State::MergeFrom(const Components_Component_OpticalPort_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalPort.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_output_power()) {
    mutable_output_power()->::openconfig::openconfig_platform::Components_Component_OpticalPort_State_OutputPower::MergeFrom(from.output_power());
  }
  if (from.has_input_power()) {
    mutable_input_power()->::openconfig::openconfig_platform::Components_Component_OpticalPort_State_InputPower::MergeFrom(from.input_power());
  }
  if (from.optical_port_type() != 0) {
    set_optical_port_type(from.optical_port_type());
  }
  if (from.admin_state() != 0) {
    set_admin_state(from.admin_state());
  }
}

void Components_Component_OpticalPort_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalPort.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_OpticalPort_State::CopyFrom(const Components_Component_OpticalPort_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalPort.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_OpticalPort_State::IsInitialized() const {
  return true;
}

void Components_Component_OpticalPort_State::Swap(Components_Component_OpticalPort_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_OpticalPort_State::InternalSwap(Components_Component_OpticalPort_State* other) {
  using std::swap;
  swap(output_power_, other->output_power_);
  swap(input_power_, other->input_power_);
  swap(optical_port_type_, other->optical_port_type_);
  swap(admin_state_, other->admin_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_OpticalPort_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_OpticalPort::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_OpticalPort_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_platform::Components_Component_OpticalPort_Config*>(
      ::openconfig::openconfig_platform::Components_Component_OpticalPort_Config::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_OpticalPort_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_platform::Components_Component_OpticalPort_State*>(
      ::openconfig::openconfig_platform::Components_Component_OpticalPort_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_OpticalPort::kConfigFieldNumber;
const int Components_Component_OpticalPort::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_OpticalPort::Components_Component_OpticalPort()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalPort();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.OpticalPort)
}
Components_Component_OpticalPort::Components_Component_OpticalPort(const Components_Component_OpticalPort& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_OpticalPort_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_OpticalPort_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.OpticalPort)
}

void Components_Component_OpticalPort::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&state_)) + sizeof(config_));
  _cached_size_ = 0;
}

Components_Component_OpticalPort::~Components_Component_OpticalPort() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.OpticalPort)
  SharedDtor();
}

void Components_Component_OpticalPort::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
}

void Components_Component_OpticalPort::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_OpticalPort::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_OpticalPort& Components_Component_OpticalPort::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_OpticalPort();
  return *internal_default_instance();
}

Components_Component_OpticalPort* Components_Component_OpticalPort::New(::google::protobuf::Arena* arena) const {
  Components_Component_OpticalPort* n = new Components_Component_OpticalPort;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_OpticalPort::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.OpticalPort)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_OpticalPort::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.OpticalPort)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3357786314u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_platform.Components.Component.OpticalPort.State state = 262913006 [(.yext.schemapath) = "/components/component/optical-port/state"];
      case 262913006: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 2103304050 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.OpticalPort.Config config = 419723289 [(.yext.schemapath) = "/components/component/optical-port/config"];
      case 419723289: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 3357786314 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.OpticalPort)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.OpticalPort)
  return false;
#undef DO_
}

void Components_Component_OpticalPort::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.OpticalPort)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.OpticalPort.State state = 262913006 [(.yext.schemapath) = "/components/component/optical-port/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      262913006, *this->state_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalPort.Config config = 419723289 [(.yext.schemapath) = "/components/component/optical-port/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      419723289, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.OpticalPort)
}

::google::protobuf::uint8* Components_Component_OpticalPort::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.OpticalPort)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.OpticalPort.State state = 262913006 [(.yext.schemapath) = "/components/component/optical-port/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        262913006, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalPort.Config config = 419723289 [(.yext.schemapath) = "/components/component/optical-port/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        419723289, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.OpticalPort)
  return target;
}

size_t Components_Component_OpticalPort::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.OpticalPort)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_platform.Components.Component.OpticalPort.State state = 262913006 [(.yext.schemapath) = "/components/component/optical-port/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalPort.Config config = 419723289 [(.yext.schemapath) = "/components/component/optical-port/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_OpticalPort::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalPort)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_OpticalPort* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_OpticalPort>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.OpticalPort)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.OpticalPort)
    MergeFrom(*source);
  }
}

void Components_Component_OpticalPort::MergeFrom(const Components_Component_OpticalPort& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.OpticalPort)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_platform::Components_Component_OpticalPort_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_platform::Components_Component_OpticalPort_Config::MergeFrom(from.config());
  }
}

void Components_Component_OpticalPort::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalPort)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_OpticalPort::CopyFrom(const Components_Component_OpticalPort& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.OpticalPort)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_OpticalPort::IsInitialized() const {
  return true;
}

void Components_Component_OpticalPort::Swap(Components_Component_OpticalPort* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_OpticalPort::InternalSwap(Components_Component_OpticalPort* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_OpticalPort::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Port_BreakoutMode_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Port_BreakoutMode_Config_default_instance_._instance.get_mutable()->num_channels_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Components_Component_Port_BreakoutMode_Config::clear_num_channels() {
  if (GetArenaNoVirtual() == NULL && num_channels_ != NULL) {
    delete num_channels_;
  }
  num_channels_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Port_BreakoutMode_Config::kChannelSpeedFieldNumber;
const int Components_Component_Port_BreakoutMode_Config::kNumChannelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Port_BreakoutMode_Config::Components_Component_Port_BreakoutMode_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Port_BreakoutMode_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config)
}
Components_Component_Port_BreakoutMode_Config::Components_Component_Port_BreakoutMode_Config(const Components_Component_Port_BreakoutMode_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_num_channels()) {
    num_channels_ = new ::ywrapper::UintValue(*from.num_channels_);
  } else {
    num_channels_ = NULL;
  }
  channel_speed_ = from.channel_speed_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config)
}

void Components_Component_Port_BreakoutMode_Config::SharedCtor() {
  ::memset(&num_channels_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_speed_) -
      reinterpret_cast<char*>(&num_channels_)) + sizeof(channel_speed_));
  _cached_size_ = 0;
}

Components_Component_Port_BreakoutMode_Config::~Components_Component_Port_BreakoutMode_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config)
  SharedDtor();
}

void Components_Component_Port_BreakoutMode_Config::SharedDtor() {
  if (this != internal_default_instance()) delete num_channels_;
}

void Components_Component_Port_BreakoutMode_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Port_BreakoutMode_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Port_BreakoutMode_Config& Components_Component_Port_BreakoutMode_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Port_BreakoutMode_Config();
  return *internal_default_instance();
}

Components_Component_Port_BreakoutMode_Config* Components_Component_Port_BreakoutMode_Config::New(::google::protobuf::Arena* arena) const {
  Components_Component_Port_BreakoutMode_Config* n = new Components_Component_Port_BreakoutMode_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Port_BreakoutMode_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && num_channels_ != NULL) {
    delete num_channels_;
  }
  num_channels_ = NULL;
  channel_speed_ = 0;
  _internal_metadata_.Clear();
}

bool Components_Component_Port_BreakoutMode_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1659367810u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.enums.OpenconfigIfEthernetETHERNETSPEED channel_speed = 133662836 [(.yext.schemapath) = "/components/component/port/breakout-mode/config/channel-speed"];
      case 133662836: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 1069302688 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_channel_speed(static_cast< ::openconfig::enums::OpenconfigIfEthernetETHERNETSPEED >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue num_channels = 207420976 [(.yext.schemapath) = "/components/component/port/breakout-mode/config/num-channels"];
      case 207420976: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 1659367810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_num_channels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config)
  return false;
#undef DO_
}

void Components_Component_Port_BreakoutMode_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigIfEthernetETHERNETSPEED channel_speed = 133662836 [(.yext.schemapath) = "/components/component/port/breakout-mode/config/channel-speed"];
  if (this->channel_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      133662836, this->channel_speed(), output);
  }

  // .ywrapper.UintValue num_channels = 207420976 [(.yext.schemapath) = "/components/component/port/breakout-mode/config/num-channels"];
  if (this->has_num_channels()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      207420976, *this->num_channels_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config)
}

::google::protobuf::uint8* Components_Component_Port_BreakoutMode_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigIfEthernetETHERNETSPEED channel_speed = 133662836 [(.yext.schemapath) = "/components/component/port/breakout-mode/config/channel-speed"];
  if (this->channel_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      133662836, this->channel_speed(), target);
  }

  // .ywrapper.UintValue num_channels = 207420976 [(.yext.schemapath) = "/components/component/port/breakout-mode/config/num-channels"];
  if (this->has_num_channels()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        207420976, *this->num_channels_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config)
  return target;
}

size_t Components_Component_Port_BreakoutMode_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue num_channels = 207420976 [(.yext.schemapath) = "/components/component/port/breakout-mode/config/num-channels"];
  if (this->has_num_channels()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->num_channels_);
  }

  // .openconfig.enums.OpenconfigIfEthernetETHERNETSPEED channel_speed = 133662836 [(.yext.schemapath) = "/components/component/port/breakout-mode/config/channel-speed"];
  if (this->channel_speed() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->channel_speed());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Port_BreakoutMode_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Port_BreakoutMode_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Port_BreakoutMode_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config)
    MergeFrom(*source);
  }
}

void Components_Component_Port_BreakoutMode_Config::MergeFrom(const Components_Component_Port_BreakoutMode_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_num_channels()) {
    mutable_num_channels()->::ywrapper::UintValue::MergeFrom(from.num_channels());
  }
  if (from.channel_speed() != 0) {
    set_channel_speed(from.channel_speed());
  }
}

void Components_Component_Port_BreakoutMode_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Port_BreakoutMode_Config::CopyFrom(const Components_Component_Port_BreakoutMode_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Port_BreakoutMode_Config::IsInitialized() const {
  return true;
}

void Components_Component_Port_BreakoutMode_Config::Swap(Components_Component_Port_BreakoutMode_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Port_BreakoutMode_Config::InternalSwap(Components_Component_Port_BreakoutMode_Config* other) {
  using std::swap;
  swap(num_channels_, other->num_channels_);
  swap(channel_speed_, other->channel_speed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Port_BreakoutMode_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Port_BreakoutMode_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Port_BreakoutMode_State_default_instance_._instance.get_mutable()->num_channels_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Components_Component_Port_BreakoutMode_State::clear_num_channels() {
  if (GetArenaNoVirtual() == NULL && num_channels_ != NULL) {
    delete num_channels_;
  }
  num_channels_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Port_BreakoutMode_State::kChannelSpeedFieldNumber;
const int Components_Component_Port_BreakoutMode_State::kNumChannelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Port_BreakoutMode_State::Components_Component_Port_BreakoutMode_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Port_BreakoutMode_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State)
}
Components_Component_Port_BreakoutMode_State::Components_Component_Port_BreakoutMode_State(const Components_Component_Port_BreakoutMode_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_num_channels()) {
    num_channels_ = new ::ywrapper::UintValue(*from.num_channels_);
  } else {
    num_channels_ = NULL;
  }
  channel_speed_ = from.channel_speed_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State)
}

void Components_Component_Port_BreakoutMode_State::SharedCtor() {
  ::memset(&num_channels_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&channel_speed_) -
      reinterpret_cast<char*>(&num_channels_)) + sizeof(channel_speed_));
  _cached_size_ = 0;
}

Components_Component_Port_BreakoutMode_State::~Components_Component_Port_BreakoutMode_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State)
  SharedDtor();
}

void Components_Component_Port_BreakoutMode_State::SharedDtor() {
  if (this != internal_default_instance()) delete num_channels_;
}

void Components_Component_Port_BreakoutMode_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Port_BreakoutMode_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Port_BreakoutMode_State& Components_Component_Port_BreakoutMode_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Port_BreakoutMode_State();
  return *internal_default_instance();
}

Components_Component_Port_BreakoutMode_State* Components_Component_Port_BreakoutMode_State::New(::google::protobuf::Arena* arena) const {
  Components_Component_Port_BreakoutMode_State* n = new Components_Component_Port_BreakoutMode_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Port_BreakoutMode_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && num_channels_ != NULL) {
    delete num_channels_;
  }
  num_channels_ = NULL;
  channel_speed_ = 0;
  _internal_metadata_.Clear();
}

bool Components_Component_Port_BreakoutMode_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4115951418u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.enums.OpenconfigIfEthernetETHERNETSPEED channel_speed = 512097777 [(.yext.schemapath) = "/components/component/port/breakout-mode/state/channel-speed"];
      case 512097777: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 4096782216 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_channel_speed(static_cast< ::openconfig::enums::OpenconfigIfEthernetETHERNETSPEED >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue num_channels = 514493927 [(.yext.schemapath) = "/components/component/port/breakout-mode/state/num-channels"];
      case 514493927: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 4115951418 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_num_channels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State)
  return false;
#undef DO_
}

void Components_Component_Port_BreakoutMode_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigIfEthernetETHERNETSPEED channel_speed = 512097777 [(.yext.schemapath) = "/components/component/port/breakout-mode/state/channel-speed"];
  if (this->channel_speed() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      512097777, this->channel_speed(), output);
  }

  // .ywrapper.UintValue num_channels = 514493927 [(.yext.schemapath) = "/components/component/port/breakout-mode/state/num-channels"];
  if (this->has_num_channels()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      514493927, *this->num_channels_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State)
}

::google::protobuf::uint8* Components_Component_Port_BreakoutMode_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigIfEthernetETHERNETSPEED channel_speed = 512097777 [(.yext.schemapath) = "/components/component/port/breakout-mode/state/channel-speed"];
  if (this->channel_speed() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      512097777, this->channel_speed(), target);
  }

  // .ywrapper.UintValue num_channels = 514493927 [(.yext.schemapath) = "/components/component/port/breakout-mode/state/num-channels"];
  if (this->has_num_channels()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        514493927, *this->num_channels_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State)
  return target;
}

size_t Components_Component_Port_BreakoutMode_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue num_channels = 514493927 [(.yext.schemapath) = "/components/component/port/breakout-mode/state/num-channels"];
  if (this->has_num_channels()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->num_channels_);
  }

  // .openconfig.enums.OpenconfigIfEthernetETHERNETSPEED channel_speed = 512097777 [(.yext.schemapath) = "/components/component/port/breakout-mode/state/channel-speed"];
  if (this->channel_speed() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->channel_speed());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Port_BreakoutMode_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Port_BreakoutMode_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Port_BreakoutMode_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State)
    MergeFrom(*source);
  }
}

void Components_Component_Port_BreakoutMode_State::MergeFrom(const Components_Component_Port_BreakoutMode_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_num_channels()) {
    mutable_num_channels()->::ywrapper::UintValue::MergeFrom(from.num_channels());
  }
  if (from.channel_speed() != 0) {
    set_channel_speed(from.channel_speed());
  }
}

void Components_Component_Port_BreakoutMode_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Port_BreakoutMode_State::CopyFrom(const Components_Component_Port_BreakoutMode_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Port_BreakoutMode_State::IsInitialized() const {
  return true;
}

void Components_Component_Port_BreakoutMode_State::Swap(Components_Component_Port_BreakoutMode_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Port_BreakoutMode_State::InternalSwap(Components_Component_Port_BreakoutMode_State* other) {
  using std::swap;
  swap(num_channels_, other->num_channels_);
  swap(channel_speed_, other->channel_speed_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Port_BreakoutMode_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Port_BreakoutMode::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Port_BreakoutMode_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_Config*>(
      ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_Config::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Port_BreakoutMode_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_State*>(
      ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Port_BreakoutMode::kConfigFieldNumber;
const int Components_Component_Port_BreakoutMode::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Port_BreakoutMode::Components_Component_Port_BreakoutMode()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Port_BreakoutMode();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode)
}
Components_Component_Port_BreakoutMode::Components_Component_Port_BreakoutMode(const Components_Component_Port_BreakoutMode& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode)
}

void Components_Component_Port_BreakoutMode::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&state_)) + sizeof(config_));
  _cached_size_ = 0;
}

Components_Component_Port_BreakoutMode::~Components_Component_Port_BreakoutMode() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode)
  SharedDtor();
}

void Components_Component_Port_BreakoutMode::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
}

void Components_Component_Port_BreakoutMode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Port_BreakoutMode::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Port_BreakoutMode& Components_Component_Port_BreakoutMode::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Port_BreakoutMode();
  return *internal_default_instance();
}

Components_Component_Port_BreakoutMode* Components_Component_Port_BreakoutMode::New(::google::protobuf::Arena* arena) const {
  Components_Component_Port_BreakoutMode* n = new Components_Component_Port_BreakoutMode;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Port_BreakoutMode::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Port_BreakoutMode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3586654258u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State state = 72628467 [(.yext.schemapath) = "/components/component/port/breakout-mode/state"];
      case 72628467: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 581027738 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config config = 448331782 [(.yext.schemapath) = "/components/component/port/breakout-mode/config"];
      case 448331782: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 3586654258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode)
  return false;
#undef DO_
}

void Components_Component_Port_BreakoutMode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State state = 72628467 [(.yext.schemapath) = "/components/component/port/breakout-mode/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      72628467, *this->state_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config config = 448331782 [(.yext.schemapath) = "/components/component/port/breakout-mode/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      448331782, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode)
}

::google::protobuf::uint8* Components_Component_Port_BreakoutMode::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State state = 72628467 [(.yext.schemapath) = "/components/component/port/breakout-mode/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        72628467, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config config = 448331782 [(.yext.schemapath) = "/components/component/port/breakout-mode/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        448331782, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode)
  return target;
}

size_t Components_Component_Port_BreakoutMode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.State state = 72628467 [(.yext.schemapath) = "/components/component/port/breakout-mode/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_platform.Components.Component.Port.BreakoutMode.Config config = 448331782 [(.yext.schemapath) = "/components/component/port/breakout-mode/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Port_BreakoutMode::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Port_BreakoutMode* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Port_BreakoutMode>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode)
    MergeFrom(*source);
  }
}

void Components_Component_Port_BreakoutMode::MergeFrom(const Components_Component_Port_BreakoutMode& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode_Config::MergeFrom(from.config());
  }
}

void Components_Component_Port_BreakoutMode::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Port_BreakoutMode::CopyFrom(const Components_Component_Port_BreakoutMode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Port.BreakoutMode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Port_BreakoutMode::IsInitialized() const {
  return true;
}

void Components_Component_Port_BreakoutMode::Swap(Components_Component_Port_BreakoutMode* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Port_BreakoutMode::InternalSwap(Components_Component_Port_BreakoutMode* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Port_BreakoutMode::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Port_Config::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Port_Config::Components_Component_Port_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Port_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Port.Config)
}
Components_Component_Port_Config::Components_Component_Port_Config(const Components_Component_Port_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Port.Config)
}

void Components_Component_Port_Config::SharedCtor() {
  _cached_size_ = 0;
}

Components_Component_Port_Config::~Components_Component_Port_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Port.Config)
  SharedDtor();
}

void Components_Component_Port_Config::SharedDtor() {
}

void Components_Component_Port_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Port_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Port_Config& Components_Component_Port_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Port_Config();
  return *internal_default_instance();
}

Components_Component_Port_Config* Components_Component_Port_Config::New(::google::protobuf::Arena* arena) const {
  Components_Component_Port_Config* n = new Components_Component_Port_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Port_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Port.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Components_Component_Port_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Port.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Port.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Port.Config)
  return false;
#undef DO_
}

void Components_Component_Port_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Port.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Port.Config)
}

::google::protobuf::uint8* Components_Component_Port_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Port.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Port.Config)
  return target;
}

size_t Components_Component_Port_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Port.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Port_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Port.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Port_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Port_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Port.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Port.Config)
    MergeFrom(*source);
  }
}

void Components_Component_Port_Config::MergeFrom(const Components_Component_Port_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Port.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Components_Component_Port_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Port.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Port_Config::CopyFrom(const Components_Component_Port_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Port.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Port_Config::IsInitialized() const {
  return true;
}

void Components_Component_Port_Config::Swap(Components_Component_Port_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Port_Config::InternalSwap(Components_Component_Port_Config* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Port_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Port_State::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Port_State::Components_Component_Port_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Port_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Port.State)
}
Components_Component_Port_State::Components_Component_Port_State(const Components_Component_Port_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Port.State)
}

void Components_Component_Port_State::SharedCtor() {
  _cached_size_ = 0;
}

Components_Component_Port_State::~Components_Component_Port_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Port.State)
  SharedDtor();
}

void Components_Component_Port_State::SharedDtor() {
}

void Components_Component_Port_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Port_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Port_State& Components_Component_Port_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Port_State();
  return *internal_default_instance();
}

Components_Component_Port_State* Components_Component_Port_State::New(::google::protobuf::Arena* arena) const {
  Components_Component_Port_State* n = new Components_Component_Port_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Port_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Port.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Components_Component_Port_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Port.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Port.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Port.State)
  return false;
#undef DO_
}

void Components_Component_Port_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Port.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Port.State)
}

::google::protobuf::uint8* Components_Component_Port_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Port.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Port.State)
  return target;
}

size_t Components_Component_Port_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Port.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Port_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Port.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Port_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Port_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Port.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Port.State)
    MergeFrom(*source);
  }
}

void Components_Component_Port_State::MergeFrom(const Components_Component_Port_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Port.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Components_Component_Port_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Port.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Port_State::CopyFrom(const Components_Component_Port_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Port.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Port_State::IsInitialized() const {
  return true;
}

void Components_Component_Port_State::Swap(Components_Component_Port_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Port_State::InternalSwap(Components_Component_Port_State* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Port_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Port::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Port_default_instance_._instance.get_mutable()->breakout_mode_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode*>(
      ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Port_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Port_Config*>(
      ::openconfig::openconfig_platform::Components_Component_Port_Config::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Port_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Port_State*>(
      ::openconfig::openconfig_platform::Components_Component_Port_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Port::kBreakoutModeFieldNumber;
const int Components_Component_Port::kConfigFieldNumber;
const int Components_Component_Port::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Port::Components_Component_Port()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Port();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Port)
}
Components_Component_Port::Components_Component_Port(const Components_Component_Port& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Port_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Port_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_breakout_mode()) {
    breakout_mode_ = new ::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode(*from.breakout_mode_);
  } else {
    breakout_mode_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Port)
}

void Components_Component_Port::SharedCtor() {
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&breakout_mode_) -
      reinterpret_cast<char*>(&config_)) + sizeof(breakout_mode_));
  _cached_size_ = 0;
}

Components_Component_Port::~Components_Component_Port() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Port)
  SharedDtor();
}

void Components_Component_Port::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete breakout_mode_;
}

void Components_Component_Port::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Port::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Port& Components_Component_Port::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Port();
  return *internal_default_instance();
}

Components_Component_Port* Components_Component_Port::New(::google::protobuf::Arena* arena) const {
  Components_Component_Port* n = new Components_Component_Port;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Port::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Port)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && breakout_mode_ != NULL) {
    delete breakout_mode_;
  }
  breakout_mode_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Port::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Port)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4070640650u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_platform.Components.Component.Port.Config config = 229703406 [(.yext.schemapath) = "/components/component/port/config"];
      case 229703406: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 1837627250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Port.State state = 326598427 [(.yext.schemapath) = "/components/component/port/state"];
      case 326598427: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 2612787418 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Port.BreakoutMode breakout_mode = 508830081 [(.yext.schemapath) = "/components/component/port/breakout-mode"];
      case 508830081: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 4070640650 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_breakout_mode()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Port)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Port)
  return false;
#undef DO_
}

void Components_Component_Port::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Port)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Port.Config config = 229703406 [(.yext.schemapath) = "/components/component/port/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      229703406, *this->config_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Port.State state = 326598427 [(.yext.schemapath) = "/components/component/port/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      326598427, *this->state_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Port.BreakoutMode breakout_mode = 508830081 [(.yext.schemapath) = "/components/component/port/breakout-mode"];
  if (this->has_breakout_mode()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      508830081, *this->breakout_mode_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Port)
}

::google::protobuf::uint8* Components_Component_Port::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Port)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Port.Config config = 229703406 [(.yext.schemapath) = "/components/component/port/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        229703406, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Port.State state = 326598427 [(.yext.schemapath) = "/components/component/port/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        326598427, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Port.BreakoutMode breakout_mode = 508830081 [(.yext.schemapath) = "/components/component/port/breakout-mode"];
  if (this->has_breakout_mode()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        508830081, *this->breakout_mode_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Port)
  return target;
}

size_t Components_Component_Port::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Port)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_platform.Components.Component.Port.Config config = 229703406 [(.yext.schemapath) = "/components/component/port/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_platform.Components.Component.Port.State state = 326598427 [(.yext.schemapath) = "/components/component/port/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_platform.Components.Component.Port.BreakoutMode breakout_mode = 508830081 [(.yext.schemapath) = "/components/component/port/breakout-mode"];
  if (this->has_breakout_mode()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->breakout_mode_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Port::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Port)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Port* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Port>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Port)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Port)
    MergeFrom(*source);
  }
}

void Components_Component_Port::MergeFrom(const Components_Component_Port& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Port)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_platform::Components_Component_Port_Config::MergeFrom(from.config());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_platform::Components_Component_Port_State::MergeFrom(from.state());
  }
  if (from.has_breakout_mode()) {
    mutable_breakout_mode()->::openconfig::openconfig_platform::Components_Component_Port_BreakoutMode::MergeFrom(from.breakout_mode());
  }
}

void Components_Component_Port::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Port::CopyFrom(const Components_Component_Port& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Port)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Port::IsInitialized() const {
  return true;
}

void Components_Component_Port::Swap(Components_Component_Port* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Port::InternalSwap(Components_Component_Port* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(state_, other->state_);
  swap(breakout_mode_, other->breakout_mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Port::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_PowerSupply_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_PowerSupply_Config_default_instance_._instance.get_mutable()->enabled_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
}
void Components_Component_PowerSupply_Config::clear_enabled() {
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) {
    delete enabled_;
  }
  enabled_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_PowerSupply_Config::kEnabledFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_PowerSupply_Config::Components_Component_PowerSupply_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_PowerSupply_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.PowerSupply.Config)
}
Components_Component_PowerSupply_Config::Components_Component_PowerSupply_Config(const Components_Component_PowerSupply_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_enabled()) {
    enabled_ = new ::ywrapper::BoolValue(*from.enabled_);
  } else {
    enabled_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.PowerSupply.Config)
}

void Components_Component_PowerSupply_Config::SharedCtor() {
  enabled_ = NULL;
  _cached_size_ = 0;
}

Components_Component_PowerSupply_Config::~Components_Component_PowerSupply_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.PowerSupply.Config)
  SharedDtor();
}

void Components_Component_PowerSupply_Config::SharedDtor() {
  if (this != internal_default_instance()) delete enabled_;
}

void Components_Component_PowerSupply_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_PowerSupply_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_PowerSupply_Config& Components_Component_PowerSupply_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_PowerSupply_Config();
  return *internal_default_instance();
}

Components_Component_PowerSupply_Config* Components_Component_PowerSupply_Config::New(::google::protobuf::Arena* arena) const {
  Components_Component_PowerSupply_Config* n = new Components_Component_PowerSupply_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_PowerSupply_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.PowerSupply.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) {
    delete enabled_;
  }
  enabled_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_PowerSupply_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.PowerSupply.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2208172354u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.BoolValue enabled = 276021544 [(.yext.schemapath) = "/components/component/power-supply/config/enabled"];
      case 276021544: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 2208172354 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_enabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.PowerSupply.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.PowerSupply.Config)
  return false;
#undef DO_
}

void Components_Component_PowerSupply_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.PowerSupply.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.BoolValue enabled = 276021544 [(.yext.schemapath) = "/components/component/power-supply/config/enabled"];
  if (this->has_enabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      276021544, *this->enabled_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.PowerSupply.Config)
}

::google::protobuf::uint8* Components_Component_PowerSupply_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.PowerSupply.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.BoolValue enabled = 276021544 [(.yext.schemapath) = "/components/component/power-supply/config/enabled"];
  if (this->has_enabled()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        276021544, *this->enabled_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.PowerSupply.Config)
  return target;
}

size_t Components_Component_PowerSupply_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.PowerSupply.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.BoolValue enabled = 276021544 [(.yext.schemapath) = "/components/component/power-supply/config/enabled"];
  if (this->has_enabled()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->enabled_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_PowerSupply_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.PowerSupply.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_PowerSupply_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_PowerSupply_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.PowerSupply.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.PowerSupply.Config)
    MergeFrom(*source);
  }
}

void Components_Component_PowerSupply_Config::MergeFrom(const Components_Component_PowerSupply_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.PowerSupply.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_enabled()) {
    mutable_enabled()->::ywrapper::BoolValue::MergeFrom(from.enabled());
  }
}

void Components_Component_PowerSupply_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.PowerSupply.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_PowerSupply_Config::CopyFrom(const Components_Component_PowerSupply_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.PowerSupply.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_PowerSupply_Config::IsInitialized() const {
  return true;
}

void Components_Component_PowerSupply_Config::Swap(Components_Component_PowerSupply_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_PowerSupply_Config::InternalSwap(Components_Component_PowerSupply_Config* other) {
  using std::swap;
  swap(enabled_, other->enabled_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_PowerSupply_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_PowerSupply_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_PowerSupply_State_default_instance_._instance.get_mutable()->capacity_ = const_cast< ::ywrapper::BytesValue*>(
      ::ywrapper::BytesValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_PowerSupply_State_default_instance_._instance.get_mutable()->enabled_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_PowerSupply_State_default_instance_._instance.get_mutable()->input_current_ = const_cast< ::ywrapper::BytesValue*>(
      ::ywrapper::BytesValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_PowerSupply_State_default_instance_._instance.get_mutable()->input_voltage_ = const_cast< ::ywrapper::BytesValue*>(
      ::ywrapper::BytesValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_PowerSupply_State_default_instance_._instance.get_mutable()->output_current_ = const_cast< ::ywrapper::BytesValue*>(
      ::ywrapper::BytesValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_PowerSupply_State_default_instance_._instance.get_mutable()->output_power_ = const_cast< ::ywrapper::BytesValue*>(
      ::ywrapper::BytesValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_PowerSupply_State_default_instance_._instance.get_mutable()->output_voltage_ = const_cast< ::ywrapper::BytesValue*>(
      ::ywrapper::BytesValue::internal_default_instance());
}
void Components_Component_PowerSupply_State::clear_capacity() {
  if (GetArenaNoVirtual() == NULL && capacity_ != NULL) {
    delete capacity_;
  }
  capacity_ = NULL;
}
void Components_Component_PowerSupply_State::clear_enabled() {
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) {
    delete enabled_;
  }
  enabled_ = NULL;
}
void Components_Component_PowerSupply_State::clear_input_current() {
  if (GetArenaNoVirtual() == NULL && input_current_ != NULL) {
    delete input_current_;
  }
  input_current_ = NULL;
}
void Components_Component_PowerSupply_State::clear_input_voltage() {
  if (GetArenaNoVirtual() == NULL && input_voltage_ != NULL) {
    delete input_voltage_;
  }
  input_voltage_ = NULL;
}
void Components_Component_PowerSupply_State::clear_output_current() {
  if (GetArenaNoVirtual() == NULL && output_current_ != NULL) {
    delete output_current_;
  }
  output_current_ = NULL;
}
void Components_Component_PowerSupply_State::clear_output_power() {
  if (GetArenaNoVirtual() == NULL && output_power_ != NULL) {
    delete output_power_;
  }
  output_power_ = NULL;
}
void Components_Component_PowerSupply_State::clear_output_voltage() {
  if (GetArenaNoVirtual() == NULL && output_voltage_ != NULL) {
    delete output_voltage_;
  }
  output_voltage_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_PowerSupply_State::kCapacityFieldNumber;
const int Components_Component_PowerSupply_State::kEnabledFieldNumber;
const int Components_Component_PowerSupply_State::kInputCurrentFieldNumber;
const int Components_Component_PowerSupply_State::kInputVoltageFieldNumber;
const int Components_Component_PowerSupply_State::kOutputCurrentFieldNumber;
const int Components_Component_PowerSupply_State::kOutputPowerFieldNumber;
const int Components_Component_PowerSupply_State::kOutputVoltageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_PowerSupply_State::Components_Component_PowerSupply_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_PowerSupply_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.PowerSupply.State)
}
Components_Component_PowerSupply_State::Components_Component_PowerSupply_State(const Components_Component_PowerSupply_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_output_voltage()) {
    output_voltage_ = new ::ywrapper::BytesValue(*from.output_voltage_);
  } else {
    output_voltage_ = NULL;
  }
  if (from.has_capacity()) {
    capacity_ = new ::ywrapper::BytesValue(*from.capacity_);
  } else {
    capacity_ = NULL;
  }
  if (from.has_enabled()) {
    enabled_ = new ::ywrapper::BoolValue(*from.enabled_);
  } else {
    enabled_ = NULL;
  }
  if (from.has_output_power()) {
    output_power_ = new ::ywrapper::BytesValue(*from.output_power_);
  } else {
    output_power_ = NULL;
  }
  if (from.has_input_current()) {
    input_current_ = new ::ywrapper::BytesValue(*from.input_current_);
  } else {
    input_current_ = NULL;
  }
  if (from.has_input_voltage()) {
    input_voltage_ = new ::ywrapper::BytesValue(*from.input_voltage_);
  } else {
    input_voltage_ = NULL;
  }
  if (from.has_output_current()) {
    output_current_ = new ::ywrapper::BytesValue(*from.output_current_);
  } else {
    output_current_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.PowerSupply.State)
}

void Components_Component_PowerSupply_State::SharedCtor() {
  ::memset(&output_voltage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&output_current_) -
      reinterpret_cast<char*>(&output_voltage_)) + sizeof(output_current_));
  _cached_size_ = 0;
}

Components_Component_PowerSupply_State::~Components_Component_PowerSupply_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.PowerSupply.State)
  SharedDtor();
}

void Components_Component_PowerSupply_State::SharedDtor() {
  if (this != internal_default_instance()) delete output_voltage_;
  if (this != internal_default_instance()) delete capacity_;
  if (this != internal_default_instance()) delete enabled_;
  if (this != internal_default_instance()) delete output_power_;
  if (this != internal_default_instance()) delete input_current_;
  if (this != internal_default_instance()) delete input_voltage_;
  if (this != internal_default_instance()) delete output_current_;
}

void Components_Component_PowerSupply_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_PowerSupply_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_PowerSupply_State& Components_Component_PowerSupply_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_PowerSupply_State();
  return *internal_default_instance();
}

Components_Component_PowerSupply_State* Components_Component_PowerSupply_State::New(::google::protobuf::Arena* arena) const {
  Components_Component_PowerSupply_State* n = new Components_Component_PowerSupply_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_PowerSupply_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.PowerSupply.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && output_voltage_ != NULL) {
    delete output_voltage_;
  }
  output_voltage_ = NULL;
  if (GetArenaNoVirtual() == NULL && capacity_ != NULL) {
    delete capacity_;
  }
  capacity_ = NULL;
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) {
    delete enabled_;
  }
  enabled_ = NULL;
  if (GetArenaNoVirtual() == NULL && output_power_ != NULL) {
    delete output_power_;
  }
  output_power_ = NULL;
  if (GetArenaNoVirtual() == NULL && input_current_ != NULL) {
    delete input_current_;
  }
  input_current_ = NULL;
  if (GetArenaNoVirtual() == NULL && input_voltage_ != NULL) {
    delete input_voltage_;
  }
  input_voltage_ = NULL;
  if (GetArenaNoVirtual() == NULL && output_current_ != NULL) {
    delete output_current_;
  }
  output_current_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_PowerSupply_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.PowerSupply.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3651991786u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.BytesValue output_voltage = 180631100 [(.yext.schemapath) = "/components/component/power-supply/state/output-voltage"];
      case 180631100: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 1445048802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output_voltage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BytesValue capacity = 212758134 [(.yext.schemapath) = "/components/component/power-supply/state/capacity"];
      case 212758134: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 1702065074 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_capacity()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue enabled = 221635705 [(.yext.schemapath) = "/components/component/power-supply/state/enabled"];
      case 221635705: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 1773085642 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_enabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BytesValue output_power = 255979333 [(.yext.schemapath) = "/components/component/power-supply/state/output-power"];
      case 255979333: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 2047834666 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output_power()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BytesValue input_current = 259601702 [(.yext.schemapath) = "/components/component/power-supply/state/input-current"];
      case 259601702: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 2076813618 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input_current()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BytesValue input_voltage = 368014879 [(.yext.schemapath) = "/components/component/power-supply/state/input-voltage"];
      case 368014879: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 2944119034 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input_voltage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BytesValue output_current = 456498973 [(.yext.schemapath) = "/components/component/power-supply/state/output-current"];
      case 456498973: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 3651991786 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output_current()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.PowerSupply.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.PowerSupply.State)
  return false;
#undef DO_
}

void Components_Component_PowerSupply_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.PowerSupply.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.BytesValue output_voltage = 180631100 [(.yext.schemapath) = "/components/component/power-supply/state/output-voltage"];
  if (this->has_output_voltage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      180631100, *this->output_voltage_, output);
  }

  // .ywrapper.BytesValue capacity = 212758134 [(.yext.schemapath) = "/components/component/power-supply/state/capacity"];
  if (this->has_capacity()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      212758134, *this->capacity_, output);
  }

  // .ywrapper.BoolValue enabled = 221635705 [(.yext.schemapath) = "/components/component/power-supply/state/enabled"];
  if (this->has_enabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      221635705, *this->enabled_, output);
  }

  // .ywrapper.BytesValue output_power = 255979333 [(.yext.schemapath) = "/components/component/power-supply/state/output-power"];
  if (this->has_output_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      255979333, *this->output_power_, output);
  }

  // .ywrapper.BytesValue input_current = 259601702 [(.yext.schemapath) = "/components/component/power-supply/state/input-current"];
  if (this->has_input_current()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      259601702, *this->input_current_, output);
  }

  // .ywrapper.BytesValue input_voltage = 368014879 [(.yext.schemapath) = "/components/component/power-supply/state/input-voltage"];
  if (this->has_input_voltage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      368014879, *this->input_voltage_, output);
  }

  // .ywrapper.BytesValue output_current = 456498973 [(.yext.schemapath) = "/components/component/power-supply/state/output-current"];
  if (this->has_output_current()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      456498973, *this->output_current_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.PowerSupply.State)
}

::google::protobuf::uint8* Components_Component_PowerSupply_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.PowerSupply.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.BytesValue output_voltage = 180631100 [(.yext.schemapath) = "/components/component/power-supply/state/output-voltage"];
  if (this->has_output_voltage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        180631100, *this->output_voltage_, deterministic, target);
  }

  // .ywrapper.BytesValue capacity = 212758134 [(.yext.schemapath) = "/components/component/power-supply/state/capacity"];
  if (this->has_capacity()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        212758134, *this->capacity_, deterministic, target);
  }

  // .ywrapper.BoolValue enabled = 221635705 [(.yext.schemapath) = "/components/component/power-supply/state/enabled"];
  if (this->has_enabled()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        221635705, *this->enabled_, deterministic, target);
  }

  // .ywrapper.BytesValue output_power = 255979333 [(.yext.schemapath) = "/components/component/power-supply/state/output-power"];
  if (this->has_output_power()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        255979333, *this->output_power_, deterministic, target);
  }

  // .ywrapper.BytesValue input_current = 259601702 [(.yext.schemapath) = "/components/component/power-supply/state/input-current"];
  if (this->has_input_current()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        259601702, *this->input_current_, deterministic, target);
  }

  // .ywrapper.BytesValue input_voltage = 368014879 [(.yext.schemapath) = "/components/component/power-supply/state/input-voltage"];
  if (this->has_input_voltage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        368014879, *this->input_voltage_, deterministic, target);
  }

  // .ywrapper.BytesValue output_current = 456498973 [(.yext.schemapath) = "/components/component/power-supply/state/output-current"];
  if (this->has_output_current()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        456498973, *this->output_current_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.PowerSupply.State)
  return target;
}

size_t Components_Component_PowerSupply_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.PowerSupply.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.BytesValue output_voltage = 180631100 [(.yext.schemapath) = "/components/component/power-supply/state/output-voltage"];
  if (this->has_output_voltage()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->output_voltage_);
  }

  // .ywrapper.BytesValue capacity = 212758134 [(.yext.schemapath) = "/components/component/power-supply/state/capacity"];
  if (this->has_capacity()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->capacity_);
  }

  // .ywrapper.BoolValue enabled = 221635705 [(.yext.schemapath) = "/components/component/power-supply/state/enabled"];
  if (this->has_enabled()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->enabled_);
  }

  // .ywrapper.BytesValue output_power = 255979333 [(.yext.schemapath) = "/components/component/power-supply/state/output-power"];
  if (this->has_output_power()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->output_power_);
  }

  // .ywrapper.BytesValue input_current = 259601702 [(.yext.schemapath) = "/components/component/power-supply/state/input-current"];
  if (this->has_input_current()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->input_current_);
  }

  // .ywrapper.BytesValue input_voltage = 368014879 [(.yext.schemapath) = "/components/component/power-supply/state/input-voltage"];
  if (this->has_input_voltage()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->input_voltage_);
  }

  // .ywrapper.BytesValue output_current = 456498973 [(.yext.schemapath) = "/components/component/power-supply/state/output-current"];
  if (this->has_output_current()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->output_current_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_PowerSupply_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.PowerSupply.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_PowerSupply_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_PowerSupply_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.PowerSupply.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.PowerSupply.State)
    MergeFrom(*source);
  }
}

void Components_Component_PowerSupply_State::MergeFrom(const Components_Component_PowerSupply_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.PowerSupply.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_output_voltage()) {
    mutable_output_voltage()->::ywrapper::BytesValue::MergeFrom(from.output_voltage());
  }
  if (from.has_capacity()) {
    mutable_capacity()->::ywrapper::BytesValue::MergeFrom(from.capacity());
  }
  if (from.has_enabled()) {
    mutable_enabled()->::ywrapper::BoolValue::MergeFrom(from.enabled());
  }
  if (from.has_output_power()) {
    mutable_output_power()->::ywrapper::BytesValue::MergeFrom(from.output_power());
  }
  if (from.has_input_current()) {
    mutable_input_current()->::ywrapper::BytesValue::MergeFrom(from.input_current());
  }
  if (from.has_input_voltage()) {
    mutable_input_voltage()->::ywrapper::BytesValue::MergeFrom(from.input_voltage());
  }
  if (from.has_output_current()) {
    mutable_output_current()->::ywrapper::BytesValue::MergeFrom(from.output_current());
  }
}

void Components_Component_PowerSupply_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.PowerSupply.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_PowerSupply_State::CopyFrom(const Components_Component_PowerSupply_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.PowerSupply.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_PowerSupply_State::IsInitialized() const {
  return true;
}

void Components_Component_PowerSupply_State::Swap(Components_Component_PowerSupply_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_PowerSupply_State::InternalSwap(Components_Component_PowerSupply_State* other) {
  using std::swap;
  swap(output_voltage_, other->output_voltage_);
  swap(capacity_, other->capacity_);
  swap(enabled_, other->enabled_);
  swap(output_power_, other->output_power_);
  swap(input_current_, other->input_current_);
  swap(input_voltage_, other->input_voltage_);
  swap(output_current_, other->output_current_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_PowerSupply_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_PowerSupply::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_PowerSupply_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_platform::Components_Component_PowerSupply_Config*>(
      ::openconfig::openconfig_platform::Components_Component_PowerSupply_Config::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_PowerSupply_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_platform::Components_Component_PowerSupply_State*>(
      ::openconfig::openconfig_platform::Components_Component_PowerSupply_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_PowerSupply::kConfigFieldNumber;
const int Components_Component_PowerSupply::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_PowerSupply::Components_Component_PowerSupply()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_PowerSupply();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.PowerSupply)
}
Components_Component_PowerSupply::Components_Component_PowerSupply(const Components_Component_PowerSupply& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_PowerSupply_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_PowerSupply_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.PowerSupply)
}

void Components_Component_PowerSupply::SharedCtor() {
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&config_)) + sizeof(state_));
  _cached_size_ = 0;
}

Components_Component_PowerSupply::~Components_Component_PowerSupply() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.PowerSupply)
  SharedDtor();
}

void Components_Component_PowerSupply::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete state_;
}

void Components_Component_PowerSupply::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_PowerSupply::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_PowerSupply& Components_Component_PowerSupply::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_PowerSupply();
  return *internal_default_instance();
}

Components_Component_PowerSupply* Components_Component_PowerSupply::New(::google::protobuf::Arena* arena) const {
  Components_Component_PowerSupply* n = new Components_Component_PowerSupply;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_PowerSupply::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.PowerSupply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_PowerSupply::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.PowerSupply)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2623216442u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_platform.Components.Component.PowerSupply.Config config = 285921994 [(.yext.schemapath) = "/components/component/power-supply/config"];
      case 285921994: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 2287375954 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.PowerSupply.State state = 327902055 [(.yext.schemapath) = "/components/component/power-supply/state"];
      case 327902055: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 2623216442 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.PowerSupply)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.PowerSupply)
  return false;
#undef DO_
}

void Components_Component_PowerSupply::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.PowerSupply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.PowerSupply.Config config = 285921994 [(.yext.schemapath) = "/components/component/power-supply/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      285921994, *this->config_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.PowerSupply.State state = 327902055 [(.yext.schemapath) = "/components/component/power-supply/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      327902055, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.PowerSupply)
}

::google::protobuf::uint8* Components_Component_PowerSupply::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.PowerSupply)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.PowerSupply.Config config = 285921994 [(.yext.schemapath) = "/components/component/power-supply/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        285921994, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.PowerSupply.State state = 327902055 [(.yext.schemapath) = "/components/component/power-supply/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        327902055, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.PowerSupply)
  return target;
}

size_t Components_Component_PowerSupply::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.PowerSupply)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_platform.Components.Component.PowerSupply.Config config = 285921994 [(.yext.schemapath) = "/components/component/power-supply/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_platform.Components.Component.PowerSupply.State state = 327902055 [(.yext.schemapath) = "/components/component/power-supply/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_PowerSupply::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.PowerSupply)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_PowerSupply* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_PowerSupply>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.PowerSupply)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.PowerSupply)
    MergeFrom(*source);
  }
}

void Components_Component_PowerSupply::MergeFrom(const Components_Component_PowerSupply& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.PowerSupply)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_platform::Components_Component_PowerSupply_Config::MergeFrom(from.config());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_platform::Components_Component_PowerSupply_State::MergeFrom(from.state());
  }
}

void Components_Component_PowerSupply::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.PowerSupply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_PowerSupply::CopyFrom(const Components_Component_PowerSupply& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.PowerSupply)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_PowerSupply::IsInitialized() const {
  return true;
}

void Components_Component_PowerSupply::Swap(Components_Component_PowerSupply* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_PowerSupply::InternalSwap(Components_Component_PowerSupply* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_PowerSupply::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Properties_Property_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Properties_Property_Config_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Properties_Property_Config_default_instance_.value_bool_ = false;
  ::openconfig::openconfig_platform::_Components_Component_Properties_Property_Config_default_instance_.value_sint64_ = GOOGLE_LONGLONG(0);
  ::openconfig::openconfig_platform::_Components_Component_Properties_Property_Config_default_instance_.value_string_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::openconfig::openconfig_platform::_Components_Component_Properties_Property_Config_default_instance_.value_uint64_ = GOOGLE_ULONGLONG(0);
  ::openconfig::openconfig_platform::_Components_Component_Properties_Property_Config_default_instance_.value_decimal64value_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void Components_Component_Properties_Property_Config::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void Components_Component_Properties_Property_Config::set_allocated_value_decimal64value(::ywrapper::Decimal64Value* value_decimal64value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (value_decimal64value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value_decimal64value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value_decimal64value, submessage_arena);
    }
    set_has_value_decimal64value();
    value_.value_decimal64value_ = value_decimal64value;
  }
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Properties.Property.Config.value_decimal64value)
}
void Components_Component_Properties_Property_Config::clear_value_decimal64value() {
  if (has_value_decimal64value()) {
    delete value_.value_decimal64value_;
    clear_has_value();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Properties_Property_Config::kNameFieldNumber;
const int Components_Component_Properties_Property_Config::kValueBoolFieldNumber;
const int Components_Component_Properties_Property_Config::kValueSint64FieldNumber;
const int Components_Component_Properties_Property_Config::kValueStringFieldNumber;
const int Components_Component_Properties_Property_Config::kValueUint64FieldNumber;
const int Components_Component_Properties_Property_Config::kValueDecimal64ValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Properties_Property_Config::Components_Component_Properties_Property_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Properties_Property_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Properties.Property.Config)
}
Components_Component_Properties_Property_Config::Components_Component_Properties_Property_Config(const Components_Component_Properties_Property_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  clear_has_value();
  switch (from.value_case()) {
    case kValueBool: {
      set_value_bool(from.value_bool());
      break;
    }
    case kValueSint64: {
      set_value_sint64(from.value_sint64());
      break;
    }
    case kValueString: {
      set_value_string(from.value_string());
      break;
    }
    case kValueUint64: {
      set_value_uint64(from.value_uint64());
      break;
    }
    case kValueDecimal64Value: {
      mutable_value_decimal64value()->::ywrapper::Decimal64Value::MergeFrom(from.value_decimal64value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Properties.Property.Config)
}

void Components_Component_Properties_Property_Config::SharedCtor() {
  name_ = NULL;
  clear_has_value();
  _cached_size_ = 0;
}

Components_Component_Properties_Property_Config::~Components_Component_Properties_Property_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Properties.Property.Config)
  SharedDtor();
}

void Components_Component_Properties_Property_Config::SharedDtor() {
  if (this != internal_default_instance()) delete name_;
  if (has_value()) {
    clear_value();
  }
}

void Components_Component_Properties_Property_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Properties_Property_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Properties_Property_Config& Components_Component_Properties_Property_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Properties_Property_Config();
  return *internal_default_instance();
}

Components_Component_Properties_Property_Config* Components_Component_Properties_Property_Config::New(::google::protobuf::Arena* arena) const {
  Components_Component_Properties_Property_Config* n = new Components_Component_Properties_Property_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Properties_Property_Config::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:openconfig.openconfig_platform.Components.Component.Properties.Property.Config)
  switch (value_case()) {
    case kValueBool: {
      // No need to clear
      break;
    }
    case kValueSint64: {
      // No need to clear
      break;
    }
    case kValueString: {
      value_.value_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kValueUint64: {
      // No need to clear
      break;
    }
    case kValueDecimal64Value: {
      delete value_.value_decimal64value_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void Components_Component_Properties_Property_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Properties.Property.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  clear_value();
  _internal_metadata_.Clear();
}

bool Components_Component_Properties_Property_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Properties.Property.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4262524216u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 value_uint64 = 1206141;
      case 1206141: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 9649128 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_.value_uint64_)));
          set_has_value_uint64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value_string = 259657076;
      case 259657076: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 2077256610 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value_string().data(), static_cast<int>(this->value_string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "openconfig.openconfig_platform.Components.Component.Properties.Property.Config.value_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool value_bool = 320942043;
      case 320942043: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 2567536344 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_.value_bool_)));
          set_has_value_bool();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value value_decimal64value = 342547513;
      case 342547513: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 2740380106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_decimal64value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue name = 516657476 [(.yext.schemapath) = "/components/component/properties/property/config/name"];
      case 516657476: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 4133259810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 value_sint64 = 532815527;
      case 532815527: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 4262524216 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &value_.value_sint64_)));
          set_has_value_sint64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Properties.Property.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Properties.Property.Config)
  return false;
#undef DO_
}

void Components_Component_Properties_Property_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Properties.Property.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 value_uint64 = 1206141;
  if (has_value_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1206141, this->value_uint64(), output);
  }

  // string value_string = 259657076;
  if (has_value_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value_string().data(), static_cast<int>(this->value_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_platform.Components.Component.Properties.Property.Config.value_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      259657076, this->value_string(), output);
  }

  // bool value_bool = 320942043;
  if (has_value_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(320942043, this->value_bool(), output);
  }

  // .ywrapper.Decimal64Value value_decimal64value = 342547513;
  if (has_value_decimal64value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      342547513, *value_.value_decimal64value_, output);
  }

  // .ywrapper.StringValue name = 516657476 [(.yext.schemapath) = "/components/component/properties/property/config/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      516657476, *this->name_, output);
  }

  // sint64 value_sint64 = 532815527;
  if (has_value_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(532815527, this->value_sint64(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Properties.Property.Config)
}

::google::protobuf::uint8* Components_Component_Properties_Property_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Properties.Property.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 value_uint64 = 1206141;
  if (has_value_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1206141, this->value_uint64(), target);
  }

  // string value_string = 259657076;
  if (has_value_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value_string().data(), static_cast<int>(this->value_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_platform.Components.Component.Properties.Property.Config.value_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        259657076, this->value_string(), target);
  }

  // bool value_bool = 320942043;
  if (has_value_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(320942043, this->value_bool(), target);
  }

  // .ywrapper.Decimal64Value value_decimal64value = 342547513;
  if (has_value_decimal64value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        342547513, *value_.value_decimal64value_, deterministic, target);
  }

  // .ywrapper.StringValue name = 516657476 [(.yext.schemapath) = "/components/component/properties/property/config/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        516657476, *this->name_, deterministic, target);
  }

  // sint64 value_sint64 = 532815527;
  if (has_value_sint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(532815527, this->value_sint64(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Properties.Property.Config)
  return target;
}

size_t Components_Component_Properties_Property_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Properties.Property.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue name = 516657476 [(.yext.schemapath) = "/components/component/properties/property/config/name"];
  if (this->has_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  switch (value_case()) {
    // bool value_bool = 320942043;
    case kValueBool: {
      total_size += 5 + 1;
      break;
    }
    // sint64 value_sint64 = 532815527;
    case kValueSint64: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->value_sint64());
      break;
    }
    // string value_string = 259657076;
    case kValueString: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value_string());
      break;
    }
    // uint64 value_uint64 = 1206141;
    case kValueUint64: {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->value_uint64());
      break;
    }
    // .ywrapper.Decimal64Value value_decimal64value = 342547513;
    case kValueDecimal64Value: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.value_decimal64value_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Properties_Property_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Properties.Property.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Properties_Property_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Properties_Property_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Properties.Property.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Properties.Property.Config)
    MergeFrom(*source);
  }
}

void Components_Component_Properties_Property_Config::MergeFrom(const Components_Component_Properties_Property_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Properties.Property.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
  switch (from.value_case()) {
    case kValueBool: {
      set_value_bool(from.value_bool());
      break;
    }
    case kValueSint64: {
      set_value_sint64(from.value_sint64());
      break;
    }
    case kValueString: {
      set_value_string(from.value_string());
      break;
    }
    case kValueUint64: {
      set_value_uint64(from.value_uint64());
      break;
    }
    case kValueDecimal64Value: {
      mutable_value_decimal64value()->::ywrapper::Decimal64Value::MergeFrom(from.value_decimal64value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void Components_Component_Properties_Property_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Properties.Property.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Properties_Property_Config::CopyFrom(const Components_Component_Properties_Property_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Properties.Property.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Properties_Property_Config::IsInitialized() const {
  return true;
}

void Components_Component_Properties_Property_Config::Swap(Components_Component_Properties_Property_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Properties_Property_Config::InternalSwap(Components_Component_Properties_Property_Config* other) {
  using std::swap;
  swap(name_, other->name_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Properties_Property_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Properties_Property_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Properties_Property_State_default_instance_._instance.get_mutable()->configurable_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Properties_Property_State_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Properties_Property_State_default_instance_.value_bool_ = false;
  ::openconfig::openconfig_platform::_Components_Component_Properties_Property_State_default_instance_.value_sint64_ = GOOGLE_LONGLONG(0);
  ::openconfig::openconfig_platform::_Components_Component_Properties_Property_State_default_instance_.value_string_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::openconfig::openconfig_platform::_Components_Component_Properties_Property_State_default_instance_.value_uint64_ = GOOGLE_ULONGLONG(0);
  ::openconfig::openconfig_platform::_Components_Component_Properties_Property_State_default_instance_.value_decimal64value_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void Components_Component_Properties_Property_State::clear_configurable() {
  if (GetArenaNoVirtual() == NULL && configurable_ != NULL) {
    delete configurable_;
  }
  configurable_ = NULL;
}
void Components_Component_Properties_Property_State::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void Components_Component_Properties_Property_State::set_allocated_value_decimal64value(::ywrapper::Decimal64Value* value_decimal64value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (value_decimal64value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      value_decimal64value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, value_decimal64value, submessage_arena);
    }
    set_has_value_decimal64value();
    value_.value_decimal64value_ = value_decimal64value;
  }
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_platform.Components.Component.Properties.Property.State.value_decimal64value)
}
void Components_Component_Properties_Property_State::clear_value_decimal64value() {
  if (has_value_decimal64value()) {
    delete value_.value_decimal64value_;
    clear_has_value();
  }
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Properties_Property_State::kConfigurableFieldNumber;
const int Components_Component_Properties_Property_State::kNameFieldNumber;
const int Components_Component_Properties_Property_State::kValueBoolFieldNumber;
const int Components_Component_Properties_Property_State::kValueSint64FieldNumber;
const int Components_Component_Properties_Property_State::kValueStringFieldNumber;
const int Components_Component_Properties_Property_State::kValueUint64FieldNumber;
const int Components_Component_Properties_Property_State::kValueDecimal64ValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Properties_Property_State::Components_Component_Properties_Property_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Properties_Property_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Properties.Property.State)
}
Components_Component_Properties_Property_State::Components_Component_Properties_Property_State(const Components_Component_Properties_Property_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_configurable()) {
    configurable_ = new ::ywrapper::BoolValue(*from.configurable_);
  } else {
    configurable_ = NULL;
  }
  clear_has_value();
  switch (from.value_case()) {
    case kValueBool: {
      set_value_bool(from.value_bool());
      break;
    }
    case kValueSint64: {
      set_value_sint64(from.value_sint64());
      break;
    }
    case kValueString: {
      set_value_string(from.value_string());
      break;
    }
    case kValueUint64: {
      set_value_uint64(from.value_uint64());
      break;
    }
    case kValueDecimal64Value: {
      mutable_value_decimal64value()->::ywrapper::Decimal64Value::MergeFrom(from.value_decimal64value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Properties.Property.State)
}

void Components_Component_Properties_Property_State::SharedCtor() {
  ::memset(&name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&configurable_) -
      reinterpret_cast<char*>(&name_)) + sizeof(configurable_));
  clear_has_value();
  _cached_size_ = 0;
}

Components_Component_Properties_Property_State::~Components_Component_Properties_Property_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Properties.Property.State)
  SharedDtor();
}

void Components_Component_Properties_Property_State::SharedDtor() {
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete configurable_;
  if (has_value()) {
    clear_value();
  }
}

void Components_Component_Properties_Property_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Properties_Property_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Properties_Property_State& Components_Component_Properties_Property_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Properties_Property_State();
  return *internal_default_instance();
}

Components_Component_Properties_Property_State* Components_Component_Properties_Property_State::New(::google::protobuf::Arena* arena) const {
  Components_Component_Properties_Property_State* n = new Components_Component_Properties_Property_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Properties_Property_State::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:openconfig.openconfig_platform.Components.Component.Properties.Property.State)
  switch (value_case()) {
    case kValueBool: {
      // No need to clear
      break;
    }
    case kValueSint64: {
      // No need to clear
      break;
    }
    case kValueString: {
      value_.value_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kValueUint64: {
      // No need to clear
      break;
    }
    case kValueDecimal64Value: {
      delete value_.value_decimal64value_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void Components_Component_Properties_Property_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Properties.Property.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && configurable_ != NULL) {
    delete configurable_;
  }
  configurable_ = NULL;
  clear_value();
  _internal_metadata_.Clear();
}

bool Components_Component_Properties_Property_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Properties.Property.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4277378640u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool value_bool = 14419492;
      case 14419492: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 115355936 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &value_.value_bool_)));
          set_has_value_bool();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue name = 71072955 [(.yext.schemapath) = "/components/component/properties/property/state/name"];
      case 71072955: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 568583642 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value_string = 189491959;
      case 189491959: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 1515935674 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value_string().data(), static_cast<int>(this->value_string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "openconfig.openconfig_platform.Components.Component.Properties.Property.State.value_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value value_decimal64value = 190240218;
      case 190240218: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 1521921746 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_value_decimal64value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue configurable = 264996693 [(.yext.schemapath) = "/components/component/properties/property/state/configurable"];
      case 264996693: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 2119973546 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_configurable()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 value_sint64 = 524890380;
      case 524890380: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 4199123040 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &value_.value_sint64_)));
          set_has_value_sint64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 value_uint64 = 534672330;
      case 534672330: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 4277378640 & 0xFF */)) {
          clear_value();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &value_.value_uint64_)));
          set_has_value_uint64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Properties.Property.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Properties.Property.State)
  return false;
#undef DO_
}

void Components_Component_Properties_Property_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Properties.Property.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool value_bool = 14419492;
  if (has_value_bool()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(14419492, this->value_bool(), output);
  }

  // .ywrapper.StringValue name = 71072955 [(.yext.schemapath) = "/components/component/properties/property/state/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      71072955, *this->name_, output);
  }

  // string value_string = 189491959;
  if (has_value_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value_string().data(), static_cast<int>(this->value_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_platform.Components.Component.Properties.Property.State.value_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      189491959, this->value_string(), output);
  }

  // .ywrapper.Decimal64Value value_decimal64value = 190240218;
  if (has_value_decimal64value()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      190240218, *value_.value_decimal64value_, output);
  }

  // .ywrapper.BoolValue configurable = 264996693 [(.yext.schemapath) = "/components/component/properties/property/state/configurable"];
  if (this->has_configurable()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      264996693, *this->configurable_, output);
  }

  // sint64 value_sint64 = 524890380;
  if (has_value_sint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(524890380, this->value_sint64(), output);
  }

  // uint64 value_uint64 = 534672330;
  if (has_value_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(534672330, this->value_uint64(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Properties.Property.State)
}

::google::protobuf::uint8* Components_Component_Properties_Property_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Properties.Property.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool value_bool = 14419492;
  if (has_value_bool()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(14419492, this->value_bool(), target);
  }

  // .ywrapper.StringValue name = 71072955 [(.yext.schemapath) = "/components/component/properties/property/state/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        71072955, *this->name_, deterministic, target);
  }

  // string value_string = 189491959;
  if (has_value_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value_string().data(), static_cast<int>(this->value_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_platform.Components.Component.Properties.Property.State.value_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        189491959, this->value_string(), target);
  }

  // .ywrapper.Decimal64Value value_decimal64value = 190240218;
  if (has_value_decimal64value()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        190240218, *value_.value_decimal64value_, deterministic, target);
  }

  // .ywrapper.BoolValue configurable = 264996693 [(.yext.schemapath) = "/components/component/properties/property/state/configurable"];
  if (this->has_configurable()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        264996693, *this->configurable_, deterministic, target);
  }

  // sint64 value_sint64 = 524890380;
  if (has_value_sint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(524890380, this->value_sint64(), target);
  }

  // uint64 value_uint64 = 534672330;
  if (has_value_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(534672330, this->value_uint64(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Properties.Property.State)
  return target;
}

size_t Components_Component_Properties_Property_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Properties.Property.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue name = 71072955 [(.yext.schemapath) = "/components/component/properties/property/state/name"];
  if (this->has_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  // .ywrapper.BoolValue configurable = 264996693 [(.yext.schemapath) = "/components/component/properties/property/state/configurable"];
  if (this->has_configurable()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->configurable_);
  }

  switch (value_case()) {
    // bool value_bool = 14419492;
    case kValueBool: {
      total_size += 4 + 1;
      break;
    }
    // sint64 value_sint64 = 524890380;
    case kValueSint64: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::SInt64Size(
          this->value_sint64());
      break;
    }
    // string value_string = 189491959;
    case kValueString: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value_string());
      break;
    }
    // uint64 value_uint64 = 534672330;
    case kValueUint64: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->value_uint64());
      break;
    }
    // .ywrapper.Decimal64Value value_decimal64value = 190240218;
    case kValueDecimal64Value: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *value_.value_decimal64value_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Properties_Property_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Properties.Property.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Properties_Property_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Properties_Property_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Properties.Property.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Properties.Property.State)
    MergeFrom(*source);
  }
}

void Components_Component_Properties_Property_State::MergeFrom(const Components_Component_Properties_Property_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Properties.Property.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
  if (from.has_configurable()) {
    mutable_configurable()->::ywrapper::BoolValue::MergeFrom(from.configurable());
  }
  switch (from.value_case()) {
    case kValueBool: {
      set_value_bool(from.value_bool());
      break;
    }
    case kValueSint64: {
      set_value_sint64(from.value_sint64());
      break;
    }
    case kValueString: {
      set_value_string(from.value_string());
      break;
    }
    case kValueUint64: {
      set_value_uint64(from.value_uint64());
      break;
    }
    case kValueDecimal64Value: {
      mutable_value_decimal64value()->::ywrapper::Decimal64Value::MergeFrom(from.value_decimal64value());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void Components_Component_Properties_Property_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Properties.Property.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Properties_Property_State::CopyFrom(const Components_Component_Properties_Property_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Properties.Property.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Properties_Property_State::IsInitialized() const {
  return true;
}

void Components_Component_Properties_Property_State::Swap(Components_Component_Properties_Property_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Properties_Property_State::InternalSwap(Components_Component_Properties_Property_State* other) {
  using std::swap;
  swap(name_, other->name_);
  swap(configurable_, other->configurable_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Properties_Property_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Properties_Property::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Properties_Property_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Properties_Property_Config*>(
      ::openconfig::openconfig_platform::Components_Component_Properties_Property_Config::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Properties_Property_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Properties_Property_State*>(
      ::openconfig::openconfig_platform::Components_Component_Properties_Property_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Properties_Property::kConfigFieldNumber;
const int Components_Component_Properties_Property::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Properties_Property::Components_Component_Properties_Property()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Properties_Property();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Properties.Property)
}
Components_Component_Properties_Property::Components_Component_Properties_Property(const Components_Component_Properties_Property& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Properties_Property_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Properties_Property_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Properties.Property)
}

void Components_Component_Properties_Property::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&state_)) + sizeof(config_));
  _cached_size_ = 0;
}

Components_Component_Properties_Property::~Components_Component_Properties_Property() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Properties.Property)
  SharedDtor();
}

void Components_Component_Properties_Property::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
}

void Components_Component_Properties_Property::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Properties_Property::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Properties_Property& Components_Component_Properties_Property::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Properties_Property();
  return *internal_default_instance();
}

Components_Component_Properties_Property* Components_Component_Properties_Property::New(::google::protobuf::Arena* arena) const {
  Components_Component_Properties_Property* n = new Components_Component_Properties_Property;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Properties_Property::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Properties.Property)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Properties_Property::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Properties.Property)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1274351858u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_platform.Components.Component.Properties.Property.State state = 19033227 [(.yext.schemapath) = "/components/component/properties/property/state"];
      case 19033227: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 152265818 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Properties.Property.Config config = 159293982 [(.yext.schemapath) = "/components/component/properties/property/config"];
      case 159293982: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 1274351858 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Properties.Property)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Properties.Property)
  return false;
#undef DO_
}

void Components_Component_Properties_Property::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Properties.Property)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Properties.Property.State state = 19033227 [(.yext.schemapath) = "/components/component/properties/property/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19033227, *this->state_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Properties.Property.Config config = 159293982 [(.yext.schemapath) = "/components/component/properties/property/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      159293982, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Properties.Property)
}

::google::protobuf::uint8* Components_Component_Properties_Property::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Properties.Property)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Properties.Property.State state = 19033227 [(.yext.schemapath) = "/components/component/properties/property/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19033227, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Properties.Property.Config config = 159293982 [(.yext.schemapath) = "/components/component/properties/property/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        159293982, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Properties.Property)
  return target;
}

size_t Components_Component_Properties_Property::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Properties.Property)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_platform.Components.Component.Properties.Property.State state = 19033227 [(.yext.schemapath) = "/components/component/properties/property/state"];
  if (this->has_state()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_platform.Components.Component.Properties.Property.Config config = 159293982 [(.yext.schemapath) = "/components/component/properties/property/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Properties_Property::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Properties.Property)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Properties_Property* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Properties_Property>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Properties.Property)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Properties.Property)
    MergeFrom(*source);
  }
}

void Components_Component_Properties_Property::MergeFrom(const Components_Component_Properties_Property& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Properties.Property)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_platform::Components_Component_Properties_Property_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_platform::Components_Component_Properties_Property_Config::MergeFrom(from.config());
  }
}

void Components_Component_Properties_Property::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Properties.Property)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Properties_Property::CopyFrom(const Components_Component_Properties_Property& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Properties.Property)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Properties_Property::IsInitialized() const {
  return true;
}

void Components_Component_Properties_Property::Swap(Components_Component_Properties_Property* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Properties_Property::InternalSwap(Components_Component_Properties_Property* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Properties_Property::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Properties_PropertyKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Properties_PropertyKey_default_instance_._instance.get_mutable()->property_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Properties_Property*>(
      ::openconfig::openconfig_platform::Components_Component_Properties_Property::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Properties_PropertyKey::kNameFieldNumber;
const int Components_Component_Properties_PropertyKey::kPropertyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Properties_PropertyKey::Components_Component_Properties_PropertyKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Properties_PropertyKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey)
}
Components_Component_Properties_PropertyKey::Components_Component_Properties_PropertyKey(const Components_Component_Properties_PropertyKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_property()) {
    property_ = new ::openconfig::openconfig_platform::Components_Component_Properties_Property(*from.property_);
  } else {
    property_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey)
}

void Components_Component_Properties_PropertyKey::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  property_ = NULL;
  _cached_size_ = 0;
}

Components_Component_Properties_PropertyKey::~Components_Component_Properties_PropertyKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey)
  SharedDtor();
}

void Components_Component_Properties_PropertyKey::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete property_;
}

void Components_Component_Properties_PropertyKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Properties_PropertyKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Properties_PropertyKey& Components_Component_Properties_PropertyKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Properties_PropertyKey();
  return *internal_default_instance();
}

Components_Component_Properties_PropertyKey* Components_Component_Properties_PropertyKey::New(::google::protobuf::Arena* arena) const {
  Components_Component_Properties_PropertyKey* n = new Components_Component_Properties_PropertyKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Properties_PropertyKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && property_ != NULL) {
    delete property_;
  }
  property_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Properties_PropertyKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.yext.schemapath) = "/components/component/properties/property/name"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "openconfig.openconfig_platform.Components.Component.Properties.PropertyKey.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Properties.Property property = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey)
  return false;
#undef DO_
}

void Components_Component_Properties_PropertyKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.yext.schemapath) = "/components/component/properties/property/name"];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_platform.Components.Component.Properties.PropertyKey.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .openconfig.openconfig_platform.Components.Component.Properties.Property property = 2;
  if (this->has_property()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->property_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey)
}

::google::protobuf::uint8* Components_Component_Properties_PropertyKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.yext.schemapath) = "/components/component/properties/property/name"];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_platform.Components.Component.Properties.PropertyKey.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .openconfig.openconfig_platform.Components.Component.Properties.Property property = 2;
  if (this->has_property()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->property_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey)
  return target;
}

size_t Components_Component_Properties_PropertyKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1 [(.yext.schemapath) = "/components/component/properties/property/name"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .openconfig.openconfig_platform.Components.Component.Properties.Property property = 2;
  if (this->has_property()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->property_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Properties_PropertyKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Properties_PropertyKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Properties_PropertyKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey)
    MergeFrom(*source);
  }
}

void Components_Component_Properties_PropertyKey::MergeFrom(const Components_Component_Properties_PropertyKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_property()) {
    mutable_property()->::openconfig::openconfig_platform::Components_Component_Properties_Property::MergeFrom(from.property());
  }
}

void Components_Component_Properties_PropertyKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Properties_PropertyKey::CopyFrom(const Components_Component_Properties_PropertyKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Properties.PropertyKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Properties_PropertyKey::IsInitialized() const {
  return true;
}

void Components_Component_Properties_PropertyKey::Swap(Components_Component_Properties_PropertyKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Properties_PropertyKey::InternalSwap(Components_Component_Properties_PropertyKey* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(property_, other->property_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Properties_PropertyKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Properties::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Properties::kPropertyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Properties::Components_Component_Properties()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Properties();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Properties)
}
Components_Component_Properties::Components_Component_Properties(const Components_Component_Properties& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      property_(from.property_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Properties)
}

void Components_Component_Properties::SharedCtor() {
  _cached_size_ = 0;
}

Components_Component_Properties::~Components_Component_Properties() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Properties)
  SharedDtor();
}

void Components_Component_Properties::SharedDtor() {
}

void Components_Component_Properties::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Properties::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Properties& Components_Component_Properties::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Properties();
  return *internal_default_instance();
}

Components_Component_Properties* Components_Component_Properties::New(::google::protobuf::Arena* arena) const {
  Components_Component_Properties* n = new Components_Component_Properties;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Properties::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Properties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  property_.Clear();
  _internal_metadata_.Clear();
}

bool Components_Component_Properties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Properties)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4016615754u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_platform.Components.Component.Properties.PropertyKey property = 502076969 [(.yext.schemapath) = "/components/component/properties/property"];
      case 502076969: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 4016615754 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_property()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Properties)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Properties)
  return false;
#undef DO_
}

void Components_Component_Properties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Properties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_platform.Components.Component.Properties.PropertyKey property = 502076969 [(.yext.schemapath) = "/components/component/properties/property"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      502076969, this->property(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Properties)
}

::google::protobuf::uint8* Components_Component_Properties::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Properties)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_platform.Components.Component.Properties.PropertyKey property = 502076969 [(.yext.schemapath) = "/components/component/properties/property"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->property_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        502076969, this->property(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Properties)
  return target;
}

size_t Components_Component_Properties::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Properties)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_platform.Components.Component.Properties.PropertyKey property = 502076969 [(.yext.schemapath) = "/components/component/properties/property"];
  {
    unsigned int count = static_cast<unsigned int>(this->property_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->property(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Properties::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Properties)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Properties* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Properties>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Properties)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Properties)
    MergeFrom(*source);
  }
}

void Components_Component_Properties::MergeFrom(const Components_Component_Properties& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Properties)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  property_.MergeFrom(from.property_);
}

void Components_Component_Properties::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Properties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Properties::CopyFrom(const Components_Component_Properties& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Properties)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Properties::IsInitialized() const {
  return true;
}

void Components_Component_Properties::Swap(Components_Component_Properties* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Properties::InternalSwap(Components_Component_Properties* other) {
  using std::swap;
  property_.InternalSwap(&other->property_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Properties::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_State_Memory::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_State_Memory_default_instance_._instance.get_mutable()->available_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_State_Memory_default_instance_._instance.get_mutable()->utilized_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Components_Component_State_Memory::clear_available() {
  if (GetArenaNoVirtual() == NULL && available_ != NULL) {
    delete available_;
  }
  available_ = NULL;
}
void Components_Component_State_Memory::clear_utilized() {
  if (GetArenaNoVirtual() == NULL && utilized_ != NULL) {
    delete utilized_;
  }
  utilized_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_State_Memory::kAvailableFieldNumber;
const int Components_Component_State_Memory::kUtilizedFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_State_Memory::Components_Component_State_Memory()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_State_Memory();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.State.Memory)
}
Components_Component_State_Memory::Components_Component_State_Memory(const Components_Component_State_Memory& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_utilized()) {
    utilized_ = new ::ywrapper::UintValue(*from.utilized_);
  } else {
    utilized_ = NULL;
  }
  if (from.has_available()) {
    available_ = new ::ywrapper::UintValue(*from.available_);
  } else {
    available_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.State.Memory)
}

void Components_Component_State_Memory::SharedCtor() {
  ::memset(&utilized_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&available_) -
      reinterpret_cast<char*>(&utilized_)) + sizeof(available_));
  _cached_size_ = 0;
}

Components_Component_State_Memory::~Components_Component_State_Memory() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.State.Memory)
  SharedDtor();
}

void Components_Component_State_Memory::SharedDtor() {
  if (this != internal_default_instance()) delete utilized_;
  if (this != internal_default_instance()) delete available_;
}

void Components_Component_State_Memory::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_State_Memory::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_State_Memory& Components_Component_State_Memory::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_State_Memory();
  return *internal_default_instance();
}

Components_Component_State_Memory* Components_Component_State_Memory::New(::google::protobuf::Arena* arena) const {
  Components_Component_State_Memory* n = new Components_Component_State_Memory;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_State_Memory::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.State.Memory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && utilized_ != NULL) {
    delete utilized_;
  }
  utilized_ = NULL;
  if (GetArenaNoVirtual() == NULL && available_ != NULL) {
    delete available_;
  }
  available_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_State_Memory::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.State.Memory)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2578579674u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue utilized = 235118644 [(.yext.schemapath) = "/components/component/state/memory/utilized"];
      case 235118644: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 1880949154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_utilized()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue available = 322322459 [(.yext.schemapath) = "/components/component/state/memory/available"];
      case 322322459: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 2578579674 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_available()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.State.Memory)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.State.Memory)
  return false;
#undef DO_
}

void Components_Component_State_Memory::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.State.Memory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue utilized = 235118644 [(.yext.schemapath) = "/components/component/state/memory/utilized"];
  if (this->has_utilized()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      235118644, *this->utilized_, output);
  }

  // .ywrapper.UintValue available = 322322459 [(.yext.schemapath) = "/components/component/state/memory/available"];
  if (this->has_available()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      322322459, *this->available_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.State.Memory)
}

::google::protobuf::uint8* Components_Component_State_Memory::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.State.Memory)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue utilized = 235118644 [(.yext.schemapath) = "/components/component/state/memory/utilized"];
  if (this->has_utilized()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        235118644, *this->utilized_, deterministic, target);
  }

  // .ywrapper.UintValue available = 322322459 [(.yext.schemapath) = "/components/component/state/memory/available"];
  if (this->has_available()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        322322459, *this->available_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.State.Memory)
  return target;
}

size_t Components_Component_State_Memory::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.State.Memory)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue utilized = 235118644 [(.yext.schemapath) = "/components/component/state/memory/utilized"];
  if (this->has_utilized()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->utilized_);
  }

  // .ywrapper.UintValue available = 322322459 [(.yext.schemapath) = "/components/component/state/memory/available"];
  if (this->has_available()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->available_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_State_Memory::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.State.Memory)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_State_Memory* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_State_Memory>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.State.Memory)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.State.Memory)
    MergeFrom(*source);
  }
}

void Components_Component_State_Memory::MergeFrom(const Components_Component_State_Memory& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.State.Memory)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_utilized()) {
    mutable_utilized()->::ywrapper::UintValue::MergeFrom(from.utilized());
  }
  if (from.has_available()) {
    mutable_available()->::ywrapper::UintValue::MergeFrom(from.available());
  }
}

void Components_Component_State_Memory::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.State.Memory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_State_Memory::CopyFrom(const Components_Component_State_Memory& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.State.Memory)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_State_Memory::IsInitialized() const {
  return true;
}

void Components_Component_State_Memory::Swap(Components_Component_State_Memory* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_State_Memory::InternalSwap(Components_Component_State_Memory* other) {
  using std::swap;
  swap(utilized_, other->utilized_);
  swap(available_, other->available_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_State_Memory::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_State_Temperature::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_State_Temperature_default_instance_._instance.get_mutable()->alarm_status_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_State_Temperature_default_instance_._instance.get_mutable()->alarm_threshold_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_State_Temperature_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_State_Temperature_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_State_Temperature_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_State_Temperature_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_State_Temperature_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void Components_Component_State_Temperature::clear_alarm_status() {
  if (GetArenaNoVirtual() == NULL && alarm_status_ != NULL) {
    delete alarm_status_;
  }
  alarm_status_ = NULL;
}
void Components_Component_State_Temperature::clear_alarm_threshold() {
  if (GetArenaNoVirtual() == NULL && alarm_threshold_ != NULL) {
    delete alarm_threshold_;
  }
  alarm_threshold_ = NULL;
}
void Components_Component_State_Temperature::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void Components_Component_State_Temperature::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void Components_Component_State_Temperature::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void Components_Component_State_Temperature::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void Components_Component_State_Temperature::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_State_Temperature::kAlarmSeverityFieldNumber;
const int Components_Component_State_Temperature::kAlarmStatusFieldNumber;
const int Components_Component_State_Temperature::kAlarmThresholdFieldNumber;
const int Components_Component_State_Temperature::kAvgFieldNumber;
const int Components_Component_State_Temperature::kInstantFieldNumber;
const int Components_Component_State_Temperature::kIntervalFieldNumber;
const int Components_Component_State_Temperature::kMaxFieldNumber;
const int Components_Component_State_Temperature::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_State_Temperature::Components_Component_State_Temperature()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_State_Temperature();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.State.Temperature)
}
Components_Component_State_Temperature::Components_Component_State_Temperature(const Components_Component_State_Temperature& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_alarm_status()) {
    alarm_status_ = new ::ywrapper::BoolValue(*from.alarm_status_);
  } else {
    alarm_status_ = NULL;
  }
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_alarm_threshold()) {
    alarm_threshold_ = new ::ywrapper::UintValue(*from.alarm_threshold_);
  } else {
    alarm_threshold_ = NULL;
  }
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  alarm_severity_ = from.alarm_severity_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.State.Temperature)
}

void Components_Component_State_Temperature::SharedCtor() {
  ::memset(&min_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&alarm_severity_) -
      reinterpret_cast<char*>(&min_)) + sizeof(alarm_severity_));
  _cached_size_ = 0;
}

Components_Component_State_Temperature::~Components_Component_State_Temperature() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.State.Temperature)
  SharedDtor();
}

void Components_Component_State_Temperature::SharedDtor() {
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete alarm_status_;
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete alarm_threshold_;
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete max_;
}

void Components_Component_State_Temperature::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_State_Temperature::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_State_Temperature& Components_Component_State_Temperature::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_State_Temperature();
  return *internal_default_instance();
}

Components_Component_State_Temperature* Components_Component_State_Temperature::New(::google::protobuf::Arena* arena) const {
  Components_Component_State_Temperature* n = new Components_Component_State_Temperature;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_State_Temperature::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.State.Temperature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && alarm_status_ != NULL) {
    delete alarm_status_;
  }
  alarm_status_ = NULL;
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && alarm_threshold_ != NULL) {
    delete alarm_threshold_;
  }
  alarm_threshold_ = NULL;
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  alarm_severity_ = 0;
  _internal_metadata_.Clear();
}

bool Components_Component_State_Temperature::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.State.Temperature)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3371180730u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value min = 18747561 [(.yext.schemapath) = "/components/component/state/temperature/min"];
      case 18747561: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 149980490 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 100651349 [(.yext.schemapath) = "/components/component/state/temperature/avg"];
      case 100651349: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 805210794 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue alarm_status = 176894761 [(.yext.schemapath) = "/components/component/state/temperature/alarm-status"];
      case 176894761: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 1415158090 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_alarm_status()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value instant = 206000082 [(.yext.schemapath) = "/components/component/state/temperature/instant"];
      case 206000082: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 1648000658 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue alarm_threshold = 231489284 [(.yext.schemapath) = "/components/component/state/temperature/alarm-threshold"];
      case 231489284: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 1851914274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_alarm_threshold()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY alarm_severity = 296397186 [(.yext.schemapath) = "/components/component/state/temperature/alarm-severity"];
      case 296397186: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 2371177488 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_alarm_severity(static_cast< ::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue interval = 407404980 [(.yext.schemapath) = "/components/component/state/temperature/interval"];
      case 407404980: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 3259239842 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value max = 421397591 [(.yext.schemapath) = "/components/component/state/temperature/max"];
      case 421397591: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 3371180730 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.State.Temperature)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.State.Temperature)
  return false;
#undef DO_
}

void Components_Component_State_Temperature::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.State.Temperature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value min = 18747561 [(.yext.schemapath) = "/components/component/state/temperature/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18747561, *this->min_, output);
  }

  // .ywrapper.Decimal64Value avg = 100651349 [(.yext.schemapath) = "/components/component/state/temperature/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      100651349, *this->avg_, output);
  }

  // .ywrapper.BoolValue alarm_status = 176894761 [(.yext.schemapath) = "/components/component/state/temperature/alarm-status"];
  if (this->has_alarm_status()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      176894761, *this->alarm_status_, output);
  }

  // .ywrapper.Decimal64Value instant = 206000082 [(.yext.schemapath) = "/components/component/state/temperature/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      206000082, *this->instant_, output);
  }

  // .ywrapper.UintValue alarm_threshold = 231489284 [(.yext.schemapath) = "/components/component/state/temperature/alarm-threshold"];
  if (this->has_alarm_threshold()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      231489284, *this->alarm_threshold_, output);
  }

  // .openconfig.enums.OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY alarm_severity = 296397186 [(.yext.schemapath) = "/components/component/state/temperature/alarm-severity"];
  if (this->alarm_severity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      296397186, this->alarm_severity(), output);
  }

  // .ywrapper.UintValue interval = 407404980 [(.yext.schemapath) = "/components/component/state/temperature/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      407404980, *this->interval_, output);
  }

  // .ywrapper.Decimal64Value max = 421397591 [(.yext.schemapath) = "/components/component/state/temperature/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      421397591, *this->max_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.State.Temperature)
}

::google::protobuf::uint8* Components_Component_State_Temperature::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.State.Temperature)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value min = 18747561 [(.yext.schemapath) = "/components/component/state/temperature/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18747561, *this->min_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 100651349 [(.yext.schemapath) = "/components/component/state/temperature/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        100651349, *this->avg_, deterministic, target);
  }

  // .ywrapper.BoolValue alarm_status = 176894761 [(.yext.schemapath) = "/components/component/state/temperature/alarm-status"];
  if (this->has_alarm_status()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        176894761, *this->alarm_status_, deterministic, target);
  }

  // .ywrapper.Decimal64Value instant = 206000082 [(.yext.schemapath) = "/components/component/state/temperature/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        206000082, *this->instant_, deterministic, target);
  }

  // .ywrapper.UintValue alarm_threshold = 231489284 [(.yext.schemapath) = "/components/component/state/temperature/alarm-threshold"];
  if (this->has_alarm_threshold()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        231489284, *this->alarm_threshold_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY alarm_severity = 296397186 [(.yext.schemapath) = "/components/component/state/temperature/alarm-severity"];
  if (this->alarm_severity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      296397186, this->alarm_severity(), target);
  }

  // .ywrapper.UintValue interval = 407404980 [(.yext.schemapath) = "/components/component/state/temperature/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        407404980, *this->interval_, deterministic, target);
  }

  // .ywrapper.Decimal64Value max = 421397591 [(.yext.schemapath) = "/components/component/state/temperature/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        421397591, *this->max_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.State.Temperature)
  return target;
}

size_t Components_Component_State_Temperature::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.State.Temperature)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value min = 18747561 [(.yext.schemapath) = "/components/component/state/temperature/min"];
  if (this->has_min()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  // .ywrapper.Decimal64Value avg = 100651349 [(.yext.schemapath) = "/components/component/state/temperature/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.BoolValue alarm_status = 176894761 [(.yext.schemapath) = "/components/component/state/temperature/alarm-status"];
  if (this->has_alarm_status()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->alarm_status_);
  }

  // .ywrapper.Decimal64Value instant = 206000082 [(.yext.schemapath) = "/components/component/state/temperature/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.UintValue alarm_threshold = 231489284 [(.yext.schemapath) = "/components/component/state/temperature/alarm-threshold"];
  if (this->has_alarm_threshold()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->alarm_threshold_);
  }

  // .ywrapper.UintValue interval = 407404980 [(.yext.schemapath) = "/components/component/state/temperature/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.Decimal64Value max = 421397591 [(.yext.schemapath) = "/components/component/state/temperature/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  // .openconfig.enums.OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY alarm_severity = 296397186 [(.yext.schemapath) = "/components/component/state/temperature/alarm-severity"];
  if (this->alarm_severity() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->alarm_severity());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_State_Temperature::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.State.Temperature)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_State_Temperature* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_State_Temperature>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.State.Temperature)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.State.Temperature)
    MergeFrom(*source);
  }
}

void Components_Component_State_Temperature::MergeFrom(const Components_Component_State_Temperature& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.State.Temperature)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
  if (from.has_alarm_status()) {
    mutable_alarm_status()->::ywrapper::BoolValue::MergeFrom(from.alarm_status());
  }
  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_alarm_threshold()) {
    mutable_alarm_threshold()->::ywrapper::UintValue::MergeFrom(from.alarm_threshold());
  }
  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
  if (from.alarm_severity() != 0) {
    set_alarm_severity(from.alarm_severity());
  }
}

void Components_Component_State_Temperature::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.State.Temperature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_State_Temperature::CopyFrom(const Components_Component_State_Temperature& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.State.Temperature)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_State_Temperature::IsInitialized() const {
  return true;
}

void Components_Component_State_Temperature::Swap(Components_Component_State_Temperature* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_State_Temperature::InternalSwap(Components_Component_State_Temperature* other) {
  using std::swap;
  swap(min_, other->min_);
  swap(avg_, other->avg_);
  swap(alarm_status_, other->alarm_status_);
  swap(instant_, other->instant_);
  swap(alarm_threshold_, other->alarm_threshold_);
  swap(interval_, other->interval_);
  swap(max_, other->max_);
  swap(alarm_severity_, other->alarm_severity_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_State_Temperature::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_State_default_instance_._instance.get_mutable()->allocated_power_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_State_default_instance_._instance.get_mutable()->description_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_State_default_instance_._instance.get_mutable()->entity_id_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_State_default_instance_._instance.get_mutable()->equipment_failure_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_State_default_instance_._instance.get_mutable()->equipment_mismatch_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_State_default_instance_._instance.get_mutable()->firmware_version_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_State_default_instance_._instance.get_mutable()->hardware_version_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_State_default_instance_._instance.get_mutable()->id_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_State_default_instance_._instance.get_mutable()->memory_ = const_cast< ::openconfig::openconfig_platform::Components_Component_State_Memory*>(
      ::openconfig::openconfig_platform::Components_Component_State_Memory::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_State_default_instance_._instance.get_mutable()->mfg_name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_State_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_State_default_instance_._instance.get_mutable()->part_no_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_State_default_instance_._instance.get_mutable()->serial_no_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_State_default_instance_._instance.get_mutable()->software_version_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_State_default_instance_._instance.get_mutable()->temperature_ = const_cast< ::openconfig::openconfig_platform::Components_Component_State_Temperature*>(
      ::openconfig::openconfig_platform::Components_Component_State_Temperature::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_State_default_instance_.type_openconfigplatformtypesopenconfighardwarecomponent_ = 0;
  ::openconfig::openconfig_platform::_Components_Component_State_default_instance_.type_openconfigplatformtypesopenconfigsoftwarecomponent_ = 0;
  ::openconfig::openconfig_platform::_Components_Component_State_default_instance_._instance.get_mutable()->used_power_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Components_Component_State::clear_allocated_power() {
  if (GetArenaNoVirtual() == NULL && allocated_power_ != NULL) {
    delete allocated_power_;
  }
  allocated_power_ = NULL;
}
void Components_Component_State::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
void Components_Component_State::clear_entity_id() {
  if (GetArenaNoVirtual() == NULL && entity_id_ != NULL) {
    delete entity_id_;
  }
  entity_id_ = NULL;
}
void Components_Component_State::clear_equipment_failure() {
  if (GetArenaNoVirtual() == NULL && equipment_failure_ != NULL) {
    delete equipment_failure_;
  }
  equipment_failure_ = NULL;
}
void Components_Component_State::clear_equipment_mismatch() {
  if (GetArenaNoVirtual() == NULL && equipment_mismatch_ != NULL) {
    delete equipment_mismatch_;
  }
  equipment_mismatch_ = NULL;
}
void Components_Component_State::clear_firmware_version() {
  if (GetArenaNoVirtual() == NULL && firmware_version_ != NULL) {
    delete firmware_version_;
  }
  firmware_version_ = NULL;
}
void Components_Component_State::clear_hardware_version() {
  if (GetArenaNoVirtual() == NULL && hardware_version_ != NULL) {
    delete hardware_version_;
  }
  hardware_version_ = NULL;
}
void Components_Component_State::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void Components_Component_State::clear_mfg_name() {
  if (GetArenaNoVirtual() == NULL && mfg_name_ != NULL) {
    delete mfg_name_;
  }
  mfg_name_ = NULL;
}
void Components_Component_State::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void Components_Component_State::clear_part_no() {
  if (GetArenaNoVirtual() == NULL && part_no_ != NULL) {
    delete part_no_;
  }
  part_no_ = NULL;
}
void Components_Component_State::clear_serial_no() {
  if (GetArenaNoVirtual() == NULL && serial_no_ != NULL) {
    delete serial_no_;
  }
  serial_no_ = NULL;
}
void Components_Component_State::clear_software_version() {
  if (GetArenaNoVirtual() == NULL && software_version_ != NULL) {
    delete software_version_;
  }
  software_version_ = NULL;
}
void Components_Component_State::clear_used_power() {
  if (GetArenaNoVirtual() == NULL && used_power_ != NULL) {
    delete used_power_;
  }
  used_power_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_State::kAllocatedPowerFieldNumber;
const int Components_Component_State::kDescriptionFieldNumber;
const int Components_Component_State::kEntityIdFieldNumber;
const int Components_Component_State::kEquipmentFailureFieldNumber;
const int Components_Component_State::kEquipmentMismatchFieldNumber;
const int Components_Component_State::kFirmwareVersionFieldNumber;
const int Components_Component_State::kHardwareVersionFieldNumber;
const int Components_Component_State::kIdFieldNumber;
const int Components_Component_State::kMemoryFieldNumber;
const int Components_Component_State::kMfgNameFieldNumber;
const int Components_Component_State::kNameFieldNumber;
const int Components_Component_State::kOperStatusFieldNumber;
const int Components_Component_State::kPartNoFieldNumber;
const int Components_Component_State::kSerialNoFieldNumber;
const int Components_Component_State::kSoftwareVersionFieldNumber;
const int Components_Component_State::kTemperatureFieldNumber;
const int Components_Component_State::kTypeOpenconfigplatformtypesopenconfighardwarecomponentFieldNumber;
const int Components_Component_State::kTypeOpenconfigplatformtypesopenconfigsoftwarecomponentFieldNumber;
const int Components_Component_State::kUsedPowerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_State::Components_Component_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.State)
}
Components_Component_State::Components_Component_State(const Components_Component_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_hardware_version()) {
    hardware_version_ = new ::ywrapper::StringValue(*from.hardware_version_);
  } else {
    hardware_version_ = NULL;
  }
  if (from.has_entity_id()) {
    entity_id_ = new ::ywrapper::UintValue(*from.entity_id_);
  } else {
    entity_id_ = NULL;
  }
  if (from.has_mfg_name()) {
    mfg_name_ = new ::ywrapper::StringValue(*from.mfg_name_);
  } else {
    mfg_name_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_description()) {
    description_ = new ::ywrapper::StringValue(*from.description_);
  } else {
    description_ = NULL;
  }
  if (from.has_temperature()) {
    temperature_ = new ::openconfig::openconfig_platform::Components_Component_State_Temperature(*from.temperature_);
  } else {
    temperature_ = NULL;
  }
  if (from.has_part_no()) {
    part_no_ = new ::ywrapper::StringValue(*from.part_no_);
  } else {
    part_no_ = NULL;
  }
  if (from.has_software_version()) {
    software_version_ = new ::ywrapper::StringValue(*from.software_version_);
  } else {
    software_version_ = NULL;
  }
  if (from.has_firmware_version()) {
    firmware_version_ = new ::ywrapper::StringValue(*from.firmware_version_);
  } else {
    firmware_version_ = NULL;
  }
  if (from.has_id()) {
    id_ = new ::ywrapper::StringValue(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_used_power()) {
    used_power_ = new ::ywrapper::UintValue(*from.used_power_);
  } else {
    used_power_ = NULL;
  }
  if (from.has_equipment_mismatch()) {
    equipment_mismatch_ = new ::ywrapper::BoolValue(*from.equipment_mismatch_);
  } else {
    equipment_mismatch_ = NULL;
  }
  if (from.has_allocated_power()) {
    allocated_power_ = new ::ywrapper::UintValue(*from.allocated_power_);
  } else {
    allocated_power_ = NULL;
  }
  if (from.has_memory()) {
    memory_ = new ::openconfig::openconfig_platform::Components_Component_State_Memory(*from.memory_);
  } else {
    memory_ = NULL;
  }
  if (from.has_equipment_failure()) {
    equipment_failure_ = new ::ywrapper::BoolValue(*from.equipment_failure_);
  } else {
    equipment_failure_ = NULL;
  }
  if (from.has_serial_no()) {
    serial_no_ = new ::ywrapper::StringValue(*from.serial_no_);
  } else {
    serial_no_ = NULL;
  }
  oper_status_ = from.oper_status_;
  clear_has_type();
  switch (from.type_case()) {
    case kTypeOpenconfigplatformtypesopenconfighardwarecomponent: {
      set_type_openconfigplatformtypesopenconfighardwarecomponent(from.type_openconfigplatformtypesopenconfighardwarecomponent());
      break;
    }
    case kTypeOpenconfigplatformtypesopenconfigsoftwarecomponent: {
      set_type_openconfigplatformtypesopenconfigsoftwarecomponent(from.type_openconfigplatformtypesopenconfigsoftwarecomponent());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.State)
}

void Components_Component_State::SharedCtor() {
  ::memset(&hardware_version_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&oper_status_) -
      reinterpret_cast<char*>(&hardware_version_)) + sizeof(oper_status_));
  clear_has_type();
  _cached_size_ = 0;
}

Components_Component_State::~Components_Component_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.State)
  SharedDtor();
}

void Components_Component_State::SharedDtor() {
  if (this != internal_default_instance()) delete hardware_version_;
  if (this != internal_default_instance()) delete entity_id_;
  if (this != internal_default_instance()) delete mfg_name_;
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete description_;
  if (this != internal_default_instance()) delete temperature_;
  if (this != internal_default_instance()) delete part_no_;
  if (this != internal_default_instance()) delete software_version_;
  if (this != internal_default_instance()) delete firmware_version_;
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete used_power_;
  if (this != internal_default_instance()) delete equipment_mismatch_;
  if (this != internal_default_instance()) delete allocated_power_;
  if (this != internal_default_instance()) delete memory_;
  if (this != internal_default_instance()) delete equipment_failure_;
  if (this != internal_default_instance()) delete serial_no_;
  if (has_type()) {
    clear_type();
  }
}

void Components_Component_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_State& Components_Component_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_State();
  return *internal_default_instance();
}

Components_Component_State* Components_Component_State::New(::google::protobuf::Arena* arena) const {
  Components_Component_State* n = new Components_Component_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_State::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:openconfig.openconfig_platform.Components.Component.State)
  switch (type_case()) {
    case kTypeOpenconfigplatformtypesopenconfighardwarecomponent: {
      // No need to clear
      break;
    }
    case kTypeOpenconfigplatformtypesopenconfigsoftwarecomponent: {
      // No need to clear
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void Components_Component_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && hardware_version_ != NULL) {
    delete hardware_version_;
  }
  hardware_version_ = NULL;
  if (GetArenaNoVirtual() == NULL && entity_id_ != NULL) {
    delete entity_id_;
  }
  entity_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && mfg_name_ != NULL) {
    delete mfg_name_;
  }
  mfg_name_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
  if (GetArenaNoVirtual() == NULL && temperature_ != NULL) {
    delete temperature_;
  }
  temperature_ = NULL;
  if (GetArenaNoVirtual() == NULL && part_no_ != NULL) {
    delete part_no_;
  }
  part_no_ = NULL;
  if (GetArenaNoVirtual() == NULL && software_version_ != NULL) {
    delete software_version_;
  }
  software_version_ = NULL;
  if (GetArenaNoVirtual() == NULL && firmware_version_ != NULL) {
    delete firmware_version_;
  }
  firmware_version_ = NULL;
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && used_power_ != NULL) {
    delete used_power_;
  }
  used_power_ = NULL;
  if (GetArenaNoVirtual() == NULL && equipment_mismatch_ != NULL) {
    delete equipment_mismatch_;
  }
  equipment_mismatch_ = NULL;
  if (GetArenaNoVirtual() == NULL && allocated_power_ != NULL) {
    delete allocated_power_;
  }
  allocated_power_ = NULL;
  if (GetArenaNoVirtual() == NULL && memory_ != NULL) {
    delete memory_;
  }
  memory_ = NULL;
  if (GetArenaNoVirtual() == NULL && equipment_failure_ != NULL) {
    delete equipment_failure_;
  }
  equipment_failure_ = NULL;
  if (GetArenaNoVirtual() == NULL && serial_no_ != NULL) {
    delete serial_no_;
  }
  serial_no_ = NULL;
  oper_status_ = 0;
  clear_type();
  _internal_metadata_.Clear();
}

bool Components_Component_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3920238002u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue hardware_version = 49616205 [(.yext.schemapath) = "/components/component/state/hardware-version"];
      case 49616205: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 396929642 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hardware_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue entity_id = 53940879 [(.yext.schemapath) = "/components/component/state/entity-id"];
      case 53940879: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 431527034 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_entity_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue mfg_name = 80033814 [(.yext.schemapath) = "/components/component/state/mfg-name"];
      case 80033814: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 640270514 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mfg_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue name = 111678303 [(.yext.schemapath) = "/components/component/state/name"];
      case 111678303: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 893426426 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue description = 167549616 [(.yext.schemapath) = "/components/component/state/description"];
      case 167549616: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 1340396930 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.State.Temperature temperature = 169040172 [(.yext.schemapath) = "/components/component/state/temperature"];
      case 169040172: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 1352321378 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_temperature()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue part_no = 173082367 [(.yext.schemapath) = "/components/component/state/part-no"];
      case 173082367: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 1384658938 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_part_no()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue software_version = 220526526 [(.yext.schemapath) = "/components/component/state/software-version"];
      case 220526526: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 1764212210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_software_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue firmware_version = 244667518 [(.yext.schemapath) = "/components/component/state/firmware-version"];
      case 244667518: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 1957340146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_firmware_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue id = 246882465 [(.yext.schemapath) = "/components/component/state/id"];
      case 246882465: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 1975059722 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue used_power = 259754309 [(.yext.schemapath) = "/components/component/state/used-power"];
      case 259754309: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 2078034474 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_used_power()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue equipment_mismatch = 311608903 [(.yext.schemapath) = "/components/component/state/equipment-mismatch"];
      case 311608903: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 2492871226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_equipment_mismatch()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT type_openconfigplatformtypesopenconfigsoftwarecomponent = 366278741;
      case 366278741: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 2930229928 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type_openconfigplatformtypesopenconfigsoftwarecomponent(static_cast< ::openconfig::enums::OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigPlatformTypesCOMPONENTOPERSTATUS oper_status = 378023501 [(.yext.schemapath) = "/components/component/state/oper-status"];
      case 378023501: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 3024188008 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_oper_status(static_cast< ::openconfig::enums::OpenconfigPlatformTypesCOMPONENTOPERSTATUS >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue allocated_power = 382835825 [(.yext.schemapath) = "/components/component/state/allocated-power"];
      case 382835825: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 3062686602 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_allocated_power()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT type_openconfigplatformtypesopenconfighardwarecomponent = 423705132;
      case 423705132: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 3389641056 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type_openconfigplatformtypesopenconfighardwarecomponent(static_cast< ::openconfig::enums::OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.State.Memory memory = 443182963 [(.yext.schemapath) = "/components/component/state/memory"];
      case 443182963: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 3545463706 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_memory()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue equipment_failure = 471038183 [(.yext.schemapath) = "/components/component/state/equipment-failure"];
      case 471038183: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 3768305466 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_equipment_failure()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue serial_no = 490029750 [(.yext.schemapath) = "/components/component/state/serial-no"];
      case 490029750: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 3920238002 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_serial_no()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.State)
  return false;
#undef DO_
}

void Components_Component_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue hardware_version = 49616205 [(.yext.schemapath) = "/components/component/state/hardware-version"];
  if (this->has_hardware_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      49616205, *this->hardware_version_, output);
  }

  // .ywrapper.UintValue entity_id = 53940879 [(.yext.schemapath) = "/components/component/state/entity-id"];
  if (this->has_entity_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      53940879, *this->entity_id_, output);
  }

  // .ywrapper.StringValue mfg_name = 80033814 [(.yext.schemapath) = "/components/component/state/mfg-name"];
  if (this->has_mfg_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      80033814, *this->mfg_name_, output);
  }

  // .ywrapper.StringValue name = 111678303 [(.yext.schemapath) = "/components/component/state/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      111678303, *this->name_, output);
  }

  // .ywrapper.StringValue description = 167549616 [(.yext.schemapath) = "/components/component/state/description"];
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      167549616, *this->description_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.State.Temperature temperature = 169040172 [(.yext.schemapath) = "/components/component/state/temperature"];
  if (this->has_temperature()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      169040172, *this->temperature_, output);
  }

  // .ywrapper.StringValue part_no = 173082367 [(.yext.schemapath) = "/components/component/state/part-no"];
  if (this->has_part_no()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      173082367, *this->part_no_, output);
  }

  // .ywrapper.StringValue software_version = 220526526 [(.yext.schemapath) = "/components/component/state/software-version"];
  if (this->has_software_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      220526526, *this->software_version_, output);
  }

  // .ywrapper.StringValue firmware_version = 244667518 [(.yext.schemapath) = "/components/component/state/firmware-version"];
  if (this->has_firmware_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      244667518, *this->firmware_version_, output);
  }

  // .ywrapper.StringValue id = 246882465 [(.yext.schemapath) = "/components/component/state/id"];
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      246882465, *this->id_, output);
  }

  // .ywrapper.UintValue used_power = 259754309 [(.yext.schemapath) = "/components/component/state/used-power"];
  if (this->has_used_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      259754309, *this->used_power_, output);
  }

  // .ywrapper.BoolValue equipment_mismatch = 311608903 [(.yext.schemapath) = "/components/component/state/equipment-mismatch"];
  if (this->has_equipment_mismatch()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      311608903, *this->equipment_mismatch_, output);
  }

  // .openconfig.enums.OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT type_openconfigplatformtypesopenconfigsoftwarecomponent = 366278741;
  if (has_type_openconfigplatformtypesopenconfigsoftwarecomponent()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      366278741, this->type_openconfigplatformtypesopenconfigsoftwarecomponent(), output);
  }

  // .openconfig.enums.OpenconfigPlatformTypesCOMPONENTOPERSTATUS oper_status = 378023501 [(.yext.schemapath) = "/components/component/state/oper-status"];
  if (this->oper_status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      378023501, this->oper_status(), output);
  }

  // .ywrapper.UintValue allocated_power = 382835825 [(.yext.schemapath) = "/components/component/state/allocated-power"];
  if (this->has_allocated_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      382835825, *this->allocated_power_, output);
  }

  // .openconfig.enums.OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT type_openconfigplatformtypesopenconfighardwarecomponent = 423705132;
  if (has_type_openconfigplatformtypesopenconfighardwarecomponent()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      423705132, this->type_openconfigplatformtypesopenconfighardwarecomponent(), output);
  }

  // .openconfig.openconfig_platform.Components.Component.State.Memory memory = 443182963 [(.yext.schemapath) = "/components/component/state/memory"];
  if (this->has_memory()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      443182963, *this->memory_, output);
  }

  // .ywrapper.BoolValue equipment_failure = 471038183 [(.yext.schemapath) = "/components/component/state/equipment-failure"];
  if (this->has_equipment_failure()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      471038183, *this->equipment_failure_, output);
  }

  // .ywrapper.StringValue serial_no = 490029750 [(.yext.schemapath) = "/components/component/state/serial-no"];
  if (this->has_serial_no()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      490029750, *this->serial_no_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.State)
}

::google::protobuf::uint8* Components_Component_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue hardware_version = 49616205 [(.yext.schemapath) = "/components/component/state/hardware-version"];
  if (this->has_hardware_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        49616205, *this->hardware_version_, deterministic, target);
  }

  // .ywrapper.UintValue entity_id = 53940879 [(.yext.schemapath) = "/components/component/state/entity-id"];
  if (this->has_entity_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        53940879, *this->entity_id_, deterministic, target);
  }

  // .ywrapper.StringValue mfg_name = 80033814 [(.yext.schemapath) = "/components/component/state/mfg-name"];
  if (this->has_mfg_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        80033814, *this->mfg_name_, deterministic, target);
  }

  // .ywrapper.StringValue name = 111678303 [(.yext.schemapath) = "/components/component/state/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        111678303, *this->name_, deterministic, target);
  }

  // .ywrapper.StringValue description = 167549616 [(.yext.schemapath) = "/components/component/state/description"];
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        167549616, *this->description_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.State.Temperature temperature = 169040172 [(.yext.schemapath) = "/components/component/state/temperature"];
  if (this->has_temperature()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        169040172, *this->temperature_, deterministic, target);
  }

  // .ywrapper.StringValue part_no = 173082367 [(.yext.schemapath) = "/components/component/state/part-no"];
  if (this->has_part_no()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        173082367, *this->part_no_, deterministic, target);
  }

  // .ywrapper.StringValue software_version = 220526526 [(.yext.schemapath) = "/components/component/state/software-version"];
  if (this->has_software_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        220526526, *this->software_version_, deterministic, target);
  }

  // .ywrapper.StringValue firmware_version = 244667518 [(.yext.schemapath) = "/components/component/state/firmware-version"];
  if (this->has_firmware_version()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        244667518, *this->firmware_version_, deterministic, target);
  }

  // .ywrapper.StringValue id = 246882465 [(.yext.schemapath) = "/components/component/state/id"];
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        246882465, *this->id_, deterministic, target);
  }

  // .ywrapper.UintValue used_power = 259754309 [(.yext.schemapath) = "/components/component/state/used-power"];
  if (this->has_used_power()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        259754309, *this->used_power_, deterministic, target);
  }

  // .ywrapper.BoolValue equipment_mismatch = 311608903 [(.yext.schemapath) = "/components/component/state/equipment-mismatch"];
  if (this->has_equipment_mismatch()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        311608903, *this->equipment_mismatch_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT type_openconfigplatformtypesopenconfigsoftwarecomponent = 366278741;
  if (has_type_openconfigplatformtypesopenconfigsoftwarecomponent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      366278741, this->type_openconfigplatformtypesopenconfigsoftwarecomponent(), target);
  }

  // .openconfig.enums.OpenconfigPlatformTypesCOMPONENTOPERSTATUS oper_status = 378023501 [(.yext.schemapath) = "/components/component/state/oper-status"];
  if (this->oper_status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      378023501, this->oper_status(), target);
  }

  // .ywrapper.UintValue allocated_power = 382835825 [(.yext.schemapath) = "/components/component/state/allocated-power"];
  if (this->has_allocated_power()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        382835825, *this->allocated_power_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT type_openconfigplatformtypesopenconfighardwarecomponent = 423705132;
  if (has_type_openconfigplatformtypesopenconfighardwarecomponent()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      423705132, this->type_openconfigplatformtypesopenconfighardwarecomponent(), target);
  }

  // .openconfig.openconfig_platform.Components.Component.State.Memory memory = 443182963 [(.yext.schemapath) = "/components/component/state/memory"];
  if (this->has_memory()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        443182963, *this->memory_, deterministic, target);
  }

  // .ywrapper.BoolValue equipment_failure = 471038183 [(.yext.schemapath) = "/components/component/state/equipment-failure"];
  if (this->has_equipment_failure()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        471038183, *this->equipment_failure_, deterministic, target);
  }

  // .ywrapper.StringValue serial_no = 490029750 [(.yext.schemapath) = "/components/component/state/serial-no"];
  if (this->has_serial_no()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        490029750, *this->serial_no_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.State)
  return target;
}

size_t Components_Component_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue hardware_version = 49616205 [(.yext.schemapath) = "/components/component/state/hardware-version"];
  if (this->has_hardware_version()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->hardware_version_);
  }

  // .ywrapper.UintValue entity_id = 53940879 [(.yext.schemapath) = "/components/component/state/entity-id"];
  if (this->has_entity_id()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->entity_id_);
  }

  // .ywrapper.StringValue mfg_name = 80033814 [(.yext.schemapath) = "/components/component/state/mfg-name"];
  if (this->has_mfg_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mfg_name_);
  }

  // .ywrapper.StringValue name = 111678303 [(.yext.schemapath) = "/components/component/state/name"];
  if (this->has_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  // .ywrapper.StringValue description = 167549616 [(.yext.schemapath) = "/components/component/state/description"];
  if (this->has_description()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->description_);
  }

  // .openconfig.openconfig_platform.Components.Component.State.Temperature temperature = 169040172 [(.yext.schemapath) = "/components/component/state/temperature"];
  if (this->has_temperature()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->temperature_);
  }

  // .ywrapper.StringValue part_no = 173082367 [(.yext.schemapath) = "/components/component/state/part-no"];
  if (this->has_part_no()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->part_no_);
  }

  // .ywrapper.StringValue software_version = 220526526 [(.yext.schemapath) = "/components/component/state/software-version"];
  if (this->has_software_version()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->software_version_);
  }

  // .ywrapper.StringValue firmware_version = 244667518 [(.yext.schemapath) = "/components/component/state/firmware-version"];
  if (this->has_firmware_version()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->firmware_version_);
  }

  // .ywrapper.StringValue id = 246882465 [(.yext.schemapath) = "/components/component/state/id"];
  if (this->has_id()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->id_);
  }

  // .ywrapper.UintValue used_power = 259754309 [(.yext.schemapath) = "/components/component/state/used-power"];
  if (this->has_used_power()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->used_power_);
  }

  // .ywrapper.BoolValue equipment_mismatch = 311608903 [(.yext.schemapath) = "/components/component/state/equipment-mismatch"];
  if (this->has_equipment_mismatch()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->equipment_mismatch_);
  }

  // .ywrapper.UintValue allocated_power = 382835825 [(.yext.schemapath) = "/components/component/state/allocated-power"];
  if (this->has_allocated_power()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->allocated_power_);
  }

  // .openconfig.openconfig_platform.Components.Component.State.Memory memory = 443182963 [(.yext.schemapath) = "/components/component/state/memory"];
  if (this->has_memory()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->memory_);
  }

  // .ywrapper.BoolValue equipment_failure = 471038183 [(.yext.schemapath) = "/components/component/state/equipment-failure"];
  if (this->has_equipment_failure()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->equipment_failure_);
  }

  // .ywrapper.StringValue serial_no = 490029750 [(.yext.schemapath) = "/components/component/state/serial-no"];
  if (this->has_serial_no()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->serial_no_);
  }

  // .openconfig.enums.OpenconfigPlatformTypesCOMPONENTOPERSTATUS oper_status = 378023501 [(.yext.schemapath) = "/components/component/state/oper-status"];
  if (this->oper_status() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->oper_status());
  }

  switch (type_case()) {
    // .openconfig.enums.OpenconfigPlatformTypesOPENCONFIGHARDWARECOMPONENT type_openconfigplatformtypesopenconfighardwarecomponent = 423705132;
    case kTypeOpenconfigplatformtypesopenconfighardwarecomponent: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type_openconfigplatformtypesopenconfighardwarecomponent());
      break;
    }
    // .openconfig.enums.OpenconfigPlatformTypesOPENCONFIGSOFTWARECOMPONENT type_openconfigplatformtypesopenconfigsoftwarecomponent = 366278741;
    case kTypeOpenconfigplatformtypesopenconfigsoftwarecomponent: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type_openconfigplatformtypesopenconfigsoftwarecomponent());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.State)
    MergeFrom(*source);
  }
}

void Components_Component_State::MergeFrom(const Components_Component_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_hardware_version()) {
    mutable_hardware_version()->::ywrapper::StringValue::MergeFrom(from.hardware_version());
  }
  if (from.has_entity_id()) {
    mutable_entity_id()->::ywrapper::UintValue::MergeFrom(from.entity_id());
  }
  if (from.has_mfg_name()) {
    mutable_mfg_name()->::ywrapper::StringValue::MergeFrom(from.mfg_name());
  }
  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
  if (from.has_description()) {
    mutable_description()->::ywrapper::StringValue::MergeFrom(from.description());
  }
  if (from.has_temperature()) {
    mutable_temperature()->::openconfig::openconfig_platform::Components_Component_State_Temperature::MergeFrom(from.temperature());
  }
  if (from.has_part_no()) {
    mutable_part_no()->::ywrapper::StringValue::MergeFrom(from.part_no());
  }
  if (from.has_software_version()) {
    mutable_software_version()->::ywrapper::StringValue::MergeFrom(from.software_version());
  }
  if (from.has_firmware_version()) {
    mutable_firmware_version()->::ywrapper::StringValue::MergeFrom(from.firmware_version());
  }
  if (from.has_id()) {
    mutable_id()->::ywrapper::StringValue::MergeFrom(from.id());
  }
  if (from.has_used_power()) {
    mutable_used_power()->::ywrapper::UintValue::MergeFrom(from.used_power());
  }
  if (from.has_equipment_mismatch()) {
    mutable_equipment_mismatch()->::ywrapper::BoolValue::MergeFrom(from.equipment_mismatch());
  }
  if (from.has_allocated_power()) {
    mutable_allocated_power()->::ywrapper::UintValue::MergeFrom(from.allocated_power());
  }
  if (from.has_memory()) {
    mutable_memory()->::openconfig::openconfig_platform::Components_Component_State_Memory::MergeFrom(from.memory());
  }
  if (from.has_equipment_failure()) {
    mutable_equipment_failure()->::ywrapper::BoolValue::MergeFrom(from.equipment_failure());
  }
  if (from.has_serial_no()) {
    mutable_serial_no()->::ywrapper::StringValue::MergeFrom(from.serial_no());
  }
  if (from.oper_status() != 0) {
    set_oper_status(from.oper_status());
  }
  switch (from.type_case()) {
    case kTypeOpenconfigplatformtypesopenconfighardwarecomponent: {
      set_type_openconfigplatformtypesopenconfighardwarecomponent(from.type_openconfigplatformtypesopenconfighardwarecomponent());
      break;
    }
    case kTypeOpenconfigplatformtypesopenconfigsoftwarecomponent: {
      set_type_openconfigplatformtypesopenconfigsoftwarecomponent(from.type_openconfigplatformtypesopenconfigsoftwarecomponent());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void Components_Component_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_State::CopyFrom(const Components_Component_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_State::IsInitialized() const {
  return true;
}

void Components_Component_State::Swap(Components_Component_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_State::InternalSwap(Components_Component_State* other) {
  using std::swap;
  swap(hardware_version_, other->hardware_version_);
  swap(entity_id_, other->entity_id_);
  swap(mfg_name_, other->mfg_name_);
  swap(name_, other->name_);
  swap(description_, other->description_);
  swap(temperature_, other->temperature_);
  swap(part_no_, other->part_no_);
  swap(software_version_, other->software_version_);
  swap(firmware_version_, other->firmware_version_);
  swap(id_, other->id_);
  swap(used_power_, other->used_power_);
  swap(equipment_mismatch_, other->equipment_mismatch_);
  swap(allocated_power_, other->allocated_power_);
  swap(memory_, other->memory_);
  swap(equipment_failure_, other->equipment_failure_);
  swap(serial_no_, other->serial_no_);
  swap(oper_status_, other->oper_status_);
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Storage_Config::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Storage_Config::Components_Component_Storage_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Storage_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Storage.Config)
}
Components_Component_Storage_Config::Components_Component_Storage_Config(const Components_Component_Storage_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Storage.Config)
}

void Components_Component_Storage_Config::SharedCtor() {
  _cached_size_ = 0;
}

Components_Component_Storage_Config::~Components_Component_Storage_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Storage.Config)
  SharedDtor();
}

void Components_Component_Storage_Config::SharedDtor() {
}

void Components_Component_Storage_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Storage_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Storage_Config& Components_Component_Storage_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Storage_Config();
  return *internal_default_instance();
}

Components_Component_Storage_Config* Components_Component_Storage_Config::New(::google::protobuf::Arena* arena) const {
  Components_Component_Storage_Config* n = new Components_Component_Storage_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Storage_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Storage.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Components_Component_Storage_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Storage.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Storage.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Storage.Config)
  return false;
#undef DO_
}

void Components_Component_Storage_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Storage.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Storage.Config)
}

::google::protobuf::uint8* Components_Component_Storage_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Storage.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Storage.Config)
  return target;
}

size_t Components_Component_Storage_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Storage.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Storage_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Storage.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Storage_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Storage_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Storage.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Storage.Config)
    MergeFrom(*source);
  }
}

void Components_Component_Storage_Config::MergeFrom(const Components_Component_Storage_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Storage.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Components_Component_Storage_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Storage.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Storage_Config::CopyFrom(const Components_Component_Storage_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Storage.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Storage_Config::IsInitialized() const {
  return true;
}

void Components_Component_Storage_Config::Swap(Components_Component_Storage_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Storage_Config::InternalSwap(Components_Component_Storage_Config* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Storage_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Storage_State::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Storage_State::Components_Component_Storage_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Storage_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Storage.State)
}
Components_Component_Storage_State::Components_Component_Storage_State(const Components_Component_Storage_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Storage.State)
}

void Components_Component_Storage_State::SharedCtor() {
  _cached_size_ = 0;
}

Components_Component_Storage_State::~Components_Component_Storage_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Storage.State)
  SharedDtor();
}

void Components_Component_Storage_State::SharedDtor() {
}

void Components_Component_Storage_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Storage_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Storage_State& Components_Component_Storage_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Storage_State();
  return *internal_default_instance();
}

Components_Component_Storage_State* Components_Component_Storage_State::New(::google::protobuf::Arena* arena) const {
  Components_Component_Storage_State* n = new Components_Component_Storage_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Storage_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Storage.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Components_Component_Storage_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Storage.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Storage.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Storage.State)
  return false;
#undef DO_
}

void Components_Component_Storage_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Storage.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Storage.State)
}

::google::protobuf::uint8* Components_Component_Storage_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Storage.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Storage.State)
  return target;
}

size_t Components_Component_Storage_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Storage.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Storage_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Storage.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Storage_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Storage_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Storage.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Storage.State)
    MergeFrom(*source);
  }
}

void Components_Component_Storage_State::MergeFrom(const Components_Component_Storage_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Storage.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Components_Component_Storage_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Storage.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Storage_State::CopyFrom(const Components_Component_Storage_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Storage.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Storage_State::IsInitialized() const {
  return true;
}

void Components_Component_Storage_State::Swap(Components_Component_Storage_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Storage_State::InternalSwap(Components_Component_Storage_State* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Storage_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Storage::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Storage_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Storage_Config*>(
      ::openconfig::openconfig_platform::Components_Component_Storage_Config::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Storage_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Storage_State*>(
      ::openconfig::openconfig_platform::Components_Component_Storage_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Storage::kConfigFieldNumber;
const int Components_Component_Storage::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Storage::Components_Component_Storage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Storage();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Storage)
}
Components_Component_Storage::Components_Component_Storage(const Components_Component_Storage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Storage_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Storage_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Storage)
}

void Components_Component_Storage::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&state_)) + sizeof(config_));
  _cached_size_ = 0;
}

Components_Component_Storage::~Components_Component_Storage() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Storage)
  SharedDtor();
}

void Components_Component_Storage::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
}

void Components_Component_Storage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Storage::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Storage& Components_Component_Storage::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Storage();
  return *internal_default_instance();
}

Components_Component_Storage* Components_Component_Storage::New(::google::protobuf::Arena* arena) const {
  Components_Component_Storage* n = new Components_Component_Storage;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Storage::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Storage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Storage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Storage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4177216610u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_platform.Components.Component.Storage.State state = 68412165 [(.yext.schemapath) = "/components/component/storage/state"];
      case 68412165: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 547297322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Storage.Config config = 522152076 [(.yext.schemapath) = "/components/component/storage/config"];
      case 522152076: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 4177216610 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Storage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Storage)
  return false;
#undef DO_
}

void Components_Component_Storage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Storage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Storage.State state = 68412165 [(.yext.schemapath) = "/components/component/storage/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      68412165, *this->state_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Storage.Config config = 522152076 [(.yext.schemapath) = "/components/component/storage/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      522152076, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Storage)
}

::google::protobuf::uint8* Components_Component_Storage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Storage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Storage.State state = 68412165 [(.yext.schemapath) = "/components/component/storage/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        68412165, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Storage.Config config = 522152076 [(.yext.schemapath) = "/components/component/storage/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        522152076, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Storage)
  return target;
}

size_t Components_Component_Storage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Storage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_platform.Components.Component.Storage.State state = 68412165 [(.yext.schemapath) = "/components/component/storage/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_platform.Components.Component.Storage.Config config = 522152076 [(.yext.schemapath) = "/components/component/storage/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Storage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Storage)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Storage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Storage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Storage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Storage)
    MergeFrom(*source);
  }
}

void Components_Component_Storage::MergeFrom(const Components_Component_Storage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Storage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_platform::Components_Component_Storage_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_platform::Components_Component_Storage_Config::MergeFrom(from.config());
  }
}

void Components_Component_Storage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Storage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Storage::CopyFrom(const Components_Component_Storage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Storage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Storage::IsInitialized() const {
  return true;
}

void Components_Component_Storage::Swap(Components_Component_Storage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Storage::InternalSwap(Components_Component_Storage* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Storage::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Subcomponents_Subcomponent_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Subcomponents_Subcomponent_Config_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void Components_Component_Subcomponents_Subcomponent_Config::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Subcomponents_Subcomponent_Config::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Subcomponents_Subcomponent_Config::Components_Component_Subcomponents_Subcomponent_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Subcomponents_Subcomponent_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config)
}
Components_Component_Subcomponents_Subcomponent_Config::Components_Component_Subcomponents_Subcomponent_Config(const Components_Component_Subcomponents_Subcomponent_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config)
}

void Components_Component_Subcomponents_Subcomponent_Config::SharedCtor() {
  name_ = NULL;
  _cached_size_ = 0;
}

Components_Component_Subcomponents_Subcomponent_Config::~Components_Component_Subcomponents_Subcomponent_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config)
  SharedDtor();
}

void Components_Component_Subcomponents_Subcomponent_Config::SharedDtor() {
  if (this != internal_default_instance()) delete name_;
}

void Components_Component_Subcomponents_Subcomponent_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Subcomponents_Subcomponent_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Subcomponents_Subcomponent_Config& Components_Component_Subcomponents_Subcomponent_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Subcomponents_Subcomponent_Config();
  return *internal_default_instance();
}

Components_Component_Subcomponents_Subcomponent_Config* Components_Component_Subcomponents_Subcomponent_Config::New(::google::protobuf::Arena* arena) const {
  Components_Component_Subcomponents_Subcomponent_Config* n = new Components_Component_Subcomponents_Subcomponent_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Subcomponents_Subcomponent_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Subcomponents_Subcomponent_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1100734778u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue name = 137591847 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/config/name"];
      case 137591847: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 1100734778 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config)
  return false;
#undef DO_
}

void Components_Component_Subcomponents_Subcomponent_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue name = 137591847 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/config/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      137591847, *this->name_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config)
}

::google::protobuf::uint8* Components_Component_Subcomponents_Subcomponent_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue name = 137591847 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/config/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        137591847, *this->name_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config)
  return target;
}

size_t Components_Component_Subcomponents_Subcomponent_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue name = 137591847 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/config/name"];
  if (this->has_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Subcomponents_Subcomponent_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Subcomponents_Subcomponent_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Subcomponents_Subcomponent_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config)
    MergeFrom(*source);
  }
}

void Components_Component_Subcomponents_Subcomponent_Config::MergeFrom(const Components_Component_Subcomponents_Subcomponent_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
}

void Components_Component_Subcomponents_Subcomponent_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Subcomponents_Subcomponent_Config::CopyFrom(const Components_Component_Subcomponents_Subcomponent_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Subcomponents_Subcomponent_Config::IsInitialized() const {
  return true;
}

void Components_Component_Subcomponents_Subcomponent_Config::Swap(Components_Component_Subcomponents_Subcomponent_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Subcomponents_Subcomponent_Config::InternalSwap(Components_Component_Subcomponents_Subcomponent_Config* other) {
  using std::swap;
  swap(name_, other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Subcomponents_Subcomponent_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Subcomponents_Subcomponent_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Subcomponents_Subcomponent_State_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void Components_Component_Subcomponents_Subcomponent_State::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Subcomponents_Subcomponent_State::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Subcomponents_Subcomponent_State::Components_Component_Subcomponents_Subcomponent_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Subcomponents_Subcomponent_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State)
}
Components_Component_Subcomponents_Subcomponent_State::Components_Component_Subcomponents_Subcomponent_State(const Components_Component_Subcomponents_Subcomponent_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State)
}

void Components_Component_Subcomponents_Subcomponent_State::SharedCtor() {
  name_ = NULL;
  _cached_size_ = 0;
}

Components_Component_Subcomponents_Subcomponent_State::~Components_Component_Subcomponents_Subcomponent_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State)
  SharedDtor();
}

void Components_Component_Subcomponents_Subcomponent_State::SharedDtor() {
  if (this != internal_default_instance()) delete name_;
}

void Components_Component_Subcomponents_Subcomponent_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Subcomponents_Subcomponent_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Subcomponents_Subcomponent_State& Components_Component_Subcomponents_Subcomponent_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Subcomponents_Subcomponent_State();
  return *internal_default_instance();
}

Components_Component_Subcomponents_Subcomponent_State* Components_Component_Subcomponents_Subcomponent_State::New(::google::protobuf::Arena* arena) const {
  Components_Component_Subcomponents_Subcomponent_State* n = new Components_Component_Subcomponents_Subcomponent_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Subcomponents_Subcomponent_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Subcomponents_Subcomponent_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(985959890u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue name = 123244986 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/state/name"];
      case 123244986: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 985959890 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State)
  return false;
#undef DO_
}

void Components_Component_Subcomponents_Subcomponent_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue name = 123244986 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/state/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      123244986, *this->name_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State)
}

::google::protobuf::uint8* Components_Component_Subcomponents_Subcomponent_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue name = 123244986 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/state/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        123244986, *this->name_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State)
  return target;
}

size_t Components_Component_Subcomponents_Subcomponent_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue name = 123244986 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/state/name"];
  if (this->has_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Subcomponents_Subcomponent_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Subcomponents_Subcomponent_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Subcomponents_Subcomponent_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State)
    MergeFrom(*source);
  }
}

void Components_Component_Subcomponents_Subcomponent_State::MergeFrom(const Components_Component_Subcomponents_Subcomponent_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
}

void Components_Component_Subcomponents_Subcomponent_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Subcomponents_Subcomponent_State::CopyFrom(const Components_Component_Subcomponents_Subcomponent_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Subcomponents_Subcomponent_State::IsInitialized() const {
  return true;
}

void Components_Component_Subcomponents_Subcomponent_State::Swap(Components_Component_Subcomponents_Subcomponent_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Subcomponents_Subcomponent_State::InternalSwap(Components_Component_Subcomponents_Subcomponent_State* other) {
  using std::swap;
  swap(name_, other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Subcomponents_Subcomponent_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Subcomponents_Subcomponent::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Subcomponents_Subcomponent_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_Config*>(
      ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_Config::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Subcomponents_Subcomponent_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_State*>(
      ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Subcomponents_Subcomponent::kConfigFieldNumber;
const int Components_Component_Subcomponents_Subcomponent::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Subcomponents_Subcomponent::Components_Component_Subcomponents_Subcomponent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Subcomponents_Subcomponent();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent)
}
Components_Component_Subcomponents_Subcomponent::Components_Component_Subcomponents_Subcomponent(const Components_Component_Subcomponents_Subcomponent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent)
}

void Components_Component_Subcomponents_Subcomponent::SharedCtor() {
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&config_)) + sizeof(state_));
  _cached_size_ = 0;
}

Components_Component_Subcomponents_Subcomponent::~Components_Component_Subcomponents_Subcomponent() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent)
  SharedDtor();
}

void Components_Component_Subcomponents_Subcomponent::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete state_;
}

void Components_Component_Subcomponents_Subcomponent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Subcomponents_Subcomponent::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Subcomponents_Subcomponent& Components_Component_Subcomponents_Subcomponent::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Subcomponents_Subcomponent();
  return *internal_default_instance();
}

Components_Component_Subcomponents_Subcomponent* Components_Component_Subcomponents_Subcomponent::New(::google::protobuf::Arena* arena) const {
  Components_Component_Subcomponents_Subcomponent* n = new Components_Component_Subcomponents_Subcomponent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Subcomponents_Subcomponent::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Subcomponents_Subcomponent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2350229634u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config config = 126822239 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/config"];
      case 126822239: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 1014577914 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State state = 293778704 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/state"];
      case 293778704: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 2350229634 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent)
  return false;
#undef DO_
}

void Components_Component_Subcomponents_Subcomponent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config config = 126822239 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      126822239, *this->config_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State state = 293778704 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      293778704, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent)
}

::google::protobuf::uint8* Components_Component_Subcomponents_Subcomponent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config config = 126822239 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        126822239, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State state = 293778704 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        293778704, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent)
  return target;
}

size_t Components_Component_Subcomponents_Subcomponent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.Config config = 126822239 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent.State state = 293778704 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Subcomponents_Subcomponent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Subcomponents_Subcomponent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Subcomponents_Subcomponent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent)
    MergeFrom(*source);
  }
}

void Components_Component_Subcomponents_Subcomponent::MergeFrom(const Components_Component_Subcomponents_Subcomponent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_Config::MergeFrom(from.config());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent_State::MergeFrom(from.state());
  }
}

void Components_Component_Subcomponents_Subcomponent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Subcomponents_Subcomponent::CopyFrom(const Components_Component_Subcomponents_Subcomponent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Subcomponents_Subcomponent::IsInitialized() const {
  return true;
}

void Components_Component_Subcomponents_Subcomponent::Swap(Components_Component_Subcomponents_Subcomponent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Subcomponents_Subcomponent::InternalSwap(Components_Component_Subcomponents_Subcomponent* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Subcomponents_Subcomponent::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Subcomponents_SubcomponentKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Subcomponents_SubcomponentKey_default_instance_._instance.get_mutable()->subcomponent_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent*>(
      ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Subcomponents_SubcomponentKey::kNameFieldNumber;
const int Components_Component_Subcomponents_SubcomponentKey::kSubcomponentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Subcomponents_SubcomponentKey::Components_Component_Subcomponents_SubcomponentKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Subcomponents_SubcomponentKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey)
}
Components_Component_Subcomponents_SubcomponentKey::Components_Component_Subcomponents_SubcomponentKey(const Components_Component_Subcomponents_SubcomponentKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_subcomponent()) {
    subcomponent_ = new ::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent(*from.subcomponent_);
  } else {
    subcomponent_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey)
}

void Components_Component_Subcomponents_SubcomponentKey::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subcomponent_ = NULL;
  _cached_size_ = 0;
}

Components_Component_Subcomponents_SubcomponentKey::~Components_Component_Subcomponents_SubcomponentKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey)
  SharedDtor();
}

void Components_Component_Subcomponents_SubcomponentKey::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete subcomponent_;
}

void Components_Component_Subcomponents_SubcomponentKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Subcomponents_SubcomponentKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Subcomponents_SubcomponentKey& Components_Component_Subcomponents_SubcomponentKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Subcomponents_SubcomponentKey();
  return *internal_default_instance();
}

Components_Component_Subcomponents_SubcomponentKey* Components_Component_Subcomponents_SubcomponentKey::New(::google::protobuf::Arena* arena) const {
  Components_Component_Subcomponents_SubcomponentKey* n = new Components_Component_Subcomponents_SubcomponentKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Subcomponents_SubcomponentKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && subcomponent_ != NULL) {
    delete subcomponent_;
  }
  subcomponent_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Subcomponents_SubcomponentKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/name"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent subcomponent = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_subcomponent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey)
  return false;
#undef DO_
}

void Components_Component_Subcomponents_SubcomponentKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/name"];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent subcomponent = 2;
  if (this->has_subcomponent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->subcomponent_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey)
}

::google::protobuf::uint8* Components_Component_Subcomponents_SubcomponentKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/name"];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent subcomponent = 2;
  if (this->has_subcomponent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->subcomponent_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey)
  return target;
}

size_t Components_Component_Subcomponents_SubcomponentKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent/name"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .openconfig.openconfig_platform.Components.Component.Subcomponents.Subcomponent subcomponent = 2;
  if (this->has_subcomponent()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->subcomponent_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Subcomponents_SubcomponentKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Subcomponents_SubcomponentKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Subcomponents_SubcomponentKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey)
    MergeFrom(*source);
  }
}

void Components_Component_Subcomponents_SubcomponentKey::MergeFrom(const Components_Component_Subcomponents_SubcomponentKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_subcomponent()) {
    mutable_subcomponent()->::openconfig::openconfig_platform::Components_Component_Subcomponents_Subcomponent::MergeFrom(from.subcomponent());
  }
}

void Components_Component_Subcomponents_SubcomponentKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Subcomponents_SubcomponentKey::CopyFrom(const Components_Component_Subcomponents_SubcomponentKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Subcomponents_SubcomponentKey::IsInitialized() const {
  return true;
}

void Components_Component_Subcomponents_SubcomponentKey::Swap(Components_Component_Subcomponents_SubcomponentKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Subcomponents_SubcomponentKey::InternalSwap(Components_Component_Subcomponents_SubcomponentKey* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(subcomponent_, other->subcomponent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Subcomponents_SubcomponentKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Subcomponents::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Subcomponents::kSubcomponentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Subcomponents::Components_Component_Subcomponents()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Subcomponents();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Subcomponents)
}
Components_Component_Subcomponents::Components_Component_Subcomponents(const Components_Component_Subcomponents& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      subcomponent_(from.subcomponent_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Subcomponents)
}

void Components_Component_Subcomponents::SharedCtor() {
  _cached_size_ = 0;
}

Components_Component_Subcomponents::~Components_Component_Subcomponents() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Subcomponents)
  SharedDtor();
}

void Components_Component_Subcomponents::SharedDtor() {
}

void Components_Component_Subcomponents::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Subcomponents::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Subcomponents& Components_Component_Subcomponents::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Subcomponents();
  return *internal_default_instance();
}

Components_Component_Subcomponents* Components_Component_Subcomponents::New(::google::protobuf::Arena* arena) const {
  Components_Component_Subcomponents* n = new Components_Component_Subcomponents;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Subcomponents::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Subcomponents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  subcomponent_.Clear();
  _internal_metadata_.Clear();
}

bool Components_Component_Subcomponents::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Subcomponents)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2262571378u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey subcomponent = 282821422 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent"];
      case 282821422: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 2262571378 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_subcomponent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Subcomponents)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Subcomponents)
  return false;
#undef DO_
}

void Components_Component_Subcomponents::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Subcomponents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey subcomponent = 282821422 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subcomponent_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      282821422, this->subcomponent(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Subcomponents)
}

::google::protobuf::uint8* Components_Component_Subcomponents::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Subcomponents)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey subcomponent = 282821422 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->subcomponent_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        282821422, this->subcomponent(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Subcomponents)
  return target;
}

size_t Components_Component_Subcomponents::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Subcomponents)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_platform.Components.Component.Subcomponents.SubcomponentKey subcomponent = 282821422 [(.yext.schemapath) = "/components/component/subcomponents/subcomponent"];
  {
    unsigned int count = static_cast<unsigned int>(this->subcomponent_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->subcomponent(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Subcomponents::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Subcomponents)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Subcomponents* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Subcomponents>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Subcomponents)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Subcomponents)
    MergeFrom(*source);
  }
}

void Components_Component_Subcomponents::MergeFrom(const Components_Component_Subcomponents& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Subcomponents)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  subcomponent_.MergeFrom(from.subcomponent_);
}

void Components_Component_Subcomponents::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Subcomponents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Subcomponents::CopyFrom(const Components_Component_Subcomponents& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Subcomponents)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Subcomponents::IsInitialized() const {
  return true;
}

void Components_Component_Subcomponents::Swap(Components_Component_Subcomponents* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Subcomponents::InternalSwap(Components_Component_Subcomponents* other) {
  using std::swap;
  subcomponent_.InternalSwap(&other->subcomponent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Subcomponents::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Transceiver_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_Config_default_instance_._instance.get_mutable()->enabled_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
}
void Components_Component_Transceiver_Config::clear_enabled() {
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) {
    delete enabled_;
  }
  enabled_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Transceiver_Config::kEnabledFieldNumber;
const int Components_Component_Transceiver_Config::kEthernetPmdPreconfFieldNumber;
const int Components_Component_Transceiver_Config::kFormFactorPreconfFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Transceiver_Config::Components_Component_Transceiver_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Transceiver.Config)
}
Components_Component_Transceiver_Config::Components_Component_Transceiver_Config(const Components_Component_Transceiver_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_enabled()) {
    enabled_ = new ::ywrapper::BoolValue(*from.enabled_);
  } else {
    enabled_ = NULL;
  }
  ::memcpy(&ethernet_pmd_preconf_, &from.ethernet_pmd_preconf_,
    static_cast<size_t>(reinterpret_cast<char*>(&form_factor_preconf_) -
    reinterpret_cast<char*>(&ethernet_pmd_preconf_)) + sizeof(form_factor_preconf_));
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Transceiver.Config)
}

void Components_Component_Transceiver_Config::SharedCtor() {
  ::memset(&enabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&form_factor_preconf_) -
      reinterpret_cast<char*>(&enabled_)) + sizeof(form_factor_preconf_));
  _cached_size_ = 0;
}

Components_Component_Transceiver_Config::~Components_Component_Transceiver_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Transceiver.Config)
  SharedDtor();
}

void Components_Component_Transceiver_Config::SharedDtor() {
  if (this != internal_default_instance()) delete enabled_;
}

void Components_Component_Transceiver_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Transceiver_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Transceiver_Config& Components_Component_Transceiver_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_Config();
  return *internal_default_instance();
}

Components_Component_Transceiver_Config* Components_Component_Transceiver_Config::New(::google::protobuf::Arena* arena) const {
  Components_Component_Transceiver_Config* n = new Components_Component_Transceiver_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Transceiver_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Transceiver.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) {
    delete enabled_;
  }
  enabled_ = NULL;
  ::memset(&ethernet_pmd_preconf_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&form_factor_preconf_) -
      reinterpret_cast<char*>(&ethernet_pmd_preconf_)) + sizeof(form_factor_preconf_));
  _internal_metadata_.Clear();
}

bool Components_Component_Transceiver_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Transceiver.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3772837360u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.BoolValue enabled = 202927581 [(.yext.schemapath) = "/components/component/transceiver/config/enabled"];
      case 202927581: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 1623420650 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_enabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigTransportTypesETHERNETPMDTYPE ethernet_pmd_preconf = 338246677 [(.yext.schemapath) = "/components/component/transceiver/config/ethernet-pmd-preconf"];
      case 338246677: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 2705973416 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ethernet_pmd_preconf(static_cast< ::openconfig::enums::OpenconfigTransportTypesETHERNETPMDTYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE form_factor_preconf = 471604670 [(.yext.schemapath) = "/components/component/transceiver/config/form-factor-preconf"];
      case 471604670: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 3772837360 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_form_factor_preconf(static_cast< ::openconfig::enums::OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Transceiver.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Transceiver.Config)
  return false;
#undef DO_
}

void Components_Component_Transceiver_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Transceiver.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.BoolValue enabled = 202927581 [(.yext.schemapath) = "/components/component/transceiver/config/enabled"];
  if (this->has_enabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      202927581, *this->enabled_, output);
  }

  // .openconfig.enums.OpenconfigTransportTypesETHERNETPMDTYPE ethernet_pmd_preconf = 338246677 [(.yext.schemapath) = "/components/component/transceiver/config/ethernet-pmd-preconf"];
  if (this->ethernet_pmd_preconf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      338246677, this->ethernet_pmd_preconf(), output);
  }

  // .openconfig.enums.OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE form_factor_preconf = 471604670 [(.yext.schemapath) = "/components/component/transceiver/config/form-factor-preconf"];
  if (this->form_factor_preconf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      471604670, this->form_factor_preconf(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Transceiver.Config)
}

::google::protobuf::uint8* Components_Component_Transceiver_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Transceiver.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.BoolValue enabled = 202927581 [(.yext.schemapath) = "/components/component/transceiver/config/enabled"];
  if (this->has_enabled()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        202927581, *this->enabled_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigTransportTypesETHERNETPMDTYPE ethernet_pmd_preconf = 338246677 [(.yext.schemapath) = "/components/component/transceiver/config/ethernet-pmd-preconf"];
  if (this->ethernet_pmd_preconf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      338246677, this->ethernet_pmd_preconf(), target);
  }

  // .openconfig.enums.OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE form_factor_preconf = 471604670 [(.yext.schemapath) = "/components/component/transceiver/config/form-factor-preconf"];
  if (this->form_factor_preconf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      471604670, this->form_factor_preconf(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Transceiver.Config)
  return target;
}

size_t Components_Component_Transceiver_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Transceiver.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.BoolValue enabled = 202927581 [(.yext.schemapath) = "/components/component/transceiver/config/enabled"];
  if (this->has_enabled()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->enabled_);
  }

  // .openconfig.enums.OpenconfigTransportTypesETHERNETPMDTYPE ethernet_pmd_preconf = 338246677 [(.yext.schemapath) = "/components/component/transceiver/config/ethernet-pmd-preconf"];
  if (this->ethernet_pmd_preconf() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ethernet_pmd_preconf());
  }

  // .openconfig.enums.OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE form_factor_preconf = 471604670 [(.yext.schemapath) = "/components/component/transceiver/config/form-factor-preconf"];
  if (this->form_factor_preconf() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->form_factor_preconf());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Transceiver_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Transceiver_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Transceiver_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Transceiver.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Transceiver.Config)
    MergeFrom(*source);
  }
}

void Components_Component_Transceiver_Config::MergeFrom(const Components_Component_Transceiver_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_enabled()) {
    mutable_enabled()->::ywrapper::BoolValue::MergeFrom(from.enabled());
  }
  if (from.ethernet_pmd_preconf() != 0) {
    set_ethernet_pmd_preconf(from.ethernet_pmd_preconf());
  }
  if (from.form_factor_preconf() != 0) {
    set_form_factor_preconf(from.form_factor_preconf());
  }
}

void Components_Component_Transceiver_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Transceiver_Config::CopyFrom(const Components_Component_Transceiver_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Transceiver_Config::IsInitialized() const {
  return true;
}

void Components_Component_Transceiver_Config::Swap(Components_Component_Transceiver_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Transceiver_Config::InternalSwap(Components_Component_Transceiver_Config* other) {
  using std::swap;
  swap(enabled_, other->enabled_);
  swap(ethernet_pmd_preconf_, other->ethernet_pmd_preconf_);
  swap(form_factor_preconf_, other->form_factor_preconf_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Transceiver_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Transceiver_PhysicalChannels_Channel_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_Config_default_instance_._instance.get_mutable()->description_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_Config_default_instance_._instance.get_mutable()->index_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_Config_default_instance_._instance.get_mutable()->target_output_power_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_Config_default_instance_._instance.get_mutable()->tx_laser_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
}
void Components_Component_Transceiver_PhysicalChannels_Channel_Config::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
void Components_Component_Transceiver_PhysicalChannels_Channel_Config::clear_index() {
  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
}
void Components_Component_Transceiver_PhysicalChannels_Channel_Config::clear_target_output_power() {
  if (GetArenaNoVirtual() == NULL && target_output_power_ != NULL) {
    delete target_output_power_;
  }
  target_output_power_ = NULL;
}
void Components_Component_Transceiver_PhysicalChannels_Channel_Config::clear_tx_laser() {
  if (GetArenaNoVirtual() == NULL && tx_laser_ != NULL) {
    delete tx_laser_;
  }
  tx_laser_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Transceiver_PhysicalChannels_Channel_Config::kDescriptionFieldNumber;
const int Components_Component_Transceiver_PhysicalChannels_Channel_Config::kIndexFieldNumber;
const int Components_Component_Transceiver_PhysicalChannels_Channel_Config::kTargetOutputPowerFieldNumber;
const int Components_Component_Transceiver_PhysicalChannels_Channel_Config::kTxLaserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Transceiver_PhysicalChannels_Channel_Config::Components_Component_Transceiver_PhysicalChannels_Channel_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config)
}
Components_Component_Transceiver_PhysicalChannels_Channel_Config::Components_Component_Transceiver_PhysicalChannels_Channel_Config(const Components_Component_Transceiver_PhysicalChannels_Channel_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_target_output_power()) {
    target_output_power_ = new ::ywrapper::Decimal64Value(*from.target_output_power_);
  } else {
    target_output_power_ = NULL;
  }
  if (from.has_tx_laser()) {
    tx_laser_ = new ::ywrapper::BoolValue(*from.tx_laser_);
  } else {
    tx_laser_ = NULL;
  }
  if (from.has_description()) {
    description_ = new ::ywrapper::StringValue(*from.description_);
  } else {
    description_ = NULL;
  }
  if (from.has_index()) {
    index_ = new ::ywrapper::UintValue(*from.index_);
  } else {
    index_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config)
}

void Components_Component_Transceiver_PhysicalChannels_Channel_Config::SharedCtor() {
  ::memset(&target_output_power_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&target_output_power_)) + sizeof(index_));
  _cached_size_ = 0;
}

Components_Component_Transceiver_PhysicalChannels_Channel_Config::~Components_Component_Transceiver_PhysicalChannels_Channel_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config)
  SharedDtor();
}

void Components_Component_Transceiver_PhysicalChannels_Channel_Config::SharedDtor() {
  if (this != internal_default_instance()) delete target_output_power_;
  if (this != internal_default_instance()) delete tx_laser_;
  if (this != internal_default_instance()) delete description_;
  if (this != internal_default_instance()) delete index_;
}

void Components_Component_Transceiver_PhysicalChannels_Channel_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Transceiver_PhysicalChannels_Channel_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Transceiver_PhysicalChannels_Channel_Config& Components_Component_Transceiver_PhysicalChannels_Channel_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_Config();
  return *internal_default_instance();
}

Components_Component_Transceiver_PhysicalChannels_Channel_Config* Components_Component_Transceiver_PhysicalChannels_Channel_Config::New(::google::protobuf::Arena* arena) const {
  Components_Component_Transceiver_PhysicalChannels_Channel_Config* n = new Components_Component_Transceiver_PhysicalChannels_Channel_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Transceiver_PhysicalChannels_Channel_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && target_output_power_ != NULL) {
    delete target_output_power_;
  }
  target_output_power_ = NULL;
  if (GetArenaNoVirtual() == NULL && tx_laser_ != NULL) {
    delete tx_laser_;
  }
  tx_laser_ = NULL;
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Transceiver_PhysicalChannels_Channel_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2669271946u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value target_output_power = 128341554 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config/target-output-power"];
      case 128341554: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 1026732434 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target_output_power()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue tx_laser = 133868429 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config/tx-laser"];
      case 133868429: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 1070947434 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tx_laser()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue description = 314562795 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config/description"];
      case 314562795: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 2516502362 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue index = 333658993 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config/index"];
      case 333658993: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 2669271946 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config)
  return false;
#undef DO_
}

void Components_Component_Transceiver_PhysicalChannels_Channel_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value target_output_power = 128341554 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config/target-output-power"];
  if (this->has_target_output_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      128341554, *this->target_output_power_, output);
  }

  // .ywrapper.BoolValue tx_laser = 133868429 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config/tx-laser"];
  if (this->has_tx_laser()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      133868429, *this->tx_laser_, output);
  }

  // .ywrapper.StringValue description = 314562795 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config/description"];
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      314562795, *this->description_, output);
  }

  // .ywrapper.UintValue index = 333658993 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config/index"];
  if (this->has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      333658993, *this->index_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config)
}

::google::protobuf::uint8* Components_Component_Transceiver_PhysicalChannels_Channel_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value target_output_power = 128341554 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config/target-output-power"];
  if (this->has_target_output_power()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        128341554, *this->target_output_power_, deterministic, target);
  }

  // .ywrapper.BoolValue tx_laser = 133868429 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config/tx-laser"];
  if (this->has_tx_laser()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        133868429, *this->tx_laser_, deterministic, target);
  }

  // .ywrapper.StringValue description = 314562795 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config/description"];
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        314562795, *this->description_, deterministic, target);
  }

  // .ywrapper.UintValue index = 333658993 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config/index"];
  if (this->has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        333658993, *this->index_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config)
  return target;
}

size_t Components_Component_Transceiver_PhysicalChannels_Channel_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value target_output_power = 128341554 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config/target-output-power"];
  if (this->has_target_output_power()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->target_output_power_);
  }

  // .ywrapper.BoolValue tx_laser = 133868429 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config/tx-laser"];
  if (this->has_tx_laser()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->tx_laser_);
  }

  // .ywrapper.StringValue description = 314562795 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config/description"];
  if (this->has_description()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->description_);
  }

  // .ywrapper.UintValue index = 333658993 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config/index"];
  if (this->has_index()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->index_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Transceiver_PhysicalChannels_Channel_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Transceiver_PhysicalChannels_Channel_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Transceiver_PhysicalChannels_Channel_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config)
    MergeFrom(*source);
  }
}

void Components_Component_Transceiver_PhysicalChannels_Channel_Config::MergeFrom(const Components_Component_Transceiver_PhysicalChannels_Channel_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_target_output_power()) {
    mutable_target_output_power()->::ywrapper::Decimal64Value::MergeFrom(from.target_output_power());
  }
  if (from.has_tx_laser()) {
    mutable_tx_laser()->::ywrapper::BoolValue::MergeFrom(from.tx_laser());
  }
  if (from.has_description()) {
    mutable_description()->::ywrapper::StringValue::MergeFrom(from.description());
  }
  if (from.has_index()) {
    mutable_index()->::ywrapper::UintValue::MergeFrom(from.index());
  }
}

void Components_Component_Transceiver_PhysicalChannels_Channel_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Transceiver_PhysicalChannels_Channel_Config::CopyFrom(const Components_Component_Transceiver_PhysicalChannels_Channel_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Transceiver_PhysicalChannels_Channel_Config::IsInitialized() const {
  return true;
}

void Components_Component_Transceiver_PhysicalChannels_Channel_Config::Swap(Components_Component_Transceiver_PhysicalChannels_Channel_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Transceiver_PhysicalChannels_Channel_Config::InternalSwap(Components_Component_Transceiver_PhysicalChannels_Channel_Config* other) {
  using std::swap;
  swap(target_output_power_, other->target_output_power_);
  swap(tx_laser_, other->tx_laser_);
  swap(description_, other->description_);
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Transceiver_PhysicalChannels_Channel_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::kAvgFieldNumber;
const int Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::kInstantFieldNumber;
const int Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::kIntervalFieldNumber;
const int Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::kMaxFieldNumber;
const int Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_InputPower();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower)
}
Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower(const Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower)
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::SharedCtor() {
  ::memset(&interval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&min_) -
      reinterpret_cast<char*>(&interval_)) + sizeof(min_));
  _cached_size_ = 0;
}

Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::~Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower)
  SharedDtor();
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::SharedDtor() {
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete max_;
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete min_;
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower& Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_InputPower();
  return *internal_default_instance();
}

Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower* Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::New(::google::protobuf::Arena* arena) const {
  Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower* n = new Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3812956650u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue interval = 54371640 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/interval"];
      case 54371640: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 434973122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value instant = 59663094 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/instant"];
      case 59663094: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 477304754 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value max = 73969555 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/max"];
      case 73969555: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 591756442 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 425608185 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/avg"];
      case 425608185: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 3404865482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value min = 476619581 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/min"];
      case 476619581: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 3812956650 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower)
  return false;
#undef DO_
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue interval = 54371640 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      54371640, *this->interval_, output);
  }

  // .ywrapper.Decimal64Value instant = 59663094 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      59663094, *this->instant_, output);
  }

  // .ywrapper.Decimal64Value max = 73969555 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      73969555, *this->max_, output);
  }

  // .ywrapper.Decimal64Value avg = 425608185 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      425608185, *this->avg_, output);
  }

  // .ywrapper.Decimal64Value min = 476619581 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      476619581, *this->min_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower)
}

::google::protobuf::uint8* Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue interval = 54371640 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        54371640, *this->interval_, deterministic, target);
  }

  // .ywrapper.Decimal64Value instant = 59663094 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        59663094, *this->instant_, deterministic, target);
  }

  // .ywrapper.Decimal64Value max = 73969555 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        73969555, *this->max_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 425608185 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        425608185, *this->avg_, deterministic, target);
  }

  // .ywrapper.Decimal64Value min = 476619581 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        476619581, *this->min_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower)
  return target;
}

size_t Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue interval = 54371640 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.Decimal64Value instant = 59663094 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.Decimal64Value max = 73969555 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  // .ywrapper.Decimal64Value avg = 425608185 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.Decimal64Value min = 476619581 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower)
    MergeFrom(*source);
  }
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::MergeFrom(const Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::CopyFrom(const Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::IsInitialized() const {
  return true;
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::Swap(Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::InternalSwap(Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower* other) {
  using std::swap;
  swap(interval_, other->interval_);
  swap(instant_, other->instant_);
  swap(max_, other->max_);
  swap(avg_, other->avg_);
  swap(min_, other->min_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::kAvgFieldNumber;
const int Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::kInstantFieldNumber;
const int Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::kIntervalFieldNumber;
const int Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::kMaxFieldNumber;
const int Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent)
}
Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent(const Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent)
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::SharedCtor() {
  ::memset(&min_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_) -
      reinterpret_cast<char*>(&min_)) + sizeof(max_));
  _cached_size_ = 0;
}

Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::~Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent)
  SharedDtor();
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::SharedDtor() {
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete max_;
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent& Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent();
  return *internal_default_instance();
}

Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent* Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::New(::google::protobuf::Arena* arena) const {
  Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent* n = new Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3574145778u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value min = 44118224 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/min"];
      case 44118224: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 352945794 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 230643524 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/avg"];
      case 230643524: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 1845148194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value instant = 325376671 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/instant"];
      case 325376671: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 2603013370 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue interval = 384153695 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/interval"];
      case 384153695: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 3073229562 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value max = 446768222 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/max"];
      case 446768222: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 3574145778 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent)
  return false;
#undef DO_
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value min = 44118224 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      44118224, *this->min_, output);
  }

  // .ywrapper.Decimal64Value avg = 230643524 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      230643524, *this->avg_, output);
  }

  // .ywrapper.Decimal64Value instant = 325376671 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      325376671, *this->instant_, output);
  }

  // .ywrapper.UintValue interval = 384153695 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      384153695, *this->interval_, output);
  }

  // .ywrapper.Decimal64Value max = 446768222 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      446768222, *this->max_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent)
}

::google::protobuf::uint8* Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value min = 44118224 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        44118224, *this->min_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 230643524 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        230643524, *this->avg_, deterministic, target);
  }

  // .ywrapper.Decimal64Value instant = 325376671 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        325376671, *this->instant_, deterministic, target);
  }

  // .ywrapper.UintValue interval = 384153695 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        384153695, *this->interval_, deterministic, target);
  }

  // .ywrapper.Decimal64Value max = 446768222 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        446768222, *this->max_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent)
  return target;
}

size_t Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value min = 44118224 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  // .ywrapper.Decimal64Value avg = 230643524 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.Decimal64Value instant = 325376671 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.UintValue interval = 384153695 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.Decimal64Value max = 446768222 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent)
    MergeFrom(*source);
  }
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::MergeFrom(const Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::CopyFrom(const Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::IsInitialized() const {
  return true;
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::Swap(Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::InternalSwap(Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent* other) {
  using std::swap;
  swap(min_, other->min_);
  swap(avg_, other->avg_);
  swap(instant_, other->instant_);
  swap(interval_, other->interval_);
  swap(max_, other->max_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::kAvgFieldNumber;
const int Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::kInstantFieldNumber;
const int Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::kIntervalFieldNumber;
const int Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::kMaxFieldNumber;
const int Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower)
}
Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower(const Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower)
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::SharedCtor() {
  ::memset(&max_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avg_) -
      reinterpret_cast<char*>(&max_)) + sizeof(avg_));
  _cached_size_ = 0;
}

Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::~Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower)
  SharedDtor();
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::SharedDtor() {
  if (this != internal_default_instance()) delete max_;
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete avg_;
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower& Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower();
  return *internal_default_instance();
}

Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower* Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::New(::google::protobuf::Arena* arena) const {
  Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower* n = new Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3767261682u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value max = 85611000 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/max"];
      case 85611000: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 684888002 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value instant = 110986605 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/instant"];
      case 110986605: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 887892842 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value min = 219831926 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/min"];
      case 219831926: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 1758655410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue interval = 332288817 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/interval"];
      case 332288817: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 2658310538 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 470907710 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/avg"];
      case 470907710: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 3767261682 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower)
  return false;
#undef DO_
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value max = 85611000 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      85611000, *this->max_, output);
  }

  // .ywrapper.Decimal64Value instant = 110986605 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      110986605, *this->instant_, output);
  }

  // .ywrapper.Decimal64Value min = 219831926 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      219831926, *this->min_, output);
  }

  // .ywrapper.UintValue interval = 332288817 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      332288817, *this->interval_, output);
  }

  // .ywrapper.Decimal64Value avg = 470907710 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      470907710, *this->avg_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower)
}

::google::protobuf::uint8* Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value max = 85611000 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        85611000, *this->max_, deterministic, target);
  }

  // .ywrapper.Decimal64Value instant = 110986605 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        110986605, *this->instant_, deterministic, target);
  }

  // .ywrapper.Decimal64Value min = 219831926 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        219831926, *this->min_, deterministic, target);
  }

  // .ywrapper.UintValue interval = 332288817 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        332288817, *this->interval_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 470907710 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        470907710, *this->avg_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower)
  return target;
}

size_t Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value max = 85611000 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  // .ywrapper.Decimal64Value instant = 110986605 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.Decimal64Value min = 219831926 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  // .ywrapper.UintValue interval = 332288817 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.Decimal64Value avg = 470907710 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower)
    MergeFrom(*source);
  }
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::MergeFrom(const Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::CopyFrom(const Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::IsInitialized() const {
  return true;
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::Swap(Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::InternalSwap(Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower* other) {
  using std::swap;
  swap(max_, other->max_);
  swap(instant_, other->instant_);
  swap(min_, other->min_);
  swap(interval_, other->interval_);
  swap(avg_, other->avg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Transceiver_PhysicalChannels_Channel_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_default_instance_._instance.get_mutable()->description_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_default_instance_._instance.get_mutable()->index_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_default_instance_._instance.get_mutable()->input_power_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower*>(
      ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_default_instance_._instance.get_mutable()->laser_bias_current_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent*>(
      ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_default_instance_._instance.get_mutable()->output_frequency_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_default_instance_._instance.get_mutable()->output_power_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower*>(
      ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_default_instance_._instance.get_mutable()->target_output_power_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_State_default_instance_._instance.get_mutable()->tx_laser_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
}
void Components_Component_Transceiver_PhysicalChannels_Channel_State::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
void Components_Component_Transceiver_PhysicalChannels_Channel_State::clear_index() {
  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
}
void Components_Component_Transceiver_PhysicalChannels_Channel_State::clear_output_frequency() {
  if (GetArenaNoVirtual() == NULL && output_frequency_ != NULL) {
    delete output_frequency_;
  }
  output_frequency_ = NULL;
}
void Components_Component_Transceiver_PhysicalChannels_Channel_State::clear_target_output_power() {
  if (GetArenaNoVirtual() == NULL && target_output_power_ != NULL) {
    delete target_output_power_;
  }
  target_output_power_ = NULL;
}
void Components_Component_Transceiver_PhysicalChannels_Channel_State::clear_tx_laser() {
  if (GetArenaNoVirtual() == NULL && tx_laser_ != NULL) {
    delete tx_laser_;
  }
  tx_laser_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Transceiver_PhysicalChannels_Channel_State::kDescriptionFieldNumber;
const int Components_Component_Transceiver_PhysicalChannels_Channel_State::kIndexFieldNumber;
const int Components_Component_Transceiver_PhysicalChannels_Channel_State::kInputPowerFieldNumber;
const int Components_Component_Transceiver_PhysicalChannels_Channel_State::kLaserBiasCurrentFieldNumber;
const int Components_Component_Transceiver_PhysicalChannels_Channel_State::kOutputFrequencyFieldNumber;
const int Components_Component_Transceiver_PhysicalChannels_Channel_State::kOutputPowerFieldNumber;
const int Components_Component_Transceiver_PhysicalChannels_Channel_State::kTargetOutputPowerFieldNumber;
const int Components_Component_Transceiver_PhysicalChannels_Channel_State::kTxLaserFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Transceiver_PhysicalChannels_Channel_State::Components_Component_Transceiver_PhysicalChannels_Channel_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State)
}
Components_Component_Transceiver_PhysicalChannels_Channel_State::Components_Component_Transceiver_PhysicalChannels_Channel_State(const Components_Component_Transceiver_PhysicalChannels_Channel_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_description()) {
    description_ = new ::ywrapper::StringValue(*from.description_);
  } else {
    description_ = NULL;
  }
  if (from.has_index()) {
    index_ = new ::ywrapper::UintValue(*from.index_);
  } else {
    index_ = NULL;
  }
  if (from.has_output_frequency()) {
    output_frequency_ = new ::ywrapper::UintValue(*from.output_frequency_);
  } else {
    output_frequency_ = NULL;
  }
  if (from.has_input_power()) {
    input_power_ = new ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower(*from.input_power_);
  } else {
    input_power_ = NULL;
  }
  if (from.has_target_output_power()) {
    target_output_power_ = new ::ywrapper::Decimal64Value(*from.target_output_power_);
  } else {
    target_output_power_ = NULL;
  }
  if (from.has_tx_laser()) {
    tx_laser_ = new ::ywrapper::BoolValue(*from.tx_laser_);
  } else {
    tx_laser_ = NULL;
  }
  if (from.has_output_power()) {
    output_power_ = new ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower(*from.output_power_);
  } else {
    output_power_ = NULL;
  }
  if (from.has_laser_bias_current()) {
    laser_bias_current_ = new ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent(*from.laser_bias_current_);
  } else {
    laser_bias_current_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State)
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State::SharedCtor() {
  ::memset(&description_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&laser_bias_current_) -
      reinterpret_cast<char*>(&description_)) + sizeof(laser_bias_current_));
  _cached_size_ = 0;
}

Components_Component_Transceiver_PhysicalChannels_Channel_State::~Components_Component_Transceiver_PhysicalChannels_Channel_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State)
  SharedDtor();
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State::SharedDtor() {
  if (this != internal_default_instance()) delete description_;
  if (this != internal_default_instance()) delete index_;
  if (this != internal_default_instance()) delete output_frequency_;
  if (this != internal_default_instance()) delete input_power_;
  if (this != internal_default_instance()) delete target_output_power_;
  if (this != internal_default_instance()) delete tx_laser_;
  if (this != internal_default_instance()) delete output_power_;
  if (this != internal_default_instance()) delete laser_bias_current_;
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Transceiver_PhysicalChannels_Channel_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Transceiver_PhysicalChannels_Channel_State& Components_Component_Transceiver_PhysicalChannels_Channel_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel_State();
  return *internal_default_instance();
}

Components_Component_Transceiver_PhysicalChannels_Channel_State* Components_Component_Transceiver_PhysicalChannels_Channel_State::New(::google::protobuf::Arena* arena) const {
  Components_Component_Transceiver_PhysicalChannels_Channel_State* n = new Components_Component_Transceiver_PhysicalChannels_Channel_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
  if (GetArenaNoVirtual() == NULL && index_ != NULL) {
    delete index_;
  }
  index_ = NULL;
  if (GetArenaNoVirtual() == NULL && output_frequency_ != NULL) {
    delete output_frequency_;
  }
  output_frequency_ = NULL;
  if (GetArenaNoVirtual() == NULL && input_power_ != NULL) {
    delete input_power_;
  }
  input_power_ = NULL;
  if (GetArenaNoVirtual() == NULL && target_output_power_ != NULL) {
    delete target_output_power_;
  }
  target_output_power_ = NULL;
  if (GetArenaNoVirtual() == NULL && tx_laser_ != NULL) {
    delete tx_laser_;
  }
  tx_laser_ = NULL;
  if (GetArenaNoVirtual() == NULL && output_power_ != NULL) {
    delete output_power_;
  }
  output_power_ = NULL;
  if (GetArenaNoVirtual() == NULL && laser_bias_current_ != NULL) {
    delete laser_bias_current_;
  }
  laser_bias_current_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Transceiver_PhysicalChannels_Channel_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3863275722u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue description = 29929938 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/description"];
      case 29929938: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 239439506 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue index = 53274280 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/index"];
      case 53274280: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 426194242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_index()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue output_frequency = 226348966 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-frequency"];
      case 226348966: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 1810791730 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output_frequency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower input_power = 303986504 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power"];
      case 303986504: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 2431892034 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input_power()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value target_output_power = 401597083 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/target-output-power"];
      case 401597083: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 3212776666 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target_output_power()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue tx_laser = 415933878 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/tx-laser"];
      case 415933878: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 3327471026 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tx_laser()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower output_power = 436080879 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power"];
      case 436080879: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 3488647034 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output_power()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent laser_bias_current = 482909465 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current"];
      case 482909465: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 3863275722 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_laser_bias_current()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State)
  return false;
#undef DO_
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue description = 29929938 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/description"];
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29929938, *this->description_, output);
  }

  // .ywrapper.UintValue index = 53274280 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/index"];
  if (this->has_index()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      53274280, *this->index_, output);
  }

  // .ywrapper.UintValue output_frequency = 226348966 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-frequency"];
  if (this->has_output_frequency()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      226348966, *this->output_frequency_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower input_power = 303986504 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power"];
  if (this->has_input_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      303986504, *this->input_power_, output);
  }

  // .ywrapper.Decimal64Value target_output_power = 401597083 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/target-output-power"];
  if (this->has_target_output_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      401597083, *this->target_output_power_, output);
  }

  // .ywrapper.BoolValue tx_laser = 415933878 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/tx-laser"];
  if (this->has_tx_laser()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      415933878, *this->tx_laser_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower output_power = 436080879 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power"];
  if (this->has_output_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      436080879, *this->output_power_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent laser_bias_current = 482909465 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current"];
  if (this->has_laser_bias_current()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      482909465, *this->laser_bias_current_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State)
}

::google::protobuf::uint8* Components_Component_Transceiver_PhysicalChannels_Channel_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue description = 29929938 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/description"];
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29929938, *this->description_, deterministic, target);
  }

  // .ywrapper.UintValue index = 53274280 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/index"];
  if (this->has_index()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        53274280, *this->index_, deterministic, target);
  }

  // .ywrapper.UintValue output_frequency = 226348966 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-frequency"];
  if (this->has_output_frequency()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        226348966, *this->output_frequency_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower input_power = 303986504 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power"];
  if (this->has_input_power()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        303986504, *this->input_power_, deterministic, target);
  }

  // .ywrapper.Decimal64Value target_output_power = 401597083 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/target-output-power"];
  if (this->has_target_output_power()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        401597083, *this->target_output_power_, deterministic, target);
  }

  // .ywrapper.BoolValue tx_laser = 415933878 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/tx-laser"];
  if (this->has_tx_laser()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        415933878, *this->tx_laser_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower output_power = 436080879 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power"];
  if (this->has_output_power()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        436080879, *this->output_power_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent laser_bias_current = 482909465 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current"];
  if (this->has_laser_bias_current()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        482909465, *this->laser_bias_current_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State)
  return target;
}

size_t Components_Component_Transceiver_PhysicalChannels_Channel_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue description = 29929938 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/description"];
  if (this->has_description()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->description_);
  }

  // .ywrapper.UintValue index = 53274280 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/index"];
  if (this->has_index()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->index_);
  }

  // .ywrapper.UintValue output_frequency = 226348966 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-frequency"];
  if (this->has_output_frequency()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->output_frequency_);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.InputPower input_power = 303986504 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/input-power"];
  if (this->has_input_power()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->input_power_);
  }

  // .ywrapper.Decimal64Value target_output_power = 401597083 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/target-output-power"];
  if (this->has_target_output_power()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->target_output_power_);
  }

  // .ywrapper.BoolValue tx_laser = 415933878 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/tx-laser"];
  if (this->has_tx_laser()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->tx_laser_);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.OutputPower output_power = 436080879 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/output-power"];
  if (this->has_output_power()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->output_power_);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State.LaserBiasCurrent laser_bias_current = 482909465 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state/laser-bias-current"];
  if (this->has_laser_bias_current()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->laser_bias_current_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Transceiver_PhysicalChannels_Channel_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Transceiver_PhysicalChannels_Channel_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State)
    MergeFrom(*source);
  }
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State::MergeFrom(const Components_Component_Transceiver_PhysicalChannels_Channel_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_description()) {
    mutable_description()->::ywrapper::StringValue::MergeFrom(from.description());
  }
  if (from.has_index()) {
    mutable_index()->::ywrapper::UintValue::MergeFrom(from.index());
  }
  if (from.has_output_frequency()) {
    mutable_output_frequency()->::ywrapper::UintValue::MergeFrom(from.output_frequency());
  }
  if (from.has_input_power()) {
    mutable_input_power()->::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_InputPower::MergeFrom(from.input_power());
  }
  if (from.has_target_output_power()) {
    mutable_target_output_power()->::ywrapper::Decimal64Value::MergeFrom(from.target_output_power());
  }
  if (from.has_tx_laser()) {
    mutable_tx_laser()->::ywrapper::BoolValue::MergeFrom(from.tx_laser());
  }
  if (from.has_output_power()) {
    mutable_output_power()->::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_OutputPower::MergeFrom(from.output_power());
  }
  if (from.has_laser_bias_current()) {
    mutable_laser_bias_current()->::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State_LaserBiasCurrent::MergeFrom(from.laser_bias_current());
  }
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State::CopyFrom(const Components_Component_Transceiver_PhysicalChannels_Channel_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Transceiver_PhysicalChannels_Channel_State::IsInitialized() const {
  return true;
}

void Components_Component_Transceiver_PhysicalChannels_Channel_State::Swap(Components_Component_Transceiver_PhysicalChannels_Channel_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Transceiver_PhysicalChannels_Channel_State::InternalSwap(Components_Component_Transceiver_PhysicalChannels_Channel_State* other) {
  using std::swap;
  swap(description_, other->description_);
  swap(index_, other->index_);
  swap(output_frequency_, other->output_frequency_);
  swap(input_power_, other->input_power_);
  swap(target_output_power_, other->target_output_power_);
  swap(tx_laser_, other->tx_laser_);
  swap(output_power_, other->output_power_);
  swap(laser_bias_current_, other->laser_bias_current_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Transceiver_PhysicalChannels_Channel_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Transceiver_PhysicalChannels_Channel::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_Config*>(
      ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_Config::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_Channel_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State*>(
      ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Transceiver_PhysicalChannels_Channel::kConfigFieldNumber;
const int Components_Component_Transceiver_PhysicalChannels_Channel::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Transceiver_PhysicalChannels_Channel::Components_Component_Transceiver_PhysicalChannels_Channel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel)
}
Components_Component_Transceiver_PhysicalChannels_Channel::Components_Component_Transceiver_PhysicalChannels_Channel(const Components_Component_Transceiver_PhysicalChannels_Channel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel)
}

void Components_Component_Transceiver_PhysicalChannels_Channel::SharedCtor() {
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&config_)) + sizeof(state_));
  _cached_size_ = 0;
}

Components_Component_Transceiver_PhysicalChannels_Channel::~Components_Component_Transceiver_PhysicalChannels_Channel() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel)
  SharedDtor();
}

void Components_Component_Transceiver_PhysicalChannels_Channel::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete state_;
}

void Components_Component_Transceiver_PhysicalChannels_Channel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Transceiver_PhysicalChannels_Channel::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Transceiver_PhysicalChannels_Channel& Components_Component_Transceiver_PhysicalChannels_Channel::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_Channel();
  return *internal_default_instance();
}

Components_Component_Transceiver_PhysicalChannels_Channel* Components_Component_Transceiver_PhysicalChannels_Channel::New(::google::protobuf::Arena* arena) const {
  Components_Component_Transceiver_PhysicalChannels_Channel* n = new Components_Component_Transceiver_PhysicalChannels_Channel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Transceiver_PhysicalChannels_Channel::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Transceiver_PhysicalChannels_Channel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2257136842u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config config = 101023264 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config"];
      case 101023264: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 808186114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State state = 282142105 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state"];
      case 282142105: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 2257136842 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel)
  return false;
#undef DO_
}

void Components_Component_Transceiver_PhysicalChannels_Channel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config config = 101023264 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      101023264, *this->config_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State state = 282142105 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      282142105, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel)
}

::google::protobuf::uint8* Components_Component_Transceiver_PhysicalChannels_Channel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config config = 101023264 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        101023264, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State state = 282142105 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        282142105, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel)
  return target;
}

size_t Components_Component_Transceiver_PhysicalChannels_Channel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.Config config = 101023264 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel.State state = 282142105 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Transceiver_PhysicalChannels_Channel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Transceiver_PhysicalChannels_Channel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Transceiver_PhysicalChannels_Channel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel)
    MergeFrom(*source);
  }
}

void Components_Component_Transceiver_PhysicalChannels_Channel::MergeFrom(const Components_Component_Transceiver_PhysicalChannels_Channel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_Config::MergeFrom(from.config());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel_State::MergeFrom(from.state());
  }
}

void Components_Component_Transceiver_PhysicalChannels_Channel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Transceiver_PhysicalChannels_Channel::CopyFrom(const Components_Component_Transceiver_PhysicalChannels_Channel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Transceiver_PhysicalChannels_Channel::IsInitialized() const {
  return true;
}

void Components_Component_Transceiver_PhysicalChannels_Channel::Swap(Components_Component_Transceiver_PhysicalChannels_Channel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Transceiver_PhysicalChannels_Channel::InternalSwap(Components_Component_Transceiver_PhysicalChannels_Channel* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Transceiver_PhysicalChannels_Channel::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Transceiver_PhysicalChannels_ChannelKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_PhysicalChannels_ChannelKey_default_instance_._instance.get_mutable()->channel_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel*>(
      ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Transceiver_PhysicalChannels_ChannelKey::kIndexFieldNumber;
const int Components_Component_Transceiver_PhysicalChannels_ChannelKey::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Transceiver_PhysicalChannels_ChannelKey::Components_Component_Transceiver_PhysicalChannels_ChannelKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_ChannelKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey)
}
Components_Component_Transceiver_PhysicalChannels_ChannelKey::Components_Component_Transceiver_PhysicalChannels_ChannelKey(const Components_Component_Transceiver_PhysicalChannels_ChannelKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_channel()) {
    channel_ = new ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel(*from.channel_);
  } else {
    channel_ = NULL;
  }
  index_ = from.index_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey)
}

void Components_Component_Transceiver_PhysicalChannels_ChannelKey::SharedCtor() {
  ::memset(&channel_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&index_) -
      reinterpret_cast<char*>(&channel_)) + sizeof(index_));
  _cached_size_ = 0;
}

Components_Component_Transceiver_PhysicalChannels_ChannelKey::~Components_Component_Transceiver_PhysicalChannels_ChannelKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey)
  SharedDtor();
}

void Components_Component_Transceiver_PhysicalChannels_ChannelKey::SharedDtor() {
  if (this != internal_default_instance()) delete channel_;
}

void Components_Component_Transceiver_PhysicalChannels_ChannelKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Transceiver_PhysicalChannels_ChannelKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Transceiver_PhysicalChannels_ChannelKey& Components_Component_Transceiver_PhysicalChannels_ChannelKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels_ChannelKey();
  return *internal_default_instance();
}

Components_Component_Transceiver_PhysicalChannels_ChannelKey* Components_Component_Transceiver_PhysicalChannels_ChannelKey::New(::google::protobuf::Arena* arena) const {
  Components_Component_Transceiver_PhysicalChannels_ChannelKey* n = new Components_Component_Transceiver_PhysicalChannels_ChannelKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Transceiver_PhysicalChannels_ChannelKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && channel_ != NULL) {
    delete channel_;
  }
  channel_ = NULL;
  index_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Components_Component_Transceiver_PhysicalChannels_ChannelKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 index = 1 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/index"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &index_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel channel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey)
  return false;
#undef DO_
}

void Components_Component_Transceiver_PhysicalChannels_ChannelKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 index = 1 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/index"];
  if (this->index() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->index(), output);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel channel = 2;
  if (this->has_channel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->channel_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey)
}

::google::protobuf::uint8* Components_Component_Transceiver_PhysicalChannels_ChannelKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 index = 1 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/index"];
  if (this->index() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->index(), target);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel channel = 2;
  if (this->has_channel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->channel_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey)
  return target;
}

size_t Components_Component_Transceiver_PhysicalChannels_ChannelKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.Channel channel = 2;
  if (this->has_channel()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->channel_);
  }

  // uint64 index = 1 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel/index"];
  if (this->index() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->index());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Transceiver_PhysicalChannels_ChannelKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Transceiver_PhysicalChannels_ChannelKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Transceiver_PhysicalChannels_ChannelKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey)
    MergeFrom(*source);
  }
}

void Components_Component_Transceiver_PhysicalChannels_ChannelKey::MergeFrom(const Components_Component_Transceiver_PhysicalChannels_ChannelKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_channel()) {
    mutable_channel()->::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels_Channel::MergeFrom(from.channel());
  }
  if (from.index() != 0) {
    set_index(from.index());
  }
}

void Components_Component_Transceiver_PhysicalChannels_ChannelKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Transceiver_PhysicalChannels_ChannelKey::CopyFrom(const Components_Component_Transceiver_PhysicalChannels_ChannelKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Transceiver_PhysicalChannels_ChannelKey::IsInitialized() const {
  return true;
}

void Components_Component_Transceiver_PhysicalChannels_ChannelKey::Swap(Components_Component_Transceiver_PhysicalChannels_ChannelKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Transceiver_PhysicalChannels_ChannelKey::InternalSwap(Components_Component_Transceiver_PhysicalChannels_ChannelKey* other) {
  using std::swap;
  swap(channel_, other->channel_);
  swap(index_, other->index_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Transceiver_PhysicalChannels_ChannelKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Transceiver_PhysicalChannels::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Transceiver_PhysicalChannels::kChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Transceiver_PhysicalChannels::Components_Component_Transceiver_PhysicalChannels()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels)
}
Components_Component_Transceiver_PhysicalChannels::Components_Component_Transceiver_PhysicalChannels(const Components_Component_Transceiver_PhysicalChannels& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      channel_(from.channel_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels)
}

void Components_Component_Transceiver_PhysicalChannels::SharedCtor() {
  _cached_size_ = 0;
}

Components_Component_Transceiver_PhysicalChannels::~Components_Component_Transceiver_PhysicalChannels() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels)
  SharedDtor();
}

void Components_Component_Transceiver_PhysicalChannels::SharedDtor() {
}

void Components_Component_Transceiver_PhysicalChannels::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Transceiver_PhysicalChannels::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Transceiver_PhysicalChannels& Components_Component_Transceiver_PhysicalChannels::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_PhysicalChannels();
  return *internal_default_instance();
}

Components_Component_Transceiver_PhysicalChannels* Components_Component_Transceiver_PhysicalChannels::New(::google::protobuf::Arena* arena) const {
  Components_Component_Transceiver_PhysicalChannels* n = new Components_Component_Transceiver_PhysicalChannels;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Transceiver_PhysicalChannels::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  channel_.Clear();
  _internal_metadata_.Clear();
}

bool Components_Component_Transceiver_PhysicalChannels::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2872999674u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey channel = 359124959 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel"];
      case 359124959: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 2872999674 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels)
  return false;
#undef DO_
}

void Components_Component_Transceiver_PhysicalChannels::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey channel = 359124959 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channel_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      359124959, this->channel(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels)
}

::google::protobuf::uint8* Components_Component_Transceiver_PhysicalChannels::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey channel = 359124959 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->channel_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        359124959, this->channel(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels)
  return target;
}

size_t Components_Component_Transceiver_PhysicalChannels::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels.ChannelKey channel = 359124959 [(.yext.schemapath) = "/components/component/transceiver/physical-channels/channel"];
  {
    unsigned int count = static_cast<unsigned int>(this->channel_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->channel(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Transceiver_PhysicalChannels::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Transceiver_PhysicalChannels* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Transceiver_PhysicalChannels>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels)
    MergeFrom(*source);
  }
}

void Components_Component_Transceiver_PhysicalChannels::MergeFrom(const Components_Component_Transceiver_PhysicalChannels& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  channel_.MergeFrom(from.channel_);
}

void Components_Component_Transceiver_PhysicalChannels::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Transceiver_PhysicalChannels::CopyFrom(const Components_Component_Transceiver_PhysicalChannels& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Transceiver_PhysicalChannels::IsInitialized() const {
  return true;
}

void Components_Component_Transceiver_PhysicalChannels::Swap(Components_Component_Transceiver_PhysicalChannels* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Transceiver_PhysicalChannels::InternalSwap(Components_Component_Transceiver_PhysicalChannels* other) {
  using std::swap;
  channel_.InternalSwap(&other->channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Transceiver_PhysicalChannels::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Transceiver_State_InputPower::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_State_InputPower_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_State_InputPower_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_State_InputPower_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_State_InputPower_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_State_InputPower_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void Components_Component_Transceiver_State_InputPower::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void Components_Component_Transceiver_State_InputPower::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void Components_Component_Transceiver_State_InputPower::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void Components_Component_Transceiver_State_InputPower::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void Components_Component_Transceiver_State_InputPower::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Transceiver_State_InputPower::kAvgFieldNumber;
const int Components_Component_Transceiver_State_InputPower::kInstantFieldNumber;
const int Components_Component_Transceiver_State_InputPower::kIntervalFieldNumber;
const int Components_Component_Transceiver_State_InputPower::kMaxFieldNumber;
const int Components_Component_Transceiver_State_InputPower::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Transceiver_State_InputPower::Components_Component_Transceiver_State_InputPower()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_State_InputPower();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower)
}
Components_Component_Transceiver_State_InputPower::Components_Component_Transceiver_State_InputPower(const Components_Component_Transceiver_State_InputPower& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower)
}

void Components_Component_Transceiver_State_InputPower::SharedCtor() {
  ::memset(&instant_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avg_) -
      reinterpret_cast<char*>(&instant_)) + sizeof(avg_));
  _cached_size_ = 0;
}

Components_Component_Transceiver_State_InputPower::~Components_Component_Transceiver_State_InputPower() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower)
  SharedDtor();
}

void Components_Component_Transceiver_State_InputPower::SharedDtor() {
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete max_;
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete avg_;
}

void Components_Component_Transceiver_State_InputPower::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Transceiver_State_InputPower::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Transceiver_State_InputPower& Components_Component_Transceiver_State_InputPower::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_State_InputPower();
  return *internal_default_instance();
}

Components_Component_Transceiver_State_InputPower* Components_Component_Transceiver_State_InputPower::New(::google::protobuf::Arena* arena) const {
  Components_Component_Transceiver_State_InputPower* n = new Components_Component_Transceiver_State_InputPower;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Transceiver_State_InputPower::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Transceiver_State_InputPower::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3398265154u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value instant = 29798419 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/instant"];
      case 29798419: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 238387354 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue interval = 192286739 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/interval"];
      case 192286739: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 1538293914 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value max = 242200938 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/max"];
      case 242200938: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 1937607506 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value min = 376421828 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/min"];
      case 376421828: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 3011374626 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 424783144 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/avg"];
      case 424783144: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 3398265154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower)
  return false;
#undef DO_
}

void Components_Component_Transceiver_State_InputPower::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value instant = 29798419 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29798419, *this->instant_, output);
  }

  // .ywrapper.UintValue interval = 192286739 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      192286739, *this->interval_, output);
  }

  // .ywrapper.Decimal64Value max = 242200938 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      242200938, *this->max_, output);
  }

  // .ywrapper.Decimal64Value min = 376421828 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      376421828, *this->min_, output);
  }

  // .ywrapper.Decimal64Value avg = 424783144 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      424783144, *this->avg_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower)
}

::google::protobuf::uint8* Components_Component_Transceiver_State_InputPower::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value instant = 29798419 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29798419, *this->instant_, deterministic, target);
  }

  // .ywrapper.UintValue interval = 192286739 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        192286739, *this->interval_, deterministic, target);
  }

  // .ywrapper.Decimal64Value max = 242200938 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        242200938, *this->max_, deterministic, target);
  }

  // .ywrapper.Decimal64Value min = 376421828 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        376421828, *this->min_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 424783144 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        424783144, *this->avg_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower)
  return target;
}

size_t Components_Component_Transceiver_State_InputPower::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value instant = 29798419 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/instant"];
  if (this->has_instant()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.UintValue interval = 192286739 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.Decimal64Value max = 242200938 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  // .ywrapper.Decimal64Value min = 376421828 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  // .ywrapper.Decimal64Value avg = 424783144 [(.yext.schemapath) = "/components/component/transceiver/state/input-power/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Transceiver_State_InputPower::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Transceiver_State_InputPower* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Transceiver_State_InputPower>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower)
    MergeFrom(*source);
  }
}

void Components_Component_Transceiver_State_InputPower::MergeFrom(const Components_Component_Transceiver_State_InputPower& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
}

void Components_Component_Transceiver_State_InputPower::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Transceiver_State_InputPower::CopyFrom(const Components_Component_Transceiver_State_InputPower& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Transceiver_State_InputPower::IsInitialized() const {
  return true;
}

void Components_Component_Transceiver_State_InputPower::Swap(Components_Component_Transceiver_State_InputPower* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Transceiver_State_InputPower::InternalSwap(Components_Component_Transceiver_State_InputPower* other) {
  using std::swap;
  swap(instant_, other->instant_);
  swap(interval_, other->interval_);
  swap(max_, other->max_);
  swap(min_, other->min_);
  swap(avg_, other->avg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Transceiver_State_InputPower::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Transceiver_State_LaserBiasCurrent::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_State_LaserBiasCurrent_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_State_LaserBiasCurrent_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_State_LaserBiasCurrent_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_State_LaserBiasCurrent_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_State_LaserBiasCurrent_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void Components_Component_Transceiver_State_LaserBiasCurrent::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void Components_Component_Transceiver_State_LaserBiasCurrent::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void Components_Component_Transceiver_State_LaserBiasCurrent::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void Components_Component_Transceiver_State_LaserBiasCurrent::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void Components_Component_Transceiver_State_LaserBiasCurrent::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Transceiver_State_LaserBiasCurrent::kAvgFieldNumber;
const int Components_Component_Transceiver_State_LaserBiasCurrent::kInstantFieldNumber;
const int Components_Component_Transceiver_State_LaserBiasCurrent::kIntervalFieldNumber;
const int Components_Component_Transceiver_State_LaserBiasCurrent::kMaxFieldNumber;
const int Components_Component_Transceiver_State_LaserBiasCurrent::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Transceiver_State_LaserBiasCurrent::Components_Component_Transceiver_State_LaserBiasCurrent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_State_LaserBiasCurrent();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent)
}
Components_Component_Transceiver_State_LaserBiasCurrent::Components_Component_Transceiver_State_LaserBiasCurrent(const Components_Component_Transceiver_State_LaserBiasCurrent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent)
}

void Components_Component_Transceiver_State_LaserBiasCurrent::SharedCtor() {
  ::memset(&max_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interval_) -
      reinterpret_cast<char*>(&max_)) + sizeof(interval_));
  _cached_size_ = 0;
}

Components_Component_Transceiver_State_LaserBiasCurrent::~Components_Component_Transceiver_State_LaserBiasCurrent() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent)
  SharedDtor();
}

void Components_Component_Transceiver_State_LaserBiasCurrent::SharedDtor() {
  if (this != internal_default_instance()) delete max_;
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete interval_;
}

void Components_Component_Transceiver_State_LaserBiasCurrent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Transceiver_State_LaserBiasCurrent::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Transceiver_State_LaserBiasCurrent& Components_Component_Transceiver_State_LaserBiasCurrent::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_State_LaserBiasCurrent();
  return *internal_default_instance();
}

Components_Component_Transceiver_State_LaserBiasCurrent* Components_Component_Transceiver_State_LaserBiasCurrent::New(::google::protobuf::Arena* arena) const {
  Components_Component_Transceiver_State_LaserBiasCurrent* n = new Components_Component_Transceiver_State_LaserBiasCurrent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Transceiver_State_LaserBiasCurrent::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Transceiver_State_LaserBiasCurrent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3857409330u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value max = 26814849 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/max"];
      case 26814849: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 214518794 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 44193839 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/avg"];
      case 44193839: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 353550714 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value min = 161036031 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/min"];
      case 161036031: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 1288288250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value instant = 400153624 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/instant"];
      case 400153624: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 3201228994 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue interval = 482176166 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/interval"];
      case 482176166: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 3857409330 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent)
  return false;
#undef DO_
}

void Components_Component_Transceiver_State_LaserBiasCurrent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value max = 26814849 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      26814849, *this->max_, output);
  }

  // .ywrapper.Decimal64Value avg = 44193839 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      44193839, *this->avg_, output);
  }

  // .ywrapper.Decimal64Value min = 161036031 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      161036031, *this->min_, output);
  }

  // .ywrapper.Decimal64Value instant = 400153624 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      400153624, *this->instant_, output);
  }

  // .ywrapper.UintValue interval = 482176166 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      482176166, *this->interval_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent)
}

::google::protobuf::uint8* Components_Component_Transceiver_State_LaserBiasCurrent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value max = 26814849 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        26814849, *this->max_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 44193839 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        44193839, *this->avg_, deterministic, target);
  }

  // .ywrapper.Decimal64Value min = 161036031 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        161036031, *this->min_, deterministic, target);
  }

  // .ywrapper.Decimal64Value instant = 400153624 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        400153624, *this->instant_, deterministic, target);
  }

  // .ywrapper.UintValue interval = 482176166 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        482176166, *this->interval_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent)
  return target;
}

size_t Components_Component_Transceiver_State_LaserBiasCurrent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value max = 26814849 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/max"];
  if (this->has_max()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  // .ywrapper.Decimal64Value avg = 44193839 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.Decimal64Value min = 161036031 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  // .ywrapper.Decimal64Value instant = 400153624 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.UintValue interval = 482176166 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Transceiver_State_LaserBiasCurrent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Transceiver_State_LaserBiasCurrent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Transceiver_State_LaserBiasCurrent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent)
    MergeFrom(*source);
  }
}

void Components_Component_Transceiver_State_LaserBiasCurrent::MergeFrom(const Components_Component_Transceiver_State_LaserBiasCurrent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
}

void Components_Component_Transceiver_State_LaserBiasCurrent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Transceiver_State_LaserBiasCurrent::CopyFrom(const Components_Component_Transceiver_State_LaserBiasCurrent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Transceiver_State_LaserBiasCurrent::IsInitialized() const {
  return true;
}

void Components_Component_Transceiver_State_LaserBiasCurrent::Swap(Components_Component_Transceiver_State_LaserBiasCurrent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Transceiver_State_LaserBiasCurrent::InternalSwap(Components_Component_Transceiver_State_LaserBiasCurrent* other) {
  using std::swap;
  swap(max_, other->max_);
  swap(avg_, other->avg_);
  swap(min_, other->min_);
  swap(instant_, other->instant_);
  swap(interval_, other->interval_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Transceiver_State_LaserBiasCurrent::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Transceiver_State_OutputPower::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_State_OutputPower_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_State_OutputPower_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_State_OutputPower_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_State_OutputPower_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_State_OutputPower_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void Components_Component_Transceiver_State_OutputPower::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void Components_Component_Transceiver_State_OutputPower::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void Components_Component_Transceiver_State_OutputPower::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void Components_Component_Transceiver_State_OutputPower::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void Components_Component_Transceiver_State_OutputPower::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Transceiver_State_OutputPower::kAvgFieldNumber;
const int Components_Component_Transceiver_State_OutputPower::kInstantFieldNumber;
const int Components_Component_Transceiver_State_OutputPower::kIntervalFieldNumber;
const int Components_Component_Transceiver_State_OutputPower::kMaxFieldNumber;
const int Components_Component_Transceiver_State_OutputPower::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Transceiver_State_OutputPower::Components_Component_Transceiver_State_OutputPower()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_State_OutputPower();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower)
}
Components_Component_Transceiver_State_OutputPower::Components_Component_Transceiver_State_OutputPower(const Components_Component_Transceiver_State_OutputPower& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower)
}

void Components_Component_Transceiver_State_OutputPower::SharedCtor() {
  ::memset(&instant_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&min_) -
      reinterpret_cast<char*>(&instant_)) + sizeof(min_));
  _cached_size_ = 0;
}

Components_Component_Transceiver_State_OutputPower::~Components_Component_Transceiver_State_OutputPower() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower)
  SharedDtor();
}

void Components_Component_Transceiver_State_OutputPower::SharedDtor() {
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete max_;
  if (this != internal_default_instance()) delete min_;
}

void Components_Component_Transceiver_State_OutputPower::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Transceiver_State_OutputPower::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Transceiver_State_OutputPower& Components_Component_Transceiver_State_OutputPower::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_State_OutputPower();
  return *internal_default_instance();
}

Components_Component_Transceiver_State_OutputPower* Components_Component_Transceiver_State_OutputPower::New(::google::protobuf::Arena* arena) const {
  Components_Component_Transceiver_State_OutputPower* n = new Components_Component_Transceiver_State_OutputPower;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Transceiver_State_OutputPower::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Transceiver_State_OutputPower::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3362078250u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value instant = 45091486 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/instant"];
      case 45091486: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 360731890 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 103469393 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/avg"];
      case 103469393: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 827755146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue interval = 140247632 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/interval"];
      case 140247632: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 1121981058 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value max = 286038891 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/max"];
      case 286038891: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 2288311130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value min = 420259781 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/min"];
      case 420259781: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 3362078250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower)
  return false;
#undef DO_
}

void Components_Component_Transceiver_State_OutputPower::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value instant = 45091486 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      45091486, *this->instant_, output);
  }

  // .ywrapper.Decimal64Value avg = 103469393 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      103469393, *this->avg_, output);
  }

  // .ywrapper.UintValue interval = 140247632 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      140247632, *this->interval_, output);
  }

  // .ywrapper.Decimal64Value max = 286038891 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      286038891, *this->max_, output);
  }

  // .ywrapper.Decimal64Value min = 420259781 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      420259781, *this->min_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower)
}

::google::protobuf::uint8* Components_Component_Transceiver_State_OutputPower::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value instant = 45091486 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        45091486, *this->instant_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 103469393 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        103469393, *this->avg_, deterministic, target);
  }

  // .ywrapper.UintValue interval = 140247632 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        140247632, *this->interval_, deterministic, target);
  }

  // .ywrapper.Decimal64Value max = 286038891 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        286038891, *this->max_, deterministic, target);
  }

  // .ywrapper.Decimal64Value min = 420259781 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        420259781, *this->min_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower)
  return target;
}

size_t Components_Component_Transceiver_State_OutputPower::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value instant = 45091486 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.Decimal64Value avg = 103469393 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.UintValue interval = 140247632 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.Decimal64Value max = 286038891 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  // .ywrapper.Decimal64Value min = 420259781 [(.yext.schemapath) = "/components/component/transceiver/state/output-power/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Transceiver_State_OutputPower::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Transceiver_State_OutputPower* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Transceiver_State_OutputPower>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower)
    MergeFrom(*source);
  }
}

void Components_Component_Transceiver_State_OutputPower::MergeFrom(const Components_Component_Transceiver_State_OutputPower& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
}

void Components_Component_Transceiver_State_OutputPower::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Transceiver_State_OutputPower::CopyFrom(const Components_Component_Transceiver_State_OutputPower& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Transceiver_State_OutputPower::IsInitialized() const {
  return true;
}

void Components_Component_Transceiver_State_OutputPower::Swap(Components_Component_Transceiver_State_OutputPower* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Transceiver_State_OutputPower::InternalSwap(Components_Component_Transceiver_State_OutputPower* other) {
  using std::swap;
  swap(instant_, other->instant_);
  swap(avg_, other->avg_);
  swap(interval_, other->interval_);
  swap(max_, other->max_);
  swap(min_, other->min_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Transceiver_State_OutputPower::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Transceiver_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_State_default_instance_._instance.get_mutable()->date_code_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_State_default_instance_._instance.get_mutable()->enabled_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_State_default_instance_._instance.get_mutable()->fault_condition_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_State_default_instance_._instance.get_mutable()->input_power_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Transceiver_State_InputPower*>(
      ::openconfig::openconfig_platform::Components_Component_Transceiver_State_InputPower::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_State_default_instance_._instance.get_mutable()->internal_temp_ = const_cast< ::ywrapper::IntValue*>(
      ::ywrapper::IntValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_State_default_instance_._instance.get_mutable()->laser_bias_current_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Transceiver_State_LaserBiasCurrent*>(
      ::openconfig::openconfig_platform::Components_Component_Transceiver_State_LaserBiasCurrent::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_State_default_instance_._instance.get_mutable()->output_power_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Transceiver_State_OutputPower*>(
      ::openconfig::openconfig_platform::Components_Component_Transceiver_State_OutputPower::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_State_default_instance_._instance.get_mutable()->serial_no_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_State_default_instance_._instance.get_mutable()->vendor_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_State_default_instance_._instance.get_mutable()->vendor_part_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_State_default_instance_._instance.get_mutable()->vendor_rev_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void Components_Component_Transceiver_State::clear_date_code() {
  if (GetArenaNoVirtual() == NULL && date_code_ != NULL) {
    delete date_code_;
  }
  date_code_ = NULL;
}
void Components_Component_Transceiver_State::clear_enabled() {
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) {
    delete enabled_;
  }
  enabled_ = NULL;
}
void Components_Component_Transceiver_State::clear_fault_condition() {
  if (GetArenaNoVirtual() == NULL && fault_condition_ != NULL) {
    delete fault_condition_;
  }
  fault_condition_ = NULL;
}
void Components_Component_Transceiver_State::clear_internal_temp() {
  if (GetArenaNoVirtual() == NULL && internal_temp_ != NULL) {
    delete internal_temp_;
  }
  internal_temp_ = NULL;
}
void Components_Component_Transceiver_State::clear_serial_no() {
  if (GetArenaNoVirtual() == NULL && serial_no_ != NULL) {
    delete serial_no_;
  }
  serial_no_ = NULL;
}
void Components_Component_Transceiver_State::clear_vendor() {
  if (GetArenaNoVirtual() == NULL && vendor_ != NULL) {
    delete vendor_;
  }
  vendor_ = NULL;
}
void Components_Component_Transceiver_State::clear_vendor_part() {
  if (GetArenaNoVirtual() == NULL && vendor_part_ != NULL) {
    delete vendor_part_;
  }
  vendor_part_ = NULL;
}
void Components_Component_Transceiver_State::clear_vendor_rev() {
  if (GetArenaNoVirtual() == NULL && vendor_rev_ != NULL) {
    delete vendor_rev_;
  }
  vendor_rev_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Transceiver_State::kConnectorTypeFieldNumber;
const int Components_Component_Transceiver_State::kDateCodeFieldNumber;
const int Components_Component_Transceiver_State::kEnabledFieldNumber;
const int Components_Component_Transceiver_State::kEthernetPmdFieldNumber;
const int Components_Component_Transceiver_State::kEthernetPmdPreconfFieldNumber;
const int Components_Component_Transceiver_State::kFaultConditionFieldNumber;
const int Components_Component_Transceiver_State::kFormFactorFieldNumber;
const int Components_Component_Transceiver_State::kFormFactorPreconfFieldNumber;
const int Components_Component_Transceiver_State::kInputPowerFieldNumber;
const int Components_Component_Transceiver_State::kInternalTempFieldNumber;
const int Components_Component_Transceiver_State::kLaserBiasCurrentFieldNumber;
const int Components_Component_Transceiver_State::kOtnComplianceCodeFieldNumber;
const int Components_Component_Transceiver_State::kOutputPowerFieldNumber;
const int Components_Component_Transceiver_State::kPresentFieldNumber;
const int Components_Component_Transceiver_State::kSerialNoFieldNumber;
const int Components_Component_Transceiver_State::kSonetSdhComplianceCodeFieldNumber;
const int Components_Component_Transceiver_State::kVendorFieldNumber;
const int Components_Component_Transceiver_State::kVendorPartFieldNumber;
const int Components_Component_Transceiver_State::kVendorRevFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Transceiver_State::Components_Component_Transceiver_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Transceiver.State)
}
Components_Component_Transceiver_State::Components_Component_Transceiver_State(const Components_Component_Transceiver_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_input_power()) {
    input_power_ = new ::openconfig::openconfig_platform::Components_Component_Transceiver_State_InputPower(*from.input_power_);
  } else {
    input_power_ = NULL;
  }
  if (from.has_serial_no()) {
    serial_no_ = new ::ywrapper::StringValue(*from.serial_no_);
  } else {
    serial_no_ = NULL;
  }
  if (from.has_vendor_rev()) {
    vendor_rev_ = new ::ywrapper::StringValue(*from.vendor_rev_);
  } else {
    vendor_rev_ = NULL;
  }
  if (from.has_fault_condition()) {
    fault_condition_ = new ::ywrapper::BoolValue(*from.fault_condition_);
  } else {
    fault_condition_ = NULL;
  }
  if (from.has_internal_temp()) {
    internal_temp_ = new ::ywrapper::IntValue(*from.internal_temp_);
  } else {
    internal_temp_ = NULL;
  }
  if (from.has_vendor()) {
    vendor_ = new ::ywrapper::StringValue(*from.vendor_);
  } else {
    vendor_ = NULL;
  }
  if (from.has_output_power()) {
    output_power_ = new ::openconfig::openconfig_platform::Components_Component_Transceiver_State_OutputPower(*from.output_power_);
  } else {
    output_power_ = NULL;
  }
  if (from.has_vendor_part()) {
    vendor_part_ = new ::ywrapper::StringValue(*from.vendor_part_);
  } else {
    vendor_part_ = NULL;
  }
  if (from.has_enabled()) {
    enabled_ = new ::ywrapper::BoolValue(*from.enabled_);
  } else {
    enabled_ = NULL;
  }
  if (from.has_date_code()) {
    date_code_ = new ::ywrapper::StringValue(*from.date_code_);
  } else {
    date_code_ = NULL;
  }
  if (from.has_laser_bias_current()) {
    laser_bias_current_ = new ::openconfig::openconfig_platform::Components_Component_Transceiver_State_LaserBiasCurrent(*from.laser_bias_current_);
  } else {
    laser_bias_current_ = NULL;
  }
  ::memcpy(&form_factor_, &from.form_factor_,
    static_cast<size_t>(reinterpret_cast<char*>(&form_factor_preconf_) -
    reinterpret_cast<char*>(&form_factor_)) + sizeof(form_factor_preconf_));
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Transceiver.State)
}

void Components_Component_Transceiver_State::SharedCtor() {
  ::memset(&input_power_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&form_factor_preconf_) -
      reinterpret_cast<char*>(&input_power_)) + sizeof(form_factor_preconf_));
  _cached_size_ = 0;
}

Components_Component_Transceiver_State::~Components_Component_Transceiver_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Transceiver.State)
  SharedDtor();
}

void Components_Component_Transceiver_State::SharedDtor() {
  if (this != internal_default_instance()) delete input_power_;
  if (this != internal_default_instance()) delete serial_no_;
  if (this != internal_default_instance()) delete vendor_rev_;
  if (this != internal_default_instance()) delete fault_condition_;
  if (this != internal_default_instance()) delete internal_temp_;
  if (this != internal_default_instance()) delete vendor_;
  if (this != internal_default_instance()) delete output_power_;
  if (this != internal_default_instance()) delete vendor_part_;
  if (this != internal_default_instance()) delete enabled_;
  if (this != internal_default_instance()) delete date_code_;
  if (this != internal_default_instance()) delete laser_bias_current_;
}

void Components_Component_Transceiver_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Transceiver_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Transceiver_State& Components_Component_Transceiver_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver_State();
  return *internal_default_instance();
}

Components_Component_Transceiver_State* Components_Component_Transceiver_State::New(::google::protobuf::Arena* arena) const {
  Components_Component_Transceiver_State* n = new Components_Component_Transceiver_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Transceiver_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Transceiver.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && input_power_ != NULL) {
    delete input_power_;
  }
  input_power_ = NULL;
  if (GetArenaNoVirtual() == NULL && serial_no_ != NULL) {
    delete serial_no_;
  }
  serial_no_ = NULL;
  if (GetArenaNoVirtual() == NULL && vendor_rev_ != NULL) {
    delete vendor_rev_;
  }
  vendor_rev_ = NULL;
  if (GetArenaNoVirtual() == NULL && fault_condition_ != NULL) {
    delete fault_condition_;
  }
  fault_condition_ = NULL;
  if (GetArenaNoVirtual() == NULL && internal_temp_ != NULL) {
    delete internal_temp_;
  }
  internal_temp_ = NULL;
  if (GetArenaNoVirtual() == NULL && vendor_ != NULL) {
    delete vendor_;
  }
  vendor_ = NULL;
  if (GetArenaNoVirtual() == NULL && output_power_ != NULL) {
    delete output_power_;
  }
  output_power_ = NULL;
  if (GetArenaNoVirtual() == NULL && vendor_part_ != NULL) {
    delete vendor_part_;
  }
  vendor_part_ = NULL;
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) {
    delete enabled_;
  }
  enabled_ = NULL;
  if (GetArenaNoVirtual() == NULL && date_code_ != NULL) {
    delete date_code_;
  }
  date_code_ = NULL;
  if (GetArenaNoVirtual() == NULL && laser_bias_current_ != NULL) {
    delete laser_bias_current_;
  }
  laser_bias_current_ = NULL;
  ::memset(&form_factor_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&form_factor_preconf_) -
      reinterpret_cast<char*>(&form_factor_)) + sizeof(form_factor_preconf_));
  _internal_metadata_.Clear();
}

bool Components_Component_Transceiver_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Transceiver.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4148440136u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.enums.OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE form_factor = 11627927 [(.yext.schemapath) = "/components/component/transceiver/state/form-factor"];
      case 11627927: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 93023416 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_form_factor(static_cast< ::openconfig::enums::OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower input_power = 41561605 [(.yext.schemapath) = "/components/component/transceiver/state/input-power"];
      case 41561605: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 332492842 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input_power()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue serial_no = 48331837 [(.yext.schemapath) = "/components/component/transceiver/state/serial-no"];
      case 48331837: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 386654698 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_serial_no()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue vendor_rev = 62133637 [(.yext.schemapath) = "/components/component/transceiver/state/vendor-rev"];
      case 62133637: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 497069098 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vendor_rev()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue fault_condition = 66972341 [(.yext.schemapath) = "/components/component/transceiver/state/fault-condition"];
      case 66972341: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 535778730 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fault_condition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.IntValue internal_temp = 109715519 [(.yext.schemapath) = "/components/component/transceiver/state/internal-temp"];
      case 109715519: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 877724154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_internal_temp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Transceiver.State.Present present = 171782640 [(.yext.schemapath) = "/components/component/transceiver/state/present"];
      case 171782640: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 1374261120 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_present(static_cast< ::openconfig::openconfig_platform::Components_Component_Transceiver_State_Present >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue vendor = 186283901 [(.yext.schemapath) = "/components/component/transceiver/state/vendor"];
      case 186283901: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 1490271210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vendor()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower output_power = 242740240 [(.yext.schemapath) = "/components/component/transceiver/state/output-power"];
      case 242740240: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 1941921922 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output_power()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue vendor_part = 246872941 [(.yext.schemapath) = "/components/component/transceiver/state/vendor-part"];
      case 246872941: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 1974983530 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vendor_part()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue enabled = 252306382 [(.yext.schemapath) = "/components/component/transceiver/state/enabled"];
      case 252306382: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 2018451058 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_enabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigTransportTypesFIBERCONNECTORTYPE connector_type = 252758609 [(.yext.schemapath) = "/components/component/transceiver/state/connector-type"];
      case 252758609: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 2022068872 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_connector_type(static_cast< ::openconfig::enums::OpenconfigTransportTypesFIBERCONNECTORTYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigTransportTypesOTNAPPLICATIONCODE otn_compliance_code = 302597810 [(.yext.schemapath) = "/components/component/transceiver/state/otn-compliance-code"];
      case 302597810: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 2420782480 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_otn_compliance_code(static_cast< ::openconfig::enums::OpenconfigTransportTypesOTNAPPLICATIONCODE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue date_code = 323636967 [(.yext.schemapath) = "/components/component/transceiver/state/date-code"];
      case 323636967: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 2589095738 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_date_code()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigTransportTypesSONETAPPLICATIONCODE sonet_sdh_compliance_code = 354799300 [(.yext.schemapath) = "/components/component/transceiver/state/sonet-sdh-compliance-code"];
      case 354799300: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 2838394400 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_sonet_sdh_compliance_code(static_cast< ::openconfig::enums::OpenconfigTransportTypesSONETAPPLICATIONCODE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigTransportTypesETHERNETPMDTYPE ethernet_pmd = 416980802 [(.yext.schemapath) = "/components/component/transceiver/state/ethernet-pmd"];
      case 416980802: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 3335846416 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ethernet_pmd(static_cast< ::openconfig::enums::OpenconfigTransportTypesETHERNETPMDTYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent laser_bias_current = 422928146 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current"];
      case 422928146: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 3383425170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_laser_bias_current()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigTransportTypesETHERNETPMDTYPE ethernet_pmd_preconf = 424376104 [(.yext.schemapath) = "/components/component/transceiver/state/ethernet-pmd-preconf"];
      case 424376104: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 3395008832 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ethernet_pmd_preconf(static_cast< ::openconfig::enums::OpenconfigTransportTypesETHERNETPMDTYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE form_factor_preconf = 518555017 [(.yext.schemapath) = "/components/component/transceiver/state/form-factor-preconf"];
      case 518555017: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 4148440136 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_form_factor_preconf(static_cast< ::openconfig::enums::OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Transceiver.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Transceiver.State)
  return false;
#undef DO_
}

void Components_Component_Transceiver_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Transceiver.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE form_factor = 11627927 [(.yext.schemapath) = "/components/component/transceiver/state/form-factor"];
  if (this->form_factor() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11627927, this->form_factor(), output);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower input_power = 41561605 [(.yext.schemapath) = "/components/component/transceiver/state/input-power"];
  if (this->has_input_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      41561605, *this->input_power_, output);
  }

  // .ywrapper.StringValue serial_no = 48331837 [(.yext.schemapath) = "/components/component/transceiver/state/serial-no"];
  if (this->has_serial_no()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      48331837, *this->serial_no_, output);
  }

  // .ywrapper.StringValue vendor_rev = 62133637 [(.yext.schemapath) = "/components/component/transceiver/state/vendor-rev"];
  if (this->has_vendor_rev()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      62133637, *this->vendor_rev_, output);
  }

  // .ywrapper.BoolValue fault_condition = 66972341 [(.yext.schemapath) = "/components/component/transceiver/state/fault-condition"];
  if (this->has_fault_condition()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      66972341, *this->fault_condition_, output);
  }

  // .ywrapper.IntValue internal_temp = 109715519 [(.yext.schemapath) = "/components/component/transceiver/state/internal-temp"];
  if (this->has_internal_temp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      109715519, *this->internal_temp_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.State.Present present = 171782640 [(.yext.schemapath) = "/components/component/transceiver/state/present"];
  if (this->present() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      171782640, this->present(), output);
  }

  // .ywrapper.StringValue vendor = 186283901 [(.yext.schemapath) = "/components/component/transceiver/state/vendor"];
  if (this->has_vendor()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      186283901, *this->vendor_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower output_power = 242740240 [(.yext.schemapath) = "/components/component/transceiver/state/output-power"];
  if (this->has_output_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      242740240, *this->output_power_, output);
  }

  // .ywrapper.StringValue vendor_part = 246872941 [(.yext.schemapath) = "/components/component/transceiver/state/vendor-part"];
  if (this->has_vendor_part()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      246872941, *this->vendor_part_, output);
  }

  // .ywrapper.BoolValue enabled = 252306382 [(.yext.schemapath) = "/components/component/transceiver/state/enabled"];
  if (this->has_enabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      252306382, *this->enabled_, output);
  }

  // .openconfig.enums.OpenconfigTransportTypesFIBERCONNECTORTYPE connector_type = 252758609 [(.yext.schemapath) = "/components/component/transceiver/state/connector-type"];
  if (this->connector_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      252758609, this->connector_type(), output);
  }

  // .openconfig.enums.OpenconfigTransportTypesOTNAPPLICATIONCODE otn_compliance_code = 302597810 [(.yext.schemapath) = "/components/component/transceiver/state/otn-compliance-code"];
  if (this->otn_compliance_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      302597810, this->otn_compliance_code(), output);
  }

  // .ywrapper.StringValue date_code = 323636967 [(.yext.schemapath) = "/components/component/transceiver/state/date-code"];
  if (this->has_date_code()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      323636967, *this->date_code_, output);
  }

  // .openconfig.enums.OpenconfigTransportTypesSONETAPPLICATIONCODE sonet_sdh_compliance_code = 354799300 [(.yext.schemapath) = "/components/component/transceiver/state/sonet-sdh-compliance-code"];
  if (this->sonet_sdh_compliance_code() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      354799300, this->sonet_sdh_compliance_code(), output);
  }

  // .openconfig.enums.OpenconfigTransportTypesETHERNETPMDTYPE ethernet_pmd = 416980802 [(.yext.schemapath) = "/components/component/transceiver/state/ethernet-pmd"];
  if (this->ethernet_pmd() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      416980802, this->ethernet_pmd(), output);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent laser_bias_current = 422928146 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current"];
  if (this->has_laser_bias_current()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      422928146, *this->laser_bias_current_, output);
  }

  // .openconfig.enums.OpenconfigTransportTypesETHERNETPMDTYPE ethernet_pmd_preconf = 424376104 [(.yext.schemapath) = "/components/component/transceiver/state/ethernet-pmd-preconf"];
  if (this->ethernet_pmd_preconf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      424376104, this->ethernet_pmd_preconf(), output);
  }

  // .openconfig.enums.OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE form_factor_preconf = 518555017 [(.yext.schemapath) = "/components/component/transceiver/state/form-factor-preconf"];
  if (this->form_factor_preconf() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      518555017, this->form_factor_preconf(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Transceiver.State)
}

::google::protobuf::uint8* Components_Component_Transceiver_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Transceiver.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE form_factor = 11627927 [(.yext.schemapath) = "/components/component/transceiver/state/form-factor"];
  if (this->form_factor() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11627927, this->form_factor(), target);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower input_power = 41561605 [(.yext.schemapath) = "/components/component/transceiver/state/input-power"];
  if (this->has_input_power()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        41561605, *this->input_power_, deterministic, target);
  }

  // .ywrapper.StringValue serial_no = 48331837 [(.yext.schemapath) = "/components/component/transceiver/state/serial-no"];
  if (this->has_serial_no()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        48331837, *this->serial_no_, deterministic, target);
  }

  // .ywrapper.StringValue vendor_rev = 62133637 [(.yext.schemapath) = "/components/component/transceiver/state/vendor-rev"];
  if (this->has_vendor_rev()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        62133637, *this->vendor_rev_, deterministic, target);
  }

  // .ywrapper.BoolValue fault_condition = 66972341 [(.yext.schemapath) = "/components/component/transceiver/state/fault-condition"];
  if (this->has_fault_condition()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        66972341, *this->fault_condition_, deterministic, target);
  }

  // .ywrapper.IntValue internal_temp = 109715519 [(.yext.schemapath) = "/components/component/transceiver/state/internal-temp"];
  if (this->has_internal_temp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        109715519, *this->internal_temp_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.State.Present present = 171782640 [(.yext.schemapath) = "/components/component/transceiver/state/present"];
  if (this->present() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      171782640, this->present(), target);
  }

  // .ywrapper.StringValue vendor = 186283901 [(.yext.schemapath) = "/components/component/transceiver/state/vendor"];
  if (this->has_vendor()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        186283901, *this->vendor_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower output_power = 242740240 [(.yext.schemapath) = "/components/component/transceiver/state/output-power"];
  if (this->has_output_power()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        242740240, *this->output_power_, deterministic, target);
  }

  // .ywrapper.StringValue vendor_part = 246872941 [(.yext.schemapath) = "/components/component/transceiver/state/vendor-part"];
  if (this->has_vendor_part()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        246872941, *this->vendor_part_, deterministic, target);
  }

  // .ywrapper.BoolValue enabled = 252306382 [(.yext.schemapath) = "/components/component/transceiver/state/enabled"];
  if (this->has_enabled()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        252306382, *this->enabled_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigTransportTypesFIBERCONNECTORTYPE connector_type = 252758609 [(.yext.schemapath) = "/components/component/transceiver/state/connector-type"];
  if (this->connector_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      252758609, this->connector_type(), target);
  }

  // .openconfig.enums.OpenconfigTransportTypesOTNAPPLICATIONCODE otn_compliance_code = 302597810 [(.yext.schemapath) = "/components/component/transceiver/state/otn-compliance-code"];
  if (this->otn_compliance_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      302597810, this->otn_compliance_code(), target);
  }

  // .ywrapper.StringValue date_code = 323636967 [(.yext.schemapath) = "/components/component/transceiver/state/date-code"];
  if (this->has_date_code()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        323636967, *this->date_code_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigTransportTypesSONETAPPLICATIONCODE sonet_sdh_compliance_code = 354799300 [(.yext.schemapath) = "/components/component/transceiver/state/sonet-sdh-compliance-code"];
  if (this->sonet_sdh_compliance_code() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      354799300, this->sonet_sdh_compliance_code(), target);
  }

  // .openconfig.enums.OpenconfigTransportTypesETHERNETPMDTYPE ethernet_pmd = 416980802 [(.yext.schemapath) = "/components/component/transceiver/state/ethernet-pmd"];
  if (this->ethernet_pmd() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      416980802, this->ethernet_pmd(), target);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent laser_bias_current = 422928146 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current"];
  if (this->has_laser_bias_current()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        422928146, *this->laser_bias_current_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigTransportTypesETHERNETPMDTYPE ethernet_pmd_preconf = 424376104 [(.yext.schemapath) = "/components/component/transceiver/state/ethernet-pmd-preconf"];
  if (this->ethernet_pmd_preconf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      424376104, this->ethernet_pmd_preconf(), target);
  }

  // .openconfig.enums.OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE form_factor_preconf = 518555017 [(.yext.schemapath) = "/components/component/transceiver/state/form-factor-preconf"];
  if (this->form_factor_preconf() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      518555017, this->form_factor_preconf(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Transceiver.State)
  return target;
}

size_t Components_Component_Transceiver_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Transceiver.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_platform.Components.Component.Transceiver.State.InputPower input_power = 41561605 [(.yext.schemapath) = "/components/component/transceiver/state/input-power"];
  if (this->has_input_power()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->input_power_);
  }

  // .ywrapper.StringValue serial_no = 48331837 [(.yext.schemapath) = "/components/component/transceiver/state/serial-no"];
  if (this->has_serial_no()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->serial_no_);
  }

  // .ywrapper.StringValue vendor_rev = 62133637 [(.yext.schemapath) = "/components/component/transceiver/state/vendor-rev"];
  if (this->has_vendor_rev()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->vendor_rev_);
  }

  // .ywrapper.BoolValue fault_condition = 66972341 [(.yext.schemapath) = "/components/component/transceiver/state/fault-condition"];
  if (this->has_fault_condition()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->fault_condition_);
  }

  // .ywrapper.IntValue internal_temp = 109715519 [(.yext.schemapath) = "/components/component/transceiver/state/internal-temp"];
  if (this->has_internal_temp()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->internal_temp_);
  }

  // .ywrapper.StringValue vendor = 186283901 [(.yext.schemapath) = "/components/component/transceiver/state/vendor"];
  if (this->has_vendor()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->vendor_);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.State.OutputPower output_power = 242740240 [(.yext.schemapath) = "/components/component/transceiver/state/output-power"];
  if (this->has_output_power()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->output_power_);
  }

  // .ywrapper.StringValue vendor_part = 246872941 [(.yext.schemapath) = "/components/component/transceiver/state/vendor-part"];
  if (this->has_vendor_part()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->vendor_part_);
  }

  // .ywrapper.BoolValue enabled = 252306382 [(.yext.schemapath) = "/components/component/transceiver/state/enabled"];
  if (this->has_enabled()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->enabled_);
  }

  // .ywrapper.StringValue date_code = 323636967 [(.yext.schemapath) = "/components/component/transceiver/state/date-code"];
  if (this->has_date_code()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->date_code_);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.State.LaserBiasCurrent laser_bias_current = 422928146 [(.yext.schemapath) = "/components/component/transceiver/state/laser-bias-current"];
  if (this->has_laser_bias_current()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->laser_bias_current_);
  }

  // .openconfig.enums.OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE form_factor = 11627927 [(.yext.schemapath) = "/components/component/transceiver/state/form-factor"];
  if (this->form_factor() != 0) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->form_factor());
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.State.Present present = 171782640 [(.yext.schemapath) = "/components/component/transceiver/state/present"];
  if (this->present() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->present());
  }

  // .openconfig.enums.OpenconfigTransportTypesFIBERCONNECTORTYPE connector_type = 252758609 [(.yext.schemapath) = "/components/component/transceiver/state/connector-type"];
  if (this->connector_type() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->connector_type());
  }

  // .openconfig.enums.OpenconfigTransportTypesOTNAPPLICATIONCODE otn_compliance_code = 302597810 [(.yext.schemapath) = "/components/component/transceiver/state/otn-compliance-code"];
  if (this->otn_compliance_code() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->otn_compliance_code());
  }

  // .openconfig.enums.OpenconfigTransportTypesSONETAPPLICATIONCODE sonet_sdh_compliance_code = 354799300 [(.yext.schemapath) = "/components/component/transceiver/state/sonet-sdh-compliance-code"];
  if (this->sonet_sdh_compliance_code() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->sonet_sdh_compliance_code());
  }

  // .openconfig.enums.OpenconfigTransportTypesETHERNETPMDTYPE ethernet_pmd = 416980802 [(.yext.schemapath) = "/components/component/transceiver/state/ethernet-pmd"];
  if (this->ethernet_pmd() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ethernet_pmd());
  }

  // .openconfig.enums.OpenconfigTransportTypesETHERNETPMDTYPE ethernet_pmd_preconf = 424376104 [(.yext.schemapath) = "/components/component/transceiver/state/ethernet-pmd-preconf"];
  if (this->ethernet_pmd_preconf() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->ethernet_pmd_preconf());
  }

  // .openconfig.enums.OpenconfigTransportTypesTRANSCEIVERFORMFACTORTYPE form_factor_preconf = 518555017 [(.yext.schemapath) = "/components/component/transceiver/state/form-factor-preconf"];
  if (this->form_factor_preconf() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->form_factor_preconf());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Transceiver_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Transceiver_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Transceiver_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Transceiver.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Transceiver.State)
    MergeFrom(*source);
  }
}

void Components_Component_Transceiver_State::MergeFrom(const Components_Component_Transceiver_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_input_power()) {
    mutable_input_power()->::openconfig::openconfig_platform::Components_Component_Transceiver_State_InputPower::MergeFrom(from.input_power());
  }
  if (from.has_serial_no()) {
    mutable_serial_no()->::ywrapper::StringValue::MergeFrom(from.serial_no());
  }
  if (from.has_vendor_rev()) {
    mutable_vendor_rev()->::ywrapper::StringValue::MergeFrom(from.vendor_rev());
  }
  if (from.has_fault_condition()) {
    mutable_fault_condition()->::ywrapper::BoolValue::MergeFrom(from.fault_condition());
  }
  if (from.has_internal_temp()) {
    mutable_internal_temp()->::ywrapper::IntValue::MergeFrom(from.internal_temp());
  }
  if (from.has_vendor()) {
    mutable_vendor()->::ywrapper::StringValue::MergeFrom(from.vendor());
  }
  if (from.has_output_power()) {
    mutable_output_power()->::openconfig::openconfig_platform::Components_Component_Transceiver_State_OutputPower::MergeFrom(from.output_power());
  }
  if (from.has_vendor_part()) {
    mutable_vendor_part()->::ywrapper::StringValue::MergeFrom(from.vendor_part());
  }
  if (from.has_enabled()) {
    mutable_enabled()->::ywrapper::BoolValue::MergeFrom(from.enabled());
  }
  if (from.has_date_code()) {
    mutable_date_code()->::ywrapper::StringValue::MergeFrom(from.date_code());
  }
  if (from.has_laser_bias_current()) {
    mutable_laser_bias_current()->::openconfig::openconfig_platform::Components_Component_Transceiver_State_LaserBiasCurrent::MergeFrom(from.laser_bias_current());
  }
  if (from.form_factor() != 0) {
    set_form_factor(from.form_factor());
  }
  if (from.present() != 0) {
    set_present(from.present());
  }
  if (from.connector_type() != 0) {
    set_connector_type(from.connector_type());
  }
  if (from.otn_compliance_code() != 0) {
    set_otn_compliance_code(from.otn_compliance_code());
  }
  if (from.sonet_sdh_compliance_code() != 0) {
    set_sonet_sdh_compliance_code(from.sonet_sdh_compliance_code());
  }
  if (from.ethernet_pmd() != 0) {
    set_ethernet_pmd(from.ethernet_pmd());
  }
  if (from.ethernet_pmd_preconf() != 0) {
    set_ethernet_pmd_preconf(from.ethernet_pmd_preconf());
  }
  if (from.form_factor_preconf() != 0) {
    set_form_factor_preconf(from.form_factor_preconf());
  }
}

void Components_Component_Transceiver_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Transceiver_State::CopyFrom(const Components_Component_Transceiver_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Transceiver_State::IsInitialized() const {
  return true;
}

void Components_Component_Transceiver_State::Swap(Components_Component_Transceiver_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Transceiver_State::InternalSwap(Components_Component_Transceiver_State* other) {
  using std::swap;
  swap(input_power_, other->input_power_);
  swap(serial_no_, other->serial_no_);
  swap(vendor_rev_, other->vendor_rev_);
  swap(fault_condition_, other->fault_condition_);
  swap(internal_temp_, other->internal_temp_);
  swap(vendor_, other->vendor_);
  swap(output_power_, other->output_power_);
  swap(vendor_part_, other->vendor_part_);
  swap(enabled_, other->enabled_);
  swap(date_code_, other->date_code_);
  swap(laser_bias_current_, other->laser_bias_current_);
  swap(form_factor_, other->form_factor_);
  swap(present_, other->present_);
  swap(connector_type_, other->connector_type_);
  swap(otn_compliance_code_, other->otn_compliance_code_);
  swap(sonet_sdh_compliance_code_, other->sonet_sdh_compliance_code_);
  swap(ethernet_pmd_, other->ethernet_pmd_);
  swap(ethernet_pmd_preconf_, other->ethernet_pmd_preconf_);
  swap(form_factor_preconf_, other->form_factor_preconf_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Transceiver_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component_Transceiver::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Transceiver_Config*>(
      ::openconfig::openconfig_platform::Components_Component_Transceiver_Config::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_default_instance_._instance.get_mutable()->physical_channels_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels*>(
      ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_Transceiver_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Transceiver_State*>(
      ::openconfig::openconfig_platform::Components_Component_Transceiver_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component_Transceiver::kConfigFieldNumber;
const int Components_Component_Transceiver::kPhysicalChannelsFieldNumber;
const int Components_Component_Transceiver::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component_Transceiver::Components_Component_Transceiver()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component.Transceiver)
}
Components_Component_Transceiver::Components_Component_Transceiver(const Components_Component_Transceiver& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_physical_channels()) {
    physical_channels_ = new ::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels(*from.physical_channels_);
  } else {
    physical_channels_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_Transceiver_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Transceiver_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component.Transceiver)
}

void Components_Component_Transceiver::SharedCtor() {
  ::memset(&physical_channels_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&physical_channels_)) + sizeof(config_));
  _cached_size_ = 0;
}

Components_Component_Transceiver::~Components_Component_Transceiver() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component.Transceiver)
  SharedDtor();
}

void Components_Component_Transceiver::SharedDtor() {
  if (this != internal_default_instance()) delete physical_channels_;
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
}

void Components_Component_Transceiver::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component_Transceiver::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component_Transceiver& Components_Component_Transceiver::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component_Transceiver();
  return *internal_default_instance();
}

Components_Component_Transceiver* Components_Component_Transceiver::New(::google::protobuf::Arena* arena) const {
  Components_Component_Transceiver* n = new Components_Component_Transceiver;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component_Transceiver::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component.Transceiver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && physical_channels_ != NULL) {
    delete physical_channels_;
  }
  physical_channels_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component_Transceiver::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component.Transceiver)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4258782426u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels physical_channels = 144337163 [(.yext.schemapath) = "/components/component/transceiver/physical-channels"];
      case 144337163: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 1154697306 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_physical_channels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Transceiver.State state = 171036572 [(.yext.schemapath) = "/components/component/transceiver/state"];
      case 171036572: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 1368292578 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Transceiver.Config config = 532347803 [(.yext.schemapath) = "/components/component/transceiver/config"];
      case 532347803: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 4258782426 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component.Transceiver)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component.Transceiver)
  return false;
#undef DO_
}

void Components_Component_Transceiver::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component.Transceiver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels physical_channels = 144337163 [(.yext.schemapath) = "/components/component/transceiver/physical-channels"];
  if (this->has_physical_channels()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      144337163, *this->physical_channels_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.State state = 171036572 [(.yext.schemapath) = "/components/component/transceiver/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      171036572, *this->state_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.Config config = 532347803 [(.yext.schemapath) = "/components/component/transceiver/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      532347803, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component.Transceiver)
}

::google::protobuf::uint8* Components_Component_Transceiver::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component.Transceiver)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels physical_channels = 144337163 [(.yext.schemapath) = "/components/component/transceiver/physical-channels"];
  if (this->has_physical_channels()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        144337163, *this->physical_channels_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.State state = 171036572 [(.yext.schemapath) = "/components/component/transceiver/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        171036572, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.Config config = 532347803 [(.yext.schemapath) = "/components/component/transceiver/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        532347803, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component.Transceiver)
  return target;
}

size_t Components_Component_Transceiver::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component.Transceiver)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_platform.Components.Component.Transceiver.PhysicalChannels physical_channels = 144337163 [(.yext.schemapath) = "/components/component/transceiver/physical-channels"];
  if (this->has_physical_channels()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->physical_channels_);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.State state = 171036572 [(.yext.schemapath) = "/components/component/transceiver/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver.Config config = 532347803 [(.yext.schemapath) = "/components/component/transceiver/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component_Transceiver::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component_Transceiver* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component_Transceiver>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component.Transceiver)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component.Transceiver)
    MergeFrom(*source);
  }
}

void Components_Component_Transceiver::MergeFrom(const Components_Component_Transceiver& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component.Transceiver)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_physical_channels()) {
    mutable_physical_channels()->::openconfig::openconfig_platform::Components_Component_Transceiver_PhysicalChannels::MergeFrom(from.physical_channels());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_platform::Components_Component_Transceiver_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_platform::Components_Component_Transceiver_Config::MergeFrom(from.config());
  }
}

void Components_Component_Transceiver::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component_Transceiver::CopyFrom(const Components_Component_Transceiver& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component.Transceiver)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component_Transceiver::IsInitialized() const {
  return true;
}

void Components_Component_Transceiver::Swap(Components_Component_Transceiver* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component_Transceiver::InternalSwap(Components_Component_Transceiver* other) {
  using std::swap;
  swap(physical_channels_, other->physical_channels_);
  swap(state_, other->state_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component_Transceiver::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_Component::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_Component_default_instance_._instance.get_mutable()->backplane_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Backplane*>(
      ::openconfig::openconfig_platform::Components_Component_Backplane::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_default_instance_._instance.get_mutable()->chassis_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Chassis*>(
      ::openconfig::openconfig_platform::Components_Component_Chassis::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Config*>(
      ::openconfig::openconfig_platform::Components_Component_Config::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_default_instance_._instance.get_mutable()->cpu_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Cpu*>(
      ::openconfig::openconfig_platform::Components_Component_Cpu::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_default_instance_._instance.get_mutable()->fabric_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Fabric*>(
      ::openconfig::openconfig_platform::Components_Component_Fabric::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_default_instance_._instance.get_mutable()->fan_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Fan*>(
      ::openconfig::openconfig_platform::Components_Component_Fan::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_default_instance_._instance.get_mutable()->integrated_circuit_ = const_cast< ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit*>(
      ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_default_instance_._instance.get_mutable()->linecard_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Linecard*>(
      ::openconfig::openconfig_platform::Components_Component_Linecard::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_default_instance_._instance.get_mutable()->optical_channel_ = const_cast< ::openconfig::openconfig_platform::Components_Component_OpticalChannel*>(
      ::openconfig::openconfig_platform::Components_Component_OpticalChannel::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_default_instance_._instance.get_mutable()->optical_port_ = const_cast< ::openconfig::openconfig_platform::Components_Component_OpticalPort*>(
      ::openconfig::openconfig_platform::Components_Component_OpticalPort::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_default_instance_._instance.get_mutable()->port_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Port*>(
      ::openconfig::openconfig_platform::Components_Component_Port::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_default_instance_._instance.get_mutable()->power_supply_ = const_cast< ::openconfig::openconfig_platform::Components_Component_PowerSupply*>(
      ::openconfig::openconfig_platform::Components_Component_PowerSupply::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_default_instance_._instance.get_mutable()->properties_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Properties*>(
      ::openconfig::openconfig_platform::Components_Component_Properties::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_platform::Components_Component_State*>(
      ::openconfig::openconfig_platform::Components_Component_State::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_default_instance_._instance.get_mutable()->storage_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Storage*>(
      ::openconfig::openconfig_platform::Components_Component_Storage::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_default_instance_._instance.get_mutable()->subcomponents_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Subcomponents*>(
      ::openconfig::openconfig_platform::Components_Component_Subcomponents::internal_default_instance());
  ::openconfig::openconfig_platform::_Components_Component_default_instance_._instance.get_mutable()->transceiver_ = const_cast< ::openconfig::openconfig_platform::Components_Component_Transceiver*>(
      ::openconfig::openconfig_platform::Components_Component_Transceiver::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_Component::kBackplaneFieldNumber;
const int Components_Component::kChassisFieldNumber;
const int Components_Component::kConfigFieldNumber;
const int Components_Component::kCpuFieldNumber;
const int Components_Component::kFabricFieldNumber;
const int Components_Component::kFanFieldNumber;
const int Components_Component::kIntegratedCircuitFieldNumber;
const int Components_Component::kLinecardFieldNumber;
const int Components_Component::kOpticalChannelFieldNumber;
const int Components_Component::kOpticalPortFieldNumber;
const int Components_Component::kPortFieldNumber;
const int Components_Component::kPowerSupplyFieldNumber;
const int Components_Component::kPropertiesFieldNumber;
const int Components_Component::kStateFieldNumber;
const int Components_Component::kStorageFieldNumber;
const int Components_Component::kSubcomponentsFieldNumber;
const int Components_Component::kTransceiverFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_Component::Components_Component()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.Component)
}
Components_Component::Components_Component(const Components_Component& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_linecard()) {
    linecard_ = new ::openconfig::openconfig_platform::Components_Component_Linecard(*from.linecard_);
  } else {
    linecard_ = NULL;
  }
  if (from.has_backplane()) {
    backplane_ = new ::openconfig::openconfig_platform::Components_Component_Backplane(*from.backplane_);
  } else {
    backplane_ = NULL;
  }
  if (from.has_transceiver()) {
    transceiver_ = new ::openconfig::openconfig_platform::Components_Component_Transceiver(*from.transceiver_);
  } else {
    transceiver_ = NULL;
  }
  if (from.has_cpu()) {
    cpu_ = new ::openconfig::openconfig_platform::Components_Component_Cpu(*from.cpu_);
  } else {
    cpu_ = NULL;
  }
  if (from.has_fabric()) {
    fabric_ = new ::openconfig::openconfig_platform::Components_Component_Fabric(*from.fabric_);
  } else {
    fabric_ = NULL;
  }
  if (from.has_optical_port()) {
    optical_port_ = new ::openconfig::openconfig_platform::Components_Component_OpticalPort(*from.optical_port_);
  } else {
    optical_port_ = NULL;
  }
  if (from.has_properties()) {
    properties_ = new ::openconfig::openconfig_platform::Components_Component_Properties(*from.properties_);
  } else {
    properties_ = NULL;
  }
  if (from.has_fan()) {
    fan_ = new ::openconfig::openconfig_platform::Components_Component_Fan(*from.fan_);
  } else {
    fan_ = NULL;
  }
  if (from.has_chassis()) {
    chassis_ = new ::openconfig::openconfig_platform::Components_Component_Chassis(*from.chassis_);
  } else {
    chassis_ = NULL;
  }
  if (from.has_integrated_circuit()) {
    integrated_circuit_ = new ::openconfig::openconfig_platform::Components_Component_IntegratedCircuit(*from.integrated_circuit_);
  } else {
    integrated_circuit_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_platform::Components_Component_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_subcomponents()) {
    subcomponents_ = new ::openconfig::openconfig_platform::Components_Component_Subcomponents(*from.subcomponents_);
  } else {
    subcomponents_ = NULL;
  }
  if (from.has_storage()) {
    storage_ = new ::openconfig::openconfig_platform::Components_Component_Storage(*from.storage_);
  } else {
    storage_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_platform::Components_Component_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_power_supply()) {
    power_supply_ = new ::openconfig::openconfig_platform::Components_Component_PowerSupply(*from.power_supply_);
  } else {
    power_supply_ = NULL;
  }
  if (from.has_optical_channel()) {
    optical_channel_ = new ::openconfig::openconfig_platform::Components_Component_OpticalChannel(*from.optical_channel_);
  } else {
    optical_channel_ = NULL;
  }
  if (from.has_port()) {
    port_ = new ::openconfig::openconfig_platform::Components_Component_Port(*from.port_);
  } else {
    port_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.Component)
}

void Components_Component::SharedCtor() {
  ::memset(&linecard_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&linecard_)) + sizeof(port_));
  _cached_size_ = 0;
}

Components_Component::~Components_Component() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.Component)
  SharedDtor();
}

void Components_Component::SharedDtor() {
  if (this != internal_default_instance()) delete linecard_;
  if (this != internal_default_instance()) delete backplane_;
  if (this != internal_default_instance()) delete transceiver_;
  if (this != internal_default_instance()) delete cpu_;
  if (this != internal_default_instance()) delete fabric_;
  if (this != internal_default_instance()) delete optical_port_;
  if (this != internal_default_instance()) delete properties_;
  if (this != internal_default_instance()) delete fan_;
  if (this != internal_default_instance()) delete chassis_;
  if (this != internal_default_instance()) delete integrated_circuit_;
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete subcomponents_;
  if (this != internal_default_instance()) delete storage_;
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete power_supply_;
  if (this != internal_default_instance()) delete optical_channel_;
  if (this != internal_default_instance()) delete port_;
}

void Components_Component::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_Component::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_Component& Components_Component::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_Component();
  return *internal_default_instance();
}

Components_Component* Components_Component::New(::google::protobuf::Arena* arena) const {
  Components_Component* n = new Components_Component;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_Component::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.Component)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && linecard_ != NULL) {
    delete linecard_;
  }
  linecard_ = NULL;
  if (GetArenaNoVirtual() == NULL && backplane_ != NULL) {
    delete backplane_;
  }
  backplane_ = NULL;
  if (GetArenaNoVirtual() == NULL && transceiver_ != NULL) {
    delete transceiver_;
  }
  transceiver_ = NULL;
  if (GetArenaNoVirtual() == NULL && cpu_ != NULL) {
    delete cpu_;
  }
  cpu_ = NULL;
  if (GetArenaNoVirtual() == NULL && fabric_ != NULL) {
    delete fabric_;
  }
  fabric_ = NULL;
  if (GetArenaNoVirtual() == NULL && optical_port_ != NULL) {
    delete optical_port_;
  }
  optical_port_ = NULL;
  if (GetArenaNoVirtual() == NULL && properties_ != NULL) {
    delete properties_;
  }
  properties_ = NULL;
  if (GetArenaNoVirtual() == NULL && fan_ != NULL) {
    delete fan_;
  }
  fan_ = NULL;
  if (GetArenaNoVirtual() == NULL && chassis_ != NULL) {
    delete chassis_;
  }
  chassis_ = NULL;
  if (GetArenaNoVirtual() == NULL && integrated_circuit_ != NULL) {
    delete integrated_circuit_;
  }
  integrated_circuit_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && subcomponents_ != NULL) {
    delete subcomponents_;
  }
  subcomponents_ = NULL;
  if (GetArenaNoVirtual() == NULL && storage_ != NULL) {
    delete storage_;
  }
  storage_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && power_supply_ != NULL) {
    delete power_supply_;
  }
  power_supply_ = NULL;
  if (GetArenaNoVirtual() == NULL && optical_channel_ != NULL) {
    delete optical_channel_;
  }
  optical_channel_ = NULL;
  if (GetArenaNoVirtual() == NULL && port_ != NULL) {
    delete port_;
  }
  port_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_Component::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.Component)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4235368650u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_platform.Components.Component.Linecard linecard = 18894832 [(.yext.schemapath) = "/components/component/linecard"];
      case 18894832: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 151158658 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_linecard()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Backplane backplane = 23572881 [(.yext.schemapath) = "/components/component/backplane"];
      case 23572881: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 188583050 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_backplane()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Transceiver transceiver = 40802250 [(.yext.schemapath) = "/components/component/transceiver"];
      case 40802250: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 326418002 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transceiver()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Cpu cpu = 60886558 [(.yext.schemapath) = "/components/component/cpu"];
      case 60886558: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 487092466 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cpu()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Fabric fabric = 101006771 [(.yext.schemapath) = "/components/component/fabric"];
      case 101006771: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 808054170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fabric()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.OpticalPort optical_port = 101313940 [(.yext.schemapath) = "/components/component/optical-port"];
      case 101313940: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 810511522 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optical_port()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Properties properties = 107529735 [(.yext.schemapath) = "/components/component/properties"];
      case 107529735: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 860237882 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_properties()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Fan fan = 111660679 [(.yext.schemapath) = "/components/component/fan"];
      case 111660679: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 893285434 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_fan()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Chassis chassis = 153681076 [(.yext.schemapath) = "/components/component/chassis"];
      case 153681076: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 1229448610 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_chassis()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.IntegratedCircuit integrated_circuit = 195631273 [(.yext.schemapath) = "/components/component/integrated-circuit"];
      case 195631273: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 1565050186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_integrated_circuit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.State state = 317480023 [(.yext.schemapath) = "/components/component/state"];
      case 317480023: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 2539840186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Subcomponents subcomponents = 374810450 [(.yext.schemapath) = "/components/component/subcomponents"];
      case 374810450: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 2998483602 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_subcomponents()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Storage storage = 403943259 [(.yext.schemapath) = "/components/component/storage"];
      case 403943259: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 3231546074 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_storage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Config config = 405956410 [(.yext.schemapath) = "/components/component/config"];
      case 405956410: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 3247651282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.PowerSupply power_supply = 438616709 [(.yext.schemapath) = "/components/component/power-supply"];
      case 438616709: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 3508933674 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_power_supply()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.OpticalChannel optical_channel = 465649934 [(.yext.schemapath) = "/components/component/optical-channel"];
      case 465649934: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 3725199474 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optical_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component.Port port = 529421081 [(.yext.schemapath) = "/components/component/port"];
      case 529421081: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 4235368650 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_port()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.Component)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.Component)
  return false;
#undef DO_
}

void Components_Component::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.Component)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Linecard linecard = 18894832 [(.yext.schemapath) = "/components/component/linecard"];
  if (this->has_linecard()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18894832, *this->linecard_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Backplane backplane = 23572881 [(.yext.schemapath) = "/components/component/backplane"];
  if (this->has_backplane()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      23572881, *this->backplane_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver transceiver = 40802250 [(.yext.schemapath) = "/components/component/transceiver"];
  if (this->has_transceiver()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40802250, *this->transceiver_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Cpu cpu = 60886558 [(.yext.schemapath) = "/components/component/cpu"];
  if (this->has_cpu()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      60886558, *this->cpu_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Fabric fabric = 101006771 [(.yext.schemapath) = "/components/component/fabric"];
  if (this->has_fabric()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      101006771, *this->fabric_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalPort optical_port = 101313940 [(.yext.schemapath) = "/components/component/optical-port"];
  if (this->has_optical_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      101313940, *this->optical_port_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Properties properties = 107529735 [(.yext.schemapath) = "/components/component/properties"];
  if (this->has_properties()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      107529735, *this->properties_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Fan fan = 111660679 [(.yext.schemapath) = "/components/component/fan"];
  if (this->has_fan()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      111660679, *this->fan_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Chassis chassis = 153681076 [(.yext.schemapath) = "/components/component/chassis"];
  if (this->has_chassis()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      153681076, *this->chassis_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.IntegratedCircuit integrated_circuit = 195631273 [(.yext.schemapath) = "/components/component/integrated-circuit"];
  if (this->has_integrated_circuit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      195631273, *this->integrated_circuit_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.State state = 317480023 [(.yext.schemapath) = "/components/component/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      317480023, *this->state_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Subcomponents subcomponents = 374810450 [(.yext.schemapath) = "/components/component/subcomponents"];
  if (this->has_subcomponents()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      374810450, *this->subcomponents_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Storage storage = 403943259 [(.yext.schemapath) = "/components/component/storage"];
  if (this->has_storage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      403943259, *this->storage_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Config config = 405956410 [(.yext.schemapath) = "/components/component/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      405956410, *this->config_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.PowerSupply power_supply = 438616709 [(.yext.schemapath) = "/components/component/power-supply"];
  if (this->has_power_supply()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      438616709, *this->power_supply_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel optical_channel = 465649934 [(.yext.schemapath) = "/components/component/optical-channel"];
  if (this->has_optical_channel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      465649934, *this->optical_channel_, output);
  }

  // .openconfig.openconfig_platform.Components.Component.Port port = 529421081 [(.yext.schemapath) = "/components/component/port"];
  if (this->has_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      529421081, *this->port_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.Component)
}

::google::protobuf::uint8* Components_Component::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.Component)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_platform.Components.Component.Linecard linecard = 18894832 [(.yext.schemapath) = "/components/component/linecard"];
  if (this->has_linecard()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18894832, *this->linecard_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Backplane backplane = 23572881 [(.yext.schemapath) = "/components/component/backplane"];
  if (this->has_backplane()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        23572881, *this->backplane_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver transceiver = 40802250 [(.yext.schemapath) = "/components/component/transceiver"];
  if (this->has_transceiver()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        40802250, *this->transceiver_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Cpu cpu = 60886558 [(.yext.schemapath) = "/components/component/cpu"];
  if (this->has_cpu()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        60886558, *this->cpu_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Fabric fabric = 101006771 [(.yext.schemapath) = "/components/component/fabric"];
  if (this->has_fabric()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        101006771, *this->fabric_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalPort optical_port = 101313940 [(.yext.schemapath) = "/components/component/optical-port"];
  if (this->has_optical_port()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        101313940, *this->optical_port_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Properties properties = 107529735 [(.yext.schemapath) = "/components/component/properties"];
  if (this->has_properties()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        107529735, *this->properties_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Fan fan = 111660679 [(.yext.schemapath) = "/components/component/fan"];
  if (this->has_fan()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        111660679, *this->fan_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Chassis chassis = 153681076 [(.yext.schemapath) = "/components/component/chassis"];
  if (this->has_chassis()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        153681076, *this->chassis_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.IntegratedCircuit integrated_circuit = 195631273 [(.yext.schemapath) = "/components/component/integrated-circuit"];
  if (this->has_integrated_circuit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        195631273, *this->integrated_circuit_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.State state = 317480023 [(.yext.schemapath) = "/components/component/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        317480023, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Subcomponents subcomponents = 374810450 [(.yext.schemapath) = "/components/component/subcomponents"];
  if (this->has_subcomponents()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        374810450, *this->subcomponents_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Storage storage = 403943259 [(.yext.schemapath) = "/components/component/storage"];
  if (this->has_storage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        403943259, *this->storage_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Config config = 405956410 [(.yext.schemapath) = "/components/component/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        405956410, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.PowerSupply power_supply = 438616709 [(.yext.schemapath) = "/components/component/power-supply"];
  if (this->has_power_supply()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        438616709, *this->power_supply_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel optical_channel = 465649934 [(.yext.schemapath) = "/components/component/optical-channel"];
  if (this->has_optical_channel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        465649934, *this->optical_channel_, deterministic, target);
  }

  // .openconfig.openconfig_platform.Components.Component.Port port = 529421081 [(.yext.schemapath) = "/components/component/port"];
  if (this->has_port()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        529421081, *this->port_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.Component)
  return target;
}

size_t Components_Component::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.Component)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_platform.Components.Component.Linecard linecard = 18894832 [(.yext.schemapath) = "/components/component/linecard"];
  if (this->has_linecard()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->linecard_);
  }

  // .openconfig.openconfig_platform.Components.Component.Backplane backplane = 23572881 [(.yext.schemapath) = "/components/component/backplane"];
  if (this->has_backplane()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->backplane_);
  }

  // .openconfig.openconfig_platform.Components.Component.Transceiver transceiver = 40802250 [(.yext.schemapath) = "/components/component/transceiver"];
  if (this->has_transceiver()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->transceiver_);
  }

  // .openconfig.openconfig_platform.Components.Component.Cpu cpu = 60886558 [(.yext.schemapath) = "/components/component/cpu"];
  if (this->has_cpu()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->cpu_);
  }

  // .openconfig.openconfig_platform.Components.Component.Fabric fabric = 101006771 [(.yext.schemapath) = "/components/component/fabric"];
  if (this->has_fabric()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->fabric_);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalPort optical_port = 101313940 [(.yext.schemapath) = "/components/component/optical-port"];
  if (this->has_optical_port()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->optical_port_);
  }

  // .openconfig.openconfig_platform.Components.Component.Properties properties = 107529735 [(.yext.schemapath) = "/components/component/properties"];
  if (this->has_properties()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->properties_);
  }

  // .openconfig.openconfig_platform.Components.Component.Fan fan = 111660679 [(.yext.schemapath) = "/components/component/fan"];
  if (this->has_fan()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->fan_);
  }

  // .openconfig.openconfig_platform.Components.Component.Chassis chassis = 153681076 [(.yext.schemapath) = "/components/component/chassis"];
  if (this->has_chassis()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->chassis_);
  }

  // .openconfig.openconfig_platform.Components.Component.IntegratedCircuit integrated_circuit = 195631273 [(.yext.schemapath) = "/components/component/integrated-circuit"];
  if (this->has_integrated_circuit()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->integrated_circuit_);
  }

  // .openconfig.openconfig_platform.Components.Component.State state = 317480023 [(.yext.schemapath) = "/components/component/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_platform.Components.Component.Subcomponents subcomponents = 374810450 [(.yext.schemapath) = "/components/component/subcomponents"];
  if (this->has_subcomponents()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->subcomponents_);
  }

  // .openconfig.openconfig_platform.Components.Component.Storage storage = 403943259 [(.yext.schemapath) = "/components/component/storage"];
  if (this->has_storage()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->storage_);
  }

  // .openconfig.openconfig_platform.Components.Component.Config config = 405956410 [(.yext.schemapath) = "/components/component/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_platform.Components.Component.PowerSupply power_supply = 438616709 [(.yext.schemapath) = "/components/component/power-supply"];
  if (this->has_power_supply()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->power_supply_);
  }

  // .openconfig.openconfig_platform.Components.Component.OpticalChannel optical_channel = 465649934 [(.yext.schemapath) = "/components/component/optical-channel"];
  if (this->has_optical_channel()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->optical_channel_);
  }

  // .openconfig.openconfig_platform.Components.Component.Port port = 529421081 [(.yext.schemapath) = "/components/component/port"];
  if (this->has_port()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->port_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_Component::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.Component)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_Component* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_Component>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.Component)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.Component)
    MergeFrom(*source);
  }
}

void Components_Component::MergeFrom(const Components_Component& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.Component)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_linecard()) {
    mutable_linecard()->::openconfig::openconfig_platform::Components_Component_Linecard::MergeFrom(from.linecard());
  }
  if (from.has_backplane()) {
    mutable_backplane()->::openconfig::openconfig_platform::Components_Component_Backplane::MergeFrom(from.backplane());
  }
  if (from.has_transceiver()) {
    mutable_transceiver()->::openconfig::openconfig_platform::Components_Component_Transceiver::MergeFrom(from.transceiver());
  }
  if (from.has_cpu()) {
    mutable_cpu()->::openconfig::openconfig_platform::Components_Component_Cpu::MergeFrom(from.cpu());
  }
  if (from.has_fabric()) {
    mutable_fabric()->::openconfig::openconfig_platform::Components_Component_Fabric::MergeFrom(from.fabric());
  }
  if (from.has_optical_port()) {
    mutable_optical_port()->::openconfig::openconfig_platform::Components_Component_OpticalPort::MergeFrom(from.optical_port());
  }
  if (from.has_properties()) {
    mutable_properties()->::openconfig::openconfig_platform::Components_Component_Properties::MergeFrom(from.properties());
  }
  if (from.has_fan()) {
    mutable_fan()->::openconfig::openconfig_platform::Components_Component_Fan::MergeFrom(from.fan());
  }
  if (from.has_chassis()) {
    mutable_chassis()->::openconfig::openconfig_platform::Components_Component_Chassis::MergeFrom(from.chassis());
  }
  if (from.has_integrated_circuit()) {
    mutable_integrated_circuit()->::openconfig::openconfig_platform::Components_Component_IntegratedCircuit::MergeFrom(from.integrated_circuit());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_platform::Components_Component_State::MergeFrom(from.state());
  }
  if (from.has_subcomponents()) {
    mutable_subcomponents()->::openconfig::openconfig_platform::Components_Component_Subcomponents::MergeFrom(from.subcomponents());
  }
  if (from.has_storage()) {
    mutable_storage()->::openconfig::openconfig_platform::Components_Component_Storage::MergeFrom(from.storage());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_platform::Components_Component_Config::MergeFrom(from.config());
  }
  if (from.has_power_supply()) {
    mutable_power_supply()->::openconfig::openconfig_platform::Components_Component_PowerSupply::MergeFrom(from.power_supply());
  }
  if (from.has_optical_channel()) {
    mutable_optical_channel()->::openconfig::openconfig_platform::Components_Component_OpticalChannel::MergeFrom(from.optical_channel());
  }
  if (from.has_port()) {
    mutable_port()->::openconfig::openconfig_platform::Components_Component_Port::MergeFrom(from.port());
  }
}

void Components_Component::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.Component)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_Component::CopyFrom(const Components_Component& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.Component)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_Component::IsInitialized() const {
  return true;
}

void Components_Component::Swap(Components_Component* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_Component::InternalSwap(Components_Component* other) {
  using std::swap;
  swap(linecard_, other->linecard_);
  swap(backplane_, other->backplane_);
  swap(transceiver_, other->transceiver_);
  swap(cpu_, other->cpu_);
  swap(fabric_, other->fabric_);
  swap(optical_port_, other->optical_port_);
  swap(properties_, other->properties_);
  swap(fan_, other->fan_);
  swap(chassis_, other->chassis_);
  swap(integrated_circuit_, other->integrated_circuit_);
  swap(state_, other->state_);
  swap(subcomponents_, other->subcomponents_);
  swap(storage_, other->storage_);
  swap(config_, other->config_);
  swap(power_supply_, other->power_supply_);
  swap(optical_channel_, other->optical_channel_);
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_Component::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components_ComponentKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_platform::_Components_ComponentKey_default_instance_._instance.get_mutable()->component_ = const_cast< ::openconfig::openconfig_platform::Components_Component*>(
      ::openconfig::openconfig_platform::Components_Component::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components_ComponentKey::kNameFieldNumber;
const int Components_ComponentKey::kComponentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components_ComponentKey::Components_ComponentKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_ComponentKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components.ComponentKey)
}
Components_ComponentKey::Components_ComponentKey(const Components_ComponentKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_component()) {
    component_ = new ::openconfig::openconfig_platform::Components_Component(*from.component_);
  } else {
    component_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components.ComponentKey)
}

void Components_ComponentKey::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  component_ = NULL;
  _cached_size_ = 0;
}

Components_ComponentKey::~Components_ComponentKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components.ComponentKey)
  SharedDtor();
}

void Components_ComponentKey::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete component_;
}

void Components_ComponentKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components_ComponentKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components_ComponentKey& Components_ComponentKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents_ComponentKey();
  return *internal_default_instance();
}

Components_ComponentKey* Components_ComponentKey::New(::google::protobuf::Arena* arena) const {
  Components_ComponentKey* n = new Components_ComponentKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components_ComponentKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components.ComponentKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && component_ != NULL) {
    delete component_;
  }
  component_ = NULL;
  _internal_metadata_.Clear();
}

bool Components_ComponentKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components.ComponentKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.yext.schemapath) = "/components/component/name"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "openconfig.openconfig_platform.Components.ComponentKey.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_platform.Components.Component component = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_component()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components.ComponentKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components.ComponentKey)
  return false;
#undef DO_
}

void Components_ComponentKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components.ComponentKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.yext.schemapath) = "/components/component/name"];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_platform.Components.ComponentKey.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .openconfig.openconfig_platform.Components.Component component = 2;
  if (this->has_component()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->component_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components.ComponentKey)
}

::google::protobuf::uint8* Components_ComponentKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components.ComponentKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.yext.schemapath) = "/components/component/name"];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_platform.Components.ComponentKey.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .openconfig.openconfig_platform.Components.Component component = 2;
  if (this->has_component()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->component_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components.ComponentKey)
  return target;
}

size_t Components_ComponentKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components.ComponentKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1 [(.yext.schemapath) = "/components/component/name"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .openconfig.openconfig_platform.Components.Component component = 2;
  if (this->has_component()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->component_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components_ComponentKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components.ComponentKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Components_ComponentKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components_ComponentKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components.ComponentKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components.ComponentKey)
    MergeFrom(*source);
  }
}

void Components_ComponentKey::MergeFrom(const Components_ComponentKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components.ComponentKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_component()) {
    mutable_component()->::openconfig::openconfig_platform::Components_Component::MergeFrom(from.component());
  }
}

void Components_ComponentKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components.ComponentKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components_ComponentKey::CopyFrom(const Components_ComponentKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components.ComponentKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components_ComponentKey::IsInitialized() const {
  return true;
}

void Components_ComponentKey::Swap(Components_ComponentKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components_ComponentKey::InternalSwap(Components_ComponentKey* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(component_, other->component_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components_ComponentKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Components::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Components::kComponentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Components::Components()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_platform.Components)
}
Components::Components(const Components& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      component_(from.component_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_platform.Components)
}

void Components::SharedCtor() {
  _cached_size_ = 0;
}

Components::~Components() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_platform.Components)
  SharedDtor();
}

void Components::SharedDtor() {
}

void Components::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Components::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Components& Components::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::InitDefaultsComponents();
  return *internal_default_instance();
}

Components* Components::New(::google::protobuf::Arena* arena) const {
  Components* n = new Components;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Components::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_platform.Components)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  component_.Clear();
  _internal_metadata_.Clear();
}

bool Components::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_platform.Components)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(411453610u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_platform.Components.ComponentKey component = 51431701 [(.yext.schemapath) = "/components/component"];
      case 51431701: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 411453610 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_component()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_platform.Components)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_platform.Components)
  return false;
#undef DO_
}

void Components::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_platform.Components)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_platform.Components.ComponentKey component = 51431701 [(.yext.schemapath) = "/components/component"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->component_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      51431701, this->component(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_platform.Components)
}

::google::protobuf::uint8* Components::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_platform.Components)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_platform.Components.ComponentKey component = 51431701 [(.yext.schemapath) = "/components/component"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->component_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        51431701, this->component(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_platform.Components)
  return target;
}

size_t Components::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_platform.Components)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_platform.Components.ComponentKey component = 51431701 [(.yext.schemapath) = "/components/component"];
  {
    unsigned int count = static_cast<unsigned int>(this->component_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->component(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Components::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_platform.Components)
  GOOGLE_DCHECK_NE(&from, this);
  const Components* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Components>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_platform.Components)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_platform.Components)
    MergeFrom(*source);
  }
}

void Components::MergeFrom(const Components& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_platform.Components)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  component_.MergeFrom(from.component_);
}

void Components::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_platform.Components)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Components::CopyFrom(const Components& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_platform.Components)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Components::IsInitialized() const {
  return true;
}

void Components::Swap(Components* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Components::InternalSwap(Components* other) {
  using std::swap;
  component_.InternalSwap(&other->component_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Components::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fplatform_2fopenconfig_5fplatform_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace openconfig_platform
}  // namespace openconfig

// @@protoc_insertion_point(global_scope)
