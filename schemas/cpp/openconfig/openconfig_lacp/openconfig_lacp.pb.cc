// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: openconfig/openconfig_lacp/openconfig_lacp.proto

#include "openconfig/openconfig_lacp/openconfig_lacp.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace openconfig {
namespace openconfig_lacp {
class Lacp_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Lacp_Config>
      _instance;
} _Lacp_Config_default_instance_;
class Lacp_Interfaces_Interface_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Lacp_Interfaces_Interface_Config>
      _instance;
} _Lacp_Interfaces_Interface_Config_default_instance_;
class Lacp_Interfaces_Interface_Members_Member_State_CountersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Lacp_Interfaces_Interface_Members_Member_State_Counters>
      _instance;
} _Lacp_Interfaces_Interface_Members_Member_State_Counters_default_instance_;
class Lacp_Interfaces_Interface_Members_Member_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Lacp_Interfaces_Interface_Members_Member_State>
      _instance;
} _Lacp_Interfaces_Interface_Members_Member_State_default_instance_;
class Lacp_Interfaces_Interface_Members_MemberDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Lacp_Interfaces_Interface_Members_Member>
      _instance;
} _Lacp_Interfaces_Interface_Members_Member_default_instance_;
class Lacp_Interfaces_Interface_Members_MemberKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Lacp_Interfaces_Interface_Members_MemberKey>
      _instance;
} _Lacp_Interfaces_Interface_Members_MemberKey_default_instance_;
class Lacp_Interfaces_Interface_MembersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Lacp_Interfaces_Interface_Members>
      _instance;
} _Lacp_Interfaces_Interface_Members_default_instance_;
class Lacp_Interfaces_Interface_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Lacp_Interfaces_Interface_State>
      _instance;
} _Lacp_Interfaces_Interface_State_default_instance_;
class Lacp_Interfaces_InterfaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Lacp_Interfaces_Interface>
      _instance;
} _Lacp_Interfaces_Interface_default_instance_;
class Lacp_Interfaces_InterfaceKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Lacp_Interfaces_InterfaceKey>
      _instance;
} _Lacp_Interfaces_InterfaceKey_default_instance_;
class Lacp_InterfacesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Lacp_Interfaces>
      _instance;
} _Lacp_Interfaces_default_instance_;
class Lacp_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Lacp_State>
      _instance;
} _Lacp_State_default_instance_;
class LacpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Lacp>
      _instance;
} _Lacp_default_instance_;
}  // namespace openconfig_lacp
}  // namespace openconfig
namespace protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto {
void InitDefaultsLacp_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_lacp::_Lacp_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_lacp::Lacp_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_lacp::Lacp_Config::InitAsDefaultInstance();
}

void InitDefaultsLacp_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLacp_ConfigImpl);
}

void InitDefaultsLacp_Interfaces_Interface_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Config::InitAsDefaultInstance();
}

void InitDefaultsLacp_Interfaces_Interface_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLacp_Interfaces_Interface_ConfigImpl);
}

void InitDefaultsLacp_Interfaces_Interface_Members_Member_State_CountersImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_Member_State_Counters_default_instance_;
    new (ptr) ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State_Counters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State_Counters::InitAsDefaultInstance();
}

void InitDefaultsLacp_Interfaces_Interface_Members_Member_State_Counters() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLacp_Interfaces_Interface_Members_Member_State_CountersImpl);
}

void InitDefaultsLacp_Interfaces_Interface_Members_Member_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBoolValue();
  protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces_Interface_Members_Member_State_Counters();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_Member_State_default_instance_;
    new (ptr) ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State::InitAsDefaultInstance();
}

void InitDefaultsLacp_Interfaces_Interface_Members_Member_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLacp_Interfaces_Interface_Members_Member_StateImpl);
}

void InitDefaultsLacp_Interfaces_Interface_Members_MemberImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces_Interface_Members_Member_State();
  {
    void* ptr = &::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_Member_default_instance_;
    new (ptr) ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member::InitAsDefaultInstance();
}

void InitDefaultsLacp_Interfaces_Interface_Members_Member() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLacp_Interfaces_Interface_Members_MemberImpl);
}

void InitDefaultsLacp_Interfaces_Interface_Members_MemberKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces_Interface_Members_Member();
  {
    void* ptr = &::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_MemberKey_default_instance_;
    new (ptr) ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_MemberKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_MemberKey::InitAsDefaultInstance();
}

void InitDefaultsLacp_Interfaces_Interface_Members_MemberKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLacp_Interfaces_Interface_Members_MemberKeyImpl);
}

void InitDefaultsLacp_Interfaces_Interface_MembersImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces_Interface_Members_MemberKey();
  {
    void* ptr = &::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_default_instance_;
    new (ptr) ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members::InitAsDefaultInstance();
}

void InitDefaultsLacp_Interfaces_Interface_Members() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLacp_Interfaces_Interface_MembersImpl);
}

void InitDefaultsLacp_Interfaces_Interface_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_State_default_instance_;
    new (ptr) ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_State::InitAsDefaultInstance();
}

void InitDefaultsLacp_Interfaces_Interface_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLacp_Interfaces_Interface_StateImpl);
}

void InitDefaultsLacp_Interfaces_InterfaceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces_Interface_Config();
  protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces_Interface_Members();
  protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces_Interface_State();
  {
    void* ptr = &::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_default_instance_;
    new (ptr) ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface::InitAsDefaultInstance();
}

void InitDefaultsLacp_Interfaces_Interface() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLacp_Interfaces_InterfaceImpl);
}

void InitDefaultsLacp_Interfaces_InterfaceKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces_Interface();
  {
    void* ptr = &::openconfig::openconfig_lacp::_Lacp_Interfaces_InterfaceKey_default_instance_;
    new (ptr) ::openconfig::openconfig_lacp::Lacp_Interfaces_InterfaceKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_lacp::Lacp_Interfaces_InterfaceKey::InitAsDefaultInstance();
}

void InitDefaultsLacp_Interfaces_InterfaceKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLacp_Interfaces_InterfaceKeyImpl);
}

void InitDefaultsLacp_InterfacesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces_InterfaceKey();
  {
    void* ptr = &::openconfig::openconfig_lacp::_Lacp_Interfaces_default_instance_;
    new (ptr) ::openconfig::openconfig_lacp::Lacp_Interfaces();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_lacp::Lacp_Interfaces::InitAsDefaultInstance();
}

void InitDefaultsLacp_Interfaces() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLacp_InterfacesImpl);
}

void InitDefaultsLacp_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_lacp::_Lacp_State_default_instance_;
    new (ptr) ::openconfig::openconfig_lacp::Lacp_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_lacp::Lacp_State::InitAsDefaultInstance();
}

void InitDefaultsLacp_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLacp_StateImpl);
}

void InitDefaultsLacpImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Config();
  protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces();
  protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_State();
  {
    void* ptr = &::openconfig::openconfig_lacp::_Lacp_default_instance_;
    new (ptr) ::openconfig::openconfig_lacp::Lacp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_lacp::Lacp::InitAsDefaultInstance();
}

void InitDefaultsLacp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsLacpImpl);
}

::google::protobuf::Metadata file_level_metadata[13];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Config, system_priority_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Config, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Config, lacp_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Config, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Config, system_id_mac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Config, system_priority_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State_Counters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State_Counters, lacp_errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State_Counters, lacp_in_pkts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State_Counters, lacp_out_pkts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State_Counters, lacp_rx_errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State_Counters, lacp_tx_errors_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State_Counters, lacp_unknown_errors_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State, activity_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State, aggregatable_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State, collecting_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State, counters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State, distributing_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State, interface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State, oper_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State, partner_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State, partner_key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State, partner_port_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State, port_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State, synchronization_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State, system_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State, timeout_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_MemberKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_MemberKey, interface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_MemberKey, member_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members, member_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_State, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_State, lacp_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_State, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_State, system_id_mac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_State, system_priority_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface, members_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_InterfaceKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_InterfaceKey, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces_InterfaceKey, interface_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_Interfaces, interface_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp_State, system_priority_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp, interfaces_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_lacp::Lacp, state_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::openconfig::openconfig_lacp::Lacp_Config)},
  { 6, -1, sizeof(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Config)},
  { 16, -1, sizeof(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State_Counters)},
  { 27, -1, sizeof(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State)},
  { 46, -1, sizeof(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member)},
  { 52, -1, sizeof(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_MemberKey)},
  { 59, -1, sizeof(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members)},
  { 65, -1, sizeof(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_State)},
  { 75, -1, sizeof(::openconfig::openconfig_lacp::Lacp_Interfaces_Interface)},
  { 83, -1, sizeof(::openconfig::openconfig_lacp::Lacp_Interfaces_InterfaceKey)},
  { 90, -1, sizeof(::openconfig::openconfig_lacp::Lacp_Interfaces)},
  { 96, -1, sizeof(::openconfig::openconfig_lacp::Lacp_State)},
  { 102, -1, sizeof(::openconfig::openconfig_lacp::Lacp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_lacp::_Lacp_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_Member_State_Counters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_Member_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_Member_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_MemberKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_lacp::_Lacp_Interfaces_InterfaceKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_lacp::_Lacp_Interfaces_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_lacp::_Lacp_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_lacp::_Lacp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "openconfig/openconfig_lacp/openconfig_lacp.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 13);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n0openconfig/openconfig_lacp/openconfig_"
      "lacp.proto\022\032openconfig.openconfig_lacp\0328"
      "github.com/openconfig/ygot/proto/ywrappe"
      "r/ywrapper.proto\0320github.com/openconfig/"
      "ygot/proto/yext/yext.proto\032\034openconfig/e"
      "nums/enums.proto\"\312\'\n\004Lacp\022L\n\006config\030\207\212\310\306"
      "\001 \001(\0132\'.openconfig.openconfig_lacp.Lacp."
      "ConfigB\017\202A\014/lacp/config\022X\n\ninterfaces\030\205\365"
      "\322\204\001 \001(\0132+.openconfig.openconfig_lacp.Lac"
      "p.InterfacesB\023\202A\020/lacp/interfaces\022I\n\005sta"
      "te\030\370\314\254\242\001 \001(\0132&.openconfig.openconfig_lac"
      "p.Lacp.StateB\016\202A\013/lacp/state\032Z\n\006Config\022P"
      "\n\017system_priority\030\276\314\216\" \001(\0132\023.ywrapper.Ui"
      "ntValueB\037\202A\034/lacp/config/system-priority"
      "\032\227$\n\nInterfaces\022m\n\tinterface\030\241\227\222e \003(\01328."
      "openconfig.openconfig_lacp.Lacp.Interfac"
      "es.InterfaceKeyB\035\202A\032/lacp/interfaces/int"
      "erface\032\214\"\n\tInterface\022t\n\006config\030\246\254\020 \001(\0132<"
      ".openconfig.openconfig_lacp.Lacp.Interfa"
      "ces.Interface.ConfigB$\202A!/lacp/interface"
      "s/interface/config\022y\n\007members\030\225\223\335\325\001 \001(\0132"
      "=.openconfig.openconfig_lacp.Lacp.Interf"
      "aces.Interface.MembersB%\202A\"/lacp/interfa"
      "ces/interface/members\022s\n\005state\030\223\327\232\303\001 \001(\013"
      "2;.openconfig.openconfig_lacp.Lacp.Inter"
      "faces.Interface.StateB#\202A /lacp/interfac"
      "es/interface/state\032\225\004\n\006Config\022s\n\010interva"
      "l\030\362\273\350\334\001 \001(\0162..openconfig.enums.Openconfi"
      "gLacpLacpPeriodTypeB-\202A*/lacp/interfaces"
      "/interface/config/interval\022v\n\tlacp_mode\030"
      "\323\212\313\024 \001(\01620.openconfig.enums.OpenconfigLa"
      "cpLacpActivityTypeB.\202A+/lacp/interfaces/"
      "interface/config/lacp-mode\022Q\n\004name\030\254\316\360\" "
      "\001(\0132\025.ywrapper.StringValueB)\202A&/lacp/int"
      "erfaces/interface/config/name\022d\n\rsystem_"
      "id_mac\030\252\351\201\334\001 \001(\0132\025.ywrapper.StringValueB"
      "2\202A//lacp/interfaces/interface/config/sy"
      "stem-id-mac\022e\n\017system_priority\030\227\371\333> \001(\0132"
      "\023.ywrapper.UintValueB4\202A1/lacp/interface"
      "s/interface/config/system-priority\032\355\026\n\007M"
      "embers\022\210\001\n\006member\030\246\274\2313 \003(\0132G.openconfig."
      "openconfig_lacp.Lacp.Interfaces.Interfac"
      "e.Members.MemberKeyB,\202A)/lacp/interfaces"
      "/interface/members/member\032\247\024\n\006Member\022\220\001\n"
      "\005state\030\230\375\2710 \001(\0132J.openconfig.openconfig_"
      "lacp.Lacp.Interfaces.Interface.Members.M"
      "ember.StateB2\202A//lacp/interfaces/interfa"
      "ce/members/member/state\032\211\023\n\005State\022\203\001\n\010ac"
      "tivity\030\204\302\233\244\001 \001(\01620.openconfig.enums.Open"
      "configLacpLacpActivityTypeB;\202A8/lacp/int"
      "erfaces/interface/members/member/state/a"
      "ctivity\022n\n\014aggregatable\030\317\361\326\351\001 \001(\0132\023.ywra"
      "pper.BoolValueB\?\202A</lacp/interfaces/inte"
      "rface/members/member/state/aggregatable\022"
      "j\n\ncollecting\030\225\361\320\315\001 \001(\0132\023.ywrapper.BoolV"
      "alueB=\202A:/lacp/interfaces/interface/memb"
      "ers/member/state/collecting\022\245\001\n\010counters"
      "\030\360\244\360K \001(\0132S.openconfig.openconfig_lacp.L"
      "acp.Interfaces.Interface.Members.Member."
      "State.CountersB;\202A8/lacp/interfaces/inte"
      "rface/members/member/state/counters\022n\n\014d"
      "istributing\030\323\277\261\233\001 \001(\0132\023.ywrapper.BoolVal"
      "ueB\?\202A</lacp/interfaces/interface/member"
      "s/member/state/distributing\022i\n\tinterface"
      "\030\260\233\222C \001(\0132\025.ywrapper.StringValueB<\202A9/la"
      "cp/interfaces/interface/members/member/s"
      "tate/interface\022f\n\010oper_key\030\265\246\374\357\001 \001(\0132\023.y"
      "wrapper.UintValueB;\202A8/lacp/interfaces/i"
      "nterface/members/member/state/oper-key\022l"
      "\n\npartner_id\030\213\244\230\243\001 \001(\0132\025.ywrapper.String"
      "ValueB=\202A:/lacp/interfaces/interface/mem"
      "bers/member/state/partner-id\022l\n\013partner_"
      "key\030\251\221\322\225\001 \001(\0132\023.ywrapper.UintValueB>\202A;/"
      "lacp/interfaces/interface/members/member"
      "/state/partner-key\022u\n\020partner_port_num\030\202"
      "\353\244\005 \001(\0132\023.ywrapper.UintValueBC\202A@/lacp/i"
      "nterfaces/interface/members/member/state"
      "/partner-port-num\022e\n\010port_num\030\205\367\265\032 \001(\0132\023"
      ".ywrapper.UintValueB;\202A8/lacp/interfaces"
      "/interface/members/member/state/port-num"
      "\022\227\001\n\017synchronization\030\231\315\261U \001(\01627.openconf"
      "ig.enums.OpenconfigLacpLacpSynchronizati"
      "onTypeBB\202A\?/lacp/interfaces/interface/me"
      "mbers/member/state/synchronization\022i\n\tsy"
      "stem_id\030\272\207\373b \001(\0132\025.ywrapper.StringValueB"
      "<\202A9/lacp/interfaces/interface/members/m"
      "ember/state/system-id\022~\n\007timeout\030\370\3712 \001(\016"
      "2/.openconfig.enums.OpenconfigLacpLacpTi"
      "meoutTypeB:\202A7/lacp/interfaces/interface"
      "/members/member/state/timeout\032\363\005\n\010Counte"
      "rs\022u\n\013lacp_errors\030\365\230\261\316\001 \001(\0132\023.ywrapper.U"
      "intValueBG\202AD/lacp/interfaces/interface/"
      "members/member/state/counters/lacp-error"
      "s\022v\n\014lacp_in_pkts\030\356\350\320\? \001(\0132\023.ywrapper.Ui"
      "ntValueBH\202AE/lacp/interfaces/interface/m"
      "embers/member/state/counters/lacp-in-pkt"
      "s\022y\n\rlacp_out_pkts\030\315\271\320\272\001 \001(\0132\023.ywrapper."
      "UintValueBI\202AF/lacp/interfaces/interface"
      "/members/member/state/counters/lacp-out-"
      "pkts\022z\n\016lacp_rx_errors\030\302\250\255; \001(\0132\023.ywrapp"
      "er.UintValueBJ\202AG/lacp/interfaces/interf"
      "ace/members/member/state/counters/lacp-r"
      "x-errors\022z\n\016lacp_tx_errors\030\210\254\336. \001(\0132\023.yw"
      "rapper.UintValueBJ\202AG/lacp/interfaces/in"
      "terface/members/member/state/counters/la"
      "cp-tx-errors\022\204\001\n\023lacp_unknown_errors\030\262\234\232"
      "\020 \001(\0132\023.ywrapper.UintValueBO\202AL/lacp/int"
      "erfaces/interface/members/member/state/c"
      "ounters/lacp-unknown-errors\032\254\001\n\tMemberKe"
      "y\022I\n\tinterface\030\001 \001(\tB6\202A3/lacp/interface"
      "s/interface/members/member/interface\022T\n\006"
      "member\030\002 \001(\0132D.openconfig.openconfig_lac"
      "p.Lacp.Interfaces.Interface.Members.Memb"
      "er\032\220\004\n\005State\022q\n\010interval\030\355\230\341J \001(\0162..open"
      "config.enums.OpenconfigLacpLacpPeriodTyp"
      "eB,\202A)/lacp/interfaces/interface/state/i"
      "nterval\022v\n\tlacp_mode\030\256\312\252\210\001 \001(\01620.opencon"
      "fig.enums.OpenconfigLacpLacpActivityType"
      "B-\202A*/lacp/interfaces/interface/state/la"
      "cp-mode\022P\n\004name\030\303\205\273\031 \001(\0132\025.ywrapper.Stri"
      "ngValueB(\202A%/lacp/interfaces/interface/s"
      "tate/name\022c\n\rsystem_id_mac\030\223\217\372\222\001 \001(\0132\025.y"
      "wrapper.StringValueB1\202A./lacp/interfaces"
      "/interface/state/system-id-mac\022e\n\017system"
      "_priority\030\262\233\254\270\001 \001(\0132\023.ywrapper.UintValue"
      "B3\202A0/lacp/interfaces/interface/state/sy"
      "stem-priority\032\212\001\n\014InterfaceKey\0220\n\004name\030\001"
      " \001(\tB\"\202A\037/lacp/interfaces/interface/name"
      "\022H\n\tinterface\030\002 \001(\01325.openconfig.opencon"
      "fig_lacp.Lacp.Interfaces.Interface\032Y\n\005St"
      "ate\022P\n\017system_priority\030\351\356\200\363\001 \001(\0132\023.ywrap"
      "per.UintValueB\036\202A\033/lacp/state/system-pri"
      "orityb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 5293);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "openconfig/openconfig_lacp/openconfig_lacp.proto", &protobuf_RegisterTypes);
  ::protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::AddDescriptors();
  ::protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fyext_2fyext_2eproto::AddDescriptors();
  ::protobuf_openconfig_2fenums_2fenums_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto
namespace openconfig {
namespace openconfig_lacp {

// ===================================================================

void Lacp_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_lacp::_Lacp_Config_default_instance_._instance.get_mutable()->system_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Lacp_Config::clear_system_priority() {
  if (GetArenaNoVirtual() == NULL && system_priority_ != NULL) {
    delete system_priority_;
  }
  system_priority_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Lacp_Config::kSystemPriorityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Lacp_Config::Lacp_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_lacp.Lacp.Config)
}
Lacp_Config::Lacp_Config(const Lacp_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_system_priority()) {
    system_priority_ = new ::ywrapper::UintValue(*from.system_priority_);
  } else {
    system_priority_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_lacp.Lacp.Config)
}

void Lacp_Config::SharedCtor() {
  system_priority_ = NULL;
  _cached_size_ = 0;
}

Lacp_Config::~Lacp_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_lacp.Lacp.Config)
  SharedDtor();
}

void Lacp_Config::SharedDtor() {
  if (this != internal_default_instance()) delete system_priority_;
}

void Lacp_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Lacp_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Lacp_Config& Lacp_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Config();
  return *internal_default_instance();
}

Lacp_Config* Lacp_Config::New(::google::protobuf::Arena* arena) const {
  Lacp_Config* n = new Lacp_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Lacp_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_lacp.Lacp.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && system_priority_ != NULL) {
    delete system_priority_;
  }
  system_priority_ = NULL;
  _internal_metadata_.Clear();
}

bool Lacp_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_lacp.Lacp.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(572338674u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue system_priority = 71542334 [(.yext.schemapath) = "/lacp/config/system-priority"];
      case 71542334: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 572338674 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_system_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_lacp.Lacp.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_lacp.Lacp.Config)
  return false;
#undef DO_
}

void Lacp_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_lacp.Lacp.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue system_priority = 71542334 [(.yext.schemapath) = "/lacp/config/system-priority"];
  if (this->has_system_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      71542334, *this->system_priority_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_lacp.Lacp.Config)
}

::google::protobuf::uint8* Lacp_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_lacp.Lacp.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue system_priority = 71542334 [(.yext.schemapath) = "/lacp/config/system-priority"];
  if (this->has_system_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        71542334, *this->system_priority_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_lacp.Lacp.Config)
  return target;
}

size_t Lacp_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_lacp.Lacp.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue system_priority = 71542334 [(.yext.schemapath) = "/lacp/config/system-priority"];
  if (this->has_system_priority()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->system_priority_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Lacp_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_lacp.Lacp.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Lacp_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Lacp_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_lacp.Lacp.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_lacp.Lacp.Config)
    MergeFrom(*source);
  }
}

void Lacp_Config::MergeFrom(const Lacp_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_lacp.Lacp.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_system_priority()) {
    mutable_system_priority()->::ywrapper::UintValue::MergeFrom(from.system_priority());
  }
}

void Lacp_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_lacp.Lacp.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Lacp_Config::CopyFrom(const Lacp_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_lacp.Lacp.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Lacp_Config::IsInitialized() const {
  return true;
}

void Lacp_Config::Swap(Lacp_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Lacp_Config::InternalSwap(Lacp_Config* other) {
  using std::swap;
  swap(system_priority_, other->system_priority_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Lacp_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Lacp_Interfaces_Interface_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Config_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Config_default_instance_._instance.get_mutable()->system_id_mac_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Config_default_instance_._instance.get_mutable()->system_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Lacp_Interfaces_Interface_Config::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void Lacp_Interfaces_Interface_Config::clear_system_id_mac() {
  if (GetArenaNoVirtual() == NULL && system_id_mac_ != NULL) {
    delete system_id_mac_;
  }
  system_id_mac_ = NULL;
}
void Lacp_Interfaces_Interface_Config::clear_system_priority() {
  if (GetArenaNoVirtual() == NULL && system_priority_ != NULL) {
    delete system_priority_;
  }
  system_priority_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Lacp_Interfaces_Interface_Config::kIntervalFieldNumber;
const int Lacp_Interfaces_Interface_Config::kLacpModeFieldNumber;
const int Lacp_Interfaces_Interface_Config::kNameFieldNumber;
const int Lacp_Interfaces_Interface_Config::kSystemIdMacFieldNumber;
const int Lacp_Interfaces_Interface_Config::kSystemPriorityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Lacp_Interfaces_Interface_Config::Lacp_Interfaces_Interface_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces_Interface_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Config)
}
Lacp_Interfaces_Interface_Config::Lacp_Interfaces_Interface_Config(const Lacp_Interfaces_Interface_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_system_priority()) {
    system_priority_ = new ::ywrapper::UintValue(*from.system_priority_);
  } else {
    system_priority_ = NULL;
  }
  if (from.has_system_id_mac()) {
    system_id_mac_ = new ::ywrapper::StringValue(*from.system_id_mac_);
  } else {
    system_id_mac_ = NULL;
  }
  ::memcpy(&lacp_mode_, &from.lacp_mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&interval_) -
    reinterpret_cast<char*>(&lacp_mode_)) + sizeof(interval_));
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Config)
}

void Lacp_Interfaces_Interface_Config::SharedCtor() {
  ::memset(&name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interval_) -
      reinterpret_cast<char*>(&name_)) + sizeof(interval_));
  _cached_size_ = 0;
}

Lacp_Interfaces_Interface_Config::~Lacp_Interfaces_Interface_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Config)
  SharedDtor();
}

void Lacp_Interfaces_Interface_Config::SharedDtor() {
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete system_priority_;
  if (this != internal_default_instance()) delete system_id_mac_;
}

void Lacp_Interfaces_Interface_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Lacp_Interfaces_Interface_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Lacp_Interfaces_Interface_Config& Lacp_Interfaces_Interface_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces_Interface_Config();
  return *internal_default_instance();
}

Lacp_Interfaces_Interface_Config* Lacp_Interfaces_Interface_Config::New(::google::protobuf::Arena* arena) const {
  Lacp_Interfaces_Interface_Config* n = new Lacp_Interfaces_Interface_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Lacp_Interfaces_Interface_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && system_priority_ != NULL) {
    delete system_priority_;
  }
  system_priority_ = NULL;
  if (GetArenaNoVirtual() == NULL && system_id_mac_ != NULL) {
    delete system_id_mac_;
  }
  system_id_mac_ = NULL;
  ::memset(&lacp_mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interval_) -
      reinterpret_cast<char*>(&lacp_mode_)) + sizeof(interval_));
  _internal_metadata_.Clear();
}

bool Lacp_Interfaces_Interface_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3704680336u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.enums.OpenconfigLacpLacpActivityType lacp_mode = 43173203 [(.yext.schemapath) = "/lacp/interfaces/interface/config/lacp-mode"];
      case 43173203: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u /* 345385624 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_lacp_mode(static_cast< ::openconfig::enums::OpenconfigLacpLacpActivityType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue name = 73148204 [(.yext.schemapath) = "/lacp/interfaces/interface/config/name"];
      case 73148204: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 585185634 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue system_priority = 131529879 [(.yext.schemapath) = "/lacp/interfaces/interface/config/system-priority"];
      case 131529879: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 1052239034 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_system_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue system_id_mac = 461403306 [(.yext.schemapath) = "/lacp/interfaces/interface/config/system-id-mac"];
      case 461403306: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 3691226450 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_system_id_mac()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigLacpLacpPeriodType interval = 463085042 [(.yext.schemapath) = "/lacp/interfaces/interface/config/interval"];
      case 463085042: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 3704680336 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_interval(static_cast< ::openconfig::enums::OpenconfigLacpLacpPeriodType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Config)
  return false;
#undef DO_
}

void Lacp_Interfaces_Interface_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigLacpLacpActivityType lacp_mode = 43173203 [(.yext.schemapath) = "/lacp/interfaces/interface/config/lacp-mode"];
  if (this->lacp_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      43173203, this->lacp_mode(), output);
  }

  // .ywrapper.StringValue name = 73148204 [(.yext.schemapath) = "/lacp/interfaces/interface/config/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      73148204, *this->name_, output);
  }

  // .ywrapper.UintValue system_priority = 131529879 [(.yext.schemapath) = "/lacp/interfaces/interface/config/system-priority"];
  if (this->has_system_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      131529879, *this->system_priority_, output);
  }

  // .ywrapper.StringValue system_id_mac = 461403306 [(.yext.schemapath) = "/lacp/interfaces/interface/config/system-id-mac"];
  if (this->has_system_id_mac()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      461403306, *this->system_id_mac_, output);
  }

  // .openconfig.enums.OpenconfigLacpLacpPeriodType interval = 463085042 [(.yext.schemapath) = "/lacp/interfaces/interface/config/interval"];
  if (this->interval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      463085042, this->interval(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Config)
}

::google::protobuf::uint8* Lacp_Interfaces_Interface_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigLacpLacpActivityType lacp_mode = 43173203 [(.yext.schemapath) = "/lacp/interfaces/interface/config/lacp-mode"];
  if (this->lacp_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      43173203, this->lacp_mode(), target);
  }

  // .ywrapper.StringValue name = 73148204 [(.yext.schemapath) = "/lacp/interfaces/interface/config/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        73148204, *this->name_, deterministic, target);
  }

  // .ywrapper.UintValue system_priority = 131529879 [(.yext.schemapath) = "/lacp/interfaces/interface/config/system-priority"];
  if (this->has_system_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        131529879, *this->system_priority_, deterministic, target);
  }

  // .ywrapper.StringValue system_id_mac = 461403306 [(.yext.schemapath) = "/lacp/interfaces/interface/config/system-id-mac"];
  if (this->has_system_id_mac()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        461403306, *this->system_id_mac_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigLacpLacpPeriodType interval = 463085042 [(.yext.schemapath) = "/lacp/interfaces/interface/config/interval"];
  if (this->interval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      463085042, this->interval(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Config)
  return target;
}

size_t Lacp_Interfaces_Interface_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue name = 73148204 [(.yext.schemapath) = "/lacp/interfaces/interface/config/name"];
  if (this->has_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  // .ywrapper.UintValue system_priority = 131529879 [(.yext.schemapath) = "/lacp/interfaces/interface/config/system-priority"];
  if (this->has_system_priority()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->system_priority_);
  }

  // .ywrapper.StringValue system_id_mac = 461403306 [(.yext.schemapath) = "/lacp/interfaces/interface/config/system-id-mac"];
  if (this->has_system_id_mac()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->system_id_mac_);
  }

  // .openconfig.enums.OpenconfigLacpLacpActivityType lacp_mode = 43173203 [(.yext.schemapath) = "/lacp/interfaces/interface/config/lacp-mode"];
  if (this->lacp_mode() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->lacp_mode());
  }

  // .openconfig.enums.OpenconfigLacpLacpPeriodType interval = 463085042 [(.yext.schemapath) = "/lacp/interfaces/interface/config/interval"];
  if (this->interval() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->interval());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Lacp_Interfaces_Interface_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Lacp_Interfaces_Interface_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Lacp_Interfaces_Interface_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Config)
    MergeFrom(*source);
  }
}

void Lacp_Interfaces_Interface_Config::MergeFrom(const Lacp_Interfaces_Interface_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
  if (from.has_system_priority()) {
    mutable_system_priority()->::ywrapper::UintValue::MergeFrom(from.system_priority());
  }
  if (from.has_system_id_mac()) {
    mutable_system_id_mac()->::ywrapper::StringValue::MergeFrom(from.system_id_mac());
  }
  if (from.lacp_mode() != 0) {
    set_lacp_mode(from.lacp_mode());
  }
  if (from.interval() != 0) {
    set_interval(from.interval());
  }
}

void Lacp_Interfaces_Interface_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Lacp_Interfaces_Interface_Config::CopyFrom(const Lacp_Interfaces_Interface_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Lacp_Interfaces_Interface_Config::IsInitialized() const {
  return true;
}

void Lacp_Interfaces_Interface_Config::Swap(Lacp_Interfaces_Interface_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Lacp_Interfaces_Interface_Config::InternalSwap(Lacp_Interfaces_Interface_Config* other) {
  using std::swap;
  swap(name_, other->name_);
  swap(system_priority_, other->system_priority_);
  swap(system_id_mac_, other->system_id_mac_);
  swap(lacp_mode_, other->lacp_mode_);
  swap(interval_, other->interval_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Lacp_Interfaces_Interface_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Lacp_Interfaces_Interface_Members_Member_State_Counters::InitAsDefaultInstance() {
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_Member_State_Counters_default_instance_._instance.get_mutable()->lacp_errors_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_Member_State_Counters_default_instance_._instance.get_mutable()->lacp_in_pkts_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_Member_State_Counters_default_instance_._instance.get_mutable()->lacp_out_pkts_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_Member_State_Counters_default_instance_._instance.get_mutable()->lacp_rx_errors_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_Member_State_Counters_default_instance_._instance.get_mutable()->lacp_tx_errors_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_Member_State_Counters_default_instance_._instance.get_mutable()->lacp_unknown_errors_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Lacp_Interfaces_Interface_Members_Member_State_Counters::clear_lacp_errors() {
  if (GetArenaNoVirtual() == NULL && lacp_errors_ != NULL) {
    delete lacp_errors_;
  }
  lacp_errors_ = NULL;
}
void Lacp_Interfaces_Interface_Members_Member_State_Counters::clear_lacp_in_pkts() {
  if (GetArenaNoVirtual() == NULL && lacp_in_pkts_ != NULL) {
    delete lacp_in_pkts_;
  }
  lacp_in_pkts_ = NULL;
}
void Lacp_Interfaces_Interface_Members_Member_State_Counters::clear_lacp_out_pkts() {
  if (GetArenaNoVirtual() == NULL && lacp_out_pkts_ != NULL) {
    delete lacp_out_pkts_;
  }
  lacp_out_pkts_ = NULL;
}
void Lacp_Interfaces_Interface_Members_Member_State_Counters::clear_lacp_rx_errors() {
  if (GetArenaNoVirtual() == NULL && lacp_rx_errors_ != NULL) {
    delete lacp_rx_errors_;
  }
  lacp_rx_errors_ = NULL;
}
void Lacp_Interfaces_Interface_Members_Member_State_Counters::clear_lacp_tx_errors() {
  if (GetArenaNoVirtual() == NULL && lacp_tx_errors_ != NULL) {
    delete lacp_tx_errors_;
  }
  lacp_tx_errors_ = NULL;
}
void Lacp_Interfaces_Interface_Members_Member_State_Counters::clear_lacp_unknown_errors() {
  if (GetArenaNoVirtual() == NULL && lacp_unknown_errors_ != NULL) {
    delete lacp_unknown_errors_;
  }
  lacp_unknown_errors_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Lacp_Interfaces_Interface_Members_Member_State_Counters::kLacpErrorsFieldNumber;
const int Lacp_Interfaces_Interface_Members_Member_State_Counters::kLacpInPktsFieldNumber;
const int Lacp_Interfaces_Interface_Members_Member_State_Counters::kLacpOutPktsFieldNumber;
const int Lacp_Interfaces_Interface_Members_Member_State_Counters::kLacpRxErrorsFieldNumber;
const int Lacp_Interfaces_Interface_Members_Member_State_Counters::kLacpTxErrorsFieldNumber;
const int Lacp_Interfaces_Interface_Members_Member_State_Counters::kLacpUnknownErrorsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Lacp_Interfaces_Interface_Members_Member_State_Counters::Lacp_Interfaces_Interface_Members_Member_State_Counters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces_Interface_Members_Member_State_Counters();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State.Counters)
}
Lacp_Interfaces_Interface_Members_Member_State_Counters::Lacp_Interfaces_Interface_Members_Member_State_Counters(const Lacp_Interfaces_Interface_Members_Member_State_Counters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_lacp_unknown_errors()) {
    lacp_unknown_errors_ = new ::ywrapper::UintValue(*from.lacp_unknown_errors_);
  } else {
    lacp_unknown_errors_ = NULL;
  }
  if (from.has_lacp_tx_errors()) {
    lacp_tx_errors_ = new ::ywrapper::UintValue(*from.lacp_tx_errors_);
  } else {
    lacp_tx_errors_ = NULL;
  }
  if (from.has_lacp_rx_errors()) {
    lacp_rx_errors_ = new ::ywrapper::UintValue(*from.lacp_rx_errors_);
  } else {
    lacp_rx_errors_ = NULL;
  }
  if (from.has_lacp_in_pkts()) {
    lacp_in_pkts_ = new ::ywrapper::UintValue(*from.lacp_in_pkts_);
  } else {
    lacp_in_pkts_ = NULL;
  }
  if (from.has_lacp_out_pkts()) {
    lacp_out_pkts_ = new ::ywrapper::UintValue(*from.lacp_out_pkts_);
  } else {
    lacp_out_pkts_ = NULL;
  }
  if (from.has_lacp_errors()) {
    lacp_errors_ = new ::ywrapper::UintValue(*from.lacp_errors_);
  } else {
    lacp_errors_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State.Counters)
}

void Lacp_Interfaces_Interface_Members_Member_State_Counters::SharedCtor() {
  ::memset(&lacp_unknown_errors_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lacp_errors_) -
      reinterpret_cast<char*>(&lacp_unknown_errors_)) + sizeof(lacp_errors_));
  _cached_size_ = 0;
}

Lacp_Interfaces_Interface_Members_Member_State_Counters::~Lacp_Interfaces_Interface_Members_Member_State_Counters() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State.Counters)
  SharedDtor();
}

void Lacp_Interfaces_Interface_Members_Member_State_Counters::SharedDtor() {
  if (this != internal_default_instance()) delete lacp_unknown_errors_;
  if (this != internal_default_instance()) delete lacp_tx_errors_;
  if (this != internal_default_instance()) delete lacp_rx_errors_;
  if (this != internal_default_instance()) delete lacp_in_pkts_;
  if (this != internal_default_instance()) delete lacp_out_pkts_;
  if (this != internal_default_instance()) delete lacp_errors_;
}

void Lacp_Interfaces_Interface_Members_Member_State_Counters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Lacp_Interfaces_Interface_Members_Member_State_Counters::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Lacp_Interfaces_Interface_Members_Member_State_Counters& Lacp_Interfaces_Interface_Members_Member_State_Counters::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces_Interface_Members_Member_State_Counters();
  return *internal_default_instance();
}

Lacp_Interfaces_Interface_Members_Member_State_Counters* Lacp_Interfaces_Interface_Members_Member_State_Counters::New(::google::protobuf::Arena* arena) const {
  Lacp_Interfaces_Interface_Members_Member_State_Counters* n = new Lacp_Interfaces_Interface_Members_Member_State_Counters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Lacp_Interfaces_Interface_Members_Member_State_Counters::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State.Counters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && lacp_unknown_errors_ != NULL) {
    delete lacp_unknown_errors_;
  }
  lacp_unknown_errors_ = NULL;
  if (GetArenaNoVirtual() == NULL && lacp_tx_errors_ != NULL) {
    delete lacp_tx_errors_;
  }
  lacp_tx_errors_ = NULL;
  if (GetArenaNoVirtual() == NULL && lacp_rx_errors_ != NULL) {
    delete lacp_rx_errors_;
  }
  lacp_rx_errors_ = NULL;
  if (GetArenaNoVirtual() == NULL && lacp_in_pkts_ != NULL) {
    delete lacp_in_pkts_;
  }
  lacp_in_pkts_ = NULL;
  if (GetArenaNoVirtual() == NULL && lacp_out_pkts_ != NULL) {
    delete lacp_out_pkts_;
  }
  lacp_out_pkts_ = NULL;
  if (GetArenaNoVirtual() == NULL && lacp_errors_ != NULL) {
    delete lacp_errors_;
  }
  lacp_errors_ = NULL;
  _internal_metadata_.Clear();
}

bool Lacp_Interfaces_Interface_Members_Member_State_Counters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State.Counters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3462554538u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue lacp_unknown_errors = 33984050 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters/lacp-unknown-errors"];
      case 33984050: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 271872402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lacp_unknown_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue lacp_tx_errors = 98014728 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters/lacp-tx-errors"];
      case 98014728: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 784117826 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lacp_tx_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue lacp_rx_errors = 124474434 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters/lacp-rx-errors"];
      case 124474434: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 995795474 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lacp_rx_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue lacp_in_pkts = 133444718 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters/lacp-in-pkts"];
      case 133444718: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 1067557746 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lacp_in_pkts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue lacp_out_pkts = 391388365 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters/lacp-out-pkts"];
      case 391388365: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 3131106922 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lacp_out_pkts()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue lacp_errors = 432819317 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters/lacp-errors"];
      case 432819317: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 3462554538 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_lacp_errors()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State.Counters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State.Counters)
  return false;
#undef DO_
}

void Lacp_Interfaces_Interface_Members_Member_State_Counters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State.Counters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue lacp_unknown_errors = 33984050 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters/lacp-unknown-errors"];
  if (this->has_lacp_unknown_errors()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      33984050, *this->lacp_unknown_errors_, output);
  }

  // .ywrapper.UintValue lacp_tx_errors = 98014728 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters/lacp-tx-errors"];
  if (this->has_lacp_tx_errors()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      98014728, *this->lacp_tx_errors_, output);
  }

  // .ywrapper.UintValue lacp_rx_errors = 124474434 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters/lacp-rx-errors"];
  if (this->has_lacp_rx_errors()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      124474434, *this->lacp_rx_errors_, output);
  }

  // .ywrapper.UintValue lacp_in_pkts = 133444718 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters/lacp-in-pkts"];
  if (this->has_lacp_in_pkts()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      133444718, *this->lacp_in_pkts_, output);
  }

  // .ywrapper.UintValue lacp_out_pkts = 391388365 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters/lacp-out-pkts"];
  if (this->has_lacp_out_pkts()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      391388365, *this->lacp_out_pkts_, output);
  }

  // .ywrapper.UintValue lacp_errors = 432819317 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters/lacp-errors"];
  if (this->has_lacp_errors()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      432819317, *this->lacp_errors_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State.Counters)
}

::google::protobuf::uint8* Lacp_Interfaces_Interface_Members_Member_State_Counters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State.Counters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue lacp_unknown_errors = 33984050 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters/lacp-unknown-errors"];
  if (this->has_lacp_unknown_errors()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        33984050, *this->lacp_unknown_errors_, deterministic, target);
  }

  // .ywrapper.UintValue lacp_tx_errors = 98014728 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters/lacp-tx-errors"];
  if (this->has_lacp_tx_errors()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        98014728, *this->lacp_tx_errors_, deterministic, target);
  }

  // .ywrapper.UintValue lacp_rx_errors = 124474434 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters/lacp-rx-errors"];
  if (this->has_lacp_rx_errors()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        124474434, *this->lacp_rx_errors_, deterministic, target);
  }

  // .ywrapper.UintValue lacp_in_pkts = 133444718 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters/lacp-in-pkts"];
  if (this->has_lacp_in_pkts()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        133444718, *this->lacp_in_pkts_, deterministic, target);
  }

  // .ywrapper.UintValue lacp_out_pkts = 391388365 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters/lacp-out-pkts"];
  if (this->has_lacp_out_pkts()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        391388365, *this->lacp_out_pkts_, deterministic, target);
  }

  // .ywrapper.UintValue lacp_errors = 432819317 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters/lacp-errors"];
  if (this->has_lacp_errors()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        432819317, *this->lacp_errors_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State.Counters)
  return target;
}

size_t Lacp_Interfaces_Interface_Members_Member_State_Counters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State.Counters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue lacp_unknown_errors = 33984050 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters/lacp-unknown-errors"];
  if (this->has_lacp_unknown_errors()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->lacp_unknown_errors_);
  }

  // .ywrapper.UintValue lacp_tx_errors = 98014728 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters/lacp-tx-errors"];
  if (this->has_lacp_tx_errors()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->lacp_tx_errors_);
  }

  // .ywrapper.UintValue lacp_rx_errors = 124474434 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters/lacp-rx-errors"];
  if (this->has_lacp_rx_errors()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->lacp_rx_errors_);
  }

  // .ywrapper.UintValue lacp_in_pkts = 133444718 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters/lacp-in-pkts"];
  if (this->has_lacp_in_pkts()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->lacp_in_pkts_);
  }

  // .ywrapper.UintValue lacp_out_pkts = 391388365 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters/lacp-out-pkts"];
  if (this->has_lacp_out_pkts()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->lacp_out_pkts_);
  }

  // .ywrapper.UintValue lacp_errors = 432819317 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters/lacp-errors"];
  if (this->has_lacp_errors()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->lacp_errors_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Lacp_Interfaces_Interface_Members_Member_State_Counters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State.Counters)
  GOOGLE_DCHECK_NE(&from, this);
  const Lacp_Interfaces_Interface_Members_Member_State_Counters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Lacp_Interfaces_Interface_Members_Member_State_Counters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State.Counters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State.Counters)
    MergeFrom(*source);
  }
}

void Lacp_Interfaces_Interface_Members_Member_State_Counters::MergeFrom(const Lacp_Interfaces_Interface_Members_Member_State_Counters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State.Counters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_lacp_unknown_errors()) {
    mutable_lacp_unknown_errors()->::ywrapper::UintValue::MergeFrom(from.lacp_unknown_errors());
  }
  if (from.has_lacp_tx_errors()) {
    mutable_lacp_tx_errors()->::ywrapper::UintValue::MergeFrom(from.lacp_tx_errors());
  }
  if (from.has_lacp_rx_errors()) {
    mutable_lacp_rx_errors()->::ywrapper::UintValue::MergeFrom(from.lacp_rx_errors());
  }
  if (from.has_lacp_in_pkts()) {
    mutable_lacp_in_pkts()->::ywrapper::UintValue::MergeFrom(from.lacp_in_pkts());
  }
  if (from.has_lacp_out_pkts()) {
    mutable_lacp_out_pkts()->::ywrapper::UintValue::MergeFrom(from.lacp_out_pkts());
  }
  if (from.has_lacp_errors()) {
    mutable_lacp_errors()->::ywrapper::UintValue::MergeFrom(from.lacp_errors());
  }
}

void Lacp_Interfaces_Interface_Members_Member_State_Counters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State.Counters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Lacp_Interfaces_Interface_Members_Member_State_Counters::CopyFrom(const Lacp_Interfaces_Interface_Members_Member_State_Counters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State.Counters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Lacp_Interfaces_Interface_Members_Member_State_Counters::IsInitialized() const {
  return true;
}

void Lacp_Interfaces_Interface_Members_Member_State_Counters::Swap(Lacp_Interfaces_Interface_Members_Member_State_Counters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Lacp_Interfaces_Interface_Members_Member_State_Counters::InternalSwap(Lacp_Interfaces_Interface_Members_Member_State_Counters* other) {
  using std::swap;
  swap(lacp_unknown_errors_, other->lacp_unknown_errors_);
  swap(lacp_tx_errors_, other->lacp_tx_errors_);
  swap(lacp_rx_errors_, other->lacp_rx_errors_);
  swap(lacp_in_pkts_, other->lacp_in_pkts_);
  swap(lacp_out_pkts_, other->lacp_out_pkts_);
  swap(lacp_errors_, other->lacp_errors_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Lacp_Interfaces_Interface_Members_Member_State_Counters::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Lacp_Interfaces_Interface_Members_Member_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_Member_State_default_instance_._instance.get_mutable()->aggregatable_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_Member_State_default_instance_._instance.get_mutable()->collecting_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_Member_State_default_instance_._instance.get_mutable()->counters_ = const_cast< ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State_Counters*>(
      ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State_Counters::internal_default_instance());
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_Member_State_default_instance_._instance.get_mutable()->distributing_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_Member_State_default_instance_._instance.get_mutable()->interface_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_Member_State_default_instance_._instance.get_mutable()->oper_key_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_Member_State_default_instance_._instance.get_mutable()->partner_id_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_Member_State_default_instance_._instance.get_mutable()->partner_key_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_Member_State_default_instance_._instance.get_mutable()->partner_port_num_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_Member_State_default_instance_._instance.get_mutable()->port_num_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_Member_State_default_instance_._instance.get_mutable()->system_id_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void Lacp_Interfaces_Interface_Members_Member_State::clear_aggregatable() {
  if (GetArenaNoVirtual() == NULL && aggregatable_ != NULL) {
    delete aggregatable_;
  }
  aggregatable_ = NULL;
}
void Lacp_Interfaces_Interface_Members_Member_State::clear_collecting() {
  if (GetArenaNoVirtual() == NULL && collecting_ != NULL) {
    delete collecting_;
  }
  collecting_ = NULL;
}
void Lacp_Interfaces_Interface_Members_Member_State::clear_distributing() {
  if (GetArenaNoVirtual() == NULL && distributing_ != NULL) {
    delete distributing_;
  }
  distributing_ = NULL;
}
void Lacp_Interfaces_Interface_Members_Member_State::clear_interface() {
  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
}
void Lacp_Interfaces_Interface_Members_Member_State::clear_oper_key() {
  if (GetArenaNoVirtual() == NULL && oper_key_ != NULL) {
    delete oper_key_;
  }
  oper_key_ = NULL;
}
void Lacp_Interfaces_Interface_Members_Member_State::clear_partner_id() {
  if (GetArenaNoVirtual() == NULL && partner_id_ != NULL) {
    delete partner_id_;
  }
  partner_id_ = NULL;
}
void Lacp_Interfaces_Interface_Members_Member_State::clear_partner_key() {
  if (GetArenaNoVirtual() == NULL && partner_key_ != NULL) {
    delete partner_key_;
  }
  partner_key_ = NULL;
}
void Lacp_Interfaces_Interface_Members_Member_State::clear_partner_port_num() {
  if (GetArenaNoVirtual() == NULL && partner_port_num_ != NULL) {
    delete partner_port_num_;
  }
  partner_port_num_ = NULL;
}
void Lacp_Interfaces_Interface_Members_Member_State::clear_port_num() {
  if (GetArenaNoVirtual() == NULL && port_num_ != NULL) {
    delete port_num_;
  }
  port_num_ = NULL;
}
void Lacp_Interfaces_Interface_Members_Member_State::clear_system_id() {
  if (GetArenaNoVirtual() == NULL && system_id_ != NULL) {
    delete system_id_;
  }
  system_id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Lacp_Interfaces_Interface_Members_Member_State::kActivityFieldNumber;
const int Lacp_Interfaces_Interface_Members_Member_State::kAggregatableFieldNumber;
const int Lacp_Interfaces_Interface_Members_Member_State::kCollectingFieldNumber;
const int Lacp_Interfaces_Interface_Members_Member_State::kCountersFieldNumber;
const int Lacp_Interfaces_Interface_Members_Member_State::kDistributingFieldNumber;
const int Lacp_Interfaces_Interface_Members_Member_State::kInterfaceFieldNumber;
const int Lacp_Interfaces_Interface_Members_Member_State::kOperKeyFieldNumber;
const int Lacp_Interfaces_Interface_Members_Member_State::kPartnerIdFieldNumber;
const int Lacp_Interfaces_Interface_Members_Member_State::kPartnerKeyFieldNumber;
const int Lacp_Interfaces_Interface_Members_Member_State::kPartnerPortNumFieldNumber;
const int Lacp_Interfaces_Interface_Members_Member_State::kPortNumFieldNumber;
const int Lacp_Interfaces_Interface_Members_Member_State::kSynchronizationFieldNumber;
const int Lacp_Interfaces_Interface_Members_Member_State::kSystemIdFieldNumber;
const int Lacp_Interfaces_Interface_Members_Member_State::kTimeoutFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Lacp_Interfaces_Interface_Members_Member_State::Lacp_Interfaces_Interface_Members_Member_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces_Interface_Members_Member_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State)
}
Lacp_Interfaces_Interface_Members_Member_State::Lacp_Interfaces_Interface_Members_Member_State(const Lacp_Interfaces_Interface_Members_Member_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_partner_port_num()) {
    partner_port_num_ = new ::ywrapper::UintValue(*from.partner_port_num_);
  } else {
    partner_port_num_ = NULL;
  }
  if (from.has_port_num()) {
    port_num_ = new ::ywrapper::UintValue(*from.port_num_);
  } else {
    port_num_ = NULL;
  }
  if (from.has_interface()) {
    interface_ = new ::ywrapper::StringValue(*from.interface_);
  } else {
    interface_ = NULL;
  }
  if (from.has_counters()) {
    counters_ = new ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State_Counters(*from.counters_);
  } else {
    counters_ = NULL;
  }
  if (from.has_system_id()) {
    system_id_ = new ::ywrapper::StringValue(*from.system_id_);
  } else {
    system_id_ = NULL;
  }
  if (from.has_partner_key()) {
    partner_key_ = new ::ywrapper::UintValue(*from.partner_key_);
  } else {
    partner_key_ = NULL;
  }
  if (from.has_distributing()) {
    distributing_ = new ::ywrapper::BoolValue(*from.distributing_);
  } else {
    distributing_ = NULL;
  }
  if (from.has_partner_id()) {
    partner_id_ = new ::ywrapper::StringValue(*from.partner_id_);
  } else {
    partner_id_ = NULL;
  }
  if (from.has_collecting()) {
    collecting_ = new ::ywrapper::BoolValue(*from.collecting_);
  } else {
    collecting_ = NULL;
  }
  if (from.has_aggregatable()) {
    aggregatable_ = new ::ywrapper::BoolValue(*from.aggregatable_);
  } else {
    aggregatable_ = NULL;
  }
  if (from.has_oper_key()) {
    oper_key_ = new ::ywrapper::UintValue(*from.oper_key_);
  } else {
    oper_key_ = NULL;
  }
  ::memcpy(&activity_, &from.activity_,
    static_cast<size_t>(reinterpret_cast<char*>(&synchronization_) -
    reinterpret_cast<char*>(&activity_)) + sizeof(synchronization_));
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State)
}

void Lacp_Interfaces_Interface_Members_Member_State::SharedCtor() {
  ::memset(&partner_port_num_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&synchronization_) -
      reinterpret_cast<char*>(&partner_port_num_)) + sizeof(synchronization_));
  _cached_size_ = 0;
}

Lacp_Interfaces_Interface_Members_Member_State::~Lacp_Interfaces_Interface_Members_Member_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State)
  SharedDtor();
}

void Lacp_Interfaces_Interface_Members_Member_State::SharedDtor() {
  if (this != internal_default_instance()) delete partner_port_num_;
  if (this != internal_default_instance()) delete port_num_;
  if (this != internal_default_instance()) delete interface_;
  if (this != internal_default_instance()) delete counters_;
  if (this != internal_default_instance()) delete system_id_;
  if (this != internal_default_instance()) delete partner_key_;
  if (this != internal_default_instance()) delete distributing_;
  if (this != internal_default_instance()) delete partner_id_;
  if (this != internal_default_instance()) delete collecting_;
  if (this != internal_default_instance()) delete aggregatable_;
  if (this != internal_default_instance()) delete oper_key_;
}

void Lacp_Interfaces_Interface_Members_Member_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Lacp_Interfaces_Interface_Members_Member_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Lacp_Interfaces_Interface_Members_Member_State& Lacp_Interfaces_Interface_Members_Member_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces_Interface_Members_Member_State();
  return *internal_default_instance();
}

Lacp_Interfaces_Interface_Members_Member_State* Lacp_Interfaces_Interface_Members_Member_State::New(::google::protobuf::Arena* arena) const {
  Lacp_Interfaces_Interface_Members_Member_State* n = new Lacp_Interfaces_Interface_Members_Member_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Lacp_Interfaces_Interface_Members_Member_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && partner_port_num_ != NULL) {
    delete partner_port_num_;
  }
  partner_port_num_ = NULL;
  if (GetArenaNoVirtual() == NULL && port_num_ != NULL) {
    delete port_num_;
  }
  port_num_ = NULL;
  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
  if (GetArenaNoVirtual() == NULL && counters_ != NULL) {
    delete counters_;
  }
  counters_ = NULL;
  if (GetArenaNoVirtual() == NULL && system_id_ != NULL) {
    delete system_id_;
  }
  system_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && partner_key_ != NULL) {
    delete partner_key_;
  }
  partner_key_ = NULL;
  if (GetArenaNoVirtual() == NULL && distributing_ != NULL) {
    delete distributing_;
  }
  distributing_ = NULL;
  if (GetArenaNoVirtual() == NULL && partner_id_ != NULL) {
    delete partner_id_;
  }
  partner_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && collecting_ != NULL) {
    delete collecting_;
  }
  collecting_ = NULL;
  if (GetArenaNoVirtual() == NULL && aggregatable_ != NULL) {
    delete aggregatable_;
  }
  aggregatable_ = NULL;
  if (GetArenaNoVirtual() == NULL && oper_key_ != NULL) {
    delete oper_key_;
  }
  oper_key_ = NULL;
  ::memset(&activity_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&synchronization_) -
      reinterpret_cast<char*>(&activity_)) + sizeof(synchronization_));
  _internal_metadata_.Clear();
}

bool Lacp_Interfaces_Interface_Members_Member_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4026046890u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.enums.OpenconfigLacpLacpTimeoutType timeout = 834808 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/timeout"];
      case 834808: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 6678464 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_timeout(static_cast< ::openconfig::enums::OpenconfigLacpLacpTimeoutType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue partner_port_num = 11089282 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/partner-port-num"];
      case 11089282: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 88714258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_partner_port_num()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue port_num = 55409541 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/port-num"];
      case 55409541: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 443276330 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_port_num()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue interface = 140807600 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/interface"];
      case 140807600: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 1126460802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State.Counters counters = 159126128 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters"];
      case 159126128: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 1273009026 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_counters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigLacpLacpSynchronizationType synchronization = 179070617 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/synchronization"];
      case 179070617: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 1432564936 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_synchronization(static_cast< ::openconfig::enums::OpenconfigLacpLacpSynchronizationType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue system_id = 207537082 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/system-id"];
      case 207537082: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 1660296658 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_system_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue partner_key = 313821353 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/partner-key"];
      case 313821353: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 2510570826 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_partner_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue distributing = 325869523 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/distributing"];
      case 325869523: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 2606956186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_distributing()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue partner_id = 342233611 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/partner-id"];
      case 342233611: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 2737868890 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_partner_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigLacpLacpActivityType activity = 344383748 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/activity"];
      case 344383748: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 2755069984 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_activity(static_cast< ::openconfig::enums::OpenconfigLacpLacpActivityType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue collecting = 431241365 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/collecting"];
      case 431241365: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 3449930922 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_collecting()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue aggregatable = 490059983 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/aggregatable"];
      case 490059983: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 3920479866 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_aggregatable()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue oper_key = 503255861 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/oper-key"];
      case 503255861: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 4026046890 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_oper_key()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State)
  return false;
#undef DO_
}

void Lacp_Interfaces_Interface_Members_Member_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigLacpLacpTimeoutType timeout = 834808 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/timeout"];
  if (this->timeout() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      834808, this->timeout(), output);
  }

  // .ywrapper.UintValue partner_port_num = 11089282 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/partner-port-num"];
  if (this->has_partner_port_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11089282, *this->partner_port_num_, output);
  }

  // .ywrapper.UintValue port_num = 55409541 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/port-num"];
  if (this->has_port_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      55409541, *this->port_num_, output);
  }

  // .ywrapper.StringValue interface = 140807600 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/interface"];
  if (this->has_interface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      140807600, *this->interface_, output);
  }

  // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State.Counters counters = 159126128 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters"];
  if (this->has_counters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      159126128, *this->counters_, output);
  }

  // .openconfig.enums.OpenconfigLacpLacpSynchronizationType synchronization = 179070617 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/synchronization"];
  if (this->synchronization() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      179070617, this->synchronization(), output);
  }

  // .ywrapper.StringValue system_id = 207537082 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/system-id"];
  if (this->has_system_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      207537082, *this->system_id_, output);
  }

  // .ywrapper.UintValue partner_key = 313821353 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/partner-key"];
  if (this->has_partner_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      313821353, *this->partner_key_, output);
  }

  // .ywrapper.BoolValue distributing = 325869523 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/distributing"];
  if (this->has_distributing()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      325869523, *this->distributing_, output);
  }

  // .ywrapper.StringValue partner_id = 342233611 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/partner-id"];
  if (this->has_partner_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      342233611, *this->partner_id_, output);
  }

  // .openconfig.enums.OpenconfigLacpLacpActivityType activity = 344383748 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/activity"];
  if (this->activity() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      344383748, this->activity(), output);
  }

  // .ywrapper.BoolValue collecting = 431241365 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/collecting"];
  if (this->has_collecting()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      431241365, *this->collecting_, output);
  }

  // .ywrapper.BoolValue aggregatable = 490059983 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/aggregatable"];
  if (this->has_aggregatable()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      490059983, *this->aggregatable_, output);
  }

  // .ywrapper.UintValue oper_key = 503255861 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/oper-key"];
  if (this->has_oper_key()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      503255861, *this->oper_key_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State)
}

::google::protobuf::uint8* Lacp_Interfaces_Interface_Members_Member_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigLacpLacpTimeoutType timeout = 834808 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/timeout"];
  if (this->timeout() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      834808, this->timeout(), target);
  }

  // .ywrapper.UintValue partner_port_num = 11089282 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/partner-port-num"];
  if (this->has_partner_port_num()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        11089282, *this->partner_port_num_, deterministic, target);
  }

  // .ywrapper.UintValue port_num = 55409541 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/port-num"];
  if (this->has_port_num()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        55409541, *this->port_num_, deterministic, target);
  }

  // .ywrapper.StringValue interface = 140807600 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/interface"];
  if (this->has_interface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        140807600, *this->interface_, deterministic, target);
  }

  // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State.Counters counters = 159126128 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters"];
  if (this->has_counters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        159126128, *this->counters_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigLacpLacpSynchronizationType synchronization = 179070617 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/synchronization"];
  if (this->synchronization() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      179070617, this->synchronization(), target);
  }

  // .ywrapper.StringValue system_id = 207537082 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/system-id"];
  if (this->has_system_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        207537082, *this->system_id_, deterministic, target);
  }

  // .ywrapper.UintValue partner_key = 313821353 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/partner-key"];
  if (this->has_partner_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        313821353, *this->partner_key_, deterministic, target);
  }

  // .ywrapper.BoolValue distributing = 325869523 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/distributing"];
  if (this->has_distributing()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        325869523, *this->distributing_, deterministic, target);
  }

  // .ywrapper.StringValue partner_id = 342233611 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/partner-id"];
  if (this->has_partner_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        342233611, *this->partner_id_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigLacpLacpActivityType activity = 344383748 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/activity"];
  if (this->activity() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      344383748, this->activity(), target);
  }

  // .ywrapper.BoolValue collecting = 431241365 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/collecting"];
  if (this->has_collecting()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        431241365, *this->collecting_, deterministic, target);
  }

  // .ywrapper.BoolValue aggregatable = 490059983 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/aggregatable"];
  if (this->has_aggregatable()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        490059983, *this->aggregatable_, deterministic, target);
  }

  // .ywrapper.UintValue oper_key = 503255861 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/oper-key"];
  if (this->has_oper_key()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        503255861, *this->oper_key_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State)
  return target;
}

size_t Lacp_Interfaces_Interface_Members_Member_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue partner_port_num = 11089282 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/partner-port-num"];
  if (this->has_partner_port_num()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->partner_port_num_);
  }

  // .ywrapper.UintValue port_num = 55409541 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/port-num"];
  if (this->has_port_num()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->port_num_);
  }

  // .ywrapper.StringValue interface = 140807600 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/interface"];
  if (this->has_interface()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interface_);
  }

  // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State.Counters counters = 159126128 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/counters"];
  if (this->has_counters()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->counters_);
  }

  // .ywrapper.StringValue system_id = 207537082 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/system-id"];
  if (this->has_system_id()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->system_id_);
  }

  // .ywrapper.UintValue partner_key = 313821353 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/partner-key"];
  if (this->has_partner_key()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->partner_key_);
  }

  // .ywrapper.BoolValue distributing = 325869523 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/distributing"];
  if (this->has_distributing()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->distributing_);
  }

  // .ywrapper.StringValue partner_id = 342233611 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/partner-id"];
  if (this->has_partner_id()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->partner_id_);
  }

  // .ywrapper.BoolValue collecting = 431241365 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/collecting"];
  if (this->has_collecting()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->collecting_);
  }

  // .ywrapper.BoolValue aggregatable = 490059983 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/aggregatable"];
  if (this->has_aggregatable()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->aggregatable_);
  }

  // .ywrapper.UintValue oper_key = 503255861 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/oper-key"];
  if (this->has_oper_key()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->oper_key_);
  }

  // .openconfig.enums.OpenconfigLacpLacpActivityType activity = 344383748 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/activity"];
  if (this->activity() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->activity());
  }

  // .openconfig.enums.OpenconfigLacpLacpTimeoutType timeout = 834808 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/timeout"];
  if (this->timeout() != 0) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->timeout());
  }

  // .openconfig.enums.OpenconfigLacpLacpSynchronizationType synchronization = 179070617 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state/synchronization"];
  if (this->synchronization() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->synchronization());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Lacp_Interfaces_Interface_Members_Member_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Lacp_Interfaces_Interface_Members_Member_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Lacp_Interfaces_Interface_Members_Member_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State)
    MergeFrom(*source);
  }
}

void Lacp_Interfaces_Interface_Members_Member_State::MergeFrom(const Lacp_Interfaces_Interface_Members_Member_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_partner_port_num()) {
    mutable_partner_port_num()->::ywrapper::UintValue::MergeFrom(from.partner_port_num());
  }
  if (from.has_port_num()) {
    mutable_port_num()->::ywrapper::UintValue::MergeFrom(from.port_num());
  }
  if (from.has_interface()) {
    mutable_interface()->::ywrapper::StringValue::MergeFrom(from.interface());
  }
  if (from.has_counters()) {
    mutable_counters()->::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State_Counters::MergeFrom(from.counters());
  }
  if (from.has_system_id()) {
    mutable_system_id()->::ywrapper::StringValue::MergeFrom(from.system_id());
  }
  if (from.has_partner_key()) {
    mutable_partner_key()->::ywrapper::UintValue::MergeFrom(from.partner_key());
  }
  if (from.has_distributing()) {
    mutable_distributing()->::ywrapper::BoolValue::MergeFrom(from.distributing());
  }
  if (from.has_partner_id()) {
    mutable_partner_id()->::ywrapper::StringValue::MergeFrom(from.partner_id());
  }
  if (from.has_collecting()) {
    mutable_collecting()->::ywrapper::BoolValue::MergeFrom(from.collecting());
  }
  if (from.has_aggregatable()) {
    mutable_aggregatable()->::ywrapper::BoolValue::MergeFrom(from.aggregatable());
  }
  if (from.has_oper_key()) {
    mutable_oper_key()->::ywrapper::UintValue::MergeFrom(from.oper_key());
  }
  if (from.activity() != 0) {
    set_activity(from.activity());
  }
  if (from.timeout() != 0) {
    set_timeout(from.timeout());
  }
  if (from.synchronization() != 0) {
    set_synchronization(from.synchronization());
  }
}

void Lacp_Interfaces_Interface_Members_Member_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Lacp_Interfaces_Interface_Members_Member_State::CopyFrom(const Lacp_Interfaces_Interface_Members_Member_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Lacp_Interfaces_Interface_Members_Member_State::IsInitialized() const {
  return true;
}

void Lacp_Interfaces_Interface_Members_Member_State::Swap(Lacp_Interfaces_Interface_Members_Member_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Lacp_Interfaces_Interface_Members_Member_State::InternalSwap(Lacp_Interfaces_Interface_Members_Member_State* other) {
  using std::swap;
  swap(partner_port_num_, other->partner_port_num_);
  swap(port_num_, other->port_num_);
  swap(interface_, other->interface_);
  swap(counters_, other->counters_);
  swap(system_id_, other->system_id_);
  swap(partner_key_, other->partner_key_);
  swap(distributing_, other->distributing_);
  swap(partner_id_, other->partner_id_);
  swap(collecting_, other->collecting_);
  swap(aggregatable_, other->aggregatable_);
  swap(oper_key_, other->oper_key_);
  swap(activity_, other->activity_);
  swap(timeout_, other->timeout_);
  swap(synchronization_, other->synchronization_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Lacp_Interfaces_Interface_Members_Member_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Lacp_Interfaces_Interface_Members_Member::InitAsDefaultInstance() {
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_Member_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State*>(
      ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Lacp_Interfaces_Interface_Members_Member::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Lacp_Interfaces_Interface_Members_Member::Lacp_Interfaces_Interface_Members_Member()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces_Interface_Members_Member();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member)
}
Lacp_Interfaces_Interface_Members_Member::Lacp_Interfaces_Interface_Members_Member(const Lacp_Interfaces_Interface_Members_Member& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member)
}

void Lacp_Interfaces_Interface_Members_Member::SharedCtor() {
  state_ = NULL;
  _cached_size_ = 0;
}

Lacp_Interfaces_Interface_Members_Member::~Lacp_Interfaces_Interface_Members_Member() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member)
  SharedDtor();
}

void Lacp_Interfaces_Interface_Members_Member::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
}

void Lacp_Interfaces_Interface_Members_Member::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Lacp_Interfaces_Interface_Members_Member::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Lacp_Interfaces_Interface_Members_Member& Lacp_Interfaces_Interface_Members_Member::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces_Interface_Members_Member();
  return *internal_default_instance();
}

Lacp_Interfaces_Interface_Members_Member* Lacp_Interfaces_Interface_Members_Member::New(::google::protobuf::Arena* arena) const {
  Lacp_Interfaces_Interface_Members_Member* n = new Lacp_Interfaces_Interface_Members_Member;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Lacp_Interfaces_Interface_Members_Member::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool Lacp_Interfaces_Interface_Members_Member::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(812905666u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State state = 101613208 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state"];
      case 101613208: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 812905666 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member)
  return false;
#undef DO_
}

void Lacp_Interfaces_Interface_Members_Member::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State state = 101613208 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      101613208, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member)
}

::google::protobuf::uint8* Lacp_Interfaces_Interface_Members_Member::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State state = 101613208 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        101613208, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member)
  return target;
}

size_t Lacp_Interfaces_Interface_Members_Member::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member.State state = 101613208 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Lacp_Interfaces_Interface_Members_Member::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member)
  GOOGLE_DCHECK_NE(&from, this);
  const Lacp_Interfaces_Interface_Members_Member* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Lacp_Interfaces_Interface_Members_Member>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member)
    MergeFrom(*source);
  }
}

void Lacp_Interfaces_Interface_Members_Member::MergeFrom(const Lacp_Interfaces_Interface_Members_Member& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member_State::MergeFrom(from.state());
  }
}

void Lacp_Interfaces_Interface_Members_Member::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Lacp_Interfaces_Interface_Members_Member::CopyFrom(const Lacp_Interfaces_Interface_Members_Member& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Lacp_Interfaces_Interface_Members_Member::IsInitialized() const {
  return true;
}

void Lacp_Interfaces_Interface_Members_Member::Swap(Lacp_Interfaces_Interface_Members_Member* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Lacp_Interfaces_Interface_Members_Member::InternalSwap(Lacp_Interfaces_Interface_Members_Member* other) {
  using std::swap;
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Lacp_Interfaces_Interface_Members_Member::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Lacp_Interfaces_Interface_Members_MemberKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_Members_MemberKey_default_instance_._instance.get_mutable()->member_ = const_cast< ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member*>(
      ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Lacp_Interfaces_Interface_Members_MemberKey::kInterfaceFieldNumber;
const int Lacp_Interfaces_Interface_Members_MemberKey::kMemberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Lacp_Interfaces_Interface_Members_MemberKey::Lacp_Interfaces_Interface_Members_MemberKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces_Interface_Members_MemberKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.MemberKey)
}
Lacp_Interfaces_Interface_Members_MemberKey::Lacp_Interfaces_Interface_Members_MemberKey(const Lacp_Interfaces_Interface_Members_MemberKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.interface().size() > 0) {
    interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.interface_);
  }
  if (from.has_member()) {
    member_ = new ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member(*from.member_);
  } else {
    member_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.MemberKey)
}

void Lacp_Interfaces_Interface_Members_MemberKey::SharedCtor() {
  interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  member_ = NULL;
  _cached_size_ = 0;
}

Lacp_Interfaces_Interface_Members_MemberKey::~Lacp_Interfaces_Interface_Members_MemberKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.MemberKey)
  SharedDtor();
}

void Lacp_Interfaces_Interface_Members_MemberKey::SharedDtor() {
  interface_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete member_;
}

void Lacp_Interfaces_Interface_Members_MemberKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Lacp_Interfaces_Interface_Members_MemberKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Lacp_Interfaces_Interface_Members_MemberKey& Lacp_Interfaces_Interface_Members_MemberKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces_Interface_Members_MemberKey();
  return *internal_default_instance();
}

Lacp_Interfaces_Interface_Members_MemberKey* Lacp_Interfaces_Interface_Members_MemberKey::New(::google::protobuf::Arena* arena) const {
  Lacp_Interfaces_Interface_Members_MemberKey* n = new Lacp_Interfaces_Interface_Members_MemberKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Lacp_Interfaces_Interface_Members_MemberKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.MemberKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  interface_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && member_ != NULL) {
    delete member_;
  }
  member_ = NULL;
  _internal_metadata_.Clear();
}

bool Lacp_Interfaces_Interface_Members_MemberKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.MemberKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string interface = 1 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/interface"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_interface()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->interface().data(), static_cast<int>(this->interface().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.MemberKey.interface"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member member = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_member()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.MemberKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.MemberKey)
  return false;
#undef DO_
}

void Lacp_Interfaces_Interface_Members_MemberKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.MemberKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string interface = 1 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/interface"];
  if (this->interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->interface().data(), static_cast<int>(this->interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.MemberKey.interface");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->interface(), output);
  }

  // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member member = 2;
  if (this->has_member()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->member_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.MemberKey)
}

::google::protobuf::uint8* Lacp_Interfaces_Interface_Members_MemberKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.MemberKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string interface = 1 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/interface"];
  if (this->interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->interface().data(), static_cast<int>(this->interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.MemberKey.interface");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->interface(), target);
  }

  // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member member = 2;
  if (this->has_member()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->member_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.MemberKey)
  return target;
}

size_t Lacp_Interfaces_Interface_Members_MemberKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.MemberKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string interface = 1 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member/interface"];
  if (this->interface().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->interface());
  }

  // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.Member member = 2;
  if (this->has_member()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->member_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Lacp_Interfaces_Interface_Members_MemberKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.MemberKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Lacp_Interfaces_Interface_Members_MemberKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Lacp_Interfaces_Interface_Members_MemberKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.MemberKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.MemberKey)
    MergeFrom(*source);
  }
}

void Lacp_Interfaces_Interface_Members_MemberKey::MergeFrom(const Lacp_Interfaces_Interface_Members_MemberKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.MemberKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.interface().size() > 0) {

    interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.interface_);
  }
  if (from.has_member()) {
    mutable_member()->::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members_Member::MergeFrom(from.member());
  }
}

void Lacp_Interfaces_Interface_Members_MemberKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.MemberKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Lacp_Interfaces_Interface_Members_MemberKey::CopyFrom(const Lacp_Interfaces_Interface_Members_MemberKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.MemberKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Lacp_Interfaces_Interface_Members_MemberKey::IsInitialized() const {
  return true;
}

void Lacp_Interfaces_Interface_Members_MemberKey::Swap(Lacp_Interfaces_Interface_Members_MemberKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Lacp_Interfaces_Interface_Members_MemberKey::InternalSwap(Lacp_Interfaces_Interface_Members_MemberKey* other) {
  using std::swap;
  interface_.Swap(&other->interface_);
  swap(member_, other->member_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Lacp_Interfaces_Interface_Members_MemberKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Lacp_Interfaces_Interface_Members::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Lacp_Interfaces_Interface_Members::kMemberFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Lacp_Interfaces_Interface_Members::Lacp_Interfaces_Interface_Members()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces_Interface_Members();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members)
}
Lacp_Interfaces_Interface_Members::Lacp_Interfaces_Interface_Members(const Lacp_Interfaces_Interface_Members& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      member_(from.member_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members)
}

void Lacp_Interfaces_Interface_Members::SharedCtor() {
  _cached_size_ = 0;
}

Lacp_Interfaces_Interface_Members::~Lacp_Interfaces_Interface_Members() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members)
  SharedDtor();
}

void Lacp_Interfaces_Interface_Members::SharedDtor() {
}

void Lacp_Interfaces_Interface_Members::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Lacp_Interfaces_Interface_Members::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Lacp_Interfaces_Interface_Members& Lacp_Interfaces_Interface_Members::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces_Interface_Members();
  return *internal_default_instance();
}

Lacp_Interfaces_Interface_Members* Lacp_Interfaces_Interface_Members::New(::google::protobuf::Arena* arena) const {
  Lacp_Interfaces_Interface_Members* n = new Lacp_Interfaces_Interface_Members;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Lacp_Interfaces_Interface_Members::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  member_.Clear();
  _internal_metadata_.Clear();
}

bool Lacp_Interfaces_Interface_Members::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(858976562u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.MemberKey member = 107372070 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member"];
      case 107372070: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 858976562 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_member()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members)
  return false;
#undef DO_
}

void Lacp_Interfaces_Interface_Members::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.MemberKey member = 107372070 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->member_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      107372070, this->member(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members)
}

::google::protobuf::uint8* Lacp_Interfaces_Interface_Members::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.MemberKey member = 107372070 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->member_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        107372070, this->member(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members)
  return target;
}

size_t Lacp_Interfaces_Interface_Members::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members.MemberKey member = 107372070 [(.yext.schemapath) = "/lacp/interfaces/interface/members/member"];
  {
    unsigned int count = static_cast<unsigned int>(this->member_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->member(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Lacp_Interfaces_Interface_Members::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members)
  GOOGLE_DCHECK_NE(&from, this);
  const Lacp_Interfaces_Interface_Members* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Lacp_Interfaces_Interface_Members>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members)
    MergeFrom(*source);
  }
}

void Lacp_Interfaces_Interface_Members::MergeFrom(const Lacp_Interfaces_Interface_Members& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  member_.MergeFrom(from.member_);
}

void Lacp_Interfaces_Interface_Members::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Lacp_Interfaces_Interface_Members::CopyFrom(const Lacp_Interfaces_Interface_Members& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Lacp_Interfaces_Interface_Members::IsInitialized() const {
  return true;
}

void Lacp_Interfaces_Interface_Members::Swap(Lacp_Interfaces_Interface_Members* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Lacp_Interfaces_Interface_Members::InternalSwap(Lacp_Interfaces_Interface_Members* other) {
  using std::swap;
  member_.InternalSwap(&other->member_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Lacp_Interfaces_Interface_Members::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Lacp_Interfaces_Interface_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_State_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_State_default_instance_._instance.get_mutable()->system_id_mac_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_State_default_instance_._instance.get_mutable()->system_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Lacp_Interfaces_Interface_State::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void Lacp_Interfaces_Interface_State::clear_system_id_mac() {
  if (GetArenaNoVirtual() == NULL && system_id_mac_ != NULL) {
    delete system_id_mac_;
  }
  system_id_mac_ = NULL;
}
void Lacp_Interfaces_Interface_State::clear_system_priority() {
  if (GetArenaNoVirtual() == NULL && system_priority_ != NULL) {
    delete system_priority_;
  }
  system_priority_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Lacp_Interfaces_Interface_State::kIntervalFieldNumber;
const int Lacp_Interfaces_Interface_State::kLacpModeFieldNumber;
const int Lacp_Interfaces_Interface_State::kNameFieldNumber;
const int Lacp_Interfaces_Interface_State::kSystemIdMacFieldNumber;
const int Lacp_Interfaces_Interface_State::kSystemPriorityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Lacp_Interfaces_Interface_State::Lacp_Interfaces_Interface_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces_Interface_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.State)
}
Lacp_Interfaces_Interface_State::Lacp_Interfaces_Interface_State(const Lacp_Interfaces_Interface_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_system_id_mac()) {
    system_id_mac_ = new ::ywrapper::StringValue(*from.system_id_mac_);
  } else {
    system_id_mac_ = NULL;
  }
  if (from.has_system_priority()) {
    system_priority_ = new ::ywrapper::UintValue(*from.system_priority_);
  } else {
    system_priority_ = NULL;
  }
  ::memcpy(&interval_, &from.interval_,
    static_cast<size_t>(reinterpret_cast<char*>(&lacp_mode_) -
    reinterpret_cast<char*>(&interval_)) + sizeof(lacp_mode_));
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.State)
}

void Lacp_Interfaces_Interface_State::SharedCtor() {
  ::memset(&name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lacp_mode_) -
      reinterpret_cast<char*>(&name_)) + sizeof(lacp_mode_));
  _cached_size_ = 0;
}

Lacp_Interfaces_Interface_State::~Lacp_Interfaces_Interface_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.State)
  SharedDtor();
}

void Lacp_Interfaces_Interface_State::SharedDtor() {
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete system_id_mac_;
  if (this != internal_default_instance()) delete system_priority_;
}

void Lacp_Interfaces_Interface_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Lacp_Interfaces_Interface_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Lacp_Interfaces_Interface_State& Lacp_Interfaces_Interface_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces_Interface_State();
  return *internal_default_instance();
}

Lacp_Interfaces_Interface_State* Lacp_Interfaces_Interface_State::New(::google::protobuf::Arena* arena) const {
  Lacp_Interfaces_Interface_State* n = new Lacp_Interfaces_Interface_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Lacp_Interfaces_Interface_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && system_id_mac_ != NULL) {
    delete system_id_mac_;
  }
  system_id_mac_ = NULL;
  if (GetArenaNoVirtual() == NULL && system_priority_ != NULL) {
    delete system_priority_;
  }
  system_priority_ = NULL;
  ::memset(&interval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&lacp_mode_) -
      reinterpret_cast<char*>(&interval_)) + sizeof(lacp_mode_));
  _internal_metadata_.Clear();
}

bool Lacp_Interfaces_Interface_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3092802962u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue name = 53396163 [(.yext.schemapath) = "/lacp/interfaces/interface/state/name"];
      case 53396163: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 427169306 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigLacpLacpPeriodType interval = 156781677 [(.yext.schemapath) = "/lacp/interfaces/interface/state/interval"];
      case 156781677: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 1254253416 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_interval(static_cast< ::openconfig::enums::OpenconfigLacpLacpPeriodType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigLacpLacpActivityType lacp_mode = 285910318 [(.yext.schemapath) = "/lacp/interfaces/interface/state/lacp-mode"];
      case 285910318: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 2287282544 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_lacp_mode(static_cast< ::openconfig::enums::OpenconfigLacpLacpActivityType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue system_id_mac = 308184979 [(.yext.schemapath) = "/lacp/interfaces/interface/state/system-id-mac"];
      case 308184979: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 2465479834 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_system_id_mac()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue system_priority = 386600370 [(.yext.schemapath) = "/lacp/interfaces/interface/state/system-priority"];
      case 386600370: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 3092802962 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_system_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.State)
  return false;
#undef DO_
}

void Lacp_Interfaces_Interface_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue name = 53396163 [(.yext.schemapath) = "/lacp/interfaces/interface/state/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      53396163, *this->name_, output);
  }

  // .openconfig.enums.OpenconfigLacpLacpPeriodType interval = 156781677 [(.yext.schemapath) = "/lacp/interfaces/interface/state/interval"];
  if (this->interval() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      156781677, this->interval(), output);
  }

  // .openconfig.enums.OpenconfigLacpLacpActivityType lacp_mode = 285910318 [(.yext.schemapath) = "/lacp/interfaces/interface/state/lacp-mode"];
  if (this->lacp_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      285910318, this->lacp_mode(), output);
  }

  // .ywrapper.StringValue system_id_mac = 308184979 [(.yext.schemapath) = "/lacp/interfaces/interface/state/system-id-mac"];
  if (this->has_system_id_mac()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      308184979, *this->system_id_mac_, output);
  }

  // .ywrapper.UintValue system_priority = 386600370 [(.yext.schemapath) = "/lacp/interfaces/interface/state/system-priority"];
  if (this->has_system_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      386600370, *this->system_priority_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.State)
}

::google::protobuf::uint8* Lacp_Interfaces_Interface_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue name = 53396163 [(.yext.schemapath) = "/lacp/interfaces/interface/state/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        53396163, *this->name_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigLacpLacpPeriodType interval = 156781677 [(.yext.schemapath) = "/lacp/interfaces/interface/state/interval"];
  if (this->interval() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      156781677, this->interval(), target);
  }

  // .openconfig.enums.OpenconfigLacpLacpActivityType lacp_mode = 285910318 [(.yext.schemapath) = "/lacp/interfaces/interface/state/lacp-mode"];
  if (this->lacp_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      285910318, this->lacp_mode(), target);
  }

  // .ywrapper.StringValue system_id_mac = 308184979 [(.yext.schemapath) = "/lacp/interfaces/interface/state/system-id-mac"];
  if (this->has_system_id_mac()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        308184979, *this->system_id_mac_, deterministic, target);
  }

  // .ywrapper.UintValue system_priority = 386600370 [(.yext.schemapath) = "/lacp/interfaces/interface/state/system-priority"];
  if (this->has_system_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        386600370, *this->system_priority_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.State)
  return target;
}

size_t Lacp_Interfaces_Interface_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue name = 53396163 [(.yext.schemapath) = "/lacp/interfaces/interface/state/name"];
  if (this->has_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  // .ywrapper.StringValue system_id_mac = 308184979 [(.yext.schemapath) = "/lacp/interfaces/interface/state/system-id-mac"];
  if (this->has_system_id_mac()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->system_id_mac_);
  }

  // .ywrapper.UintValue system_priority = 386600370 [(.yext.schemapath) = "/lacp/interfaces/interface/state/system-priority"];
  if (this->has_system_priority()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->system_priority_);
  }

  // .openconfig.enums.OpenconfigLacpLacpPeriodType interval = 156781677 [(.yext.schemapath) = "/lacp/interfaces/interface/state/interval"];
  if (this->interval() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->interval());
  }

  // .openconfig.enums.OpenconfigLacpLacpActivityType lacp_mode = 285910318 [(.yext.schemapath) = "/lacp/interfaces/interface/state/lacp-mode"];
  if (this->lacp_mode() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->lacp_mode());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Lacp_Interfaces_Interface_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Lacp_Interfaces_Interface_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Lacp_Interfaces_Interface_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.State)
    MergeFrom(*source);
  }
}

void Lacp_Interfaces_Interface_State::MergeFrom(const Lacp_Interfaces_Interface_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
  if (from.has_system_id_mac()) {
    mutable_system_id_mac()->::ywrapper::StringValue::MergeFrom(from.system_id_mac());
  }
  if (from.has_system_priority()) {
    mutable_system_priority()->::ywrapper::UintValue::MergeFrom(from.system_priority());
  }
  if (from.interval() != 0) {
    set_interval(from.interval());
  }
  if (from.lacp_mode() != 0) {
    set_lacp_mode(from.lacp_mode());
  }
}

void Lacp_Interfaces_Interface_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Lacp_Interfaces_Interface_State::CopyFrom(const Lacp_Interfaces_Interface_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Lacp_Interfaces_Interface_State::IsInitialized() const {
  return true;
}

void Lacp_Interfaces_Interface_State::Swap(Lacp_Interfaces_Interface_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Lacp_Interfaces_Interface_State::InternalSwap(Lacp_Interfaces_Interface_State* other) {
  using std::swap;
  swap(name_, other->name_);
  swap(system_id_mac_, other->system_id_mac_);
  swap(system_priority_, other->system_priority_);
  swap(interval_, other->interval_);
  swap(lacp_mode_, other->lacp_mode_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Lacp_Interfaces_Interface_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Lacp_Interfaces_Interface::InitAsDefaultInstance() {
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Config*>(
      ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Config::internal_default_instance());
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_default_instance_._instance.get_mutable()->members_ = const_cast< ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members*>(
      ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members::internal_default_instance());
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_Interface_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_State*>(
      ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Lacp_Interfaces_Interface::kConfigFieldNumber;
const int Lacp_Interfaces_Interface::kMembersFieldNumber;
const int Lacp_Interfaces_Interface::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Lacp_Interfaces_Interface::Lacp_Interfaces_Interface()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces_Interface();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_lacp.Lacp.Interfaces.Interface)
}
Lacp_Interfaces_Interface::Lacp_Interfaces_Interface(const Lacp_Interfaces_Interface& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_members()) {
    members_ = new ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members(*from.members_);
  } else {
    members_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_lacp.Lacp.Interfaces.Interface)
}

void Lacp_Interfaces_Interface::SharedCtor() {
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&members_) -
      reinterpret_cast<char*>(&config_)) + sizeof(members_));
  _cached_size_ = 0;
}

Lacp_Interfaces_Interface::~Lacp_Interfaces_Interface() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_lacp.Lacp.Interfaces.Interface)
  SharedDtor();
}

void Lacp_Interfaces_Interface::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete members_;
}

void Lacp_Interfaces_Interface::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Lacp_Interfaces_Interface::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Lacp_Interfaces_Interface& Lacp_Interfaces_Interface::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces_Interface();
  return *internal_default_instance();
}

Lacp_Interfaces_Interface* Lacp_Interfaces_Interface::New(::google::protobuf::Arena* arena) const {
  Lacp_Interfaces_Interface* n = new Lacp_Interfaces_Interface;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Lacp_Interfaces_Interface::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && members_ != NULL) {
    delete members_;
  }
  members_ = NULL;
  _internal_metadata_.Clear();
}

bool Lacp_Interfaces_Interface::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3585756330u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Config config = 267814 [(.yext.schemapath) = "/lacp/interfaces/interface/config"];
      case 267814: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 2142514 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.State state = 409381779 [(.yext.schemapath) = "/lacp/interfaces/interface/state"];
      case 409381779: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 3275054234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members members = 448219541 [(.yext.schemapath) = "/lacp/interfaces/interface/members"];
      case 448219541: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 3585756330 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_members()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_lacp.Lacp.Interfaces.Interface)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_lacp.Lacp.Interfaces.Interface)
  return false;
#undef DO_
}

void Lacp_Interfaces_Interface::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Config config = 267814 [(.yext.schemapath) = "/lacp/interfaces/interface/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      267814, *this->config_, output);
  }

  // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.State state = 409381779 [(.yext.schemapath) = "/lacp/interfaces/interface/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      409381779, *this->state_, output);
  }

  // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members members = 448219541 [(.yext.schemapath) = "/lacp/interfaces/interface/members"];
  if (this->has_members()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      448219541, *this->members_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_lacp.Lacp.Interfaces.Interface)
}

::google::protobuf::uint8* Lacp_Interfaces_Interface::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Config config = 267814 [(.yext.schemapath) = "/lacp/interfaces/interface/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        267814, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.State state = 409381779 [(.yext.schemapath) = "/lacp/interfaces/interface/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        409381779, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members members = 448219541 [(.yext.schemapath) = "/lacp/interfaces/interface/members"];
  if (this->has_members()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        448219541, *this->members_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_lacp.Lacp.Interfaces.Interface)
  return target;
}

size_t Lacp_Interfaces_Interface::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Config config = 267814 [(.yext.schemapath) = "/lacp/interfaces/interface/config"];
  if (this->has_config()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.State state = 409381779 [(.yext.schemapath) = "/lacp/interfaces/interface/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface.Members members = 448219541 [(.yext.schemapath) = "/lacp/interfaces/interface/members"];
  if (this->has_members()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->members_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Lacp_Interfaces_Interface::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface)
  GOOGLE_DCHECK_NE(&from, this);
  const Lacp_Interfaces_Interface* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Lacp_Interfaces_Interface>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_lacp.Lacp.Interfaces.Interface)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_lacp.Lacp.Interfaces.Interface)
    MergeFrom(*source);
  }
}

void Lacp_Interfaces_Interface::MergeFrom(const Lacp_Interfaces_Interface& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Config::MergeFrom(from.config());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_State::MergeFrom(from.state());
  }
  if (from.has_members()) {
    mutable_members()->::openconfig::openconfig_lacp::Lacp_Interfaces_Interface_Members::MergeFrom(from.members());
  }
}

void Lacp_Interfaces_Interface::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Lacp_Interfaces_Interface::CopyFrom(const Lacp_Interfaces_Interface& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.Interface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Lacp_Interfaces_Interface::IsInitialized() const {
  return true;
}

void Lacp_Interfaces_Interface::Swap(Lacp_Interfaces_Interface* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Lacp_Interfaces_Interface::InternalSwap(Lacp_Interfaces_Interface* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(state_, other->state_);
  swap(members_, other->members_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Lacp_Interfaces_Interface::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Lacp_Interfaces_InterfaceKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_lacp::_Lacp_Interfaces_InterfaceKey_default_instance_._instance.get_mutable()->interface_ = const_cast< ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface*>(
      ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Lacp_Interfaces_InterfaceKey::kNameFieldNumber;
const int Lacp_Interfaces_InterfaceKey::kInterfaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Lacp_Interfaces_InterfaceKey::Lacp_Interfaces_InterfaceKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces_InterfaceKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_lacp.Lacp.Interfaces.InterfaceKey)
}
Lacp_Interfaces_InterfaceKey::Lacp_Interfaces_InterfaceKey(const Lacp_Interfaces_InterfaceKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_interface()) {
    interface_ = new ::openconfig::openconfig_lacp::Lacp_Interfaces_Interface(*from.interface_);
  } else {
    interface_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_lacp.Lacp.Interfaces.InterfaceKey)
}

void Lacp_Interfaces_InterfaceKey::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interface_ = NULL;
  _cached_size_ = 0;
}

Lacp_Interfaces_InterfaceKey::~Lacp_Interfaces_InterfaceKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_lacp.Lacp.Interfaces.InterfaceKey)
  SharedDtor();
}

void Lacp_Interfaces_InterfaceKey::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete interface_;
}

void Lacp_Interfaces_InterfaceKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Lacp_Interfaces_InterfaceKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Lacp_Interfaces_InterfaceKey& Lacp_Interfaces_InterfaceKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces_InterfaceKey();
  return *internal_default_instance();
}

Lacp_Interfaces_InterfaceKey* Lacp_Interfaces_InterfaceKey::New(::google::protobuf::Arena* arena) const {
  Lacp_Interfaces_InterfaceKey* n = new Lacp_Interfaces_InterfaceKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Lacp_Interfaces_InterfaceKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_lacp.Lacp.Interfaces.InterfaceKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
  _internal_metadata_.Clear();
}

bool Lacp_Interfaces_InterfaceKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_lacp.Lacp.Interfaces.InterfaceKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.yext.schemapath) = "/lacp/interfaces/interface/name"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "openconfig.openconfig_lacp.Lacp.Interfaces.InterfaceKey.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface interface = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_lacp.Lacp.Interfaces.InterfaceKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_lacp.Lacp.Interfaces.InterfaceKey)
  return false;
#undef DO_
}

void Lacp_Interfaces_InterfaceKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_lacp.Lacp.Interfaces.InterfaceKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.yext.schemapath) = "/lacp/interfaces/interface/name"];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_lacp.Lacp.Interfaces.InterfaceKey.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface interface = 2;
  if (this->has_interface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->interface_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_lacp.Lacp.Interfaces.InterfaceKey)
}

::google::protobuf::uint8* Lacp_Interfaces_InterfaceKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_lacp.Lacp.Interfaces.InterfaceKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.yext.schemapath) = "/lacp/interfaces/interface/name"];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_lacp.Lacp.Interfaces.InterfaceKey.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface interface = 2;
  if (this->has_interface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->interface_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_lacp.Lacp.Interfaces.InterfaceKey)
  return target;
}

size_t Lacp_Interfaces_InterfaceKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_lacp.Lacp.Interfaces.InterfaceKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1 [(.yext.schemapath) = "/lacp/interfaces/interface/name"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .openconfig.openconfig_lacp.Lacp.Interfaces.Interface interface = 2;
  if (this->has_interface()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interface_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Lacp_Interfaces_InterfaceKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.InterfaceKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Lacp_Interfaces_InterfaceKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Lacp_Interfaces_InterfaceKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_lacp.Lacp.Interfaces.InterfaceKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_lacp.Lacp.Interfaces.InterfaceKey)
    MergeFrom(*source);
  }
}

void Lacp_Interfaces_InterfaceKey::MergeFrom(const Lacp_Interfaces_InterfaceKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.InterfaceKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_interface()) {
    mutable_interface()->::openconfig::openconfig_lacp::Lacp_Interfaces_Interface::MergeFrom(from.interface());
  }
}

void Lacp_Interfaces_InterfaceKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.InterfaceKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Lacp_Interfaces_InterfaceKey::CopyFrom(const Lacp_Interfaces_InterfaceKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_lacp.Lacp.Interfaces.InterfaceKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Lacp_Interfaces_InterfaceKey::IsInitialized() const {
  return true;
}

void Lacp_Interfaces_InterfaceKey::Swap(Lacp_Interfaces_InterfaceKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Lacp_Interfaces_InterfaceKey::InternalSwap(Lacp_Interfaces_InterfaceKey* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(interface_, other->interface_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Lacp_Interfaces_InterfaceKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Lacp_Interfaces::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Lacp_Interfaces::kInterfaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Lacp_Interfaces::Lacp_Interfaces()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_lacp.Lacp.Interfaces)
}
Lacp_Interfaces::Lacp_Interfaces(const Lacp_Interfaces& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      interface_(from.interface_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_lacp.Lacp.Interfaces)
}

void Lacp_Interfaces::SharedCtor() {
  _cached_size_ = 0;
}

Lacp_Interfaces::~Lacp_Interfaces() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_lacp.Lacp.Interfaces)
  SharedDtor();
}

void Lacp_Interfaces::SharedDtor() {
}

void Lacp_Interfaces::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Lacp_Interfaces::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Lacp_Interfaces& Lacp_Interfaces::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_Interfaces();
  return *internal_default_instance();
}

Lacp_Interfaces* Lacp_Interfaces::New(::google::protobuf::Arena* arena) const {
  Lacp_Interfaces* n = new Lacp_Interfaces;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Lacp_Interfaces::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_lacp.Lacp.Interfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  interface_.Clear();
  _internal_metadata_.Clear();
}

bool Lacp_Interfaces::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_lacp.Lacp.Interfaces)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1696881930u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_lacp.Lacp.Interfaces.InterfaceKey interface = 212110241 [(.yext.schemapath) = "/lacp/interfaces/interface"];
      case 212110241: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 1696881930 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_interface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_lacp.Lacp.Interfaces)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_lacp.Lacp.Interfaces)
  return false;
#undef DO_
}

void Lacp_Interfaces::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_lacp.Lacp.Interfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_lacp.Lacp.Interfaces.InterfaceKey interface = 212110241 [(.yext.schemapath) = "/lacp/interfaces/interface"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interface_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      212110241, this->interface(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_lacp.Lacp.Interfaces)
}

::google::protobuf::uint8* Lacp_Interfaces::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_lacp.Lacp.Interfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_lacp.Lacp.Interfaces.InterfaceKey interface = 212110241 [(.yext.schemapath) = "/lacp/interfaces/interface"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interface_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        212110241, this->interface(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_lacp.Lacp.Interfaces)
  return target;
}

size_t Lacp_Interfaces::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_lacp.Lacp.Interfaces)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_lacp.Lacp.Interfaces.InterfaceKey interface = 212110241 [(.yext.schemapath) = "/lacp/interfaces/interface"];
  {
    unsigned int count = static_cast<unsigned int>(this->interface_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->interface(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Lacp_Interfaces::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_lacp.Lacp.Interfaces)
  GOOGLE_DCHECK_NE(&from, this);
  const Lacp_Interfaces* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Lacp_Interfaces>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_lacp.Lacp.Interfaces)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_lacp.Lacp.Interfaces)
    MergeFrom(*source);
  }
}

void Lacp_Interfaces::MergeFrom(const Lacp_Interfaces& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_lacp.Lacp.Interfaces)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  interface_.MergeFrom(from.interface_);
}

void Lacp_Interfaces::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_lacp.Lacp.Interfaces)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Lacp_Interfaces::CopyFrom(const Lacp_Interfaces& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_lacp.Lacp.Interfaces)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Lacp_Interfaces::IsInitialized() const {
  return true;
}

void Lacp_Interfaces::Swap(Lacp_Interfaces* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Lacp_Interfaces::InternalSwap(Lacp_Interfaces* other) {
  using std::swap;
  interface_.InternalSwap(&other->interface_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Lacp_Interfaces::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Lacp_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_lacp::_Lacp_State_default_instance_._instance.get_mutable()->system_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Lacp_State::clear_system_priority() {
  if (GetArenaNoVirtual() == NULL && system_priority_ != NULL) {
    delete system_priority_;
  }
  system_priority_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Lacp_State::kSystemPriorityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Lacp_State::Lacp_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_lacp.Lacp.State)
}
Lacp_State::Lacp_State(const Lacp_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_system_priority()) {
    system_priority_ = new ::ywrapper::UintValue(*from.system_priority_);
  } else {
    system_priority_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_lacp.Lacp.State)
}

void Lacp_State::SharedCtor() {
  system_priority_ = NULL;
  _cached_size_ = 0;
}

Lacp_State::~Lacp_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_lacp.Lacp.State)
  SharedDtor();
}

void Lacp_State::SharedDtor() {
  if (this != internal_default_instance()) delete system_priority_;
}

void Lacp_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Lacp_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Lacp_State& Lacp_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp_State();
  return *internal_default_instance();
}

Lacp_State* Lacp_State::New(::google::protobuf::Arena* arena) const {
  Lacp_State* n = new Lacp_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Lacp_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_lacp.Lacp.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && system_priority_ != NULL) {
    delete system_priority_;
  }
  system_priority_ = NULL;
  _internal_metadata_.Clear();
}

bool Lacp_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_lacp.Lacp.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4076976970u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue system_priority = 509622121 [(.yext.schemapath) = "/lacp/state/system-priority"];
      case 509622121: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 4076976970 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_system_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_lacp.Lacp.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_lacp.Lacp.State)
  return false;
#undef DO_
}

void Lacp_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_lacp.Lacp.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue system_priority = 509622121 [(.yext.schemapath) = "/lacp/state/system-priority"];
  if (this->has_system_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      509622121, *this->system_priority_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_lacp.Lacp.State)
}

::google::protobuf::uint8* Lacp_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_lacp.Lacp.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue system_priority = 509622121 [(.yext.schemapath) = "/lacp/state/system-priority"];
  if (this->has_system_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        509622121, *this->system_priority_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_lacp.Lacp.State)
  return target;
}

size_t Lacp_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_lacp.Lacp.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue system_priority = 509622121 [(.yext.schemapath) = "/lacp/state/system-priority"];
  if (this->has_system_priority()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->system_priority_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Lacp_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_lacp.Lacp.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Lacp_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Lacp_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_lacp.Lacp.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_lacp.Lacp.State)
    MergeFrom(*source);
  }
}

void Lacp_State::MergeFrom(const Lacp_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_lacp.Lacp.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_system_priority()) {
    mutable_system_priority()->::ywrapper::UintValue::MergeFrom(from.system_priority());
  }
}

void Lacp_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_lacp.Lacp.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Lacp_State::CopyFrom(const Lacp_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_lacp.Lacp.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Lacp_State::IsInitialized() const {
  return true;
}

void Lacp_State::Swap(Lacp_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Lacp_State::InternalSwap(Lacp_State* other) {
  using std::swap;
  swap(system_priority_, other->system_priority_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Lacp_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Lacp::InitAsDefaultInstance() {
  ::openconfig::openconfig_lacp::_Lacp_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_lacp::Lacp_Config*>(
      ::openconfig::openconfig_lacp::Lacp_Config::internal_default_instance());
  ::openconfig::openconfig_lacp::_Lacp_default_instance_._instance.get_mutable()->interfaces_ = const_cast< ::openconfig::openconfig_lacp::Lacp_Interfaces*>(
      ::openconfig::openconfig_lacp::Lacp_Interfaces::internal_default_instance());
  ::openconfig::openconfig_lacp::_Lacp_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_lacp::Lacp_State*>(
      ::openconfig::openconfig_lacp::Lacp_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Lacp::kConfigFieldNumber;
const int Lacp::kInterfacesFieldNumber;
const int Lacp::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Lacp::Lacp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_lacp.Lacp)
}
Lacp::Lacp(const Lacp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_interfaces()) {
    interfaces_ = new ::openconfig::openconfig_lacp::Lacp_Interfaces(*from.interfaces_);
  } else {
    interfaces_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_lacp::Lacp_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_lacp::Lacp_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_lacp.Lacp)
}

void Lacp::SharedCtor() {
  ::memset(&interfaces_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&interfaces_)) + sizeof(config_));
  _cached_size_ = 0;
}

Lacp::~Lacp() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_lacp.Lacp)
  SharedDtor();
}

void Lacp::SharedDtor() {
  if (this != internal_default_instance()) delete interfaces_;
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
}

void Lacp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Lacp::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Lacp& Lacp::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::InitDefaultsLacp();
  return *internal_default_instance();
}

Lacp* Lacp::New(::google::protobuf::Arena* arena) const {
  Lacp* n = new Lacp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Lacp::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_lacp.Lacp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && interfaces_ != NULL) {
    delete interfaces_;
  }
  interfaces_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool Lacp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_lacp.Lacp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3331336250u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_lacp.Lacp.Interfaces interfaces = 278182533 [(.yext.schemapath) = "/lacp/interfaces"];
      case 278182533: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 2225460266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interfaces()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_lacp.Lacp.State state = 340469368 [(.yext.schemapath) = "/lacp/state"];
      case 340469368: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 2723754946 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_lacp.Lacp.Config config = 416417031 [(.yext.schemapath) = "/lacp/config"];
      case 416417031: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 3331336250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_lacp.Lacp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_lacp.Lacp)
  return false;
#undef DO_
}

void Lacp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_lacp.Lacp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_lacp.Lacp.Interfaces interfaces = 278182533 [(.yext.schemapath) = "/lacp/interfaces"];
  if (this->has_interfaces()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      278182533, *this->interfaces_, output);
  }

  // .openconfig.openconfig_lacp.Lacp.State state = 340469368 [(.yext.schemapath) = "/lacp/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      340469368, *this->state_, output);
  }

  // .openconfig.openconfig_lacp.Lacp.Config config = 416417031 [(.yext.schemapath) = "/lacp/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      416417031, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_lacp.Lacp)
}

::google::protobuf::uint8* Lacp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_lacp.Lacp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_lacp.Lacp.Interfaces interfaces = 278182533 [(.yext.schemapath) = "/lacp/interfaces"];
  if (this->has_interfaces()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        278182533, *this->interfaces_, deterministic, target);
  }

  // .openconfig.openconfig_lacp.Lacp.State state = 340469368 [(.yext.schemapath) = "/lacp/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        340469368, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_lacp.Lacp.Config config = 416417031 [(.yext.schemapath) = "/lacp/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        416417031, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_lacp.Lacp)
  return target;
}

size_t Lacp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_lacp.Lacp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_lacp.Lacp.Interfaces interfaces = 278182533 [(.yext.schemapath) = "/lacp/interfaces"];
  if (this->has_interfaces()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interfaces_);
  }

  // .openconfig.openconfig_lacp.Lacp.State state = 340469368 [(.yext.schemapath) = "/lacp/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_lacp.Lacp.Config config = 416417031 [(.yext.schemapath) = "/lacp/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Lacp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_lacp.Lacp)
  GOOGLE_DCHECK_NE(&from, this);
  const Lacp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Lacp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_lacp.Lacp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_lacp.Lacp)
    MergeFrom(*source);
  }
}

void Lacp::MergeFrom(const Lacp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_lacp.Lacp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_interfaces()) {
    mutable_interfaces()->::openconfig::openconfig_lacp::Lacp_Interfaces::MergeFrom(from.interfaces());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_lacp::Lacp_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_lacp::Lacp_Config::MergeFrom(from.config());
  }
}

void Lacp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_lacp.Lacp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Lacp::CopyFrom(const Lacp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_lacp.Lacp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Lacp::IsInitialized() const {
  return true;
}

void Lacp::Swap(Lacp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Lacp::InternalSwap(Lacp* other) {
  using std::swap;
  swap(interfaces_, other->interfaces_);
  swap(state_, other->state_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Lacp::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5flacp_2fopenconfig_5flacp_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace openconfig_lacp
}  // namespace openconfig

// @@protoc_insertion_point(global_scope)
