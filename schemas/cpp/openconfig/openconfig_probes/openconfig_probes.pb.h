// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: openconfig/openconfig_probes/openconfig_probes.proto

#ifndef PROTOBUF_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto__INCLUDED
#define PROTOBUF_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "github.com/openconfig/ygot/proto/ywrapper/ywrapper.pb.h"
#include "github.com/openconfig/ygot/proto/yext/yext.pb.h"
#include "openconfig/enums/enums.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[20];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsProbes_Probe_ConfigImpl();
void InitDefaultsProbes_Probe_Config();
void InitDefaultsProbes_Probe_StateImpl();
void InitDefaultsProbes_Probe_State();
void InitDefaultsProbes_Probe_Tests_Test_ConfigImpl();
void InitDefaultsProbes_Probe_Tests_Test_Config();
void InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_Item_StateImpl();
void InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_Item_State();
void InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_ItemImpl();
void InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_Item();
void InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_ItemKeyImpl();
void InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_ItemKey();
void InitDefaultsProbes_Probe_Tests_Test_Results_History_ItemsImpl();
void InitDefaultsProbes_Probe_Tests_Test_Results_History_Items();
void InitDefaultsProbes_Probe_Tests_Test_Results_HistoryImpl();
void InitDefaultsProbes_Probe_Tests_Test_Results_History();
void InitDefaultsProbes_Probe_Tests_Test_Results_StateImpl();
void InitDefaultsProbes_Probe_Tests_Test_Results_State();
void InitDefaultsProbes_Probe_Tests_Test_ResultsImpl();
void InitDefaultsProbes_Probe_Tests_Test_Results();
void InitDefaultsProbes_Probe_Tests_Test_StateImpl();
void InitDefaultsProbes_Probe_Tests_Test_State();
void InitDefaultsProbes_Probe_Tests_Test_Target_ConfigImpl();
void InitDefaultsProbes_Probe_Tests_Test_Target_Config();
void InitDefaultsProbes_Probe_Tests_Test_Target_StateImpl();
void InitDefaultsProbes_Probe_Tests_Test_Target_State();
void InitDefaultsProbes_Probe_Tests_Test_TargetImpl();
void InitDefaultsProbes_Probe_Tests_Test_Target();
void InitDefaultsProbes_Probe_Tests_TestImpl();
void InitDefaultsProbes_Probe_Tests_Test();
void InitDefaultsProbes_Probe_Tests_TestKeyImpl();
void InitDefaultsProbes_Probe_Tests_TestKey();
void InitDefaultsProbes_Probe_TestsImpl();
void InitDefaultsProbes_Probe_Tests();
void InitDefaultsProbes_ProbeImpl();
void InitDefaultsProbes_Probe();
void InitDefaultsProbes_ProbeKeyImpl();
void InitDefaultsProbes_ProbeKey();
void InitDefaultsProbesImpl();
void InitDefaultsProbes();
inline void InitDefaults() {
  InitDefaultsProbes_Probe_Config();
  InitDefaultsProbes_Probe_State();
  InitDefaultsProbes_Probe_Tests_Test_Config();
  InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_Item_State();
  InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_Item();
  InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_ItemKey();
  InitDefaultsProbes_Probe_Tests_Test_Results_History_Items();
  InitDefaultsProbes_Probe_Tests_Test_Results_History();
  InitDefaultsProbes_Probe_Tests_Test_Results_State();
  InitDefaultsProbes_Probe_Tests_Test_Results();
  InitDefaultsProbes_Probe_Tests_Test_State();
  InitDefaultsProbes_Probe_Tests_Test_Target_Config();
  InitDefaultsProbes_Probe_Tests_Test_Target_State();
  InitDefaultsProbes_Probe_Tests_Test_Target();
  InitDefaultsProbes_Probe_Tests_Test();
  InitDefaultsProbes_Probe_Tests_TestKey();
  InitDefaultsProbes_Probe_Tests();
  InitDefaultsProbes_Probe();
  InitDefaultsProbes_ProbeKey();
  InitDefaultsProbes();
}
}  // namespace protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto
namespace openconfig {
namespace openconfig_probes {
class Probes;
class ProbesDefaultTypeInternal;
extern ProbesDefaultTypeInternal _Probes_default_instance_;
class Probes_Probe;
class Probes_ProbeDefaultTypeInternal;
extern Probes_ProbeDefaultTypeInternal _Probes_Probe_default_instance_;
class Probes_ProbeKey;
class Probes_ProbeKeyDefaultTypeInternal;
extern Probes_ProbeKeyDefaultTypeInternal _Probes_ProbeKey_default_instance_;
class Probes_Probe_Config;
class Probes_Probe_ConfigDefaultTypeInternal;
extern Probes_Probe_ConfigDefaultTypeInternal _Probes_Probe_Config_default_instance_;
class Probes_Probe_State;
class Probes_Probe_StateDefaultTypeInternal;
extern Probes_Probe_StateDefaultTypeInternal _Probes_Probe_State_default_instance_;
class Probes_Probe_Tests;
class Probes_Probe_TestsDefaultTypeInternal;
extern Probes_Probe_TestsDefaultTypeInternal _Probes_Probe_Tests_default_instance_;
class Probes_Probe_Tests_Test;
class Probes_Probe_Tests_TestDefaultTypeInternal;
extern Probes_Probe_Tests_TestDefaultTypeInternal _Probes_Probe_Tests_Test_default_instance_;
class Probes_Probe_Tests_TestKey;
class Probes_Probe_Tests_TestKeyDefaultTypeInternal;
extern Probes_Probe_Tests_TestKeyDefaultTypeInternal _Probes_Probe_Tests_TestKey_default_instance_;
class Probes_Probe_Tests_Test_Config;
class Probes_Probe_Tests_Test_ConfigDefaultTypeInternal;
extern Probes_Probe_Tests_Test_ConfigDefaultTypeInternal _Probes_Probe_Tests_Test_Config_default_instance_;
class Probes_Probe_Tests_Test_Results;
class Probes_Probe_Tests_Test_ResultsDefaultTypeInternal;
extern Probes_Probe_Tests_Test_ResultsDefaultTypeInternal _Probes_Probe_Tests_Test_Results_default_instance_;
class Probes_Probe_Tests_Test_Results_History;
class Probes_Probe_Tests_Test_Results_HistoryDefaultTypeInternal;
extern Probes_Probe_Tests_Test_Results_HistoryDefaultTypeInternal _Probes_Probe_Tests_Test_Results_History_default_instance_;
class Probes_Probe_Tests_Test_Results_History_Items;
class Probes_Probe_Tests_Test_Results_History_ItemsDefaultTypeInternal;
extern Probes_Probe_Tests_Test_Results_History_ItemsDefaultTypeInternal _Probes_Probe_Tests_Test_Results_History_Items_default_instance_;
class Probes_Probe_Tests_Test_Results_History_Items_Item;
class Probes_Probe_Tests_Test_Results_History_Items_ItemDefaultTypeInternal;
extern Probes_Probe_Tests_Test_Results_History_Items_ItemDefaultTypeInternal _Probes_Probe_Tests_Test_Results_History_Items_Item_default_instance_;
class Probes_Probe_Tests_Test_Results_History_Items_ItemKey;
class Probes_Probe_Tests_Test_Results_History_Items_ItemKeyDefaultTypeInternal;
extern Probes_Probe_Tests_Test_Results_History_Items_ItemKeyDefaultTypeInternal _Probes_Probe_Tests_Test_Results_History_Items_ItemKey_default_instance_;
class Probes_Probe_Tests_Test_Results_History_Items_Item_State;
class Probes_Probe_Tests_Test_Results_History_Items_Item_StateDefaultTypeInternal;
extern Probes_Probe_Tests_Test_Results_History_Items_Item_StateDefaultTypeInternal _Probes_Probe_Tests_Test_Results_History_Items_Item_State_default_instance_;
class Probes_Probe_Tests_Test_Results_State;
class Probes_Probe_Tests_Test_Results_StateDefaultTypeInternal;
extern Probes_Probe_Tests_Test_Results_StateDefaultTypeInternal _Probes_Probe_Tests_Test_Results_State_default_instance_;
class Probes_Probe_Tests_Test_State;
class Probes_Probe_Tests_Test_StateDefaultTypeInternal;
extern Probes_Probe_Tests_Test_StateDefaultTypeInternal _Probes_Probe_Tests_Test_State_default_instance_;
class Probes_Probe_Tests_Test_Target;
class Probes_Probe_Tests_Test_TargetDefaultTypeInternal;
extern Probes_Probe_Tests_Test_TargetDefaultTypeInternal _Probes_Probe_Tests_Test_Target_default_instance_;
class Probes_Probe_Tests_Test_Target_Config;
class Probes_Probe_Tests_Test_Target_ConfigDefaultTypeInternal;
extern Probes_Probe_Tests_Test_Target_ConfigDefaultTypeInternal _Probes_Probe_Tests_Test_Target_Config_default_instance_;
class Probes_Probe_Tests_Test_Target_State;
class Probes_Probe_Tests_Test_Target_StateDefaultTypeInternal;
extern Probes_Probe_Tests_Test_Target_StateDefaultTypeInternal _Probes_Probe_Tests_Test_Target_State_default_instance_;
}  // namespace openconfig_probes
}  // namespace openconfig
namespace openconfig {
namespace openconfig_probes {

// ===================================================================

class Probes_Probe_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_probes.Probes.Probe.Config) */ {
 public:
  Probes_Probe_Config();
  virtual ~Probes_Probe_Config();

  Probes_Probe_Config(const Probes_Probe_Config& from);

  inline Probes_Probe_Config& operator=(const Probes_Probe_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Probes_Probe_Config(Probes_Probe_Config&& from) noexcept
    : Probes_Probe_Config() {
    *this = ::std::move(from);
  }

  inline Probes_Probe_Config& operator=(Probes_Probe_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Probes_Probe_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Probes_Probe_Config* internal_default_instance() {
    return reinterpret_cast<const Probes_Probe_Config*>(
               &_Probes_Probe_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Probes_Probe_Config* other);
  friend void swap(Probes_Probe_Config& a, Probes_Probe_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Probes_Probe_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Probes_Probe_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Probes_Probe_Config& from);
  void MergeFrom(const Probes_Probe_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Probes_Probe_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue name = 252528966 [(.yext.schemapath) = "/probes/probe/config/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 252528966;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .ywrapper.BoolValue enabled = 299351654 [(.yext.schemapath) = "/probes/probe/config/enabled"];
  bool has_enabled() const;
  void clear_enabled();
  static const int kEnabledFieldNumber = 299351654;
  const ::ywrapper::BoolValue& enabled() const;
  ::ywrapper::BoolValue* release_enabled();
  ::ywrapper::BoolValue* mutable_enabled();
  void set_allocated_enabled(::ywrapper::BoolValue* enabled);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_probes.Probes.Probe.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* name_;
  ::ywrapper::BoolValue* enabled_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_ConfigImpl();
};
// -------------------------------------------------------------------

class Probes_Probe_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_probes.Probes.Probe.State) */ {
 public:
  Probes_Probe_State();
  virtual ~Probes_Probe_State();

  Probes_Probe_State(const Probes_Probe_State& from);

  inline Probes_Probe_State& operator=(const Probes_Probe_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Probes_Probe_State(Probes_Probe_State&& from) noexcept
    : Probes_Probe_State() {
    *this = ::std::move(from);
  }

  inline Probes_Probe_State& operator=(Probes_Probe_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Probes_Probe_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Probes_Probe_State* internal_default_instance() {
    return reinterpret_cast<const Probes_Probe_State*>(
               &_Probes_Probe_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Probes_Probe_State* other);
  friend void swap(Probes_Probe_State& a, Probes_Probe_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Probes_Probe_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Probes_Probe_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Probes_Probe_State& from);
  void MergeFrom(const Probes_Probe_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Probes_Probe_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.BoolValue enabled = 35574259 [(.yext.schemapath) = "/probes/probe/state/enabled"];
  bool has_enabled() const;
  void clear_enabled();
  static const int kEnabledFieldNumber = 35574259;
  const ::ywrapper::BoolValue& enabled() const;
  ::ywrapper::BoolValue* release_enabled();
  ::ywrapper::BoolValue* mutable_enabled();
  void set_allocated_enabled(::ywrapper::BoolValue* enabled);

  // .ywrapper.StringValue name = 115823289 [(.yext.schemapath) = "/probes/probe/state/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 115823289;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_probes.Probes.Probe.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::BoolValue* enabled_;
  ::ywrapper::StringValue* name_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_StateImpl();
};
// -------------------------------------------------------------------

class Probes_Probe_Tests_Test_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config) */ {
 public:
  Probes_Probe_Tests_Test_Config();
  virtual ~Probes_Probe_Tests_Test_Config();

  Probes_Probe_Tests_Test_Config(const Probes_Probe_Tests_Test_Config& from);

  inline Probes_Probe_Tests_Test_Config& operator=(const Probes_Probe_Tests_Test_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Probes_Probe_Tests_Test_Config(Probes_Probe_Tests_Test_Config&& from) noexcept
    : Probes_Probe_Tests_Test_Config() {
    *this = ::std::move(from);
  }

  inline Probes_Probe_Tests_Test_Config& operator=(Probes_Probe_Tests_Test_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Probes_Probe_Tests_Test_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Probes_Probe_Tests_Test_Config* internal_default_instance() {
    return reinterpret_cast<const Probes_Probe_Tests_Test_Config*>(
               &_Probes_Probe_Tests_Test_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Probes_Probe_Tests_Test_Config* other);
  friend void swap(Probes_Probe_Tests_Test_Config& a, Probes_Probe_Tests_Test_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Probes_Probe_Tests_Test_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Probes_Probe_Tests_Test_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Probes_Probe_Tests_Test_Config& from);
  void MergeFrom(const Probes_Probe_Tests_Test_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Probes_Probe_Tests_Test_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue source = 17077703 [(.yext.schemapath) = "/probes/probe/tests/test/config/source"];
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 17077703;
  const ::ywrapper::StringValue& source() const;
  ::ywrapper::StringValue* release_source();
  ::ywrapper::StringValue* mutable_source();
  void set_allocated_source(::ywrapper::StringValue* source);

  // .ywrapper.UintValue history_size = 60923906 [(.yext.schemapath) = "/probes/probe/tests/test/config/history-size"];
  bool has_history_size() const;
  void clear_history_size();
  static const int kHistorySizeFieldNumber = 60923906;
  const ::ywrapper::UintValue& history_size() const;
  ::ywrapper::UintValue* release_history_size();
  ::ywrapper::UintValue* mutable_history_size();
  void set_allocated_history_size(::ywrapper::UintValue* history_size);

  // .ywrapper.UintValue interval = 65230595 [(.yext.schemapath) = "/probes/probe/tests/test/config/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 65230595;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.UintValue count = 208592917 [(.yext.schemapath) = "/probes/probe/tests/test/config/count"];
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 208592917;
  const ::ywrapper::UintValue& count() const;
  ::ywrapper::UintValue* release_count();
  ::ywrapper::UintValue* mutable_count();
  void set_allocated_count(::ywrapper::UintValue* count);

  // .ywrapper.StringValue name = 225036113 [(.yext.schemapath) = "/probes/probe/tests/test/config/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 225036113;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .ywrapper.UintValue dscp = 425022362 [(.yext.schemapath) = "/probes/probe/tests/test/config/dscp"];
  bool has_dscp() const;
  void clear_dscp();
  static const int kDscpFieldNumber = 425022362;
  const ::ywrapper::UintValue& dscp() const;
  ::ywrapper::UintValue* release_dscp();
  ::ywrapper::UintValue* mutable_dscp();
  void set_allocated_dscp(::ywrapper::UintValue* dscp);

  // .ywrapper.UintValue source_port = 452973905 [(.yext.schemapath) = "/probes/probe/tests/test/config/source-port"];
  bool has_source_port() const;
  void clear_source_port();
  static const int kSourcePortFieldNumber = 452973905;
  const ::ywrapper::UintValue& source_port() const;
  ::ywrapper::UintValue* release_source_port();
  ::ywrapper::UintValue* mutable_source_port();
  void set_allocated_source_port(::ywrapper::UintValue* source_port);

  // .ywrapper.BoolValue enabled = 453000475 [(.yext.schemapath) = "/probes/probe/tests/test/config/enabled"];
  bool has_enabled() const;
  void clear_enabled();
  static const int kEnabledFieldNumber = 453000475;
  const ::ywrapper::BoolValue& enabled() const;
  ::ywrapper::BoolValue* release_enabled();
  ::ywrapper::BoolValue* mutable_enabled();
  void set_allocated_enabled(::ywrapper::BoolValue* enabled);

  // .openconfig.enums.OpenconfigProbesTestType test_type = 426757249 [(.yext.schemapath) = "/probes/probe/tests/test/config/test-type"];
  void clear_test_type();
  static const int kTestTypeFieldNumber = 426757249;
  ::openconfig::enums::OpenconfigProbesTestType test_type() const;
  void set_test_type(::openconfig::enums::OpenconfigProbesTestType value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* source_;
  ::ywrapper::UintValue* history_size_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::UintValue* count_;
  ::ywrapper::StringValue* name_;
  ::ywrapper::UintValue* dscp_;
  ::ywrapper::UintValue* source_port_;
  ::ywrapper::BoolValue* enabled_;
  int test_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_ConfigImpl();
};
// -------------------------------------------------------------------

class Probes_Probe_Tests_Test_Results_History_Items_Item_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State) */ {
 public:
  Probes_Probe_Tests_Test_Results_History_Items_Item_State();
  virtual ~Probes_Probe_Tests_Test_Results_History_Items_Item_State();

  Probes_Probe_Tests_Test_Results_History_Items_Item_State(const Probes_Probe_Tests_Test_Results_History_Items_Item_State& from);

  inline Probes_Probe_Tests_Test_Results_History_Items_Item_State& operator=(const Probes_Probe_Tests_Test_Results_History_Items_Item_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Probes_Probe_Tests_Test_Results_History_Items_Item_State(Probes_Probe_Tests_Test_Results_History_Items_Item_State&& from) noexcept
    : Probes_Probe_Tests_Test_Results_History_Items_Item_State() {
    *this = ::std::move(from);
  }

  inline Probes_Probe_Tests_Test_Results_History_Items_Item_State& operator=(Probes_Probe_Tests_Test_Results_History_Items_Item_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Probes_Probe_Tests_Test_Results_History_Items_Item_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Probes_Probe_Tests_Test_Results_History_Items_Item_State* internal_default_instance() {
    return reinterpret_cast<const Probes_Probe_Tests_Test_Results_History_Items_Item_State*>(
               &_Probes_Probe_Tests_Test_Results_History_Items_Item_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(Probes_Probe_Tests_Test_Results_History_Items_Item_State* other);
  friend void swap(Probes_Probe_Tests_Test_Results_History_Items_Item_State& a, Probes_Probe_Tests_Test_Results_History_Items_Item_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Probes_Probe_Tests_Test_Results_History_Items_Item_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Probes_Probe_Tests_Test_Results_History_Items_Item_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Probes_Probe_Tests_Test_Results_History_Items_Item_State& from);
  void MergeFrom(const Probes_Probe_Tests_Test_Results_History_Items_Item_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Probes_Probe_Tests_Test_Results_History_Items_Item_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue avg_delay = 63138246 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/avg-delay"];
  bool has_avg_delay() const;
  void clear_avg_delay();
  static const int kAvgDelayFieldNumber = 63138246;
  const ::ywrapper::UintValue& avg_delay() const;
  ::ywrapper::UintValue* release_avg_delay();
  ::ywrapper::UintValue* mutable_avg_delay();
  void set_allocated_avg_delay(::ywrapper::UintValue* avg_delay);

  // .ywrapper.BoolValue failed = 73841595 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/failed"];
  bool has_failed() const;
  void clear_failed();
  static const int kFailedFieldNumber = 73841595;
  const ::ywrapper::BoolValue& failed() const;
  ::ywrapper::BoolValue* release_failed();
  ::ywrapper::BoolValue* mutable_failed();
  void set_allocated_failed(::ywrapper::BoolValue* failed);

  // .ywrapper.UintValue jitter = 78107006 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/jitter"];
  bool has_jitter() const;
  void clear_jitter();
  static const int kJitterFieldNumber = 78107006;
  const ::ywrapper::UintValue& jitter() const;
  ::ywrapper::UintValue* release_jitter();
  ::ywrapper::UintValue* mutable_jitter();
  void set_allocated_jitter(::ywrapper::UintValue* jitter);

  // .ywrapper.UintValue loss_percentage = 85882566 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/loss-percentage"];
  bool has_loss_percentage() const;
  void clear_loss_percentage();
  static const int kLossPercentageFieldNumber = 85882566;
  const ::ywrapper::UintValue& loss_percentage() const;
  ::ywrapper::UintValue* release_loss_percentage();
  ::ywrapper::UintValue* mutable_loss_percentage();
  void set_allocated_loss_percentage(::ywrapper::UintValue* loss_percentage);

  // .ywrapper.UintValue end_timestamp = 87224044 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/end-timestamp"];
  bool has_end_timestamp() const;
  void clear_end_timestamp();
  static const int kEndTimestampFieldNumber = 87224044;
  const ::ywrapper::UintValue& end_timestamp() const;
  ::ywrapper::UintValue* release_end_timestamp();
  ::ywrapper::UintValue* mutable_end_timestamp();
  void set_allocated_end_timestamp(::ywrapper::UintValue* end_timestamp);

  // .ywrapper.UintValue id = 112866779 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/id"];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 112866779;
  const ::ywrapper::UintValue& id() const;
  ::ywrapper::UintValue* release_id();
  ::ywrapper::UintValue* mutable_id();
  void set_allocated_id(::ywrapper::UintValue* id);

  // .ywrapper.UintValue stddev_delay = 175052734 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/stddev-delay"];
  bool has_stddev_delay() const;
  void clear_stddev_delay();
  static const int kStddevDelayFieldNumber = 175052734;
  const ::ywrapper::UintValue& stddev_delay() const;
  ::ywrapper::UintValue* release_stddev_delay();
  ::ywrapper::UintValue* mutable_stddev_delay();
  void set_allocated_stddev_delay(::ywrapper::UintValue* stddev_delay);

  // .ywrapper.UintValue max_delay = 294119624 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/max-delay"];
  bool has_max_delay() const;
  void clear_max_delay();
  static const int kMaxDelayFieldNumber = 294119624;
  const ::ywrapper::UintValue& max_delay() const;
  ::ywrapper::UintValue* release_max_delay();
  ::ywrapper::UintValue* mutable_max_delay();
  void set_allocated_max_delay(::ywrapper::UintValue* max_delay);

  // .ywrapper.UintValue min_delay = 301035426 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/min-delay"];
  bool has_min_delay() const;
  void clear_min_delay();
  static const int kMinDelayFieldNumber = 301035426;
  const ::ywrapper::UintValue& min_delay() const;
  ::ywrapper::UintValue* release_min_delay();
  ::ywrapper::UintValue* mutable_min_delay();
  void set_allocated_min_delay(::ywrapper::UintValue* min_delay);

  // .ywrapper.UintValue probes_sent = 335798140 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/probes-sent"];
  bool has_probes_sent() const;
  void clear_probes_sent();
  static const int kProbesSentFieldNumber = 335798140;
  const ::ywrapper::UintValue& probes_sent() const;
  ::ywrapper::UintValue* release_probes_sent();
  ::ywrapper::UintValue* mutable_probes_sent();
  void set_allocated_probes_sent(::ywrapper::UintValue* probes_sent);

  // .ywrapper.UintValue probes_received = 418621199 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/probes-received"];
  bool has_probes_received() const;
  void clear_probes_received();
  static const int kProbesReceivedFieldNumber = 418621199;
  const ::ywrapper::UintValue& probes_received() const;
  ::ywrapper::UintValue* release_probes_received();
  ::ywrapper::UintValue* mutable_probes_received();
  void set_allocated_probes_received(::ywrapper::UintValue* probes_received);

  // .ywrapper.UintValue start_timestamp = 437505415 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/start-timestamp"];
  bool has_start_timestamp() const;
  void clear_start_timestamp();
  static const int kStartTimestampFieldNumber = 437505415;
  const ::ywrapper::UintValue& start_timestamp() const;
  ::ywrapper::UintValue* release_start_timestamp();
  ::ywrapper::UintValue* mutable_start_timestamp();
  void set_allocated_start_timestamp(::ywrapper::UintValue* start_timestamp);

  // .ywrapper.UintValue timestamp = 484601636 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/timestamp"];
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 484601636;
  const ::ywrapper::UintValue& timestamp() const;
  ::ywrapper::UintValue* release_timestamp();
  ::ywrapper::UintValue* mutable_timestamp();
  void set_allocated_timestamp(::ywrapper::UintValue* timestamp);

  // .ywrapper.UintValue test_duration = 513981625 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/test-duration"];
  bool has_test_duration() const;
  void clear_test_duration();
  static const int kTestDurationFieldNumber = 513981625;
  const ::ywrapper::UintValue& test_duration() const;
  ::ywrapper::UintValue* release_test_duration();
  ::ywrapper::UintValue* mutable_test_duration();
  void set_allocated_test_duration(::ywrapper::UintValue* test_duration);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* avg_delay_;
  ::ywrapper::BoolValue* failed_;
  ::ywrapper::UintValue* jitter_;
  ::ywrapper::UintValue* loss_percentage_;
  ::ywrapper::UintValue* end_timestamp_;
  ::ywrapper::UintValue* id_;
  ::ywrapper::UintValue* stddev_delay_;
  ::ywrapper::UintValue* max_delay_;
  ::ywrapper::UintValue* min_delay_;
  ::ywrapper::UintValue* probes_sent_;
  ::ywrapper::UintValue* probes_received_;
  ::ywrapper::UintValue* start_timestamp_;
  ::ywrapper::UintValue* timestamp_;
  ::ywrapper::UintValue* test_duration_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_Item_StateImpl();
};
// -------------------------------------------------------------------

class Probes_Probe_Tests_Test_Results_History_Items_Item : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item) */ {
 public:
  Probes_Probe_Tests_Test_Results_History_Items_Item();
  virtual ~Probes_Probe_Tests_Test_Results_History_Items_Item();

  Probes_Probe_Tests_Test_Results_History_Items_Item(const Probes_Probe_Tests_Test_Results_History_Items_Item& from);

  inline Probes_Probe_Tests_Test_Results_History_Items_Item& operator=(const Probes_Probe_Tests_Test_Results_History_Items_Item& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Probes_Probe_Tests_Test_Results_History_Items_Item(Probes_Probe_Tests_Test_Results_History_Items_Item&& from) noexcept
    : Probes_Probe_Tests_Test_Results_History_Items_Item() {
    *this = ::std::move(from);
  }

  inline Probes_Probe_Tests_Test_Results_History_Items_Item& operator=(Probes_Probe_Tests_Test_Results_History_Items_Item&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Probes_Probe_Tests_Test_Results_History_Items_Item& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Probes_Probe_Tests_Test_Results_History_Items_Item* internal_default_instance() {
    return reinterpret_cast<const Probes_Probe_Tests_Test_Results_History_Items_Item*>(
               &_Probes_Probe_Tests_Test_Results_History_Items_Item_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Probes_Probe_Tests_Test_Results_History_Items_Item* other);
  friend void swap(Probes_Probe_Tests_Test_Results_History_Items_Item& a, Probes_Probe_Tests_Test_Results_History_Items_Item& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Probes_Probe_Tests_Test_Results_History_Items_Item* New() const PROTOBUF_FINAL { return New(NULL); }

  Probes_Probe_Tests_Test_Results_History_Items_Item* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Probes_Probe_Tests_Test_Results_History_Items_Item& from);
  void MergeFrom(const Probes_Probe_Tests_Test_Results_History_Items_Item& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Probes_Probe_Tests_Test_Results_History_Items_Item* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Probes_Probe_Tests_Test_Results_History_Items_Item_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State state = 437367433 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 437367433;
  const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State& state() const;
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State* release_state();
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_ItemImpl();
};
// -------------------------------------------------------------------

class Probes_Probe_Tests_Test_Results_History_Items_ItemKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey) */ {
 public:
  Probes_Probe_Tests_Test_Results_History_Items_ItemKey();
  virtual ~Probes_Probe_Tests_Test_Results_History_Items_ItemKey();

  Probes_Probe_Tests_Test_Results_History_Items_ItemKey(const Probes_Probe_Tests_Test_Results_History_Items_ItemKey& from);

  inline Probes_Probe_Tests_Test_Results_History_Items_ItemKey& operator=(const Probes_Probe_Tests_Test_Results_History_Items_ItemKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Probes_Probe_Tests_Test_Results_History_Items_ItemKey(Probes_Probe_Tests_Test_Results_History_Items_ItemKey&& from) noexcept
    : Probes_Probe_Tests_Test_Results_History_Items_ItemKey() {
    *this = ::std::move(from);
  }

  inline Probes_Probe_Tests_Test_Results_History_Items_ItemKey& operator=(Probes_Probe_Tests_Test_Results_History_Items_ItemKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Probes_Probe_Tests_Test_Results_History_Items_ItemKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Probes_Probe_Tests_Test_Results_History_Items_ItemKey* internal_default_instance() {
    return reinterpret_cast<const Probes_Probe_Tests_Test_Results_History_Items_ItemKey*>(
               &_Probes_Probe_Tests_Test_Results_History_Items_ItemKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(Probes_Probe_Tests_Test_Results_History_Items_ItemKey* other);
  friend void swap(Probes_Probe_Tests_Test_Results_History_Items_ItemKey& a, Probes_Probe_Tests_Test_Results_History_Items_ItemKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Probes_Probe_Tests_Test_Results_History_Items_ItemKey* New() const PROTOBUF_FINAL { return New(NULL); }

  Probes_Probe_Tests_Test_Results_History_Items_ItemKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Probes_Probe_Tests_Test_Results_History_Items_ItemKey& from);
  void MergeFrom(const Probes_Probe_Tests_Test_Results_History_Items_ItemKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Probes_Probe_Tests_Test_Results_History_Items_ItemKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item item = 2;
  bool has_item() const;
  void clear_item();
  static const int kItemFieldNumber = 2;
  const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item& item() const;
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item* release_item();
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item* mutable_item();
  void set_allocated_item(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item* item);

  // uint64 id = 1 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/id"];
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item* item_;
  ::google::protobuf::uint64 id_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_ItemKeyImpl();
};
// -------------------------------------------------------------------

class Probes_Probe_Tests_Test_Results_History_Items : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items) */ {
 public:
  Probes_Probe_Tests_Test_Results_History_Items();
  virtual ~Probes_Probe_Tests_Test_Results_History_Items();

  Probes_Probe_Tests_Test_Results_History_Items(const Probes_Probe_Tests_Test_Results_History_Items& from);

  inline Probes_Probe_Tests_Test_Results_History_Items& operator=(const Probes_Probe_Tests_Test_Results_History_Items& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Probes_Probe_Tests_Test_Results_History_Items(Probes_Probe_Tests_Test_Results_History_Items&& from) noexcept
    : Probes_Probe_Tests_Test_Results_History_Items() {
    *this = ::std::move(from);
  }

  inline Probes_Probe_Tests_Test_Results_History_Items& operator=(Probes_Probe_Tests_Test_Results_History_Items&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Probes_Probe_Tests_Test_Results_History_Items& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Probes_Probe_Tests_Test_Results_History_Items* internal_default_instance() {
    return reinterpret_cast<const Probes_Probe_Tests_Test_Results_History_Items*>(
               &_Probes_Probe_Tests_Test_Results_History_Items_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(Probes_Probe_Tests_Test_Results_History_Items* other);
  friend void swap(Probes_Probe_Tests_Test_Results_History_Items& a, Probes_Probe_Tests_Test_Results_History_Items& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Probes_Probe_Tests_Test_Results_History_Items* New() const PROTOBUF_FINAL { return New(NULL); }

  Probes_Probe_Tests_Test_Results_History_Items* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Probes_Probe_Tests_Test_Results_History_Items& from);
  void MergeFrom(const Probes_Probe_Tests_Test_Results_History_Items& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Probes_Probe_Tests_Test_Results_History_Items* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Probes_Probe_Tests_Test_Results_History_Items_Item Item;
  typedef Probes_Probe_Tests_Test_Results_History_Items_ItemKey ItemKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey item = 496151855 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item"];
  int item_size() const;
  void clear_item();
  static const int kItemFieldNumber = 496151855;
  const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_ItemKey& item(int index) const;
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_ItemKey* mutable_item(int index);
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_ItemKey* add_item();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_ItemKey >*
      mutable_item();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_ItemKey >&
      item() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_ItemKey > item_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Results_History_ItemsImpl();
};
// -------------------------------------------------------------------

class Probes_Probe_Tests_Test_Results_History : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History) */ {
 public:
  Probes_Probe_Tests_Test_Results_History();
  virtual ~Probes_Probe_Tests_Test_Results_History();

  Probes_Probe_Tests_Test_Results_History(const Probes_Probe_Tests_Test_Results_History& from);

  inline Probes_Probe_Tests_Test_Results_History& operator=(const Probes_Probe_Tests_Test_Results_History& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Probes_Probe_Tests_Test_Results_History(Probes_Probe_Tests_Test_Results_History&& from) noexcept
    : Probes_Probe_Tests_Test_Results_History() {
    *this = ::std::move(from);
  }

  inline Probes_Probe_Tests_Test_Results_History& operator=(Probes_Probe_Tests_Test_Results_History&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Probes_Probe_Tests_Test_Results_History& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Probes_Probe_Tests_Test_Results_History* internal_default_instance() {
    return reinterpret_cast<const Probes_Probe_Tests_Test_Results_History*>(
               &_Probes_Probe_Tests_Test_Results_History_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(Probes_Probe_Tests_Test_Results_History* other);
  friend void swap(Probes_Probe_Tests_Test_Results_History& a, Probes_Probe_Tests_Test_Results_History& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Probes_Probe_Tests_Test_Results_History* New() const PROTOBUF_FINAL { return New(NULL); }

  Probes_Probe_Tests_Test_Results_History* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Probes_Probe_Tests_Test_Results_History& from);
  void MergeFrom(const Probes_Probe_Tests_Test_Results_History& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Probes_Probe_Tests_Test_Results_History* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Probes_Probe_Tests_Test_Results_History_Items Items;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items items = 184490599 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items"];
  bool has_items() const;
  void clear_items();
  static const int kItemsFieldNumber = 184490599;
  const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items& items() const;
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items* release_items();
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items* mutable_items();
  void set_allocated_items(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items* items);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items* items_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Results_HistoryImpl();
};
// -------------------------------------------------------------------

class Probes_Probe_Tests_Test_Results_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State) */ {
 public:
  Probes_Probe_Tests_Test_Results_State();
  virtual ~Probes_Probe_Tests_Test_Results_State();

  Probes_Probe_Tests_Test_Results_State(const Probes_Probe_Tests_Test_Results_State& from);

  inline Probes_Probe_Tests_Test_Results_State& operator=(const Probes_Probe_Tests_Test_Results_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Probes_Probe_Tests_Test_Results_State(Probes_Probe_Tests_Test_Results_State&& from) noexcept
    : Probes_Probe_Tests_Test_Results_State() {
    *this = ::std::move(from);
  }

  inline Probes_Probe_Tests_Test_Results_State& operator=(Probes_Probe_Tests_Test_Results_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Probes_Probe_Tests_Test_Results_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Probes_Probe_Tests_Test_Results_State* internal_default_instance() {
    return reinterpret_cast<const Probes_Probe_Tests_Test_Results_State*>(
               &_Probes_Probe_Tests_Test_Results_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(Probes_Probe_Tests_Test_Results_State* other);
  friend void swap(Probes_Probe_Tests_Test_Results_State& a, Probes_Probe_Tests_Test_Results_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Probes_Probe_Tests_Test_Results_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Probes_Probe_Tests_Test_Results_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Probes_Probe_Tests_Test_Results_State& from);
  void MergeFrom(const Probes_Probe_Tests_Test_Results_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Probes_Probe_Tests_Test_Results_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue loss_percentage = 24155126 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/loss-percentage"];
  bool has_loss_percentage() const;
  void clear_loss_percentage();
  static const int kLossPercentageFieldNumber = 24155126;
  const ::ywrapper::UintValue& loss_percentage() const;
  ::ywrapper::UintValue* release_loss_percentage();
  ::ywrapper::UintValue* mutable_loss_percentage();
  void set_allocated_loss_percentage(::ywrapper::UintValue* loss_percentage);

  // .ywrapper.UintValue start_timestamp = 34444631 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/start-timestamp"];
  bool has_start_timestamp() const;
  void clear_start_timestamp();
  static const int kStartTimestampFieldNumber = 34444631;
  const ::ywrapper::UintValue& start_timestamp() const;
  ::ywrapper::UintValue* release_start_timestamp();
  ::ywrapper::UintValue* mutable_start_timestamp();
  void set_allocated_start_timestamp(::ywrapper::UintValue* start_timestamp);

  // .ywrapper.UintValue stddev_delay = 193510766 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/stddev-delay"];
  bool has_stddev_delay() const;
  void clear_stddev_delay();
  static const int kStddevDelayFieldNumber = 193510766;
  const ::ywrapper::UintValue& stddev_delay() const;
  ::ywrapper::UintValue* release_stddev_delay();
  ::ywrapper::UintValue* mutable_stddev_delay();
  void set_allocated_stddev_delay(::ywrapper::UintValue* stddev_delay);

  // .ywrapper.UintValue probes_received = 229519999 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/probes-received"];
  bool has_probes_received() const;
  void clear_probes_received();
  static const int kProbesReceivedFieldNumber = 229519999;
  const ::ywrapper::UintValue& probes_received() const;
  ::ywrapper::UintValue* release_probes_received();
  ::ywrapper::UintValue* mutable_probes_received();
  void set_allocated_probes_received(::ywrapper::UintValue* probes_received);

  // .ywrapper.UintValue last_test_timestamp = 253022818 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/last-test-timestamp"];
  bool has_last_test_timestamp() const;
  void clear_last_test_timestamp();
  static const int kLastTestTimestampFieldNumber = 253022818;
  const ::ywrapper::UintValue& last_test_timestamp() const;
  ::ywrapper::UintValue* release_last_test_timestamp();
  ::ywrapper::UintValue* mutable_last_test_timestamp();
  void set_allocated_last_test_timestamp(::ywrapper::UintValue* last_test_timestamp);

  // .ywrapper.UintValue test_duration = 320098569 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/test-duration"];
  bool has_test_duration() const;
  void clear_test_duration();
  static const int kTestDurationFieldNumber = 320098569;
  const ::ywrapper::UintValue& test_duration() const;
  ::ywrapper::UintValue* release_test_duration();
  ::ywrapper::UintValue* mutable_test_duration();
  void set_allocated_test_duration(::ywrapper::UintValue* test_duration);

  // .ywrapper.UintValue max_delay = 371640408 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/max-delay"];
  bool has_max_delay() const;
  void clear_max_delay();
  static const int kMaxDelayFieldNumber = 371640408;
  const ::ywrapper::UintValue& max_delay() const;
  ::ywrapper::UintValue* release_max_delay();
  ::ywrapper::UintValue* mutable_max_delay();
  void set_allocated_max_delay(::ywrapper::UintValue* max_delay);

  // .ywrapper.UintValue avg_delay = 399670614 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/avg-delay"];
  bool has_avg_delay() const;
  void clear_avg_delay();
  static const int kAvgDelayFieldNumber = 399670614;
  const ::ywrapper::UintValue& avg_delay() const;
  ::ywrapper::UintValue* release_avg_delay();
  ::ywrapper::UintValue* mutable_avg_delay();
  void set_allocated_avg_delay(::ywrapper::UintValue* avg_delay);

  // .ywrapper.UintValue timestamp = 400955060 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/timestamp"];
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 400955060;
  const ::ywrapper::UintValue& timestamp() const;
  ::ywrapper::UintValue* release_timestamp();
  ::ywrapper::UintValue* mutable_timestamp();
  void set_allocated_timestamp(::ywrapper::UintValue* timestamp);

  // .ywrapper.BoolValue failed = 403171051 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/failed"];
  bool has_failed() const;
  void clear_failed();
  static const int kFailedFieldNumber = 403171051;
  const ::ywrapper::BoolValue& failed() const;
  ::ywrapper::BoolValue* release_failed();
  ::ywrapper::BoolValue* mutable_failed();
  void set_allocated_failed(::ywrapper::BoolValue* failed);

  // .ywrapper.UintValue min_delay = 404486034 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/min-delay"];
  bool has_min_delay() const;
  void clear_min_delay();
  static const int kMinDelayFieldNumber = 404486034;
  const ::ywrapper::UintValue& min_delay() const;
  ::ywrapper::UintValue* release_min_delay();
  ::ywrapper::UintValue* mutable_min_delay();
  void set_allocated_min_delay(::ywrapper::UintValue* min_delay);

  // .ywrapper.UintValue probes_sent = 412856428 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/probes-sent"];
  bool has_probes_sent() const;
  void clear_probes_sent();
  static const int kProbesSentFieldNumber = 412856428;
  const ::ywrapper::UintValue& probes_sent() const;
  ::ywrapper::UintValue* release_probes_sent();
  ::ywrapper::UintValue* mutable_probes_sent();
  void set_allocated_probes_sent(::ywrapper::UintValue* probes_sent);

  // .ywrapper.UintValue jitter = 444850446 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/jitter"];
  bool has_jitter() const;
  void clear_jitter();
  static const int kJitterFieldNumber = 444850446;
  const ::ywrapper::UintValue& jitter() const;
  ::ywrapper::UintValue* release_jitter();
  ::ywrapper::UintValue* mutable_jitter();
  void set_allocated_jitter(::ywrapper::UintValue* jitter);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* loss_percentage_;
  ::ywrapper::UintValue* start_timestamp_;
  ::ywrapper::UintValue* stddev_delay_;
  ::ywrapper::UintValue* probes_received_;
  ::ywrapper::UintValue* last_test_timestamp_;
  ::ywrapper::UintValue* test_duration_;
  ::ywrapper::UintValue* max_delay_;
  ::ywrapper::UintValue* avg_delay_;
  ::ywrapper::UintValue* timestamp_;
  ::ywrapper::BoolValue* failed_;
  ::ywrapper::UintValue* min_delay_;
  ::ywrapper::UintValue* probes_sent_;
  ::ywrapper::UintValue* jitter_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Results_StateImpl();
};
// -------------------------------------------------------------------

class Probes_Probe_Tests_Test_Results : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results) */ {
 public:
  Probes_Probe_Tests_Test_Results();
  virtual ~Probes_Probe_Tests_Test_Results();

  Probes_Probe_Tests_Test_Results(const Probes_Probe_Tests_Test_Results& from);

  inline Probes_Probe_Tests_Test_Results& operator=(const Probes_Probe_Tests_Test_Results& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Probes_Probe_Tests_Test_Results(Probes_Probe_Tests_Test_Results&& from) noexcept
    : Probes_Probe_Tests_Test_Results() {
    *this = ::std::move(from);
  }

  inline Probes_Probe_Tests_Test_Results& operator=(Probes_Probe_Tests_Test_Results&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Probes_Probe_Tests_Test_Results& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Probes_Probe_Tests_Test_Results* internal_default_instance() {
    return reinterpret_cast<const Probes_Probe_Tests_Test_Results*>(
               &_Probes_Probe_Tests_Test_Results_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(Probes_Probe_Tests_Test_Results* other);
  friend void swap(Probes_Probe_Tests_Test_Results& a, Probes_Probe_Tests_Test_Results& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Probes_Probe_Tests_Test_Results* New() const PROTOBUF_FINAL { return New(NULL); }

  Probes_Probe_Tests_Test_Results* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Probes_Probe_Tests_Test_Results& from);
  void MergeFrom(const Probes_Probe_Tests_Test_Results& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Probes_Probe_Tests_Test_Results* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Probes_Probe_Tests_Test_Results_History History;
  typedef Probes_Probe_Tests_Test_Results_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State state = 101657 [(.yext.schemapath) = "/probes/probe/tests/test/results/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 101657;
  const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State& state() const;
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State* release_state();
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State* state);

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History history = 218641498 [(.yext.schemapath) = "/probes/probe/tests/test/results/history"];
  bool has_history() const;
  void clear_history();
  static const int kHistoryFieldNumber = 218641498;
  const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History& history() const;
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History* release_history();
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History* mutable_history();
  void set_allocated_history(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History* history);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State* state_;
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History* history_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_ResultsImpl();
};
// -------------------------------------------------------------------

class Probes_Probe_Tests_Test_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State) */ {
 public:
  Probes_Probe_Tests_Test_State();
  virtual ~Probes_Probe_Tests_Test_State();

  Probes_Probe_Tests_Test_State(const Probes_Probe_Tests_Test_State& from);

  inline Probes_Probe_Tests_Test_State& operator=(const Probes_Probe_Tests_Test_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Probes_Probe_Tests_Test_State(Probes_Probe_Tests_Test_State&& from) noexcept
    : Probes_Probe_Tests_Test_State() {
    *this = ::std::move(from);
  }

  inline Probes_Probe_Tests_Test_State& operator=(Probes_Probe_Tests_Test_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Probes_Probe_Tests_Test_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Probes_Probe_Tests_Test_State* internal_default_instance() {
    return reinterpret_cast<const Probes_Probe_Tests_Test_State*>(
               &_Probes_Probe_Tests_Test_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(Probes_Probe_Tests_Test_State* other);
  friend void swap(Probes_Probe_Tests_Test_State& a, Probes_Probe_Tests_Test_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Probes_Probe_Tests_Test_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Probes_Probe_Tests_Test_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Probes_Probe_Tests_Test_State& from);
  void MergeFrom(const Probes_Probe_Tests_Test_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Probes_Probe_Tests_Test_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue source_port = 32412470 [(.yext.schemapath) = "/probes/probe/tests/test/state/source-port"];
  bool has_source_port() const;
  void clear_source_port();
  static const int kSourcePortFieldNumber = 32412470;
  const ::ywrapper::UintValue& source_port() const;
  ::ywrapper::UintValue* release_source_port();
  ::ywrapper::UintValue* mutable_source_port();
  void set_allocated_source_port(::ywrapper::UintValue* source_port);

  // .ywrapper.UintValue interval = 228767566 [(.yext.schemapath) = "/probes/probe/tests/test/state/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 228767566;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.StringValue source = 330684050 [(.yext.schemapath) = "/probes/probe/tests/test/state/source"];
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 330684050;
  const ::ywrapper::StringValue& source() const;
  ::ywrapper::StringValue* release_source();
  ::ywrapper::StringValue* mutable_source();
  void set_allocated_source(::ywrapper::StringValue* source);

  // .ywrapper.UintValue history_size = 366388155 [(.yext.schemapath) = "/probes/probe/tests/test/state/history-size"];
  bool has_history_size() const;
  void clear_history_size();
  static const int kHistorySizeFieldNumber = 366388155;
  const ::ywrapper::UintValue& history_size() const;
  ::ywrapper::UintValue* release_history_size();
  ::ywrapper::UintValue* mutable_history_size();
  void set_allocated_history_size(::ywrapper::UintValue* history_size);

  // .ywrapper.BoolValue enabled = 400557768 [(.yext.schemapath) = "/probes/probe/tests/test/state/enabled"];
  bool has_enabled() const;
  void clear_enabled();
  static const int kEnabledFieldNumber = 400557768;
  const ::ywrapper::BoolValue& enabled() const;
  ::ywrapper::BoolValue* release_enabled();
  ::ywrapper::BoolValue* mutable_enabled();
  void set_allocated_enabled(::ywrapper::BoolValue* enabled);

  // .ywrapper.StringValue name = 413303480 [(.yext.schemapath) = "/probes/probe/tests/test/state/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 413303480;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .ywrapper.UintValue dscp = 524434947 [(.yext.schemapath) = "/probes/probe/tests/test/state/dscp"];
  bool has_dscp() const;
  void clear_dscp();
  static const int kDscpFieldNumber = 524434947;
  const ::ywrapper::UintValue& dscp() const;
  ::ywrapper::UintValue* release_dscp();
  ::ywrapper::UintValue* mutable_dscp();
  void set_allocated_dscp(::ywrapper::UintValue* dscp);

  // .ywrapper.UintValue count = 531760118 [(.yext.schemapath) = "/probes/probe/tests/test/state/count"];
  bool has_count() const;
  void clear_count();
  static const int kCountFieldNumber = 531760118;
  const ::ywrapper::UintValue& count() const;
  ::ywrapper::UintValue* release_count();
  ::ywrapper::UintValue* mutable_count();
  void set_allocated_count(::ywrapper::UintValue* count);

  // .openconfig.enums.OpenconfigProbesTestType test_type = 120827898 [(.yext.schemapath) = "/probes/probe/tests/test/state/test-type"];
  void clear_test_type();
  static const int kTestTypeFieldNumber = 120827898;
  ::openconfig::enums::OpenconfigProbesTestType test_type() const;
  void set_test_type(::openconfig::enums::OpenconfigProbesTestType value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* source_port_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::StringValue* source_;
  ::ywrapper::UintValue* history_size_;
  ::ywrapper::BoolValue* enabled_;
  ::ywrapper::StringValue* name_;
  ::ywrapper::UintValue* dscp_;
  ::ywrapper::UintValue* count_;
  int test_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_StateImpl();
};
// -------------------------------------------------------------------

class Probes_Probe_Tests_Test_Target_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config) */ {
 public:
  Probes_Probe_Tests_Test_Target_Config();
  virtual ~Probes_Probe_Tests_Test_Target_Config();

  Probes_Probe_Tests_Test_Target_Config(const Probes_Probe_Tests_Test_Target_Config& from);

  inline Probes_Probe_Tests_Test_Target_Config& operator=(const Probes_Probe_Tests_Test_Target_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Probes_Probe_Tests_Test_Target_Config(Probes_Probe_Tests_Test_Target_Config&& from) noexcept
    : Probes_Probe_Tests_Test_Target_Config() {
    *this = ::std::move(from);
  }

  inline Probes_Probe_Tests_Test_Target_Config& operator=(Probes_Probe_Tests_Test_Target_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Probes_Probe_Tests_Test_Target_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Probes_Probe_Tests_Test_Target_Config* internal_default_instance() {
    return reinterpret_cast<const Probes_Probe_Tests_Test_Target_Config*>(
               &_Probes_Probe_Tests_Test_Target_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(Probes_Probe_Tests_Test_Target_Config* other);
  friend void swap(Probes_Probe_Tests_Test_Target_Config& a, Probes_Probe_Tests_Test_Target_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Probes_Probe_Tests_Test_Target_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Probes_Probe_Tests_Test_Target_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Probes_Probe_Tests_Test_Target_Config& from);
  void MergeFrom(const Probes_Probe_Tests_Test_Target_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Probes_Probe_Tests_Test_Target_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue address = 386645440 [(.yext.schemapath) = "/probes/probe/tests/test/target/config/address"];
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 386645440;
  const ::ywrapper::StringValue& address() const;
  ::ywrapper::StringValue* release_address();
  ::ywrapper::StringValue* mutable_address();
  void set_allocated_address(::ywrapper::StringValue* address);

  // .ywrapper.StringValue url = 479408427 [(.yext.schemapath) = "/probes/probe/tests/test/target/config/url"];
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 479408427;
  const ::ywrapper::StringValue& url() const;
  ::ywrapper::StringValue* release_url();
  ::ywrapper::StringValue* mutable_url();
  void set_allocated_url(::ywrapper::StringValue* url);

  // .ywrapper.UintValue port = 530163097 [(.yext.schemapath) = "/probes/probe/tests/test/target/config/port"];
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 530163097;
  const ::ywrapper::UintValue& port() const;
  ::ywrapper::UintValue* release_port();
  ::ywrapper::UintValue* mutable_port();
  void set_allocated_port(::ywrapper::UintValue* port);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* address_;
  ::ywrapper::StringValue* url_;
  ::ywrapper::UintValue* port_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Target_ConfigImpl();
};
// -------------------------------------------------------------------

class Probes_Probe_Tests_Test_Target_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State) */ {
 public:
  Probes_Probe_Tests_Test_Target_State();
  virtual ~Probes_Probe_Tests_Test_Target_State();

  Probes_Probe_Tests_Test_Target_State(const Probes_Probe_Tests_Test_Target_State& from);

  inline Probes_Probe_Tests_Test_Target_State& operator=(const Probes_Probe_Tests_Test_Target_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Probes_Probe_Tests_Test_Target_State(Probes_Probe_Tests_Test_Target_State&& from) noexcept
    : Probes_Probe_Tests_Test_Target_State() {
    *this = ::std::move(from);
  }

  inline Probes_Probe_Tests_Test_Target_State& operator=(Probes_Probe_Tests_Test_Target_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Probes_Probe_Tests_Test_Target_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Probes_Probe_Tests_Test_Target_State* internal_default_instance() {
    return reinterpret_cast<const Probes_Probe_Tests_Test_Target_State*>(
               &_Probes_Probe_Tests_Test_Target_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(Probes_Probe_Tests_Test_Target_State* other);
  friend void swap(Probes_Probe_Tests_Test_Target_State& a, Probes_Probe_Tests_Test_Target_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Probes_Probe_Tests_Test_Target_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Probes_Probe_Tests_Test_Target_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Probes_Probe_Tests_Test_Target_State& from);
  void MergeFrom(const Probes_Probe_Tests_Test_Target_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Probes_Probe_Tests_Test_Target_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue port = 68939668 [(.yext.schemapath) = "/probes/probe/tests/test/target/state/port"];
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 68939668;
  const ::ywrapper::UintValue& port() const;
  ::ywrapper::UintValue* release_port();
  ::ywrapper::UintValue* mutable_port();
  void set_allocated_port(::ywrapper::UintValue* port);

  // .ywrapper.StringValue address = 283265387 [(.yext.schemapath) = "/probes/probe/tests/test/target/state/address"];
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 283265387;
  const ::ywrapper::StringValue& address() const;
  ::ywrapper::StringValue* release_address();
  ::ywrapper::StringValue* mutable_address();
  void set_allocated_address(::ywrapper::StringValue* address);

  // .ywrapper.StringValue url = 405409852 [(.yext.schemapath) = "/probes/probe/tests/test/target/state/url"];
  bool has_url() const;
  void clear_url();
  static const int kUrlFieldNumber = 405409852;
  const ::ywrapper::StringValue& url() const;
  ::ywrapper::StringValue* release_url();
  ::ywrapper::StringValue* mutable_url();
  void set_allocated_url(::ywrapper::StringValue* url);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* port_;
  ::ywrapper::StringValue* address_;
  ::ywrapper::StringValue* url_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Target_StateImpl();
};
// -------------------------------------------------------------------

class Probes_Probe_Tests_Test_Target : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target) */ {
 public:
  Probes_Probe_Tests_Test_Target();
  virtual ~Probes_Probe_Tests_Test_Target();

  Probes_Probe_Tests_Test_Target(const Probes_Probe_Tests_Test_Target& from);

  inline Probes_Probe_Tests_Test_Target& operator=(const Probes_Probe_Tests_Test_Target& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Probes_Probe_Tests_Test_Target(Probes_Probe_Tests_Test_Target&& from) noexcept
    : Probes_Probe_Tests_Test_Target() {
    *this = ::std::move(from);
  }

  inline Probes_Probe_Tests_Test_Target& operator=(Probes_Probe_Tests_Test_Target&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Probes_Probe_Tests_Test_Target& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Probes_Probe_Tests_Test_Target* internal_default_instance() {
    return reinterpret_cast<const Probes_Probe_Tests_Test_Target*>(
               &_Probes_Probe_Tests_Test_Target_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(Probes_Probe_Tests_Test_Target* other);
  friend void swap(Probes_Probe_Tests_Test_Target& a, Probes_Probe_Tests_Test_Target& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Probes_Probe_Tests_Test_Target* New() const PROTOBUF_FINAL { return New(NULL); }

  Probes_Probe_Tests_Test_Target* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Probes_Probe_Tests_Test_Target& from);
  void MergeFrom(const Probes_Probe_Tests_Test_Target& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Probes_Probe_Tests_Test_Target* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Probes_Probe_Tests_Test_Target_Config Config;
  typedef Probes_Probe_Tests_Test_Target_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config config = 140870805 [(.yext.schemapath) = "/probes/probe/tests/test/target/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 140870805;
  const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_Config& config() const;
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_Config* release_config();
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_Config* config);

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State state = 186787850 [(.yext.schemapath) = "/probes/probe/tests/test/target/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 186787850;
  const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_State& state() const;
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_State* release_state();
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_Config* config_;
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_TargetImpl();
};
// -------------------------------------------------------------------

class Probes_Probe_Tests_Test : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_probes.Probes.Probe.Tests.Test) */ {
 public:
  Probes_Probe_Tests_Test();
  virtual ~Probes_Probe_Tests_Test();

  Probes_Probe_Tests_Test(const Probes_Probe_Tests_Test& from);

  inline Probes_Probe_Tests_Test& operator=(const Probes_Probe_Tests_Test& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Probes_Probe_Tests_Test(Probes_Probe_Tests_Test&& from) noexcept
    : Probes_Probe_Tests_Test() {
    *this = ::std::move(from);
  }

  inline Probes_Probe_Tests_Test& operator=(Probes_Probe_Tests_Test&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Probes_Probe_Tests_Test& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Probes_Probe_Tests_Test* internal_default_instance() {
    return reinterpret_cast<const Probes_Probe_Tests_Test*>(
               &_Probes_Probe_Tests_Test_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(Probes_Probe_Tests_Test* other);
  friend void swap(Probes_Probe_Tests_Test& a, Probes_Probe_Tests_Test& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Probes_Probe_Tests_Test* New() const PROTOBUF_FINAL { return New(NULL); }

  Probes_Probe_Tests_Test* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Probes_Probe_Tests_Test& from);
  void MergeFrom(const Probes_Probe_Tests_Test& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Probes_Probe_Tests_Test* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Probes_Probe_Tests_Test_Config Config;
  typedef Probes_Probe_Tests_Test_Results Results;
  typedef Probes_Probe_Tests_Test_State State;
  typedef Probes_Probe_Tests_Test_Target Target;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results results = 37245791 [(.yext.schemapath) = "/probes/probe/tests/test/results"];
  bool has_results() const;
  void clear_results();
  static const int kResultsFieldNumber = 37245791;
  const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results& results() const;
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results* release_results();
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results* mutable_results();
  void set_allocated_results(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results* results);

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target target = 72482592 [(.yext.schemapath) = "/probes/probe/tests/test/target"];
  bool has_target() const;
  void clear_target();
  static const int kTargetFieldNumber = 72482592;
  const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target& target() const;
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target* release_target();
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target* mutable_target();
  void set_allocated_target(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target* target);

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config config = 178866037 [(.yext.schemapath) = "/probes/probe/tests/test/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 178866037;
  const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config& config() const;
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config* release_config();
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config* config);

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.State state = 468483178 [(.yext.schemapath) = "/probes/probe/tests/test/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 468483178;
  const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State& state() const;
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State* release_state();
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_probes.Probes.Probe.Tests.Test)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results* results_;
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target* target_;
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config* config_;
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_TestImpl();
};
// -------------------------------------------------------------------

class Probes_Probe_Tests_TestKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey) */ {
 public:
  Probes_Probe_Tests_TestKey();
  virtual ~Probes_Probe_Tests_TestKey();

  Probes_Probe_Tests_TestKey(const Probes_Probe_Tests_TestKey& from);

  inline Probes_Probe_Tests_TestKey& operator=(const Probes_Probe_Tests_TestKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Probes_Probe_Tests_TestKey(Probes_Probe_Tests_TestKey&& from) noexcept
    : Probes_Probe_Tests_TestKey() {
    *this = ::std::move(from);
  }

  inline Probes_Probe_Tests_TestKey& operator=(Probes_Probe_Tests_TestKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Probes_Probe_Tests_TestKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Probes_Probe_Tests_TestKey* internal_default_instance() {
    return reinterpret_cast<const Probes_Probe_Tests_TestKey*>(
               &_Probes_Probe_Tests_TestKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(Probes_Probe_Tests_TestKey* other);
  friend void swap(Probes_Probe_Tests_TestKey& a, Probes_Probe_Tests_TestKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Probes_Probe_Tests_TestKey* New() const PROTOBUF_FINAL { return New(NULL); }

  Probes_Probe_Tests_TestKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Probes_Probe_Tests_TestKey& from);
  void MergeFrom(const Probes_Probe_Tests_TestKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Probes_Probe_Tests_TestKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1 [(.yext.schemapath) = "/probes/probe/tests/test/name"];
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test test = 2;
  bool has_test() const;
  void clear_test();
  static const int kTestFieldNumber = 2;
  const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test& test() const;
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test* release_test();
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test* mutable_test();
  void set_allocated_test(::openconfig::openconfig_probes::Probes_Probe_Tests_Test* test);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test* test_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_TestKeyImpl();
};
// -------------------------------------------------------------------

class Probes_Probe_Tests : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_probes.Probes.Probe.Tests) */ {
 public:
  Probes_Probe_Tests();
  virtual ~Probes_Probe_Tests();

  Probes_Probe_Tests(const Probes_Probe_Tests& from);

  inline Probes_Probe_Tests& operator=(const Probes_Probe_Tests& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Probes_Probe_Tests(Probes_Probe_Tests&& from) noexcept
    : Probes_Probe_Tests() {
    *this = ::std::move(from);
  }

  inline Probes_Probe_Tests& operator=(Probes_Probe_Tests&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Probes_Probe_Tests& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Probes_Probe_Tests* internal_default_instance() {
    return reinterpret_cast<const Probes_Probe_Tests*>(
               &_Probes_Probe_Tests_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(Probes_Probe_Tests* other);
  friend void swap(Probes_Probe_Tests& a, Probes_Probe_Tests& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Probes_Probe_Tests* New() const PROTOBUF_FINAL { return New(NULL); }

  Probes_Probe_Tests* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Probes_Probe_Tests& from);
  void MergeFrom(const Probes_Probe_Tests& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Probes_Probe_Tests* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Probes_Probe_Tests_Test Test;
  typedef Probes_Probe_Tests_TestKey TestKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_probes.Probes.Probe.Tests.TestKey test = 405558272 [(.yext.schemapath) = "/probes/probe/tests/test"];
  int test_size() const;
  void clear_test();
  static const int kTestFieldNumber = 405558272;
  const ::openconfig::openconfig_probes::Probes_Probe_Tests_TestKey& test(int index) const;
  ::openconfig::openconfig_probes::Probes_Probe_Tests_TestKey* mutable_test(int index);
  ::openconfig::openconfig_probes::Probes_Probe_Tests_TestKey* add_test();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_probes::Probes_Probe_Tests_TestKey >*
      mutable_test();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_probes::Probes_Probe_Tests_TestKey >&
      test() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_probes.Probes.Probe.Tests)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_probes::Probes_Probe_Tests_TestKey > test_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_TestsImpl();
};
// -------------------------------------------------------------------

class Probes_Probe : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_probes.Probes.Probe) */ {
 public:
  Probes_Probe();
  virtual ~Probes_Probe();

  Probes_Probe(const Probes_Probe& from);

  inline Probes_Probe& operator=(const Probes_Probe& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Probes_Probe(Probes_Probe&& from) noexcept
    : Probes_Probe() {
    *this = ::std::move(from);
  }

  inline Probes_Probe& operator=(Probes_Probe&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Probes_Probe& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Probes_Probe* internal_default_instance() {
    return reinterpret_cast<const Probes_Probe*>(
               &_Probes_Probe_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(Probes_Probe* other);
  friend void swap(Probes_Probe& a, Probes_Probe& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Probes_Probe* New() const PROTOBUF_FINAL { return New(NULL); }

  Probes_Probe* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Probes_Probe& from);
  void MergeFrom(const Probes_Probe& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Probes_Probe* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Probes_Probe_Config Config;
  typedef Probes_Probe_State State;
  typedef Probes_Probe_Tests Tests;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_probes.Probes.Probe.Tests tests = 169946161 [(.yext.schemapath) = "/probes/probe/tests"];
  bool has_tests() const;
  void clear_tests();
  static const int kTestsFieldNumber = 169946161;
  const ::openconfig::openconfig_probes::Probes_Probe_Tests& tests() const;
  ::openconfig::openconfig_probes::Probes_Probe_Tests* release_tests();
  ::openconfig::openconfig_probes::Probes_Probe_Tests* mutable_tests();
  void set_allocated_tests(::openconfig::openconfig_probes::Probes_Probe_Tests* tests);

  // .openconfig.openconfig_probes.Probes.Probe.Config config = 371483076 [(.yext.schemapath) = "/probes/probe/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 371483076;
  const ::openconfig::openconfig_probes::Probes_Probe_Config& config() const;
  ::openconfig::openconfig_probes::Probes_Probe_Config* release_config();
  ::openconfig::openconfig_probes::Probes_Probe_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_probes::Probes_Probe_Config* config);

  // .openconfig.openconfig_probes.Probes.Probe.State state = 472644061 [(.yext.schemapath) = "/probes/probe/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 472644061;
  const ::openconfig::openconfig_probes::Probes_Probe_State& state() const;
  ::openconfig::openconfig_probes::Probes_Probe_State* release_state();
  ::openconfig::openconfig_probes::Probes_Probe_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_probes::Probes_Probe_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_probes.Probes.Probe)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_probes::Probes_Probe_Tests* tests_;
  ::openconfig::openconfig_probes::Probes_Probe_Config* config_;
  ::openconfig::openconfig_probes::Probes_Probe_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_ProbeImpl();
};
// -------------------------------------------------------------------

class Probes_ProbeKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_probes.Probes.ProbeKey) */ {
 public:
  Probes_ProbeKey();
  virtual ~Probes_ProbeKey();

  Probes_ProbeKey(const Probes_ProbeKey& from);

  inline Probes_ProbeKey& operator=(const Probes_ProbeKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Probes_ProbeKey(Probes_ProbeKey&& from) noexcept
    : Probes_ProbeKey() {
    *this = ::std::move(from);
  }

  inline Probes_ProbeKey& operator=(Probes_ProbeKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Probes_ProbeKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Probes_ProbeKey* internal_default_instance() {
    return reinterpret_cast<const Probes_ProbeKey*>(
               &_Probes_ProbeKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(Probes_ProbeKey* other);
  friend void swap(Probes_ProbeKey& a, Probes_ProbeKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Probes_ProbeKey* New() const PROTOBUF_FINAL { return New(NULL); }

  Probes_ProbeKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Probes_ProbeKey& from);
  void MergeFrom(const Probes_ProbeKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Probes_ProbeKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1 [(.yext.schemapath) = "/probes/probe/name"];
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .openconfig.openconfig_probes.Probes.Probe probe = 2;
  bool has_probe() const;
  void clear_probe();
  static const int kProbeFieldNumber = 2;
  const ::openconfig::openconfig_probes::Probes_Probe& probe() const;
  ::openconfig::openconfig_probes::Probes_Probe* release_probe();
  ::openconfig::openconfig_probes::Probes_Probe* mutable_probe();
  void set_allocated_probe(::openconfig::openconfig_probes::Probes_Probe* probe);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_probes.Probes.ProbeKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::openconfig::openconfig_probes::Probes_Probe* probe_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_ProbeKeyImpl();
};
// -------------------------------------------------------------------

class Probes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_probes.Probes) */ {
 public:
  Probes();
  virtual ~Probes();

  Probes(const Probes& from);

  inline Probes& operator=(const Probes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Probes(Probes&& from) noexcept
    : Probes() {
    *this = ::std::move(from);
  }

  inline Probes& operator=(Probes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Probes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Probes* internal_default_instance() {
    return reinterpret_cast<const Probes*>(
               &_Probes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(Probes* other);
  friend void swap(Probes& a, Probes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Probes* New() const PROTOBUF_FINAL { return New(NULL); }

  Probes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Probes& from);
  void MergeFrom(const Probes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Probes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Probes_Probe Probe;
  typedef Probes_ProbeKey ProbeKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_probes.Probes.ProbeKey probe = 259116739 [(.yext.schemapath) = "/probes/probe"];
  int probe_size() const;
  void clear_probe();
  static const int kProbeFieldNumber = 259116739;
  const ::openconfig::openconfig_probes::Probes_ProbeKey& probe(int index) const;
  ::openconfig::openconfig_probes::Probes_ProbeKey* mutable_probe(int index);
  ::openconfig::openconfig_probes::Probes_ProbeKey* add_probe();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_probes::Probes_ProbeKey >*
      mutable_probe();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_probes::Probes_ProbeKey >&
      probe() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_probes.Probes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_probes::Probes_ProbeKey > probe_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbesImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Probes_Probe_Config

// .ywrapper.BoolValue enabled = 299351654 [(.yext.schemapath) = "/probes/probe/config/enabled"];
inline bool Probes_Probe_Config::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
inline const ::ywrapper::BoolValue& Probes_Probe_Config::enabled() const {
  const ::ywrapper::BoolValue* p = enabled_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Config.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Probes_Probe_Config::release_enabled() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Config.enabled)
  
  ::ywrapper::BoolValue* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Probes_Probe_Config::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Config.enabled)
  return enabled_;
}
inline void Probes_Probe_Config::set_allocated_enabled(::ywrapper::BoolValue* enabled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enabled_);
  }
  if (enabled) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enabled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enabled, submessage_arena);
    }
    
  } else {
    
  }
  enabled_ = enabled;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Config.enabled)
}

// .ywrapper.StringValue name = 252528966 [(.yext.schemapath) = "/probes/probe/config/name"];
inline bool Probes_Probe_Config::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& Probes_Probe_Config::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Config.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Probes_Probe_Config::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Config.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Probes_Probe_Config::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Config.name)
  return name_;
}
inline void Probes_Probe_Config::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Config.name)
}

// -------------------------------------------------------------------

// Probes_Probe_State

// .ywrapper.BoolValue enabled = 35574259 [(.yext.schemapath) = "/probes/probe/state/enabled"];
inline bool Probes_Probe_State::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
inline const ::ywrapper::BoolValue& Probes_Probe_State::enabled() const {
  const ::ywrapper::BoolValue* p = enabled_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.State.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Probes_Probe_State::release_enabled() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.State.enabled)
  
  ::ywrapper::BoolValue* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Probes_Probe_State::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.State.enabled)
  return enabled_;
}
inline void Probes_Probe_State::set_allocated_enabled(::ywrapper::BoolValue* enabled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enabled_);
  }
  if (enabled) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enabled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enabled, submessage_arena);
    }
    
  } else {
    
  }
  enabled_ = enabled;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.State.enabled)
}

// .ywrapper.StringValue name = 115823289 [(.yext.schemapath) = "/probes/probe/state/name"];
inline bool Probes_Probe_State::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& Probes_Probe_State::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.State.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Probes_Probe_State::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.State.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Probes_Probe_State::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.State.name)
  return name_;
}
inline void Probes_Probe_State::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.State.name)
}

// -------------------------------------------------------------------

// Probes_Probe_Tests_Test_Config

// .ywrapper.UintValue count = 208592917 [(.yext.schemapath) = "/probes/probe/tests/test/config/count"];
inline bool Probes_Probe_Tests_Test_Config::has_count() const {
  return this != internal_default_instance() && count_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Config::count() const {
  const ::ywrapper::UintValue* p = count_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.count)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Config::release_count() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.count)
  
  ::ywrapper::UintValue* temp = count_;
  count_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Config::mutable_count() {
  
  if (count_ == NULL) {
    count_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.count)
  return count_;
}
inline void Probes_Probe_Tests_Test_Config::set_allocated_count(::ywrapper::UintValue* count) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(count_);
  }
  if (count) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      count = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, count, submessage_arena);
    }
    
  } else {
    
  }
  count_ = count;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.count)
}

// .ywrapper.UintValue dscp = 425022362 [(.yext.schemapath) = "/probes/probe/tests/test/config/dscp"];
inline bool Probes_Probe_Tests_Test_Config::has_dscp() const {
  return this != internal_default_instance() && dscp_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Config::dscp() const {
  const ::ywrapper::UintValue* p = dscp_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.dscp)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Config::release_dscp() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.dscp)
  
  ::ywrapper::UintValue* temp = dscp_;
  dscp_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Config::mutable_dscp() {
  
  if (dscp_ == NULL) {
    dscp_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.dscp)
  return dscp_;
}
inline void Probes_Probe_Tests_Test_Config::set_allocated_dscp(::ywrapper::UintValue* dscp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dscp_);
  }
  if (dscp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dscp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dscp, submessage_arena);
    }
    
  } else {
    
  }
  dscp_ = dscp;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.dscp)
}

// .ywrapper.BoolValue enabled = 453000475 [(.yext.schemapath) = "/probes/probe/tests/test/config/enabled"];
inline bool Probes_Probe_Tests_Test_Config::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
inline const ::ywrapper::BoolValue& Probes_Probe_Tests_Test_Config::enabled() const {
  const ::ywrapper::BoolValue* p = enabled_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Probes_Probe_Tests_Test_Config::release_enabled() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.enabled)
  
  ::ywrapper::BoolValue* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Probes_Probe_Tests_Test_Config::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.enabled)
  return enabled_;
}
inline void Probes_Probe_Tests_Test_Config::set_allocated_enabled(::ywrapper::BoolValue* enabled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enabled_);
  }
  if (enabled) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enabled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enabled, submessage_arena);
    }
    
  } else {
    
  }
  enabled_ = enabled;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.enabled)
}

// .ywrapper.UintValue history_size = 60923906 [(.yext.schemapath) = "/probes/probe/tests/test/config/history-size"];
inline bool Probes_Probe_Tests_Test_Config::has_history_size() const {
  return this != internal_default_instance() && history_size_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Config::history_size() const {
  const ::ywrapper::UintValue* p = history_size_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.history_size)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Config::release_history_size() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.history_size)
  
  ::ywrapper::UintValue* temp = history_size_;
  history_size_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Config::mutable_history_size() {
  
  if (history_size_ == NULL) {
    history_size_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.history_size)
  return history_size_;
}
inline void Probes_Probe_Tests_Test_Config::set_allocated_history_size(::ywrapper::UintValue* history_size) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(history_size_);
  }
  if (history_size) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      history_size = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, history_size, submessage_arena);
    }
    
  } else {
    
  }
  history_size_ = history_size;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.history_size)
}

// .ywrapper.UintValue interval = 65230595 [(.yext.schemapath) = "/probes/probe/tests/test/config/interval"];
inline bool Probes_Probe_Tests_Test_Config::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Config::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Config::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Config::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.interval)
  return interval_;
}
inline void Probes_Probe_Tests_Test_Config::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.interval)
}

// .ywrapper.StringValue name = 225036113 [(.yext.schemapath) = "/probes/probe/tests/test/config/name"];
inline bool Probes_Probe_Tests_Test_Config::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& Probes_Probe_Tests_Test_Config::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Probes_Probe_Tests_Test_Config::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Probes_Probe_Tests_Test_Config::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.name)
  return name_;
}
inline void Probes_Probe_Tests_Test_Config::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.name)
}

// .ywrapper.StringValue source = 17077703 [(.yext.schemapath) = "/probes/probe/tests/test/config/source"];
inline bool Probes_Probe_Tests_Test_Config::has_source() const {
  return this != internal_default_instance() && source_ != NULL;
}
inline const ::ywrapper::StringValue& Probes_Probe_Tests_Test_Config::source() const {
  const ::ywrapper::StringValue* p = source_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.source)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Probes_Probe_Tests_Test_Config::release_source() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.source)
  
  ::ywrapper::StringValue* temp = source_;
  source_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Probes_Probe_Tests_Test_Config::mutable_source() {
  
  if (source_ == NULL) {
    source_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.source)
  return source_;
}
inline void Probes_Probe_Tests_Test_Config::set_allocated_source(::ywrapper::StringValue* source) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(source_);
  }
  if (source) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      source = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source, submessage_arena);
    }
    
  } else {
    
  }
  source_ = source;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.source)
}

// .ywrapper.UintValue source_port = 452973905 [(.yext.schemapath) = "/probes/probe/tests/test/config/source-port"];
inline bool Probes_Probe_Tests_Test_Config::has_source_port() const {
  return this != internal_default_instance() && source_port_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Config::source_port() const {
  const ::ywrapper::UintValue* p = source_port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.source_port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Config::release_source_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.source_port)
  
  ::ywrapper::UintValue* temp = source_port_;
  source_port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Config::mutable_source_port() {
  
  if (source_port_ == NULL) {
    source_port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.source_port)
  return source_port_;
}
inline void Probes_Probe_Tests_Test_Config::set_allocated_source_port(::ywrapper::UintValue* source_port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(source_port_);
  }
  if (source_port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      source_port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source_port, submessage_arena);
    }
    
  } else {
    
  }
  source_port_ = source_port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.source_port)
}

// .openconfig.enums.OpenconfigProbesTestType test_type = 426757249 [(.yext.schemapath) = "/probes/probe/tests/test/config/test-type"];
inline void Probes_Probe_Tests_Test_Config::clear_test_type() {
  test_type_ = 0;
}
inline ::openconfig::enums::OpenconfigProbesTestType Probes_Probe_Tests_Test_Config::test_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.test_type)
  return static_cast< ::openconfig::enums::OpenconfigProbesTestType >(test_type_);
}
inline void Probes_Probe_Tests_Test_Config::set_test_type(::openconfig::enums::OpenconfigProbesTestType value) {
  
  test_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config.test_type)
}

// -------------------------------------------------------------------

// Probes_Probe_Tests_Test_Results_History_Items_Item_State

// .ywrapper.UintValue avg_delay = 63138246 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/avg-delay"];
inline bool Probes_Probe_Tests_Test_Results_History_Items_Item_State::has_avg_delay() const {
  return this != internal_default_instance() && avg_delay_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Results_History_Items_Item_State::avg_delay() const {
  const ::ywrapper::UintValue* p = avg_delay_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.avg_delay)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::release_avg_delay() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.avg_delay)
  
  ::ywrapper::UintValue* temp = avg_delay_;
  avg_delay_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::mutable_avg_delay() {
  
  if (avg_delay_ == NULL) {
    avg_delay_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.avg_delay)
  return avg_delay_;
}
inline void Probes_Probe_Tests_Test_Results_History_Items_Item_State::set_allocated_avg_delay(::ywrapper::UintValue* avg_delay) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_delay_);
  }
  if (avg_delay) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg_delay = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg_delay, submessage_arena);
    }
    
  } else {
    
  }
  avg_delay_ = avg_delay;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.avg_delay)
}

// .ywrapper.UintValue end_timestamp = 87224044 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/end-timestamp"];
inline bool Probes_Probe_Tests_Test_Results_History_Items_Item_State::has_end_timestamp() const {
  return this != internal_default_instance() && end_timestamp_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Results_History_Items_Item_State::end_timestamp() const {
  const ::ywrapper::UintValue* p = end_timestamp_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.end_timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::release_end_timestamp() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.end_timestamp)
  
  ::ywrapper::UintValue* temp = end_timestamp_;
  end_timestamp_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::mutable_end_timestamp() {
  
  if (end_timestamp_ == NULL) {
    end_timestamp_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.end_timestamp)
  return end_timestamp_;
}
inline void Probes_Probe_Tests_Test_Results_History_Items_Item_State::set_allocated_end_timestamp(::ywrapper::UintValue* end_timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(end_timestamp_);
  }
  if (end_timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      end_timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, end_timestamp, submessage_arena);
    }
    
  } else {
    
  }
  end_timestamp_ = end_timestamp;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.end_timestamp)
}

// .ywrapper.BoolValue failed = 73841595 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/failed"];
inline bool Probes_Probe_Tests_Test_Results_History_Items_Item_State::has_failed() const {
  return this != internal_default_instance() && failed_ != NULL;
}
inline const ::ywrapper::BoolValue& Probes_Probe_Tests_Test_Results_History_Items_Item_State::failed() const {
  const ::ywrapper::BoolValue* p = failed_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.failed)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::release_failed() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.failed)
  
  ::ywrapper::BoolValue* temp = failed_;
  failed_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::mutable_failed() {
  
  if (failed_ == NULL) {
    failed_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.failed)
  return failed_;
}
inline void Probes_Probe_Tests_Test_Results_History_Items_Item_State::set_allocated_failed(::ywrapper::BoolValue* failed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(failed_);
  }
  if (failed) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      failed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, failed, submessage_arena);
    }
    
  } else {
    
  }
  failed_ = failed;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.failed)
}

// .ywrapper.UintValue id = 112866779 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/id"];
inline bool Probes_Probe_Tests_Test_Results_History_Items_Item_State::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Results_History_Items_Item_State::id() const {
  const ::ywrapper::UintValue* p = id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::release_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.id)
  
  ::ywrapper::UintValue* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.id)
  return id_;
}
inline void Probes_Probe_Tests_Test_Results_History_Items_Item_State::set_allocated_id(::ywrapper::UintValue* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.id)
}

// .ywrapper.UintValue jitter = 78107006 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/jitter"];
inline bool Probes_Probe_Tests_Test_Results_History_Items_Item_State::has_jitter() const {
  return this != internal_default_instance() && jitter_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Results_History_Items_Item_State::jitter() const {
  const ::ywrapper::UintValue* p = jitter_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.jitter)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::release_jitter() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.jitter)
  
  ::ywrapper::UintValue* temp = jitter_;
  jitter_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::mutable_jitter() {
  
  if (jitter_ == NULL) {
    jitter_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.jitter)
  return jitter_;
}
inline void Probes_Probe_Tests_Test_Results_History_Items_Item_State::set_allocated_jitter(::ywrapper::UintValue* jitter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(jitter_);
  }
  if (jitter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      jitter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, jitter, submessage_arena);
    }
    
  } else {
    
  }
  jitter_ = jitter;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.jitter)
}

// .ywrapper.UintValue loss_percentage = 85882566 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/loss-percentage"];
inline bool Probes_Probe_Tests_Test_Results_History_Items_Item_State::has_loss_percentage() const {
  return this != internal_default_instance() && loss_percentage_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Results_History_Items_Item_State::loss_percentage() const {
  const ::ywrapper::UintValue* p = loss_percentage_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.loss_percentage)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::release_loss_percentage() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.loss_percentage)
  
  ::ywrapper::UintValue* temp = loss_percentage_;
  loss_percentage_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::mutable_loss_percentage() {
  
  if (loss_percentage_ == NULL) {
    loss_percentage_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.loss_percentage)
  return loss_percentage_;
}
inline void Probes_Probe_Tests_Test_Results_History_Items_Item_State::set_allocated_loss_percentage(::ywrapper::UintValue* loss_percentage) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(loss_percentage_);
  }
  if (loss_percentage) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      loss_percentage = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loss_percentage, submessage_arena);
    }
    
  } else {
    
  }
  loss_percentage_ = loss_percentage;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.loss_percentage)
}

// .ywrapper.UintValue max_delay = 294119624 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/max-delay"];
inline bool Probes_Probe_Tests_Test_Results_History_Items_Item_State::has_max_delay() const {
  return this != internal_default_instance() && max_delay_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Results_History_Items_Item_State::max_delay() const {
  const ::ywrapper::UintValue* p = max_delay_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.max_delay)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::release_max_delay() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.max_delay)
  
  ::ywrapper::UintValue* temp = max_delay_;
  max_delay_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::mutable_max_delay() {
  
  if (max_delay_ == NULL) {
    max_delay_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.max_delay)
  return max_delay_;
}
inline void Probes_Probe_Tests_Test_Results_History_Items_Item_State::set_allocated_max_delay(::ywrapper::UintValue* max_delay) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_delay_);
  }
  if (max_delay) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max_delay = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max_delay, submessage_arena);
    }
    
  } else {
    
  }
  max_delay_ = max_delay;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.max_delay)
}

// .ywrapper.UintValue min_delay = 301035426 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/min-delay"];
inline bool Probes_Probe_Tests_Test_Results_History_Items_Item_State::has_min_delay() const {
  return this != internal_default_instance() && min_delay_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Results_History_Items_Item_State::min_delay() const {
  const ::ywrapper::UintValue* p = min_delay_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.min_delay)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::release_min_delay() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.min_delay)
  
  ::ywrapper::UintValue* temp = min_delay_;
  min_delay_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::mutable_min_delay() {
  
  if (min_delay_ == NULL) {
    min_delay_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.min_delay)
  return min_delay_;
}
inline void Probes_Probe_Tests_Test_Results_History_Items_Item_State::set_allocated_min_delay(::ywrapper::UintValue* min_delay) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_delay_);
  }
  if (min_delay) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min_delay = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min_delay, submessage_arena);
    }
    
  } else {
    
  }
  min_delay_ = min_delay;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.min_delay)
}

// .ywrapper.UintValue probes_received = 418621199 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/probes-received"];
inline bool Probes_Probe_Tests_Test_Results_History_Items_Item_State::has_probes_received() const {
  return this != internal_default_instance() && probes_received_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Results_History_Items_Item_State::probes_received() const {
  const ::ywrapper::UintValue* p = probes_received_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.probes_received)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::release_probes_received() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.probes_received)
  
  ::ywrapper::UintValue* temp = probes_received_;
  probes_received_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::mutable_probes_received() {
  
  if (probes_received_ == NULL) {
    probes_received_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.probes_received)
  return probes_received_;
}
inline void Probes_Probe_Tests_Test_Results_History_Items_Item_State::set_allocated_probes_received(::ywrapper::UintValue* probes_received) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(probes_received_);
  }
  if (probes_received) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      probes_received = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, probes_received, submessage_arena);
    }
    
  } else {
    
  }
  probes_received_ = probes_received;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.probes_received)
}

// .ywrapper.UintValue probes_sent = 335798140 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/probes-sent"];
inline bool Probes_Probe_Tests_Test_Results_History_Items_Item_State::has_probes_sent() const {
  return this != internal_default_instance() && probes_sent_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Results_History_Items_Item_State::probes_sent() const {
  const ::ywrapper::UintValue* p = probes_sent_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.probes_sent)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::release_probes_sent() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.probes_sent)
  
  ::ywrapper::UintValue* temp = probes_sent_;
  probes_sent_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::mutable_probes_sent() {
  
  if (probes_sent_ == NULL) {
    probes_sent_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.probes_sent)
  return probes_sent_;
}
inline void Probes_Probe_Tests_Test_Results_History_Items_Item_State::set_allocated_probes_sent(::ywrapper::UintValue* probes_sent) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(probes_sent_);
  }
  if (probes_sent) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      probes_sent = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, probes_sent, submessage_arena);
    }
    
  } else {
    
  }
  probes_sent_ = probes_sent;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.probes_sent)
}

// .ywrapper.UintValue start_timestamp = 437505415 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/start-timestamp"];
inline bool Probes_Probe_Tests_Test_Results_History_Items_Item_State::has_start_timestamp() const {
  return this != internal_default_instance() && start_timestamp_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Results_History_Items_Item_State::start_timestamp() const {
  const ::ywrapper::UintValue* p = start_timestamp_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.start_timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::release_start_timestamp() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.start_timestamp)
  
  ::ywrapper::UintValue* temp = start_timestamp_;
  start_timestamp_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::mutable_start_timestamp() {
  
  if (start_timestamp_ == NULL) {
    start_timestamp_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.start_timestamp)
  return start_timestamp_;
}
inline void Probes_Probe_Tests_Test_Results_History_Items_Item_State::set_allocated_start_timestamp(::ywrapper::UintValue* start_timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(start_timestamp_);
  }
  if (start_timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      start_timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_timestamp, submessage_arena);
    }
    
  } else {
    
  }
  start_timestamp_ = start_timestamp;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.start_timestamp)
}

// .ywrapper.UintValue stddev_delay = 175052734 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/stddev-delay"];
inline bool Probes_Probe_Tests_Test_Results_History_Items_Item_State::has_stddev_delay() const {
  return this != internal_default_instance() && stddev_delay_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Results_History_Items_Item_State::stddev_delay() const {
  const ::ywrapper::UintValue* p = stddev_delay_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.stddev_delay)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::release_stddev_delay() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.stddev_delay)
  
  ::ywrapper::UintValue* temp = stddev_delay_;
  stddev_delay_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::mutable_stddev_delay() {
  
  if (stddev_delay_ == NULL) {
    stddev_delay_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.stddev_delay)
  return stddev_delay_;
}
inline void Probes_Probe_Tests_Test_Results_History_Items_Item_State::set_allocated_stddev_delay(::ywrapper::UintValue* stddev_delay) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(stddev_delay_);
  }
  if (stddev_delay) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      stddev_delay = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stddev_delay, submessage_arena);
    }
    
  } else {
    
  }
  stddev_delay_ = stddev_delay;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.stddev_delay)
}

// .ywrapper.UintValue test_duration = 513981625 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/test-duration"];
inline bool Probes_Probe_Tests_Test_Results_History_Items_Item_State::has_test_duration() const {
  return this != internal_default_instance() && test_duration_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Results_History_Items_Item_State::test_duration() const {
  const ::ywrapper::UintValue* p = test_duration_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.test_duration)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::release_test_duration() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.test_duration)
  
  ::ywrapper::UintValue* temp = test_duration_;
  test_duration_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::mutable_test_duration() {
  
  if (test_duration_ == NULL) {
    test_duration_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.test_duration)
  return test_duration_;
}
inline void Probes_Probe_Tests_Test_Results_History_Items_Item_State::set_allocated_test_duration(::ywrapper::UintValue* test_duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(test_duration_);
  }
  if (test_duration) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      test_duration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, test_duration, submessage_arena);
    }
    
  } else {
    
  }
  test_duration_ = test_duration;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.test_duration)
}

// .ywrapper.UintValue timestamp = 484601636 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/timestamp"];
inline bool Probes_Probe_Tests_Test_Results_History_Items_Item_State::has_timestamp() const {
  return this != internal_default_instance() && timestamp_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Results_History_Items_Item_State::timestamp() const {
  const ::ywrapper::UintValue* p = timestamp_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::release_timestamp() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.timestamp)
  
  ::ywrapper::UintValue* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_History_Items_Item_State::mutable_timestamp() {
  
  if (timestamp_ == NULL) {
    timestamp_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.timestamp)
  return timestamp_;
}
inline void Probes_Probe_Tests_Test_Results_History_Items_Item_State::set_allocated_timestamp(::ywrapper::UintValue* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timestamp_);
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    
  } else {
    
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State.timestamp)
}

// -------------------------------------------------------------------

// Probes_Probe_Tests_Test_Results_History_Items_Item

// .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State state = 437367433 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state"];
inline bool Probes_Probe_Tests_Test_Results_History_Items_Item::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Probes_Probe_Tests_Test_Results_History_Items_Item::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State& Probes_Probe_Tests_Test_Results_History_Items_Item::state() const {
  const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State*>(
      &::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_Items_Item_State_default_instance_);
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State* Probes_Probe_Tests_Test_Results_History_Items_Item::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.state)
  
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State* Probes_Probe_Tests_Test_Results_History_Items_Item::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.state)
  return state_;
}
inline void Probes_Probe_Tests_Test_Results_History_Items_Item::set_allocated_state(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.state)
}

// -------------------------------------------------------------------

// Probes_Probe_Tests_Test_Results_History_Items_ItemKey

// uint64 id = 1 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/id"];
inline void Probes_Probe_Tests_Test_Results_History_Items_ItemKey::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Probes_Probe_Tests_Test_Results_History_Items_ItemKey::id() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey.id)
  return id_;
}
inline void Probes_Probe_Tests_Test_Results_History_Items_ItemKey::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey.id)
}

// .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item item = 2;
inline bool Probes_Probe_Tests_Test_Results_History_Items_ItemKey::has_item() const {
  return this != internal_default_instance() && item_ != NULL;
}
inline void Probes_Probe_Tests_Test_Results_History_Items_ItemKey::clear_item() {
  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
}
inline const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item& Probes_Probe_Tests_Test_Results_History_Items_ItemKey::item() const {
  const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item* p = item_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey.item)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item*>(
      &::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_Items_Item_default_instance_);
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item* Probes_Probe_Tests_Test_Results_History_Items_ItemKey::release_item() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey.item)
  
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item* temp = item_;
  item_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item* Probes_Probe_Tests_Test_Results_History_Items_ItemKey::mutable_item() {
  
  if (item_ == NULL) {
    item_ = new ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey.item)
  return item_;
}
inline void Probes_Probe_Tests_Test_Results_History_Items_ItemKey::set_allocated_item(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item* item) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete item_;
  }
  if (item) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      item = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, item, submessage_arena);
    }
    
  } else {
    
  }
  item_ = item;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey.item)
}

// -------------------------------------------------------------------

// Probes_Probe_Tests_Test_Results_History_Items

// repeated .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey item = 496151855 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item"];
inline int Probes_Probe_Tests_Test_Results_History_Items::item_size() const {
  return item_.size();
}
inline void Probes_Probe_Tests_Test_Results_History_Items::clear_item() {
  item_.Clear();
}
inline const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_ItemKey& Probes_Probe_Tests_Test_Results_History_Items::item(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.item)
  return item_.Get(index);
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_ItemKey* Probes_Probe_Tests_Test_Results_History_Items::mutable_item(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.item)
  return item_.Mutable(index);
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_ItemKey* Probes_Probe_Tests_Test_Results_History_Items::add_item() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.item)
  return item_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_ItemKey >*
Probes_Probe_Tests_Test_Results_History_Items::mutable_item() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.item)
  return &item_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_ItemKey >&
Probes_Probe_Tests_Test_Results_History_Items::item() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.item)
  return item_;
}

// -------------------------------------------------------------------

// Probes_Probe_Tests_Test_Results_History

// .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items items = 184490599 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items"];
inline bool Probes_Probe_Tests_Test_Results_History::has_items() const {
  return this != internal_default_instance() && items_ != NULL;
}
inline void Probes_Probe_Tests_Test_Results_History::clear_items() {
  if (GetArenaNoVirtual() == NULL && items_ != NULL) {
    delete items_;
  }
  items_ = NULL;
}
inline const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items& Probes_Probe_Tests_Test_Results_History::items() const {
  const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items* p = items_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.items)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items*>(
      &::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_Items_default_instance_);
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items* Probes_Probe_Tests_Test_Results_History::release_items() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.items)
  
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items* temp = items_;
  items_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items* Probes_Probe_Tests_Test_Results_History::mutable_items() {
  
  if (items_ == NULL) {
    items_ = new ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.items)
  return items_;
}
inline void Probes_Probe_Tests_Test_Results_History::set_allocated_items(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items* items) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete items_;
  }
  if (items) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      items = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, items, submessage_arena);
    }
    
  } else {
    
  }
  items_ = items;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.items)
}

// -------------------------------------------------------------------

// Probes_Probe_Tests_Test_Results_State

// .ywrapper.UintValue avg_delay = 399670614 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/avg-delay"];
inline bool Probes_Probe_Tests_Test_Results_State::has_avg_delay() const {
  return this != internal_default_instance() && avg_delay_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Results_State::avg_delay() const {
  const ::ywrapper::UintValue* p = avg_delay_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.avg_delay)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_State::release_avg_delay() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.avg_delay)
  
  ::ywrapper::UintValue* temp = avg_delay_;
  avg_delay_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_State::mutable_avg_delay() {
  
  if (avg_delay_ == NULL) {
    avg_delay_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.avg_delay)
  return avg_delay_;
}
inline void Probes_Probe_Tests_Test_Results_State::set_allocated_avg_delay(::ywrapper::UintValue* avg_delay) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_delay_);
  }
  if (avg_delay) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg_delay = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg_delay, submessage_arena);
    }
    
  } else {
    
  }
  avg_delay_ = avg_delay;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.avg_delay)
}

// .ywrapper.BoolValue failed = 403171051 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/failed"];
inline bool Probes_Probe_Tests_Test_Results_State::has_failed() const {
  return this != internal_default_instance() && failed_ != NULL;
}
inline const ::ywrapper::BoolValue& Probes_Probe_Tests_Test_Results_State::failed() const {
  const ::ywrapper::BoolValue* p = failed_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.failed)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Probes_Probe_Tests_Test_Results_State::release_failed() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.failed)
  
  ::ywrapper::BoolValue* temp = failed_;
  failed_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Probes_Probe_Tests_Test_Results_State::mutable_failed() {
  
  if (failed_ == NULL) {
    failed_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.failed)
  return failed_;
}
inline void Probes_Probe_Tests_Test_Results_State::set_allocated_failed(::ywrapper::BoolValue* failed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(failed_);
  }
  if (failed) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      failed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, failed, submessage_arena);
    }
    
  } else {
    
  }
  failed_ = failed;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.failed)
}

// .ywrapper.UintValue jitter = 444850446 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/jitter"];
inline bool Probes_Probe_Tests_Test_Results_State::has_jitter() const {
  return this != internal_default_instance() && jitter_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Results_State::jitter() const {
  const ::ywrapper::UintValue* p = jitter_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.jitter)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_State::release_jitter() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.jitter)
  
  ::ywrapper::UintValue* temp = jitter_;
  jitter_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_State::mutable_jitter() {
  
  if (jitter_ == NULL) {
    jitter_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.jitter)
  return jitter_;
}
inline void Probes_Probe_Tests_Test_Results_State::set_allocated_jitter(::ywrapper::UintValue* jitter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(jitter_);
  }
  if (jitter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      jitter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, jitter, submessage_arena);
    }
    
  } else {
    
  }
  jitter_ = jitter;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.jitter)
}

// .ywrapper.UintValue last_test_timestamp = 253022818 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/last-test-timestamp"];
inline bool Probes_Probe_Tests_Test_Results_State::has_last_test_timestamp() const {
  return this != internal_default_instance() && last_test_timestamp_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Results_State::last_test_timestamp() const {
  const ::ywrapper::UintValue* p = last_test_timestamp_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.last_test_timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_State::release_last_test_timestamp() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.last_test_timestamp)
  
  ::ywrapper::UintValue* temp = last_test_timestamp_;
  last_test_timestamp_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_State::mutable_last_test_timestamp() {
  
  if (last_test_timestamp_ == NULL) {
    last_test_timestamp_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.last_test_timestamp)
  return last_test_timestamp_;
}
inline void Probes_Probe_Tests_Test_Results_State::set_allocated_last_test_timestamp(::ywrapper::UintValue* last_test_timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(last_test_timestamp_);
  }
  if (last_test_timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      last_test_timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, last_test_timestamp, submessage_arena);
    }
    
  } else {
    
  }
  last_test_timestamp_ = last_test_timestamp;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.last_test_timestamp)
}

// .ywrapper.UintValue loss_percentage = 24155126 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/loss-percentage"];
inline bool Probes_Probe_Tests_Test_Results_State::has_loss_percentage() const {
  return this != internal_default_instance() && loss_percentage_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Results_State::loss_percentage() const {
  const ::ywrapper::UintValue* p = loss_percentage_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.loss_percentage)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_State::release_loss_percentage() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.loss_percentage)
  
  ::ywrapper::UintValue* temp = loss_percentage_;
  loss_percentage_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_State::mutable_loss_percentage() {
  
  if (loss_percentage_ == NULL) {
    loss_percentage_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.loss_percentage)
  return loss_percentage_;
}
inline void Probes_Probe_Tests_Test_Results_State::set_allocated_loss_percentage(::ywrapper::UintValue* loss_percentage) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(loss_percentage_);
  }
  if (loss_percentage) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      loss_percentage = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loss_percentage, submessage_arena);
    }
    
  } else {
    
  }
  loss_percentage_ = loss_percentage;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.loss_percentage)
}

// .ywrapper.UintValue max_delay = 371640408 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/max-delay"];
inline bool Probes_Probe_Tests_Test_Results_State::has_max_delay() const {
  return this != internal_default_instance() && max_delay_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Results_State::max_delay() const {
  const ::ywrapper::UintValue* p = max_delay_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.max_delay)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_State::release_max_delay() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.max_delay)
  
  ::ywrapper::UintValue* temp = max_delay_;
  max_delay_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_State::mutable_max_delay() {
  
  if (max_delay_ == NULL) {
    max_delay_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.max_delay)
  return max_delay_;
}
inline void Probes_Probe_Tests_Test_Results_State::set_allocated_max_delay(::ywrapper::UintValue* max_delay) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_delay_);
  }
  if (max_delay) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max_delay = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max_delay, submessage_arena);
    }
    
  } else {
    
  }
  max_delay_ = max_delay;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.max_delay)
}

// .ywrapper.UintValue min_delay = 404486034 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/min-delay"];
inline bool Probes_Probe_Tests_Test_Results_State::has_min_delay() const {
  return this != internal_default_instance() && min_delay_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Results_State::min_delay() const {
  const ::ywrapper::UintValue* p = min_delay_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.min_delay)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_State::release_min_delay() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.min_delay)
  
  ::ywrapper::UintValue* temp = min_delay_;
  min_delay_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_State::mutable_min_delay() {
  
  if (min_delay_ == NULL) {
    min_delay_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.min_delay)
  return min_delay_;
}
inline void Probes_Probe_Tests_Test_Results_State::set_allocated_min_delay(::ywrapper::UintValue* min_delay) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_delay_);
  }
  if (min_delay) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min_delay = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min_delay, submessage_arena);
    }
    
  } else {
    
  }
  min_delay_ = min_delay;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.min_delay)
}

// .ywrapper.UintValue probes_received = 229519999 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/probes-received"];
inline bool Probes_Probe_Tests_Test_Results_State::has_probes_received() const {
  return this != internal_default_instance() && probes_received_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Results_State::probes_received() const {
  const ::ywrapper::UintValue* p = probes_received_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.probes_received)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_State::release_probes_received() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.probes_received)
  
  ::ywrapper::UintValue* temp = probes_received_;
  probes_received_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_State::mutable_probes_received() {
  
  if (probes_received_ == NULL) {
    probes_received_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.probes_received)
  return probes_received_;
}
inline void Probes_Probe_Tests_Test_Results_State::set_allocated_probes_received(::ywrapper::UintValue* probes_received) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(probes_received_);
  }
  if (probes_received) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      probes_received = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, probes_received, submessage_arena);
    }
    
  } else {
    
  }
  probes_received_ = probes_received;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.probes_received)
}

// .ywrapper.UintValue probes_sent = 412856428 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/probes-sent"];
inline bool Probes_Probe_Tests_Test_Results_State::has_probes_sent() const {
  return this != internal_default_instance() && probes_sent_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Results_State::probes_sent() const {
  const ::ywrapper::UintValue* p = probes_sent_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.probes_sent)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_State::release_probes_sent() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.probes_sent)
  
  ::ywrapper::UintValue* temp = probes_sent_;
  probes_sent_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_State::mutable_probes_sent() {
  
  if (probes_sent_ == NULL) {
    probes_sent_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.probes_sent)
  return probes_sent_;
}
inline void Probes_Probe_Tests_Test_Results_State::set_allocated_probes_sent(::ywrapper::UintValue* probes_sent) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(probes_sent_);
  }
  if (probes_sent) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      probes_sent = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, probes_sent, submessage_arena);
    }
    
  } else {
    
  }
  probes_sent_ = probes_sent;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.probes_sent)
}

// .ywrapper.UintValue start_timestamp = 34444631 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/start-timestamp"];
inline bool Probes_Probe_Tests_Test_Results_State::has_start_timestamp() const {
  return this != internal_default_instance() && start_timestamp_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Results_State::start_timestamp() const {
  const ::ywrapper::UintValue* p = start_timestamp_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.start_timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_State::release_start_timestamp() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.start_timestamp)
  
  ::ywrapper::UintValue* temp = start_timestamp_;
  start_timestamp_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_State::mutable_start_timestamp() {
  
  if (start_timestamp_ == NULL) {
    start_timestamp_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.start_timestamp)
  return start_timestamp_;
}
inline void Probes_Probe_Tests_Test_Results_State::set_allocated_start_timestamp(::ywrapper::UintValue* start_timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(start_timestamp_);
  }
  if (start_timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      start_timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_timestamp, submessage_arena);
    }
    
  } else {
    
  }
  start_timestamp_ = start_timestamp;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.start_timestamp)
}

// .ywrapper.UintValue stddev_delay = 193510766 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/stddev-delay"];
inline bool Probes_Probe_Tests_Test_Results_State::has_stddev_delay() const {
  return this != internal_default_instance() && stddev_delay_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Results_State::stddev_delay() const {
  const ::ywrapper::UintValue* p = stddev_delay_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.stddev_delay)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_State::release_stddev_delay() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.stddev_delay)
  
  ::ywrapper::UintValue* temp = stddev_delay_;
  stddev_delay_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_State::mutable_stddev_delay() {
  
  if (stddev_delay_ == NULL) {
    stddev_delay_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.stddev_delay)
  return stddev_delay_;
}
inline void Probes_Probe_Tests_Test_Results_State::set_allocated_stddev_delay(::ywrapper::UintValue* stddev_delay) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(stddev_delay_);
  }
  if (stddev_delay) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      stddev_delay = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stddev_delay, submessage_arena);
    }
    
  } else {
    
  }
  stddev_delay_ = stddev_delay;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.stddev_delay)
}

// .ywrapper.UintValue test_duration = 320098569 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/test-duration"];
inline bool Probes_Probe_Tests_Test_Results_State::has_test_duration() const {
  return this != internal_default_instance() && test_duration_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Results_State::test_duration() const {
  const ::ywrapper::UintValue* p = test_duration_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.test_duration)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_State::release_test_duration() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.test_duration)
  
  ::ywrapper::UintValue* temp = test_duration_;
  test_duration_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_State::mutable_test_duration() {
  
  if (test_duration_ == NULL) {
    test_duration_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.test_duration)
  return test_duration_;
}
inline void Probes_Probe_Tests_Test_Results_State::set_allocated_test_duration(::ywrapper::UintValue* test_duration) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(test_duration_);
  }
  if (test_duration) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      test_duration = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, test_duration, submessage_arena);
    }
    
  } else {
    
  }
  test_duration_ = test_duration;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.test_duration)
}

// .ywrapper.UintValue timestamp = 400955060 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/timestamp"];
inline bool Probes_Probe_Tests_Test_Results_State::has_timestamp() const {
  return this != internal_default_instance() && timestamp_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Results_State::timestamp() const {
  const ::ywrapper::UintValue* p = timestamp_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.timestamp)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_State::release_timestamp() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.timestamp)
  
  ::ywrapper::UintValue* temp = timestamp_;
  timestamp_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Results_State::mutable_timestamp() {
  
  if (timestamp_ == NULL) {
    timestamp_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.timestamp)
  return timestamp_;
}
inline void Probes_Probe_Tests_Test_Results_State::set_allocated_timestamp(::ywrapper::UintValue* timestamp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timestamp_);
  }
  if (timestamp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timestamp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timestamp, submessage_arena);
    }
    
  } else {
    
  }
  timestamp_ = timestamp;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State.timestamp)
}

// -------------------------------------------------------------------

// Probes_Probe_Tests_Test_Results

// .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History history = 218641498 [(.yext.schemapath) = "/probes/probe/tests/test/results/history"];
inline bool Probes_Probe_Tests_Test_Results::has_history() const {
  return this != internal_default_instance() && history_ != NULL;
}
inline void Probes_Probe_Tests_Test_Results::clear_history() {
  if (GetArenaNoVirtual() == NULL && history_ != NULL) {
    delete history_;
  }
  history_ = NULL;
}
inline const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History& Probes_Probe_Tests_Test_Results::history() const {
  const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History* p = history_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.history)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History*>(
      &::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_default_instance_);
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History* Probes_Probe_Tests_Test_Results::release_history() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.history)
  
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History* temp = history_;
  history_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History* Probes_Probe_Tests_Test_Results::mutable_history() {
  
  if (history_ == NULL) {
    history_ = new ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.history)
  return history_;
}
inline void Probes_Probe_Tests_Test_Results::set_allocated_history(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History* history) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete history_;
  }
  if (history) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      history = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, history, submessage_arena);
    }
    
  } else {
    
  }
  history_ = history;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.history)
}

// .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State state = 101657 [(.yext.schemapath) = "/probes/probe/tests/test/results/state"];
inline bool Probes_Probe_Tests_Test_Results::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Probes_Probe_Tests_Test_Results::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State& Probes_Probe_Tests_Test_Results::state() const {
  const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State*>(
      &::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_State_default_instance_);
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State* Probes_Probe_Tests_Test_Results::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.state)
  
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State* Probes_Probe_Tests_Test_Results::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.state)
  return state_;
}
inline void Probes_Probe_Tests_Test_Results::set_allocated_state(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.state)
}

// -------------------------------------------------------------------

// Probes_Probe_Tests_Test_State

// .ywrapper.UintValue count = 531760118 [(.yext.schemapath) = "/probes/probe/tests/test/state/count"];
inline bool Probes_Probe_Tests_Test_State::has_count() const {
  return this != internal_default_instance() && count_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_State::count() const {
  const ::ywrapper::UintValue* p = count_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.count)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_State::release_count() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.count)
  
  ::ywrapper::UintValue* temp = count_;
  count_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_State::mutable_count() {
  
  if (count_ == NULL) {
    count_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.count)
  return count_;
}
inline void Probes_Probe_Tests_Test_State::set_allocated_count(::ywrapper::UintValue* count) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(count_);
  }
  if (count) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      count = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, count, submessage_arena);
    }
    
  } else {
    
  }
  count_ = count;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.count)
}

// .ywrapper.UintValue dscp = 524434947 [(.yext.schemapath) = "/probes/probe/tests/test/state/dscp"];
inline bool Probes_Probe_Tests_Test_State::has_dscp() const {
  return this != internal_default_instance() && dscp_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_State::dscp() const {
  const ::ywrapper::UintValue* p = dscp_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.dscp)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_State::release_dscp() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.dscp)
  
  ::ywrapper::UintValue* temp = dscp_;
  dscp_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_State::mutable_dscp() {
  
  if (dscp_ == NULL) {
    dscp_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.dscp)
  return dscp_;
}
inline void Probes_Probe_Tests_Test_State::set_allocated_dscp(::ywrapper::UintValue* dscp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(dscp_);
  }
  if (dscp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dscp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dscp, submessage_arena);
    }
    
  } else {
    
  }
  dscp_ = dscp;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.dscp)
}

// .ywrapper.BoolValue enabled = 400557768 [(.yext.schemapath) = "/probes/probe/tests/test/state/enabled"];
inline bool Probes_Probe_Tests_Test_State::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
inline const ::ywrapper::BoolValue& Probes_Probe_Tests_Test_State::enabled() const {
  const ::ywrapper::BoolValue* p = enabled_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Probes_Probe_Tests_Test_State::release_enabled() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.enabled)
  
  ::ywrapper::BoolValue* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Probes_Probe_Tests_Test_State::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.enabled)
  return enabled_;
}
inline void Probes_Probe_Tests_Test_State::set_allocated_enabled(::ywrapper::BoolValue* enabled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enabled_);
  }
  if (enabled) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enabled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enabled, submessage_arena);
    }
    
  } else {
    
  }
  enabled_ = enabled;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.enabled)
}

// .ywrapper.UintValue history_size = 366388155 [(.yext.schemapath) = "/probes/probe/tests/test/state/history-size"];
inline bool Probes_Probe_Tests_Test_State::has_history_size() const {
  return this != internal_default_instance() && history_size_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_State::history_size() const {
  const ::ywrapper::UintValue* p = history_size_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.history_size)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_State::release_history_size() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.history_size)
  
  ::ywrapper::UintValue* temp = history_size_;
  history_size_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_State::mutable_history_size() {
  
  if (history_size_ == NULL) {
    history_size_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.history_size)
  return history_size_;
}
inline void Probes_Probe_Tests_Test_State::set_allocated_history_size(::ywrapper::UintValue* history_size) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(history_size_);
  }
  if (history_size) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      history_size = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, history_size, submessage_arena);
    }
    
  } else {
    
  }
  history_size_ = history_size;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.history_size)
}

// .ywrapper.UintValue interval = 228767566 [(.yext.schemapath) = "/probes/probe/tests/test/state/interval"];
inline bool Probes_Probe_Tests_Test_State::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_State::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_State::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_State::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.interval)
  return interval_;
}
inline void Probes_Probe_Tests_Test_State::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.interval)
}

// .ywrapper.StringValue name = 413303480 [(.yext.schemapath) = "/probes/probe/tests/test/state/name"];
inline bool Probes_Probe_Tests_Test_State::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& Probes_Probe_Tests_Test_State::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Probes_Probe_Tests_Test_State::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Probes_Probe_Tests_Test_State::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.name)
  return name_;
}
inline void Probes_Probe_Tests_Test_State::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.name)
}

// .ywrapper.StringValue source = 330684050 [(.yext.schemapath) = "/probes/probe/tests/test/state/source"];
inline bool Probes_Probe_Tests_Test_State::has_source() const {
  return this != internal_default_instance() && source_ != NULL;
}
inline const ::ywrapper::StringValue& Probes_Probe_Tests_Test_State::source() const {
  const ::ywrapper::StringValue* p = source_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.source)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Probes_Probe_Tests_Test_State::release_source() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.source)
  
  ::ywrapper::StringValue* temp = source_;
  source_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Probes_Probe_Tests_Test_State::mutable_source() {
  
  if (source_ == NULL) {
    source_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.source)
  return source_;
}
inline void Probes_Probe_Tests_Test_State::set_allocated_source(::ywrapper::StringValue* source) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(source_);
  }
  if (source) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      source = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source, submessage_arena);
    }
    
  } else {
    
  }
  source_ = source;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.source)
}

// .ywrapper.UintValue source_port = 32412470 [(.yext.schemapath) = "/probes/probe/tests/test/state/source-port"];
inline bool Probes_Probe_Tests_Test_State::has_source_port() const {
  return this != internal_default_instance() && source_port_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_State::source_port() const {
  const ::ywrapper::UintValue* p = source_port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.source_port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_State::release_source_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.source_port)
  
  ::ywrapper::UintValue* temp = source_port_;
  source_port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_State::mutable_source_port() {
  
  if (source_port_ == NULL) {
    source_port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.source_port)
  return source_port_;
}
inline void Probes_Probe_Tests_Test_State::set_allocated_source_port(::ywrapper::UintValue* source_port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(source_port_);
  }
  if (source_port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      source_port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source_port, submessage_arena);
    }
    
  } else {
    
  }
  source_port_ = source_port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.source_port)
}

// .openconfig.enums.OpenconfigProbesTestType test_type = 120827898 [(.yext.schemapath) = "/probes/probe/tests/test/state/test-type"];
inline void Probes_Probe_Tests_Test_State::clear_test_type() {
  test_type_ = 0;
}
inline ::openconfig::enums::OpenconfigProbesTestType Probes_Probe_Tests_Test_State::test_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.test_type)
  return static_cast< ::openconfig::enums::OpenconfigProbesTestType >(test_type_);
}
inline void Probes_Probe_Tests_Test_State::set_test_type(::openconfig::enums::OpenconfigProbesTestType value) {
  
  test_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State.test_type)
}

// -------------------------------------------------------------------

// Probes_Probe_Tests_Test_Target_Config

// .ywrapper.StringValue address = 386645440 [(.yext.schemapath) = "/probes/probe/tests/test/target/config/address"];
inline bool Probes_Probe_Tests_Test_Target_Config::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline const ::ywrapper::StringValue& Probes_Probe_Tests_Test_Target_Config::address() const {
  const ::ywrapper::StringValue* p = address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config.address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Probes_Probe_Tests_Test_Target_Config::release_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config.address)
  
  ::ywrapper::StringValue* temp = address_;
  address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Probes_Probe_Tests_Test_Target_Config::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config.address)
  return address_;
}
inline void Probes_Probe_Tests_Test_Target_Config::set_allocated_address(::ywrapper::StringValue* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(address_);
  }
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config.address)
}

// .ywrapper.UintValue port = 530163097 [(.yext.schemapath) = "/probes/probe/tests/test/target/config/port"];
inline bool Probes_Probe_Tests_Test_Target_Config::has_port() const {
  return this != internal_default_instance() && port_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Target_Config::port() const {
  const ::ywrapper::UintValue* p = port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config.port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Target_Config::release_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config.port)
  
  ::ywrapper::UintValue* temp = port_;
  port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Target_Config::mutable_port() {
  
  if (port_ == NULL) {
    port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config.port)
  return port_;
}
inline void Probes_Probe_Tests_Test_Target_Config::set_allocated_port(::ywrapper::UintValue* port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(port_);
  }
  if (port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, port, submessage_arena);
    }
    
  } else {
    
  }
  port_ = port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config.port)
}

// .ywrapper.StringValue url = 479408427 [(.yext.schemapath) = "/probes/probe/tests/test/target/config/url"];
inline bool Probes_Probe_Tests_Test_Target_Config::has_url() const {
  return this != internal_default_instance() && url_ != NULL;
}
inline const ::ywrapper::StringValue& Probes_Probe_Tests_Test_Target_Config::url() const {
  const ::ywrapper::StringValue* p = url_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config.url)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Probes_Probe_Tests_Test_Target_Config::release_url() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config.url)
  
  ::ywrapper::StringValue* temp = url_;
  url_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Probes_Probe_Tests_Test_Target_Config::mutable_url() {
  
  if (url_ == NULL) {
    url_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config.url)
  return url_;
}
inline void Probes_Probe_Tests_Test_Target_Config::set_allocated_url(::ywrapper::StringValue* url) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(url_);
  }
  if (url) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      url = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, url, submessage_arena);
    }
    
  } else {
    
  }
  url_ = url;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config.url)
}

// -------------------------------------------------------------------

// Probes_Probe_Tests_Test_Target_State

// .ywrapper.StringValue address = 283265387 [(.yext.schemapath) = "/probes/probe/tests/test/target/state/address"];
inline bool Probes_Probe_Tests_Test_Target_State::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline const ::ywrapper::StringValue& Probes_Probe_Tests_Test_Target_State::address() const {
  const ::ywrapper::StringValue* p = address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State.address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Probes_Probe_Tests_Test_Target_State::release_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State.address)
  
  ::ywrapper::StringValue* temp = address_;
  address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Probes_Probe_Tests_Test_Target_State::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State.address)
  return address_;
}
inline void Probes_Probe_Tests_Test_Target_State::set_allocated_address(::ywrapper::StringValue* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(address_);
  }
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State.address)
}

// .ywrapper.UintValue port = 68939668 [(.yext.schemapath) = "/probes/probe/tests/test/target/state/port"];
inline bool Probes_Probe_Tests_Test_Target_State::has_port() const {
  return this != internal_default_instance() && port_ != NULL;
}
inline const ::ywrapper::UintValue& Probes_Probe_Tests_Test_Target_State::port() const {
  const ::ywrapper::UintValue* p = port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State.port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Target_State::release_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State.port)
  
  ::ywrapper::UintValue* temp = port_;
  port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Probes_Probe_Tests_Test_Target_State::mutable_port() {
  
  if (port_ == NULL) {
    port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State.port)
  return port_;
}
inline void Probes_Probe_Tests_Test_Target_State::set_allocated_port(::ywrapper::UintValue* port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(port_);
  }
  if (port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, port, submessage_arena);
    }
    
  } else {
    
  }
  port_ = port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State.port)
}

// .ywrapper.StringValue url = 405409852 [(.yext.schemapath) = "/probes/probe/tests/test/target/state/url"];
inline bool Probes_Probe_Tests_Test_Target_State::has_url() const {
  return this != internal_default_instance() && url_ != NULL;
}
inline const ::ywrapper::StringValue& Probes_Probe_Tests_Test_Target_State::url() const {
  const ::ywrapper::StringValue* p = url_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State.url)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Probes_Probe_Tests_Test_Target_State::release_url() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State.url)
  
  ::ywrapper::StringValue* temp = url_;
  url_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Probes_Probe_Tests_Test_Target_State::mutable_url() {
  
  if (url_ == NULL) {
    url_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State.url)
  return url_;
}
inline void Probes_Probe_Tests_Test_Target_State::set_allocated_url(::ywrapper::StringValue* url) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(url_);
  }
  if (url) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      url = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, url, submessage_arena);
    }
    
  } else {
    
  }
  url_ = url;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State.url)
}

// -------------------------------------------------------------------

// Probes_Probe_Tests_Test_Target

// .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config config = 140870805 [(.yext.schemapath) = "/probes/probe/tests/test/target/config"];
inline bool Probes_Probe_Tests_Test_Target::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Probes_Probe_Tests_Test_Target::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_Config& Probes_Probe_Tests_Test_Target::config() const {
  const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_Config*>(
      &::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Target_Config_default_instance_);
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_Config* Probes_Probe_Tests_Test_Target::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.config)
  
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_Config* Probes_Probe_Tests_Test_Target::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.config)
  return config_;
}
inline void Probes_Probe_Tests_Test_Target::set_allocated_config(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.config)
}

// .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State state = 186787850 [(.yext.schemapath) = "/probes/probe/tests/test/target/state"];
inline bool Probes_Probe_Tests_Test_Target::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Probes_Probe_Tests_Test_Target::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_State& Probes_Probe_Tests_Test_Target::state() const {
  const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_State*>(
      &::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Target_State_default_instance_);
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_State* Probes_Probe_Tests_Test_Target::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.state)
  
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_State* Probes_Probe_Tests_Test_Target::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.state)
  return state_;
}
inline void Probes_Probe_Tests_Test_Target::set_allocated_state(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.state)
}

// -------------------------------------------------------------------

// Probes_Probe_Tests_Test

// .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config config = 178866037 [(.yext.schemapath) = "/probes/probe/tests/test/config"];
inline bool Probes_Probe_Tests_Test::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Probes_Probe_Tests_Test::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config& Probes_Probe_Tests_Test::config() const {
  const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config*>(
      &::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Config_default_instance_);
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config* Probes_Probe_Tests_Test::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.config)
  
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config* Probes_Probe_Tests_Test::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.config)
  return config_;
}
inline void Probes_Probe_Tests_Test::set_allocated_config(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.config)
}

// .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results results = 37245791 [(.yext.schemapath) = "/probes/probe/tests/test/results"];
inline bool Probes_Probe_Tests_Test::has_results() const {
  return this != internal_default_instance() && results_ != NULL;
}
inline void Probes_Probe_Tests_Test::clear_results() {
  if (GetArenaNoVirtual() == NULL && results_ != NULL) {
    delete results_;
  }
  results_ = NULL;
}
inline const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results& Probes_Probe_Tests_Test::results() const {
  const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results* p = results_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.results)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results*>(
      &::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_default_instance_);
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results* Probes_Probe_Tests_Test::release_results() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.results)
  
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results* temp = results_;
  results_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results* Probes_Probe_Tests_Test::mutable_results() {
  
  if (results_ == NULL) {
    results_ = new ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.results)
  return results_;
}
inline void Probes_Probe_Tests_Test::set_allocated_results(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results* results) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete results_;
  }
  if (results) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      results = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, results, submessage_arena);
    }
    
  } else {
    
  }
  results_ = results;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.results)
}

// .openconfig.openconfig_probes.Probes.Probe.Tests.Test.State state = 468483178 [(.yext.schemapath) = "/probes/probe/tests/test/state"];
inline bool Probes_Probe_Tests_Test::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Probes_Probe_Tests_Test::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State& Probes_Probe_Tests_Test::state() const {
  const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State*>(
      &::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_State_default_instance_);
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State* Probes_Probe_Tests_Test::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.state)
  
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State* Probes_Probe_Tests_Test::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.state)
  return state_;
}
inline void Probes_Probe_Tests_Test::set_allocated_state(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.state)
}

// .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target target = 72482592 [(.yext.schemapath) = "/probes/probe/tests/test/target"];
inline bool Probes_Probe_Tests_Test::has_target() const {
  return this != internal_default_instance() && target_ != NULL;
}
inline void Probes_Probe_Tests_Test::clear_target() {
  if (GetArenaNoVirtual() == NULL && target_ != NULL) {
    delete target_;
  }
  target_ = NULL;
}
inline const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target& Probes_Probe_Tests_Test::target() const {
  const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target* p = target_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.Test.target)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target*>(
      &::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Target_default_instance_);
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target* Probes_Probe_Tests_Test::release_target() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.Test.target)
  
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target* temp = target_;
  target_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target* Probes_Probe_Tests_Test::mutable_target() {
  
  if (target_ == NULL) {
    target_ = new ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.Test.target)
  return target_;
}
inline void Probes_Probe_Tests_Test::set_allocated_target(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target* target) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete target_;
  }
  if (target) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      target = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target, submessage_arena);
    }
    
  } else {
    
  }
  target_ = target;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.Test.target)
}

// -------------------------------------------------------------------

// Probes_Probe_Tests_TestKey

// string name = 1 [(.yext.schemapath) = "/probes/probe/tests/test/name"];
inline void Probes_Probe_Tests_TestKey::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Probes_Probe_Tests_TestKey::name() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey.name)
  return name_.GetNoArena();
}
inline void Probes_Probe_Tests_TestKey::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey.name)
}
#if LANG_CXX11
inline void Probes_Probe_Tests_TestKey::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey.name)
}
#endif
inline void Probes_Probe_Tests_TestKey::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey.name)
}
inline void Probes_Probe_Tests_TestKey::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey.name)
}
inline ::std::string* Probes_Probe_Tests_TestKey::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Probes_Probe_Tests_TestKey::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Probes_Probe_Tests_TestKey::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey.name)
}

// .openconfig.openconfig_probes.Probes.Probe.Tests.Test test = 2;
inline bool Probes_Probe_Tests_TestKey::has_test() const {
  return this != internal_default_instance() && test_ != NULL;
}
inline void Probes_Probe_Tests_TestKey::clear_test() {
  if (GetArenaNoVirtual() == NULL && test_ != NULL) {
    delete test_;
  }
  test_ = NULL;
}
inline const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test& Probes_Probe_Tests_TestKey::test() const {
  const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test* p = test_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey.test)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_probes::Probes_Probe_Tests_Test*>(
      &::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_default_instance_);
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_Test* Probes_Probe_Tests_TestKey::release_test() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey.test)
  
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test* temp = test_;
  test_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_Test* Probes_Probe_Tests_TestKey::mutable_test() {
  
  if (test_ == NULL) {
    test_ = new ::openconfig::openconfig_probes::Probes_Probe_Tests_Test;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey.test)
  return test_;
}
inline void Probes_Probe_Tests_TestKey::set_allocated_test(::openconfig::openconfig_probes::Probes_Probe_Tests_Test* test) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete test_;
  }
  if (test) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      test = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, test, submessage_arena);
    }
    
  } else {
    
  }
  test_ = test;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey.test)
}

// -------------------------------------------------------------------

// Probes_Probe_Tests

// repeated .openconfig.openconfig_probes.Probes.Probe.Tests.TestKey test = 405558272 [(.yext.schemapath) = "/probes/probe/tests/test"];
inline int Probes_Probe_Tests::test_size() const {
  return test_.size();
}
inline void Probes_Probe_Tests::clear_test() {
  test_.Clear();
}
inline const ::openconfig::openconfig_probes::Probes_Probe_Tests_TestKey& Probes_Probe_Tests::test(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.Tests.test)
  return test_.Get(index);
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_TestKey* Probes_Probe_Tests::mutable_test(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.Tests.test)
  return test_.Mutable(index);
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests_TestKey* Probes_Probe_Tests::add_test() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_probes.Probes.Probe.Tests.test)
  return test_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_probes::Probes_Probe_Tests_TestKey >*
Probes_Probe_Tests::mutable_test() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_probes.Probes.Probe.Tests.test)
  return &test_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_probes::Probes_Probe_Tests_TestKey >&
Probes_Probe_Tests::test() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_probes.Probes.Probe.Tests.test)
  return test_;
}

// -------------------------------------------------------------------

// Probes_Probe

// .openconfig.openconfig_probes.Probes.Probe.Config config = 371483076 [(.yext.schemapath) = "/probes/probe/config"];
inline bool Probes_Probe::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Probes_Probe::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_probes::Probes_Probe_Config& Probes_Probe::config() const {
  const ::openconfig::openconfig_probes::Probes_Probe_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_probes::Probes_Probe_Config*>(
      &::openconfig::openconfig_probes::_Probes_Probe_Config_default_instance_);
}
inline ::openconfig::openconfig_probes::Probes_Probe_Config* Probes_Probe::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.config)
  
  ::openconfig::openconfig_probes::Probes_Probe_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_probes::Probes_Probe_Config* Probes_Probe::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_probes::Probes_Probe_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.config)
  return config_;
}
inline void Probes_Probe::set_allocated_config(::openconfig::openconfig_probes::Probes_Probe_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.config)
}

// .openconfig.openconfig_probes.Probes.Probe.State state = 472644061 [(.yext.schemapath) = "/probes/probe/state"];
inline bool Probes_Probe::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Probes_Probe::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_probes::Probes_Probe_State& Probes_Probe::state() const {
  const ::openconfig::openconfig_probes::Probes_Probe_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_probes::Probes_Probe_State*>(
      &::openconfig::openconfig_probes::_Probes_Probe_State_default_instance_);
}
inline ::openconfig::openconfig_probes::Probes_Probe_State* Probes_Probe::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.state)
  
  ::openconfig::openconfig_probes::Probes_Probe_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_probes::Probes_Probe_State* Probes_Probe::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_probes::Probes_Probe_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.state)
  return state_;
}
inline void Probes_Probe::set_allocated_state(::openconfig::openconfig_probes::Probes_Probe_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.state)
}

// .openconfig.openconfig_probes.Probes.Probe.Tests tests = 169946161 [(.yext.schemapath) = "/probes/probe/tests"];
inline bool Probes_Probe::has_tests() const {
  return this != internal_default_instance() && tests_ != NULL;
}
inline void Probes_Probe::clear_tests() {
  if (GetArenaNoVirtual() == NULL && tests_ != NULL) {
    delete tests_;
  }
  tests_ = NULL;
}
inline const ::openconfig::openconfig_probes::Probes_Probe_Tests& Probes_Probe::tests() const {
  const ::openconfig::openconfig_probes::Probes_Probe_Tests* p = tests_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.Probe.tests)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_probes::Probes_Probe_Tests*>(
      &::openconfig::openconfig_probes::_Probes_Probe_Tests_default_instance_);
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests* Probes_Probe::release_tests() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.Probe.tests)
  
  ::openconfig::openconfig_probes::Probes_Probe_Tests* temp = tests_;
  tests_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_probes::Probes_Probe_Tests* Probes_Probe::mutable_tests() {
  
  if (tests_ == NULL) {
    tests_ = new ::openconfig::openconfig_probes::Probes_Probe_Tests;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.Probe.tests)
  return tests_;
}
inline void Probes_Probe::set_allocated_tests(::openconfig::openconfig_probes::Probes_Probe_Tests* tests) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete tests_;
  }
  if (tests) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tests = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tests, submessage_arena);
    }
    
  } else {
    
  }
  tests_ = tests;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.Probe.tests)
}

// -------------------------------------------------------------------

// Probes_ProbeKey

// string name = 1 [(.yext.schemapath) = "/probes/probe/name"];
inline void Probes_ProbeKey::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Probes_ProbeKey::name() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.ProbeKey.name)
  return name_.GetNoArena();
}
inline void Probes_ProbeKey::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_probes.Probes.ProbeKey.name)
}
#if LANG_CXX11
inline void Probes_ProbeKey::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_probes.Probes.ProbeKey.name)
}
#endif
inline void Probes_ProbeKey::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_probes.Probes.ProbeKey.name)
}
inline void Probes_ProbeKey::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_probes.Probes.ProbeKey.name)
}
inline ::std::string* Probes_ProbeKey::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.ProbeKey.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Probes_ProbeKey::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.ProbeKey.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Probes_ProbeKey::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.ProbeKey.name)
}

// .openconfig.openconfig_probes.Probes.Probe probe = 2;
inline bool Probes_ProbeKey::has_probe() const {
  return this != internal_default_instance() && probe_ != NULL;
}
inline void Probes_ProbeKey::clear_probe() {
  if (GetArenaNoVirtual() == NULL && probe_ != NULL) {
    delete probe_;
  }
  probe_ = NULL;
}
inline const ::openconfig::openconfig_probes::Probes_Probe& Probes_ProbeKey::probe() const {
  const ::openconfig::openconfig_probes::Probes_Probe* p = probe_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.ProbeKey.probe)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_probes::Probes_Probe*>(
      &::openconfig::openconfig_probes::_Probes_Probe_default_instance_);
}
inline ::openconfig::openconfig_probes::Probes_Probe* Probes_ProbeKey::release_probe() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_probes.Probes.ProbeKey.probe)
  
  ::openconfig::openconfig_probes::Probes_Probe* temp = probe_;
  probe_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_probes::Probes_Probe* Probes_ProbeKey::mutable_probe() {
  
  if (probe_ == NULL) {
    probe_ = new ::openconfig::openconfig_probes::Probes_Probe;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.ProbeKey.probe)
  return probe_;
}
inline void Probes_ProbeKey::set_allocated_probe(::openconfig::openconfig_probes::Probes_Probe* probe) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete probe_;
  }
  if (probe) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      probe = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, probe, submessage_arena);
    }
    
  } else {
    
  }
  probe_ = probe;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_probes.Probes.ProbeKey.probe)
}

// -------------------------------------------------------------------

// Probes

// repeated .openconfig.openconfig_probes.Probes.ProbeKey probe = 259116739 [(.yext.schemapath) = "/probes/probe"];
inline int Probes::probe_size() const {
  return probe_.size();
}
inline void Probes::clear_probe() {
  probe_.Clear();
}
inline const ::openconfig::openconfig_probes::Probes_ProbeKey& Probes::probe(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_probes.Probes.probe)
  return probe_.Get(index);
}
inline ::openconfig::openconfig_probes::Probes_ProbeKey* Probes::mutable_probe(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_probes.Probes.probe)
  return probe_.Mutable(index);
}
inline ::openconfig::openconfig_probes::Probes_ProbeKey* Probes::add_probe() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_probes.Probes.probe)
  return probe_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_probes::Probes_ProbeKey >*
Probes::mutable_probe() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_probes.Probes.probe)
  return &probe_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_probes::Probes_ProbeKey >&
Probes::probe() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_probes.Probes.probe)
  return probe_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace openconfig_probes
}  // namespace openconfig

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto__INCLUDED
