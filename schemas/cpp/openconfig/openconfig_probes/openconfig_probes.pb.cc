// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: openconfig/openconfig_probes/openconfig_probes.proto

#include "openconfig/openconfig_probes/openconfig_probes.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace openconfig {
namespace openconfig_probes {
class Probes_Probe_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Probes_Probe_Config>
      _instance;
} _Probes_Probe_Config_default_instance_;
class Probes_Probe_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Probes_Probe_State>
      _instance;
} _Probes_Probe_State_default_instance_;
class Probes_Probe_Tests_Test_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Probes_Probe_Tests_Test_Config>
      _instance;
} _Probes_Probe_Tests_Test_Config_default_instance_;
class Probes_Probe_Tests_Test_Results_History_Items_Item_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Probes_Probe_Tests_Test_Results_History_Items_Item_State>
      _instance;
} _Probes_Probe_Tests_Test_Results_History_Items_Item_State_default_instance_;
class Probes_Probe_Tests_Test_Results_History_Items_ItemDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Probes_Probe_Tests_Test_Results_History_Items_Item>
      _instance;
} _Probes_Probe_Tests_Test_Results_History_Items_Item_default_instance_;
class Probes_Probe_Tests_Test_Results_History_Items_ItemKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Probes_Probe_Tests_Test_Results_History_Items_ItemKey>
      _instance;
} _Probes_Probe_Tests_Test_Results_History_Items_ItemKey_default_instance_;
class Probes_Probe_Tests_Test_Results_History_ItemsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Probes_Probe_Tests_Test_Results_History_Items>
      _instance;
} _Probes_Probe_Tests_Test_Results_History_Items_default_instance_;
class Probes_Probe_Tests_Test_Results_HistoryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Probes_Probe_Tests_Test_Results_History>
      _instance;
} _Probes_Probe_Tests_Test_Results_History_default_instance_;
class Probes_Probe_Tests_Test_Results_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Probes_Probe_Tests_Test_Results_State>
      _instance;
} _Probes_Probe_Tests_Test_Results_State_default_instance_;
class Probes_Probe_Tests_Test_ResultsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Probes_Probe_Tests_Test_Results>
      _instance;
} _Probes_Probe_Tests_Test_Results_default_instance_;
class Probes_Probe_Tests_Test_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Probes_Probe_Tests_Test_State>
      _instance;
} _Probes_Probe_Tests_Test_State_default_instance_;
class Probes_Probe_Tests_Test_Target_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Probes_Probe_Tests_Test_Target_Config>
      _instance;
} _Probes_Probe_Tests_Test_Target_Config_default_instance_;
class Probes_Probe_Tests_Test_Target_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Probes_Probe_Tests_Test_Target_State>
      _instance;
} _Probes_Probe_Tests_Test_Target_State_default_instance_;
class Probes_Probe_Tests_Test_TargetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Probes_Probe_Tests_Test_Target>
      _instance;
} _Probes_Probe_Tests_Test_Target_default_instance_;
class Probes_Probe_Tests_TestDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Probes_Probe_Tests_Test>
      _instance;
} _Probes_Probe_Tests_Test_default_instance_;
class Probes_Probe_Tests_TestKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Probes_Probe_Tests_TestKey>
      _instance;
} _Probes_Probe_Tests_TestKey_default_instance_;
class Probes_Probe_TestsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Probes_Probe_Tests>
      _instance;
} _Probes_Probe_Tests_default_instance_;
class Probes_ProbeDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Probes_Probe>
      _instance;
} _Probes_Probe_default_instance_;
class Probes_ProbeKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Probes_ProbeKey>
      _instance;
} _Probes_ProbeKey_default_instance_;
class ProbesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Probes>
      _instance;
} _Probes_default_instance_;
}  // namespace openconfig_probes
}  // namespace openconfig
namespace protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto {
void InitDefaultsProbes_Probe_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBoolValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_probes::_Probes_Probe_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_probes::Probes_Probe_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_probes::Probes_Probe_Config::InitAsDefaultInstance();
}

void InitDefaultsProbes_Probe_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProbes_Probe_ConfigImpl);
}

void InitDefaultsProbes_Probe_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBoolValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_probes::_Probes_Probe_State_default_instance_;
    new (ptr) ::openconfig::openconfig_probes::Probes_Probe_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_probes::Probes_Probe_State::InitAsDefaultInstance();
}

void InitDefaultsProbes_Probe_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProbes_Probe_StateImpl);
}

void InitDefaultsProbes_Probe_Tests_Test_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBoolValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config::InitAsDefaultInstance();
}

void InitDefaultsProbes_Probe_Tests_Test_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProbes_Probe_Tests_Test_ConfigImpl);
}

void InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_Item_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBoolValue();
  {
    void* ptr = &::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_Items_Item_State_default_instance_;
    new (ptr) ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State::InitAsDefaultInstance();
}

void InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_Item_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_Item_StateImpl);
}

void InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_ItemImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_Item_State();
  {
    void* ptr = &::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_Items_Item_default_instance_;
    new (ptr) ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item::InitAsDefaultInstance();
}

void InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_Item() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_ItemImpl);
}

void InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_ItemKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_Item();
  {
    void* ptr = &::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_Items_ItemKey_default_instance_;
    new (ptr) ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_ItemKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_ItemKey::InitAsDefaultInstance();
}

void InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_ItemKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_ItemKeyImpl);
}

void InitDefaultsProbes_Probe_Tests_Test_Results_History_ItemsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_ItemKey();
  {
    void* ptr = &::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_Items_default_instance_;
    new (ptr) ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items::InitAsDefaultInstance();
}

void InitDefaultsProbes_Probe_Tests_Test_Results_History_Items() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProbes_Probe_Tests_Test_Results_History_ItemsImpl);
}

void InitDefaultsProbes_Probe_Tests_Test_Results_HistoryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Results_History_Items();
  {
    void* ptr = &::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_default_instance_;
    new (ptr) ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History::InitAsDefaultInstance();
}

void InitDefaultsProbes_Probe_Tests_Test_Results_History() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProbes_Probe_Tests_Test_Results_HistoryImpl);
}

void InitDefaultsProbes_Probe_Tests_Test_Results_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBoolValue();
  {
    void* ptr = &::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_State_default_instance_;
    new (ptr) ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State::InitAsDefaultInstance();
}

void InitDefaultsProbes_Probe_Tests_Test_Results_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProbes_Probe_Tests_Test_Results_StateImpl);
}

void InitDefaultsProbes_Probe_Tests_Test_ResultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Results_History();
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Results_State();
  {
    void* ptr = &::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_default_instance_;
    new (ptr) ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results::InitAsDefaultInstance();
}

void InitDefaultsProbes_Probe_Tests_Test_Results() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProbes_Probe_Tests_Test_ResultsImpl);
}

void InitDefaultsProbes_Probe_Tests_Test_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBoolValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_State_default_instance_;
    new (ptr) ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State::InitAsDefaultInstance();
}

void InitDefaultsProbes_Probe_Tests_Test_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProbes_Probe_Tests_Test_StateImpl);
}

void InitDefaultsProbes_Probe_Tests_Test_Target_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Target_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_Config::InitAsDefaultInstance();
}

void InitDefaultsProbes_Probe_Tests_Test_Target_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProbes_Probe_Tests_Test_Target_ConfigImpl);
}

void InitDefaultsProbes_Probe_Tests_Test_Target_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Target_State_default_instance_;
    new (ptr) ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_State::InitAsDefaultInstance();
}

void InitDefaultsProbes_Probe_Tests_Test_Target_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProbes_Probe_Tests_Test_Target_StateImpl);
}

void InitDefaultsProbes_Probe_Tests_Test_TargetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Target_Config();
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Target_State();
  {
    void* ptr = &::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Target_default_instance_;
    new (ptr) ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target::InitAsDefaultInstance();
}

void InitDefaultsProbes_Probe_Tests_Test_Target() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProbes_Probe_Tests_Test_TargetImpl);
}

void InitDefaultsProbes_Probe_Tests_TestImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Config();
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Results();
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_State();
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Target();
  {
    void* ptr = &::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_default_instance_;
    new (ptr) ::openconfig::openconfig_probes::Probes_Probe_Tests_Test();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_probes::Probes_Probe_Tests_Test::InitAsDefaultInstance();
}

void InitDefaultsProbes_Probe_Tests_Test() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProbes_Probe_Tests_TestImpl);
}

void InitDefaultsProbes_Probe_Tests_TestKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test();
  {
    void* ptr = &::openconfig::openconfig_probes::_Probes_Probe_Tests_TestKey_default_instance_;
    new (ptr) ::openconfig::openconfig_probes::Probes_Probe_Tests_TestKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_probes::Probes_Probe_Tests_TestKey::InitAsDefaultInstance();
}

void InitDefaultsProbes_Probe_Tests_TestKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProbes_Probe_Tests_TestKeyImpl);
}

void InitDefaultsProbes_Probe_TestsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_TestKey();
  {
    void* ptr = &::openconfig::openconfig_probes::_Probes_Probe_Tests_default_instance_;
    new (ptr) ::openconfig::openconfig_probes::Probes_Probe_Tests();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_probes::Probes_Probe_Tests::InitAsDefaultInstance();
}

void InitDefaultsProbes_Probe_Tests() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProbes_Probe_TestsImpl);
}

void InitDefaultsProbes_ProbeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Config();
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_State();
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests();
  {
    void* ptr = &::openconfig::openconfig_probes::_Probes_Probe_default_instance_;
    new (ptr) ::openconfig::openconfig_probes::Probes_Probe();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_probes::Probes_Probe::InitAsDefaultInstance();
}

void InitDefaultsProbes_Probe() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProbes_ProbeImpl);
}

void InitDefaultsProbes_ProbeKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe();
  {
    void* ptr = &::openconfig::openconfig_probes::_Probes_ProbeKey_default_instance_;
    new (ptr) ::openconfig::openconfig_probes::Probes_ProbeKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_probes::Probes_ProbeKey::InitAsDefaultInstance();
}

void InitDefaultsProbes_ProbeKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProbes_ProbeKeyImpl);
}

void InitDefaultsProbesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_ProbeKey();
  {
    void* ptr = &::openconfig::openconfig_probes::_Probes_default_instance_;
    new (ptr) ::openconfig::openconfig_probes::Probes();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_probes::Probes::InitAsDefaultInstance();
}

void InitDefaultsProbes() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsProbesImpl);
}

::google::protobuf::Metadata file_level_metadata[20];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Config, enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Config, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_State, enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_State, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config, dscp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config, enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config, history_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config, source_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config, test_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State, avg_delay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State, end_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State, failed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State, jitter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State, loss_percentage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State, max_delay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State, min_delay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State, probes_received_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State, probes_sent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State, start_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State, stddev_delay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State, test_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State, timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_ItemKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_ItemKey, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_ItemKey, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items, item_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History, items_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State, avg_delay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State, failed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State, jitter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State, last_test_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State, loss_percentage_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State, max_delay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State, min_delay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State, probes_received_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State, probes_sent_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State, start_timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State, stddev_delay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State, test_duration_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State, timestamp_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results, history_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State, dscp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State, enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State, history_size_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State, source_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State, source_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State, test_type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_Config, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_Config, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_Config, url_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_State, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_State, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_State, url_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test, results_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_Test, target_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_TestKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_TestKey, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests_TestKey, test_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe_Tests, test_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_Probe, tests_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_ProbeKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_ProbeKey, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes_ProbeKey, probe_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_probes::Probes, probe_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::openconfig::openconfig_probes::Probes_Probe_Config)},
  { 7, -1, sizeof(::openconfig::openconfig_probes::Probes_Probe_State)},
  { 14, -1, sizeof(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config)},
  { 28, -1, sizeof(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State)},
  { 47, -1, sizeof(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item)},
  { 53, -1, sizeof(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_ItemKey)},
  { 60, -1, sizeof(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items)},
  { 66, -1, sizeof(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History)},
  { 72, -1, sizeof(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State)},
  { 90, -1, sizeof(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results)},
  { 97, -1, sizeof(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State)},
  { 111, -1, sizeof(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_Config)},
  { 119, -1, sizeof(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_State)},
  { 127, -1, sizeof(::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target)},
  { 134, -1, sizeof(::openconfig::openconfig_probes::Probes_Probe_Tests_Test)},
  { 143, -1, sizeof(::openconfig::openconfig_probes::Probes_Probe_Tests_TestKey)},
  { 150, -1, sizeof(::openconfig::openconfig_probes::Probes_Probe_Tests)},
  { 156, -1, sizeof(::openconfig::openconfig_probes::Probes_Probe)},
  { 164, -1, sizeof(::openconfig::openconfig_probes::Probes_ProbeKey)},
  { 171, -1, sizeof(::openconfig::openconfig_probes::Probes)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_probes::_Probes_Probe_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_probes::_Probes_Probe_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_Items_Item_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_Items_Item_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_Items_ItemKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_Items_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Target_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Target_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Target_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_probes::_Probes_Probe_Tests_TestKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_probes::_Probes_Probe_Tests_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_probes::_Probes_Probe_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_probes::_Probes_ProbeKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_probes::_Probes_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "openconfig/openconfig_probes/openconfig_probes.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 20);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n4openconfig/openconfig_probes/openconfi"
      "g_probes.proto\022\034openconfig.openconfig_pr"
      "obes\0328github.com/openconfig/ygot/proto/y"
      "wrapper/ywrapper.proto\0320github.com/openc"
      "onfig/ygot/proto/yext/yext.proto\032\034openco"
      "nfig/enums/enums.proto\"\357=\n\006Probes\022Q\n\005pro"
      "be\030\303\235\307{ \003(\0132-.openconfig.openconfig_prob"
      "es.Probes.ProbeKeyB\020\202A\r/probes/probe\032\245<\n"
      "\005Probe\022^\n\006config\030\304\303\221\261\001 \001(\01321.openconfig."
      "openconfig_probes.Probes.Probe.ConfigB\027\202"
      "A\024/probes/probe/config\022[\n\005state\030\335\363\257\341\001 \001("
      "\01320.openconfig.openconfig_probes.Probes."
      "Probe.StateB\026\202A\023/probes/probe/state\022Z\n\005t"
      "ests\030\261\330\204Q \001(\01320.openconfig.openconfig_pr"
      "obes.Probes.Probe.TestsB\026\202A\023/probes/prob"
      "e/tests\032\231\001\n\006Config\022I\n\007enabled\030\346\374\336\216\001 \001(\0132"
      "\023.ywrapper.BoolValueB\037\202A\034/probes/probe/c"
      "onfig/enabled\022D\n\004name\030\306\222\265x \001(\0132\025.ywrappe"
      "r.StringValueB\034\202A\031/probes/probe/config/n"
      "ame\032\225\001\n\005State\022G\n\007enabled\030\363\243\373\020 \001(\0132\023.ywra"
      "pper.BoolValueB\036\202A\033/probes/probe/state/e"
      "nabled\022C\n\004name\030\271\245\2357 \001(\0132\025.ywrapper.Strin"
      "gValueB\033\202A\030/probes/probe/state/name\032\3167\n\005"
      "Tests\022g\n\004test\030\200\250\261\301\001 \003(\01328.openconfig.ope"
      "nconfig_probes.Probes.Probe.Tests.TestKe"
      "yB\033\202A\030/probes/probe/tests/test\032\3335\n\004Test\022"
      "s\n\006config\030\365\216\245U \001(\0132<.openconfig.openconf"
      "ig_probes.Probes.Probe.Tests.Test.Config"
      "B\"\202A\037/probes/probe/tests/test/config\022v\n\007"
      "results\030\337\246\341\021 \001(\0132=.openconfig.openconfig"
      "_probes.Probes.Probe.Tests.Test.ResultsB"
      "#\202A /probes/probe/tests/test/results\022q\n\005"
      "state\030\352\370\261\337\001 \001(\0132;.openconfig.openconfig_"
      "probes.Probes.Probe.Tests.Test.StateB!\202A"
      "\036/probes/probe/tests/test/state\022s\n\006targe"
      "t\030\240\376\307\" \001(\0132<.openconfig.openconfig_probe"
      "s.Probes.Probe.Tests.Test.TargetB\"\202A\037/pr"
      "obes/probe/tests/test/target\032\252\006\n\006Config\022"
      "O\n\005count\030\225\300\273c \001(\0132\023.ywrapper.UintValueB("
      "\202A%/probes/probe/tests/test/config/count"
      "\022N\n\004dscp\030\232\247\325\312\001 \001(\0132\023.ywrapper.UintValueB"
      "\'\202A$/probes/probe/tests/test/config/dscp"
      "\022T\n\007enabled\030\233\372\200\330\001 \001(\0132\023.ywrapper.BoolVal"
      "ueB*\202A\'/probes/probe/tests/test/config/e"
      "nabled\022]\n\014history_size\030\202\300\206\035 \001(\0132\023.ywrapp"
      "er.UintValueB/\202A,/probes/probe/tests/tes"
      "t/config/history-size\022U\n\010interval\030\203\256\215\037 \001"
      "(\0132\023.ywrapper.UintValueB+\202A(/probes/prob"
      "e/tests/test/config/interval\022O\n\004name\030\321\216\247"
      "k \001(\0132\025.ywrapper.StringValueB\'\202A$/probes"
      "/probe/tests/test/config/name\022S\n\006source\030"
      "\307\253\222\010 \001(\0132\025.ywrapper.StringValueB)\202A&/pro"
      "bes/probe/tests/test/config/source\022\\\n\013so"
      "urce_port\030\321\252\377\327\001 \001(\0132\023.ywrapper.UintValue"
      "B.\202A+/probes/probe/tests/test/config/sou"
      "rce-port\022o\n\ttest_type\030\201\231\277\313\001 \001(\0162*.openco"
      "nfig.enums.OpenconfigProbesTestTypeB,\202A)"
      "/probes/probe/tests/test/config/test-typ"
      "e\032\361\036\n\007Results\022\206\001\n\007history\030\332\350\240h \001(\0132E.ope"
      "nconfig.openconfig_probes.Probes.Probe.T"
      "ests.Test.Results.HistoryB+\202A(/probes/pr"
      "obe/tests/test/results/history\022\177\n\005state\030"
      "\231\232\006 \001(\0132C.openconfig.openconfig_probes.P"
      "robes.Probe.Tests.Test.Results.StateB)\202A"
      "&/probes/probe/tests/test/results/state\032"
      "\253\022\n\007History\022\220\001\n\005items\030\347\264\374W \001(\0132K.opencon"
      "fig.openconfig_probes.Probes.Probe.Tests"
      ".Test.Results.History.ItemsB1\202A./probes/"
      "probe/tests/test/results/history/items\032\214"
      "\021\n\005Items\022\235\001\n\004item\030\257\332\312\354\001 \003(\0132S.openconfig"
      ".openconfig_probes.Probes.Probe.Tests.Te"
      "st.Results.History.Items.ItemKeyB6\202A3/pr"
      "obes/probe/tests/test/results/history/it"
      "ems/item\032\257\016\n\004Item\022\247\001\n\005state\030\211\345\306\320\001 \001(\0132V."
      "openconfig.openconfig_probes.Probes.Prob"
      "e.Tests.Test.Results.History.Items.Item."
      "StateB<\202A9/probes/probe/tests/test/resul"
      "ts/history/items/item/state\032\374\014\n\005State\022q\n"
      "\tavg_delay\030\306\323\215\036 \001(\0132\023.ywrapper.UintValue"
      "BF\202AC/probes/probe/tests/test/results/hi"
      "story/items/item/state/avg-delay\022y\n\rend_"
      "timestamp\030\354\335\313) \001(\0132\023.ywrapper.UintValueB"
      "J\202AG/probes/probe/tests/test/results/his"
      "tory/items/item/state/end-timestamp\022k\n\006f"
      "ailed\030\273\367\232# \001(\0132\023.ywrapper.BoolValueBC\202A@"
      "/probes/probe/tests/test/results/history"
      "/items/item/state/failed\022c\n\002id\030\333\353\3505 \001(\0132"
      "\023.ywrapper.UintValueB\?\202A</probes/probe/t"
      "ests/test/results/history/items/item/sta"
      "te/id\022k\n\006jitter\030\376\242\237% \001(\0132\023.ywrapper.Uint"
      "ValueBC\202A@/probes/probe/tests/test/resul"
      "ts/history/items/item/state/jitter\022}\n\017lo"
      "ss_percentage\030\306\355\371( \001(\0132\023.ywrapper.UintVa"
      "lueBL\202AI/probes/probe/tests/test/results"
      "/history/items/item/state/loss-percentag"
      "e\022r\n\tmax_delay\030\310\321\237\214\001 \001(\0132\023.ywrapper.Uint"
      "ValueBF\202AC/probes/probe/tests/test/resul"
      "ts/history/items/item/state/max-delay\022r\n"
      "\tmin_delay\030\242\337\305\217\001 \001(\0132\023.ywrapper.UintValu"
      "eBF\202AC/probes/probe/tests/test/results/h"
      "istory/items/item/state/min-delay\022~\n\017pro"
      "bes_received\030\217\316\316\307\001 \001(\0132\023.ywrapper.UintVa"
      "lueBL\202AI/probes/probe/tests/test/results"
      "/history/items/item/state/probes-receive"
      "d\022v\n\013probes_sent\030\374\276\217\240\001 \001(\0132\023.ywrapper.Ui"
      "ntValueBH\202AE/probes/probe/tests/test/res"
      "ults/history/items/item/state/probes-sen"
      "t\022~\n\017start_timestamp\030\207\233\317\320\001 \001(\0132\023.ywrappe"
      "r.UintValueBL\202AI/probes/probe/tests/test"
      "/results/history/items/item/state/start-"
      "timestamp\022w\n\014stddev_delay\030\276\257\274S \001(\0132\023.ywr"
      "apper.UintValueBI\202AF/probes/probe/tests/"
      "test/results/history/items/item/state/st"
      "ddev-delay\022z\n\rtest_duration\030\271\371\212\365\001 \001(\0132\023."
      "ywrapper.UintValueBJ\202AG/probes/probe/tes"
      "ts/test/results/history/items/item/state"
      "/test-duration\022r\n\ttimestamp\030\244\336\211\347\001 \001(\0132\023."
      "ywrapper.UintValueBF\202AC/probes/probe/tes"
      "ts/test/results/history/items/item/state"
      "/timestamp\032\260\001\n\007ItemKey\022E\n\002id\030\001 \001(\004B9\202A6/"
      "probes/probe/tests/test/results/history/"
      "items/item/id\022^\n\004item\030\002 \001(\0132P.openconfig"
      ".openconfig_probes.Probes.Probe.Tests.Te"
      "st.Results.History.Items.Item\032\255\n\n\005State\022"
      "_\n\tavg_delay\030\326\372\311\276\001 \001(\0132\023.ywrapper.UintVa"
      "lueB3\202A0/probes/probe/tests/test/results"
      "/state/avg-delay\022Y\n\006failed\030\353\315\237\300\001 \001(\0132\023.y"
      "wrapper.BoolValueB0\202A-/probes/probe/test"
      "s/test/results/state/failed\022Y\n\006jitter\030\216\302"
      "\217\324\001 \001(\0132\023.ywrapper.UintValueB0\202A-/probes"
      "/probe/tests/test/results/state/jitter\022r"
      "\n\023last_test_timestamp\030\342\244\323x \001(\0132\023.ywrappe"
      "r.UintValueB=\202A:/probes/probe/tests/test"
      "/results/state/last-test-timestamp\022j\n\017lo"
      "ss_percentage\030\366\247\302\013 \001(\0132\023.ywrapper.UintVa"
      "lueB9\202A6/probes/probe/tests/test/results"
      "/state/loss-percentage\022_\n\tmax_delay\030\330\220\233\261"
      "\001 \001(\0132\023.ywrapper.UintValueB3\202A0/probes/p"
      "robe/tests/test/results/state/max-delay\022"
      "_\n\tmin_delay\030\222\357\357\300\001 \001(\0132\023.ywrapper.UintVa"
      "lueB3\202A0/probes/probe/tests/test/results"
      "/state/min-delay\022j\n\017probes_received\030\377\344\270m"
      " \001(\0132\023.ywrapper.UintValueB9\202A6/probes/pr"
      "obe/tests/test/results/state/probes-rece"
      "ived\022c\n\013probes_sent\030\354\340\356\304\001 \001(\0132\023.ywrapper"
      ".UintValueB5\202A2/probes/probe/tests/test/"
      "results/state/probes-sent\022j\n\017start_times"
      "tamp\030\327\252\266\020 \001(\0132\023.ywrapper.UintValueB9\202A6/"
      "probes/probe/tests/test/results/state/st"
      "art-timestamp\022d\n\014stddev_delay\030\356\372\242\\ \001(\0132\023"
      ".ywrapper.UintValueB6\202A3/probes/probe/te"
      "sts/test/results/state/stddev-delay\022g\n\rt"
      "est_duration\030\211\242\321\230\001 \001(\0132\023.ywrapper.UintVa"
      "lueB7\202A4/probes/probe/tests/test/results"
      "/state/test-duration\022_\n\ttimestamp\030\264\255\230\277\001 "
      "\001(\0132\023.ywrapper.UintValueB3\202A0/probes/pro"
      "be/tests/test/results/state/timestamp\032\242\006"
      "\n\005State\022O\n\005count\030\366\207\310\375\001 \001(\0132\023.ywrapper.Ui"
      "ntValueB\'\202A$/probes/probe/tests/test/sta"
      "te/count\022M\n\004dscp\030\203\374\210\372\001 \001(\0132\023.ywrapper.Ui"
      "ntValueB&\202A#/probes/probe/tests/test/sta"
      "te/dscp\022S\n\007enabled\030\310\215\200\277\001 \001(\0132\023.ywrapper."
      "BoolValueB)\202A&/probes/probe/tests/test/s"
      "tate/enabled\022]\n\014history_size\030\273\307\332\256\001 \001(\0132\023"
      ".ywrapper.UintValueB.\202A+/probes/probe/te"
      "sts/test/state/history-size\022T\n\010interval\030"
      "\316\356\212m \001(\0132\023.ywrapper.UintValueB*\202A\'/probe"
      "s/probe/tests/test/state/interval\022O\n\004nam"
      "e\030\270\205\212\305\001 \001(\0132\025.ywrapper.StringValueB&\202A#/"
      "probes/probe/tests/test/state/name\022S\n\006so"
      "urce\030\222\255\327\235\001 \001(\0132\025.ywrapper.StringValueB(\202"
      "A%/probes/probe/tests/test/state/source\022"
      "Z\n\013source_port\030\266\246\272\017 \001(\0132\023.ywrapper.UintV"
      "alueB-\202A*/probes/probe/tests/test/state/"
      "source-port\022m\n\ttest_type\030\372\337\3169 \001(\0162*.open"
      "config.enums.OpenconfigProbesTestTypeB+\202"
      "A(/probes/probe/tests/test/state/test-ty"
      "pe\032\267\006\n\006Target\022\201\001\n\006config\030\225\211\226C \001(\0132C.open"
      "config.openconfig_probes.Probes.Probe.Te"
      "sts.Test.Target.ConfigB)\202A&/probes/probe"
      "/tests/test/target/config\022~\n\005state\030\212\320\210Y "
      "\001(\0132B.openconfig.openconfig_probes.Probe"
      "s.Probe.Tests.Test.Target.StateB(\202A%/pro"
      "bes/probe/tests/test/target/state\032\225\002\n\006Co"
      "nfig\022]\n\007address\030\300\373\256\270\001 \001(\0132\025.ywrapper.Str"
      "ingValueB1\202A./probes/probe/tests/test/ta"
      "rget/config/address\022U\n\004port\030\231\313\346\374\001 \001(\0132\023."
      "ywrapper.UintValueB.\202A+/probes/probe/tes"
      "ts/test/target/config/port\022U\n\003url\030\253\342\314\344\001 "
      "\001(\0132\025.ywrapper.StringValueB-\202A*/probes/p"
      "robe/tests/test/target/config/url\032\220\002\n\005St"
      "ate\022\\\n\007address\030\353\222\211\207\001 \001(\0132\025.ywrapper.Stri"
      "ngValueB0\202A-/probes/probe/tests/test/tar"
      "get/state/address\022S\n\004port\030\224\337\357  \001(\0132\023.ywr"
      "apper.UintValueB-\202A*/probes/probe/tests/"
      "test/target/state/port\022T\n\003url\030\274\240\250\301\001 \001(\0132"
      "\025.ywrapper.StringValueB,\202A)/probes/probe"
      "/tests/test/target/state/url\032~\n\007TestKey\022"
      ".\n\004name\030\001 \001(\tB \202A\035/probes/probe/tests/te"
      "st/name\022C\n\004test\030\002 \001(\01325.openconfig.openc"
      "onfig_probes.Probes.Probe.Tests.Test\032j\n\010"
      "ProbeKey\022#\n\004name\030\001 \001(\tB\025\202A\022/probes/probe"
      "/name\0229\n\005probe\030\002 \001(\0132*.openconfig.openco"
      "nfig_probes.Probes.Probeb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 8152);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "openconfig/openconfig_probes/openconfig_probes.proto", &protobuf_RegisterTypes);
  ::protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::AddDescriptors();
  ::protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fyext_2fyext_2eproto::AddDescriptors();
  ::protobuf_openconfig_2fenums_2fenums_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto
namespace openconfig {
namespace openconfig_probes {

// ===================================================================

void Probes_Probe_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_probes::_Probes_Probe_Config_default_instance_._instance.get_mutable()->enabled_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Config_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void Probes_Probe_Config::clear_enabled() {
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) {
    delete enabled_;
  }
  enabled_ = NULL;
}
void Probes_Probe_Config::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Probes_Probe_Config::kEnabledFieldNumber;
const int Probes_Probe_Config::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Probes_Probe_Config::Probes_Probe_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_probes.Probes.Probe.Config)
}
Probes_Probe_Config::Probes_Probe_Config(const Probes_Probe_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_enabled()) {
    enabled_ = new ::ywrapper::BoolValue(*from.enabled_);
  } else {
    enabled_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_probes.Probes.Probe.Config)
}

void Probes_Probe_Config::SharedCtor() {
  ::memset(&name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&enabled_) -
      reinterpret_cast<char*>(&name_)) + sizeof(enabled_));
  _cached_size_ = 0;
}

Probes_Probe_Config::~Probes_Probe_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_probes.Probes.Probe.Config)
  SharedDtor();
}

void Probes_Probe_Config::SharedDtor() {
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete enabled_;
}

void Probes_Probe_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Probes_Probe_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Probes_Probe_Config& Probes_Probe_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Config();
  return *internal_default_instance();
}

Probes_Probe_Config* Probes_Probe_Config::New(::google::protobuf::Arena* arena) const {
  Probes_Probe_Config* n = new Probes_Probe_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Probes_Probe_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_probes.Probes.Probe.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) {
    delete enabled_;
  }
  enabled_ = NULL;
  _internal_metadata_.Clear();
}

bool Probes_Probe_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_probes.Probes.Probe.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2394813234u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue name = 252528966 [(.yext.schemapath) = "/probes/probe/config/name"];
      case 252528966: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 2020231730 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue enabled = 299351654 [(.yext.schemapath) = "/probes/probe/config/enabled"];
      case 299351654: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 2394813234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_enabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_probes.Probes.Probe.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_probes.Probes.Probe.Config)
  return false;
#undef DO_
}

void Probes_Probe_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_probes.Probes.Probe.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue name = 252528966 [(.yext.schemapath) = "/probes/probe/config/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      252528966, *this->name_, output);
  }

  // .ywrapper.BoolValue enabled = 299351654 [(.yext.schemapath) = "/probes/probe/config/enabled"];
  if (this->has_enabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      299351654, *this->enabled_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_probes.Probes.Probe.Config)
}

::google::protobuf::uint8* Probes_Probe_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_probes.Probes.Probe.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue name = 252528966 [(.yext.schemapath) = "/probes/probe/config/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        252528966, *this->name_, deterministic, target);
  }

  // .ywrapper.BoolValue enabled = 299351654 [(.yext.schemapath) = "/probes/probe/config/enabled"];
  if (this->has_enabled()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        299351654, *this->enabled_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_probes.Probes.Probe.Config)
  return target;
}

size_t Probes_Probe_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_probes.Probes.Probe.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue name = 252528966 [(.yext.schemapath) = "/probes/probe/config/name"];
  if (this->has_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  // .ywrapper.BoolValue enabled = 299351654 [(.yext.schemapath) = "/probes/probe/config/enabled"];
  if (this->has_enabled()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->enabled_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Probes_Probe_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Probes_Probe_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Probes_Probe_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_probes.Probes.Probe.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_probes.Probes.Probe.Config)
    MergeFrom(*source);
  }
}

void Probes_Probe_Config::MergeFrom(const Probes_Probe_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
  if (from.has_enabled()) {
    mutable_enabled()->::ywrapper::BoolValue::MergeFrom(from.enabled());
  }
}

void Probes_Probe_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Probes_Probe_Config::CopyFrom(const Probes_Probe_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Probes_Probe_Config::IsInitialized() const {
  return true;
}

void Probes_Probe_Config::Swap(Probes_Probe_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Probes_Probe_Config::InternalSwap(Probes_Probe_Config* other) {
  using std::swap;
  swap(name_, other->name_);
  swap(enabled_, other->enabled_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Probes_Probe_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Probes_Probe_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_probes::_Probes_Probe_State_default_instance_._instance.get_mutable()->enabled_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_State_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void Probes_Probe_State::clear_enabled() {
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) {
    delete enabled_;
  }
  enabled_ = NULL;
}
void Probes_Probe_State::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Probes_Probe_State::kEnabledFieldNumber;
const int Probes_Probe_State::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Probes_Probe_State::Probes_Probe_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_probes.Probes.Probe.State)
}
Probes_Probe_State::Probes_Probe_State(const Probes_Probe_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_enabled()) {
    enabled_ = new ::ywrapper::BoolValue(*from.enabled_);
  } else {
    enabled_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_probes.Probes.Probe.State)
}

void Probes_Probe_State::SharedCtor() {
  ::memset(&enabled_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&name_) -
      reinterpret_cast<char*>(&enabled_)) + sizeof(name_));
  _cached_size_ = 0;
}

Probes_Probe_State::~Probes_Probe_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_probes.Probes.Probe.State)
  SharedDtor();
}

void Probes_Probe_State::SharedDtor() {
  if (this != internal_default_instance()) delete enabled_;
  if (this != internal_default_instance()) delete name_;
}

void Probes_Probe_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Probes_Probe_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Probes_Probe_State& Probes_Probe_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_State();
  return *internal_default_instance();
}

Probes_Probe_State* Probes_Probe_State::New(::google::protobuf::Arena* arena) const {
  Probes_Probe_State* n = new Probes_Probe_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Probes_Probe_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_probes.Probes.Probe.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) {
    delete enabled_;
  }
  enabled_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  _internal_metadata_.Clear();
}

bool Probes_Probe_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_probes.Probes.Probe.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(926586314u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.BoolValue enabled = 35574259 [(.yext.schemapath) = "/probes/probe/state/enabled"];
      case 35574259: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 284594074 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_enabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue name = 115823289 [(.yext.schemapath) = "/probes/probe/state/name"];
      case 115823289: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 926586314 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_probes.Probes.Probe.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_probes.Probes.Probe.State)
  return false;
#undef DO_
}

void Probes_Probe_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_probes.Probes.Probe.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.BoolValue enabled = 35574259 [(.yext.schemapath) = "/probes/probe/state/enabled"];
  if (this->has_enabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      35574259, *this->enabled_, output);
  }

  // .ywrapper.StringValue name = 115823289 [(.yext.schemapath) = "/probes/probe/state/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      115823289, *this->name_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_probes.Probes.Probe.State)
}

::google::protobuf::uint8* Probes_Probe_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_probes.Probes.Probe.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.BoolValue enabled = 35574259 [(.yext.schemapath) = "/probes/probe/state/enabled"];
  if (this->has_enabled()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        35574259, *this->enabled_, deterministic, target);
  }

  // .ywrapper.StringValue name = 115823289 [(.yext.schemapath) = "/probes/probe/state/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        115823289, *this->name_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_probes.Probes.Probe.State)
  return target;
}

size_t Probes_Probe_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_probes.Probes.Probe.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.BoolValue enabled = 35574259 [(.yext.schemapath) = "/probes/probe/state/enabled"];
  if (this->has_enabled()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->enabled_);
  }

  // .ywrapper.StringValue name = 115823289 [(.yext.schemapath) = "/probes/probe/state/name"];
  if (this->has_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Probes_Probe_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_probes.Probes.Probe.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Probes_Probe_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Probes_Probe_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_probes.Probes.Probe.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_probes.Probes.Probe.State)
    MergeFrom(*source);
  }
}

void Probes_Probe_State::MergeFrom(const Probes_Probe_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_probes.Probes.Probe.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_enabled()) {
    mutable_enabled()->::ywrapper::BoolValue::MergeFrom(from.enabled());
  }
  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
}

void Probes_Probe_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_probes.Probes.Probe.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Probes_Probe_State::CopyFrom(const Probes_Probe_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_probes.Probes.Probe.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Probes_Probe_State::IsInitialized() const {
  return true;
}

void Probes_Probe_State::Swap(Probes_Probe_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Probes_Probe_State::InternalSwap(Probes_Probe_State* other) {
  using std::swap;
  swap(enabled_, other->enabled_);
  swap(name_, other->name_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Probes_Probe_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Probes_Probe_Tests_Test_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Config_default_instance_._instance.get_mutable()->count_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Config_default_instance_._instance.get_mutable()->dscp_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Config_default_instance_._instance.get_mutable()->enabled_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Config_default_instance_._instance.get_mutable()->history_size_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Config_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Config_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Config_default_instance_._instance.get_mutable()->source_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Config_default_instance_._instance.get_mutable()->source_port_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Probes_Probe_Tests_Test_Config::clear_count() {
  if (GetArenaNoVirtual() == NULL && count_ != NULL) {
    delete count_;
  }
  count_ = NULL;
}
void Probes_Probe_Tests_Test_Config::clear_dscp() {
  if (GetArenaNoVirtual() == NULL && dscp_ != NULL) {
    delete dscp_;
  }
  dscp_ = NULL;
}
void Probes_Probe_Tests_Test_Config::clear_enabled() {
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) {
    delete enabled_;
  }
  enabled_ = NULL;
}
void Probes_Probe_Tests_Test_Config::clear_history_size() {
  if (GetArenaNoVirtual() == NULL && history_size_ != NULL) {
    delete history_size_;
  }
  history_size_ = NULL;
}
void Probes_Probe_Tests_Test_Config::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void Probes_Probe_Tests_Test_Config::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void Probes_Probe_Tests_Test_Config::clear_source() {
  if (GetArenaNoVirtual() == NULL && source_ != NULL) {
    delete source_;
  }
  source_ = NULL;
}
void Probes_Probe_Tests_Test_Config::clear_source_port() {
  if (GetArenaNoVirtual() == NULL && source_port_ != NULL) {
    delete source_port_;
  }
  source_port_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Probes_Probe_Tests_Test_Config::kCountFieldNumber;
const int Probes_Probe_Tests_Test_Config::kDscpFieldNumber;
const int Probes_Probe_Tests_Test_Config::kEnabledFieldNumber;
const int Probes_Probe_Tests_Test_Config::kHistorySizeFieldNumber;
const int Probes_Probe_Tests_Test_Config::kIntervalFieldNumber;
const int Probes_Probe_Tests_Test_Config::kNameFieldNumber;
const int Probes_Probe_Tests_Test_Config::kSourceFieldNumber;
const int Probes_Probe_Tests_Test_Config::kSourcePortFieldNumber;
const int Probes_Probe_Tests_Test_Config::kTestTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Probes_Probe_Tests_Test_Config::Probes_Probe_Tests_Test_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config)
}
Probes_Probe_Tests_Test_Config::Probes_Probe_Tests_Test_Config(const Probes_Probe_Tests_Test_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_source()) {
    source_ = new ::ywrapper::StringValue(*from.source_);
  } else {
    source_ = NULL;
  }
  if (from.has_history_size()) {
    history_size_ = new ::ywrapper::UintValue(*from.history_size_);
  } else {
    history_size_ = NULL;
  }
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_count()) {
    count_ = new ::ywrapper::UintValue(*from.count_);
  } else {
    count_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_dscp()) {
    dscp_ = new ::ywrapper::UintValue(*from.dscp_);
  } else {
    dscp_ = NULL;
  }
  if (from.has_source_port()) {
    source_port_ = new ::ywrapper::UintValue(*from.source_port_);
  } else {
    source_port_ = NULL;
  }
  if (from.has_enabled()) {
    enabled_ = new ::ywrapper::BoolValue(*from.enabled_);
  } else {
    enabled_ = NULL;
  }
  test_type_ = from.test_type_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config)
}

void Probes_Probe_Tests_Test_Config::SharedCtor() {
  ::memset(&source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&test_type_) -
      reinterpret_cast<char*>(&source_)) + sizeof(test_type_));
  _cached_size_ = 0;
}

Probes_Probe_Tests_Test_Config::~Probes_Probe_Tests_Test_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config)
  SharedDtor();
}

void Probes_Probe_Tests_Test_Config::SharedDtor() {
  if (this != internal_default_instance()) delete source_;
  if (this != internal_default_instance()) delete history_size_;
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete count_;
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete dscp_;
  if (this != internal_default_instance()) delete source_port_;
  if (this != internal_default_instance()) delete enabled_;
}

void Probes_Probe_Tests_Test_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Probes_Probe_Tests_Test_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Probes_Probe_Tests_Test_Config& Probes_Probe_Tests_Test_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Config();
  return *internal_default_instance();
}

Probes_Probe_Tests_Test_Config* Probes_Probe_Tests_Test_Config::New(::google::protobuf::Arena* arena) const {
  Probes_Probe_Tests_Test_Config* n = new Probes_Probe_Tests_Test_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Probes_Probe_Tests_Test_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && source_ != NULL) {
    delete source_;
  }
  source_ = NULL;
  if (GetArenaNoVirtual() == NULL && history_size_ != NULL) {
    delete history_size_;
  }
  history_size_ = NULL;
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && count_ != NULL) {
    delete count_;
  }
  count_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && dscp_ != NULL) {
    delete dscp_;
  }
  dscp_ = NULL;
  if (GetArenaNoVirtual() == NULL && source_port_ != NULL) {
    delete source_port_;
  }
  source_port_ = NULL;
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) {
    delete enabled_;
  }
  enabled_ = NULL;
  test_type_ = 0;
  _internal_metadata_.Clear();
}

bool Probes_Probe_Tests_Test_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3624003802u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue source = 17077703 [(.yext.schemapath) = "/probes/probe/tests/test/config/source"];
      case 17077703: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 136621626 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue history_size = 60923906 [(.yext.schemapath) = "/probes/probe/tests/test/config/history-size"];
      case 60923906: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 487391250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_history_size()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue interval = 65230595 [(.yext.schemapath) = "/probes/probe/tests/test/config/interval"];
      case 65230595: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 521844762 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue count = 208592917 [(.yext.schemapath) = "/probes/probe/tests/test/config/count"];
      case 208592917: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 1668743338 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_count()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue name = 225036113 [(.yext.schemapath) = "/probes/probe/tests/test/config/name"];
      case 225036113: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 1800288906 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue dscp = 425022362 [(.yext.schemapath) = "/probes/probe/tests/test/config/dscp"];
      case 425022362: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 3400178898 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dscp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigProbesTestType test_type = 426757249 [(.yext.schemapath) = "/probes/probe/tests/test/config/test-type"];
      case 426757249: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 3414057992 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_test_type(static_cast< ::openconfig::enums::OpenconfigProbesTestType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue source_port = 452973905 [(.yext.schemapath) = "/probes/probe/tests/test/config/source-port"];
      case 452973905: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 3623791242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_port()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue enabled = 453000475 [(.yext.schemapath) = "/probes/probe/tests/test/config/enabled"];
      case 453000475: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 3624003802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_enabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config)
  return false;
#undef DO_
}

void Probes_Probe_Tests_Test_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue source = 17077703 [(.yext.schemapath) = "/probes/probe/tests/test/config/source"];
  if (this->has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17077703, *this->source_, output);
  }

  // .ywrapper.UintValue history_size = 60923906 [(.yext.schemapath) = "/probes/probe/tests/test/config/history-size"];
  if (this->has_history_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      60923906, *this->history_size_, output);
  }

  // .ywrapper.UintValue interval = 65230595 [(.yext.schemapath) = "/probes/probe/tests/test/config/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      65230595, *this->interval_, output);
  }

  // .ywrapper.UintValue count = 208592917 [(.yext.schemapath) = "/probes/probe/tests/test/config/count"];
  if (this->has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      208592917, *this->count_, output);
  }

  // .ywrapper.StringValue name = 225036113 [(.yext.schemapath) = "/probes/probe/tests/test/config/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      225036113, *this->name_, output);
  }

  // .ywrapper.UintValue dscp = 425022362 [(.yext.schemapath) = "/probes/probe/tests/test/config/dscp"];
  if (this->has_dscp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      425022362, *this->dscp_, output);
  }

  // .openconfig.enums.OpenconfigProbesTestType test_type = 426757249 [(.yext.schemapath) = "/probes/probe/tests/test/config/test-type"];
  if (this->test_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      426757249, this->test_type(), output);
  }

  // .ywrapper.UintValue source_port = 452973905 [(.yext.schemapath) = "/probes/probe/tests/test/config/source-port"];
  if (this->has_source_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      452973905, *this->source_port_, output);
  }

  // .ywrapper.BoolValue enabled = 453000475 [(.yext.schemapath) = "/probes/probe/tests/test/config/enabled"];
  if (this->has_enabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      453000475, *this->enabled_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config)
}

::google::protobuf::uint8* Probes_Probe_Tests_Test_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue source = 17077703 [(.yext.schemapath) = "/probes/probe/tests/test/config/source"];
  if (this->has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17077703, *this->source_, deterministic, target);
  }

  // .ywrapper.UintValue history_size = 60923906 [(.yext.schemapath) = "/probes/probe/tests/test/config/history-size"];
  if (this->has_history_size()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        60923906, *this->history_size_, deterministic, target);
  }

  // .ywrapper.UintValue interval = 65230595 [(.yext.schemapath) = "/probes/probe/tests/test/config/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        65230595, *this->interval_, deterministic, target);
  }

  // .ywrapper.UintValue count = 208592917 [(.yext.schemapath) = "/probes/probe/tests/test/config/count"];
  if (this->has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        208592917, *this->count_, deterministic, target);
  }

  // .ywrapper.StringValue name = 225036113 [(.yext.schemapath) = "/probes/probe/tests/test/config/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        225036113, *this->name_, deterministic, target);
  }

  // .ywrapper.UintValue dscp = 425022362 [(.yext.schemapath) = "/probes/probe/tests/test/config/dscp"];
  if (this->has_dscp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        425022362, *this->dscp_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigProbesTestType test_type = 426757249 [(.yext.schemapath) = "/probes/probe/tests/test/config/test-type"];
  if (this->test_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      426757249, this->test_type(), target);
  }

  // .ywrapper.UintValue source_port = 452973905 [(.yext.schemapath) = "/probes/probe/tests/test/config/source-port"];
  if (this->has_source_port()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        452973905, *this->source_port_, deterministic, target);
  }

  // .ywrapper.BoolValue enabled = 453000475 [(.yext.schemapath) = "/probes/probe/tests/test/config/enabled"];
  if (this->has_enabled()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        453000475, *this->enabled_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config)
  return target;
}

size_t Probes_Probe_Tests_Test_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue source = 17077703 [(.yext.schemapath) = "/probes/probe/tests/test/config/source"];
  if (this->has_source()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->source_);
  }

  // .ywrapper.UintValue history_size = 60923906 [(.yext.schemapath) = "/probes/probe/tests/test/config/history-size"];
  if (this->has_history_size()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->history_size_);
  }

  // .ywrapper.UintValue interval = 65230595 [(.yext.schemapath) = "/probes/probe/tests/test/config/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.UintValue count = 208592917 [(.yext.schemapath) = "/probes/probe/tests/test/config/count"];
  if (this->has_count()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->count_);
  }

  // .ywrapper.StringValue name = 225036113 [(.yext.schemapath) = "/probes/probe/tests/test/config/name"];
  if (this->has_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  // .ywrapper.UintValue dscp = 425022362 [(.yext.schemapath) = "/probes/probe/tests/test/config/dscp"];
  if (this->has_dscp()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->dscp_);
  }

  // .ywrapper.UintValue source_port = 452973905 [(.yext.schemapath) = "/probes/probe/tests/test/config/source-port"];
  if (this->has_source_port()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->source_port_);
  }

  // .ywrapper.BoolValue enabled = 453000475 [(.yext.schemapath) = "/probes/probe/tests/test/config/enabled"];
  if (this->has_enabled()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->enabled_);
  }

  // .openconfig.enums.OpenconfigProbesTestType test_type = 426757249 [(.yext.schemapath) = "/probes/probe/tests/test/config/test-type"];
  if (this->test_type() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->test_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Probes_Probe_Tests_Test_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Probes_Probe_Tests_Test_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Probes_Probe_Tests_Test_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config)
    MergeFrom(*source);
  }
}

void Probes_Probe_Tests_Test_Config::MergeFrom(const Probes_Probe_Tests_Test_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_source()) {
    mutable_source()->::ywrapper::StringValue::MergeFrom(from.source());
  }
  if (from.has_history_size()) {
    mutable_history_size()->::ywrapper::UintValue::MergeFrom(from.history_size());
  }
  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_count()) {
    mutable_count()->::ywrapper::UintValue::MergeFrom(from.count());
  }
  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
  if (from.has_dscp()) {
    mutable_dscp()->::ywrapper::UintValue::MergeFrom(from.dscp());
  }
  if (from.has_source_port()) {
    mutable_source_port()->::ywrapper::UintValue::MergeFrom(from.source_port());
  }
  if (from.has_enabled()) {
    mutable_enabled()->::ywrapper::BoolValue::MergeFrom(from.enabled());
  }
  if (from.test_type() != 0) {
    set_test_type(from.test_type());
  }
}

void Probes_Probe_Tests_Test_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Probes_Probe_Tests_Test_Config::CopyFrom(const Probes_Probe_Tests_Test_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Probes_Probe_Tests_Test_Config::IsInitialized() const {
  return true;
}

void Probes_Probe_Tests_Test_Config::Swap(Probes_Probe_Tests_Test_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Probes_Probe_Tests_Test_Config::InternalSwap(Probes_Probe_Tests_Test_Config* other) {
  using std::swap;
  swap(source_, other->source_);
  swap(history_size_, other->history_size_);
  swap(interval_, other->interval_);
  swap(count_, other->count_);
  swap(name_, other->name_);
  swap(dscp_, other->dscp_);
  swap(source_port_, other->source_port_);
  swap(enabled_, other->enabled_);
  swap(test_type_, other->test_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Probes_Probe_Tests_Test_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Probes_Probe_Tests_Test_Results_History_Items_Item_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_Items_Item_State_default_instance_._instance.get_mutable()->avg_delay_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_Items_Item_State_default_instance_._instance.get_mutable()->end_timestamp_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_Items_Item_State_default_instance_._instance.get_mutable()->failed_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_Items_Item_State_default_instance_._instance.get_mutable()->id_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_Items_Item_State_default_instance_._instance.get_mutable()->jitter_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_Items_Item_State_default_instance_._instance.get_mutable()->loss_percentage_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_Items_Item_State_default_instance_._instance.get_mutable()->max_delay_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_Items_Item_State_default_instance_._instance.get_mutable()->min_delay_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_Items_Item_State_default_instance_._instance.get_mutable()->probes_received_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_Items_Item_State_default_instance_._instance.get_mutable()->probes_sent_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_Items_Item_State_default_instance_._instance.get_mutable()->start_timestamp_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_Items_Item_State_default_instance_._instance.get_mutable()->stddev_delay_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_Items_Item_State_default_instance_._instance.get_mutable()->test_duration_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_Items_Item_State_default_instance_._instance.get_mutable()->timestamp_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Probes_Probe_Tests_Test_Results_History_Items_Item_State::clear_avg_delay() {
  if (GetArenaNoVirtual() == NULL && avg_delay_ != NULL) {
    delete avg_delay_;
  }
  avg_delay_ = NULL;
}
void Probes_Probe_Tests_Test_Results_History_Items_Item_State::clear_end_timestamp() {
  if (GetArenaNoVirtual() == NULL && end_timestamp_ != NULL) {
    delete end_timestamp_;
  }
  end_timestamp_ = NULL;
}
void Probes_Probe_Tests_Test_Results_History_Items_Item_State::clear_failed() {
  if (GetArenaNoVirtual() == NULL && failed_ != NULL) {
    delete failed_;
  }
  failed_ = NULL;
}
void Probes_Probe_Tests_Test_Results_History_Items_Item_State::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
void Probes_Probe_Tests_Test_Results_History_Items_Item_State::clear_jitter() {
  if (GetArenaNoVirtual() == NULL && jitter_ != NULL) {
    delete jitter_;
  }
  jitter_ = NULL;
}
void Probes_Probe_Tests_Test_Results_History_Items_Item_State::clear_loss_percentage() {
  if (GetArenaNoVirtual() == NULL && loss_percentage_ != NULL) {
    delete loss_percentage_;
  }
  loss_percentage_ = NULL;
}
void Probes_Probe_Tests_Test_Results_History_Items_Item_State::clear_max_delay() {
  if (GetArenaNoVirtual() == NULL && max_delay_ != NULL) {
    delete max_delay_;
  }
  max_delay_ = NULL;
}
void Probes_Probe_Tests_Test_Results_History_Items_Item_State::clear_min_delay() {
  if (GetArenaNoVirtual() == NULL && min_delay_ != NULL) {
    delete min_delay_;
  }
  min_delay_ = NULL;
}
void Probes_Probe_Tests_Test_Results_History_Items_Item_State::clear_probes_received() {
  if (GetArenaNoVirtual() == NULL && probes_received_ != NULL) {
    delete probes_received_;
  }
  probes_received_ = NULL;
}
void Probes_Probe_Tests_Test_Results_History_Items_Item_State::clear_probes_sent() {
  if (GetArenaNoVirtual() == NULL && probes_sent_ != NULL) {
    delete probes_sent_;
  }
  probes_sent_ = NULL;
}
void Probes_Probe_Tests_Test_Results_History_Items_Item_State::clear_start_timestamp() {
  if (GetArenaNoVirtual() == NULL && start_timestamp_ != NULL) {
    delete start_timestamp_;
  }
  start_timestamp_ = NULL;
}
void Probes_Probe_Tests_Test_Results_History_Items_Item_State::clear_stddev_delay() {
  if (GetArenaNoVirtual() == NULL && stddev_delay_ != NULL) {
    delete stddev_delay_;
  }
  stddev_delay_ = NULL;
}
void Probes_Probe_Tests_Test_Results_History_Items_Item_State::clear_test_duration() {
  if (GetArenaNoVirtual() == NULL && test_duration_ != NULL) {
    delete test_duration_;
  }
  test_duration_ = NULL;
}
void Probes_Probe_Tests_Test_Results_History_Items_Item_State::clear_timestamp() {
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Probes_Probe_Tests_Test_Results_History_Items_Item_State::kAvgDelayFieldNumber;
const int Probes_Probe_Tests_Test_Results_History_Items_Item_State::kEndTimestampFieldNumber;
const int Probes_Probe_Tests_Test_Results_History_Items_Item_State::kFailedFieldNumber;
const int Probes_Probe_Tests_Test_Results_History_Items_Item_State::kIdFieldNumber;
const int Probes_Probe_Tests_Test_Results_History_Items_Item_State::kJitterFieldNumber;
const int Probes_Probe_Tests_Test_Results_History_Items_Item_State::kLossPercentageFieldNumber;
const int Probes_Probe_Tests_Test_Results_History_Items_Item_State::kMaxDelayFieldNumber;
const int Probes_Probe_Tests_Test_Results_History_Items_Item_State::kMinDelayFieldNumber;
const int Probes_Probe_Tests_Test_Results_History_Items_Item_State::kProbesReceivedFieldNumber;
const int Probes_Probe_Tests_Test_Results_History_Items_Item_State::kProbesSentFieldNumber;
const int Probes_Probe_Tests_Test_Results_History_Items_Item_State::kStartTimestampFieldNumber;
const int Probes_Probe_Tests_Test_Results_History_Items_Item_State::kStddevDelayFieldNumber;
const int Probes_Probe_Tests_Test_Results_History_Items_Item_State::kTestDurationFieldNumber;
const int Probes_Probe_Tests_Test_Results_History_Items_Item_State::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Probes_Probe_Tests_Test_Results_History_Items_Item_State::Probes_Probe_Tests_Test_Results_History_Items_Item_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_Item_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State)
}
Probes_Probe_Tests_Test_Results_History_Items_Item_State::Probes_Probe_Tests_Test_Results_History_Items_Item_State(const Probes_Probe_Tests_Test_Results_History_Items_Item_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_avg_delay()) {
    avg_delay_ = new ::ywrapper::UintValue(*from.avg_delay_);
  } else {
    avg_delay_ = NULL;
  }
  if (from.has_failed()) {
    failed_ = new ::ywrapper::BoolValue(*from.failed_);
  } else {
    failed_ = NULL;
  }
  if (from.has_jitter()) {
    jitter_ = new ::ywrapper::UintValue(*from.jitter_);
  } else {
    jitter_ = NULL;
  }
  if (from.has_loss_percentage()) {
    loss_percentage_ = new ::ywrapper::UintValue(*from.loss_percentage_);
  } else {
    loss_percentage_ = NULL;
  }
  if (from.has_end_timestamp()) {
    end_timestamp_ = new ::ywrapper::UintValue(*from.end_timestamp_);
  } else {
    end_timestamp_ = NULL;
  }
  if (from.has_id()) {
    id_ = new ::ywrapper::UintValue(*from.id_);
  } else {
    id_ = NULL;
  }
  if (from.has_stddev_delay()) {
    stddev_delay_ = new ::ywrapper::UintValue(*from.stddev_delay_);
  } else {
    stddev_delay_ = NULL;
  }
  if (from.has_max_delay()) {
    max_delay_ = new ::ywrapper::UintValue(*from.max_delay_);
  } else {
    max_delay_ = NULL;
  }
  if (from.has_min_delay()) {
    min_delay_ = new ::ywrapper::UintValue(*from.min_delay_);
  } else {
    min_delay_ = NULL;
  }
  if (from.has_probes_sent()) {
    probes_sent_ = new ::ywrapper::UintValue(*from.probes_sent_);
  } else {
    probes_sent_ = NULL;
  }
  if (from.has_probes_received()) {
    probes_received_ = new ::ywrapper::UintValue(*from.probes_received_);
  } else {
    probes_received_ = NULL;
  }
  if (from.has_start_timestamp()) {
    start_timestamp_ = new ::ywrapper::UintValue(*from.start_timestamp_);
  } else {
    start_timestamp_ = NULL;
  }
  if (from.has_timestamp()) {
    timestamp_ = new ::ywrapper::UintValue(*from.timestamp_);
  } else {
    timestamp_ = NULL;
  }
  if (from.has_test_duration()) {
    test_duration_ = new ::ywrapper::UintValue(*from.test_duration_);
  } else {
    test_duration_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State)
}

void Probes_Probe_Tests_Test_Results_History_Items_Item_State::SharedCtor() {
  ::memset(&avg_delay_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&test_duration_) -
      reinterpret_cast<char*>(&avg_delay_)) + sizeof(test_duration_));
  _cached_size_ = 0;
}

Probes_Probe_Tests_Test_Results_History_Items_Item_State::~Probes_Probe_Tests_Test_Results_History_Items_Item_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State)
  SharedDtor();
}

void Probes_Probe_Tests_Test_Results_History_Items_Item_State::SharedDtor() {
  if (this != internal_default_instance()) delete avg_delay_;
  if (this != internal_default_instance()) delete failed_;
  if (this != internal_default_instance()) delete jitter_;
  if (this != internal_default_instance()) delete loss_percentage_;
  if (this != internal_default_instance()) delete end_timestamp_;
  if (this != internal_default_instance()) delete id_;
  if (this != internal_default_instance()) delete stddev_delay_;
  if (this != internal_default_instance()) delete max_delay_;
  if (this != internal_default_instance()) delete min_delay_;
  if (this != internal_default_instance()) delete probes_sent_;
  if (this != internal_default_instance()) delete probes_received_;
  if (this != internal_default_instance()) delete start_timestamp_;
  if (this != internal_default_instance()) delete timestamp_;
  if (this != internal_default_instance()) delete test_duration_;
}

void Probes_Probe_Tests_Test_Results_History_Items_Item_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Probes_Probe_Tests_Test_Results_History_Items_Item_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Probes_Probe_Tests_Test_Results_History_Items_Item_State& Probes_Probe_Tests_Test_Results_History_Items_Item_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_Item_State();
  return *internal_default_instance();
}

Probes_Probe_Tests_Test_Results_History_Items_Item_State* Probes_Probe_Tests_Test_Results_History_Items_Item_State::New(::google::protobuf::Arena* arena) const {
  Probes_Probe_Tests_Test_Results_History_Items_Item_State* n = new Probes_Probe_Tests_Test_Results_History_Items_Item_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Probes_Probe_Tests_Test_Results_History_Items_Item_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && avg_delay_ != NULL) {
    delete avg_delay_;
  }
  avg_delay_ = NULL;
  if (GetArenaNoVirtual() == NULL && failed_ != NULL) {
    delete failed_;
  }
  failed_ = NULL;
  if (GetArenaNoVirtual() == NULL && jitter_ != NULL) {
    delete jitter_;
  }
  jitter_ = NULL;
  if (GetArenaNoVirtual() == NULL && loss_percentage_ != NULL) {
    delete loss_percentage_;
  }
  loss_percentage_ = NULL;
  if (GetArenaNoVirtual() == NULL && end_timestamp_ != NULL) {
    delete end_timestamp_;
  }
  end_timestamp_ = NULL;
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  if (GetArenaNoVirtual() == NULL && stddev_delay_ != NULL) {
    delete stddev_delay_;
  }
  stddev_delay_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_delay_ != NULL) {
    delete max_delay_;
  }
  max_delay_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_delay_ != NULL) {
    delete min_delay_;
  }
  min_delay_ = NULL;
  if (GetArenaNoVirtual() == NULL && probes_sent_ != NULL) {
    delete probes_sent_;
  }
  probes_sent_ = NULL;
  if (GetArenaNoVirtual() == NULL && probes_received_ != NULL) {
    delete probes_received_;
  }
  probes_received_ = NULL;
  if (GetArenaNoVirtual() == NULL && start_timestamp_ != NULL) {
    delete start_timestamp_;
  }
  start_timestamp_ = NULL;
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
  if (GetArenaNoVirtual() == NULL && test_duration_ != NULL) {
    delete test_duration_;
  }
  test_duration_ = NULL;
  _internal_metadata_.Clear();
}

bool Probes_Probe_Tests_Test_Results_History_Items_Item_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4111853002u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue avg_delay = 63138246 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/avg-delay"];
      case 63138246: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 505105970 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg_delay()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue failed = 73841595 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/failed"];
      case 73841595: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 590732762 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_failed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue jitter = 78107006 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/jitter"];
      case 78107006: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 624856050 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_jitter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue loss_percentage = 85882566 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/loss-percentage"];
      case 85882566: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 687060530 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_loss_percentage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue end_timestamp = 87224044 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/end-timestamp"];
      case 87224044: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 697792354 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_end_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue id = 112866779 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/id"];
      case 112866779: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 902934234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue stddev_delay = 175052734 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/stddev-delay"];
      case 175052734: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 1400421874 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stddev_delay()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue max_delay = 294119624 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/max-delay"];
      case 294119624: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 2352956994 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_delay()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue min_delay = 301035426 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/min-delay"];
      case 301035426: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 2408283410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min_delay()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue probes_sent = 335798140 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/probes-sent"];
      case 335798140: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 2686385122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_probes_sent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue probes_received = 418621199 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/probes-received"];
      case 418621199: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 3348969594 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_probes_received()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue start_timestamp = 437505415 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/start-timestamp"];
      case 437505415: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 3500043322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue timestamp = 484601636 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/timestamp"];
      case 484601636: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 3876813090 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue test_duration = 513981625 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/test-duration"];
      case 513981625: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 4111853002 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_test_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State)
  return false;
#undef DO_
}

void Probes_Probe_Tests_Test_Results_History_Items_Item_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue avg_delay = 63138246 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/avg-delay"];
  if (this->has_avg_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      63138246, *this->avg_delay_, output);
  }

  // .ywrapper.BoolValue failed = 73841595 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/failed"];
  if (this->has_failed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      73841595, *this->failed_, output);
  }

  // .ywrapper.UintValue jitter = 78107006 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/jitter"];
  if (this->has_jitter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      78107006, *this->jitter_, output);
  }

  // .ywrapper.UintValue loss_percentage = 85882566 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/loss-percentage"];
  if (this->has_loss_percentage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      85882566, *this->loss_percentage_, output);
  }

  // .ywrapper.UintValue end_timestamp = 87224044 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/end-timestamp"];
  if (this->has_end_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      87224044, *this->end_timestamp_, output);
  }

  // .ywrapper.UintValue id = 112866779 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/id"];
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      112866779, *this->id_, output);
  }

  // .ywrapper.UintValue stddev_delay = 175052734 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/stddev-delay"];
  if (this->has_stddev_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      175052734, *this->stddev_delay_, output);
  }

  // .ywrapper.UintValue max_delay = 294119624 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/max-delay"];
  if (this->has_max_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      294119624, *this->max_delay_, output);
  }

  // .ywrapper.UintValue min_delay = 301035426 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/min-delay"];
  if (this->has_min_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      301035426, *this->min_delay_, output);
  }

  // .ywrapper.UintValue probes_sent = 335798140 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/probes-sent"];
  if (this->has_probes_sent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      335798140, *this->probes_sent_, output);
  }

  // .ywrapper.UintValue probes_received = 418621199 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/probes-received"];
  if (this->has_probes_received()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      418621199, *this->probes_received_, output);
  }

  // .ywrapper.UintValue start_timestamp = 437505415 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/start-timestamp"];
  if (this->has_start_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      437505415, *this->start_timestamp_, output);
  }

  // .ywrapper.UintValue timestamp = 484601636 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/timestamp"];
  if (this->has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      484601636, *this->timestamp_, output);
  }

  // .ywrapper.UintValue test_duration = 513981625 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/test-duration"];
  if (this->has_test_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      513981625, *this->test_duration_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State)
}

::google::protobuf::uint8* Probes_Probe_Tests_Test_Results_History_Items_Item_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue avg_delay = 63138246 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/avg-delay"];
  if (this->has_avg_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        63138246, *this->avg_delay_, deterministic, target);
  }

  // .ywrapper.BoolValue failed = 73841595 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/failed"];
  if (this->has_failed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        73841595, *this->failed_, deterministic, target);
  }

  // .ywrapper.UintValue jitter = 78107006 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/jitter"];
  if (this->has_jitter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        78107006, *this->jitter_, deterministic, target);
  }

  // .ywrapper.UintValue loss_percentage = 85882566 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/loss-percentage"];
  if (this->has_loss_percentage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        85882566, *this->loss_percentage_, deterministic, target);
  }

  // .ywrapper.UintValue end_timestamp = 87224044 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/end-timestamp"];
  if (this->has_end_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        87224044, *this->end_timestamp_, deterministic, target);
  }

  // .ywrapper.UintValue id = 112866779 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/id"];
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        112866779, *this->id_, deterministic, target);
  }

  // .ywrapper.UintValue stddev_delay = 175052734 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/stddev-delay"];
  if (this->has_stddev_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        175052734, *this->stddev_delay_, deterministic, target);
  }

  // .ywrapper.UintValue max_delay = 294119624 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/max-delay"];
  if (this->has_max_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        294119624, *this->max_delay_, deterministic, target);
  }

  // .ywrapper.UintValue min_delay = 301035426 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/min-delay"];
  if (this->has_min_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        301035426, *this->min_delay_, deterministic, target);
  }

  // .ywrapper.UintValue probes_sent = 335798140 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/probes-sent"];
  if (this->has_probes_sent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        335798140, *this->probes_sent_, deterministic, target);
  }

  // .ywrapper.UintValue probes_received = 418621199 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/probes-received"];
  if (this->has_probes_received()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        418621199, *this->probes_received_, deterministic, target);
  }

  // .ywrapper.UintValue start_timestamp = 437505415 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/start-timestamp"];
  if (this->has_start_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        437505415, *this->start_timestamp_, deterministic, target);
  }

  // .ywrapper.UintValue timestamp = 484601636 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/timestamp"];
  if (this->has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        484601636, *this->timestamp_, deterministic, target);
  }

  // .ywrapper.UintValue test_duration = 513981625 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/test-duration"];
  if (this->has_test_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        513981625, *this->test_duration_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State)
  return target;
}

size_t Probes_Probe_Tests_Test_Results_History_Items_Item_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue avg_delay = 63138246 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/avg-delay"];
  if (this->has_avg_delay()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_delay_);
  }

  // .ywrapper.BoolValue failed = 73841595 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/failed"];
  if (this->has_failed()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->failed_);
  }

  // .ywrapper.UintValue jitter = 78107006 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/jitter"];
  if (this->has_jitter()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->jitter_);
  }

  // .ywrapper.UintValue loss_percentage = 85882566 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/loss-percentage"];
  if (this->has_loss_percentage()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->loss_percentage_);
  }

  // .ywrapper.UintValue end_timestamp = 87224044 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/end-timestamp"];
  if (this->has_end_timestamp()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->end_timestamp_);
  }

  // .ywrapper.UintValue id = 112866779 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/id"];
  if (this->has_id()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->id_);
  }

  // .ywrapper.UintValue stddev_delay = 175052734 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/stddev-delay"];
  if (this->has_stddev_delay()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->stddev_delay_);
  }

  // .ywrapper.UintValue max_delay = 294119624 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/max-delay"];
  if (this->has_max_delay()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_delay_);
  }

  // .ywrapper.UintValue min_delay = 301035426 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/min-delay"];
  if (this->has_min_delay()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_delay_);
  }

  // .ywrapper.UintValue probes_sent = 335798140 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/probes-sent"];
  if (this->has_probes_sent()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->probes_sent_);
  }

  // .ywrapper.UintValue probes_received = 418621199 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/probes-received"];
  if (this->has_probes_received()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->probes_received_);
  }

  // .ywrapper.UintValue start_timestamp = 437505415 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/start-timestamp"];
  if (this->has_start_timestamp()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->start_timestamp_);
  }

  // .ywrapper.UintValue timestamp = 484601636 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/timestamp"];
  if (this->has_timestamp()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->timestamp_);
  }

  // .ywrapper.UintValue test_duration = 513981625 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state/test-duration"];
  if (this->has_test_duration()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->test_duration_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Probes_Probe_Tests_Test_Results_History_Items_Item_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Probes_Probe_Tests_Test_Results_History_Items_Item_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Probes_Probe_Tests_Test_Results_History_Items_Item_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State)
    MergeFrom(*source);
  }
}

void Probes_Probe_Tests_Test_Results_History_Items_Item_State::MergeFrom(const Probes_Probe_Tests_Test_Results_History_Items_Item_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_avg_delay()) {
    mutable_avg_delay()->::ywrapper::UintValue::MergeFrom(from.avg_delay());
  }
  if (from.has_failed()) {
    mutable_failed()->::ywrapper::BoolValue::MergeFrom(from.failed());
  }
  if (from.has_jitter()) {
    mutable_jitter()->::ywrapper::UintValue::MergeFrom(from.jitter());
  }
  if (from.has_loss_percentage()) {
    mutable_loss_percentage()->::ywrapper::UintValue::MergeFrom(from.loss_percentage());
  }
  if (from.has_end_timestamp()) {
    mutable_end_timestamp()->::ywrapper::UintValue::MergeFrom(from.end_timestamp());
  }
  if (from.has_id()) {
    mutable_id()->::ywrapper::UintValue::MergeFrom(from.id());
  }
  if (from.has_stddev_delay()) {
    mutable_stddev_delay()->::ywrapper::UintValue::MergeFrom(from.stddev_delay());
  }
  if (from.has_max_delay()) {
    mutable_max_delay()->::ywrapper::UintValue::MergeFrom(from.max_delay());
  }
  if (from.has_min_delay()) {
    mutable_min_delay()->::ywrapper::UintValue::MergeFrom(from.min_delay());
  }
  if (from.has_probes_sent()) {
    mutable_probes_sent()->::ywrapper::UintValue::MergeFrom(from.probes_sent());
  }
  if (from.has_probes_received()) {
    mutable_probes_received()->::ywrapper::UintValue::MergeFrom(from.probes_received());
  }
  if (from.has_start_timestamp()) {
    mutable_start_timestamp()->::ywrapper::UintValue::MergeFrom(from.start_timestamp());
  }
  if (from.has_timestamp()) {
    mutable_timestamp()->::ywrapper::UintValue::MergeFrom(from.timestamp());
  }
  if (from.has_test_duration()) {
    mutable_test_duration()->::ywrapper::UintValue::MergeFrom(from.test_duration());
  }
}

void Probes_Probe_Tests_Test_Results_History_Items_Item_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Probes_Probe_Tests_Test_Results_History_Items_Item_State::CopyFrom(const Probes_Probe_Tests_Test_Results_History_Items_Item_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Probes_Probe_Tests_Test_Results_History_Items_Item_State::IsInitialized() const {
  return true;
}

void Probes_Probe_Tests_Test_Results_History_Items_Item_State::Swap(Probes_Probe_Tests_Test_Results_History_Items_Item_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Probes_Probe_Tests_Test_Results_History_Items_Item_State::InternalSwap(Probes_Probe_Tests_Test_Results_History_Items_Item_State* other) {
  using std::swap;
  swap(avg_delay_, other->avg_delay_);
  swap(failed_, other->failed_);
  swap(jitter_, other->jitter_);
  swap(loss_percentage_, other->loss_percentage_);
  swap(end_timestamp_, other->end_timestamp_);
  swap(id_, other->id_);
  swap(stddev_delay_, other->stddev_delay_);
  swap(max_delay_, other->max_delay_);
  swap(min_delay_, other->min_delay_);
  swap(probes_sent_, other->probes_sent_);
  swap(probes_received_, other->probes_received_);
  swap(start_timestamp_, other->start_timestamp_);
  swap(timestamp_, other->timestamp_);
  swap(test_duration_, other->test_duration_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Probes_Probe_Tests_Test_Results_History_Items_Item_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Probes_Probe_Tests_Test_Results_History_Items_Item::InitAsDefaultInstance() {
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_Items_Item_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State*>(
      ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Probes_Probe_Tests_Test_Results_History_Items_Item::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Probes_Probe_Tests_Test_Results_History_Items_Item::Probes_Probe_Tests_Test_Results_History_Items_Item()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_Item();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item)
}
Probes_Probe_Tests_Test_Results_History_Items_Item::Probes_Probe_Tests_Test_Results_History_Items_Item(const Probes_Probe_Tests_Test_Results_History_Items_Item& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item)
}

void Probes_Probe_Tests_Test_Results_History_Items_Item::SharedCtor() {
  state_ = NULL;
  _cached_size_ = 0;
}

Probes_Probe_Tests_Test_Results_History_Items_Item::~Probes_Probe_Tests_Test_Results_History_Items_Item() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item)
  SharedDtor();
}

void Probes_Probe_Tests_Test_Results_History_Items_Item::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
}

void Probes_Probe_Tests_Test_Results_History_Items_Item::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Probes_Probe_Tests_Test_Results_History_Items_Item::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Probes_Probe_Tests_Test_Results_History_Items_Item& Probes_Probe_Tests_Test_Results_History_Items_Item::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_Item();
  return *internal_default_instance();
}

Probes_Probe_Tests_Test_Results_History_Items_Item* Probes_Probe_Tests_Test_Results_History_Items_Item::New(::google::protobuf::Arena* arena) const {
  Probes_Probe_Tests_Test_Results_History_Items_Item* n = new Probes_Probe_Tests_Test_Results_History_Items_Item;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Probes_Probe_Tests_Test_Results_History_Items_Item::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool Probes_Probe_Tests_Test_Results_History_Items_Item::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3498939466u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State state = 437367433 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state"];
      case 437367433: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 3498939466 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item)
  return false;
#undef DO_
}

void Probes_Probe_Tests_Test_Results_History_Items_Item::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State state = 437367433 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      437367433, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item)
}

::google::protobuf::uint8* Probes_Probe_Tests_Test_Results_History_Items_Item::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State state = 437367433 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        437367433, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item)
  return target;
}

size_t Probes_Probe_Tests_Test_Results_History_Items_Item::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item.State state = 437367433 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Probes_Probe_Tests_Test_Results_History_Items_Item::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item)
  GOOGLE_DCHECK_NE(&from, this);
  const Probes_Probe_Tests_Test_Results_History_Items_Item* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Probes_Probe_Tests_Test_Results_History_Items_Item>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item)
    MergeFrom(*source);
  }
}

void Probes_Probe_Tests_Test_Results_History_Items_Item::MergeFrom(const Probes_Probe_Tests_Test_Results_History_Items_Item& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item_State::MergeFrom(from.state());
  }
}

void Probes_Probe_Tests_Test_Results_History_Items_Item::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Probes_Probe_Tests_Test_Results_History_Items_Item::CopyFrom(const Probes_Probe_Tests_Test_Results_History_Items_Item& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Probes_Probe_Tests_Test_Results_History_Items_Item::IsInitialized() const {
  return true;
}

void Probes_Probe_Tests_Test_Results_History_Items_Item::Swap(Probes_Probe_Tests_Test_Results_History_Items_Item* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Probes_Probe_Tests_Test_Results_History_Items_Item::InternalSwap(Probes_Probe_Tests_Test_Results_History_Items_Item* other) {
  using std::swap;
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Probes_Probe_Tests_Test_Results_History_Items_Item::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Probes_Probe_Tests_Test_Results_History_Items_ItemKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_Items_ItemKey_default_instance_._instance.get_mutable()->item_ = const_cast< ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item*>(
      ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Probes_Probe_Tests_Test_Results_History_Items_ItemKey::kIdFieldNumber;
const int Probes_Probe_Tests_Test_Results_History_Items_ItemKey::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Probes_Probe_Tests_Test_Results_History_Items_ItemKey::Probes_Probe_Tests_Test_Results_History_Items_ItemKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_ItemKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey)
}
Probes_Probe_Tests_Test_Results_History_Items_ItemKey::Probes_Probe_Tests_Test_Results_History_Items_ItemKey(const Probes_Probe_Tests_Test_Results_History_Items_ItemKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_item()) {
    item_ = new ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item(*from.item_);
  } else {
    item_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey)
}

void Probes_Probe_Tests_Test_Results_History_Items_ItemKey::SharedCtor() {
  ::memset(&item_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&item_)) + sizeof(id_));
  _cached_size_ = 0;
}

Probes_Probe_Tests_Test_Results_History_Items_ItemKey::~Probes_Probe_Tests_Test_Results_History_Items_ItemKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey)
  SharedDtor();
}

void Probes_Probe_Tests_Test_Results_History_Items_ItemKey::SharedDtor() {
  if (this != internal_default_instance()) delete item_;
}

void Probes_Probe_Tests_Test_Results_History_Items_ItemKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Probes_Probe_Tests_Test_Results_History_Items_ItemKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Probes_Probe_Tests_Test_Results_History_Items_ItemKey& Probes_Probe_Tests_Test_Results_History_Items_ItemKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Results_History_Items_ItemKey();
  return *internal_default_instance();
}

Probes_Probe_Tests_Test_Results_History_Items_ItemKey* Probes_Probe_Tests_Test_Results_History_Items_ItemKey::New(::google::protobuf::Arena* arena) const {
  Probes_Probe_Tests_Test_Results_History_Items_ItemKey* n = new Probes_Probe_Tests_Test_Results_History_Items_ItemKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Probes_Probe_Tests_Test_Results_History_Items_ItemKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && item_ != NULL) {
    delete item_;
  }
  item_ = NULL;
  id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Probes_Probe_Tests_Test_Results_History_Items_ItemKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/id"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item item = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey)
  return false;
#undef DO_
}

void Probes_Probe_Tests_Test_Results_History_Items_ItemKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/id"];
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item item = 2;
  if (this->has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->item_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey)
}

::google::protobuf::uint8* Probes_Probe_Tests_Test_Results_History_Items_ItemKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/id"];
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item item = 2;
  if (this->has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->item_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey)
  return target;
}

size_t Probes_Probe_Tests_Test_Results_History_Items_ItemKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.Item item = 2;
  if (this->has_item()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->item_);
  }

  // uint64 id = 1 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item/id"];
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Probes_Probe_Tests_Test_Results_History_Items_ItemKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Probes_Probe_Tests_Test_Results_History_Items_ItemKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Probes_Probe_Tests_Test_Results_History_Items_ItemKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey)
    MergeFrom(*source);
  }
}

void Probes_Probe_Tests_Test_Results_History_Items_ItemKey::MergeFrom(const Probes_Probe_Tests_Test_Results_History_Items_ItemKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_item()) {
    mutable_item()->::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items_Item::MergeFrom(from.item());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void Probes_Probe_Tests_Test_Results_History_Items_ItemKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Probes_Probe_Tests_Test_Results_History_Items_ItemKey::CopyFrom(const Probes_Probe_Tests_Test_Results_History_Items_ItemKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Probes_Probe_Tests_Test_Results_History_Items_ItemKey::IsInitialized() const {
  return true;
}

void Probes_Probe_Tests_Test_Results_History_Items_ItemKey::Swap(Probes_Probe_Tests_Test_Results_History_Items_ItemKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Probes_Probe_Tests_Test_Results_History_Items_ItemKey::InternalSwap(Probes_Probe_Tests_Test_Results_History_Items_ItemKey* other) {
  using std::swap;
  swap(item_, other->item_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Probes_Probe_Tests_Test_Results_History_Items_ItemKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Probes_Probe_Tests_Test_Results_History_Items::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Probes_Probe_Tests_Test_Results_History_Items::kItemFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Probes_Probe_Tests_Test_Results_History_Items::Probes_Probe_Tests_Test_Results_History_Items()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Results_History_Items();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items)
}
Probes_Probe_Tests_Test_Results_History_Items::Probes_Probe_Tests_Test_Results_History_Items(const Probes_Probe_Tests_Test_Results_History_Items& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      item_(from.item_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items)
}

void Probes_Probe_Tests_Test_Results_History_Items::SharedCtor() {
  _cached_size_ = 0;
}

Probes_Probe_Tests_Test_Results_History_Items::~Probes_Probe_Tests_Test_Results_History_Items() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items)
  SharedDtor();
}

void Probes_Probe_Tests_Test_Results_History_Items::SharedDtor() {
}

void Probes_Probe_Tests_Test_Results_History_Items::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Probes_Probe_Tests_Test_Results_History_Items::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Probes_Probe_Tests_Test_Results_History_Items& Probes_Probe_Tests_Test_Results_History_Items::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Results_History_Items();
  return *internal_default_instance();
}

Probes_Probe_Tests_Test_Results_History_Items* Probes_Probe_Tests_Test_Results_History_Items::New(::google::protobuf::Arena* arena) const {
  Probes_Probe_Tests_Test_Results_History_Items* n = new Probes_Probe_Tests_Test_Results_History_Items;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Probes_Probe_Tests_Test_Results_History_Items::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_.Clear();
  _internal_metadata_.Clear();
}

bool Probes_Probe_Tests_Test_Results_History_Items::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3969214842u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey item = 496151855 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item"];
      case 496151855: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 3969214842 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_item()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items)
  return false;
#undef DO_
}

void Probes_Probe_Tests_Test_Results_History_Items::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey item = 496151855 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      496151855, this->item(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items)
}

::google::protobuf::uint8* Probes_Probe_Tests_Test_Results_History_Items::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey item = 496151855 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->item_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        496151855, this->item(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items)
  return target;
}

size_t Probes_Probe_Tests_Test_Results_History_Items::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items.ItemKey item = 496151855 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items/item"];
  {
    unsigned int count = static_cast<unsigned int>(this->item_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->item(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Probes_Probe_Tests_Test_Results_History_Items::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items)
  GOOGLE_DCHECK_NE(&from, this);
  const Probes_Probe_Tests_Test_Results_History_Items* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Probes_Probe_Tests_Test_Results_History_Items>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items)
    MergeFrom(*source);
  }
}

void Probes_Probe_Tests_Test_Results_History_Items::MergeFrom(const Probes_Probe_Tests_Test_Results_History_Items& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_.MergeFrom(from.item_);
}

void Probes_Probe_Tests_Test_Results_History_Items::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Probes_Probe_Tests_Test_Results_History_Items::CopyFrom(const Probes_Probe_Tests_Test_Results_History_Items& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Probes_Probe_Tests_Test_Results_History_Items::IsInitialized() const {
  return true;
}

void Probes_Probe_Tests_Test_Results_History_Items::Swap(Probes_Probe_Tests_Test_Results_History_Items* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Probes_Probe_Tests_Test_Results_History_Items::InternalSwap(Probes_Probe_Tests_Test_Results_History_Items* other) {
  using std::swap;
  item_.InternalSwap(&other->item_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Probes_Probe_Tests_Test_Results_History_Items::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Probes_Probe_Tests_Test_Results_History::InitAsDefaultInstance() {
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_History_default_instance_._instance.get_mutable()->items_ = const_cast< ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items*>(
      ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Probes_Probe_Tests_Test_Results_History::kItemsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Probes_Probe_Tests_Test_Results_History::Probes_Probe_Tests_Test_Results_History()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Results_History();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History)
}
Probes_Probe_Tests_Test_Results_History::Probes_Probe_Tests_Test_Results_History(const Probes_Probe_Tests_Test_Results_History& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_items()) {
    items_ = new ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items(*from.items_);
  } else {
    items_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History)
}

void Probes_Probe_Tests_Test_Results_History::SharedCtor() {
  items_ = NULL;
  _cached_size_ = 0;
}

Probes_Probe_Tests_Test_Results_History::~Probes_Probe_Tests_Test_Results_History() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History)
  SharedDtor();
}

void Probes_Probe_Tests_Test_Results_History::SharedDtor() {
  if (this != internal_default_instance()) delete items_;
}

void Probes_Probe_Tests_Test_Results_History::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Probes_Probe_Tests_Test_Results_History::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Probes_Probe_Tests_Test_Results_History& Probes_Probe_Tests_Test_Results_History::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Results_History();
  return *internal_default_instance();
}

Probes_Probe_Tests_Test_Results_History* Probes_Probe_Tests_Test_Results_History::New(::google::protobuf::Arena* arena) const {
  Probes_Probe_Tests_Test_Results_History* n = new Probes_Probe_Tests_Test_Results_History;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Probes_Probe_Tests_Test_Results_History::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && items_ != NULL) {
    delete items_;
  }
  items_ = NULL;
  _internal_metadata_.Clear();
}

bool Probes_Probe_Tests_Test_Results_History::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1475924794u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items items = 184490599 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items"];
      case 184490599: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 1475924794 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_items()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History)
  return false;
#undef DO_
}

void Probes_Probe_Tests_Test_Results_History::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items items = 184490599 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items"];
  if (this->has_items()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      184490599, *this->items_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History)
}

::google::protobuf::uint8* Probes_Probe_Tests_Test_Results_History::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items items = 184490599 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items"];
  if (this->has_items()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        184490599, *this->items_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History)
  return target;
}

size_t Probes_Probe_Tests_Test_Results_History::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History.Items items = 184490599 [(.yext.schemapath) = "/probes/probe/tests/test/results/history/items"];
  if (this->has_items()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->items_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Probes_Probe_Tests_Test_Results_History::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History)
  GOOGLE_DCHECK_NE(&from, this);
  const Probes_Probe_Tests_Test_Results_History* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Probes_Probe_Tests_Test_Results_History>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History)
    MergeFrom(*source);
  }
}

void Probes_Probe_Tests_Test_Results_History::MergeFrom(const Probes_Probe_Tests_Test_Results_History& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_items()) {
    mutable_items()->::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History_Items::MergeFrom(from.items());
  }
}

void Probes_Probe_Tests_Test_Results_History::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Probes_Probe_Tests_Test_Results_History::CopyFrom(const Probes_Probe_Tests_Test_Results_History& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Probes_Probe_Tests_Test_Results_History::IsInitialized() const {
  return true;
}

void Probes_Probe_Tests_Test_Results_History::Swap(Probes_Probe_Tests_Test_Results_History* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Probes_Probe_Tests_Test_Results_History::InternalSwap(Probes_Probe_Tests_Test_Results_History* other) {
  using std::swap;
  swap(items_, other->items_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Probes_Probe_Tests_Test_Results_History::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Probes_Probe_Tests_Test_Results_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_State_default_instance_._instance.get_mutable()->avg_delay_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_State_default_instance_._instance.get_mutable()->failed_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_State_default_instance_._instance.get_mutable()->jitter_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_State_default_instance_._instance.get_mutable()->last_test_timestamp_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_State_default_instance_._instance.get_mutable()->loss_percentage_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_State_default_instance_._instance.get_mutable()->max_delay_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_State_default_instance_._instance.get_mutable()->min_delay_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_State_default_instance_._instance.get_mutable()->probes_received_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_State_default_instance_._instance.get_mutable()->probes_sent_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_State_default_instance_._instance.get_mutable()->start_timestamp_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_State_default_instance_._instance.get_mutable()->stddev_delay_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_State_default_instance_._instance.get_mutable()->test_duration_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_State_default_instance_._instance.get_mutable()->timestamp_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Probes_Probe_Tests_Test_Results_State::clear_avg_delay() {
  if (GetArenaNoVirtual() == NULL && avg_delay_ != NULL) {
    delete avg_delay_;
  }
  avg_delay_ = NULL;
}
void Probes_Probe_Tests_Test_Results_State::clear_failed() {
  if (GetArenaNoVirtual() == NULL && failed_ != NULL) {
    delete failed_;
  }
  failed_ = NULL;
}
void Probes_Probe_Tests_Test_Results_State::clear_jitter() {
  if (GetArenaNoVirtual() == NULL && jitter_ != NULL) {
    delete jitter_;
  }
  jitter_ = NULL;
}
void Probes_Probe_Tests_Test_Results_State::clear_last_test_timestamp() {
  if (GetArenaNoVirtual() == NULL && last_test_timestamp_ != NULL) {
    delete last_test_timestamp_;
  }
  last_test_timestamp_ = NULL;
}
void Probes_Probe_Tests_Test_Results_State::clear_loss_percentage() {
  if (GetArenaNoVirtual() == NULL && loss_percentage_ != NULL) {
    delete loss_percentage_;
  }
  loss_percentage_ = NULL;
}
void Probes_Probe_Tests_Test_Results_State::clear_max_delay() {
  if (GetArenaNoVirtual() == NULL && max_delay_ != NULL) {
    delete max_delay_;
  }
  max_delay_ = NULL;
}
void Probes_Probe_Tests_Test_Results_State::clear_min_delay() {
  if (GetArenaNoVirtual() == NULL && min_delay_ != NULL) {
    delete min_delay_;
  }
  min_delay_ = NULL;
}
void Probes_Probe_Tests_Test_Results_State::clear_probes_received() {
  if (GetArenaNoVirtual() == NULL && probes_received_ != NULL) {
    delete probes_received_;
  }
  probes_received_ = NULL;
}
void Probes_Probe_Tests_Test_Results_State::clear_probes_sent() {
  if (GetArenaNoVirtual() == NULL && probes_sent_ != NULL) {
    delete probes_sent_;
  }
  probes_sent_ = NULL;
}
void Probes_Probe_Tests_Test_Results_State::clear_start_timestamp() {
  if (GetArenaNoVirtual() == NULL && start_timestamp_ != NULL) {
    delete start_timestamp_;
  }
  start_timestamp_ = NULL;
}
void Probes_Probe_Tests_Test_Results_State::clear_stddev_delay() {
  if (GetArenaNoVirtual() == NULL && stddev_delay_ != NULL) {
    delete stddev_delay_;
  }
  stddev_delay_ = NULL;
}
void Probes_Probe_Tests_Test_Results_State::clear_test_duration() {
  if (GetArenaNoVirtual() == NULL && test_duration_ != NULL) {
    delete test_duration_;
  }
  test_duration_ = NULL;
}
void Probes_Probe_Tests_Test_Results_State::clear_timestamp() {
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Probes_Probe_Tests_Test_Results_State::kAvgDelayFieldNumber;
const int Probes_Probe_Tests_Test_Results_State::kFailedFieldNumber;
const int Probes_Probe_Tests_Test_Results_State::kJitterFieldNumber;
const int Probes_Probe_Tests_Test_Results_State::kLastTestTimestampFieldNumber;
const int Probes_Probe_Tests_Test_Results_State::kLossPercentageFieldNumber;
const int Probes_Probe_Tests_Test_Results_State::kMaxDelayFieldNumber;
const int Probes_Probe_Tests_Test_Results_State::kMinDelayFieldNumber;
const int Probes_Probe_Tests_Test_Results_State::kProbesReceivedFieldNumber;
const int Probes_Probe_Tests_Test_Results_State::kProbesSentFieldNumber;
const int Probes_Probe_Tests_Test_Results_State::kStartTimestampFieldNumber;
const int Probes_Probe_Tests_Test_Results_State::kStddevDelayFieldNumber;
const int Probes_Probe_Tests_Test_Results_State::kTestDurationFieldNumber;
const int Probes_Probe_Tests_Test_Results_State::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Probes_Probe_Tests_Test_Results_State::Probes_Probe_Tests_Test_Results_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Results_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State)
}
Probes_Probe_Tests_Test_Results_State::Probes_Probe_Tests_Test_Results_State(const Probes_Probe_Tests_Test_Results_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_loss_percentage()) {
    loss_percentage_ = new ::ywrapper::UintValue(*from.loss_percentage_);
  } else {
    loss_percentage_ = NULL;
  }
  if (from.has_start_timestamp()) {
    start_timestamp_ = new ::ywrapper::UintValue(*from.start_timestamp_);
  } else {
    start_timestamp_ = NULL;
  }
  if (from.has_stddev_delay()) {
    stddev_delay_ = new ::ywrapper::UintValue(*from.stddev_delay_);
  } else {
    stddev_delay_ = NULL;
  }
  if (from.has_probes_received()) {
    probes_received_ = new ::ywrapper::UintValue(*from.probes_received_);
  } else {
    probes_received_ = NULL;
  }
  if (from.has_last_test_timestamp()) {
    last_test_timestamp_ = new ::ywrapper::UintValue(*from.last_test_timestamp_);
  } else {
    last_test_timestamp_ = NULL;
  }
  if (from.has_test_duration()) {
    test_duration_ = new ::ywrapper::UintValue(*from.test_duration_);
  } else {
    test_duration_ = NULL;
  }
  if (from.has_max_delay()) {
    max_delay_ = new ::ywrapper::UintValue(*from.max_delay_);
  } else {
    max_delay_ = NULL;
  }
  if (from.has_avg_delay()) {
    avg_delay_ = new ::ywrapper::UintValue(*from.avg_delay_);
  } else {
    avg_delay_ = NULL;
  }
  if (from.has_timestamp()) {
    timestamp_ = new ::ywrapper::UintValue(*from.timestamp_);
  } else {
    timestamp_ = NULL;
  }
  if (from.has_failed()) {
    failed_ = new ::ywrapper::BoolValue(*from.failed_);
  } else {
    failed_ = NULL;
  }
  if (from.has_min_delay()) {
    min_delay_ = new ::ywrapper::UintValue(*from.min_delay_);
  } else {
    min_delay_ = NULL;
  }
  if (from.has_probes_sent()) {
    probes_sent_ = new ::ywrapper::UintValue(*from.probes_sent_);
  } else {
    probes_sent_ = NULL;
  }
  if (from.has_jitter()) {
    jitter_ = new ::ywrapper::UintValue(*from.jitter_);
  } else {
    jitter_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State)
}

void Probes_Probe_Tests_Test_Results_State::SharedCtor() {
  ::memset(&loss_percentage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&jitter_) -
      reinterpret_cast<char*>(&loss_percentage_)) + sizeof(jitter_));
  _cached_size_ = 0;
}

Probes_Probe_Tests_Test_Results_State::~Probes_Probe_Tests_Test_Results_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State)
  SharedDtor();
}

void Probes_Probe_Tests_Test_Results_State::SharedDtor() {
  if (this != internal_default_instance()) delete loss_percentage_;
  if (this != internal_default_instance()) delete start_timestamp_;
  if (this != internal_default_instance()) delete stddev_delay_;
  if (this != internal_default_instance()) delete probes_received_;
  if (this != internal_default_instance()) delete last_test_timestamp_;
  if (this != internal_default_instance()) delete test_duration_;
  if (this != internal_default_instance()) delete max_delay_;
  if (this != internal_default_instance()) delete avg_delay_;
  if (this != internal_default_instance()) delete timestamp_;
  if (this != internal_default_instance()) delete failed_;
  if (this != internal_default_instance()) delete min_delay_;
  if (this != internal_default_instance()) delete probes_sent_;
  if (this != internal_default_instance()) delete jitter_;
}

void Probes_Probe_Tests_Test_Results_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Probes_Probe_Tests_Test_Results_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Probes_Probe_Tests_Test_Results_State& Probes_Probe_Tests_Test_Results_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Results_State();
  return *internal_default_instance();
}

Probes_Probe_Tests_Test_Results_State* Probes_Probe_Tests_Test_Results_State::New(::google::protobuf::Arena* arena) const {
  Probes_Probe_Tests_Test_Results_State* n = new Probes_Probe_Tests_Test_Results_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Probes_Probe_Tests_Test_Results_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && loss_percentage_ != NULL) {
    delete loss_percentage_;
  }
  loss_percentage_ = NULL;
  if (GetArenaNoVirtual() == NULL && start_timestamp_ != NULL) {
    delete start_timestamp_;
  }
  start_timestamp_ = NULL;
  if (GetArenaNoVirtual() == NULL && stddev_delay_ != NULL) {
    delete stddev_delay_;
  }
  stddev_delay_ = NULL;
  if (GetArenaNoVirtual() == NULL && probes_received_ != NULL) {
    delete probes_received_;
  }
  probes_received_ = NULL;
  if (GetArenaNoVirtual() == NULL && last_test_timestamp_ != NULL) {
    delete last_test_timestamp_;
  }
  last_test_timestamp_ = NULL;
  if (GetArenaNoVirtual() == NULL && test_duration_ != NULL) {
    delete test_duration_;
  }
  test_duration_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_delay_ != NULL) {
    delete max_delay_;
  }
  max_delay_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_delay_ != NULL) {
    delete avg_delay_;
  }
  avg_delay_ = NULL;
  if (GetArenaNoVirtual() == NULL && timestamp_ != NULL) {
    delete timestamp_;
  }
  timestamp_ = NULL;
  if (GetArenaNoVirtual() == NULL && failed_ != NULL) {
    delete failed_;
  }
  failed_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_delay_ != NULL) {
    delete min_delay_;
  }
  min_delay_ = NULL;
  if (GetArenaNoVirtual() == NULL && probes_sent_ != NULL) {
    delete probes_sent_;
  }
  probes_sent_ = NULL;
  if (GetArenaNoVirtual() == NULL && jitter_ != NULL) {
    delete jitter_;
  }
  jitter_ = NULL;
  _internal_metadata_.Clear();
}

bool Probes_Probe_Tests_Test_Results_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3558803570u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue loss_percentage = 24155126 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/loss-percentage"];
      case 24155126: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 193241010 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_loss_percentage()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue start_timestamp = 34444631 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/start-timestamp"];
      case 34444631: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 275557050 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_start_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue stddev_delay = 193510766 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/stddev-delay"];
      case 193510766: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 1548086130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stddev_delay()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue probes_received = 229519999 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/probes-received"];
      case 229519999: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 1836159994 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_probes_received()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue last_test_timestamp = 253022818 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/last-test-timestamp"];
      case 253022818: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 2024182546 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_last_test_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue test_duration = 320098569 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/test-duration"];
      case 320098569: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 2560788554 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_test_duration()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue max_delay = 371640408 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/max-delay"];
      case 371640408: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 2973123266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_delay()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue avg_delay = 399670614 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/avg-delay"];
      case 399670614: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 3197364914 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg_delay()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue timestamp = 400955060 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/timestamp"];
      case 400955060: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 3207640482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_timestamp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue failed = 403171051 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/failed"];
      case 403171051: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 3225368410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_failed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue min_delay = 404486034 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/min-delay"];
      case 404486034: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 3235888274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min_delay()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue probes_sent = 412856428 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/probes-sent"];
      case 412856428: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 3302851426 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_probes_sent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue jitter = 444850446 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/jitter"];
      case 444850446: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 3558803570 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_jitter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State)
  return false;
#undef DO_
}

void Probes_Probe_Tests_Test_Results_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue loss_percentage = 24155126 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/loss-percentage"];
  if (this->has_loss_percentage()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24155126, *this->loss_percentage_, output);
  }

  // .ywrapper.UintValue start_timestamp = 34444631 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/start-timestamp"];
  if (this->has_start_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      34444631, *this->start_timestamp_, output);
  }

  // .ywrapper.UintValue stddev_delay = 193510766 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/stddev-delay"];
  if (this->has_stddev_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      193510766, *this->stddev_delay_, output);
  }

  // .ywrapper.UintValue probes_received = 229519999 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/probes-received"];
  if (this->has_probes_received()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      229519999, *this->probes_received_, output);
  }

  // .ywrapper.UintValue last_test_timestamp = 253022818 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/last-test-timestamp"];
  if (this->has_last_test_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      253022818, *this->last_test_timestamp_, output);
  }

  // .ywrapper.UintValue test_duration = 320098569 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/test-duration"];
  if (this->has_test_duration()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      320098569, *this->test_duration_, output);
  }

  // .ywrapper.UintValue max_delay = 371640408 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/max-delay"];
  if (this->has_max_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      371640408, *this->max_delay_, output);
  }

  // .ywrapper.UintValue avg_delay = 399670614 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/avg-delay"];
  if (this->has_avg_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      399670614, *this->avg_delay_, output);
  }

  // .ywrapper.UintValue timestamp = 400955060 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/timestamp"];
  if (this->has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      400955060, *this->timestamp_, output);
  }

  // .ywrapper.BoolValue failed = 403171051 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/failed"];
  if (this->has_failed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      403171051, *this->failed_, output);
  }

  // .ywrapper.UintValue min_delay = 404486034 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/min-delay"];
  if (this->has_min_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      404486034, *this->min_delay_, output);
  }

  // .ywrapper.UintValue probes_sent = 412856428 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/probes-sent"];
  if (this->has_probes_sent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      412856428, *this->probes_sent_, output);
  }

  // .ywrapper.UintValue jitter = 444850446 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/jitter"];
  if (this->has_jitter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      444850446, *this->jitter_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State)
}

::google::protobuf::uint8* Probes_Probe_Tests_Test_Results_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue loss_percentage = 24155126 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/loss-percentage"];
  if (this->has_loss_percentage()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24155126, *this->loss_percentage_, deterministic, target);
  }

  // .ywrapper.UintValue start_timestamp = 34444631 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/start-timestamp"];
  if (this->has_start_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        34444631, *this->start_timestamp_, deterministic, target);
  }

  // .ywrapper.UintValue stddev_delay = 193510766 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/stddev-delay"];
  if (this->has_stddev_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        193510766, *this->stddev_delay_, deterministic, target);
  }

  // .ywrapper.UintValue probes_received = 229519999 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/probes-received"];
  if (this->has_probes_received()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        229519999, *this->probes_received_, deterministic, target);
  }

  // .ywrapper.UintValue last_test_timestamp = 253022818 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/last-test-timestamp"];
  if (this->has_last_test_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        253022818, *this->last_test_timestamp_, deterministic, target);
  }

  // .ywrapper.UintValue test_duration = 320098569 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/test-duration"];
  if (this->has_test_duration()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        320098569, *this->test_duration_, deterministic, target);
  }

  // .ywrapper.UintValue max_delay = 371640408 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/max-delay"];
  if (this->has_max_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        371640408, *this->max_delay_, deterministic, target);
  }

  // .ywrapper.UintValue avg_delay = 399670614 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/avg-delay"];
  if (this->has_avg_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        399670614, *this->avg_delay_, deterministic, target);
  }

  // .ywrapper.UintValue timestamp = 400955060 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/timestamp"];
  if (this->has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        400955060, *this->timestamp_, deterministic, target);
  }

  // .ywrapper.BoolValue failed = 403171051 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/failed"];
  if (this->has_failed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        403171051, *this->failed_, deterministic, target);
  }

  // .ywrapper.UintValue min_delay = 404486034 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/min-delay"];
  if (this->has_min_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        404486034, *this->min_delay_, deterministic, target);
  }

  // .ywrapper.UintValue probes_sent = 412856428 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/probes-sent"];
  if (this->has_probes_sent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        412856428, *this->probes_sent_, deterministic, target);
  }

  // .ywrapper.UintValue jitter = 444850446 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/jitter"];
  if (this->has_jitter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        444850446, *this->jitter_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State)
  return target;
}

size_t Probes_Probe_Tests_Test_Results_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue loss_percentage = 24155126 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/loss-percentage"];
  if (this->has_loss_percentage()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->loss_percentage_);
  }

  // .ywrapper.UintValue start_timestamp = 34444631 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/start-timestamp"];
  if (this->has_start_timestamp()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->start_timestamp_);
  }

  // .ywrapper.UintValue stddev_delay = 193510766 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/stddev-delay"];
  if (this->has_stddev_delay()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->stddev_delay_);
  }

  // .ywrapper.UintValue probes_received = 229519999 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/probes-received"];
  if (this->has_probes_received()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->probes_received_);
  }

  // .ywrapper.UintValue last_test_timestamp = 253022818 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/last-test-timestamp"];
  if (this->has_last_test_timestamp()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->last_test_timestamp_);
  }

  // .ywrapper.UintValue test_duration = 320098569 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/test-duration"];
  if (this->has_test_duration()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->test_duration_);
  }

  // .ywrapper.UintValue max_delay = 371640408 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/max-delay"];
  if (this->has_max_delay()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_delay_);
  }

  // .ywrapper.UintValue avg_delay = 399670614 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/avg-delay"];
  if (this->has_avg_delay()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_delay_);
  }

  // .ywrapper.UintValue timestamp = 400955060 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/timestamp"];
  if (this->has_timestamp()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->timestamp_);
  }

  // .ywrapper.BoolValue failed = 403171051 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/failed"];
  if (this->has_failed()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->failed_);
  }

  // .ywrapper.UintValue min_delay = 404486034 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/min-delay"];
  if (this->has_min_delay()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_delay_);
  }

  // .ywrapper.UintValue probes_sent = 412856428 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/probes-sent"];
  if (this->has_probes_sent()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->probes_sent_);
  }

  // .ywrapper.UintValue jitter = 444850446 [(.yext.schemapath) = "/probes/probe/tests/test/results/state/jitter"];
  if (this->has_jitter()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->jitter_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Probes_Probe_Tests_Test_Results_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Probes_Probe_Tests_Test_Results_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Probes_Probe_Tests_Test_Results_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State)
    MergeFrom(*source);
  }
}

void Probes_Probe_Tests_Test_Results_State::MergeFrom(const Probes_Probe_Tests_Test_Results_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_loss_percentage()) {
    mutable_loss_percentage()->::ywrapper::UintValue::MergeFrom(from.loss_percentage());
  }
  if (from.has_start_timestamp()) {
    mutable_start_timestamp()->::ywrapper::UintValue::MergeFrom(from.start_timestamp());
  }
  if (from.has_stddev_delay()) {
    mutable_stddev_delay()->::ywrapper::UintValue::MergeFrom(from.stddev_delay());
  }
  if (from.has_probes_received()) {
    mutable_probes_received()->::ywrapper::UintValue::MergeFrom(from.probes_received());
  }
  if (from.has_last_test_timestamp()) {
    mutable_last_test_timestamp()->::ywrapper::UintValue::MergeFrom(from.last_test_timestamp());
  }
  if (from.has_test_duration()) {
    mutable_test_duration()->::ywrapper::UintValue::MergeFrom(from.test_duration());
  }
  if (from.has_max_delay()) {
    mutable_max_delay()->::ywrapper::UintValue::MergeFrom(from.max_delay());
  }
  if (from.has_avg_delay()) {
    mutable_avg_delay()->::ywrapper::UintValue::MergeFrom(from.avg_delay());
  }
  if (from.has_timestamp()) {
    mutable_timestamp()->::ywrapper::UintValue::MergeFrom(from.timestamp());
  }
  if (from.has_failed()) {
    mutable_failed()->::ywrapper::BoolValue::MergeFrom(from.failed());
  }
  if (from.has_min_delay()) {
    mutable_min_delay()->::ywrapper::UintValue::MergeFrom(from.min_delay());
  }
  if (from.has_probes_sent()) {
    mutable_probes_sent()->::ywrapper::UintValue::MergeFrom(from.probes_sent());
  }
  if (from.has_jitter()) {
    mutable_jitter()->::ywrapper::UintValue::MergeFrom(from.jitter());
  }
}

void Probes_Probe_Tests_Test_Results_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Probes_Probe_Tests_Test_Results_State::CopyFrom(const Probes_Probe_Tests_Test_Results_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Probes_Probe_Tests_Test_Results_State::IsInitialized() const {
  return true;
}

void Probes_Probe_Tests_Test_Results_State::Swap(Probes_Probe_Tests_Test_Results_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Probes_Probe_Tests_Test_Results_State::InternalSwap(Probes_Probe_Tests_Test_Results_State* other) {
  using std::swap;
  swap(loss_percentage_, other->loss_percentage_);
  swap(start_timestamp_, other->start_timestamp_);
  swap(stddev_delay_, other->stddev_delay_);
  swap(probes_received_, other->probes_received_);
  swap(last_test_timestamp_, other->last_test_timestamp_);
  swap(test_duration_, other->test_duration_);
  swap(max_delay_, other->max_delay_);
  swap(avg_delay_, other->avg_delay_);
  swap(timestamp_, other->timestamp_);
  swap(failed_, other->failed_);
  swap(min_delay_, other->min_delay_);
  swap(probes_sent_, other->probes_sent_);
  swap(jitter_, other->jitter_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Probes_Probe_Tests_Test_Results_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Probes_Probe_Tests_Test_Results::InitAsDefaultInstance() {
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_default_instance_._instance.get_mutable()->history_ = const_cast< ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History*>(
      ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Results_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State*>(
      ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Probes_Probe_Tests_Test_Results::kHistoryFieldNumber;
const int Probes_Probe_Tests_Test_Results::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Probes_Probe_Tests_Test_Results::Probes_Probe_Tests_Test_Results()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Results();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results)
}
Probes_Probe_Tests_Test_Results::Probes_Probe_Tests_Test_Results(const Probes_Probe_Tests_Test_Results& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_history()) {
    history_ = new ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History(*from.history_);
  } else {
    history_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results)
}

void Probes_Probe_Tests_Test_Results::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&history_) -
      reinterpret_cast<char*>(&state_)) + sizeof(history_));
  _cached_size_ = 0;
}

Probes_Probe_Tests_Test_Results::~Probes_Probe_Tests_Test_Results() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results)
  SharedDtor();
}

void Probes_Probe_Tests_Test_Results::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete history_;
}

void Probes_Probe_Tests_Test_Results::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Probes_Probe_Tests_Test_Results::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Probes_Probe_Tests_Test_Results& Probes_Probe_Tests_Test_Results::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Results();
  return *internal_default_instance();
}

Probes_Probe_Tests_Test_Results* Probes_Probe_Tests_Test_Results::New(::google::protobuf::Arena* arena) const {
  Probes_Probe_Tests_Test_Results* n = new Probes_Probe_Tests_Test_Results;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Probes_Probe_Tests_Test_Results::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && history_ != NULL) {
    delete history_;
  }
  history_ = NULL;
  _internal_metadata_.Clear();
}

bool Probes_Probe_Tests_Test_Results::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1749131986u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State state = 101657 [(.yext.schemapath) = "/probes/probe/tests/test/results/state"];
      case 101657: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 813258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History history = 218641498 [(.yext.schemapath) = "/probes/probe/tests/test/results/history"];
      case 218641498: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 1749131986 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_history()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results)
  return false;
#undef DO_
}

void Probes_Probe_Tests_Test_Results::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State state = 101657 [(.yext.schemapath) = "/probes/probe/tests/test/results/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      101657, *this->state_, output);
  }

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History history = 218641498 [(.yext.schemapath) = "/probes/probe/tests/test/results/history"];
  if (this->has_history()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      218641498, *this->history_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results)
}

::google::protobuf::uint8* Probes_Probe_Tests_Test_Results::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State state = 101657 [(.yext.schemapath) = "/probes/probe/tests/test/results/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        101657, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History history = 218641498 [(.yext.schemapath) = "/probes/probe/tests/test/results/history"];
  if (this->has_history()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        218641498, *this->history_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results)
  return target;
}

size_t Probes_Probe_Tests_Test_Results::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.State state = 101657 [(.yext.schemapath) = "/probes/probe/tests/test/results/state"];
  if (this->has_state()) {
    total_size += 3 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results.History history = 218641498 [(.yext.schemapath) = "/probes/probe/tests/test/results/history"];
  if (this->has_history()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->history_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Probes_Probe_Tests_Test_Results::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results)
  GOOGLE_DCHECK_NE(&from, this);
  const Probes_Probe_Tests_Test_Results* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Probes_Probe_Tests_Test_Results>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results)
    MergeFrom(*source);
  }
}

void Probes_Probe_Tests_Test_Results::MergeFrom(const Probes_Probe_Tests_Test_Results& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_State::MergeFrom(from.state());
  }
  if (from.has_history()) {
    mutable_history()->::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results_History::MergeFrom(from.history());
  }
}

void Probes_Probe_Tests_Test_Results::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Probes_Probe_Tests_Test_Results::CopyFrom(const Probes_Probe_Tests_Test_Results& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Probes_Probe_Tests_Test_Results::IsInitialized() const {
  return true;
}

void Probes_Probe_Tests_Test_Results::Swap(Probes_Probe_Tests_Test_Results* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Probes_Probe_Tests_Test_Results::InternalSwap(Probes_Probe_Tests_Test_Results* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(history_, other->history_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Probes_Probe_Tests_Test_Results::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Probes_Probe_Tests_Test_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_State_default_instance_._instance.get_mutable()->count_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_State_default_instance_._instance.get_mutable()->dscp_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_State_default_instance_._instance.get_mutable()->enabled_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_State_default_instance_._instance.get_mutable()->history_size_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_State_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_State_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_State_default_instance_._instance.get_mutable()->source_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_State_default_instance_._instance.get_mutable()->source_port_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Probes_Probe_Tests_Test_State::clear_count() {
  if (GetArenaNoVirtual() == NULL && count_ != NULL) {
    delete count_;
  }
  count_ = NULL;
}
void Probes_Probe_Tests_Test_State::clear_dscp() {
  if (GetArenaNoVirtual() == NULL && dscp_ != NULL) {
    delete dscp_;
  }
  dscp_ = NULL;
}
void Probes_Probe_Tests_Test_State::clear_enabled() {
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) {
    delete enabled_;
  }
  enabled_ = NULL;
}
void Probes_Probe_Tests_Test_State::clear_history_size() {
  if (GetArenaNoVirtual() == NULL && history_size_ != NULL) {
    delete history_size_;
  }
  history_size_ = NULL;
}
void Probes_Probe_Tests_Test_State::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void Probes_Probe_Tests_Test_State::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void Probes_Probe_Tests_Test_State::clear_source() {
  if (GetArenaNoVirtual() == NULL && source_ != NULL) {
    delete source_;
  }
  source_ = NULL;
}
void Probes_Probe_Tests_Test_State::clear_source_port() {
  if (GetArenaNoVirtual() == NULL && source_port_ != NULL) {
    delete source_port_;
  }
  source_port_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Probes_Probe_Tests_Test_State::kCountFieldNumber;
const int Probes_Probe_Tests_Test_State::kDscpFieldNumber;
const int Probes_Probe_Tests_Test_State::kEnabledFieldNumber;
const int Probes_Probe_Tests_Test_State::kHistorySizeFieldNumber;
const int Probes_Probe_Tests_Test_State::kIntervalFieldNumber;
const int Probes_Probe_Tests_Test_State::kNameFieldNumber;
const int Probes_Probe_Tests_Test_State::kSourceFieldNumber;
const int Probes_Probe_Tests_Test_State::kSourcePortFieldNumber;
const int Probes_Probe_Tests_Test_State::kTestTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Probes_Probe_Tests_Test_State::Probes_Probe_Tests_Test_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State)
}
Probes_Probe_Tests_Test_State::Probes_Probe_Tests_Test_State(const Probes_Probe_Tests_Test_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_source_port()) {
    source_port_ = new ::ywrapper::UintValue(*from.source_port_);
  } else {
    source_port_ = NULL;
  }
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_source()) {
    source_ = new ::ywrapper::StringValue(*from.source_);
  } else {
    source_ = NULL;
  }
  if (from.has_history_size()) {
    history_size_ = new ::ywrapper::UintValue(*from.history_size_);
  } else {
    history_size_ = NULL;
  }
  if (from.has_enabled()) {
    enabled_ = new ::ywrapper::BoolValue(*from.enabled_);
  } else {
    enabled_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_dscp()) {
    dscp_ = new ::ywrapper::UintValue(*from.dscp_);
  } else {
    dscp_ = NULL;
  }
  if (from.has_count()) {
    count_ = new ::ywrapper::UintValue(*from.count_);
  } else {
    count_ = NULL;
  }
  test_type_ = from.test_type_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State)
}

void Probes_Probe_Tests_Test_State::SharedCtor() {
  ::memset(&source_port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&test_type_) -
      reinterpret_cast<char*>(&source_port_)) + sizeof(test_type_));
  _cached_size_ = 0;
}

Probes_Probe_Tests_Test_State::~Probes_Probe_Tests_Test_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State)
  SharedDtor();
}

void Probes_Probe_Tests_Test_State::SharedDtor() {
  if (this != internal_default_instance()) delete source_port_;
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete source_;
  if (this != internal_default_instance()) delete history_size_;
  if (this != internal_default_instance()) delete enabled_;
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete dscp_;
  if (this != internal_default_instance()) delete count_;
}

void Probes_Probe_Tests_Test_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Probes_Probe_Tests_Test_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Probes_Probe_Tests_Test_State& Probes_Probe_Tests_Test_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_State();
  return *internal_default_instance();
}

Probes_Probe_Tests_Test_State* Probes_Probe_Tests_Test_State::New(::google::protobuf::Arena* arena) const {
  Probes_Probe_Tests_Test_State* n = new Probes_Probe_Tests_Test_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Probes_Probe_Tests_Test_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && source_port_ != NULL) {
    delete source_port_;
  }
  source_port_ = NULL;
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && source_ != NULL) {
    delete source_;
  }
  source_ = NULL;
  if (GetArenaNoVirtual() == NULL && history_size_ != NULL) {
    delete history_size_;
  }
  history_size_ = NULL;
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) {
    delete enabled_;
  }
  enabled_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && dscp_ != NULL) {
    delete dscp_;
  }
  dscp_ = NULL;
  if (GetArenaNoVirtual() == NULL && count_ != NULL) {
    delete count_;
  }
  count_ = NULL;
  test_type_ = 0;
  _internal_metadata_.Clear();
}

bool Probes_Probe_Tests_Test_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4254080946u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue source_port = 32412470 [(.yext.schemapath) = "/probes/probe/tests/test/state/source-port"];
      case 32412470: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 259299762 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_port()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigProbesTestType test_type = 120827898 [(.yext.schemapath) = "/probes/probe/tests/test/state/test-type"];
      case 120827898: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 966623184 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_test_type(static_cast< ::openconfig::enums::OpenconfigProbesTestType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue interval = 228767566 [(.yext.schemapath) = "/probes/probe/tests/test/state/interval"];
      case 228767566: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 1830140530 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue source = 330684050 [(.yext.schemapath) = "/probes/probe/tests/test/state/source"];
      case 330684050: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 2645472402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue history_size = 366388155 [(.yext.schemapath) = "/probes/probe/tests/test/state/history-size"];
      case 366388155: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 2931105242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_history_size()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue enabled = 400557768 [(.yext.schemapath) = "/probes/probe/tests/test/state/enabled"];
      case 400557768: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 3204462146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_enabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue name = 413303480 [(.yext.schemapath) = "/probes/probe/tests/test/state/name"];
      case 413303480: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 3306427842 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue dscp = 524434947 [(.yext.schemapath) = "/probes/probe/tests/test/state/dscp"];
      case 524434947: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 4195479578 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dscp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue count = 531760118 [(.yext.schemapath) = "/probes/probe/tests/test/state/count"];
      case 531760118: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 4254080946 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_count()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State)
  return false;
#undef DO_
}

void Probes_Probe_Tests_Test_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue source_port = 32412470 [(.yext.schemapath) = "/probes/probe/tests/test/state/source-port"];
  if (this->has_source_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32412470, *this->source_port_, output);
  }

  // .openconfig.enums.OpenconfigProbesTestType test_type = 120827898 [(.yext.schemapath) = "/probes/probe/tests/test/state/test-type"];
  if (this->test_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      120827898, this->test_type(), output);
  }

  // .ywrapper.UintValue interval = 228767566 [(.yext.schemapath) = "/probes/probe/tests/test/state/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      228767566, *this->interval_, output);
  }

  // .ywrapper.StringValue source = 330684050 [(.yext.schemapath) = "/probes/probe/tests/test/state/source"];
  if (this->has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      330684050, *this->source_, output);
  }

  // .ywrapper.UintValue history_size = 366388155 [(.yext.schemapath) = "/probes/probe/tests/test/state/history-size"];
  if (this->has_history_size()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      366388155, *this->history_size_, output);
  }

  // .ywrapper.BoolValue enabled = 400557768 [(.yext.schemapath) = "/probes/probe/tests/test/state/enabled"];
  if (this->has_enabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      400557768, *this->enabled_, output);
  }

  // .ywrapper.StringValue name = 413303480 [(.yext.schemapath) = "/probes/probe/tests/test/state/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      413303480, *this->name_, output);
  }

  // .ywrapper.UintValue dscp = 524434947 [(.yext.schemapath) = "/probes/probe/tests/test/state/dscp"];
  if (this->has_dscp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      524434947, *this->dscp_, output);
  }

  // .ywrapper.UintValue count = 531760118 [(.yext.schemapath) = "/probes/probe/tests/test/state/count"];
  if (this->has_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      531760118, *this->count_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State)
}

::google::protobuf::uint8* Probes_Probe_Tests_Test_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue source_port = 32412470 [(.yext.schemapath) = "/probes/probe/tests/test/state/source-port"];
  if (this->has_source_port()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        32412470, *this->source_port_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigProbesTestType test_type = 120827898 [(.yext.schemapath) = "/probes/probe/tests/test/state/test-type"];
  if (this->test_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      120827898, this->test_type(), target);
  }

  // .ywrapper.UintValue interval = 228767566 [(.yext.schemapath) = "/probes/probe/tests/test/state/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        228767566, *this->interval_, deterministic, target);
  }

  // .ywrapper.StringValue source = 330684050 [(.yext.schemapath) = "/probes/probe/tests/test/state/source"];
  if (this->has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        330684050, *this->source_, deterministic, target);
  }

  // .ywrapper.UintValue history_size = 366388155 [(.yext.schemapath) = "/probes/probe/tests/test/state/history-size"];
  if (this->has_history_size()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        366388155, *this->history_size_, deterministic, target);
  }

  // .ywrapper.BoolValue enabled = 400557768 [(.yext.schemapath) = "/probes/probe/tests/test/state/enabled"];
  if (this->has_enabled()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        400557768, *this->enabled_, deterministic, target);
  }

  // .ywrapper.StringValue name = 413303480 [(.yext.schemapath) = "/probes/probe/tests/test/state/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        413303480, *this->name_, deterministic, target);
  }

  // .ywrapper.UintValue dscp = 524434947 [(.yext.schemapath) = "/probes/probe/tests/test/state/dscp"];
  if (this->has_dscp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        524434947, *this->dscp_, deterministic, target);
  }

  // .ywrapper.UintValue count = 531760118 [(.yext.schemapath) = "/probes/probe/tests/test/state/count"];
  if (this->has_count()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        531760118, *this->count_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State)
  return target;
}

size_t Probes_Probe_Tests_Test_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue source_port = 32412470 [(.yext.schemapath) = "/probes/probe/tests/test/state/source-port"];
  if (this->has_source_port()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->source_port_);
  }

  // .ywrapper.UintValue interval = 228767566 [(.yext.schemapath) = "/probes/probe/tests/test/state/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.StringValue source = 330684050 [(.yext.schemapath) = "/probes/probe/tests/test/state/source"];
  if (this->has_source()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->source_);
  }

  // .ywrapper.UintValue history_size = 366388155 [(.yext.schemapath) = "/probes/probe/tests/test/state/history-size"];
  if (this->has_history_size()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->history_size_);
  }

  // .ywrapper.BoolValue enabled = 400557768 [(.yext.schemapath) = "/probes/probe/tests/test/state/enabled"];
  if (this->has_enabled()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->enabled_);
  }

  // .ywrapper.StringValue name = 413303480 [(.yext.schemapath) = "/probes/probe/tests/test/state/name"];
  if (this->has_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  // .ywrapper.UintValue dscp = 524434947 [(.yext.schemapath) = "/probes/probe/tests/test/state/dscp"];
  if (this->has_dscp()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->dscp_);
  }

  // .ywrapper.UintValue count = 531760118 [(.yext.schemapath) = "/probes/probe/tests/test/state/count"];
  if (this->has_count()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->count_);
  }

  // .openconfig.enums.OpenconfigProbesTestType test_type = 120827898 [(.yext.schemapath) = "/probes/probe/tests/test/state/test-type"];
  if (this->test_type() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->test_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Probes_Probe_Tests_Test_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Probes_Probe_Tests_Test_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Probes_Probe_Tests_Test_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State)
    MergeFrom(*source);
  }
}

void Probes_Probe_Tests_Test_State::MergeFrom(const Probes_Probe_Tests_Test_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_source_port()) {
    mutable_source_port()->::ywrapper::UintValue::MergeFrom(from.source_port());
  }
  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_source()) {
    mutable_source()->::ywrapper::StringValue::MergeFrom(from.source());
  }
  if (from.has_history_size()) {
    mutable_history_size()->::ywrapper::UintValue::MergeFrom(from.history_size());
  }
  if (from.has_enabled()) {
    mutable_enabled()->::ywrapper::BoolValue::MergeFrom(from.enabled());
  }
  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
  if (from.has_dscp()) {
    mutable_dscp()->::ywrapper::UintValue::MergeFrom(from.dscp());
  }
  if (from.has_count()) {
    mutable_count()->::ywrapper::UintValue::MergeFrom(from.count());
  }
  if (from.test_type() != 0) {
    set_test_type(from.test_type());
  }
}

void Probes_Probe_Tests_Test_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Probes_Probe_Tests_Test_State::CopyFrom(const Probes_Probe_Tests_Test_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Probes_Probe_Tests_Test_State::IsInitialized() const {
  return true;
}

void Probes_Probe_Tests_Test_State::Swap(Probes_Probe_Tests_Test_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Probes_Probe_Tests_Test_State::InternalSwap(Probes_Probe_Tests_Test_State* other) {
  using std::swap;
  swap(source_port_, other->source_port_);
  swap(interval_, other->interval_);
  swap(source_, other->source_);
  swap(history_size_, other->history_size_);
  swap(enabled_, other->enabled_);
  swap(name_, other->name_);
  swap(dscp_, other->dscp_);
  swap(count_, other->count_);
  swap(test_type_, other->test_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Probes_Probe_Tests_Test_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Probes_Probe_Tests_Test_Target_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Target_Config_default_instance_._instance.get_mutable()->address_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Target_Config_default_instance_._instance.get_mutable()->port_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Target_Config_default_instance_._instance.get_mutable()->url_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void Probes_Probe_Tests_Test_Target_Config::clear_address() {
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
}
void Probes_Probe_Tests_Test_Target_Config::clear_port() {
  if (GetArenaNoVirtual() == NULL && port_ != NULL) {
    delete port_;
  }
  port_ = NULL;
}
void Probes_Probe_Tests_Test_Target_Config::clear_url() {
  if (GetArenaNoVirtual() == NULL && url_ != NULL) {
    delete url_;
  }
  url_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Probes_Probe_Tests_Test_Target_Config::kAddressFieldNumber;
const int Probes_Probe_Tests_Test_Target_Config::kPortFieldNumber;
const int Probes_Probe_Tests_Test_Target_Config::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Probes_Probe_Tests_Test_Target_Config::Probes_Probe_Tests_Test_Target_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Target_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config)
}
Probes_Probe_Tests_Test_Target_Config::Probes_Probe_Tests_Test_Target_Config(const Probes_Probe_Tests_Test_Target_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_address()) {
    address_ = new ::ywrapper::StringValue(*from.address_);
  } else {
    address_ = NULL;
  }
  if (from.has_url()) {
    url_ = new ::ywrapper::StringValue(*from.url_);
  } else {
    url_ = NULL;
  }
  if (from.has_port()) {
    port_ = new ::ywrapper::UintValue(*from.port_);
  } else {
    port_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config)
}

void Probes_Probe_Tests_Test_Target_Config::SharedCtor() {
  ::memset(&address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&address_)) + sizeof(port_));
  _cached_size_ = 0;
}

Probes_Probe_Tests_Test_Target_Config::~Probes_Probe_Tests_Test_Target_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config)
  SharedDtor();
}

void Probes_Probe_Tests_Test_Target_Config::SharedDtor() {
  if (this != internal_default_instance()) delete address_;
  if (this != internal_default_instance()) delete url_;
  if (this != internal_default_instance()) delete port_;
}

void Probes_Probe_Tests_Test_Target_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Probes_Probe_Tests_Test_Target_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Probes_Probe_Tests_Test_Target_Config& Probes_Probe_Tests_Test_Target_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Target_Config();
  return *internal_default_instance();
}

Probes_Probe_Tests_Test_Target_Config* Probes_Probe_Tests_Test_Target_Config::New(::google::protobuf::Arena* arena) const {
  Probes_Probe_Tests_Test_Target_Config* n = new Probes_Probe_Tests_Test_Target_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Probes_Probe_Tests_Test_Target_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
  if (GetArenaNoVirtual() == NULL && url_ != NULL) {
    delete url_;
  }
  url_ = NULL;
  if (GetArenaNoVirtual() == NULL && port_ != NULL) {
    delete port_;
  }
  port_ = NULL;
  _internal_metadata_.Clear();
}

bool Probes_Probe_Tests_Test_Target_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4241304778u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue address = 386645440 [(.yext.schemapath) = "/probes/probe/tests/test/target/config/address"];
      case 386645440: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 3093163522 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue url = 479408427 [(.yext.schemapath) = "/probes/probe/tests/test/target/config/url"];
      case 479408427: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 3835267418 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue port = 530163097 [(.yext.schemapath) = "/probes/probe/tests/test/target/config/port"];
      case 530163097: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 4241304778 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_port()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config)
  return false;
#undef DO_
}

void Probes_Probe_Tests_Test_Target_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue address = 386645440 [(.yext.schemapath) = "/probes/probe/tests/test/target/config/address"];
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      386645440, *this->address_, output);
  }

  // .ywrapper.StringValue url = 479408427 [(.yext.schemapath) = "/probes/probe/tests/test/target/config/url"];
  if (this->has_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      479408427, *this->url_, output);
  }

  // .ywrapper.UintValue port = 530163097 [(.yext.schemapath) = "/probes/probe/tests/test/target/config/port"];
  if (this->has_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      530163097, *this->port_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config)
}

::google::protobuf::uint8* Probes_Probe_Tests_Test_Target_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue address = 386645440 [(.yext.schemapath) = "/probes/probe/tests/test/target/config/address"];
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        386645440, *this->address_, deterministic, target);
  }

  // .ywrapper.StringValue url = 479408427 [(.yext.schemapath) = "/probes/probe/tests/test/target/config/url"];
  if (this->has_url()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        479408427, *this->url_, deterministic, target);
  }

  // .ywrapper.UintValue port = 530163097 [(.yext.schemapath) = "/probes/probe/tests/test/target/config/port"];
  if (this->has_port()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        530163097, *this->port_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config)
  return target;
}

size_t Probes_Probe_Tests_Test_Target_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue address = 386645440 [(.yext.schemapath) = "/probes/probe/tests/test/target/config/address"];
  if (this->has_address()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->address_);
  }

  // .ywrapper.StringValue url = 479408427 [(.yext.schemapath) = "/probes/probe/tests/test/target/config/url"];
  if (this->has_url()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->url_);
  }

  // .ywrapper.UintValue port = 530163097 [(.yext.schemapath) = "/probes/probe/tests/test/target/config/port"];
  if (this->has_port()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->port_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Probes_Probe_Tests_Test_Target_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Probes_Probe_Tests_Test_Target_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Probes_Probe_Tests_Test_Target_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config)
    MergeFrom(*source);
  }
}

void Probes_Probe_Tests_Test_Target_Config::MergeFrom(const Probes_Probe_Tests_Test_Target_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_address()) {
    mutable_address()->::ywrapper::StringValue::MergeFrom(from.address());
  }
  if (from.has_url()) {
    mutable_url()->::ywrapper::StringValue::MergeFrom(from.url());
  }
  if (from.has_port()) {
    mutable_port()->::ywrapper::UintValue::MergeFrom(from.port());
  }
}

void Probes_Probe_Tests_Test_Target_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Probes_Probe_Tests_Test_Target_Config::CopyFrom(const Probes_Probe_Tests_Test_Target_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Probes_Probe_Tests_Test_Target_Config::IsInitialized() const {
  return true;
}

void Probes_Probe_Tests_Test_Target_Config::Swap(Probes_Probe_Tests_Test_Target_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Probes_Probe_Tests_Test_Target_Config::InternalSwap(Probes_Probe_Tests_Test_Target_Config* other) {
  using std::swap;
  swap(address_, other->address_);
  swap(url_, other->url_);
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Probes_Probe_Tests_Test_Target_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Probes_Probe_Tests_Test_Target_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Target_State_default_instance_._instance.get_mutable()->address_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Target_State_default_instance_._instance.get_mutable()->port_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Target_State_default_instance_._instance.get_mutable()->url_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void Probes_Probe_Tests_Test_Target_State::clear_address() {
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
}
void Probes_Probe_Tests_Test_Target_State::clear_port() {
  if (GetArenaNoVirtual() == NULL && port_ != NULL) {
    delete port_;
  }
  port_ = NULL;
}
void Probes_Probe_Tests_Test_Target_State::clear_url() {
  if (GetArenaNoVirtual() == NULL && url_ != NULL) {
    delete url_;
  }
  url_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Probes_Probe_Tests_Test_Target_State::kAddressFieldNumber;
const int Probes_Probe_Tests_Test_Target_State::kPortFieldNumber;
const int Probes_Probe_Tests_Test_Target_State::kUrlFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Probes_Probe_Tests_Test_Target_State::Probes_Probe_Tests_Test_Target_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Target_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State)
}
Probes_Probe_Tests_Test_Target_State::Probes_Probe_Tests_Test_Target_State(const Probes_Probe_Tests_Test_Target_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_port()) {
    port_ = new ::ywrapper::UintValue(*from.port_);
  } else {
    port_ = NULL;
  }
  if (from.has_address()) {
    address_ = new ::ywrapper::StringValue(*from.address_);
  } else {
    address_ = NULL;
  }
  if (from.has_url()) {
    url_ = new ::ywrapper::StringValue(*from.url_);
  } else {
    url_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State)
}

void Probes_Probe_Tests_Test_Target_State::SharedCtor() {
  ::memset(&port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&url_) -
      reinterpret_cast<char*>(&port_)) + sizeof(url_));
  _cached_size_ = 0;
}

Probes_Probe_Tests_Test_Target_State::~Probes_Probe_Tests_Test_Target_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State)
  SharedDtor();
}

void Probes_Probe_Tests_Test_Target_State::SharedDtor() {
  if (this != internal_default_instance()) delete port_;
  if (this != internal_default_instance()) delete address_;
  if (this != internal_default_instance()) delete url_;
}

void Probes_Probe_Tests_Test_Target_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Probes_Probe_Tests_Test_Target_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Probes_Probe_Tests_Test_Target_State& Probes_Probe_Tests_Test_Target_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Target_State();
  return *internal_default_instance();
}

Probes_Probe_Tests_Test_Target_State* Probes_Probe_Tests_Test_Target_State::New(::google::protobuf::Arena* arena) const {
  Probes_Probe_Tests_Test_Target_State* n = new Probes_Probe_Tests_Test_Target_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Probes_Probe_Tests_Test_Target_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && port_ != NULL) {
    delete port_;
  }
  port_ = NULL;
  if (GetArenaNoVirtual() == NULL && address_ != NULL) {
    delete address_;
  }
  address_ = NULL;
  if (GetArenaNoVirtual() == NULL && url_ != NULL) {
    delete url_;
  }
  url_ = NULL;
  _internal_metadata_.Clear();
}

bool Probes_Probe_Tests_Test_Target_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3243278818u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue port = 68939668 [(.yext.schemapath) = "/probes/probe/tests/test/target/state/port"];
      case 68939668: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 551517346 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_port()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue address = 283265387 [(.yext.schemapath) = "/probes/probe/tests/test/target/state/address"];
      case 283265387: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 2266123098 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue url = 405409852 [(.yext.schemapath) = "/probes/probe/tests/test/target/state/url"];
      case 405409852: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 3243278818 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_url()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State)
  return false;
#undef DO_
}

void Probes_Probe_Tests_Test_Target_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue port = 68939668 [(.yext.schemapath) = "/probes/probe/tests/test/target/state/port"];
  if (this->has_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      68939668, *this->port_, output);
  }

  // .ywrapper.StringValue address = 283265387 [(.yext.schemapath) = "/probes/probe/tests/test/target/state/address"];
  if (this->has_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      283265387, *this->address_, output);
  }

  // .ywrapper.StringValue url = 405409852 [(.yext.schemapath) = "/probes/probe/tests/test/target/state/url"];
  if (this->has_url()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      405409852, *this->url_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State)
}

::google::protobuf::uint8* Probes_Probe_Tests_Test_Target_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue port = 68939668 [(.yext.schemapath) = "/probes/probe/tests/test/target/state/port"];
  if (this->has_port()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        68939668, *this->port_, deterministic, target);
  }

  // .ywrapper.StringValue address = 283265387 [(.yext.schemapath) = "/probes/probe/tests/test/target/state/address"];
  if (this->has_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        283265387, *this->address_, deterministic, target);
  }

  // .ywrapper.StringValue url = 405409852 [(.yext.schemapath) = "/probes/probe/tests/test/target/state/url"];
  if (this->has_url()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        405409852, *this->url_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State)
  return target;
}

size_t Probes_Probe_Tests_Test_Target_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue port = 68939668 [(.yext.schemapath) = "/probes/probe/tests/test/target/state/port"];
  if (this->has_port()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->port_);
  }

  // .ywrapper.StringValue address = 283265387 [(.yext.schemapath) = "/probes/probe/tests/test/target/state/address"];
  if (this->has_address()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->address_);
  }

  // .ywrapper.StringValue url = 405409852 [(.yext.schemapath) = "/probes/probe/tests/test/target/state/url"];
  if (this->has_url()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->url_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Probes_Probe_Tests_Test_Target_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Probes_Probe_Tests_Test_Target_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Probes_Probe_Tests_Test_Target_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State)
    MergeFrom(*source);
  }
}

void Probes_Probe_Tests_Test_Target_State::MergeFrom(const Probes_Probe_Tests_Test_Target_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_port()) {
    mutable_port()->::ywrapper::UintValue::MergeFrom(from.port());
  }
  if (from.has_address()) {
    mutable_address()->::ywrapper::StringValue::MergeFrom(from.address());
  }
  if (from.has_url()) {
    mutable_url()->::ywrapper::StringValue::MergeFrom(from.url());
  }
}

void Probes_Probe_Tests_Test_Target_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Probes_Probe_Tests_Test_Target_State::CopyFrom(const Probes_Probe_Tests_Test_Target_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Probes_Probe_Tests_Test_Target_State::IsInitialized() const {
  return true;
}

void Probes_Probe_Tests_Test_Target_State::Swap(Probes_Probe_Tests_Test_Target_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Probes_Probe_Tests_Test_Target_State::InternalSwap(Probes_Probe_Tests_Test_Target_State* other) {
  using std::swap;
  swap(port_, other->port_);
  swap(address_, other->address_);
  swap(url_, other->url_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Probes_Probe_Tests_Test_Target_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Probes_Probe_Tests_Test_Target::InitAsDefaultInstance() {
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Target_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_Config*>(
      ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_Config::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_Target_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_State*>(
      ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Probes_Probe_Tests_Test_Target::kConfigFieldNumber;
const int Probes_Probe_Tests_Test_Target::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Probes_Probe_Tests_Test_Target::Probes_Probe_Tests_Test_Target()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Target();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target)
}
Probes_Probe_Tests_Test_Target::Probes_Probe_Tests_Test_Target(const Probes_Probe_Tests_Test_Target& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target)
}

void Probes_Probe_Tests_Test_Target::SharedCtor() {
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&config_)) + sizeof(state_));
  _cached_size_ = 0;
}

Probes_Probe_Tests_Test_Target::~Probes_Probe_Tests_Test_Target() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target)
  SharedDtor();
}

void Probes_Probe_Tests_Test_Target::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete state_;
}

void Probes_Probe_Tests_Test_Target::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Probes_Probe_Tests_Test_Target::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Probes_Probe_Tests_Test_Target& Probes_Probe_Tests_Test_Target::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test_Target();
  return *internal_default_instance();
}

Probes_Probe_Tests_Test_Target* Probes_Probe_Tests_Test_Target::New(::google::protobuf::Arena* arena) const {
  Probes_Probe_Tests_Test_Target* n = new Probes_Probe_Tests_Test_Target;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Probes_Probe_Tests_Test_Target::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool Probes_Probe_Tests_Test_Target::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1494302802u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config config = 140870805 [(.yext.schemapath) = "/probes/probe/tests/test/target/config"];
      case 140870805: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 1126966442 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State state = 186787850 [(.yext.schemapath) = "/probes/probe/tests/test/target/state"];
      case 186787850: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 1494302802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target)
  return false;
#undef DO_
}

void Probes_Probe_Tests_Test_Target::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config config = 140870805 [(.yext.schemapath) = "/probes/probe/tests/test/target/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      140870805, *this->config_, output);
  }

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State state = 186787850 [(.yext.schemapath) = "/probes/probe/tests/test/target/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      186787850, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target)
}

::google::protobuf::uint8* Probes_Probe_Tests_Test_Target::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config config = 140870805 [(.yext.schemapath) = "/probes/probe/tests/test/target/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        140870805, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State state = 186787850 [(.yext.schemapath) = "/probes/probe/tests/test/target/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        186787850, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target)
  return target;
}

size_t Probes_Probe_Tests_Test_Target::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.Config config = 140870805 [(.yext.schemapath) = "/probes/probe/tests/test/target/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target.State state = 186787850 [(.yext.schemapath) = "/probes/probe/tests/test/target/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Probes_Probe_Tests_Test_Target::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target)
  GOOGLE_DCHECK_NE(&from, this);
  const Probes_Probe_Tests_Test_Target* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Probes_Probe_Tests_Test_Target>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target)
    MergeFrom(*source);
  }
}

void Probes_Probe_Tests_Test_Target::MergeFrom(const Probes_Probe_Tests_Test_Target& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_Config::MergeFrom(from.config());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target_State::MergeFrom(from.state());
  }
}

void Probes_Probe_Tests_Test_Target::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Probes_Probe_Tests_Test_Target::CopyFrom(const Probes_Probe_Tests_Test_Target& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Probes_Probe_Tests_Test_Target::IsInitialized() const {
  return true;
}

void Probes_Probe_Tests_Test_Target::Swap(Probes_Probe_Tests_Test_Target* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Probes_Probe_Tests_Test_Target::InternalSwap(Probes_Probe_Tests_Test_Target* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Probes_Probe_Tests_Test_Target::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Probes_Probe_Tests_Test::InitAsDefaultInstance() {
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config*>(
      ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_default_instance_._instance.get_mutable()->results_ = const_cast< ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results*>(
      ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State*>(
      ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_Test_default_instance_._instance.get_mutable()->target_ = const_cast< ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target*>(
      ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Probes_Probe_Tests_Test::kConfigFieldNumber;
const int Probes_Probe_Tests_Test::kResultsFieldNumber;
const int Probes_Probe_Tests_Test::kStateFieldNumber;
const int Probes_Probe_Tests_Test::kTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Probes_Probe_Tests_Test::Probes_Probe_Tests_Test()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test)
}
Probes_Probe_Tests_Test::Probes_Probe_Tests_Test(const Probes_Probe_Tests_Test& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_results()) {
    results_ = new ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results(*from.results_);
  } else {
    results_ = NULL;
  }
  if (from.has_target()) {
    target_ = new ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target(*from.target_);
  } else {
    target_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test)
}

void Probes_Probe_Tests_Test::SharedCtor() {
  ::memset(&results_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&results_)) + sizeof(state_));
  _cached_size_ = 0;
}

Probes_Probe_Tests_Test::~Probes_Probe_Tests_Test() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_probes.Probes.Probe.Tests.Test)
  SharedDtor();
}

void Probes_Probe_Tests_Test::SharedDtor() {
  if (this != internal_default_instance()) delete results_;
  if (this != internal_default_instance()) delete target_;
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete state_;
}

void Probes_Probe_Tests_Test::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Probes_Probe_Tests_Test::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Probes_Probe_Tests_Test& Probes_Probe_Tests_Test::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_Test();
  return *internal_default_instance();
}

Probes_Probe_Tests_Test* Probes_Probe_Tests_Test::New(::google::protobuf::Arena* arena) const {
  Probes_Probe_Tests_Test* n = new Probes_Probe_Tests_Test;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Probes_Probe_Tests_Test::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && results_ != NULL) {
    delete results_;
  }
  results_ = NULL;
  if (GetArenaNoVirtual() == NULL && target_ != NULL) {
    delete target_;
  }
  target_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool Probes_Probe_Tests_Test::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3747865426u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results results = 37245791 [(.yext.schemapath) = "/probes/probe/tests/test/results"];
      case 37245791: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 297966330 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_results()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target target = 72482592 [(.yext.schemapath) = "/probes/probe/tests/test/target"];
      case 72482592: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 579860738 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config config = 178866037 [(.yext.schemapath) = "/probes/probe/tests/test/config"];
      case 178866037: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 1430928298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.State state = 468483178 [(.yext.schemapath) = "/probes/probe/tests/test/state"];
      case 468483178: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 3747865426 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_probes.Probes.Probe.Tests.Test)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_probes.Probes.Probe.Tests.Test)
  return false;
#undef DO_
}

void Probes_Probe_Tests_Test::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results results = 37245791 [(.yext.schemapath) = "/probes/probe/tests/test/results"];
  if (this->has_results()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      37245791, *this->results_, output);
  }

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target target = 72482592 [(.yext.schemapath) = "/probes/probe/tests/test/target"];
  if (this->has_target()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      72482592, *this->target_, output);
  }

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config config = 178866037 [(.yext.schemapath) = "/probes/probe/tests/test/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      178866037, *this->config_, output);
  }

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.State state = 468483178 [(.yext.schemapath) = "/probes/probe/tests/test/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      468483178, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_probes.Probes.Probe.Tests.Test)
}

::google::protobuf::uint8* Probes_Probe_Tests_Test::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results results = 37245791 [(.yext.schemapath) = "/probes/probe/tests/test/results"];
  if (this->has_results()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        37245791, *this->results_, deterministic, target);
  }

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target target = 72482592 [(.yext.schemapath) = "/probes/probe/tests/test/target"];
  if (this->has_target()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        72482592, *this->target_, deterministic, target);
  }

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config config = 178866037 [(.yext.schemapath) = "/probes/probe/tests/test/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        178866037, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.State state = 468483178 [(.yext.schemapath) = "/probes/probe/tests/test/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        468483178, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_probes.Probes.Probe.Tests.Test)
  return target;
}

size_t Probes_Probe_Tests_Test::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Results results = 37245791 [(.yext.schemapath) = "/probes/probe/tests/test/results"];
  if (this->has_results()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->results_);
  }

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Target target = 72482592 [(.yext.schemapath) = "/probes/probe/tests/test/target"];
  if (this->has_target()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->target_);
  }

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.Config config = 178866037 [(.yext.schemapath) = "/probes/probe/tests/test/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test.State state = 468483178 [(.yext.schemapath) = "/probes/probe/tests/test/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Probes_Probe_Tests_Test::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test)
  GOOGLE_DCHECK_NE(&from, this);
  const Probes_Probe_Tests_Test* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Probes_Probe_Tests_Test>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_probes.Probes.Probe.Tests.Test)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_probes.Probes.Probe.Tests.Test)
    MergeFrom(*source);
  }
}

void Probes_Probe_Tests_Test::MergeFrom(const Probes_Probe_Tests_Test& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_results()) {
    mutable_results()->::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Results::MergeFrom(from.results());
  }
  if (from.has_target()) {
    mutable_target()->::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Target::MergeFrom(from.target());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_probes::Probes_Probe_Tests_Test_Config::MergeFrom(from.config());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_probes::Probes_Probe_Tests_Test_State::MergeFrom(from.state());
  }
}

void Probes_Probe_Tests_Test::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Probes_Probe_Tests_Test::CopyFrom(const Probes_Probe_Tests_Test& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.Test)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Probes_Probe_Tests_Test::IsInitialized() const {
  return true;
}

void Probes_Probe_Tests_Test::Swap(Probes_Probe_Tests_Test* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Probes_Probe_Tests_Test::InternalSwap(Probes_Probe_Tests_Test* other) {
  using std::swap;
  swap(results_, other->results_);
  swap(target_, other->target_);
  swap(config_, other->config_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Probes_Probe_Tests_Test::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Probes_Probe_Tests_TestKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_probes::_Probes_Probe_Tests_TestKey_default_instance_._instance.get_mutable()->test_ = const_cast< ::openconfig::openconfig_probes::Probes_Probe_Tests_Test*>(
      ::openconfig::openconfig_probes::Probes_Probe_Tests_Test::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Probes_Probe_Tests_TestKey::kNameFieldNumber;
const int Probes_Probe_Tests_TestKey::kTestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Probes_Probe_Tests_TestKey::Probes_Probe_Tests_TestKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_TestKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey)
}
Probes_Probe_Tests_TestKey::Probes_Probe_Tests_TestKey(const Probes_Probe_Tests_TestKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_test()) {
    test_ = new ::openconfig::openconfig_probes::Probes_Probe_Tests_Test(*from.test_);
  } else {
    test_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey)
}

void Probes_Probe_Tests_TestKey::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  test_ = NULL;
  _cached_size_ = 0;
}

Probes_Probe_Tests_TestKey::~Probes_Probe_Tests_TestKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey)
  SharedDtor();
}

void Probes_Probe_Tests_TestKey::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete test_;
}

void Probes_Probe_Tests_TestKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Probes_Probe_Tests_TestKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Probes_Probe_Tests_TestKey& Probes_Probe_Tests_TestKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests_TestKey();
  return *internal_default_instance();
}

Probes_Probe_Tests_TestKey* Probes_Probe_Tests_TestKey::New(::google::protobuf::Arena* arena) const {
  Probes_Probe_Tests_TestKey* n = new Probes_Probe_Tests_TestKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Probes_Probe_Tests_TestKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && test_ != NULL) {
    delete test_;
  }
  test_ = NULL;
  _internal_metadata_.Clear();
}

bool Probes_Probe_Tests_TestKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.yext.schemapath) = "/probes/probe/tests/test/name"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "openconfig.openconfig_probes.Probes.Probe.Tests.TestKey.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_probes.Probes.Probe.Tests.Test test = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_test()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey)
  return false;
#undef DO_
}

void Probes_Probe_Tests_TestKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.yext.schemapath) = "/probes/probe/tests/test/name"];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_probes.Probes.Probe.Tests.TestKey.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test test = 2;
  if (this->has_test()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->test_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey)
}

::google::protobuf::uint8* Probes_Probe_Tests_TestKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.yext.schemapath) = "/probes/probe/tests/test/name"];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_probes.Probes.Probe.Tests.TestKey.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test test = 2;
  if (this->has_test()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->test_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey)
  return target;
}

size_t Probes_Probe_Tests_TestKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1 [(.yext.schemapath) = "/probes/probe/tests/test/name"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .openconfig.openconfig_probes.Probes.Probe.Tests.Test test = 2;
  if (this->has_test()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->test_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Probes_Probe_Tests_TestKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Probes_Probe_Tests_TestKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Probes_Probe_Tests_TestKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey)
    MergeFrom(*source);
  }
}

void Probes_Probe_Tests_TestKey::MergeFrom(const Probes_Probe_Tests_TestKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_test()) {
    mutable_test()->::openconfig::openconfig_probes::Probes_Probe_Tests_Test::MergeFrom(from.test());
  }
}

void Probes_Probe_Tests_TestKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Probes_Probe_Tests_TestKey::CopyFrom(const Probes_Probe_Tests_TestKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests.TestKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Probes_Probe_Tests_TestKey::IsInitialized() const {
  return true;
}

void Probes_Probe_Tests_TestKey::Swap(Probes_Probe_Tests_TestKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Probes_Probe_Tests_TestKey::InternalSwap(Probes_Probe_Tests_TestKey* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(test_, other->test_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Probes_Probe_Tests_TestKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Probes_Probe_Tests::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Probes_Probe_Tests::kTestFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Probes_Probe_Tests::Probes_Probe_Tests()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_probes.Probes.Probe.Tests)
}
Probes_Probe_Tests::Probes_Probe_Tests(const Probes_Probe_Tests& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      test_(from.test_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_probes.Probes.Probe.Tests)
}

void Probes_Probe_Tests::SharedCtor() {
  _cached_size_ = 0;
}

Probes_Probe_Tests::~Probes_Probe_Tests() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_probes.Probes.Probe.Tests)
  SharedDtor();
}

void Probes_Probe_Tests::SharedDtor() {
}

void Probes_Probe_Tests::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Probes_Probe_Tests::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Probes_Probe_Tests& Probes_Probe_Tests::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe_Tests();
  return *internal_default_instance();
}

Probes_Probe_Tests* Probes_Probe_Tests::New(::google::protobuf::Arena* arena) const {
  Probes_Probe_Tests* n = new Probes_Probe_Tests;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Probes_Probe_Tests::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_probes.Probes.Probe.Tests)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  test_.Clear();
  _internal_metadata_.Clear();
}

bool Probes_Probe_Tests::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_probes.Probes.Probe.Tests)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3244466178u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_probes.Probes.Probe.Tests.TestKey test = 405558272 [(.yext.schemapath) = "/probes/probe/tests/test"];
      case 405558272: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 3244466178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_test()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_probes.Probes.Probe.Tests)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_probes.Probes.Probe.Tests)
  return false;
#undef DO_
}

void Probes_Probe_Tests::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_probes.Probes.Probe.Tests)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_probes.Probes.Probe.Tests.TestKey test = 405558272 [(.yext.schemapath) = "/probes/probe/tests/test"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->test_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      405558272, this->test(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_probes.Probes.Probe.Tests)
}

::google::protobuf::uint8* Probes_Probe_Tests::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_probes.Probes.Probe.Tests)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_probes.Probes.Probe.Tests.TestKey test = 405558272 [(.yext.schemapath) = "/probes/probe/tests/test"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->test_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        405558272, this->test(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_probes.Probes.Probe.Tests)
  return target;
}

size_t Probes_Probe_Tests::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_probes.Probes.Probe.Tests)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_probes.Probes.Probe.Tests.TestKey test = 405558272 [(.yext.schemapath) = "/probes/probe/tests/test"];
  {
    unsigned int count = static_cast<unsigned int>(this->test_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->test(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Probes_Probe_Tests::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests)
  GOOGLE_DCHECK_NE(&from, this);
  const Probes_Probe_Tests* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Probes_Probe_Tests>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_probes.Probes.Probe.Tests)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_probes.Probes.Probe.Tests)
    MergeFrom(*source);
  }
}

void Probes_Probe_Tests::MergeFrom(const Probes_Probe_Tests& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_probes.Probes.Probe.Tests)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  test_.MergeFrom(from.test_);
}

void Probes_Probe_Tests::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Probes_Probe_Tests::CopyFrom(const Probes_Probe_Tests& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_probes.Probes.Probe.Tests)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Probes_Probe_Tests::IsInitialized() const {
  return true;
}

void Probes_Probe_Tests::Swap(Probes_Probe_Tests* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Probes_Probe_Tests::InternalSwap(Probes_Probe_Tests* other) {
  using std::swap;
  test_.InternalSwap(&other->test_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Probes_Probe_Tests::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Probes_Probe::InitAsDefaultInstance() {
  ::openconfig::openconfig_probes::_Probes_Probe_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_probes::Probes_Probe_Config*>(
      ::openconfig::openconfig_probes::Probes_Probe_Config::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_probes::Probes_Probe_State*>(
      ::openconfig::openconfig_probes::Probes_Probe_State::internal_default_instance());
  ::openconfig::openconfig_probes::_Probes_Probe_default_instance_._instance.get_mutable()->tests_ = const_cast< ::openconfig::openconfig_probes::Probes_Probe_Tests*>(
      ::openconfig::openconfig_probes::Probes_Probe_Tests::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Probes_Probe::kConfigFieldNumber;
const int Probes_Probe::kStateFieldNumber;
const int Probes_Probe::kTestsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Probes_Probe::Probes_Probe()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_probes.Probes.Probe)
}
Probes_Probe::Probes_Probe(const Probes_Probe& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_tests()) {
    tests_ = new ::openconfig::openconfig_probes::Probes_Probe_Tests(*from.tests_);
  } else {
    tests_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_probes::Probes_Probe_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_probes::Probes_Probe_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_probes.Probes.Probe)
}

void Probes_Probe::SharedCtor() {
  ::memset(&tests_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&tests_)) + sizeof(state_));
  _cached_size_ = 0;
}

Probes_Probe::~Probes_Probe() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_probes.Probes.Probe)
  SharedDtor();
}

void Probes_Probe::SharedDtor() {
  if (this != internal_default_instance()) delete tests_;
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete state_;
}

void Probes_Probe::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Probes_Probe::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Probes_Probe& Probes_Probe::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_Probe();
  return *internal_default_instance();
}

Probes_Probe* Probes_Probe::New(::google::protobuf::Arena* arena) const {
  Probes_Probe* n = new Probes_Probe;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Probes_Probe::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_probes.Probes.Probe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && tests_ != NULL) {
    delete tests_;
  }
  tests_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool Probes_Probe::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_probes.Probes.Probe)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3781152490u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_probes.Probes.Probe.Tests tests = 169946161 [(.yext.schemapath) = "/probes/probe/tests"];
      case 169946161: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 1359569290 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_tests()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_probes.Probes.Probe.Config config = 371483076 [(.yext.schemapath) = "/probes/probe/config"];
      case 371483076: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 2971864610 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_probes.Probes.Probe.State state = 472644061 [(.yext.schemapath) = "/probes/probe/state"];
      case 472644061: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 3781152490 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_probes.Probes.Probe)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_probes.Probes.Probe)
  return false;
#undef DO_
}

void Probes_Probe::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_probes.Probes.Probe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_probes.Probes.Probe.Tests tests = 169946161 [(.yext.schemapath) = "/probes/probe/tests"];
  if (this->has_tests()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      169946161, *this->tests_, output);
  }

  // .openconfig.openconfig_probes.Probes.Probe.Config config = 371483076 [(.yext.schemapath) = "/probes/probe/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      371483076, *this->config_, output);
  }

  // .openconfig.openconfig_probes.Probes.Probe.State state = 472644061 [(.yext.schemapath) = "/probes/probe/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      472644061, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_probes.Probes.Probe)
}

::google::protobuf::uint8* Probes_Probe::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_probes.Probes.Probe)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_probes.Probes.Probe.Tests tests = 169946161 [(.yext.schemapath) = "/probes/probe/tests"];
  if (this->has_tests()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        169946161, *this->tests_, deterministic, target);
  }

  // .openconfig.openconfig_probes.Probes.Probe.Config config = 371483076 [(.yext.schemapath) = "/probes/probe/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        371483076, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_probes.Probes.Probe.State state = 472644061 [(.yext.schemapath) = "/probes/probe/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        472644061, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_probes.Probes.Probe)
  return target;
}

size_t Probes_Probe::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_probes.Probes.Probe)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_probes.Probes.Probe.Tests tests = 169946161 [(.yext.schemapath) = "/probes/probe/tests"];
  if (this->has_tests()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->tests_);
  }

  // .openconfig.openconfig_probes.Probes.Probe.Config config = 371483076 [(.yext.schemapath) = "/probes/probe/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_probes.Probes.Probe.State state = 472644061 [(.yext.schemapath) = "/probes/probe/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Probes_Probe::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_probes.Probes.Probe)
  GOOGLE_DCHECK_NE(&from, this);
  const Probes_Probe* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Probes_Probe>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_probes.Probes.Probe)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_probes.Probes.Probe)
    MergeFrom(*source);
  }
}

void Probes_Probe::MergeFrom(const Probes_Probe& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_probes.Probes.Probe)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_tests()) {
    mutable_tests()->::openconfig::openconfig_probes::Probes_Probe_Tests::MergeFrom(from.tests());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_probes::Probes_Probe_Config::MergeFrom(from.config());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_probes::Probes_Probe_State::MergeFrom(from.state());
  }
}

void Probes_Probe::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_probes.Probes.Probe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Probes_Probe::CopyFrom(const Probes_Probe& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_probes.Probes.Probe)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Probes_Probe::IsInitialized() const {
  return true;
}

void Probes_Probe::Swap(Probes_Probe* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Probes_Probe::InternalSwap(Probes_Probe* other) {
  using std::swap;
  swap(tests_, other->tests_);
  swap(config_, other->config_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Probes_Probe::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Probes_ProbeKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_probes::_Probes_ProbeKey_default_instance_._instance.get_mutable()->probe_ = const_cast< ::openconfig::openconfig_probes::Probes_Probe*>(
      ::openconfig::openconfig_probes::Probes_Probe::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Probes_ProbeKey::kNameFieldNumber;
const int Probes_ProbeKey::kProbeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Probes_ProbeKey::Probes_ProbeKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_ProbeKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_probes.Probes.ProbeKey)
}
Probes_ProbeKey::Probes_ProbeKey(const Probes_ProbeKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_probe()) {
    probe_ = new ::openconfig::openconfig_probes::Probes_Probe(*from.probe_);
  } else {
    probe_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_probes.Probes.ProbeKey)
}

void Probes_ProbeKey::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  probe_ = NULL;
  _cached_size_ = 0;
}

Probes_ProbeKey::~Probes_ProbeKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_probes.Probes.ProbeKey)
  SharedDtor();
}

void Probes_ProbeKey::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete probe_;
}

void Probes_ProbeKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Probes_ProbeKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Probes_ProbeKey& Probes_ProbeKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes_ProbeKey();
  return *internal_default_instance();
}

Probes_ProbeKey* Probes_ProbeKey::New(::google::protobuf::Arena* arena) const {
  Probes_ProbeKey* n = new Probes_ProbeKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Probes_ProbeKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_probes.Probes.ProbeKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && probe_ != NULL) {
    delete probe_;
  }
  probe_ = NULL;
  _internal_metadata_.Clear();
}

bool Probes_ProbeKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_probes.Probes.ProbeKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.yext.schemapath) = "/probes/probe/name"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "openconfig.openconfig_probes.Probes.ProbeKey.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_probes.Probes.Probe probe = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_probe()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_probes.Probes.ProbeKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_probes.Probes.ProbeKey)
  return false;
#undef DO_
}

void Probes_ProbeKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_probes.Probes.ProbeKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.yext.schemapath) = "/probes/probe/name"];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_probes.Probes.ProbeKey.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .openconfig.openconfig_probes.Probes.Probe probe = 2;
  if (this->has_probe()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->probe_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_probes.Probes.ProbeKey)
}

::google::protobuf::uint8* Probes_ProbeKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_probes.Probes.ProbeKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.yext.schemapath) = "/probes/probe/name"];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_probes.Probes.ProbeKey.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .openconfig.openconfig_probes.Probes.Probe probe = 2;
  if (this->has_probe()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->probe_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_probes.Probes.ProbeKey)
  return target;
}

size_t Probes_ProbeKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_probes.Probes.ProbeKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1 [(.yext.schemapath) = "/probes/probe/name"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .openconfig.openconfig_probes.Probes.Probe probe = 2;
  if (this->has_probe()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->probe_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Probes_ProbeKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_probes.Probes.ProbeKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Probes_ProbeKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Probes_ProbeKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_probes.Probes.ProbeKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_probes.Probes.ProbeKey)
    MergeFrom(*source);
  }
}

void Probes_ProbeKey::MergeFrom(const Probes_ProbeKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_probes.Probes.ProbeKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_probe()) {
    mutable_probe()->::openconfig::openconfig_probes::Probes_Probe::MergeFrom(from.probe());
  }
}

void Probes_ProbeKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_probes.Probes.ProbeKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Probes_ProbeKey::CopyFrom(const Probes_ProbeKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_probes.Probes.ProbeKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Probes_ProbeKey::IsInitialized() const {
  return true;
}

void Probes_ProbeKey::Swap(Probes_ProbeKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Probes_ProbeKey::InternalSwap(Probes_ProbeKey* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(probe_, other->probe_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Probes_ProbeKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Probes::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Probes::kProbeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Probes::Probes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_probes.Probes)
}
Probes::Probes(const Probes& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      probe_(from.probe_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_probes.Probes)
}

void Probes::SharedCtor() {
  _cached_size_ = 0;
}

Probes::~Probes() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_probes.Probes)
  SharedDtor();
}

void Probes::SharedDtor() {
}

void Probes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Probes::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Probes& Probes::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::InitDefaultsProbes();
  return *internal_default_instance();
}

Probes* Probes::New(::google::protobuf::Arena* arena) const {
  Probes* n = new Probes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Probes::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_probes.Probes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  probe_.Clear();
  _internal_metadata_.Clear();
}

bool Probes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_probes.Probes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2072933914u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_probes.Probes.ProbeKey probe = 259116739 [(.yext.schemapath) = "/probes/probe"];
      case 259116739: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 2072933914 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_probe()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_probes.Probes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_probes.Probes)
  return false;
#undef DO_
}

void Probes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_probes.Probes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_probes.Probes.ProbeKey probe = 259116739 [(.yext.schemapath) = "/probes/probe"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->probe_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      259116739, this->probe(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_probes.Probes)
}

::google::protobuf::uint8* Probes::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_probes.Probes)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_probes.Probes.ProbeKey probe = 259116739 [(.yext.schemapath) = "/probes/probe"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->probe_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        259116739, this->probe(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_probes.Probes)
  return target;
}

size_t Probes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_probes.Probes)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_probes.Probes.ProbeKey probe = 259116739 [(.yext.schemapath) = "/probes/probe"];
  {
    unsigned int count = static_cast<unsigned int>(this->probe_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->probe(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Probes::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_probes.Probes)
  GOOGLE_DCHECK_NE(&from, this);
  const Probes* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Probes>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_probes.Probes)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_probes.Probes)
    MergeFrom(*source);
  }
}

void Probes::MergeFrom(const Probes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_probes.Probes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  probe_.MergeFrom(from.probe_);
}

void Probes::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_probes.Probes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Probes::CopyFrom(const Probes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_probes.Probes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Probes::IsInitialized() const {
  return true;
}

void Probes::Swap(Probes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Probes::InternalSwap(Probes* other) {
  using std::swap;
  probe_.InternalSwap(&other->probe_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Probes::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fprobes_2fopenconfig_5fprobes_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace openconfig_probes
}  // namespace openconfig

// @@protoc_insertion_point(global_scope)
