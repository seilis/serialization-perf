// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: openconfig/openconfig_optical_amplifier/openconfig_optical_amplifier.proto

#include "openconfig/openconfig_optical_amplifier/openconfig_optical_amplifier.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace openconfig {
namespace openconfig_optical_amplifier {
class OpticalAmplifier_Amplifiers_Amplifier_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpticalAmplifier_Amplifiers_Amplifier_Config>
      _instance;
} _OpticalAmplifier_Amplifiers_Amplifier_Config_default_instance_;
class OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain>
      _instance;
} _OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain_default_instance_;
class OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTiltDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt>
      _instance;
} _OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt_default_instance_;
class OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand>
      _instance;
} _OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand_default_instance_;
class OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand>
      _instance;
} _OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand_default_instance_;
class OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal>
      _instance;
} _OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal_default_instance_;
class OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent>
      _instance;
} _OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent_default_instance_;
class OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLossDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss>
      _instance;
} _OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss_default_instance_;
class OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand>
      _instance;
} _OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand_default_instance_;
class OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBandDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand>
      _instance;
} _OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand_default_instance_;
class OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal>
      _instance;
} _OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal_default_instance_;
class OpticalAmplifier_Amplifiers_Amplifier_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpticalAmplifier_Amplifiers_Amplifier_State>
      _instance;
} _OpticalAmplifier_Amplifiers_Amplifier_State_default_instance_;
class OpticalAmplifier_Amplifiers_AmplifierDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpticalAmplifier_Amplifiers_Amplifier>
      _instance;
} _OpticalAmplifier_Amplifiers_Amplifier_default_instance_;
class OpticalAmplifier_Amplifiers_AmplifierKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpticalAmplifier_Amplifiers_AmplifierKey>
      _instance;
} _OpticalAmplifier_Amplifiers_AmplifierKey_default_instance_;
class OpticalAmplifier_AmplifiersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpticalAmplifier_Amplifiers>
      _instance;
} _OpticalAmplifier_Amplifiers_default_instance_;
class OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config>
      _instance;
} _OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config_default_instance_;
class OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPowerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower>
      _instance;
} _OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower_default_instance_;
class OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrentDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent>
      _instance;
} _OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent_default_instance_;
class OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPowerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower>
      _instance;
} _OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower_default_instance_;
class OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State>
      _instance;
} _OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_default_instance_;
class OpticalAmplifier_SupervisoryChannels_SupervisoryChannelDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpticalAmplifier_SupervisoryChannels_SupervisoryChannel>
      _instance;
} _OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_default_instance_;
class OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey>
      _instance;
} _OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey_default_instance_;
class OpticalAmplifier_SupervisoryChannelsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpticalAmplifier_SupervisoryChannels>
      _instance;
} _OpticalAmplifier_SupervisoryChannels_default_instance_;
class OpticalAmplifierDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<OpticalAmplifier>
      _instance;
} _OpticalAmplifier_default_instance_;
}  // namespace openconfig_optical_amplifier
}  // namespace openconfig
namespace protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto {
void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBoolValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  {
    void* ptr = &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config::InitAsDefaultInstance();
}

void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_ConfigImpl);
}

void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_ActualGainImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain_default_instance_;
    new (ptr) ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::InitAsDefaultInstance();
}

void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_ActualGain() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_ActualGainImpl);
}

void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTiltImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt_default_instance_;
    new (ptr) ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::InitAsDefaultInstance();
}

void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTiltImpl);
}

void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBandImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand_default_instance_;
    new (ptr) ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::InitAsDefaultInstance();
}

void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBandImpl);
}

void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBandImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand_default_instance_;
    new (ptr) ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::InitAsDefaultInstance();
}

void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBandImpl);
}

void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotalImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal_default_instance_;
    new (ptr) ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::InitAsDefaultInstance();
}

void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotalImpl);
}

void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrentImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent_default_instance_;
    new (ptr) ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::InitAsDefaultInstance();
}

void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrentImpl);
}

void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLossImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss_default_instance_;
    new (ptr) ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::InitAsDefaultInstance();
}

void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLossImpl);
}

void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBandImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand_default_instance_;
    new (ptr) ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::InitAsDefaultInstance();
}

void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBandImpl);
}

void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBandImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand_default_instance_;
    new (ptr) ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::InitAsDefaultInstance();
}

void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBandImpl);
}

void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotalImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal_default_instance_;
    new (ptr) ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::InitAsDefaultInstance();
}

void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotalImpl);
}

void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_ActualGain();
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBoolValue();
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand();
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand();
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal();
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent();
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss();
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand();
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand();
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  {
    void* ptr = &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_default_instance_;
    new (ptr) ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State::InitAsDefaultInstance();
}

void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_StateImpl);
}

void InitDefaultsOpticalAmplifier_Amplifiers_AmplifierImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_Config();
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State();
  {
    void* ptr = &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_default_instance_;
    new (ptr) ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier::InitAsDefaultInstance();
}

void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpticalAmplifier_Amplifiers_AmplifierImpl);
}

void InitDefaultsOpticalAmplifier_Amplifiers_AmplifierKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier();
  {
    void* ptr = &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_AmplifierKey_default_instance_;
    new (ptr) ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_AmplifierKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_AmplifierKey::InitAsDefaultInstance();
}

void InitDefaultsOpticalAmplifier_Amplifiers_AmplifierKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpticalAmplifier_Amplifiers_AmplifierKeyImpl);
}

void InitDefaultsOpticalAmplifier_AmplifiersImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_AmplifierKey();
  {
    void* ptr = &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_default_instance_;
    new (ptr) ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers::InitAsDefaultInstance();
}

void InitDefaultsOpticalAmplifier_Amplifiers() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpticalAmplifier_AmplifiersImpl);
}

void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::InitAsDefaultInstance();
}

void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_ConfigImpl);
}

void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPowerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower_default_instance_;
    new (ptr) ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::InitAsDefaultInstance();
}

void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPowerImpl);
}

void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrentImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent_default_instance_;
    new (ptr) ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::InitAsDefaultInstance();
}

void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrentImpl);
}

void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPowerImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsDecimal64Value();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower_default_instance_;
    new (ptr) ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::InitAsDefaultInstance();
}

void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPowerImpl);
}

void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent();
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower();
  {
    void* ptr = &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_default_instance_;
    new (ptr) ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::InitAsDefaultInstance();
}

void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_StateImpl);
}

void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannelImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config();
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State();
  {
    void* ptr = &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_default_instance_;
    new (ptr) ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::InitAsDefaultInstance();
}

void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannelImpl);
}

void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannelKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel();
  {
    void* ptr = &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey_default_instance_;
    new (ptr) ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::InitAsDefaultInstance();
}

void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannelKeyImpl);
}

void InitDefaultsOpticalAmplifier_SupervisoryChannelsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey();
  {
    void* ptr = &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_default_instance_;
    new (ptr) ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels::InitAsDefaultInstance();
}

void InitDefaultsOpticalAmplifier_SupervisoryChannels() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpticalAmplifier_SupervisoryChannelsImpl);
}

void InitDefaultsOpticalAmplifierImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers();
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels();
  {
    void* ptr = &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_default_instance_;
    new (ptr) ::openconfig::openconfig_optical_amplifier::OpticalAmplifier();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier::InitAsDefaultInstance();
}

void InitDefaultsOpticalAmplifier() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsOpticalAmplifierImpl);
}

::google::protobuf::Metadata file_level_metadata[24];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config, amp_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config, enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config, fiber_type_profile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config, gain_range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config, target_gain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config, target_gain_tilt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config, target_output_power_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State, actual_gain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State, actual_gain_tilt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State, amp_mode_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State, component_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State, egress_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State, enabled_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State, fiber_type_profile_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State, gain_range_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State, ingress_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State, input_power_c_band_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State, input_power_l_band_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State, input_power_total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State, laser_bias_current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State, optical_return_loss_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State, output_power_c_band_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State, output_power_l_band_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State, output_power_total_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State, target_gain_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State, target_gain_tilt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State, target_output_power_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_AmplifierKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_AmplifierKey, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_AmplifierKey, amplifier_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers, amplifier_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config, interface_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower, avg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower, instant_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower, interval_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower, max_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower, min_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State, input_power_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State, interface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State, laser_bias_current_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State, output_power_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey, interface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey, supervisory_channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels, supervisory_channel_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier, amplifiers_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_optical_amplifier::OpticalAmplifier, supervisory_channels_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config)},
  { 14, -1, sizeof(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain)},
  { 24, -1, sizeof(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt)},
  { 34, -1, sizeof(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand)},
  { 44, -1, sizeof(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand)},
  { 54, -1, sizeof(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal)},
  { 64, -1, sizeof(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent)},
  { 74, -1, sizeof(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss)},
  { 84, -1, sizeof(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand)},
  { 94, -1, sizeof(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand)},
  { 104, -1, sizeof(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal)},
  { 114, -1, sizeof(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State)},
  { 141, -1, sizeof(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier)},
  { 148, -1, sizeof(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_AmplifierKey)},
  { 155, -1, sizeof(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers)},
  { 161, -1, sizeof(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config)},
  { 167, -1, sizeof(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower)},
  { 177, -1, sizeof(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent)},
  { 187, -1, sizeof(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower)},
  { 197, -1, sizeof(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State)},
  { 206, -1, sizeof(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel)},
  { 213, -1, sizeof(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey)},
  { 220, -1, sizeof(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels)},
  { 226, -1, sizeof(::openconfig::openconfig_optical_amplifier::OpticalAmplifier)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_AmplifierKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "openconfig/openconfig_optical_amplifier/openconfig_optical_amplifier.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 24);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\nJopenconfig/openconfig_optical_amplifie"
      "r/openconfig_optical_amplifier.proto\022\'op"
      "enconfig.openconfig_optical_amplifier\0328g"
      "ithub.com/openconfig/ygot/proto/ywrapper"
      "/ywrapper.proto\0320github.com/openconfig/y"
      "got/proto/yext/yext.proto\032\034openconfig/en"
      "ums/enums.proto\"\232z\n\020OpticalAmplifier\022~\n\n"
      "amplifiers\030\203\252\274\261\001 \001(\0132D.openconfig.openco"
      "nfig_optical_amplifier.OpticalAmplifier."
      "AmplifiersB \202A\035/optical-amplifier/amplif"
      "iers\022\232\001\n\024supervisory_channels\030\233\351\333\r \001(\0132M"
      ".openconfig.openconfig_optical_amplifier"
      ".OpticalAmplifier.SupervisoryChannelsB*\202"
      "A\'/optical-amplifier/supervisory-channel"
      "s\032\235Y\n\nAmplifiers\022\223\001\n\tamplifier\030\327\200\346~ \003(\0132"
      "Q.openconfig.openconfig_optical_amplifie"
      "r.OpticalAmplifier.Amplifiers.AmplifierK"
      "eyB*\202A\'/optical-amplifier/amplifiers/amp"
      "lifier\032\305V\n\tAmplifier\022\233\001\n\006config\030\310\203\304\026 \001(\013"
      "2U.openconfig.openconfig_optical_amplifi"
      "er.OpticalAmplifier.Amplifiers.Amplifier"
      ".ConfigB1\202A./optical-amplifier/amplifier"
      "s/amplifier/config\022\231\001\n\005state\030\341\254\364\240\001 \001(\0132T"
      ".openconfig.openconfig_optical_amplifier"
      ".OpticalAmplifier.Amplifiers.Amplifier.S"
      "tateB0\202A-/optical-amplifier/amplifiers/a"
      "mplifier/state\032\222\t\n\006Config\022\221\001\n\010amp_mode\030\265"
      "\206\323e \001(\0162@.openconfig.enums.OpenconfigOpt"
      "icalAmplifierOPTICALAMPLIFIERMODEB:\202A7/o"
      "ptical-amplifier/amplifiers/amplifier/co"
      "nfig/amp-mode\022c\n\007enabled\030\372\311\201\203\001 \001(\0132\023.ywr"
      "apper.BoolValueB9\202A6/optical-amplifier/a"
      "mplifiers/amplifier/config/enabled\022\242\001\n\022f"
      "iber_type_profile\030\344\227\314\311\001 \001(\0162<.openconfig"
      ".enums.OpenconfigOpticalAmplifierFIBERTY"
      "PEPROFILEBD\202AA/optical-amplifier/amplifi"
      "ers/amplifier/config/fiber-type-profile\022"
      "\213\001\n\ngain_range\030\302\365\321\272\001 \001(\01625.openconfig.en"
      "ums.OpenconfigOpticalAmplifierGAINRANGEB"
      "<\202A9/optical-amplifier/amplifiers/amplif"
      "ier/config/gain-range\022^\n\004name\030\362\225\242q \001(\0132\025"
      ".ywrapper.StringValueB6\202A3/optical-ampli"
      "fier/amplifiers/amplifier/config/name\022p\n"
      "\013target_gain\030\230\344\230\211\001 \001(\0132\030.ywrapper.Decima"
      "l64ValueB=\202A:/optical-amplifier/amplifie"
      "rs/amplifier/config/target-gain\022z\n\020targe"
      "t_gain_tilt\030\370\336\203\377\001 \001(\0132\030.ywrapper.Decimal"
      "64ValueBB\202A\?/optical-amplifier/amplifier"
      "s/amplifier/config/target-gain-tilt\022\200\001\n\023"
      "target_output_power\030\352\257\233\332\001 \001(\0132\030.ywrapper"
      ".Decimal64ValueBE\202AB/optical-amplifier/a"
      "mplifiers/amplifier/config/target-output"
      "-power\022\212\001\n\004type\030\257\336\227\355\001 \001(\0162@.openconfig.e"
      "nums.OpenconfigOpticalAmplifierOPTICALAM"
      "PLIFIERTYPEB6\202A3/optical-amplifier/ampli"
      "fiers/amplifier/config/type\032\350J\n\005State\022\266\001"
      "\n\013actual_gain\030\262\227\205\314\001 \001(\0132_.openconfig.ope"
      "nconfig_optical_amplifier.OpticalAmplifi"
      "er.Amplifiers.Amplifier.State.ActualGain"
      "B<\202A9/optical-amplifier/amplifiers/ampli"
      "fier/state/actual-gain\022\304\001\n\020actual_gain_t"
      "ilt\030\216\304\303\305\001 \001(\0132c.openconfig.openconfig_op"
      "tical_amplifier.OpticalAmplifier.Amplifi"
      "ers.Amplifier.State.ActualGainTiltBA\202A>/"
      "optical-amplifier/amplifiers/amplifier/s"
      "tate/actual-gain-tilt\022\221\001\n\010amp_mode\030\216\313\350\225\001"
      " \001(\0162@.openconfig.enums.OpenconfigOptica"
      "lAmplifierOPTICALAMPLIFIERMODEB9\202A6/opti"
      "cal-amplifier/amplifiers/amplifier/state"
      "/amp-mode\022g\n\tcomponent\030\201\221\240; \001(\0132\025.ywrapp"
      "er.StringValueB:\202A7/optical-amplifier/am"
      "plifiers/amplifier/state/component\022l\n\013eg"
      "ress_port\030\357\342\312\374\001 \001(\0132\025.ywrapper.StringVal"
      "ueB<\202A9/optical-amplifier/amplifiers/amp"
      "lifier/state/egress-port\022b\n\007enabled\030\227\255\377\311"
      "\001 \001(\0132\023.ywrapper.BoolValueB8\202A5/optical-"
      "amplifier/amplifiers/amplifier/state/ena"
      "bled\022\241\001\n\022fiber_type_profile\030\333\377\365\304\001 \001(\0162<."
      "openconfig.enums.OpenconfigOpticalAmplif"
      "ierFIBERTYPEPROFILEBC\202A@/optical-amplifi"
      "er/amplifiers/amplifier/state/fiber-type"
      "-profile\022\212\001\n\ngain_range\030\331\237\374\327\001 \001(\01625.open"
      "config.enums.OpenconfigOpticalAmplifierG"
      "AINRANGEB;\202A8/optical-amplifier/amplifie"
      "rs/amplifier/state/gain-range\022n\n\014ingress"
      "_port\030\307\201\342\375\001 \001(\0132\025.ywrapper.StringValueB="
      "\202A:/optical-amplifier/amplifiers/amplifi"
      "er/state/ingress-port\022\311\001\n\022input_power_c_"
      "band\030\354\324\240\365\001 \001(\0132d.openconfig.openconfig_o"
      "ptical_amplifier.OpticalAmplifier.Amplif"
      "iers.Amplifier.State.InputPowerCBandBC\202A"
      "@/optical-amplifier/amplifiers/amplifier"
      "/state/input-power-c-band\022\311\001\n\022input_powe"
      "r_l_band\030\341\364\375\254\001 \001(\0132d.openconfig.openconf"
      "ig_optical_amplifier.OpticalAmplifier.Am"
      "plifiers.Amplifier.State.InputPowerLBand"
      "BC\202A@/optical-amplifier/amplifiers/ampli"
      "fier/state/input-power-l-band\022\307\001\n\021input_"
      "power_total\030\365\231\245\212\001 \001(\0132d.openconfig.openc"
      "onfig_optical_amplifier.OpticalAmplifier"
      ".Amplifiers.Amplifier.State.InputPowerTo"
      "talBB\202A\?/optical-amplifier/amplifiers/am"
      "plifier/state/input-power-total\022\312\001\n\022lase"
      "r_bias_current\030\221\250\302\255\001 \001(\0132e.openconfig.op"
      "enconfig_optical_amplifier.OpticalAmplif"
      "ier.Amplifiers.Amplifier.State.LaserBias"
      "CurrentBC\202A@/optical-amplifier/amplifier"
      "s/amplifier/state/laser-bias-current\022^\n\004"
      "name\030\225\357\230\304\001 \001(\0132\025.ywrapper.StringValueB5\202"
      "A2/optical-amplifier/amplifiers/amplifie"
      "r/state/name\022\313\001\n\023optical_return_loss\030\215\301o"
      " \001(\0132f.openconfig.openconfig_optical_amp"
      "lifier.OpticalAmplifier.Amplifiers.Ampli"
      "fier.State.OpticalReturnLossBD\202AA/optica"
      "l-amplifier/amplifiers/amplifier/state/o"
      "ptical-return-loss\022\314\001\n\023output_power_c_ba"
      "nd\030\341\341\301\376\001 \001(\0132e.openconfig.openconfig_opt"
      "ical_amplifier.OpticalAmplifier.Amplifie"
      "rs.Amplifier.State.OutputPowerCBandBD\202AA"
      "/optical-amplifier/amplifiers/amplifier/"
      "state/output-power-c-band\022\313\001\n\023output_pow"
      "er_l_band\030\354\301\344F \001(\0132e.openconfig.openconf"
      "ig_optical_amplifier.OpticalAmplifier.Am"
      "plifiers.Amplifier.State.OutputPowerLBan"
      "dBD\202AA/optical-amplifier/amplifiers/ampl"
      "ifier/state/output-power-l-band\022\311\001\n\022outp"
      "ut_power_total\030\366\226\241Q \001(\0132e.openconfig.ope"
      "nconfig_optical_amplifier.OpticalAmplifi"
      "er.Amplifiers.Amplifier.State.OutputPowe"
      "rTotalBC\202A@/optical-amplifier/amplifiers"
      "/amplifier/state/output-power-total\022o\n\013t"
      "arget_gain\030\241\341\276\266\001 \001(\0132\030.ywrapper.Decimal6"
      "4ValueB<\202A9/optical-amplifier/amplifiers"
      "/amplifier/state/target-gain\022x\n\020target_g"
      "ain_tilt\030\233\356\372x \001(\0132\030.ywrapper.Decimal64Va"
      "lueBA\202A>/optical-amplifier/amplifiers/am"
      "plifier/state/target-gain-tilt\022~\n\023target"
      "_output_power\030\263\225\325\022 \001(\0132\030.ywrapper.Decima"
      "l64ValueBD\202AA/optical-amplifier/amplifie"
      "rs/amplifier/state/target-output-power\022\210"
      "\001\n\004type\030\224\203\325\r \001(\0162@.openconfig.enums.Open"
      "configOpticalAmplifierOPTICALAMPLIFIERTY"
      "PEB5\202A2/optical-amplifier/amplifiers/amp"
      "lifier/state/type\032\266\004\n\nActualGain\022j\n\003avg\030"
      "\317\266\352J \001(\0132\030.ywrapper.Decimal64ValueB@\202A=/"
      "optical-amplifier/amplifiers/amplifier/s"
      "tate/actual-gain/avg\022r\n\007instant\030\270\340\2253 \001(\013"
      "2\030.ywrapper.Decimal64ValueBD\202AA/optical-"
      "amplifier/amplifiers/amplifier/state/act"
      "ual-gain/instant\022o\n\010interval\030\306\266\336\023 \001(\0132\023."
      "ywrapper.UintValueBE\202AB/optical-amplifie"
      "r/amplifiers/amplifier/state/actual-gain"
      "/interval\022j\n\003max\030\241\331\305B \001(\0132\030.ywrapper.Dec"
      "imal64ValueB@\202A=/optical-amplifier/ampli"
      "fiers/amplifier/state/actual-gain/max\022k\n"
      "\003min\030\237\362\305\202\001 \001(\0132\030.ywrapper.Decimal64Value"
      "B@\202A=/optical-amplifier/amplifiers/ampli"
      "fier/state/actual-gain/min\032\326\004\n\016ActualGai"
      "nTilt\022p\n\003avg\030\203\206\246\243\001 \001(\0132\030.ywrapper.Decima"
      "l64ValueBE\202AB/optical-amplifier/amplifie"
      "rs/amplifier/state/actual-gain-tilt/avg\022"
      "x\n\007instant\030\374\333\330\255\001 \001(\0132\030.ywrapper.Decimal6"
      "4ValueBI\202AF/optical-amplifier/amplifiers"
      "/amplifier/state/actual-gain-tilt/instan"
      "t\022u\n\010interval\030\312\353\374\325\001 \001(\0132\023.ywrapper.UintV"
      "alueBJ\202AG/optical-amplifier/amplifiers/a"
      "mplifier/state/actual-gain-tilt/interval"
      "\022p\n\003max\030\255\230\264\332\001 \001(\0132\030.ywrapper.Decimal64Va"
      "lueBE\202AB/optical-amplifier/amplifiers/am"
      "plifier/state/actual-gain-tilt/max\022o\n\003mi"
      "n\030\203\261\264\032 \001(\0132\030.ywrapper.Decimal64ValueBE\202A"
      "B/optical-amplifier/amplifiers/amplifier"
      "/state/actual-gain-tilt/min\032\340\004\n\017InputPow"
      "erCBand\022r\n\003avg\030\225\302\363\334\001 \001(\0132\030.ywrapper.Deci"
      "mal64ValueBG\202AD/optical-amplifier/amplif"
      "iers/amplifier/state/input-power-c-band/"
      "avg\022z\n\007instant\030\222\323\346\351\001 \001(\0132\030.ywrapper.Deci"
      "mal64ValueBK\202AH/optical-amplifier/amplif"
      "iers/amplifier/state/input-power-c-band/"
      "instant\022v\n\010interval\030\364\304\305\032 \001(\0132\023.ywrapper."
      "UintValueBL\202AI/optical-amplifier/amplifi"
      "ers/amplifier/state/input-power-c-band/i"
      "nterval\022q\n\003max\030\227\250\354u \001(\0132\030.ywrapper.Decim"
      "al64ValueBG\202AD/optical-amplifier/amplifi"
      "ers/amplifier/state/input-power-c-band/m"
      "ax\022r\n\003min\030\351\302\354\265\001 \001(\0132\030.ywrapper.Decimal64"
      "ValueBG\202AD/optical-amplifier/amplifiers/"
      "amplifier/state/input-power-c-band/min\032\341"
      "\004\n\017InputPowerLBand\022r\n\003avg\030\374\217\336\214\001 \001(\0132\030.yw"
      "rapper.Decimal64ValueBG\202AD/optical-ampli"
      "fier/amplifiers/amplifier/state/input-po"
      "wer-l-band/avg\022y\n\007instant\030\247\252\2038 \001(\0132\030.ywr"
      "apper.Decimal64ValueBK\202AH/optical-amplif"
      "ier/amplifiers/amplifier/state/input-pow"
      "er-l-band/instant\022w\n\010interval\030\267\265\344\242\001 \001(\0132"
      "\023.ywrapper.UintValueBL\202AI/optical-amplif"
      "ier/amplifiers/amplifier/state/input-pow"
      "er-l-band/interval\022r\n\003max\030\226\254\202\365\001 \001(\0132\030.yw"
      "rapper.Decimal64ValueBG\202AD/optical-ampli"
      "fier/amplifiers/amplifier/state/input-po"
      "wer-l-band/max\022r\n\003min\030\270\223\202\265\001 \001(\0132\030.ywrapp"
      "er.Decimal64ValueBG\202AD/optical-amplifier"
      "/amplifiers/amplifier/state/input-power-"
      "l-band/min\032\332\004\n\017InputPowerTotal\022p\n\003avg\030\370\365"
      "\3773 \001(\0132\030.ywrapper.Decimal64ValueBF\202AC/op"
      "tical-amplifier/amplifiers/amplifier/sta"
      "te/input-power-total/avg\022x\n\007instant\030\243\217\315|"
      " \001(\0132\030.ywrapper.Decimal64ValueBJ\202AG/opti"
      "cal-amplifier/amplifiers/amplifier/state"
      "/input-power-total/instant\022v\n\010interval\030\203"
      "\237\242\357\001 \001(\0132\023.ywrapper.UintValueBK\202AH/optic"
      "al-amplifier/amplifiers/amplifier/state/"
      "input-power-total/interval\022q\n\003max\030\272\341\370\334\001 "
      "\001(\0132\030.ywrapper.Decimal64ValueBF\202AC/optic"
      "al-amplifier/amplifiers/amplifier/state/"
      "input-power-total/max\022p\n\003min\030\264\372\370\034 \001(\0132\030."
      "ywrapper.Decimal64ValueBF\202AC/optical-amp"
      "lifier/amplifiers/amplifier/state/input-"
      "power-total/min\032\341\004\n\020LaserBiasCurrent\022q\n\003"
      "avg\030\314\306\341_ \001(\0132\030.ywrapper.Decimal64ValueBG"
      "\202AD/optical-amplifier/amplifiers/amplifi"
      "er/state/laser-bias-current/avg\022z\n\007insta"
      "nt\030\267\327\202\377\001 \001(\0132\030.ywrapper.Decimal64ValueBK"
      "\202AH/optical-amplifier/amplifiers/amplifi"
      "er/state/laser-bias-current/instant\022v\n\010i"
      "nterval\030\347\231\367\027 \001(\0132\023.ywrapper.UintValueBL\202"
      "AI/optical-amplifier/amplifiers/amplifie"
      "r/state/laser-bias-current/interval\022r\n\003m"
      "ax\030\346\245\213\310\001 \001(\0132\030.ywrapper.Decimal64ValueBG"
      "\202AD/optical-amplifier/amplifiers/amplifi"
      "er/state/laser-bias-current/max\022r\n\003min\030\350"
      "\214\213\210\001 \001(\0132\030.ywrapper.Decimal64ValueBG\202AD/"
      "optical-amplifier/amplifiers/amplifier/s"
      "tate/laser-bias-current/min\032\346\004\n\021OpticalR"
      "eturnLoss\022r\n\003avg\030\340\344\344\n \001(\0132\030.ywrapper.Dec"
      "imal64ValueBH\202AE/optical-amplifier/ampli"
      "fiers/amplifier/state/optical-return-los"
      "s/avg\022z\n\007instant\030\373\236\230; \001(\0132\030.ywrapper.Dec"
      "imal64ValueBL\202AI/optical-amplifier/ampli"
      "fiers/amplifier/state/optical-return-los"
      "s/instant\022x\n\010interval\030\213\322\201\246\001 \001(\0132\023.ywrapp"
      "er.UintValueBM\202AJ/optical-amplifier/ampl"
      "ifiers/amplifier/state/optical-return-lo"
      "ss/interval\022s\n\003max\030\302\213\273\262\001 \001(\0132\030.ywrapper."
      "Decimal64ValueBH\202AE/optical-amplifier/am"
      "plifiers/amplifier/state/optical-return-"
      "loss/max\022r\n\003min\030\314\362\272r \001(\0132\030.ywrapper.Deci"
      "mal64ValueBH\202AE/optical-amplifier/amplif"
      "iers/amplifier/state/optical-return-loss"
      "/min\032\344\004\n\020OutputPowerCBand\022r\n\003avg\030\374\314\205L \001("
      "\0132\030.ywrapper.Decimal64ValueBH\202AE/optical"
      "-amplifier/amplifiers/amplifier/state/ou"
      "tput-power-c-band/avg\022z\n\007instant\030\247\267\250J \001("
      "\0132\030.ywrapper.Decimal64ValueBL\202AI/optical"
      "-amplifier/amplifiers/amplifier/state/ou"
      "tput-power-c-band/instant\022w\n\010interval\030\267\254"
      "\314m \001(\0132\023.ywrapper.UintValueBM\202AJ/optical"
      "-amplifier/amplifiers/amplifier/state/ou"
      "tput-power-c-band/interval\022s\n\003max\030\226\351\251\264\001 "
      "\001(\0132\030.ywrapper.Decimal64ValueBH\202AE/optic"
      "al-amplifier/amplifiers/amplifier/state/"
      "output-power-c-band/max\022r\n\003min\030\270\320\251t \001(\0132"
      "\030.ywrapper.Decimal64ValueBH\202AE/optical-a"
      "mplifier/amplifiers/amplifier/state/outp"
      "ut-power-c-band/min\032\346\004\n\020OutputPowerLBand"
      "\022s\n\003avg\030\225\377\232\234\001 \001(\0132\030.ywrapper.Decimal64Va"
      "lueBH\202AE/optical-amplifier/amplifiers/am"
      "plifier/state/output-power-l-band/avg\022{\n"
      "\007instant\030\222\340\213\374\001 \001(\0132\030.ywrapper.Decimal64V"
      "alueBL\202AI/optical-amplifier/amplifiers/a"
      "mplifier/state/output-power-l-band/insta"
      "nt\022x\n\010interval\030\364\273\255\345\001 \001(\0132\023.ywrapper.Uint"
      "ValueBM\202AJ/optical-amplifier/amplifiers/"
      "amplifier/state/output-power-l-band/inte"
      "rval\022r\n\003max\030\227\345\2235 \001(\0132\030.ywrapper.Decimal6"
      "4ValueBH\202AE/optical-amplifier/amplifiers"
      "/amplifier/state/output-power-l-band/max"
      "\022r\n\003min\030\351\377\223u \001(\0132\030.ywrapper.Decimal64Val"
      "ueBH\202AE/optical-amplifier/amplifiers/amp"
      "lifier/state/output-power-l-band/min\032\337\004\n"
      "\020OutputPowerTotal\022q\n\003avg\030\273\202\312i \001(\0132\030.ywra"
      "pper.Decimal64ValueBG\202AD/optical-amplifi"
      "er/amplifiers/amplifier/state/output-pow"
      "er-total/avg\022y\n\007instant\030\304\244\364\007 \001(\0132\030.ywrap"
      "per.Decimal64ValueBK\202AH/optical-amplifie"
      "r/amplifiers/amplifier/state/output-powe"
      "r-total/instant\022v\n\010interval\030\302\264\206\034 \001(\0132\023.y"
      "wrapper.UintValueBL\202AI/optical-amplifier"
      "/amplifiers/amplifier/state/output-power"
      "-total/interval\022r\n\003max\030\305\263\364\241\001 \001(\0132\030.ywrap"
      "per.Decimal64ValueBG\202AD/optical-amplifie"
      "r/amplifiers/amplifier/state/output-powe"
      "r-total/max\022q\n\003min\030\313\232\364a \001(\0132\030.ywrapper.D"
      "ecimal64ValueBG\202AD/optical-amplifier/amp"
      "lifiers/amplifier/state/output-power-tot"
      "al/min\032\260\001\n\014AmplifierKey\022=\n\004name\030\001 \001(\tB/\202"
      "A,/optical-amplifier/amplifiers/amplifie"
      "r/name\022a\n\tamplifier\030\002 \001(\0132N.openconfig.o"
      "penconfig_optical_amplifier.OpticalAmpli"
      "fier.Amplifiers.Amplifier\032\310\036\n\023Supervisor"
      "yChannels\022\303\001\n\023supervisory_channel\030\373\276\252\024 \003"
      "(\0132c.openconfig.openconfig_optical_ampli"
      "fier.OpticalAmplifier.SupervisoryChannel"
      "s.SupervisoryChannelKeyB>\202A;/optical-amp"
      "lifier/supervisory-channels/supervisory-"
      "channel\032\364\032\n\022SupervisoryChannel\022\302\001\n\006confi"
      "g\030\254\357\365\216\001 \001(\0132g.openconfig.openconfig_opti"
      "cal_amplifier.OpticalAmplifier.Superviso"
      "ryChannels.SupervisoryChannel.ConfigBE\202A"
      "B/optical-amplifier/supervisory-channels"
      "/supervisory-channel/config\022\276\001\n\005state\030\245\331"
      "\242\027 \001(\0132f.openconfig.openconfig_optical_a"
      "mplifier.OpticalAmplifier.SupervisoryCha"
      "nnels.SupervisoryChannel.StateBD\202AA/opti"
      "cal-amplifier/supervisory-channels/super"
      "visory-channel/state\032\206\001\n\006Config\022|\n\tinter"
      "face\030\324\305\244F \001(\0132\025.ywrapper.StringValueBO\202A"
      "L/optical-amplifier/supervisory-channels"
      "/supervisory-channel/config/interface\032\316\026"
      "\n\005State\022\334\001\n\013input_power\030\304\350\240\202\001 \001(\0132q.open"
      "config.openconfig_optical_amplifier.Opti"
      "calAmplifier.SupervisoryChannels.Supervi"
      "soryChannel.State.InputPowerBP\202AM/optica"
      "l-amplifier/supervisory-channels/supervi"
      "sory-channel/state/input-power\022|\n\tinterf"
      "ace\030\301\306\357\214\001 \001(\0132\025.ywrapper.StringValueBN\202A"
      "K/optical-amplifier/supervisory-channels"
      "/supervisory-channel/state/interface\022\357\001\n"
      "\022laser_bias_current\030\205\267\302\177 \001(\0132w.openconfi"
      "g.openconfig_optical_amplifier.OpticalAm"
      "plifier.SupervisoryChannels.SupervisoryC"
      "hannel.State.LaserBiasCurrentBW\202AT/optic"
      "al-amplifier/supervisory-channels/superv"
      "isory-channel/state/laser-bias-current\022\337"
      "\001\n\014output_power\030\363\215\250\246\001 \001(\0132r.openconfig.o"
      "penconfig_optical_amplifier.OpticalAmpli"
      "fier.SupervisoryChannels.SupervisoryChan"
      "nel.State.OutputPowerBQ\202AN/optical-ampli"
      "fier/supervisory-channels/supervisory-ch"
      "annel/state/output-power\032\235\005\n\nInputPower\022"
      "~\n\003avg\030\335\221\365g \001(\0132\030.ywrapper.Decimal64Valu"
      "eBT\202AQ/optical-amplifier/supervisory-cha"
      "nnels/supervisory-channel/state/input-po"
      "wer/avg\022\206\001\n\007instant\030\212\324\356u \001(\0132\030.ywrapper."
      "Decimal64ValueBX\202AU/optical-amplifier/su"
      "pervisory-channels/supervisory-channel/s"
      "tate/input-power/instant\022\203\001\n\010interval\030\374\233"
      "\264Z \001(\0132\023.ywrapper.UintValueBY\202AV/optical"
      "-amplifier/supervisory-channels/supervis"
      "ory-channel/state/input-power/interval\022\177"
      "\n\003max\030\277\330\321\377\001 \001(\0132\030.ywrapper.Decimal64Valu"
      "eBT\202AQ/optical-amplifier/supervisory-cha"
      "nnels/supervisory-channel/state/input-po"
      "wer/max\022\177\n\003min\030\301\277\321\277\001 \001(\0132\030.ywrapper.Deci"
      "mal64ValueBT\202AQ/optical-amplifier/superv"
      "isory-channels/supervisory-channel/state"
      "/input-power/min\032\312\005\n\020LaserBiasCurrent\022\206\001"
      "\n\003avg\030\250\345\205\251\001 \001(\0132\030.ywrapper.Decimal64Valu"
      "eB[\202AX/optical-amplifier/supervisory-cha"
      "nnels/supervisory-channel/state/laser-bi"
      "as-current/avg\022\215\001\n\007instant\030\223\233\265q \001(\0132\030.yw"
      "rapper.Decimal64ValueB_\202A\\/optical-ampli"
      "fier/supervisory-channels/supervisory-ch"
      "annel/state/laser-bias-current/instant\022\213"
      "\001\n\010interval\030\223\201\200\210\001 \001(\0132\023.ywrapper.UintVal"
      "ueB`\202A]/optical-amplifier/supervisory-ch"
      "annels/supervisory-channel/state/laser-b"
      "ias-current/interval\022\205\001\n\003max\030\352\355\375Q \001(\0132\030."
      "ywrapper.Decimal64ValueB[\202AX/optical-amp"
      "lifier/supervisory-channels/supervisory-"
      "channel/state/laser-bias-current/max\022\206\001\n"
      "\003min\030\304\206\376\221\001 \001(\0132\030.ywrapper.Decimal64Value"
      "B[\202AX/optical-amplifier/supervisory-chan"
      "nels/supervisory-channel/state/laser-bia"
      "s-current/min\032\246\005\n\013OutputPower\022\200\001\n\003avg\030\312\340"
      "\346\265\001 \001(\0132\030.ywrapper.Decimal64ValueBU\202AR/o"
      "ptical-amplifier/supervisory-channels/su"
      "pervisory-channel/state/output-power/avg"
      "\022\207\001\n\007instant\030\311\355\203@ \001(\0132\030.ywrapper.Decimal"
      "64ValueBY\202AV/optical-amplifier/superviso"
      "ry-channels/supervisory-channel/state/ou"
      "tput-power/instant\022\205\001\n\010interval\030\315\305\271\306\001 \001("
      "\0132\023.ywrapper.UintValueBZ\202AW/optical-ampl"
      "ifier/supervisory-channels/supervisory-c"
      "hannel/state/output-power/interval\022\177\n\003ma"
      "x\030\334\333\336> \001(\0132\030.ywrapper.Decimal64ValueBU\202A"
      "R/optical-amplifier/supervisory-channels"
      "/supervisory-channel/state/output-power/"
      "max\022\200\001\n\003min\030\342\302\336\376\001 \001(\0132\030.ywrapper.Decimal"
      "64ValueBU\202AR/optical-amplifier/superviso"
      "ry-channels/supervisory-channel/state/ou"
      "tput-power/min\032\363\001\n\025SupervisoryChannelKey"
      "\022[\n\tinterface\030\001 \001(\tBH\202AE/optical-amplifi"
      "er/supervisory-channels/supervisory-chan"
      "nel/interface\022}\n\023supervisory_channel\030\002 \001"
      "(\0132`.openconfig.openconfig_optical_ampli"
      "fier.OpticalAmplifier.SupervisoryChannel"
      "s.SupervisoryChannelb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 15908);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "openconfig/openconfig_optical_amplifier/openconfig_optical_amplifier.proto", &protobuf_RegisterTypes);
  ::protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::AddDescriptors();
  ::protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fyext_2fyext_2eproto::AddDescriptors();
  ::protobuf_openconfig_2fenums_2fenums_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto
namespace openconfig {
namespace openconfig_optical_amplifier {

// ===================================================================

void OpticalAmplifier_Amplifiers_Amplifier_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_Config_default_instance_._instance.get_mutable()->enabled_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_Config_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_Config_default_instance_._instance.get_mutable()->target_gain_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_Config_default_instance_._instance.get_mutable()->target_gain_tilt_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_Config_default_instance_._instance.get_mutable()->target_output_power_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void OpticalAmplifier_Amplifiers_Amplifier_Config::clear_enabled() {
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) {
    delete enabled_;
  }
  enabled_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_Config::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_Config::clear_target_gain() {
  if (GetArenaNoVirtual() == NULL && target_gain_ != NULL) {
    delete target_gain_;
  }
  target_gain_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_Config::clear_target_gain_tilt() {
  if (GetArenaNoVirtual() == NULL && target_gain_tilt_ != NULL) {
    delete target_gain_tilt_;
  }
  target_gain_tilt_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_Config::clear_target_output_power() {
  if (GetArenaNoVirtual() == NULL && target_output_power_ != NULL) {
    delete target_output_power_;
  }
  target_output_power_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpticalAmplifier_Amplifiers_Amplifier_Config::kAmpModeFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_Config::kEnabledFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_Config::kFiberTypeProfileFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_Config::kGainRangeFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_Config::kNameFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_Config::kTargetGainFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_Config::kTargetGainTiltFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_Config::kTargetOutputPowerFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_Config::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpticalAmplifier_Amplifiers_Amplifier_Config::OpticalAmplifier_Amplifiers_Amplifier_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config)
}
OpticalAmplifier_Amplifiers_Amplifier_Config::OpticalAmplifier_Amplifiers_Amplifier_Config(const OpticalAmplifier_Amplifiers_Amplifier_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_enabled()) {
    enabled_ = new ::ywrapper::BoolValue(*from.enabled_);
  } else {
    enabled_ = NULL;
  }
  if (from.has_target_gain()) {
    target_gain_ = new ::ywrapper::Decimal64Value(*from.target_gain_);
  } else {
    target_gain_ = NULL;
  }
  if (from.has_target_output_power()) {
    target_output_power_ = new ::ywrapper::Decimal64Value(*from.target_output_power_);
  } else {
    target_output_power_ = NULL;
  }
  if (from.has_target_gain_tilt()) {
    target_gain_tilt_ = new ::ywrapper::Decimal64Value(*from.target_gain_tilt_);
  } else {
    target_gain_tilt_ = NULL;
  }
  ::memcpy(&amp_mode_, &from.amp_mode_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&amp_mode_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config)
}

void OpticalAmplifier_Amplifiers_Amplifier_Config::SharedCtor() {
  ::memset(&name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&name_)) + sizeof(type_));
  _cached_size_ = 0;
}

OpticalAmplifier_Amplifiers_Amplifier_Config::~OpticalAmplifier_Amplifiers_Amplifier_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config)
  SharedDtor();
}

void OpticalAmplifier_Amplifiers_Amplifier_Config::SharedDtor() {
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete enabled_;
  if (this != internal_default_instance()) delete target_gain_;
  if (this != internal_default_instance()) delete target_output_power_;
  if (this != internal_default_instance()) delete target_gain_tilt_;
}

void OpticalAmplifier_Amplifiers_Amplifier_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpticalAmplifier_Amplifiers_Amplifier_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpticalAmplifier_Amplifiers_Amplifier_Config& OpticalAmplifier_Amplifiers_Amplifier_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_Config();
  return *internal_default_instance();
}

OpticalAmplifier_Amplifiers_Amplifier_Config* OpticalAmplifier_Amplifiers_Amplifier_Config::New(::google::protobuf::Arena* arena) const {
  OpticalAmplifier_Amplifiers_Amplifier_Config* n = new OpticalAmplifier_Amplifiers_Amplifier_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpticalAmplifier_Amplifiers_Amplifier_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) {
    delete enabled_;
  }
  enabled_ = NULL;
  if (GetArenaNoVirtual() == NULL && target_gain_ != NULL) {
    delete target_gain_;
  }
  target_gain_ = NULL;
  if (GetArenaNoVirtual() == NULL && target_output_power_ != NULL) {
    delete target_output_power_;
  }
  target_output_power_ = NULL;
  if (GetArenaNoVirtual() == NULL && target_gain_tilt_ != NULL) {
    delete target_gain_tilt_;
  }
  target_gain_tilt_ = NULL;
  ::memset(&amp_mode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&amp_mode_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool OpticalAmplifier_Amplifiers_Amplifier_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4278680514u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.enums.OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE amp_mode = 213173045 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/amp-mode"];
      case 213173045: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 1705384360 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_amp_mode(static_cast< ::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue name = 237538034 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/name"];
      case 237538034: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 1900304274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue enabled = 274752762 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/enabled"];
      case 274752762: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 2198022098 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_enabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value target_gain = 287715864 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/target-gain"];
      case 287715864: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 2301726914 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target_gain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigOpticalAmplifierGAINRANGE gain_range = 391412418 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/gain-range"];
      case 391412418: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 3131299344 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_gain_range(static_cast< ::openconfig::enums::OpenconfigOpticalAmplifierGAINRANGE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigOpticalAmplifierFIBERTYPEPROFILE fiber_type_profile = 422775780 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/fiber-type-profile"];
      case 422775780: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 3382206240 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fiber_type_profile(static_cast< ::openconfig::enums::OpenconfigOpticalAmplifierFIBERTYPEPROFILE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value target_output_power = 457627626 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/target-output-power"];
      case 457627626: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 3661021010 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target_output_power()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE type = 497413935 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/type"];
      case 497413935: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 3979311480 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value target_gain_tilt = 534835064 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/target-gain-tilt"];
      case 534835064: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 4278680514 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target_gain_tilt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config)
  return false;
#undef DO_
}

void OpticalAmplifier_Amplifiers_Amplifier_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE amp_mode = 213173045 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/amp-mode"];
  if (this->amp_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      213173045, this->amp_mode(), output);
  }

  // .ywrapper.StringValue name = 237538034 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      237538034, *this->name_, output);
  }

  // .ywrapper.BoolValue enabled = 274752762 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/enabled"];
  if (this->has_enabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      274752762, *this->enabled_, output);
  }

  // .ywrapper.Decimal64Value target_gain = 287715864 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/target-gain"];
  if (this->has_target_gain()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      287715864, *this->target_gain_, output);
  }

  // .openconfig.enums.OpenconfigOpticalAmplifierGAINRANGE gain_range = 391412418 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/gain-range"];
  if (this->gain_range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      391412418, this->gain_range(), output);
  }

  // .openconfig.enums.OpenconfigOpticalAmplifierFIBERTYPEPROFILE fiber_type_profile = 422775780 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/fiber-type-profile"];
  if (this->fiber_type_profile() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      422775780, this->fiber_type_profile(), output);
  }

  // .ywrapper.Decimal64Value target_output_power = 457627626 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/target-output-power"];
  if (this->has_target_output_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      457627626, *this->target_output_power_, output);
  }

  // .openconfig.enums.OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE type = 497413935 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/type"];
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      497413935, this->type(), output);
  }

  // .ywrapper.Decimal64Value target_gain_tilt = 534835064 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/target-gain-tilt"];
  if (this->has_target_gain_tilt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      534835064, *this->target_gain_tilt_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config)
}

::google::protobuf::uint8* OpticalAmplifier_Amplifiers_Amplifier_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE amp_mode = 213173045 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/amp-mode"];
  if (this->amp_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      213173045, this->amp_mode(), target);
  }

  // .ywrapper.StringValue name = 237538034 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        237538034, *this->name_, deterministic, target);
  }

  // .ywrapper.BoolValue enabled = 274752762 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/enabled"];
  if (this->has_enabled()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        274752762, *this->enabled_, deterministic, target);
  }

  // .ywrapper.Decimal64Value target_gain = 287715864 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/target-gain"];
  if (this->has_target_gain()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        287715864, *this->target_gain_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigOpticalAmplifierGAINRANGE gain_range = 391412418 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/gain-range"];
  if (this->gain_range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      391412418, this->gain_range(), target);
  }

  // .openconfig.enums.OpenconfigOpticalAmplifierFIBERTYPEPROFILE fiber_type_profile = 422775780 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/fiber-type-profile"];
  if (this->fiber_type_profile() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      422775780, this->fiber_type_profile(), target);
  }

  // .ywrapper.Decimal64Value target_output_power = 457627626 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/target-output-power"];
  if (this->has_target_output_power()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        457627626, *this->target_output_power_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE type = 497413935 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/type"];
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      497413935, this->type(), target);
  }

  // .ywrapper.Decimal64Value target_gain_tilt = 534835064 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/target-gain-tilt"];
  if (this->has_target_gain_tilt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        534835064, *this->target_gain_tilt_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config)
  return target;
}

size_t OpticalAmplifier_Amplifiers_Amplifier_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue name = 237538034 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/name"];
  if (this->has_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  // .ywrapper.BoolValue enabled = 274752762 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/enabled"];
  if (this->has_enabled()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->enabled_);
  }

  // .ywrapper.Decimal64Value target_gain = 287715864 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/target-gain"];
  if (this->has_target_gain()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->target_gain_);
  }

  // .ywrapper.Decimal64Value target_output_power = 457627626 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/target-output-power"];
  if (this->has_target_output_power()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->target_output_power_);
  }

  // .ywrapper.Decimal64Value target_gain_tilt = 534835064 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/target-gain-tilt"];
  if (this->has_target_gain_tilt()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->target_gain_tilt_);
  }

  // .openconfig.enums.OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE amp_mode = 213173045 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/amp-mode"];
  if (this->amp_mode() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->amp_mode());
  }

  // .openconfig.enums.OpenconfigOpticalAmplifierGAINRANGE gain_range = 391412418 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/gain-range"];
  if (this->gain_range() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gain_range());
  }

  // .openconfig.enums.OpenconfigOpticalAmplifierFIBERTYPEPROFILE fiber_type_profile = 422775780 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/fiber-type-profile"];
  if (this->fiber_type_profile() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fiber_type_profile());
  }

  // .openconfig.enums.OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE type = 497413935 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/type"];
  if (this->type() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpticalAmplifier_Amplifiers_Amplifier_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const OpticalAmplifier_Amplifiers_Amplifier_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpticalAmplifier_Amplifiers_Amplifier_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config)
    MergeFrom(*source);
  }
}

void OpticalAmplifier_Amplifiers_Amplifier_Config::MergeFrom(const OpticalAmplifier_Amplifiers_Amplifier_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
  if (from.has_enabled()) {
    mutable_enabled()->::ywrapper::BoolValue::MergeFrom(from.enabled());
  }
  if (from.has_target_gain()) {
    mutable_target_gain()->::ywrapper::Decimal64Value::MergeFrom(from.target_gain());
  }
  if (from.has_target_output_power()) {
    mutable_target_output_power()->::ywrapper::Decimal64Value::MergeFrom(from.target_output_power());
  }
  if (from.has_target_gain_tilt()) {
    mutable_target_gain_tilt()->::ywrapper::Decimal64Value::MergeFrom(from.target_gain_tilt());
  }
  if (from.amp_mode() != 0) {
    set_amp_mode(from.amp_mode());
  }
  if (from.gain_range() != 0) {
    set_gain_range(from.gain_range());
  }
  if (from.fiber_type_profile() != 0) {
    set_fiber_type_profile(from.fiber_type_profile());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void OpticalAmplifier_Amplifiers_Amplifier_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpticalAmplifier_Amplifiers_Amplifier_Config::CopyFrom(const OpticalAmplifier_Amplifiers_Amplifier_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpticalAmplifier_Amplifiers_Amplifier_Config::IsInitialized() const {
  return true;
}

void OpticalAmplifier_Amplifiers_Amplifier_Config::Swap(OpticalAmplifier_Amplifiers_Amplifier_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpticalAmplifier_Amplifiers_Amplifier_Config::InternalSwap(OpticalAmplifier_Amplifiers_Amplifier_Config* other) {
  using std::swap;
  swap(name_, other->name_);
  swap(enabled_, other->enabled_);
  swap(target_gain_, other->target_gain_);
  swap(target_output_power_, other->target_output_power_);
  swap(target_gain_tilt_, other->target_gain_tilt_);
  swap(amp_mode_, other->amp_mode_);
  swap(gain_range_, other->gain_range_);
  swap(fiber_type_profile_, other->fiber_type_profile_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpticalAmplifier_Amplifiers_Amplifier_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::InitAsDefaultInstance() {
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::kAvgFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::kInstantFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::kIntervalFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::kMaxFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_ActualGain();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain)
}
OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain(const OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain)
}

void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::SharedCtor() {
  ::memset(&interval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&min_) -
      reinterpret_cast<char*>(&interval_)) + sizeof(min_));
  _cached_size_ = 0;
}

OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::~OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain)
  SharedDtor();
}

void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::SharedDtor() {
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete max_;
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete min_;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain& OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_ActualGain();
  return *internal_default_instance();
}

OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain* OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::New(::google::protobuf::Arena* arena) const {
  OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain* n = new OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  _internal_metadata_.Clear();
}

bool OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2190199034u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue interval = 41392966 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/interval"];
      case 41392966: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 331143730 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value instant = 107311160 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/instant"];
      case 107311160: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 858489282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value max = 139553953 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/max"];
      case 139553953: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 1116431626 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 156932943 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/avg"];
      case 156932943: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 1255463546 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value min = 273774879 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/min"];
      case 273774879: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 2190199034 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain)
  return false;
#undef DO_
}

void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue interval = 41392966 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      41392966, *this->interval_, output);
  }

  // .ywrapper.Decimal64Value instant = 107311160 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      107311160, *this->instant_, output);
  }

  // .ywrapper.Decimal64Value max = 139553953 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      139553953, *this->max_, output);
  }

  // .ywrapper.Decimal64Value avg = 156932943 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      156932943, *this->avg_, output);
  }

  // .ywrapper.Decimal64Value min = 273774879 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      273774879, *this->min_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain)
}

::google::protobuf::uint8* OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue interval = 41392966 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        41392966, *this->interval_, deterministic, target);
  }

  // .ywrapper.Decimal64Value instant = 107311160 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        107311160, *this->instant_, deterministic, target);
  }

  // .ywrapper.Decimal64Value max = 139553953 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        139553953, *this->max_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 156932943 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        156932943, *this->avg_, deterministic, target);
  }

  // .ywrapper.Decimal64Value min = 273774879 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        273774879, *this->min_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain)
  return target;
}

size_t OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue interval = 41392966 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.Decimal64Value instant = 107311160 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.Decimal64Value max = 139553953 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  // .ywrapper.Decimal64Value avg = 156932943 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.Decimal64Value min = 273774879 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain)
  GOOGLE_DCHECK_NE(&from, this);
  const OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain)
    MergeFrom(*source);
  }
}

void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::MergeFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
}

void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::CopyFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::IsInitialized() const {
  return true;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::Swap(OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::InternalSwap(OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain* other) {
  using std::swap;
  swap(interval_, other->interval_);
  swap(instant_, other->instant_);
  swap(max_, other->max_);
  swap(avg_, other->avg_);
  swap(min_, other->min_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::InitAsDefaultInstance() {
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::kAvgFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::kInstantFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::kIntervalFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::kMaxFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt)
}
OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt(const OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt)
}

void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::SharedCtor() {
  ::memset(&min_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_) -
      reinterpret_cast<char*>(&min_)) + sizeof(max_));
  _cached_size_ = 0;
}

OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::~OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt)
  SharedDtor();
}

void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::SharedDtor() {
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete max_;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt& OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt();
  return *internal_default_instance();
}

OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt* OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::New(::google::protobuf::Arena* arena) const {
  OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt* n = new OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  _internal_metadata_.Clear();
}

bool OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3664273770u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value min = 55384195 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/min"];
      case 55384195: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 443073562 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 342459139 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/avg"];
      case 342459139: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 2739673114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value instant = 364260860 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/instant"];
      case 364260860: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 2914086882 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue interval = 448738762 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/interval"];
      case 448738762: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 3589910098 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value max = 458034221 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/max"];
      case 458034221: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 3664273770 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt)
  return false;
#undef DO_
}

void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value min = 55384195 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      55384195, *this->min_, output);
  }

  // .ywrapper.Decimal64Value avg = 342459139 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      342459139, *this->avg_, output);
  }

  // .ywrapper.Decimal64Value instant = 364260860 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      364260860, *this->instant_, output);
  }

  // .ywrapper.UintValue interval = 448738762 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      448738762, *this->interval_, output);
  }

  // .ywrapper.Decimal64Value max = 458034221 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      458034221, *this->max_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt)
}

::google::protobuf::uint8* OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value min = 55384195 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        55384195, *this->min_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 342459139 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        342459139, *this->avg_, deterministic, target);
  }

  // .ywrapper.Decimal64Value instant = 364260860 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        364260860, *this->instant_, deterministic, target);
  }

  // .ywrapper.UintValue interval = 448738762 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        448738762, *this->interval_, deterministic, target);
  }

  // .ywrapper.Decimal64Value max = 458034221 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        458034221, *this->max_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt)
  return target;
}

size_t OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value min = 55384195 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  // .ywrapper.Decimal64Value avg = 342459139 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.Decimal64Value instant = 364260860 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.UintValue interval = 448738762 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.Decimal64Value max = 458034221 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt)
  GOOGLE_DCHECK_NE(&from, this);
  const OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt)
    MergeFrom(*source);
  }
}

void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::MergeFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
}

void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::CopyFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::IsInitialized() const {
  return true;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::Swap(OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::InternalSwap(OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt* other) {
  using std::swap;
  swap(min_, other->min_);
  swap(avg_, other->avg_);
  swap(instant_, other->instant_);
  swap(interval_, other->interval_);
  swap(max_, other->max_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::InitAsDefaultInstance() {
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::kAvgFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::kInstantFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::kIntervalFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::kMaxFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand)
}
OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand(const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand)
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::SharedCtor() {
  ::memset(&interval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instant_) -
      reinterpret_cast<char*>(&interval_)) + sizeof(instant_));
  _cached_size_ = 0;
}

OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::~OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand)
  SharedDtor();
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::SharedDtor() {
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete max_;
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete instant_;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand& OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand();
  return *internal_default_instance();
}

OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::New(::google::protobuf::Arena* arena) const {
  OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand* n = new OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  _internal_metadata_.Clear();
}

bool OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3922545810u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue interval = 55665268 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/interval"];
      case 55665268: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 445322146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value max = 247141399 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/max"];
      case 247141399: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 1977131194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value min = 381362537 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/min"];
      case 381362537: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 3050900298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 463266069 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/avg"];
      case 463266069: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 3706128554 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value instant = 490318226 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/instant"];
      case 490318226: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 3922545810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand)
  return false;
#undef DO_
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue interval = 55665268 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      55665268, *this->interval_, output);
  }

  // .ywrapper.Decimal64Value max = 247141399 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      247141399, *this->max_, output);
  }

  // .ywrapper.Decimal64Value min = 381362537 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      381362537, *this->min_, output);
  }

  // .ywrapper.Decimal64Value avg = 463266069 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      463266069, *this->avg_, output);
  }

  // .ywrapper.Decimal64Value instant = 490318226 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      490318226, *this->instant_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand)
}

::google::protobuf::uint8* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue interval = 55665268 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        55665268, *this->interval_, deterministic, target);
  }

  // .ywrapper.Decimal64Value max = 247141399 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        247141399, *this->max_, deterministic, target);
  }

  // .ywrapper.Decimal64Value min = 381362537 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        381362537, *this->min_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 463266069 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        463266069, *this->avg_, deterministic, target);
  }

  // .ywrapper.Decimal64Value instant = 490318226 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        490318226, *this->instant_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand)
  return target;
}

size_t OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue interval = 55665268 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.Decimal64Value max = 247141399 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  // .ywrapper.Decimal64Value min = 381362537 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  // .ywrapper.Decimal64Value avg = 463266069 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.Decimal64Value instant = 490318226 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand)
  GOOGLE_DCHECK_NE(&from, this);
  const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand)
    MergeFrom(*source);
  }
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::MergeFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::CopyFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::IsInitialized() const {
  return true;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::Swap(OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::InternalSwap(OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand* other) {
  using std::swap;
  swap(interval_, other->interval_);
  swap(max_, other->max_);
  swap(min_, other->min_);
  swap(avg_, other->avg_);
  swap(instant_, other->instant_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::InitAsDefaultInstance() {
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::kAvgFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::kInstantFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::kIntervalFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::kMaxFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand)
}
OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand(const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand)
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::SharedCtor() {
  ::memset(&instant_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_) -
      reinterpret_cast<char*>(&instant_)) + sizeof(max_));
  _cached_size_ = 0;
}

OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::~OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand)
  SharedDtor();
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::SharedDtor() {
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete max_;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand& OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand();
  return *internal_default_instance();
}

OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::New(::google::protobuf::Arena* arena) const {
  OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand* n = new OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  _internal_metadata_.Clear();
}

bool OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4110725298u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value instant = 117495079 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/instant"];
      case 117495079: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 939960634 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 295143420 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/avg"];
      case 295143420: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 2361147362 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue interval = 341383863 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/interval"];
      case 341383863: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 2731070906 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value min = 379619768 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/min"];
      case 379619768: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 3036958146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value max = 513840662 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/max"];
      case 513840662: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 4110725298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand)
  return false;
#undef DO_
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value instant = 117495079 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      117495079, *this->instant_, output);
  }

  // .ywrapper.Decimal64Value avg = 295143420 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      295143420, *this->avg_, output);
  }

  // .ywrapper.UintValue interval = 341383863 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      341383863, *this->interval_, output);
  }

  // .ywrapper.Decimal64Value min = 379619768 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      379619768, *this->min_, output);
  }

  // .ywrapper.Decimal64Value max = 513840662 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      513840662, *this->max_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand)
}

::google::protobuf::uint8* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value instant = 117495079 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        117495079, *this->instant_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 295143420 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        295143420, *this->avg_, deterministic, target);
  }

  // .ywrapper.UintValue interval = 341383863 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        341383863, *this->interval_, deterministic, target);
  }

  // .ywrapper.Decimal64Value min = 379619768 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        379619768, *this->min_, deterministic, target);
  }

  // .ywrapper.Decimal64Value max = 513840662 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        513840662, *this->max_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand)
  return target;
}

size_t OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value instant = 117495079 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.Decimal64Value avg = 295143420 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.UintValue interval = 341383863 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.Decimal64Value min = 379619768 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  // .ywrapper.Decimal64Value max = 513840662 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand)
  GOOGLE_DCHECK_NE(&from, this);
  const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand)
    MergeFrom(*source);
  }
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::MergeFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::CopyFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::IsInitialized() const {
  return true;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::Swap(OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::InternalSwap(OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand* other) {
  using std::swap;
  swap(instant_, other->instant_);
  swap(avg_, other->avg_);
  swap(interval_, other->interval_);
  swap(min_, other->min_);
  swap(max_, other->max_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::InitAsDefaultInstance() {
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::kAvgFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::kInstantFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::kIntervalFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::kMaxFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal)
}
OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal(const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal)
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::SharedCtor() {
  ::memset(&min_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interval_) -
      reinterpret_cast<char*>(&min_)) + sizeof(interval_));
  _cached_size_ = 0;
}

OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::~OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal)
  SharedDtor();
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::SharedDtor() {
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete max_;
  if (this != internal_default_instance()) delete interval_;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal& OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal();
  return *internal_default_instance();
}

OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::New(::google::protobuf::Arena* arena) const {
  OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal* n = new OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  _internal_metadata_.Clear();
}

bool OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4014242842u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value min = 60702004 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/min"];
      case 60702004: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 485616034 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 109050616 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/avg"];
      case 109050616: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 872404930 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value instant = 261310371 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/instant"];
      case 261310371: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 2090482970 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value max = 463351994 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/max"];
      case 463351994: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 3706815954 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue interval = 501780355 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/interval"];
      case 501780355: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 4014242842 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal)
  return false;
#undef DO_
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value min = 60702004 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      60702004, *this->min_, output);
  }

  // .ywrapper.Decimal64Value avg = 109050616 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      109050616, *this->avg_, output);
  }

  // .ywrapper.Decimal64Value instant = 261310371 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      261310371, *this->instant_, output);
  }

  // .ywrapper.Decimal64Value max = 463351994 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      463351994, *this->max_, output);
  }

  // .ywrapper.UintValue interval = 501780355 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      501780355, *this->interval_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal)
}

::google::protobuf::uint8* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value min = 60702004 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        60702004, *this->min_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 109050616 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        109050616, *this->avg_, deterministic, target);
  }

  // .ywrapper.Decimal64Value instant = 261310371 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        261310371, *this->instant_, deterministic, target);
  }

  // .ywrapper.Decimal64Value max = 463351994 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        463351994, *this->max_, deterministic, target);
  }

  // .ywrapper.UintValue interval = 501780355 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        501780355, *this->interval_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal)
  return target;
}

size_t OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value min = 60702004 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  // .ywrapper.Decimal64Value avg = 109050616 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.Decimal64Value instant = 261310371 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.Decimal64Value max = 463351994 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  // .ywrapper.UintValue interval = 501780355 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal)
  GOOGLE_DCHECK_NE(&from, this);
  const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal)
    MergeFrom(*source);
  }
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::MergeFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::CopyFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::IsInitialized() const {
  return true;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::Swap(OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::InternalSwap(OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal* other) {
  using std::swap;
  swap(min_, other->min_);
  swap(avg_, other->avg_);
  swap(instant_, other->instant_);
  swap(max_, other->max_);
  swap(interval_, other->interval_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::InitAsDefaultInstance() {
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::kAvgFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::kInstantFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::kIntervalFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::kMaxFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent)
}
OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent(const OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent)
}

void OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::SharedCtor() {
  ::memset(&interval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instant_) -
      reinterpret_cast<char*>(&interval_)) + sizeof(instant_));
  _cached_size_ = 0;
}

OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::~OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent)
  SharedDtor();
}

void OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::SharedDtor() {
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete max_;
  if (this != internal_default_instance()) delete instant_;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent& OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent();
  return *internal_default_instance();
}

OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent* OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::New(::google::protobuf::Arena* arena) const {
  OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent* n = new OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  _internal_metadata_.Clear();
}

bool OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4278541754u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue interval = 50187495 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/interval"];
      case 50187495: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 401499962 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 200827724 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/avg"];
      case 200827724: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 1606621794 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value min = 285394536 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/min"];
      case 285394536: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 2283156290 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value max = 419615462 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/max"];
      case 419615462: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 3356923698 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value instant = 534817719 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/instant"];
      case 534817719: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 4278541754 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent)
  return false;
#undef DO_
}

void OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue interval = 50187495 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      50187495, *this->interval_, output);
  }

  // .ywrapper.Decimal64Value avg = 200827724 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      200827724, *this->avg_, output);
  }

  // .ywrapper.Decimal64Value min = 285394536 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      285394536, *this->min_, output);
  }

  // .ywrapper.Decimal64Value max = 419615462 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      419615462, *this->max_, output);
  }

  // .ywrapper.Decimal64Value instant = 534817719 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      534817719, *this->instant_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent)
}

::google::protobuf::uint8* OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue interval = 50187495 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        50187495, *this->interval_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 200827724 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        200827724, *this->avg_, deterministic, target);
  }

  // .ywrapper.Decimal64Value min = 285394536 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        285394536, *this->min_, deterministic, target);
  }

  // .ywrapper.Decimal64Value max = 419615462 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        419615462, *this->max_, deterministic, target);
  }

  // .ywrapper.Decimal64Value instant = 534817719 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        534817719, *this->instant_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent)
  return target;
}

size_t OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue interval = 50187495 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.Decimal64Value avg = 200827724 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.Decimal64Value min = 285394536 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  // .ywrapper.Decimal64Value max = 419615462 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  // .ywrapper.Decimal64Value instant = 534817719 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent)
  GOOGLE_DCHECK_NE(&from, this);
  const OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent)
    MergeFrom(*source);
  }
}

void OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::MergeFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
}

void OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::CopyFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::IsInitialized() const {
  return true;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::Swap(OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::InternalSwap(OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent* other) {
  using std::swap;
  swap(interval_, other->interval_);
  swap(avg_, other->avg_);
  swap(min_, other->min_);
  swap(max_, other->max_);
  swap(instant_, other->instant_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::InitAsDefaultInstance() {
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::kAvgFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::kInstantFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::kIntervalFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::kMaxFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss)
}
OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss(const OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss)
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::SharedCtor() {
  ::memset(&avg_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_) -
      reinterpret_cast<char*>(&avg_)) + sizeof(max_));
  _cached_size_ = 0;
}

OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::~OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss)
  SharedDtor();
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::SharedDtor() {
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete max_;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss& OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss();
  return *internal_default_instance();
}

OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss* OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::New(::google::protobuf::Arena* arena) const {
  OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss* n = new OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  _internal_metadata_.Clear();
}

bool OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2994089490u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value avg = 22622816 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/avg"];
      case 22622816: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 180982530 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value instant = 124129147 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/instant"];
      case 124129147: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 993033178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value min = 240040268 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/min"];
      case 240040268: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 1920322146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue interval = 348154123 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/interval"];
      case 348154123: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 2785232986 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value max = 374261186 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/max"];
      case 374261186: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 2994089490 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss)
  return false;
#undef DO_
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value avg = 22622816 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      22622816, *this->avg_, output);
  }

  // .ywrapper.Decimal64Value instant = 124129147 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      124129147, *this->instant_, output);
  }

  // .ywrapper.Decimal64Value min = 240040268 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      240040268, *this->min_, output);
  }

  // .ywrapper.UintValue interval = 348154123 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      348154123, *this->interval_, output);
  }

  // .ywrapper.Decimal64Value max = 374261186 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      374261186, *this->max_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss)
}

::google::protobuf::uint8* OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value avg = 22622816 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        22622816, *this->avg_, deterministic, target);
  }

  // .ywrapper.Decimal64Value instant = 124129147 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        124129147, *this->instant_, deterministic, target);
  }

  // .ywrapper.Decimal64Value min = 240040268 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        240040268, *this->min_, deterministic, target);
  }

  // .ywrapper.UintValue interval = 348154123 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        348154123, *this->interval_, deterministic, target);
  }

  // .ywrapper.Decimal64Value max = 374261186 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        374261186, *this->max_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss)
  return target;
}

size_t OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value avg = 22622816 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/avg"];
  if (this->has_avg()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.Decimal64Value instant = 124129147 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.Decimal64Value min = 240040268 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  // .ywrapper.UintValue interval = 348154123 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.Decimal64Value max = 374261186 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss)
  GOOGLE_DCHECK_NE(&from, this);
  const OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss)
    MergeFrom(*source);
  }
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::MergeFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::CopyFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::IsInitialized() const {
  return true;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::Swap(OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::InternalSwap(OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss* other) {
  using std::swap;
  swap(avg_, other->avg_);
  swap(instant_, other->instant_);
  swap(min_, other->min_);
  swap(interval_, other->interval_);
  swap(max_, other->max_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::InitAsDefaultInstance() {
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::kAvgFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::kInstantFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::kIntervalFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::kMaxFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand)
}
OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand(const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand)
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::SharedCtor() {
  ::memset(&instant_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_) -
      reinterpret_cast<char*>(&instant_)) + sizeof(max_));
  _cached_size_ = 0;
}

OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::~OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand)
  SharedDtor();
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::SharedDtor() {
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete max_;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand& OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand();
  return *internal_default_instance();
}

OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::New(::google::protobuf::Arena* arena) const {
  OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand* n = new OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  _internal_metadata_.Clear();
}

bool OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3025380530u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value instant = 155851687 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/instant"];
      case 155851687: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 1246813498 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 159475324 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/avg"];
      case 159475324: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 1275802594 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue interval = 229840439 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/interval"];
      case 229840439: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 1838723514 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value min = 243951672 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/min"];
      case 243951672: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 1951613378 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value max = 378172566 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/max"];
      case 378172566: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 3025380530 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand)
  return false;
#undef DO_
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value instant = 155851687 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      155851687, *this->instant_, output);
  }

  // .ywrapper.Decimal64Value avg = 159475324 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      159475324, *this->avg_, output);
  }

  // .ywrapper.UintValue interval = 229840439 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      229840439, *this->interval_, output);
  }

  // .ywrapper.Decimal64Value min = 243951672 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      243951672, *this->min_, output);
  }

  // .ywrapper.Decimal64Value max = 378172566 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      378172566, *this->max_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand)
}

::google::protobuf::uint8* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value instant = 155851687 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        155851687, *this->instant_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 159475324 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        159475324, *this->avg_, deterministic, target);
  }

  // .ywrapper.UintValue interval = 229840439 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        229840439, *this->interval_, deterministic, target);
  }

  // .ywrapper.Decimal64Value min = 243951672 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        243951672, *this->min_, deterministic, target);
  }

  // .ywrapper.Decimal64Value max = 378172566 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        378172566, *this->max_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand)
  return target;
}

size_t OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value instant = 155851687 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.Decimal64Value avg = 159475324 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.UintValue interval = 229840439 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.Decimal64Value min = 243951672 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  // .ywrapper.Decimal64Value max = 378172566 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand)
  GOOGLE_DCHECK_NE(&from, this);
  const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand)
    MergeFrom(*source);
  }
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::MergeFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::CopyFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::IsInitialized() const {
  return true;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::Swap(OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::InternalSwap(OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand* other) {
  using std::swap;
  swap(instant_, other->instant_);
  swap(avg_, other->avg_);
  swap(interval_, other->interval_);
  swap(min_, other->min_);
  swap(max_, other->max_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::InitAsDefaultInstance() {
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::kAvgFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::kInstantFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::kIntervalFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::kMaxFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand)
}
OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand(const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand)
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::SharedCtor() {
  ::memset(&max_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&instant_) -
      reinterpret_cast<char*>(&max_)) + sizeof(instant_));
  _cached_size_ = 0;
}

OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::~OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand)
  SharedDtor();
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::SharedDtor() {
  if (this != internal_default_instance()) delete max_;
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete instant_;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand& OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand();
  return *internal_default_instance();
}

OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::New(::google::protobuf::Arena* arena) const {
  OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand* n = new OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  _internal_metadata_.Clear();
}

bool OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4229398674u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value max = 111473303 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/max"];
      case 111473303: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 891786426 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value min = 245694441 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/min"];
      case 245694441: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 1965555530 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 327597973 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/avg"];
      case 327597973: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 2620783786 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue interval = 480992756 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/interval"];
      case 480992756: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 3847942050 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value instant = 528674834 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/instant"];
      case 528674834: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 4229398674 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand)
  return false;
#undef DO_
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value max = 111473303 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      111473303, *this->max_, output);
  }

  // .ywrapper.Decimal64Value min = 245694441 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      245694441, *this->min_, output);
  }

  // .ywrapper.Decimal64Value avg = 327597973 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      327597973, *this->avg_, output);
  }

  // .ywrapper.UintValue interval = 480992756 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      480992756, *this->interval_, output);
  }

  // .ywrapper.Decimal64Value instant = 528674834 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      528674834, *this->instant_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand)
}

::google::protobuf::uint8* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value max = 111473303 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        111473303, *this->max_, deterministic, target);
  }

  // .ywrapper.Decimal64Value min = 245694441 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        245694441, *this->min_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 327597973 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        327597973, *this->avg_, deterministic, target);
  }

  // .ywrapper.UintValue interval = 480992756 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        480992756, *this->interval_, deterministic, target);
  }

  // .ywrapper.Decimal64Value instant = 528674834 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        528674834, *this->instant_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand)
  return target;
}

size_t OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value max = 111473303 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  // .ywrapper.Decimal64Value min = 245694441 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  // .ywrapper.Decimal64Value avg = 327597973 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.UintValue interval = 480992756 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.Decimal64Value instant = 528674834 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand)
  GOOGLE_DCHECK_NE(&from, this);
  const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand)
    MergeFrom(*source);
  }
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::MergeFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::CopyFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::IsInitialized() const {
  return true;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::Swap(OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::InternalSwap(OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand* other) {
  using std::swap;
  swap(max_, other->max_);
  swap(min_, other->min_);
  swap(avg_, other->avg_);
  swap(interval_, other->interval_);
  swap(instant_, other->instant_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::InitAsDefaultInstance() {
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::kAvgFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::kInstantFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::kIntervalFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::kMaxFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal)
}
OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal(const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal)
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::SharedCtor() {
  ::memset(&instant_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_) -
      reinterpret_cast<char*>(&instant_)) + sizeof(max_));
  _cached_size_ = 0;
}

OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::~OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal)
  SharedDtor();
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::SharedDtor() {
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete max_;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal& OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal();
  return *internal_default_instance();
}

OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::New(::google::protobuf::Arena* arena) const {
  OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal* n = new OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  _internal_metadata_.Clear();
}

bool OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2716388906u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value instant = 16585284 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/instant"];
      case 16585284: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 132682274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue interval = 58825282 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/interval"];
      case 58825282: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 470602258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value min = 205327691 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/min"];
      case 205327691: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 1642621530 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 221413691 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/avg"];
      case 221413691: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 1771309530 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value max = 339548613 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/max"];
      case 339548613: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 2716388906 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal)
  return false;
#undef DO_
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value instant = 16585284 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16585284, *this->instant_, output);
  }

  // .ywrapper.UintValue interval = 58825282 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      58825282, *this->interval_, output);
  }

  // .ywrapper.Decimal64Value min = 205327691 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      205327691, *this->min_, output);
  }

  // .ywrapper.Decimal64Value avg = 221413691 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      221413691, *this->avg_, output);
  }

  // .ywrapper.Decimal64Value max = 339548613 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      339548613, *this->max_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal)
}

::google::protobuf::uint8* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value instant = 16585284 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        16585284, *this->instant_, deterministic, target);
  }

  // .ywrapper.UintValue interval = 58825282 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        58825282, *this->interval_, deterministic, target);
  }

  // .ywrapper.Decimal64Value min = 205327691 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        205327691, *this->min_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 221413691 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        221413691, *this->avg_, deterministic, target);
  }

  // .ywrapper.Decimal64Value max = 339548613 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        339548613, *this->max_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal)
  return target;
}

size_t OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value instant = 16585284 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/instant"];
  if (this->has_instant()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.UintValue interval = 58825282 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.Decimal64Value min = 205327691 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  // .ywrapper.Decimal64Value avg = 221413691 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.Decimal64Value max = 339548613 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal)
  GOOGLE_DCHECK_NE(&from, this);
  const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal)
    MergeFrom(*source);
  }
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::MergeFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::CopyFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::IsInitialized() const {
  return true;
}

void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::Swap(OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::InternalSwap(OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal* other) {
  using std::swap;
  swap(instant_, other->instant_);
  swap(interval_, other->interval_);
  swap(min_, other->min_);
  swap(avg_, other->avg_);
  swap(max_, other->max_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpticalAmplifier_Amplifiers_Amplifier_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_default_instance_._instance.get_mutable()->actual_gain_ = const_cast< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain*>(
      ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_default_instance_._instance.get_mutable()->actual_gain_tilt_ = const_cast< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt*>(
      ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_default_instance_._instance.get_mutable()->component_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_default_instance_._instance.get_mutable()->egress_port_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_default_instance_._instance.get_mutable()->enabled_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_default_instance_._instance.get_mutable()->ingress_port_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_default_instance_._instance.get_mutable()->input_power_c_band_ = const_cast< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand*>(
      ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_default_instance_._instance.get_mutable()->input_power_l_band_ = const_cast< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand*>(
      ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_default_instance_._instance.get_mutable()->input_power_total_ = const_cast< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal*>(
      ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_default_instance_._instance.get_mutable()->laser_bias_current_ = const_cast< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent*>(
      ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_default_instance_._instance.get_mutable()->optical_return_loss_ = const_cast< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss*>(
      ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_default_instance_._instance.get_mutable()->output_power_c_band_ = const_cast< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand*>(
      ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_default_instance_._instance.get_mutable()->output_power_l_band_ = const_cast< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand*>(
      ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_default_instance_._instance.get_mutable()->output_power_total_ = const_cast< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal*>(
      ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_default_instance_._instance.get_mutable()->target_gain_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_default_instance_._instance.get_mutable()->target_gain_tilt_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_default_instance_._instance.get_mutable()->target_output_power_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void OpticalAmplifier_Amplifiers_Amplifier_State::clear_component() {
  if (GetArenaNoVirtual() == NULL && component_ != NULL) {
    delete component_;
  }
  component_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State::clear_egress_port() {
  if (GetArenaNoVirtual() == NULL && egress_port_ != NULL) {
    delete egress_port_;
  }
  egress_port_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State::clear_enabled() {
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) {
    delete enabled_;
  }
  enabled_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State::clear_ingress_port() {
  if (GetArenaNoVirtual() == NULL && ingress_port_ != NULL) {
    delete ingress_port_;
  }
  ingress_port_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State::clear_target_gain() {
  if (GetArenaNoVirtual() == NULL && target_gain_ != NULL) {
    delete target_gain_;
  }
  target_gain_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State::clear_target_gain_tilt() {
  if (GetArenaNoVirtual() == NULL && target_gain_tilt_ != NULL) {
    delete target_gain_tilt_;
  }
  target_gain_tilt_ = NULL;
}
void OpticalAmplifier_Amplifiers_Amplifier_State::clear_target_output_power() {
  if (GetArenaNoVirtual() == NULL && target_output_power_ != NULL) {
    delete target_output_power_;
  }
  target_output_power_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpticalAmplifier_Amplifiers_Amplifier_State::kActualGainFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State::kActualGainTiltFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State::kAmpModeFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State::kComponentFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State::kEgressPortFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State::kEnabledFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State::kFiberTypeProfileFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State::kGainRangeFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State::kIngressPortFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State::kInputPowerCBandFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State::kInputPowerLBandFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State::kInputPowerTotalFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State::kLaserBiasCurrentFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State::kNameFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State::kOpticalReturnLossFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State::kOutputPowerCBandFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State::kOutputPowerLBandFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State::kOutputPowerTotalFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State::kTargetGainFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State::kTargetGainTiltFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State::kTargetOutputPowerFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier_State::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpticalAmplifier_Amplifiers_Amplifier_State::OpticalAmplifier_Amplifiers_Amplifier_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State)
}
OpticalAmplifier_Amplifiers_Amplifier_State::OpticalAmplifier_Amplifiers_Amplifier_State(const OpticalAmplifier_Amplifiers_Amplifier_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_optical_return_loss()) {
    optical_return_loss_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss(*from.optical_return_loss_);
  } else {
    optical_return_loss_ = NULL;
  }
  if (from.has_target_output_power()) {
    target_output_power_ = new ::ywrapper::Decimal64Value(*from.target_output_power_);
  } else {
    target_output_power_ = NULL;
  }
  if (from.has_component()) {
    component_ = new ::ywrapper::StringValue(*from.component_);
  } else {
    component_ = NULL;
  }
  if (from.has_output_power_l_band()) {
    output_power_l_band_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand(*from.output_power_l_band_);
  } else {
    output_power_l_band_ = NULL;
  }
  if (from.has_output_power_total()) {
    output_power_total_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal(*from.output_power_total_);
  } else {
    output_power_total_ = NULL;
  }
  if (from.has_target_gain_tilt()) {
    target_gain_tilt_ = new ::ywrapper::Decimal64Value(*from.target_gain_tilt_);
  } else {
    target_gain_tilt_ = NULL;
  }
  if (from.has_input_power_total()) {
    input_power_total_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal(*from.input_power_total_);
  } else {
    input_power_total_ = NULL;
  }
  if (from.has_input_power_l_band()) {
    input_power_l_band_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand(*from.input_power_l_band_);
  } else {
    input_power_l_band_ = NULL;
  }
  if (from.has_laser_bias_current()) {
    laser_bias_current_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent(*from.laser_bias_current_);
  } else {
    laser_bias_current_ = NULL;
  }
  if (from.has_target_gain()) {
    target_gain_ = new ::ywrapper::Decimal64Value(*from.target_gain_);
  } else {
    target_gain_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_actual_gain_tilt()) {
    actual_gain_tilt_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt(*from.actual_gain_tilt_);
  } else {
    actual_gain_tilt_ = NULL;
  }
  if (from.has_enabled()) {
    enabled_ = new ::ywrapper::BoolValue(*from.enabled_);
  } else {
    enabled_ = NULL;
  }
  if (from.has_actual_gain()) {
    actual_gain_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain(*from.actual_gain_);
  } else {
    actual_gain_ = NULL;
  }
  if (from.has_input_power_c_band()) {
    input_power_c_band_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand(*from.input_power_c_band_);
  } else {
    input_power_c_band_ = NULL;
  }
  if (from.has_egress_port()) {
    egress_port_ = new ::ywrapper::StringValue(*from.egress_port_);
  } else {
    egress_port_ = NULL;
  }
  if (from.has_ingress_port()) {
    ingress_port_ = new ::ywrapper::StringValue(*from.ingress_port_);
  } else {
    ingress_port_ = NULL;
  }
  if (from.has_output_power_c_band()) {
    output_power_c_band_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand(*from.output_power_c_band_);
  } else {
    output_power_c_band_ = NULL;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&gain_range_) -
    reinterpret_cast<char*>(&type_)) + sizeof(gain_range_));
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State)
}

void OpticalAmplifier_Amplifiers_Amplifier_State::SharedCtor() {
  ::memset(&optical_return_loss_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gain_range_) -
      reinterpret_cast<char*>(&optical_return_loss_)) + sizeof(gain_range_));
  _cached_size_ = 0;
}

OpticalAmplifier_Amplifiers_Amplifier_State::~OpticalAmplifier_Amplifiers_Amplifier_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State)
  SharedDtor();
}

void OpticalAmplifier_Amplifiers_Amplifier_State::SharedDtor() {
  if (this != internal_default_instance()) delete optical_return_loss_;
  if (this != internal_default_instance()) delete target_output_power_;
  if (this != internal_default_instance()) delete component_;
  if (this != internal_default_instance()) delete output_power_l_band_;
  if (this != internal_default_instance()) delete output_power_total_;
  if (this != internal_default_instance()) delete target_gain_tilt_;
  if (this != internal_default_instance()) delete input_power_total_;
  if (this != internal_default_instance()) delete input_power_l_band_;
  if (this != internal_default_instance()) delete laser_bias_current_;
  if (this != internal_default_instance()) delete target_gain_;
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete actual_gain_tilt_;
  if (this != internal_default_instance()) delete enabled_;
  if (this != internal_default_instance()) delete actual_gain_;
  if (this != internal_default_instance()) delete input_power_c_band_;
  if (this != internal_default_instance()) delete egress_port_;
  if (this != internal_default_instance()) delete ingress_port_;
  if (this != internal_default_instance()) delete output_power_c_band_;
}

void OpticalAmplifier_Amplifiers_Amplifier_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpticalAmplifier_Amplifiers_Amplifier_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpticalAmplifier_Amplifiers_Amplifier_State& OpticalAmplifier_Amplifiers_Amplifier_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State();
  return *internal_default_instance();
}

OpticalAmplifier_Amplifiers_Amplifier_State* OpticalAmplifier_Amplifiers_Amplifier_State::New(::google::protobuf::Arena* arena) const {
  OpticalAmplifier_Amplifiers_Amplifier_State* n = new OpticalAmplifier_Amplifiers_Amplifier_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpticalAmplifier_Amplifiers_Amplifier_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && optical_return_loss_ != NULL) {
    delete optical_return_loss_;
  }
  optical_return_loss_ = NULL;
  if (GetArenaNoVirtual() == NULL && target_output_power_ != NULL) {
    delete target_output_power_;
  }
  target_output_power_ = NULL;
  if (GetArenaNoVirtual() == NULL && component_ != NULL) {
    delete component_;
  }
  component_ = NULL;
  if (GetArenaNoVirtual() == NULL && output_power_l_band_ != NULL) {
    delete output_power_l_band_;
  }
  output_power_l_band_ = NULL;
  if (GetArenaNoVirtual() == NULL && output_power_total_ != NULL) {
    delete output_power_total_;
  }
  output_power_total_ = NULL;
  if (GetArenaNoVirtual() == NULL && target_gain_tilt_ != NULL) {
    delete target_gain_tilt_;
  }
  target_gain_tilt_ = NULL;
  if (GetArenaNoVirtual() == NULL && input_power_total_ != NULL) {
    delete input_power_total_;
  }
  input_power_total_ = NULL;
  if (GetArenaNoVirtual() == NULL && input_power_l_band_ != NULL) {
    delete input_power_l_band_;
  }
  input_power_l_band_ = NULL;
  if (GetArenaNoVirtual() == NULL && laser_bias_current_ != NULL) {
    delete laser_bias_current_;
  }
  laser_bias_current_ = NULL;
  if (GetArenaNoVirtual() == NULL && target_gain_ != NULL) {
    delete target_gain_;
  }
  target_gain_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && actual_gain_tilt_ != NULL) {
    delete actual_gain_tilt_;
  }
  actual_gain_tilt_ = NULL;
  if (GetArenaNoVirtual() == NULL && enabled_ != NULL) {
    delete enabled_;
  }
  enabled_ = NULL;
  if (GetArenaNoVirtual() == NULL && actual_gain_ != NULL) {
    delete actual_gain_;
  }
  actual_gain_ = NULL;
  if (GetArenaNoVirtual() == NULL && input_power_c_band_ != NULL) {
    delete input_power_c_band_;
  }
  input_power_c_band_ = NULL;
  if (GetArenaNoVirtual() == NULL && egress_port_ != NULL) {
    delete egress_port_;
  }
  egress_port_ = NULL;
  if (GetArenaNoVirtual() == NULL && ingress_port_ != NULL) {
    delete ingress_port_;
  }
  ingress_port_ = NULL;
  if (GetArenaNoVirtual() == NULL && output_power_c_band_ != NULL) {
    delete output_power_c_band_;
  }
  output_power_c_band_ = NULL;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gain_range_) -
      reinterpret_cast<char*>(&type_)) + sizeof(gain_range_));
  _internal_metadata_.Clear();
}

bool OpticalAmplifier_Amplifiers_Amplifier_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4270032650u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss optical_return_loss = 1826957 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss"];
      case 1826957: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 14615658 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_optical_return_loss()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE type = 28656020 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/type"];
      case 28656020: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 229248160 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value target_output_power = 39144115 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/target-output-power"];
      case 39144115: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 313152922 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target_output_power()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue component = 124258433 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/component"];
      case 124258433: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 994067466 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_component()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand output_power_l_band = 148447468 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band"];
      case 148447468: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 1187579746 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output_power_l_band()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal output_power_total = 170412918 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total"];
      case 170412918: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 1363303346 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output_power_total()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value target_gain_tilt = 253671195 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/target-gain-tilt"];
      case 253671195: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 2029369562 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target_gain_tilt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal input_power_total = 290016501 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total"];
      case 290016501: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 2320132010 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input_power_total()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE amp_mode = 314189198 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/amp-mode"];
      case 314189198: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 2513513584 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_amp_mode(static_cast< ::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand input_power_l_band = 362773089 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band"];
      case 362773089: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 2902184714 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input_power_l_band()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent laser_bias_current = 363893777 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current"];
      case 363893777: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 2911150218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_laser_bias_current()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value target_gain = 382709921 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/target-gain"];
      case 382709921: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 3061679370 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_target_gain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue name = 411449237 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/name"];
      case 411449237: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 3291593898 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigOpticalAmplifierFIBERTYPEPROFILE fiber_type_profile = 412975067 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/fiber-type-profile"];
      case 412975067: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 3303800536 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_fiber_type_profile(static_cast< ::openconfig::enums::OpenconfigOpticalAmplifierFIBERTYPEPROFILE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt actual_gain_tilt = 414245390 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt"];
      case 414245390: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 3313963122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_actual_gain_tilt()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue enabled = 423614103 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/enabled"];
      case 423614103: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 3388912826 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_enabled()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain actual_gain = 427903922 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain"];
      case 427903922: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 3423231378 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_actual_gain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigOpticalAmplifierGAINRANGE gain_range = 452923353 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/gain-range"];
      case 452923353: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 3623386824 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_gain_range(static_cast< ::openconfig::enums::OpenconfigOpticalAmplifierGAINRANGE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand input_power_c_band = 514337388 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band"];
      case 514337388: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 4114699106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input_power_c_band()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue egress_port = 529707375 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/egress-port"];
      case 529707375: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 4237659002 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_egress_port()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue ingress_port = 532185287 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/ingress-port"];
      case 532185287: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 4257482298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ingress_port()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand output_power_c_band = 533754081 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band"];
      case 533754081: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 4270032650 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output_power_c_band()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State)
  return false;
#undef DO_
}

void OpticalAmplifier_Amplifiers_Amplifier_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss optical_return_loss = 1826957 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss"];
  if (this->has_optical_return_loss()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1826957, *this->optical_return_loss_, output);
  }

  // .openconfig.enums.OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE type = 28656020 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/type"];
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      28656020, this->type(), output);
  }

  // .ywrapper.Decimal64Value target_output_power = 39144115 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/target-output-power"];
  if (this->has_target_output_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      39144115, *this->target_output_power_, output);
  }

  // .ywrapper.StringValue component = 124258433 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/component"];
  if (this->has_component()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      124258433, *this->component_, output);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand output_power_l_band = 148447468 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band"];
  if (this->has_output_power_l_band()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      148447468, *this->output_power_l_band_, output);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal output_power_total = 170412918 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total"];
  if (this->has_output_power_total()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      170412918, *this->output_power_total_, output);
  }

  // .ywrapper.Decimal64Value target_gain_tilt = 253671195 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/target-gain-tilt"];
  if (this->has_target_gain_tilt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      253671195, *this->target_gain_tilt_, output);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal input_power_total = 290016501 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total"];
  if (this->has_input_power_total()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      290016501, *this->input_power_total_, output);
  }

  // .openconfig.enums.OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE amp_mode = 314189198 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/amp-mode"];
  if (this->amp_mode() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      314189198, this->amp_mode(), output);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand input_power_l_band = 362773089 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band"];
  if (this->has_input_power_l_band()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      362773089, *this->input_power_l_band_, output);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent laser_bias_current = 363893777 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current"];
  if (this->has_laser_bias_current()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      363893777, *this->laser_bias_current_, output);
  }

  // .ywrapper.Decimal64Value target_gain = 382709921 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/target-gain"];
  if (this->has_target_gain()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      382709921, *this->target_gain_, output);
  }

  // .ywrapper.StringValue name = 411449237 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      411449237, *this->name_, output);
  }

  // .openconfig.enums.OpenconfigOpticalAmplifierFIBERTYPEPROFILE fiber_type_profile = 412975067 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/fiber-type-profile"];
  if (this->fiber_type_profile() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      412975067, this->fiber_type_profile(), output);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt actual_gain_tilt = 414245390 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt"];
  if (this->has_actual_gain_tilt()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      414245390, *this->actual_gain_tilt_, output);
  }

  // .ywrapper.BoolValue enabled = 423614103 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/enabled"];
  if (this->has_enabled()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      423614103, *this->enabled_, output);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain actual_gain = 427903922 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain"];
  if (this->has_actual_gain()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      427903922, *this->actual_gain_, output);
  }

  // .openconfig.enums.OpenconfigOpticalAmplifierGAINRANGE gain_range = 452923353 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/gain-range"];
  if (this->gain_range() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      452923353, this->gain_range(), output);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand input_power_c_band = 514337388 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band"];
  if (this->has_input_power_c_band()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      514337388, *this->input_power_c_band_, output);
  }

  // .ywrapper.StringValue egress_port = 529707375 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/egress-port"];
  if (this->has_egress_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      529707375, *this->egress_port_, output);
  }

  // .ywrapper.StringValue ingress_port = 532185287 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/ingress-port"];
  if (this->has_ingress_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      532185287, *this->ingress_port_, output);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand output_power_c_band = 533754081 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band"];
  if (this->has_output_power_c_band()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      533754081, *this->output_power_c_band_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State)
}

::google::protobuf::uint8* OpticalAmplifier_Amplifiers_Amplifier_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss optical_return_loss = 1826957 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss"];
  if (this->has_optical_return_loss()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1826957, *this->optical_return_loss_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE type = 28656020 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/type"];
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      28656020, this->type(), target);
  }

  // .ywrapper.Decimal64Value target_output_power = 39144115 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/target-output-power"];
  if (this->has_target_output_power()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        39144115, *this->target_output_power_, deterministic, target);
  }

  // .ywrapper.StringValue component = 124258433 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/component"];
  if (this->has_component()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        124258433, *this->component_, deterministic, target);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand output_power_l_band = 148447468 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band"];
  if (this->has_output_power_l_band()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        148447468, *this->output_power_l_band_, deterministic, target);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal output_power_total = 170412918 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total"];
  if (this->has_output_power_total()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        170412918, *this->output_power_total_, deterministic, target);
  }

  // .ywrapper.Decimal64Value target_gain_tilt = 253671195 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/target-gain-tilt"];
  if (this->has_target_gain_tilt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        253671195, *this->target_gain_tilt_, deterministic, target);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal input_power_total = 290016501 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total"];
  if (this->has_input_power_total()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        290016501, *this->input_power_total_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE amp_mode = 314189198 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/amp-mode"];
  if (this->amp_mode() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      314189198, this->amp_mode(), target);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand input_power_l_band = 362773089 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band"];
  if (this->has_input_power_l_band()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        362773089, *this->input_power_l_band_, deterministic, target);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent laser_bias_current = 363893777 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current"];
  if (this->has_laser_bias_current()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        363893777, *this->laser_bias_current_, deterministic, target);
  }

  // .ywrapper.Decimal64Value target_gain = 382709921 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/target-gain"];
  if (this->has_target_gain()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        382709921, *this->target_gain_, deterministic, target);
  }

  // .ywrapper.StringValue name = 411449237 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        411449237, *this->name_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigOpticalAmplifierFIBERTYPEPROFILE fiber_type_profile = 412975067 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/fiber-type-profile"];
  if (this->fiber_type_profile() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      412975067, this->fiber_type_profile(), target);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt actual_gain_tilt = 414245390 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt"];
  if (this->has_actual_gain_tilt()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        414245390, *this->actual_gain_tilt_, deterministic, target);
  }

  // .ywrapper.BoolValue enabled = 423614103 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/enabled"];
  if (this->has_enabled()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        423614103, *this->enabled_, deterministic, target);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain actual_gain = 427903922 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain"];
  if (this->has_actual_gain()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        427903922, *this->actual_gain_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigOpticalAmplifierGAINRANGE gain_range = 452923353 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/gain-range"];
  if (this->gain_range() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      452923353, this->gain_range(), target);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand input_power_c_band = 514337388 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band"];
  if (this->has_input_power_c_band()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        514337388, *this->input_power_c_band_, deterministic, target);
  }

  // .ywrapper.StringValue egress_port = 529707375 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/egress-port"];
  if (this->has_egress_port()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        529707375, *this->egress_port_, deterministic, target);
  }

  // .ywrapper.StringValue ingress_port = 532185287 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/ingress-port"];
  if (this->has_ingress_port()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        532185287, *this->ingress_port_, deterministic, target);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand output_power_c_band = 533754081 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band"];
  if (this->has_output_power_c_band()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        533754081, *this->output_power_c_band_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State)
  return target;
}

size_t OpticalAmplifier_Amplifiers_Amplifier_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss optical_return_loss = 1826957 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss"];
  if (this->has_optical_return_loss()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->optical_return_loss_);
  }

  // .ywrapper.Decimal64Value target_output_power = 39144115 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/target-output-power"];
  if (this->has_target_output_power()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->target_output_power_);
  }

  // .ywrapper.StringValue component = 124258433 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/component"];
  if (this->has_component()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->component_);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand output_power_l_band = 148447468 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band"];
  if (this->has_output_power_l_band()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->output_power_l_band_);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal output_power_total = 170412918 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total"];
  if (this->has_output_power_total()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->output_power_total_);
  }

  // .ywrapper.Decimal64Value target_gain_tilt = 253671195 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/target-gain-tilt"];
  if (this->has_target_gain_tilt()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->target_gain_tilt_);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal input_power_total = 290016501 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total"];
  if (this->has_input_power_total()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->input_power_total_);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand input_power_l_band = 362773089 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band"];
  if (this->has_input_power_l_band()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->input_power_l_band_);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent laser_bias_current = 363893777 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current"];
  if (this->has_laser_bias_current()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->laser_bias_current_);
  }

  // .ywrapper.Decimal64Value target_gain = 382709921 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/target-gain"];
  if (this->has_target_gain()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->target_gain_);
  }

  // .ywrapper.StringValue name = 411449237 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/name"];
  if (this->has_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt actual_gain_tilt = 414245390 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt"];
  if (this->has_actual_gain_tilt()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->actual_gain_tilt_);
  }

  // .ywrapper.BoolValue enabled = 423614103 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/enabled"];
  if (this->has_enabled()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->enabled_);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain actual_gain = 427903922 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain"];
  if (this->has_actual_gain()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->actual_gain_);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand input_power_c_band = 514337388 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band"];
  if (this->has_input_power_c_band()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->input_power_c_band_);
  }

  // .ywrapper.StringValue egress_port = 529707375 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/egress-port"];
  if (this->has_egress_port()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->egress_port_);
  }

  // .ywrapper.StringValue ingress_port = 532185287 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/ingress-port"];
  if (this->has_ingress_port()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->ingress_port_);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand output_power_c_band = 533754081 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band"];
  if (this->has_output_power_c_band()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->output_power_c_band_);
  }

  // .openconfig.enums.OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE type = 28656020 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/type"];
  if (this->type() != 0) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // .openconfig.enums.OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE amp_mode = 314189198 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/amp-mode"];
  if (this->amp_mode() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->amp_mode());
  }

  // .openconfig.enums.OpenconfigOpticalAmplifierFIBERTYPEPROFILE fiber_type_profile = 412975067 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/fiber-type-profile"];
  if (this->fiber_type_profile() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->fiber_type_profile());
  }

  // .openconfig.enums.OpenconfigOpticalAmplifierGAINRANGE gain_range = 452923353 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/gain-range"];
  if (this->gain_range() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->gain_range());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpticalAmplifier_Amplifiers_Amplifier_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State)
  GOOGLE_DCHECK_NE(&from, this);
  const OpticalAmplifier_Amplifiers_Amplifier_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpticalAmplifier_Amplifiers_Amplifier_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State)
    MergeFrom(*source);
  }
}

void OpticalAmplifier_Amplifiers_Amplifier_State::MergeFrom(const OpticalAmplifier_Amplifiers_Amplifier_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_optical_return_loss()) {
    mutable_optical_return_loss()->::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::MergeFrom(from.optical_return_loss());
  }
  if (from.has_target_output_power()) {
    mutable_target_output_power()->::ywrapper::Decimal64Value::MergeFrom(from.target_output_power());
  }
  if (from.has_component()) {
    mutable_component()->::ywrapper::StringValue::MergeFrom(from.component());
  }
  if (from.has_output_power_l_band()) {
    mutable_output_power_l_band()->::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::MergeFrom(from.output_power_l_band());
  }
  if (from.has_output_power_total()) {
    mutable_output_power_total()->::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::MergeFrom(from.output_power_total());
  }
  if (from.has_target_gain_tilt()) {
    mutable_target_gain_tilt()->::ywrapper::Decimal64Value::MergeFrom(from.target_gain_tilt());
  }
  if (from.has_input_power_total()) {
    mutable_input_power_total()->::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::MergeFrom(from.input_power_total());
  }
  if (from.has_input_power_l_band()) {
    mutable_input_power_l_band()->::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::MergeFrom(from.input_power_l_band());
  }
  if (from.has_laser_bias_current()) {
    mutable_laser_bias_current()->::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::MergeFrom(from.laser_bias_current());
  }
  if (from.has_target_gain()) {
    mutable_target_gain()->::ywrapper::Decimal64Value::MergeFrom(from.target_gain());
  }
  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
  if (from.has_actual_gain_tilt()) {
    mutable_actual_gain_tilt()->::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::MergeFrom(from.actual_gain_tilt());
  }
  if (from.has_enabled()) {
    mutable_enabled()->::ywrapper::BoolValue::MergeFrom(from.enabled());
  }
  if (from.has_actual_gain()) {
    mutable_actual_gain()->::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::MergeFrom(from.actual_gain());
  }
  if (from.has_input_power_c_band()) {
    mutable_input_power_c_band()->::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::MergeFrom(from.input_power_c_band());
  }
  if (from.has_egress_port()) {
    mutable_egress_port()->::ywrapper::StringValue::MergeFrom(from.egress_port());
  }
  if (from.has_ingress_port()) {
    mutable_ingress_port()->::ywrapper::StringValue::MergeFrom(from.ingress_port());
  }
  if (from.has_output_power_c_band()) {
    mutable_output_power_c_band()->::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::MergeFrom(from.output_power_c_band());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.amp_mode() != 0) {
    set_amp_mode(from.amp_mode());
  }
  if (from.fiber_type_profile() != 0) {
    set_fiber_type_profile(from.fiber_type_profile());
  }
  if (from.gain_range() != 0) {
    set_gain_range(from.gain_range());
  }
}

void OpticalAmplifier_Amplifiers_Amplifier_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpticalAmplifier_Amplifiers_Amplifier_State::CopyFrom(const OpticalAmplifier_Amplifiers_Amplifier_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpticalAmplifier_Amplifiers_Amplifier_State::IsInitialized() const {
  return true;
}

void OpticalAmplifier_Amplifiers_Amplifier_State::Swap(OpticalAmplifier_Amplifiers_Amplifier_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpticalAmplifier_Amplifiers_Amplifier_State::InternalSwap(OpticalAmplifier_Amplifiers_Amplifier_State* other) {
  using std::swap;
  swap(optical_return_loss_, other->optical_return_loss_);
  swap(target_output_power_, other->target_output_power_);
  swap(component_, other->component_);
  swap(output_power_l_band_, other->output_power_l_band_);
  swap(output_power_total_, other->output_power_total_);
  swap(target_gain_tilt_, other->target_gain_tilt_);
  swap(input_power_total_, other->input_power_total_);
  swap(input_power_l_band_, other->input_power_l_band_);
  swap(laser_bias_current_, other->laser_bias_current_);
  swap(target_gain_, other->target_gain_);
  swap(name_, other->name_);
  swap(actual_gain_tilt_, other->actual_gain_tilt_);
  swap(enabled_, other->enabled_);
  swap(actual_gain_, other->actual_gain_);
  swap(input_power_c_band_, other->input_power_c_band_);
  swap(egress_port_, other->egress_port_);
  swap(ingress_port_, other->ingress_port_);
  swap(output_power_c_band_, other->output_power_c_band_);
  swap(type_, other->type_);
  swap(amp_mode_, other->amp_mode_);
  swap(fiber_type_profile_, other->fiber_type_profile_);
  swap(gain_range_, other->gain_range_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpticalAmplifier_Amplifiers_Amplifier_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpticalAmplifier_Amplifiers_Amplifier::InitAsDefaultInstance() {
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config*>(
      ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State*>(
      ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpticalAmplifier_Amplifiers_Amplifier::kConfigFieldNumber;
const int OpticalAmplifier_Amplifiers_Amplifier::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpticalAmplifier_Amplifiers_Amplifier::OpticalAmplifier_Amplifiers_Amplifier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier)
}
OpticalAmplifier_Amplifiers_Amplifier::OpticalAmplifier_Amplifiers_Amplifier(const OpticalAmplifier_Amplifiers_Amplifier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier)
}

void OpticalAmplifier_Amplifiers_Amplifier::SharedCtor() {
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&config_)) + sizeof(state_));
  _cached_size_ = 0;
}

OpticalAmplifier_Amplifiers_Amplifier::~OpticalAmplifier_Amplifiers_Amplifier() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier)
  SharedDtor();
}

void OpticalAmplifier_Amplifiers_Amplifier::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete state_;
}

void OpticalAmplifier_Amplifiers_Amplifier::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpticalAmplifier_Amplifiers_Amplifier::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpticalAmplifier_Amplifiers_Amplifier& OpticalAmplifier_Amplifiers_Amplifier::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier();
  return *internal_default_instance();
}

OpticalAmplifier_Amplifiers_Amplifier* OpticalAmplifier_Amplifiers_Amplifier::New(::google::protobuf::Arena* arena) const {
  OpticalAmplifier_Amplifiers_Amplifier* n = new OpticalAmplifier_Amplifiers_Amplifier;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpticalAmplifier_Amplifiers_Amplifier::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool OpticalAmplifier_Amplifiers_Amplifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2699604746u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config config = 47251912 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config"];
      case 47251912: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 378015298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State state = 337450593 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state"];
      case 337450593: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 2699604746 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier)
  return false;
#undef DO_
}

void OpticalAmplifier_Amplifiers_Amplifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config config = 47251912 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      47251912, *this->config_, output);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State state = 337450593 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      337450593, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier)
}

::google::protobuf::uint8* OpticalAmplifier_Amplifiers_Amplifier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config config = 47251912 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        47251912, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State state = 337450593 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        337450593, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier)
  return target;
}

size_t OpticalAmplifier_Amplifiers_Amplifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config config = 47251912 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State state = 337450593 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpticalAmplifier_Amplifiers_Amplifier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier)
  GOOGLE_DCHECK_NE(&from, this);
  const OpticalAmplifier_Amplifiers_Amplifier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpticalAmplifier_Amplifiers_Amplifier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier)
    MergeFrom(*source);
  }
}

void OpticalAmplifier_Amplifiers_Amplifier::MergeFrom(const OpticalAmplifier_Amplifiers_Amplifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config::MergeFrom(from.config());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State::MergeFrom(from.state());
  }
}

void OpticalAmplifier_Amplifiers_Amplifier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpticalAmplifier_Amplifiers_Amplifier::CopyFrom(const OpticalAmplifier_Amplifiers_Amplifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpticalAmplifier_Amplifiers_Amplifier::IsInitialized() const {
  return true;
}

void OpticalAmplifier_Amplifiers_Amplifier::Swap(OpticalAmplifier_Amplifiers_Amplifier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpticalAmplifier_Amplifiers_Amplifier::InternalSwap(OpticalAmplifier_Amplifiers_Amplifier* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpticalAmplifier_Amplifiers_Amplifier::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpticalAmplifier_Amplifiers_AmplifierKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_AmplifierKey_default_instance_._instance.get_mutable()->amplifier_ = const_cast< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier*>(
      ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpticalAmplifier_Amplifiers_AmplifierKey::kNameFieldNumber;
const int OpticalAmplifier_Amplifiers_AmplifierKey::kAmplifierFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpticalAmplifier_Amplifiers_AmplifierKey::OpticalAmplifier_Amplifiers_AmplifierKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_AmplifierKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey)
}
OpticalAmplifier_Amplifiers_AmplifierKey::OpticalAmplifier_Amplifiers_AmplifierKey(const OpticalAmplifier_Amplifiers_AmplifierKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_amplifier()) {
    amplifier_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier(*from.amplifier_);
  } else {
    amplifier_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey)
}

void OpticalAmplifier_Amplifiers_AmplifierKey::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  amplifier_ = NULL;
  _cached_size_ = 0;
}

OpticalAmplifier_Amplifiers_AmplifierKey::~OpticalAmplifier_Amplifiers_AmplifierKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey)
  SharedDtor();
}

void OpticalAmplifier_Amplifiers_AmplifierKey::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete amplifier_;
}

void OpticalAmplifier_Amplifiers_AmplifierKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpticalAmplifier_Amplifiers_AmplifierKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpticalAmplifier_Amplifiers_AmplifierKey& OpticalAmplifier_Amplifiers_AmplifierKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_AmplifierKey();
  return *internal_default_instance();
}

OpticalAmplifier_Amplifiers_AmplifierKey* OpticalAmplifier_Amplifiers_AmplifierKey::New(::google::protobuf::Arena* arena) const {
  OpticalAmplifier_Amplifiers_AmplifierKey* n = new OpticalAmplifier_Amplifiers_AmplifierKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpticalAmplifier_Amplifiers_AmplifierKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && amplifier_ != NULL) {
    delete amplifier_;
  }
  amplifier_ = NULL;
  _internal_metadata_.Clear();
}

bool OpticalAmplifier_Amplifiers_AmplifierKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/name"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier amplifier = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_amplifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey)
  return false;
#undef DO_
}

void OpticalAmplifier_Amplifiers_AmplifierKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/name"];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier amplifier = 2;
  if (this->has_amplifier()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->amplifier_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey)
}

::google::protobuf::uint8* OpticalAmplifier_Amplifiers_AmplifierKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/name"];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier amplifier = 2;
  if (this->has_amplifier()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->amplifier_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey)
  return target;
}

size_t OpticalAmplifier_Amplifiers_AmplifierKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/name"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier amplifier = 2;
  if (this->has_amplifier()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->amplifier_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpticalAmplifier_Amplifiers_AmplifierKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey)
  GOOGLE_DCHECK_NE(&from, this);
  const OpticalAmplifier_Amplifiers_AmplifierKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpticalAmplifier_Amplifiers_AmplifierKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey)
    MergeFrom(*source);
  }
}

void OpticalAmplifier_Amplifiers_AmplifierKey::MergeFrom(const OpticalAmplifier_Amplifiers_AmplifierKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_amplifier()) {
    mutable_amplifier()->::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier::MergeFrom(from.amplifier());
  }
}

void OpticalAmplifier_Amplifiers_AmplifierKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpticalAmplifier_Amplifiers_AmplifierKey::CopyFrom(const OpticalAmplifier_Amplifiers_AmplifierKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpticalAmplifier_Amplifiers_AmplifierKey::IsInitialized() const {
  return true;
}

void OpticalAmplifier_Amplifiers_AmplifierKey::Swap(OpticalAmplifier_Amplifiers_AmplifierKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpticalAmplifier_Amplifiers_AmplifierKey::InternalSwap(OpticalAmplifier_Amplifiers_AmplifierKey* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(amplifier_, other->amplifier_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpticalAmplifier_Amplifiers_AmplifierKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpticalAmplifier_Amplifiers::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpticalAmplifier_Amplifiers::kAmplifierFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpticalAmplifier_Amplifiers::OpticalAmplifier_Amplifiers()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers)
}
OpticalAmplifier_Amplifiers::OpticalAmplifier_Amplifiers(const OpticalAmplifier_Amplifiers& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      amplifier_(from.amplifier_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers)
}

void OpticalAmplifier_Amplifiers::SharedCtor() {
  _cached_size_ = 0;
}

OpticalAmplifier_Amplifiers::~OpticalAmplifier_Amplifiers() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers)
  SharedDtor();
}

void OpticalAmplifier_Amplifiers::SharedDtor() {
}

void OpticalAmplifier_Amplifiers::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpticalAmplifier_Amplifiers::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpticalAmplifier_Amplifiers& OpticalAmplifier_Amplifiers::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers();
  return *internal_default_instance();
}

OpticalAmplifier_Amplifiers* OpticalAmplifier_Amplifiers::New(::google::protobuf::Arena* arena) const {
  OpticalAmplifier_Amplifiers* n = new OpticalAmplifier_Amplifiers;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpticalAmplifier_Amplifiers::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  amplifier_.Clear();
  _internal_metadata_.Clear();
}

bool OpticalAmplifier_Amplifiers::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2127299258u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey amplifier = 265912407 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier"];
      case 265912407: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 2127299258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_amplifier()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers)
  return false;
#undef DO_
}

void OpticalAmplifier_Amplifiers::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey amplifier = 265912407 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->amplifier_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      265912407, this->amplifier(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers)
}

::google::protobuf::uint8* OpticalAmplifier_Amplifiers::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey amplifier = 265912407 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->amplifier_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        265912407, this->amplifier(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers)
  return target;
}

size_t OpticalAmplifier_Amplifiers::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey amplifier = 265912407 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier"];
  {
    unsigned int count = static_cast<unsigned int>(this->amplifier_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->amplifier(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpticalAmplifier_Amplifiers::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers)
  GOOGLE_DCHECK_NE(&from, this);
  const OpticalAmplifier_Amplifiers* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpticalAmplifier_Amplifiers>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers)
    MergeFrom(*source);
  }
}

void OpticalAmplifier_Amplifiers::MergeFrom(const OpticalAmplifier_Amplifiers& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  amplifier_.MergeFrom(from.amplifier_);
}

void OpticalAmplifier_Amplifiers::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpticalAmplifier_Amplifiers::CopyFrom(const OpticalAmplifier_Amplifiers& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpticalAmplifier_Amplifiers::IsInitialized() const {
  return true;
}

void OpticalAmplifier_Amplifiers::Swap(OpticalAmplifier_Amplifiers* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpticalAmplifier_Amplifiers::InternalSwap(OpticalAmplifier_Amplifiers* other) {
  using std::swap;
  amplifier_.InternalSwap(&other->amplifier_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpticalAmplifier_Amplifiers::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config_default_instance_._instance.get_mutable()->interface_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::clear_interface() {
  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::kInterfaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config)
}
OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_interface()) {
    interface_ = new ::ywrapper::StringValue(*from.interface_);
  } else {
    interface_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config)
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::SharedCtor() {
  interface_ = NULL;
  _cached_size_ = 0;
}

OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::~OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config)
  SharedDtor();
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::SharedDtor() {
  if (this != internal_default_instance()) delete interface_;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config();
  return *internal_default_instance();
}

OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::New(::google::protobuf::Arena* arena) const {
  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config* n = new OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
  _internal_metadata_.Clear();
}

bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1179195042u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue interface = 147399380 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/config/interface"];
      case 147399380: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 1179195042 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config)
  return false;
#undef DO_
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue interface = 147399380 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/config/interface"];
  if (this->has_interface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      147399380, *this->interface_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config)
}

::google::protobuf::uint8* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue interface = 147399380 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/config/interface"];
  if (this->has_interface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        147399380, *this->interface_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config)
  return target;
}

size_t OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue interface = 147399380 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/config/interface"];
  if (this->has_interface()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interface_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config)
    MergeFrom(*source);
  }
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::MergeFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_interface()) {
    mutable_interface()->::ywrapper::StringValue::MergeFrom(from.interface());
  }
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::CopyFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::IsInitialized() const {
  return true;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::Swap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::InternalSwap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config* other) {
  using std::swap;
  swap(interface_, other->interface_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::InitAsDefaultInstance() {
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::kAvgFieldNumber;
const int OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::kInstantFieldNumber;
const int OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::kIntervalFieldNumber;
const int OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::kMaxFieldNumber;
const int OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower)
}
OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower)
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::SharedCtor() {
  ::memset(&interval_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&max_) -
      reinterpret_cast<char*>(&interval_)) + sizeof(max_));
  _cached_size_ = 0;
}

OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::~OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower)
  SharedDtor();
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::SharedDtor() {
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete max_;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower();
  return *internal_default_instance();
}

OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::New(::google::protobuf::Arena* arena) const {
  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower* n = new OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  _internal_metadata_.Clear();
}

bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4288897530u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue interval = 189599228 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/interval"];
      case 189599228: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 1516793826 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 217925853 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/avg"];
      case 217925853: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 1743406826 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value instant = 247179786 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/instant"];
      case 247179786: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 1977438290 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value min = 401891265 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/min"];
      case 401891265: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 3215130122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value max = 536112191 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/max"];
      case 536112191: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 4288897530 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower)
  return false;
#undef DO_
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue interval = 189599228 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      189599228, *this->interval_, output);
  }

  // .ywrapper.Decimal64Value avg = 217925853 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      217925853, *this->avg_, output);
  }

  // .ywrapper.Decimal64Value instant = 247179786 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      247179786, *this->instant_, output);
  }

  // .ywrapper.Decimal64Value min = 401891265 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      401891265, *this->min_, output);
  }

  // .ywrapper.Decimal64Value max = 536112191 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      536112191, *this->max_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower)
}

::google::protobuf::uint8* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue interval = 189599228 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        189599228, *this->interval_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 217925853 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        217925853, *this->avg_, deterministic, target);
  }

  // .ywrapper.Decimal64Value instant = 247179786 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        247179786, *this->instant_, deterministic, target);
  }

  // .ywrapper.Decimal64Value min = 401891265 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        401891265, *this->min_, deterministic, target);
  }

  // .ywrapper.Decimal64Value max = 536112191 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        536112191, *this->max_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower)
  return target;
}

size_t OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue interval = 189599228 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.Decimal64Value avg = 217925853 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.Decimal64Value instant = 247179786 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.Decimal64Value min = 401891265 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  // .ywrapper.Decimal64Value max = 536112191 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower)
  GOOGLE_DCHECK_NE(&from, this);
  const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower)
    MergeFrom(*source);
  }
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::MergeFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::CopyFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::IsInitialized() const {
  return true;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::Swap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::InternalSwap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower* other) {
  using std::swap;
  swap(interval_, other->interval_);
  swap(avg_, other->avg_);
  swap(instant_, other->instant_);
  swap(min_, other->min_);
  swap(max_, other->max_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::InitAsDefaultInstance() {
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::kAvgFieldNumber;
const int OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::kInstantFieldNumber;
const int OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::kIntervalFieldNumber;
const int OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::kMaxFieldNumber;
const int OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent)
}
OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent)
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::SharedCtor() {
  ::memset(&max_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&avg_) -
      reinterpret_cast<char*>(&max_)) + sizeof(avg_));
  _cached_size_ = 0;
}

OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::~OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent)
  SharedDtor();
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::SharedDtor() {
  if (this != internal_default_instance()) delete max_;
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete min_;
  if (this != internal_default_instance()) delete avg_;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent();
  return *internal_default_instance();
}

OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::New(::google::protobuf::Arena* arena) const {
  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent* n = new OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  _internal_metadata_.Clear();
}

bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2836108610u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value max = 171931370 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/max"];
      case 171931370: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 1375450962 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value instant = 237850003 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/instant"];
      case 237850003: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 1902800026 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue interval = 285212819 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/interval"];
      case 285212819: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 2281702554 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value min = 306152260 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/min"];
      case 306152260: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 2449218082 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 354513576 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/avg"];
      case 354513576: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 2836108610 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent)
  return false;
#undef DO_
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value max = 171931370 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      171931370, *this->max_, output);
  }

  // .ywrapper.Decimal64Value instant = 237850003 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      237850003, *this->instant_, output);
  }

  // .ywrapper.UintValue interval = 285212819 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      285212819, *this->interval_, output);
  }

  // .ywrapper.Decimal64Value min = 306152260 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      306152260, *this->min_, output);
  }

  // .ywrapper.Decimal64Value avg = 354513576 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      354513576, *this->avg_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent)
}

::google::protobuf::uint8* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value max = 171931370 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        171931370, *this->max_, deterministic, target);
  }

  // .ywrapper.Decimal64Value instant = 237850003 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        237850003, *this->instant_, deterministic, target);
  }

  // .ywrapper.UintValue interval = 285212819 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        285212819, *this->interval_, deterministic, target);
  }

  // .ywrapper.Decimal64Value min = 306152260 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        306152260, *this->min_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 354513576 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        354513576, *this->avg_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent)
  return target;
}

size_t OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value max = 171931370 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  // .ywrapper.Decimal64Value instant = 237850003 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.UintValue interval = 285212819 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.Decimal64Value min = 306152260 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  // .ywrapper.Decimal64Value avg = 354513576 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent)
  GOOGLE_DCHECK_NE(&from, this);
  const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent)
    MergeFrom(*source);
  }
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::MergeFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::CopyFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::IsInitialized() const {
  return true;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::Swap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::InternalSwap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent* other) {
  using std::swap;
  swap(max_, other->max_);
  swap(instant_, other->instant_);
  swap(interval_, other->interval_);
  swap(min_, other->min_);
  swap(avg_, other->avg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::InitAsDefaultInstance() {
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower_default_instance_._instance.get_mutable()->avg_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower_default_instance_._instance.get_mutable()->instant_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower_default_instance_._instance.get_mutable()->interval_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower_default_instance_._instance.get_mutable()->max_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower_default_instance_._instance.get_mutable()->min_ = const_cast< ::ywrapper::Decimal64Value*>(
      ::ywrapper::Decimal64Value::internal_default_instance());
}
void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::clear_avg() {
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
}
void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::clear_instant() {
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
}
void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::clear_interval() {
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
}
void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::clear_max() {
  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
}
void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::clear_min() {
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::kAvgFieldNumber;
const int OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::kInstantFieldNumber;
const int OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::kIntervalFieldNumber;
const int OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::kMaxFieldNumber;
const int OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::kMinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower)
}
OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_max()) {
    max_ = new ::ywrapper::Decimal64Value(*from.max_);
  } else {
    max_ = NULL;
  }
  if (from.has_instant()) {
    instant_ = new ::ywrapper::Decimal64Value(*from.instant_);
  } else {
    instant_ = NULL;
  }
  if (from.has_avg()) {
    avg_ = new ::ywrapper::Decimal64Value(*from.avg_);
  } else {
    avg_ = NULL;
  }
  if (from.has_interval()) {
    interval_ = new ::ywrapper::UintValue(*from.interval_);
  } else {
    interval_ = NULL;
  }
  if (from.has_min()) {
    min_ = new ::ywrapper::Decimal64Value(*from.min_);
  } else {
    min_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower)
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::SharedCtor() {
  ::memset(&max_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&min_) -
      reinterpret_cast<char*>(&max_)) + sizeof(min_));
  _cached_size_ = 0;
}

OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::~OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower)
  SharedDtor();
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::SharedDtor() {
  if (this != internal_default_instance()) delete max_;
  if (this != internal_default_instance()) delete instant_;
  if (this != internal_default_instance()) delete avg_;
  if (this != internal_default_instance()) delete interval_;
  if (this != internal_default_instance()) delete min_;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower();
  return *internal_default_instance();
}

OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::New(::google::protobuf::Arena* arena) const {
  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower* n = new OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && max_ != NULL) {
    delete max_;
  }
  max_ = NULL;
  if (GetArenaNoVirtual() == NULL && instant_ != NULL) {
    delete instant_;
  }
  instant_ = NULL;
  if (GetArenaNoVirtual() == NULL && avg_ != NULL) {
    delete avg_;
  }
  avg_ = NULL;
  if (GetArenaNoVirtual() == NULL && interval_ != NULL) {
    delete interval_;
  }
  interval_ = NULL;
  if (GetArenaNoVirtual() == NULL && min_ != NULL) {
    delete min_;
  }
  min_ = NULL;
  _internal_metadata_.Clear();
}

bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4273802002u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.Decimal64Value max = 131575260 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/max"];
      case 131575260: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 1052602082 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value instant = 134280905 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/instant"];
      case 134280905: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 1074247242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_instant()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value avg = 381268042 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/avg"];
      case 381268042: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 3050144338 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_avg()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue interval = 416178893 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/interval"];
      case 416178893: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 3329431146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interval()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.Decimal64Value min = 534225250 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/min"];
      case 534225250: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 4273802002 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_min()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower)
  return false;
#undef DO_
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value max = 131575260 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/max"];
  if (this->has_max()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      131575260, *this->max_, output);
  }

  // .ywrapper.Decimal64Value instant = 134280905 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/instant"];
  if (this->has_instant()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      134280905, *this->instant_, output);
  }

  // .ywrapper.Decimal64Value avg = 381268042 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/avg"];
  if (this->has_avg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      381268042, *this->avg_, output);
  }

  // .ywrapper.UintValue interval = 416178893 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/interval"];
  if (this->has_interval()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      416178893, *this->interval_, output);
  }

  // .ywrapper.Decimal64Value min = 534225250 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/min"];
  if (this->has_min()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      534225250, *this->min_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower)
}

::google::protobuf::uint8* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.Decimal64Value max = 131575260 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/max"];
  if (this->has_max()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        131575260, *this->max_, deterministic, target);
  }

  // .ywrapper.Decimal64Value instant = 134280905 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/instant"];
  if (this->has_instant()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        134280905, *this->instant_, deterministic, target);
  }

  // .ywrapper.Decimal64Value avg = 381268042 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/avg"];
  if (this->has_avg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        381268042, *this->avg_, deterministic, target);
  }

  // .ywrapper.UintValue interval = 416178893 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/interval"];
  if (this->has_interval()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        416178893, *this->interval_, deterministic, target);
  }

  // .ywrapper.Decimal64Value min = 534225250 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/min"];
  if (this->has_min()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        534225250, *this->min_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower)
  return target;
}

size_t OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.Decimal64Value max = 131575260 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/max"];
  if (this->has_max()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_);
  }

  // .ywrapper.Decimal64Value instant = 134280905 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/instant"];
  if (this->has_instant()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->instant_);
  }

  // .ywrapper.Decimal64Value avg = 381268042 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/avg"];
  if (this->has_avg()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->avg_);
  }

  // .ywrapper.UintValue interval = 416178893 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/interval"];
  if (this->has_interval()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interval_);
  }

  // .ywrapper.Decimal64Value min = 534225250 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/min"];
  if (this->has_min()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->min_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower)
  GOOGLE_DCHECK_NE(&from, this);
  const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower)
    MergeFrom(*source);
  }
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::MergeFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_max()) {
    mutable_max()->::ywrapper::Decimal64Value::MergeFrom(from.max());
  }
  if (from.has_instant()) {
    mutable_instant()->::ywrapper::Decimal64Value::MergeFrom(from.instant());
  }
  if (from.has_avg()) {
    mutable_avg()->::ywrapper::Decimal64Value::MergeFrom(from.avg());
  }
  if (from.has_interval()) {
    mutable_interval()->::ywrapper::UintValue::MergeFrom(from.interval());
  }
  if (from.has_min()) {
    mutable_min()->::ywrapper::Decimal64Value::MergeFrom(from.min());
  }
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::CopyFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::IsInitialized() const {
  return true;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::Swap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::InternalSwap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower* other) {
  using std::swap;
  swap(max_, other->max_);
  swap(instant_, other->instant_);
  swap(avg_, other->avg_);
  swap(interval_, other->interval_);
  swap(min_, other->min_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_default_instance_._instance.get_mutable()->input_power_ = const_cast< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower*>(
      ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_default_instance_._instance.get_mutable()->interface_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_default_instance_._instance.get_mutable()->laser_bias_current_ = const_cast< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent*>(
      ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_default_instance_._instance.get_mutable()->output_power_ = const_cast< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower*>(
      ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::internal_default_instance());
}
void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::clear_interface() {
  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::kInputPowerFieldNumber;
const int OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::kInterfaceFieldNumber;
const int OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::kLaserBiasCurrentFieldNumber;
const int OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::kOutputPowerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State)
}
OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_laser_bias_current()) {
    laser_bias_current_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent(*from.laser_bias_current_);
  } else {
    laser_bias_current_ = NULL;
  }
  if (from.has_input_power()) {
    input_power_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower(*from.input_power_);
  } else {
    input_power_ = NULL;
  }
  if (from.has_interface()) {
    interface_ = new ::ywrapper::StringValue(*from.interface_);
  } else {
    interface_ = NULL;
  }
  if (from.has_output_power()) {
    output_power_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower(*from.output_power_);
  } else {
    output_power_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State)
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::SharedCtor() {
  ::memset(&laser_bias_current_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&output_power_) -
      reinterpret_cast<char*>(&laser_bias_current_)) + sizeof(output_power_));
  _cached_size_ = 0;
}

OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::~OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State)
  SharedDtor();
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::SharedDtor() {
  if (this != internal_default_instance()) delete laser_bias_current_;
  if (this != internal_default_instance()) delete input_power_;
  if (this != internal_default_instance()) delete interface_;
  if (this != internal_default_instance()) delete output_power_;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State();
  return *internal_default_instance();
}

OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::New(::google::protobuf::Arena* arena) const {
  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State* n = new OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && laser_bias_current_ != NULL) {
    delete laser_bias_current_;
  }
  laser_bias_current_ = NULL;
  if (GetArenaNoVirtual() == NULL && input_power_ != NULL) {
    delete input_power_;
  }
  input_power_ = NULL;
  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
  if (GetArenaNoVirtual() == NULL && output_power_ != NULL) {
    delete output_power_;
  }
  output_power_ = NULL;
  _internal_metadata_.Clear();
}

bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2790274970u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent laser_bias_current = 267426693 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current"];
      case 267426693: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 2139413546 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_laser_bias_current()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower input_power = 273167428 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power"];
      case 273167428: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 2185339426 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input_power()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue interface = 295428929 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/interface"];
      case 295428929: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 2363431434 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower output_power = 348784371 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power"];
      case 348784371: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 2790274970 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_output_power()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State)
  return false;
#undef DO_
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent laser_bias_current = 267426693 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current"];
  if (this->has_laser_bias_current()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      267426693, *this->laser_bias_current_, output);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower input_power = 273167428 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power"];
  if (this->has_input_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      273167428, *this->input_power_, output);
  }

  // .ywrapper.StringValue interface = 295428929 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/interface"];
  if (this->has_interface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      295428929, *this->interface_, output);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower output_power = 348784371 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power"];
  if (this->has_output_power()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      348784371, *this->output_power_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State)
}

::google::protobuf::uint8* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent laser_bias_current = 267426693 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current"];
  if (this->has_laser_bias_current()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        267426693, *this->laser_bias_current_, deterministic, target);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower input_power = 273167428 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power"];
  if (this->has_input_power()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        273167428, *this->input_power_, deterministic, target);
  }

  // .ywrapper.StringValue interface = 295428929 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/interface"];
  if (this->has_interface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        295428929, *this->interface_, deterministic, target);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower output_power = 348784371 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power"];
  if (this->has_output_power()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        348784371, *this->output_power_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State)
  return target;
}

size_t OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent laser_bias_current = 267426693 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current"];
  if (this->has_laser_bias_current()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->laser_bias_current_);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower input_power = 273167428 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power"];
  if (this->has_input_power()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->input_power_);
  }

  // .ywrapper.StringValue interface = 295428929 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/interface"];
  if (this->has_interface()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interface_);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower output_power = 348784371 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power"];
  if (this->has_output_power()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->output_power_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State)
  GOOGLE_DCHECK_NE(&from, this);
  const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State)
    MergeFrom(*source);
  }
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::MergeFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_laser_bias_current()) {
    mutable_laser_bias_current()->::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::MergeFrom(from.laser_bias_current());
  }
  if (from.has_input_power()) {
    mutable_input_power()->::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::MergeFrom(from.input_power());
  }
  if (from.has_interface()) {
    mutable_interface()->::ywrapper::StringValue::MergeFrom(from.interface());
  }
  if (from.has_output_power()) {
    mutable_output_power()->::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::MergeFrom(from.output_power());
  }
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::CopyFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::IsInitialized() const {
  return true;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::Swap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::InternalSwap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State* other) {
  using std::swap;
  swap(laser_bias_current_, other->laser_bias_current_);
  swap(input_power_, other->input_power_);
  swap(interface_, other->interface_);
  swap(output_power_, other->output_power_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::InitAsDefaultInstance() {
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config*>(
      ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State*>(
      ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::kConfigFieldNumber;
const int OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel)
}
OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel)
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&state_)) + sizeof(config_));
  _cached_size_ = 0;
}

OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::~OpticalAmplifier_SupervisoryChannels_SupervisoryChannel() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel)
  SharedDtor();
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel();
  return *internal_default_instance();
}

OpticalAmplifier_SupervisoryChannels_SupervisoryChannel* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::New(::google::protobuf::Arena* arena) const {
  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel* n = new OpticalAmplifier_SupervisoryChannels_SupervisoryChannel;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2397814114u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State state = 48802981 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state"];
      case 48802981: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 390423850 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config config = 299726764 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/config"];
      case 299726764: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 2397814114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel)
  return false;
#undef DO_
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State state = 48802981 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      48802981, *this->state_, output);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config config = 299726764 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      299726764, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel)
}

::google::protobuf::uint8* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State state = 48802981 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        48802981, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config config = 299726764 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        299726764, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel)
  return target;
}

size_t OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State state = 48802981 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config config = 299726764 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel)
  GOOGLE_DCHECK_NE(&from, this);
  const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel)
    MergeFrom(*source);
  }
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::MergeFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::MergeFrom(from.config());
  }
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::CopyFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::IsInitialized() const {
  return true;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::Swap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::InternalSwap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey_default_instance_._instance.get_mutable()->supervisory_channel_ = const_cast< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel*>(
      ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::kInterfaceFieldNumber;
const int OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::kSupervisoryChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey)
}
OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.interface().size() > 0) {
    interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.interface_);
  }
  if (from.has_supervisory_channel()) {
    supervisory_channel_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel(*from.supervisory_channel_);
  } else {
    supervisory_channel_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey)
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::SharedCtor() {
  interface_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  supervisory_channel_ = NULL;
  _cached_size_ = 0;
}

OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::~OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey)
  SharedDtor();
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::SharedDtor() {
  interface_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete supervisory_channel_;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey& OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey();
  return *internal_default_instance();
}

OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey* OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::New(::google::protobuf::Arena* arena) const {
  OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey* n = new OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  interface_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && supervisory_channel_ != NULL) {
    delete supervisory_channel_;
  }
  supervisory_channel_ = NULL;
  _internal_metadata_.Clear();
}

bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string interface = 1 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/interface"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_interface()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->interface().data(), static_cast<int>(this->interface().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey.interface"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel supervisory_channel = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_supervisory_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey)
  return false;
#undef DO_
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string interface = 1 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/interface"];
  if (this->interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->interface().data(), static_cast<int>(this->interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey.interface");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->interface(), output);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel supervisory_channel = 2;
  if (this->has_supervisory_channel()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->supervisory_channel_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey)
}

::google::protobuf::uint8* OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string interface = 1 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/interface"];
  if (this->interface().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->interface().data(), static_cast<int>(this->interface().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey.interface");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->interface(), target);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel supervisory_channel = 2;
  if (this->has_supervisory_channel()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->supervisory_channel_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey)
  return target;
}

size_t OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string interface = 1 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/interface"];
  if (this->interface().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->interface());
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel supervisory_channel = 2;
  if (this->has_supervisory_channel()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->supervisory_channel_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey)
  GOOGLE_DCHECK_NE(&from, this);
  const OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey)
    MergeFrom(*source);
  }
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::MergeFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.interface().size() > 0) {

    interface_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.interface_);
  }
  if (from.has_supervisory_channel()) {
    mutable_supervisory_channel()->::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::MergeFrom(from.supervisory_channel());
  }
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::CopyFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::IsInitialized() const {
  return true;
}

void OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::Swap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::InternalSwap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey* other) {
  using std::swap;
  interface_.Swap(&other->interface_);
  swap(supervisory_channel_, other->supervisory_channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpticalAmplifier_SupervisoryChannels::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpticalAmplifier_SupervisoryChannels::kSupervisoryChannelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpticalAmplifier_SupervisoryChannels::OpticalAmplifier_SupervisoryChannels()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels)
}
OpticalAmplifier_SupervisoryChannels::OpticalAmplifier_SupervisoryChannels(const OpticalAmplifier_SupervisoryChannels& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      supervisory_channel_(from.supervisory_channel_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels)
}

void OpticalAmplifier_SupervisoryChannels::SharedCtor() {
  _cached_size_ = 0;
}

OpticalAmplifier_SupervisoryChannels::~OpticalAmplifier_SupervisoryChannels() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels)
  SharedDtor();
}

void OpticalAmplifier_SupervisoryChannels::SharedDtor() {
}

void OpticalAmplifier_SupervisoryChannels::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpticalAmplifier_SupervisoryChannels::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpticalAmplifier_SupervisoryChannels& OpticalAmplifier_SupervisoryChannels::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels();
  return *internal_default_instance();
}

OpticalAmplifier_SupervisoryChannels* OpticalAmplifier_SupervisoryChannels::New(::google::protobuf::Arena* arena) const {
  OpticalAmplifier_SupervisoryChannels* n = new OpticalAmplifier_SupervisoryChannels;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpticalAmplifier_SupervisoryChannels::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  supervisory_channel_.Clear();
  _internal_metadata_.Clear();
}

bool OpticalAmplifier_SupervisoryChannels::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(341113818u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey supervisory_channel = 42639227 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel"];
      case 42639227: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 341113818 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_supervisory_channel()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels)
  return false;
#undef DO_
}

void OpticalAmplifier_SupervisoryChannels::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey supervisory_channel = 42639227 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->supervisory_channel_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      42639227, this->supervisory_channel(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels)
}

::google::protobuf::uint8* OpticalAmplifier_SupervisoryChannels::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey supervisory_channel = 42639227 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->supervisory_channel_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        42639227, this->supervisory_channel(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels)
  return target;
}

size_t OpticalAmplifier_SupervisoryChannels::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey supervisory_channel = 42639227 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel"];
  {
    unsigned int count = static_cast<unsigned int>(this->supervisory_channel_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->supervisory_channel(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpticalAmplifier_SupervisoryChannels::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels)
  GOOGLE_DCHECK_NE(&from, this);
  const OpticalAmplifier_SupervisoryChannels* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpticalAmplifier_SupervisoryChannels>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels)
    MergeFrom(*source);
  }
}

void OpticalAmplifier_SupervisoryChannels::MergeFrom(const OpticalAmplifier_SupervisoryChannels& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  supervisory_channel_.MergeFrom(from.supervisory_channel_);
}

void OpticalAmplifier_SupervisoryChannels::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpticalAmplifier_SupervisoryChannels::CopyFrom(const OpticalAmplifier_SupervisoryChannels& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpticalAmplifier_SupervisoryChannels::IsInitialized() const {
  return true;
}

void OpticalAmplifier_SupervisoryChannels::Swap(OpticalAmplifier_SupervisoryChannels* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpticalAmplifier_SupervisoryChannels::InternalSwap(OpticalAmplifier_SupervisoryChannels* other) {
  using std::swap;
  supervisory_channel_.InternalSwap(&other->supervisory_channel_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpticalAmplifier_SupervisoryChannels::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void OpticalAmplifier::InitAsDefaultInstance() {
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_default_instance_._instance.get_mutable()->amplifiers_ = const_cast< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers*>(
      ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers::internal_default_instance());
  ::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_default_instance_._instance.get_mutable()->supervisory_channels_ = const_cast< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels*>(
      ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int OpticalAmplifier::kAmplifiersFieldNumber;
const int OpticalAmplifier::kSupervisoryChannelsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

OpticalAmplifier::OpticalAmplifier()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier)
}
OpticalAmplifier::OpticalAmplifier(const OpticalAmplifier& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_supervisory_channels()) {
    supervisory_channels_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels(*from.supervisory_channels_);
  } else {
    supervisory_channels_ = NULL;
  }
  if (from.has_amplifiers()) {
    amplifiers_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers(*from.amplifiers_);
  } else {
    amplifiers_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier)
}

void OpticalAmplifier::SharedCtor() {
  ::memset(&supervisory_channels_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&amplifiers_) -
      reinterpret_cast<char*>(&supervisory_channels_)) + sizeof(amplifiers_));
  _cached_size_ = 0;
}

OpticalAmplifier::~OpticalAmplifier() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_optical_amplifier.OpticalAmplifier)
  SharedDtor();
}

void OpticalAmplifier::SharedDtor() {
  if (this != internal_default_instance()) delete supervisory_channels_;
  if (this != internal_default_instance()) delete amplifiers_;
}

void OpticalAmplifier::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OpticalAmplifier::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const OpticalAmplifier& OpticalAmplifier::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier();
  return *internal_default_instance();
}

OpticalAmplifier* OpticalAmplifier::New(::google::protobuf::Arena* arena) const {
  OpticalAmplifier* n = new OpticalAmplifier;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void OpticalAmplifier::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && supervisory_channels_ != NULL) {
    delete supervisory_channels_;
  }
  supervisory_channels_ = NULL;
  if (GetArenaNoVirtual() == NULL && amplifiers_ != NULL) {
    delete amplifiers_;
  }
  amplifiers_ = NULL;
  _internal_metadata_.Clear();
}

bool OpticalAmplifier::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2977474586u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels supervisory_channels = 28767387 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels"];
      case 28767387: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 230139098 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_supervisory_channels()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers amplifiers = 372184323 [(.yext.schemapath) = "/optical-amplifier/amplifiers"];
      case 372184323: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 2977474586 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_amplifiers()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_optical_amplifier.OpticalAmplifier)
  return false;
#undef DO_
}

void OpticalAmplifier::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels supervisory_channels = 28767387 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels"];
  if (this->has_supervisory_channels()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      28767387, *this->supervisory_channels_, output);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers amplifiers = 372184323 [(.yext.schemapath) = "/optical-amplifier/amplifiers"];
  if (this->has_amplifiers()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      372184323, *this->amplifiers_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier)
}

::google::protobuf::uint8* OpticalAmplifier::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels supervisory_channels = 28767387 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels"];
  if (this->has_supervisory_channels()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        28767387, *this->supervisory_channels_, deterministic, target);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers amplifiers = 372184323 [(.yext.schemapath) = "/optical-amplifier/amplifiers"];
  if (this->has_amplifiers()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        372184323, *this->amplifiers_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_optical_amplifier.OpticalAmplifier)
  return target;
}

size_t OpticalAmplifier::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels supervisory_channels = 28767387 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels"];
  if (this->has_supervisory_channels()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->supervisory_channels_);
  }

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers amplifiers = 372184323 [(.yext.schemapath) = "/optical-amplifier/amplifiers"];
  if (this->has_amplifiers()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->amplifiers_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OpticalAmplifier::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier)
  GOOGLE_DCHECK_NE(&from, this);
  const OpticalAmplifier* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const OpticalAmplifier>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_optical_amplifier.OpticalAmplifier)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_optical_amplifier.OpticalAmplifier)
    MergeFrom(*source);
  }
}

void OpticalAmplifier::MergeFrom(const OpticalAmplifier& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_supervisory_channels()) {
    mutable_supervisory_channels()->::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels::MergeFrom(from.supervisory_channels());
  }
  if (from.has_amplifiers()) {
    mutable_amplifiers()->::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers::MergeFrom(from.amplifiers());
  }
}

void OpticalAmplifier::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OpticalAmplifier::CopyFrom(const OpticalAmplifier& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_optical_amplifier.OpticalAmplifier)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OpticalAmplifier::IsInitialized() const {
  return true;
}

void OpticalAmplifier::Swap(OpticalAmplifier* other) {
  if (other == this) return;
  InternalSwap(other);
}
void OpticalAmplifier::InternalSwap(OpticalAmplifier* other) {
  using std::swap;
  swap(supervisory_channels_, other->supervisory_channels_);
  swap(amplifiers_, other->amplifiers_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata OpticalAmplifier::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace openconfig_optical_amplifier
}  // namespace openconfig

// @@protoc_insertion_point(global_scope)
