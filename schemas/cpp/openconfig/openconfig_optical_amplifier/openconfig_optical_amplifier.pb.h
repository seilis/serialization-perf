// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: openconfig/openconfig_optical_amplifier/openconfig_optical_amplifier.proto

#ifndef PROTOBUF_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto__INCLUDED
#define PROTOBUF_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "github.com/openconfig/ygot/proto/ywrapper/ywrapper.pb.h"
#include "github.com/openconfig/ygot/proto/yext/yext.pb.h"
#include "openconfig/enums/enums.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[24];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_ConfigImpl();
void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_Config();
void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_ActualGainImpl();
void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_ActualGain();
void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTiltImpl();
void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt();
void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBandImpl();
void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand();
void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBandImpl();
void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand();
void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotalImpl();
void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal();
void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrentImpl();
void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent();
void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLossImpl();
void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss();
void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBandImpl();
void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand();
void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBandImpl();
void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand();
void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotalImpl();
void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal();
void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_StateImpl();
void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State();
void InitDefaultsOpticalAmplifier_Amplifiers_AmplifierImpl();
void InitDefaultsOpticalAmplifier_Amplifiers_Amplifier();
void InitDefaultsOpticalAmplifier_Amplifiers_AmplifierKeyImpl();
void InitDefaultsOpticalAmplifier_Amplifiers_AmplifierKey();
void InitDefaultsOpticalAmplifier_AmplifiersImpl();
void InitDefaultsOpticalAmplifier_Amplifiers();
void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_ConfigImpl();
void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config();
void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPowerImpl();
void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower();
void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrentImpl();
void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent();
void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPowerImpl();
void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower();
void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_StateImpl();
void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State();
void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannelImpl();
void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel();
void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannelKeyImpl();
void InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey();
void InitDefaultsOpticalAmplifier_SupervisoryChannelsImpl();
void InitDefaultsOpticalAmplifier_SupervisoryChannels();
void InitDefaultsOpticalAmplifierImpl();
void InitDefaultsOpticalAmplifier();
inline void InitDefaults() {
  InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_Config();
  InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_ActualGain();
  InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt();
  InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand();
  InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand();
  InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal();
  InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent();
  InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss();
  InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand();
  InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand();
  InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal();
  InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State();
  InitDefaultsOpticalAmplifier_Amplifiers_Amplifier();
  InitDefaultsOpticalAmplifier_Amplifiers_AmplifierKey();
  InitDefaultsOpticalAmplifier_Amplifiers();
  InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config();
  InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower();
  InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent();
  InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower();
  InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State();
  InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel();
  InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey();
  InitDefaultsOpticalAmplifier_SupervisoryChannels();
  InitDefaultsOpticalAmplifier();
}
}  // namespace protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto
namespace openconfig {
namespace openconfig_optical_amplifier {
class OpticalAmplifier;
class OpticalAmplifierDefaultTypeInternal;
extern OpticalAmplifierDefaultTypeInternal _OpticalAmplifier_default_instance_;
class OpticalAmplifier_Amplifiers;
class OpticalAmplifier_AmplifiersDefaultTypeInternal;
extern OpticalAmplifier_AmplifiersDefaultTypeInternal _OpticalAmplifier_Amplifiers_default_instance_;
class OpticalAmplifier_Amplifiers_Amplifier;
class OpticalAmplifier_Amplifiers_AmplifierDefaultTypeInternal;
extern OpticalAmplifier_Amplifiers_AmplifierDefaultTypeInternal _OpticalAmplifier_Amplifiers_Amplifier_default_instance_;
class OpticalAmplifier_Amplifiers_AmplifierKey;
class OpticalAmplifier_Amplifiers_AmplifierKeyDefaultTypeInternal;
extern OpticalAmplifier_Amplifiers_AmplifierKeyDefaultTypeInternal _OpticalAmplifier_Amplifiers_AmplifierKey_default_instance_;
class OpticalAmplifier_Amplifiers_Amplifier_Config;
class OpticalAmplifier_Amplifiers_Amplifier_ConfigDefaultTypeInternal;
extern OpticalAmplifier_Amplifiers_Amplifier_ConfigDefaultTypeInternal _OpticalAmplifier_Amplifiers_Amplifier_Config_default_instance_;
class OpticalAmplifier_Amplifiers_Amplifier_State;
class OpticalAmplifier_Amplifiers_Amplifier_StateDefaultTypeInternal;
extern OpticalAmplifier_Amplifiers_Amplifier_StateDefaultTypeInternal _OpticalAmplifier_Amplifiers_Amplifier_State_default_instance_;
class OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain;
class OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainDefaultTypeInternal;
extern OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainDefaultTypeInternal _OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain_default_instance_;
class OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt;
class OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTiltDefaultTypeInternal;
extern OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTiltDefaultTypeInternal _OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt_default_instance_;
class OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand;
class OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBandDefaultTypeInternal;
extern OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBandDefaultTypeInternal _OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand_default_instance_;
class OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand;
class OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBandDefaultTypeInternal;
extern OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBandDefaultTypeInternal _OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand_default_instance_;
class OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal;
class OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotalDefaultTypeInternal;
extern OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotalDefaultTypeInternal _OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal_default_instance_;
class OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent;
class OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrentDefaultTypeInternal;
extern OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrentDefaultTypeInternal _OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent_default_instance_;
class OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss;
class OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLossDefaultTypeInternal;
extern OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLossDefaultTypeInternal _OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss_default_instance_;
class OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand;
class OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBandDefaultTypeInternal;
extern OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBandDefaultTypeInternal _OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand_default_instance_;
class OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand;
class OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBandDefaultTypeInternal;
extern OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBandDefaultTypeInternal _OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand_default_instance_;
class OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal;
class OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotalDefaultTypeInternal;
extern OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotalDefaultTypeInternal _OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal_default_instance_;
class OpticalAmplifier_SupervisoryChannels;
class OpticalAmplifier_SupervisoryChannelsDefaultTypeInternal;
extern OpticalAmplifier_SupervisoryChannelsDefaultTypeInternal _OpticalAmplifier_SupervisoryChannels_default_instance_;
class OpticalAmplifier_SupervisoryChannels_SupervisoryChannel;
class OpticalAmplifier_SupervisoryChannels_SupervisoryChannelDefaultTypeInternal;
extern OpticalAmplifier_SupervisoryChannels_SupervisoryChannelDefaultTypeInternal _OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_default_instance_;
class OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey;
class OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKeyDefaultTypeInternal;
extern OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKeyDefaultTypeInternal _OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey_default_instance_;
class OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config;
class OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_ConfigDefaultTypeInternal;
extern OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_ConfigDefaultTypeInternal _OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config_default_instance_;
class OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State;
class OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_StateDefaultTypeInternal;
extern OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_StateDefaultTypeInternal _OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_default_instance_;
class OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower;
class OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPowerDefaultTypeInternal;
extern OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPowerDefaultTypeInternal _OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower_default_instance_;
class OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent;
class OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrentDefaultTypeInternal;
extern OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrentDefaultTypeInternal _OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent_default_instance_;
class OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower;
class OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPowerDefaultTypeInternal;
extern OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPowerDefaultTypeInternal _OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower_default_instance_;
}  // namespace openconfig_optical_amplifier
}  // namespace openconfig
namespace openconfig {
namespace openconfig_optical_amplifier {

// ===================================================================

class OpticalAmplifier_Amplifiers_Amplifier_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config) */ {
 public:
  OpticalAmplifier_Amplifiers_Amplifier_Config();
  virtual ~OpticalAmplifier_Amplifiers_Amplifier_Config();

  OpticalAmplifier_Amplifiers_Amplifier_Config(const OpticalAmplifier_Amplifiers_Amplifier_Config& from);

  inline OpticalAmplifier_Amplifiers_Amplifier_Config& operator=(const OpticalAmplifier_Amplifiers_Amplifier_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpticalAmplifier_Amplifiers_Amplifier_Config(OpticalAmplifier_Amplifiers_Amplifier_Config&& from) noexcept
    : OpticalAmplifier_Amplifiers_Amplifier_Config() {
    *this = ::std::move(from);
  }

  inline OpticalAmplifier_Amplifiers_Amplifier_Config& operator=(OpticalAmplifier_Amplifiers_Amplifier_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpticalAmplifier_Amplifiers_Amplifier_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpticalAmplifier_Amplifiers_Amplifier_Config* internal_default_instance() {
    return reinterpret_cast<const OpticalAmplifier_Amplifiers_Amplifier_Config*>(
               &_OpticalAmplifier_Amplifiers_Amplifier_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(OpticalAmplifier_Amplifiers_Amplifier_Config* other);
  friend void swap(OpticalAmplifier_Amplifiers_Amplifier_Config& a, OpticalAmplifier_Amplifiers_Amplifier_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpticalAmplifier_Amplifiers_Amplifier_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  OpticalAmplifier_Amplifiers_Amplifier_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpticalAmplifier_Amplifiers_Amplifier_Config& from);
  void MergeFrom(const OpticalAmplifier_Amplifiers_Amplifier_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpticalAmplifier_Amplifiers_Amplifier_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue name = 237538034 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 237538034;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .ywrapper.BoolValue enabled = 274752762 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/enabled"];
  bool has_enabled() const;
  void clear_enabled();
  static const int kEnabledFieldNumber = 274752762;
  const ::ywrapper::BoolValue& enabled() const;
  ::ywrapper::BoolValue* release_enabled();
  ::ywrapper::BoolValue* mutable_enabled();
  void set_allocated_enabled(::ywrapper::BoolValue* enabled);

  // .ywrapper.Decimal64Value target_gain = 287715864 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/target-gain"];
  bool has_target_gain() const;
  void clear_target_gain();
  static const int kTargetGainFieldNumber = 287715864;
  const ::ywrapper::Decimal64Value& target_gain() const;
  ::ywrapper::Decimal64Value* release_target_gain();
  ::ywrapper::Decimal64Value* mutable_target_gain();
  void set_allocated_target_gain(::ywrapper::Decimal64Value* target_gain);

  // .ywrapper.Decimal64Value target_output_power = 457627626 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/target-output-power"];
  bool has_target_output_power() const;
  void clear_target_output_power();
  static const int kTargetOutputPowerFieldNumber = 457627626;
  const ::ywrapper::Decimal64Value& target_output_power() const;
  ::ywrapper::Decimal64Value* release_target_output_power();
  ::ywrapper::Decimal64Value* mutable_target_output_power();
  void set_allocated_target_output_power(::ywrapper::Decimal64Value* target_output_power);

  // .ywrapper.Decimal64Value target_gain_tilt = 534835064 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/target-gain-tilt"];
  bool has_target_gain_tilt() const;
  void clear_target_gain_tilt();
  static const int kTargetGainTiltFieldNumber = 534835064;
  const ::ywrapper::Decimal64Value& target_gain_tilt() const;
  ::ywrapper::Decimal64Value* release_target_gain_tilt();
  ::ywrapper::Decimal64Value* mutable_target_gain_tilt();
  void set_allocated_target_gain_tilt(::ywrapper::Decimal64Value* target_gain_tilt);

  // .openconfig.enums.OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE amp_mode = 213173045 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/amp-mode"];
  void clear_amp_mode();
  static const int kAmpModeFieldNumber = 213173045;
  ::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE amp_mode() const;
  void set_amp_mode(::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE value);

  // .openconfig.enums.OpenconfigOpticalAmplifierGAINRANGE gain_range = 391412418 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/gain-range"];
  void clear_gain_range();
  static const int kGainRangeFieldNumber = 391412418;
  ::openconfig::enums::OpenconfigOpticalAmplifierGAINRANGE gain_range() const;
  void set_gain_range(::openconfig::enums::OpenconfigOpticalAmplifierGAINRANGE value);

  // .openconfig.enums.OpenconfigOpticalAmplifierFIBERTYPEPROFILE fiber_type_profile = 422775780 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/fiber-type-profile"];
  void clear_fiber_type_profile();
  static const int kFiberTypeProfileFieldNumber = 422775780;
  ::openconfig::enums::OpenconfigOpticalAmplifierFIBERTYPEPROFILE fiber_type_profile() const;
  void set_fiber_type_profile(::openconfig::enums::OpenconfigOpticalAmplifierFIBERTYPEPROFILE value);

  // .openconfig.enums.OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE type = 497413935 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/type"];
  void clear_type();
  static const int kTypeFieldNumber = 497413935;
  ::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE type() const;
  void set_type(::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* name_;
  ::ywrapper::BoolValue* enabled_;
  ::ywrapper::Decimal64Value* target_gain_;
  ::ywrapper::Decimal64Value* target_output_power_;
  ::ywrapper::Decimal64Value* target_gain_tilt_;
  int amp_mode_;
  int gain_range_;
  int fiber_type_profile_;
  int type_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_ConfigImpl();
};
// -------------------------------------------------------------------

class OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain) */ {
 public:
  OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain();
  virtual ~OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain();

  OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain(const OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain& from);

  inline OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain& operator=(const OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain(OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain&& from) noexcept
    : OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain() {
    *this = ::std::move(from);
  }

  inline OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain& operator=(OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain* internal_default_instance() {
    return reinterpret_cast<const OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain*>(
               &_OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain* other);
  friend void swap(OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain& a, OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain* New() const PROTOBUF_FINAL { return New(NULL); }

  OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain& from);
  void MergeFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue interval = 41392966 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 41392966;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.Decimal64Value instant = 107311160 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 107311160;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.Decimal64Value max = 139553953 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 139553953;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // .ywrapper.Decimal64Value avg = 156932943 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 156932943;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // .ywrapper.Decimal64Value min = 273774879 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 273774879;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::Decimal64Value* max_;
  ::ywrapper::Decimal64Value* avg_;
  ::ywrapper::Decimal64Value* min_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_ActualGainImpl();
};
// -------------------------------------------------------------------

class OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt) */ {
 public:
  OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt();
  virtual ~OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt();

  OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt(const OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt& from);

  inline OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt& operator=(const OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt(OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt&& from) noexcept
    : OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt() {
    *this = ::std::move(from);
  }

  inline OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt& operator=(OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt* internal_default_instance() {
    return reinterpret_cast<const OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt*>(
               &_OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt* other);
  friend void swap(OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt& a, OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt* New() const PROTOBUF_FINAL { return New(NULL); }

  OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt& from);
  void MergeFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value min = 55384195 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 55384195;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // .ywrapper.Decimal64Value avg = 342459139 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 342459139;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // .ywrapper.Decimal64Value instant = 364260860 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 364260860;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.UintValue interval = 448738762 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 448738762;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.Decimal64Value max = 458034221 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 458034221;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* min_;
  ::ywrapper::Decimal64Value* avg_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::Decimal64Value* max_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTiltImpl();
};
// -------------------------------------------------------------------

class OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand) */ {
 public:
  OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand();
  virtual ~OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand();

  OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand(const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand& from);

  inline OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand& operator=(const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand(OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand&& from) noexcept
    : OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand() {
    *this = ::std::move(from);
  }

  inline OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand& operator=(OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand* internal_default_instance() {
    return reinterpret_cast<const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand*>(
               &_OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand* other);
  friend void swap(OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand& a, OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand* New() const PROTOBUF_FINAL { return New(NULL); }

  OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand& from);
  void MergeFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue interval = 55665268 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 55665268;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.Decimal64Value max = 247141399 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 247141399;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // .ywrapper.Decimal64Value min = 381362537 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 381362537;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // .ywrapper.Decimal64Value avg = 463266069 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 463266069;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // .ywrapper.Decimal64Value instant = 490318226 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 490318226;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::Decimal64Value* max_;
  ::ywrapper::Decimal64Value* min_;
  ::ywrapper::Decimal64Value* avg_;
  ::ywrapper::Decimal64Value* instant_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBandImpl();
};
// -------------------------------------------------------------------

class OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand) */ {
 public:
  OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand();
  virtual ~OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand();

  OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand(const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand& from);

  inline OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand& operator=(const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand(OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand&& from) noexcept
    : OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand() {
    *this = ::std::move(from);
  }

  inline OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand& operator=(OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand* internal_default_instance() {
    return reinterpret_cast<const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand*>(
               &_OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand* other);
  friend void swap(OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand& a, OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand* New() const PROTOBUF_FINAL { return New(NULL); }

  OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand& from);
  void MergeFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value instant = 117495079 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 117495079;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.Decimal64Value avg = 295143420 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 295143420;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // .ywrapper.UintValue interval = 341383863 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 341383863;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.Decimal64Value min = 379619768 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 379619768;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // .ywrapper.Decimal64Value max = 513840662 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 513840662;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::Decimal64Value* avg_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::Decimal64Value* min_;
  ::ywrapper::Decimal64Value* max_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBandImpl();
};
// -------------------------------------------------------------------

class OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal) */ {
 public:
  OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal();
  virtual ~OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal();

  OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal(const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal& from);

  inline OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal& operator=(const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal(OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal&& from) noexcept
    : OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal() {
    *this = ::std::move(from);
  }

  inline OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal& operator=(OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal* internal_default_instance() {
    return reinterpret_cast<const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal*>(
               &_OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal* other);
  friend void swap(OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal& a, OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal* New() const PROTOBUF_FINAL { return New(NULL); }

  OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal& from);
  void MergeFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value min = 60702004 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 60702004;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // .ywrapper.Decimal64Value avg = 109050616 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 109050616;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // .ywrapper.Decimal64Value instant = 261310371 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 261310371;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.Decimal64Value max = 463351994 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 463351994;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // .ywrapper.UintValue interval = 501780355 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 501780355;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* min_;
  ::ywrapper::Decimal64Value* avg_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::Decimal64Value* max_;
  ::ywrapper::UintValue* interval_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotalImpl();
};
// -------------------------------------------------------------------

class OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent) */ {
 public:
  OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent();
  virtual ~OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent();

  OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent(const OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent& from);

  inline OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent& operator=(const OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent(OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent&& from) noexcept
    : OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent() {
    *this = ::std::move(from);
  }

  inline OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent& operator=(OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent* internal_default_instance() {
    return reinterpret_cast<const OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent*>(
               &_OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent* other);
  friend void swap(OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent& a, OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent* New() const PROTOBUF_FINAL { return New(NULL); }

  OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent& from);
  void MergeFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue interval = 50187495 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 50187495;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.Decimal64Value avg = 200827724 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 200827724;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // .ywrapper.Decimal64Value min = 285394536 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 285394536;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // .ywrapper.Decimal64Value max = 419615462 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 419615462;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // .ywrapper.Decimal64Value instant = 534817719 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 534817719;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::Decimal64Value* avg_;
  ::ywrapper::Decimal64Value* min_;
  ::ywrapper::Decimal64Value* max_;
  ::ywrapper::Decimal64Value* instant_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrentImpl();
};
// -------------------------------------------------------------------

class OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss) */ {
 public:
  OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss();
  virtual ~OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss();

  OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss(const OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss& from);

  inline OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss& operator=(const OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss(OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss&& from) noexcept
    : OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss() {
    *this = ::std::move(from);
  }

  inline OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss& operator=(OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss* internal_default_instance() {
    return reinterpret_cast<const OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss*>(
               &_OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss* other);
  friend void swap(OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss& a, OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss* New() const PROTOBUF_FINAL { return New(NULL); }

  OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss& from);
  void MergeFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value avg = 22622816 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 22622816;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // .ywrapper.Decimal64Value instant = 124129147 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 124129147;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.Decimal64Value min = 240040268 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 240040268;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // .ywrapper.UintValue interval = 348154123 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 348154123;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.Decimal64Value max = 374261186 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 374261186;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* avg_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::Decimal64Value* min_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::Decimal64Value* max_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLossImpl();
};
// -------------------------------------------------------------------

class OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand) */ {
 public:
  OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand();
  virtual ~OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand();

  OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand(const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand& from);

  inline OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand& operator=(const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand(OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand&& from) noexcept
    : OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand() {
    *this = ::std::move(from);
  }

  inline OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand& operator=(OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand* internal_default_instance() {
    return reinterpret_cast<const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand*>(
               &_OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand* other);
  friend void swap(OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand& a, OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand* New() const PROTOBUF_FINAL { return New(NULL); }

  OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand& from);
  void MergeFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value instant = 155851687 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 155851687;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.Decimal64Value avg = 159475324 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 159475324;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // .ywrapper.UintValue interval = 229840439 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 229840439;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.Decimal64Value min = 243951672 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 243951672;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // .ywrapper.Decimal64Value max = 378172566 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 378172566;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::Decimal64Value* avg_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::Decimal64Value* min_;
  ::ywrapper::Decimal64Value* max_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBandImpl();
};
// -------------------------------------------------------------------

class OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand) */ {
 public:
  OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand();
  virtual ~OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand();

  OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand(const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand& from);

  inline OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand& operator=(const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand(OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand&& from) noexcept
    : OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand() {
    *this = ::std::move(from);
  }

  inline OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand& operator=(OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand* internal_default_instance() {
    return reinterpret_cast<const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand*>(
               &_OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand* other);
  friend void swap(OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand& a, OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand* New() const PROTOBUF_FINAL { return New(NULL); }

  OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand& from);
  void MergeFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value max = 111473303 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 111473303;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // .ywrapper.Decimal64Value min = 245694441 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 245694441;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // .ywrapper.Decimal64Value avg = 327597973 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 327597973;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // .ywrapper.UintValue interval = 480992756 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 480992756;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.Decimal64Value instant = 528674834 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 528674834;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* max_;
  ::ywrapper::Decimal64Value* min_;
  ::ywrapper::Decimal64Value* avg_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::Decimal64Value* instant_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBandImpl();
};
// -------------------------------------------------------------------

class OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal) */ {
 public:
  OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal();
  virtual ~OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal();

  OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal(const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal& from);

  inline OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal& operator=(const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal(OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal&& from) noexcept
    : OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal() {
    *this = ::std::move(from);
  }

  inline OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal& operator=(OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal* internal_default_instance() {
    return reinterpret_cast<const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal*>(
               &_OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal* other);
  friend void swap(OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal& a, OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal* New() const PROTOBUF_FINAL { return New(NULL); }

  OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal& from);
  void MergeFrom(const OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value instant = 16585284 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 16585284;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.UintValue interval = 58825282 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 58825282;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.Decimal64Value min = 205327691 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 205327691;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // .ywrapper.Decimal64Value avg = 221413691 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 221413691;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // .ywrapper.Decimal64Value max = 339548613 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 339548613;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::Decimal64Value* min_;
  ::ywrapper::Decimal64Value* avg_;
  ::ywrapper::Decimal64Value* max_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotalImpl();
};
// -------------------------------------------------------------------

class OpticalAmplifier_Amplifiers_Amplifier_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State) */ {
 public:
  OpticalAmplifier_Amplifiers_Amplifier_State();
  virtual ~OpticalAmplifier_Amplifiers_Amplifier_State();

  OpticalAmplifier_Amplifiers_Amplifier_State(const OpticalAmplifier_Amplifiers_Amplifier_State& from);

  inline OpticalAmplifier_Amplifiers_Amplifier_State& operator=(const OpticalAmplifier_Amplifiers_Amplifier_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpticalAmplifier_Amplifiers_Amplifier_State(OpticalAmplifier_Amplifiers_Amplifier_State&& from) noexcept
    : OpticalAmplifier_Amplifiers_Amplifier_State() {
    *this = ::std::move(from);
  }

  inline OpticalAmplifier_Amplifiers_Amplifier_State& operator=(OpticalAmplifier_Amplifiers_Amplifier_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpticalAmplifier_Amplifiers_Amplifier_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpticalAmplifier_Amplifiers_Amplifier_State* internal_default_instance() {
    return reinterpret_cast<const OpticalAmplifier_Amplifiers_Amplifier_State*>(
               &_OpticalAmplifier_Amplifiers_Amplifier_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(OpticalAmplifier_Amplifiers_Amplifier_State* other);
  friend void swap(OpticalAmplifier_Amplifiers_Amplifier_State& a, OpticalAmplifier_Amplifiers_Amplifier_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpticalAmplifier_Amplifiers_Amplifier_State* New() const PROTOBUF_FINAL { return New(NULL); }

  OpticalAmplifier_Amplifiers_Amplifier_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpticalAmplifier_Amplifiers_Amplifier_State& from);
  void MergeFrom(const OpticalAmplifier_Amplifiers_Amplifier_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpticalAmplifier_Amplifiers_Amplifier_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain ActualGain;
  typedef OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt ActualGainTilt;
  typedef OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand InputPowerCBand;
  typedef OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand InputPowerLBand;
  typedef OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal InputPowerTotal;
  typedef OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent LaserBiasCurrent;
  typedef OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss OpticalReturnLoss;
  typedef OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand OutputPowerCBand;
  typedef OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand OutputPowerLBand;
  typedef OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal OutputPowerTotal;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss optical_return_loss = 1826957 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss"];
  bool has_optical_return_loss() const;
  void clear_optical_return_loss();
  static const int kOpticalReturnLossFieldNumber = 1826957;
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss& optical_return_loss() const;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss* release_optical_return_loss();
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss* mutable_optical_return_loss();
  void set_allocated_optical_return_loss(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss* optical_return_loss);

  // .ywrapper.Decimal64Value target_output_power = 39144115 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/target-output-power"];
  bool has_target_output_power() const;
  void clear_target_output_power();
  static const int kTargetOutputPowerFieldNumber = 39144115;
  const ::ywrapper::Decimal64Value& target_output_power() const;
  ::ywrapper::Decimal64Value* release_target_output_power();
  ::ywrapper::Decimal64Value* mutable_target_output_power();
  void set_allocated_target_output_power(::ywrapper::Decimal64Value* target_output_power);

  // .ywrapper.StringValue component = 124258433 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/component"];
  bool has_component() const;
  void clear_component();
  static const int kComponentFieldNumber = 124258433;
  const ::ywrapper::StringValue& component() const;
  ::ywrapper::StringValue* release_component();
  ::ywrapper::StringValue* mutable_component();
  void set_allocated_component(::ywrapper::StringValue* component);

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand output_power_l_band = 148447468 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band"];
  bool has_output_power_l_band() const;
  void clear_output_power_l_band();
  static const int kOutputPowerLBandFieldNumber = 148447468;
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand& output_power_l_band() const;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand* release_output_power_l_band();
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand* mutable_output_power_l_band();
  void set_allocated_output_power_l_band(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand* output_power_l_band);

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal output_power_total = 170412918 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total"];
  bool has_output_power_total() const;
  void clear_output_power_total();
  static const int kOutputPowerTotalFieldNumber = 170412918;
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal& output_power_total() const;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal* release_output_power_total();
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal* mutable_output_power_total();
  void set_allocated_output_power_total(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal* output_power_total);

  // .ywrapper.Decimal64Value target_gain_tilt = 253671195 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/target-gain-tilt"];
  bool has_target_gain_tilt() const;
  void clear_target_gain_tilt();
  static const int kTargetGainTiltFieldNumber = 253671195;
  const ::ywrapper::Decimal64Value& target_gain_tilt() const;
  ::ywrapper::Decimal64Value* release_target_gain_tilt();
  ::ywrapper::Decimal64Value* mutable_target_gain_tilt();
  void set_allocated_target_gain_tilt(::ywrapper::Decimal64Value* target_gain_tilt);

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal input_power_total = 290016501 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total"];
  bool has_input_power_total() const;
  void clear_input_power_total();
  static const int kInputPowerTotalFieldNumber = 290016501;
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal& input_power_total() const;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal* release_input_power_total();
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal* mutable_input_power_total();
  void set_allocated_input_power_total(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal* input_power_total);

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand input_power_l_band = 362773089 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band"];
  bool has_input_power_l_band() const;
  void clear_input_power_l_band();
  static const int kInputPowerLBandFieldNumber = 362773089;
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand& input_power_l_band() const;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand* release_input_power_l_band();
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand* mutable_input_power_l_band();
  void set_allocated_input_power_l_band(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand* input_power_l_band);

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent laser_bias_current = 363893777 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current"];
  bool has_laser_bias_current() const;
  void clear_laser_bias_current();
  static const int kLaserBiasCurrentFieldNumber = 363893777;
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent& laser_bias_current() const;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent* release_laser_bias_current();
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent* mutable_laser_bias_current();
  void set_allocated_laser_bias_current(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent* laser_bias_current);

  // .ywrapper.Decimal64Value target_gain = 382709921 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/target-gain"];
  bool has_target_gain() const;
  void clear_target_gain();
  static const int kTargetGainFieldNumber = 382709921;
  const ::ywrapper::Decimal64Value& target_gain() const;
  ::ywrapper::Decimal64Value* release_target_gain();
  ::ywrapper::Decimal64Value* mutable_target_gain();
  void set_allocated_target_gain(::ywrapper::Decimal64Value* target_gain);

  // .ywrapper.StringValue name = 411449237 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 411449237;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt actual_gain_tilt = 414245390 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt"];
  bool has_actual_gain_tilt() const;
  void clear_actual_gain_tilt();
  static const int kActualGainTiltFieldNumber = 414245390;
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt& actual_gain_tilt() const;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt* release_actual_gain_tilt();
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt* mutable_actual_gain_tilt();
  void set_allocated_actual_gain_tilt(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt* actual_gain_tilt);

  // .ywrapper.BoolValue enabled = 423614103 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/enabled"];
  bool has_enabled() const;
  void clear_enabled();
  static const int kEnabledFieldNumber = 423614103;
  const ::ywrapper::BoolValue& enabled() const;
  ::ywrapper::BoolValue* release_enabled();
  ::ywrapper::BoolValue* mutable_enabled();
  void set_allocated_enabled(::ywrapper::BoolValue* enabled);

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain actual_gain = 427903922 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain"];
  bool has_actual_gain() const;
  void clear_actual_gain();
  static const int kActualGainFieldNumber = 427903922;
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain& actual_gain() const;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain* release_actual_gain();
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain* mutable_actual_gain();
  void set_allocated_actual_gain(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain* actual_gain);

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand input_power_c_band = 514337388 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band"];
  bool has_input_power_c_band() const;
  void clear_input_power_c_band();
  static const int kInputPowerCBandFieldNumber = 514337388;
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand& input_power_c_band() const;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand* release_input_power_c_band();
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand* mutable_input_power_c_band();
  void set_allocated_input_power_c_band(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand* input_power_c_band);

  // .ywrapper.StringValue egress_port = 529707375 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/egress-port"];
  bool has_egress_port() const;
  void clear_egress_port();
  static const int kEgressPortFieldNumber = 529707375;
  const ::ywrapper::StringValue& egress_port() const;
  ::ywrapper::StringValue* release_egress_port();
  ::ywrapper::StringValue* mutable_egress_port();
  void set_allocated_egress_port(::ywrapper::StringValue* egress_port);

  // .ywrapper.StringValue ingress_port = 532185287 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/ingress-port"];
  bool has_ingress_port() const;
  void clear_ingress_port();
  static const int kIngressPortFieldNumber = 532185287;
  const ::ywrapper::StringValue& ingress_port() const;
  ::ywrapper::StringValue* release_ingress_port();
  ::ywrapper::StringValue* mutable_ingress_port();
  void set_allocated_ingress_port(::ywrapper::StringValue* ingress_port);

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand output_power_c_band = 533754081 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band"];
  bool has_output_power_c_band() const;
  void clear_output_power_c_band();
  static const int kOutputPowerCBandFieldNumber = 533754081;
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand& output_power_c_band() const;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand* release_output_power_c_band();
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand* mutable_output_power_c_band();
  void set_allocated_output_power_c_band(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand* output_power_c_band);

  // .openconfig.enums.OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE type = 28656020 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/type"];
  void clear_type();
  static const int kTypeFieldNumber = 28656020;
  ::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE type() const;
  void set_type(::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE value);

  // .openconfig.enums.OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE amp_mode = 314189198 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/amp-mode"];
  void clear_amp_mode();
  static const int kAmpModeFieldNumber = 314189198;
  ::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE amp_mode() const;
  void set_amp_mode(::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE value);

  // .openconfig.enums.OpenconfigOpticalAmplifierFIBERTYPEPROFILE fiber_type_profile = 412975067 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/fiber-type-profile"];
  void clear_fiber_type_profile();
  static const int kFiberTypeProfileFieldNumber = 412975067;
  ::openconfig::enums::OpenconfigOpticalAmplifierFIBERTYPEPROFILE fiber_type_profile() const;
  void set_fiber_type_profile(::openconfig::enums::OpenconfigOpticalAmplifierFIBERTYPEPROFILE value);

  // .openconfig.enums.OpenconfigOpticalAmplifierGAINRANGE gain_range = 452923353 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/gain-range"];
  void clear_gain_range();
  static const int kGainRangeFieldNumber = 452923353;
  ::openconfig::enums::OpenconfigOpticalAmplifierGAINRANGE gain_range() const;
  void set_gain_range(::openconfig::enums::OpenconfigOpticalAmplifierGAINRANGE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss* optical_return_loss_;
  ::ywrapper::Decimal64Value* target_output_power_;
  ::ywrapper::StringValue* component_;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand* output_power_l_band_;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal* output_power_total_;
  ::ywrapper::Decimal64Value* target_gain_tilt_;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal* input_power_total_;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand* input_power_l_band_;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent* laser_bias_current_;
  ::ywrapper::Decimal64Value* target_gain_;
  ::ywrapper::StringValue* name_;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt* actual_gain_tilt_;
  ::ywrapper::BoolValue* enabled_;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain* actual_gain_;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand* input_power_c_band_;
  ::ywrapper::StringValue* egress_port_;
  ::ywrapper::StringValue* ingress_port_;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand* output_power_c_band_;
  int type_;
  int amp_mode_;
  int fiber_type_profile_;
  int gain_range_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_Amplifier_StateImpl();
};
// -------------------------------------------------------------------

class OpticalAmplifier_Amplifiers_Amplifier : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier) */ {
 public:
  OpticalAmplifier_Amplifiers_Amplifier();
  virtual ~OpticalAmplifier_Amplifiers_Amplifier();

  OpticalAmplifier_Amplifiers_Amplifier(const OpticalAmplifier_Amplifiers_Amplifier& from);

  inline OpticalAmplifier_Amplifiers_Amplifier& operator=(const OpticalAmplifier_Amplifiers_Amplifier& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpticalAmplifier_Amplifiers_Amplifier(OpticalAmplifier_Amplifiers_Amplifier&& from) noexcept
    : OpticalAmplifier_Amplifiers_Amplifier() {
    *this = ::std::move(from);
  }

  inline OpticalAmplifier_Amplifiers_Amplifier& operator=(OpticalAmplifier_Amplifiers_Amplifier&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpticalAmplifier_Amplifiers_Amplifier& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpticalAmplifier_Amplifiers_Amplifier* internal_default_instance() {
    return reinterpret_cast<const OpticalAmplifier_Amplifiers_Amplifier*>(
               &_OpticalAmplifier_Amplifiers_Amplifier_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(OpticalAmplifier_Amplifiers_Amplifier* other);
  friend void swap(OpticalAmplifier_Amplifiers_Amplifier& a, OpticalAmplifier_Amplifiers_Amplifier& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpticalAmplifier_Amplifiers_Amplifier* New() const PROTOBUF_FINAL { return New(NULL); }

  OpticalAmplifier_Amplifiers_Amplifier* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpticalAmplifier_Amplifiers_Amplifier& from);
  void MergeFrom(const OpticalAmplifier_Amplifiers_Amplifier& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpticalAmplifier_Amplifiers_Amplifier* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef OpticalAmplifier_Amplifiers_Amplifier_Config Config;
  typedef OpticalAmplifier_Amplifiers_Amplifier_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config config = 47251912 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 47251912;
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config& config() const;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config* release_config();
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config* config);

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State state = 337450593 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 337450593;
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State& state() const;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State* release_state();
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config* config_;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_AmplifierImpl();
};
// -------------------------------------------------------------------

class OpticalAmplifier_Amplifiers_AmplifierKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey) */ {
 public:
  OpticalAmplifier_Amplifiers_AmplifierKey();
  virtual ~OpticalAmplifier_Amplifiers_AmplifierKey();

  OpticalAmplifier_Amplifiers_AmplifierKey(const OpticalAmplifier_Amplifiers_AmplifierKey& from);

  inline OpticalAmplifier_Amplifiers_AmplifierKey& operator=(const OpticalAmplifier_Amplifiers_AmplifierKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpticalAmplifier_Amplifiers_AmplifierKey(OpticalAmplifier_Amplifiers_AmplifierKey&& from) noexcept
    : OpticalAmplifier_Amplifiers_AmplifierKey() {
    *this = ::std::move(from);
  }

  inline OpticalAmplifier_Amplifiers_AmplifierKey& operator=(OpticalAmplifier_Amplifiers_AmplifierKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpticalAmplifier_Amplifiers_AmplifierKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpticalAmplifier_Amplifiers_AmplifierKey* internal_default_instance() {
    return reinterpret_cast<const OpticalAmplifier_Amplifiers_AmplifierKey*>(
               &_OpticalAmplifier_Amplifiers_AmplifierKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(OpticalAmplifier_Amplifiers_AmplifierKey* other);
  friend void swap(OpticalAmplifier_Amplifiers_AmplifierKey& a, OpticalAmplifier_Amplifiers_AmplifierKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpticalAmplifier_Amplifiers_AmplifierKey* New() const PROTOBUF_FINAL { return New(NULL); }

  OpticalAmplifier_Amplifiers_AmplifierKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpticalAmplifier_Amplifiers_AmplifierKey& from);
  void MergeFrom(const OpticalAmplifier_Amplifiers_AmplifierKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpticalAmplifier_Amplifiers_AmplifierKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/name"];
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier amplifier = 2;
  bool has_amplifier() const;
  void clear_amplifier();
  static const int kAmplifierFieldNumber = 2;
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier& amplifier() const;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier* release_amplifier();
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier* mutable_amplifier();
  void set_allocated_amplifier(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier* amplifier);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier* amplifier_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_Amplifiers_AmplifierKeyImpl();
};
// -------------------------------------------------------------------

class OpticalAmplifier_Amplifiers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers) */ {
 public:
  OpticalAmplifier_Amplifiers();
  virtual ~OpticalAmplifier_Amplifiers();

  OpticalAmplifier_Amplifiers(const OpticalAmplifier_Amplifiers& from);

  inline OpticalAmplifier_Amplifiers& operator=(const OpticalAmplifier_Amplifiers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpticalAmplifier_Amplifiers(OpticalAmplifier_Amplifiers&& from) noexcept
    : OpticalAmplifier_Amplifiers() {
    *this = ::std::move(from);
  }

  inline OpticalAmplifier_Amplifiers& operator=(OpticalAmplifier_Amplifiers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpticalAmplifier_Amplifiers& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpticalAmplifier_Amplifiers* internal_default_instance() {
    return reinterpret_cast<const OpticalAmplifier_Amplifiers*>(
               &_OpticalAmplifier_Amplifiers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(OpticalAmplifier_Amplifiers* other);
  friend void swap(OpticalAmplifier_Amplifiers& a, OpticalAmplifier_Amplifiers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpticalAmplifier_Amplifiers* New() const PROTOBUF_FINAL { return New(NULL); }

  OpticalAmplifier_Amplifiers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpticalAmplifier_Amplifiers& from);
  void MergeFrom(const OpticalAmplifier_Amplifiers& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpticalAmplifier_Amplifiers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef OpticalAmplifier_Amplifiers_Amplifier Amplifier;
  typedef OpticalAmplifier_Amplifiers_AmplifierKey AmplifierKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey amplifier = 265912407 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier"];
  int amplifier_size() const;
  void clear_amplifier();
  static const int kAmplifierFieldNumber = 265912407;
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_AmplifierKey& amplifier(int index) const;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_AmplifierKey* mutable_amplifier(int index);
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_AmplifierKey* add_amplifier();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_AmplifierKey >*
      mutable_amplifier();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_AmplifierKey >&
      amplifier() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_AmplifierKey > amplifier_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_AmplifiersImpl();
};
// -------------------------------------------------------------------

class OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config) */ {
 public:
  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config();
  virtual ~OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config();

  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config& from);

  inline OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config& operator=(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config&& from) noexcept
    : OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config() {
    *this = ::std::move(from);
  }

  inline OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config& operator=(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config* internal_default_instance() {
    return reinterpret_cast<const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config*>(
               &_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config* other);
  friend void swap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config& a, OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config& from);
  void MergeFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue interface = 147399380 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/config/interface"];
  bool has_interface() const;
  void clear_interface();
  static const int kInterfaceFieldNumber = 147399380;
  const ::ywrapper::StringValue& interface() const;
  ::ywrapper::StringValue* release_interface();
  ::ywrapper::StringValue* mutable_interface();
  void set_allocated_interface(::ywrapper::StringValue* interface);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* interface_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_ConfigImpl();
};
// -------------------------------------------------------------------

class OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower) */ {
 public:
  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower();
  virtual ~OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower();

  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower& from);

  inline OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower& operator=(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower&& from) noexcept
    : OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower() {
    *this = ::std::move(from);
  }

  inline OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower& operator=(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower* internal_default_instance() {
    return reinterpret_cast<const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower*>(
               &_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower* other);
  friend void swap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower& a, OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower* New() const PROTOBUF_FINAL { return New(NULL); }

  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower& from);
  void MergeFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue interval = 189599228 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 189599228;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.Decimal64Value avg = 217925853 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 217925853;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // .ywrapper.Decimal64Value instant = 247179786 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 247179786;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.Decimal64Value min = 401891265 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 401891265;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // .ywrapper.Decimal64Value max = 536112191 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 536112191;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::Decimal64Value* avg_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::Decimal64Value* min_;
  ::ywrapper::Decimal64Value* max_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPowerImpl();
};
// -------------------------------------------------------------------

class OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent) */ {
 public:
  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent();
  virtual ~OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent();

  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent& from);

  inline OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent& operator=(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent&& from) noexcept
    : OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent() {
    *this = ::std::move(from);
  }

  inline OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent& operator=(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent* internal_default_instance() {
    return reinterpret_cast<const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent*>(
               &_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent* other);
  friend void swap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent& a, OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent* New() const PROTOBUF_FINAL { return New(NULL); }

  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent& from);
  void MergeFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value max = 171931370 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 171931370;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // .ywrapper.Decimal64Value instant = 237850003 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 237850003;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.UintValue interval = 285212819 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 285212819;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.Decimal64Value min = 306152260 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 306152260;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // .ywrapper.Decimal64Value avg = 354513576 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 354513576;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* max_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::Decimal64Value* min_;
  ::ywrapper::Decimal64Value* avg_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrentImpl();
};
// -------------------------------------------------------------------

class OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower) */ {
 public:
  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower();
  virtual ~OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower();

  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower& from);

  inline OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower& operator=(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower&& from) noexcept
    : OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower() {
    *this = ::std::move(from);
  }

  inline OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower& operator=(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower* internal_default_instance() {
    return reinterpret_cast<const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower*>(
               &_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower* other);
  friend void swap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower& a, OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower* New() const PROTOBUF_FINAL { return New(NULL); }

  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower& from);
  void MergeFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.Decimal64Value max = 131575260 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 131575260;
  const ::ywrapper::Decimal64Value& max() const;
  ::ywrapper::Decimal64Value* release_max();
  ::ywrapper::Decimal64Value* mutable_max();
  void set_allocated_max(::ywrapper::Decimal64Value* max);

  // .ywrapper.Decimal64Value instant = 134280905 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 134280905;
  const ::ywrapper::Decimal64Value& instant() const;
  ::ywrapper::Decimal64Value* release_instant();
  ::ywrapper::Decimal64Value* mutable_instant();
  void set_allocated_instant(::ywrapper::Decimal64Value* instant);

  // .ywrapper.Decimal64Value avg = 381268042 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 381268042;
  const ::ywrapper::Decimal64Value& avg() const;
  ::ywrapper::Decimal64Value* release_avg();
  ::ywrapper::Decimal64Value* mutable_avg();
  void set_allocated_avg(::ywrapper::Decimal64Value* avg);

  // .ywrapper.UintValue interval = 416178893 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 416178893;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.Decimal64Value min = 534225250 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 534225250;
  const ::ywrapper::Decimal64Value& min() const;
  ::ywrapper::Decimal64Value* release_min();
  ::ywrapper::Decimal64Value* mutable_min();
  void set_allocated_min(::ywrapper::Decimal64Value* min);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::Decimal64Value* max_;
  ::ywrapper::Decimal64Value* instant_;
  ::ywrapper::Decimal64Value* avg_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::Decimal64Value* min_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPowerImpl();
};
// -------------------------------------------------------------------

class OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State) */ {
 public:
  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State();
  virtual ~OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State();

  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State& from);

  inline OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State& operator=(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State&& from) noexcept
    : OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State() {
    *this = ::std::move(from);
  }

  inline OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State& operator=(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State* internal_default_instance() {
    return reinterpret_cast<const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State*>(
               &_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State* other);
  friend void swap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State& a, OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State* New() const PROTOBUF_FINAL { return New(NULL); }

  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State& from);
  void MergeFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower InputPower;
  typedef OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent LaserBiasCurrent;
  typedef OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower OutputPower;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent laser_bias_current = 267426693 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current"];
  bool has_laser_bias_current() const;
  void clear_laser_bias_current();
  static const int kLaserBiasCurrentFieldNumber = 267426693;
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent& laser_bias_current() const;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent* release_laser_bias_current();
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent* mutable_laser_bias_current();
  void set_allocated_laser_bias_current(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent* laser_bias_current);

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower input_power = 273167428 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power"];
  bool has_input_power() const;
  void clear_input_power();
  static const int kInputPowerFieldNumber = 273167428;
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower& input_power() const;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower* release_input_power();
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower* mutable_input_power();
  void set_allocated_input_power(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower* input_power);

  // .ywrapper.StringValue interface = 295428929 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/interface"];
  bool has_interface() const;
  void clear_interface();
  static const int kInterfaceFieldNumber = 295428929;
  const ::ywrapper::StringValue& interface() const;
  ::ywrapper::StringValue* release_interface();
  ::ywrapper::StringValue* mutable_interface();
  void set_allocated_interface(::ywrapper::StringValue* interface);

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower output_power = 348784371 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power"];
  bool has_output_power() const;
  void clear_output_power();
  static const int kOutputPowerFieldNumber = 348784371;
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower& output_power() const;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower* release_output_power();
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower* mutable_output_power();
  void set_allocated_output_power(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower* output_power);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent* laser_bias_current_;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower* input_power_;
  ::ywrapper::StringValue* interface_;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower* output_power_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannel_StateImpl();
};
// -------------------------------------------------------------------

class OpticalAmplifier_SupervisoryChannels_SupervisoryChannel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel) */ {
 public:
  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel();
  virtual ~OpticalAmplifier_SupervisoryChannels_SupervisoryChannel();

  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel& from);

  inline OpticalAmplifier_SupervisoryChannels_SupervisoryChannel& operator=(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel&& from) noexcept
    : OpticalAmplifier_SupervisoryChannels_SupervisoryChannel() {
    *this = ::std::move(from);
  }

  inline OpticalAmplifier_SupervisoryChannels_SupervisoryChannel& operator=(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel* internal_default_instance() {
    return reinterpret_cast<const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel*>(
               &_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel* other);
  friend void swap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel& a, OpticalAmplifier_SupervisoryChannels_SupervisoryChannel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpticalAmplifier_SupervisoryChannels_SupervisoryChannel* New() const PROTOBUF_FINAL { return New(NULL); }

  OpticalAmplifier_SupervisoryChannels_SupervisoryChannel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel& from);
  void MergeFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config Config;
  typedef OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State state = 48802981 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 48802981;
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State& state() const;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State* release_state();
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State* state);

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config config = 299726764 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 299726764;
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config& config() const;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config* release_config();
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State* state_;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannelImpl();
};
// -------------------------------------------------------------------

class OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey) */ {
 public:
  OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey();
  virtual ~OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey();

  OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey& from);

  inline OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey& operator=(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey(OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey&& from) noexcept
    : OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey() {
    *this = ::std::move(from);
  }

  inline OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey& operator=(OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey* internal_default_instance() {
    return reinterpret_cast<const OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey*>(
               &_OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey* other);
  friend void swap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey& a, OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey* New() const PROTOBUF_FINAL { return New(NULL); }

  OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey& from);
  void MergeFrom(const OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string interface = 1 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/interface"];
  void clear_interface();
  static const int kInterfaceFieldNumber = 1;
  const ::std::string& interface() const;
  void set_interface(const ::std::string& value);
  #if LANG_CXX11
  void set_interface(::std::string&& value);
  #endif
  void set_interface(const char* value);
  void set_interface(const char* value, size_t size);
  ::std::string* mutable_interface();
  ::std::string* release_interface();
  void set_allocated_interface(::std::string* interface);

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel supervisory_channel = 2;
  bool has_supervisory_channel() const;
  void clear_supervisory_channel();
  static const int kSupervisoryChannelFieldNumber = 2;
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel& supervisory_channel() const;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel* release_supervisory_channel();
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel* mutable_supervisory_channel();
  void set_allocated_supervisory_channel(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel* supervisory_channel);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr interface_;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel* supervisory_channel_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannels_SupervisoryChannelKeyImpl();
};
// -------------------------------------------------------------------

class OpticalAmplifier_SupervisoryChannels : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels) */ {
 public:
  OpticalAmplifier_SupervisoryChannels();
  virtual ~OpticalAmplifier_SupervisoryChannels();

  OpticalAmplifier_SupervisoryChannels(const OpticalAmplifier_SupervisoryChannels& from);

  inline OpticalAmplifier_SupervisoryChannels& operator=(const OpticalAmplifier_SupervisoryChannels& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpticalAmplifier_SupervisoryChannels(OpticalAmplifier_SupervisoryChannels&& from) noexcept
    : OpticalAmplifier_SupervisoryChannels() {
    *this = ::std::move(from);
  }

  inline OpticalAmplifier_SupervisoryChannels& operator=(OpticalAmplifier_SupervisoryChannels&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpticalAmplifier_SupervisoryChannels& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpticalAmplifier_SupervisoryChannels* internal_default_instance() {
    return reinterpret_cast<const OpticalAmplifier_SupervisoryChannels*>(
               &_OpticalAmplifier_SupervisoryChannels_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(OpticalAmplifier_SupervisoryChannels* other);
  friend void swap(OpticalAmplifier_SupervisoryChannels& a, OpticalAmplifier_SupervisoryChannels& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpticalAmplifier_SupervisoryChannels* New() const PROTOBUF_FINAL { return New(NULL); }

  OpticalAmplifier_SupervisoryChannels* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpticalAmplifier_SupervisoryChannels& from);
  void MergeFrom(const OpticalAmplifier_SupervisoryChannels& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpticalAmplifier_SupervisoryChannels* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef OpticalAmplifier_SupervisoryChannels_SupervisoryChannel SupervisoryChannel;
  typedef OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey SupervisoryChannelKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey supervisory_channel = 42639227 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel"];
  int supervisory_channel_size() const;
  void clear_supervisory_channel();
  static const int kSupervisoryChannelFieldNumber = 42639227;
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey& supervisory_channel(int index) const;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey* mutable_supervisory_channel(int index);
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey* add_supervisory_channel();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey >*
      mutable_supervisory_channel();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey >&
      supervisory_channel() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey > supervisory_channel_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifier_SupervisoryChannelsImpl();
};
// -------------------------------------------------------------------

class OpticalAmplifier : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_optical_amplifier.OpticalAmplifier) */ {
 public:
  OpticalAmplifier();
  virtual ~OpticalAmplifier();

  OpticalAmplifier(const OpticalAmplifier& from);

  inline OpticalAmplifier& operator=(const OpticalAmplifier& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  OpticalAmplifier(OpticalAmplifier&& from) noexcept
    : OpticalAmplifier() {
    *this = ::std::move(from);
  }

  inline OpticalAmplifier& operator=(OpticalAmplifier&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const OpticalAmplifier& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpticalAmplifier* internal_default_instance() {
    return reinterpret_cast<const OpticalAmplifier*>(
               &_OpticalAmplifier_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(OpticalAmplifier* other);
  friend void swap(OpticalAmplifier& a, OpticalAmplifier& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline OpticalAmplifier* New() const PROTOBUF_FINAL { return New(NULL); }

  OpticalAmplifier* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const OpticalAmplifier& from);
  void MergeFrom(const OpticalAmplifier& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(OpticalAmplifier* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef OpticalAmplifier_Amplifiers Amplifiers;
  typedef OpticalAmplifier_SupervisoryChannels SupervisoryChannels;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels supervisory_channels = 28767387 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels"];
  bool has_supervisory_channels() const;
  void clear_supervisory_channels();
  static const int kSupervisoryChannelsFieldNumber = 28767387;
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels& supervisory_channels() const;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels* release_supervisory_channels();
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels* mutable_supervisory_channels();
  void set_allocated_supervisory_channels(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels* supervisory_channels);

  // .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers amplifiers = 372184323 [(.yext.schemapath) = "/optical-amplifier/amplifiers"];
  bool has_amplifiers() const;
  void clear_amplifiers();
  static const int kAmplifiersFieldNumber = 372184323;
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers& amplifiers() const;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers* release_amplifiers();
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers* mutable_amplifiers();
  void set_allocated_amplifiers(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers* amplifiers);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_optical_amplifier.OpticalAmplifier)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels* supervisory_channels_;
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers* amplifiers_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto::InitDefaultsOpticalAmplifierImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// OpticalAmplifier_Amplifiers_Amplifier_Config

// .openconfig.enums.OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE amp_mode = 213173045 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/amp-mode"];
inline void OpticalAmplifier_Amplifiers_Amplifier_Config::clear_amp_mode() {
  amp_mode_ = 0;
}
inline ::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE OpticalAmplifier_Amplifiers_Amplifier_Config::amp_mode() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.amp_mode)
  return static_cast< ::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE >(amp_mode_);
}
inline void OpticalAmplifier_Amplifiers_Amplifier_Config::set_amp_mode(::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE value) {
  
  amp_mode_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.amp_mode)
}

// .ywrapper.BoolValue enabled = 274752762 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/enabled"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_Config::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
inline const ::ywrapper::BoolValue& OpticalAmplifier_Amplifiers_Amplifier_Config::enabled() const {
  const ::ywrapper::BoolValue* p = enabled_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* OpticalAmplifier_Amplifiers_Amplifier_Config::release_enabled() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.enabled)
  
  ::ywrapper::BoolValue* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* OpticalAmplifier_Amplifiers_Amplifier_Config::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.enabled)
  return enabled_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_Config::set_allocated_enabled(::ywrapper::BoolValue* enabled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enabled_);
  }
  if (enabled) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enabled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enabled, submessage_arena);
    }
    
  } else {
    
  }
  enabled_ = enabled;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.enabled)
}

// .openconfig.enums.OpenconfigOpticalAmplifierFIBERTYPEPROFILE fiber_type_profile = 422775780 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/fiber-type-profile"];
inline void OpticalAmplifier_Amplifiers_Amplifier_Config::clear_fiber_type_profile() {
  fiber_type_profile_ = 0;
}
inline ::openconfig::enums::OpenconfigOpticalAmplifierFIBERTYPEPROFILE OpticalAmplifier_Amplifiers_Amplifier_Config::fiber_type_profile() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.fiber_type_profile)
  return static_cast< ::openconfig::enums::OpenconfigOpticalAmplifierFIBERTYPEPROFILE >(fiber_type_profile_);
}
inline void OpticalAmplifier_Amplifiers_Amplifier_Config::set_fiber_type_profile(::openconfig::enums::OpenconfigOpticalAmplifierFIBERTYPEPROFILE value) {
  
  fiber_type_profile_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.fiber_type_profile)
}

// .openconfig.enums.OpenconfigOpticalAmplifierGAINRANGE gain_range = 391412418 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/gain-range"];
inline void OpticalAmplifier_Amplifiers_Amplifier_Config::clear_gain_range() {
  gain_range_ = 0;
}
inline ::openconfig::enums::OpenconfigOpticalAmplifierGAINRANGE OpticalAmplifier_Amplifiers_Amplifier_Config::gain_range() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.gain_range)
  return static_cast< ::openconfig::enums::OpenconfigOpticalAmplifierGAINRANGE >(gain_range_);
}
inline void OpticalAmplifier_Amplifiers_Amplifier_Config::set_gain_range(::openconfig::enums::OpenconfigOpticalAmplifierGAINRANGE value) {
  
  gain_range_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.gain_range)
}

// .ywrapper.StringValue name = 237538034 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/name"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_Config::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& OpticalAmplifier_Amplifiers_Amplifier_Config::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* OpticalAmplifier_Amplifiers_Amplifier_Config::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* OpticalAmplifier_Amplifiers_Amplifier_Config::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.name)
  return name_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_Config::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.name)
}

// .ywrapper.Decimal64Value target_gain = 287715864 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/target-gain"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_Config::has_target_gain() const {
  return this != internal_default_instance() && target_gain_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_Config::target_gain() const {
  const ::ywrapper::Decimal64Value* p = target_gain_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.target_gain)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_Config::release_target_gain() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.target_gain)
  
  ::ywrapper::Decimal64Value* temp = target_gain_;
  target_gain_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_Config::mutable_target_gain() {
  
  if (target_gain_ == NULL) {
    target_gain_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.target_gain)
  return target_gain_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_Config::set_allocated_target_gain(::ywrapper::Decimal64Value* target_gain) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(target_gain_);
  }
  if (target_gain) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      target_gain = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target_gain, submessage_arena);
    }
    
  } else {
    
  }
  target_gain_ = target_gain;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.target_gain)
}

// .ywrapper.Decimal64Value target_gain_tilt = 534835064 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/target-gain-tilt"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_Config::has_target_gain_tilt() const {
  return this != internal_default_instance() && target_gain_tilt_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_Config::target_gain_tilt() const {
  const ::ywrapper::Decimal64Value* p = target_gain_tilt_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.target_gain_tilt)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_Config::release_target_gain_tilt() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.target_gain_tilt)
  
  ::ywrapper::Decimal64Value* temp = target_gain_tilt_;
  target_gain_tilt_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_Config::mutable_target_gain_tilt() {
  
  if (target_gain_tilt_ == NULL) {
    target_gain_tilt_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.target_gain_tilt)
  return target_gain_tilt_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_Config::set_allocated_target_gain_tilt(::ywrapper::Decimal64Value* target_gain_tilt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(target_gain_tilt_);
  }
  if (target_gain_tilt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      target_gain_tilt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target_gain_tilt, submessage_arena);
    }
    
  } else {
    
  }
  target_gain_tilt_ = target_gain_tilt;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.target_gain_tilt)
}

// .ywrapper.Decimal64Value target_output_power = 457627626 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/target-output-power"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_Config::has_target_output_power() const {
  return this != internal_default_instance() && target_output_power_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_Config::target_output_power() const {
  const ::ywrapper::Decimal64Value* p = target_output_power_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.target_output_power)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_Config::release_target_output_power() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.target_output_power)
  
  ::ywrapper::Decimal64Value* temp = target_output_power_;
  target_output_power_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_Config::mutable_target_output_power() {
  
  if (target_output_power_ == NULL) {
    target_output_power_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.target_output_power)
  return target_output_power_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_Config::set_allocated_target_output_power(::ywrapper::Decimal64Value* target_output_power) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(target_output_power_);
  }
  if (target_output_power) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      target_output_power = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target_output_power, submessage_arena);
    }
    
  } else {
    
  }
  target_output_power_ = target_output_power;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.target_output_power)
}

// .openconfig.enums.OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE type = 497413935 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config/type"];
inline void OpticalAmplifier_Amplifiers_Amplifier_Config::clear_type() {
  type_ = 0;
}
inline ::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE OpticalAmplifier_Amplifiers_Amplifier_Config::type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.type)
  return static_cast< ::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE >(type_);
}
inline void OpticalAmplifier_Amplifiers_Amplifier_Config::set_type(::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config.type)
}

// -------------------------------------------------------------------

// OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain

// .ywrapper.Decimal64Value avg = 156932943 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/avg"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain.avg)
  return avg_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain.avg)
}

// .ywrapper.Decimal64Value instant = 107311160 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/instant"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain.instant)
  return instant_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain.instant)
}

// .ywrapper.UintValue interval = 41392966 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/interval"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain.interval)
  return interval_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain.interval)
}

// .ywrapper.Decimal64Value max = 139553953 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/max"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain.max)
  return max_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain.max)
}

// .ywrapper.Decimal64Value min = 273774879 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain/min"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain.min)
  return min_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain.min)
}

// -------------------------------------------------------------------

// OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt

// .ywrapper.Decimal64Value avg = 342459139 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/avg"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt.avg)
  return avg_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt.avg)
}

// .ywrapper.Decimal64Value instant = 364260860 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/instant"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt.instant)
  return instant_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt.instant)
}

// .ywrapper.UintValue interval = 448738762 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/interval"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt.interval)
  return interval_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt.interval)
}

// .ywrapper.Decimal64Value max = 458034221 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/max"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt.max)
  return max_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt.max)
}

// .ywrapper.Decimal64Value min = 55384195 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt/min"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt.min)
  return min_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt.min)
}

// -------------------------------------------------------------------

// OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand

// .ywrapper.Decimal64Value avg = 463266069 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/avg"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand.avg)
  return avg_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand.avg)
}

// .ywrapper.Decimal64Value instant = 490318226 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/instant"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand.instant)
  return instant_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand.instant)
}

// .ywrapper.UintValue interval = 55665268 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/interval"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand.interval)
  return interval_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand.interval)
}

// .ywrapper.Decimal64Value max = 247141399 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/max"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand.max)
  return max_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand.max)
}

// .ywrapper.Decimal64Value min = 381362537 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band/min"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand.min)
  return min_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand.min)
}

// -------------------------------------------------------------------

// OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand

// .ywrapper.Decimal64Value avg = 295143420 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/avg"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand.avg)
  return avg_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand.avg)
}

// .ywrapper.Decimal64Value instant = 117495079 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/instant"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand.instant)
  return instant_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand.instant)
}

// .ywrapper.UintValue interval = 341383863 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/interval"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand.interval)
  return interval_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand.interval)
}

// .ywrapper.Decimal64Value max = 513840662 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/max"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand.max)
  return max_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand.max)
}

// .ywrapper.Decimal64Value min = 379619768 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band/min"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand.min)
  return min_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand.min)
}

// -------------------------------------------------------------------

// OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal

// .ywrapper.Decimal64Value avg = 109050616 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/avg"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal.avg)
  return avg_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal.avg)
}

// .ywrapper.Decimal64Value instant = 261310371 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/instant"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal.instant)
  return instant_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal.instant)
}

// .ywrapper.UintValue interval = 501780355 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/interval"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal.interval)
  return interval_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal.interval)
}

// .ywrapper.Decimal64Value max = 463351994 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/max"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal.max)
  return max_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal.max)
}

// .ywrapper.Decimal64Value min = 60702004 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total/min"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal.min)
  return min_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal.min)
}

// -------------------------------------------------------------------

// OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent

// .ywrapper.Decimal64Value avg = 200827724 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/avg"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent.avg)
  return avg_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent.avg)
}

// .ywrapper.Decimal64Value instant = 534817719 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/instant"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent.instant)
  return instant_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent.instant)
}

// .ywrapper.UintValue interval = 50187495 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/interval"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent.interval)
  return interval_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent.interval)
}

// .ywrapper.Decimal64Value max = 419615462 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/max"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent.max)
  return max_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent.max)
}

// .ywrapper.Decimal64Value min = 285394536 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current/min"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent.min)
  return min_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent.min)
}

// -------------------------------------------------------------------

// OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss

// .ywrapper.Decimal64Value avg = 22622816 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/avg"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss.avg)
  return avg_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss.avg)
}

// .ywrapper.Decimal64Value instant = 124129147 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/instant"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss.instant)
  return instant_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss.instant)
}

// .ywrapper.UintValue interval = 348154123 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/interval"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss.interval)
  return interval_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss.interval)
}

// .ywrapper.Decimal64Value max = 374261186 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/max"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss.max)
  return max_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss.max)
}

// .ywrapper.Decimal64Value min = 240040268 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss/min"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss.min)
  return min_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss.min)
}

// -------------------------------------------------------------------

// OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand

// .ywrapper.Decimal64Value avg = 159475324 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/avg"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand.avg)
  return avg_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand.avg)
}

// .ywrapper.Decimal64Value instant = 155851687 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/instant"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand.instant)
  return instant_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand.instant)
}

// .ywrapper.UintValue interval = 229840439 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/interval"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand.interval)
  return interval_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand.interval)
}

// .ywrapper.Decimal64Value max = 378172566 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/max"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand.max)
  return max_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand.max)
}

// .ywrapper.Decimal64Value min = 243951672 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band/min"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand.min)
  return min_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand.min)
}

// -------------------------------------------------------------------

// OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand

// .ywrapper.Decimal64Value avg = 327597973 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/avg"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand.avg)
  return avg_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand.avg)
}

// .ywrapper.Decimal64Value instant = 528674834 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/instant"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand.instant)
  return instant_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand.instant)
}

// .ywrapper.UintValue interval = 480992756 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/interval"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand.interval)
  return interval_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand.interval)
}

// .ywrapper.Decimal64Value max = 111473303 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/max"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand.max)
  return max_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand.max)
}

// .ywrapper.Decimal64Value min = 245694441 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band/min"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand.min)
  return min_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand.min)
}

// -------------------------------------------------------------------

// OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal

// .ywrapper.Decimal64Value avg = 221413691 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/avg"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal.avg)
  return avg_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal.avg)
}

// .ywrapper.Decimal64Value instant = 16585284 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/instant"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal.instant)
  return instant_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal.instant)
}

// .ywrapper.UintValue interval = 58825282 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/interval"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal.interval)
  return interval_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal.interval)
}

// .ywrapper.Decimal64Value max = 339548613 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/max"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal.max)
  return max_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal.max)
}

// .ywrapper.Decimal64Value min = 205327691 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total/min"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal.min)
  return min_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal.min)
}

// -------------------------------------------------------------------

// OpticalAmplifier_Amplifiers_Amplifier_State

// .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGain actual_gain = 427903922 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State::has_actual_gain() const {
  return this != internal_default_instance() && actual_gain_ != NULL;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::clear_actual_gain() {
  if (GetArenaNoVirtual() == NULL && actual_gain_ != NULL) {
    delete actual_gain_;
  }
  actual_gain_ = NULL;
}
inline const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain& OpticalAmplifier_Amplifiers_Amplifier_State::actual_gain() const {
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain* p = actual_gain_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.actual_gain)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain*>(
      &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain_default_instance_);
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain* OpticalAmplifier_Amplifiers_Amplifier_State::release_actual_gain() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.actual_gain)
  
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain* temp = actual_gain_;
  actual_gain_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain* OpticalAmplifier_Amplifiers_Amplifier_State::mutable_actual_gain() {
  
  if (actual_gain_ == NULL) {
    actual_gain_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.actual_gain)
  return actual_gain_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::set_allocated_actual_gain(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGain* actual_gain) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete actual_gain_;
  }
  if (actual_gain) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      actual_gain = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, actual_gain, submessage_arena);
    }
    
  } else {
    
  }
  actual_gain_ = actual_gain;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.actual_gain)
}

// .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ActualGainTilt actual_gain_tilt = 414245390 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/actual-gain-tilt"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State::has_actual_gain_tilt() const {
  return this != internal_default_instance() && actual_gain_tilt_ != NULL;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::clear_actual_gain_tilt() {
  if (GetArenaNoVirtual() == NULL && actual_gain_tilt_ != NULL) {
    delete actual_gain_tilt_;
  }
  actual_gain_tilt_ = NULL;
}
inline const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt& OpticalAmplifier_Amplifiers_Amplifier_State::actual_gain_tilt() const {
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt* p = actual_gain_tilt_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.actual_gain_tilt)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt*>(
      &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt_default_instance_);
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt* OpticalAmplifier_Amplifiers_Amplifier_State::release_actual_gain_tilt() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.actual_gain_tilt)
  
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt* temp = actual_gain_tilt_;
  actual_gain_tilt_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt* OpticalAmplifier_Amplifiers_Amplifier_State::mutable_actual_gain_tilt() {
  
  if (actual_gain_tilt_ == NULL) {
    actual_gain_tilt_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.actual_gain_tilt)
  return actual_gain_tilt_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::set_allocated_actual_gain_tilt(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_ActualGainTilt* actual_gain_tilt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete actual_gain_tilt_;
  }
  if (actual_gain_tilt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      actual_gain_tilt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, actual_gain_tilt, submessage_arena);
    }
    
  } else {
    
  }
  actual_gain_tilt_ = actual_gain_tilt;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.actual_gain_tilt)
}

// .openconfig.enums.OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE amp_mode = 314189198 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/amp-mode"];
inline void OpticalAmplifier_Amplifiers_Amplifier_State::clear_amp_mode() {
  amp_mode_ = 0;
}
inline ::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE OpticalAmplifier_Amplifiers_Amplifier_State::amp_mode() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.amp_mode)
  return static_cast< ::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE >(amp_mode_);
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::set_amp_mode(::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERMODE value) {
  
  amp_mode_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.amp_mode)
}

// .ywrapper.StringValue component = 124258433 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/component"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State::has_component() const {
  return this != internal_default_instance() && component_ != NULL;
}
inline const ::ywrapper::StringValue& OpticalAmplifier_Amplifiers_Amplifier_State::component() const {
  const ::ywrapper::StringValue* p = component_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.component)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* OpticalAmplifier_Amplifiers_Amplifier_State::release_component() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.component)
  
  ::ywrapper::StringValue* temp = component_;
  component_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* OpticalAmplifier_Amplifiers_Amplifier_State::mutable_component() {
  
  if (component_ == NULL) {
    component_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.component)
  return component_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::set_allocated_component(::ywrapper::StringValue* component) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(component_);
  }
  if (component) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      component = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, component, submessage_arena);
    }
    
  } else {
    
  }
  component_ = component;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.component)
}

// .ywrapper.StringValue egress_port = 529707375 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/egress-port"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State::has_egress_port() const {
  return this != internal_default_instance() && egress_port_ != NULL;
}
inline const ::ywrapper::StringValue& OpticalAmplifier_Amplifiers_Amplifier_State::egress_port() const {
  const ::ywrapper::StringValue* p = egress_port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.egress_port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* OpticalAmplifier_Amplifiers_Amplifier_State::release_egress_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.egress_port)
  
  ::ywrapper::StringValue* temp = egress_port_;
  egress_port_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* OpticalAmplifier_Amplifiers_Amplifier_State::mutable_egress_port() {
  
  if (egress_port_ == NULL) {
    egress_port_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.egress_port)
  return egress_port_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::set_allocated_egress_port(::ywrapper::StringValue* egress_port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(egress_port_);
  }
  if (egress_port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      egress_port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, egress_port, submessage_arena);
    }
    
  } else {
    
  }
  egress_port_ = egress_port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.egress_port)
}

// .ywrapper.BoolValue enabled = 423614103 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/enabled"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
inline const ::ywrapper::BoolValue& OpticalAmplifier_Amplifiers_Amplifier_State::enabled() const {
  const ::ywrapper::BoolValue* p = enabled_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* OpticalAmplifier_Amplifiers_Amplifier_State::release_enabled() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.enabled)
  
  ::ywrapper::BoolValue* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* OpticalAmplifier_Amplifiers_Amplifier_State::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.enabled)
  return enabled_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::set_allocated_enabled(::ywrapper::BoolValue* enabled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enabled_);
  }
  if (enabled) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enabled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enabled, submessage_arena);
    }
    
  } else {
    
  }
  enabled_ = enabled;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.enabled)
}

// .openconfig.enums.OpenconfigOpticalAmplifierFIBERTYPEPROFILE fiber_type_profile = 412975067 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/fiber-type-profile"];
inline void OpticalAmplifier_Amplifiers_Amplifier_State::clear_fiber_type_profile() {
  fiber_type_profile_ = 0;
}
inline ::openconfig::enums::OpenconfigOpticalAmplifierFIBERTYPEPROFILE OpticalAmplifier_Amplifiers_Amplifier_State::fiber_type_profile() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.fiber_type_profile)
  return static_cast< ::openconfig::enums::OpenconfigOpticalAmplifierFIBERTYPEPROFILE >(fiber_type_profile_);
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::set_fiber_type_profile(::openconfig::enums::OpenconfigOpticalAmplifierFIBERTYPEPROFILE value) {
  
  fiber_type_profile_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.fiber_type_profile)
}

// .openconfig.enums.OpenconfigOpticalAmplifierGAINRANGE gain_range = 452923353 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/gain-range"];
inline void OpticalAmplifier_Amplifiers_Amplifier_State::clear_gain_range() {
  gain_range_ = 0;
}
inline ::openconfig::enums::OpenconfigOpticalAmplifierGAINRANGE OpticalAmplifier_Amplifiers_Amplifier_State::gain_range() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.gain_range)
  return static_cast< ::openconfig::enums::OpenconfigOpticalAmplifierGAINRANGE >(gain_range_);
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::set_gain_range(::openconfig::enums::OpenconfigOpticalAmplifierGAINRANGE value) {
  
  gain_range_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.gain_range)
}

// .ywrapper.StringValue ingress_port = 532185287 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/ingress-port"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State::has_ingress_port() const {
  return this != internal_default_instance() && ingress_port_ != NULL;
}
inline const ::ywrapper::StringValue& OpticalAmplifier_Amplifiers_Amplifier_State::ingress_port() const {
  const ::ywrapper::StringValue* p = ingress_port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ingress_port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* OpticalAmplifier_Amplifiers_Amplifier_State::release_ingress_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ingress_port)
  
  ::ywrapper::StringValue* temp = ingress_port_;
  ingress_port_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* OpticalAmplifier_Amplifiers_Amplifier_State::mutable_ingress_port() {
  
  if (ingress_port_ == NULL) {
    ingress_port_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ingress_port)
  return ingress_port_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::set_allocated_ingress_port(::ywrapper::StringValue* ingress_port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ingress_port_);
  }
  if (ingress_port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ingress_port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ingress_port, submessage_arena);
    }
    
  } else {
    
  }
  ingress_port_ = ingress_port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.ingress_port)
}

// .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerCBand input_power_c_band = 514337388 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-c-band"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State::has_input_power_c_band() const {
  return this != internal_default_instance() && input_power_c_band_ != NULL;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::clear_input_power_c_band() {
  if (GetArenaNoVirtual() == NULL && input_power_c_band_ != NULL) {
    delete input_power_c_band_;
  }
  input_power_c_band_ = NULL;
}
inline const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand& OpticalAmplifier_Amplifiers_Amplifier_State::input_power_c_band() const {
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand* p = input_power_c_band_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.input_power_c_band)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand*>(
      &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand_default_instance_);
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand* OpticalAmplifier_Amplifiers_Amplifier_State::release_input_power_c_band() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.input_power_c_band)
  
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand* temp = input_power_c_band_;
  input_power_c_band_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand* OpticalAmplifier_Amplifiers_Amplifier_State::mutable_input_power_c_band() {
  
  if (input_power_c_band_ == NULL) {
    input_power_c_band_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.input_power_c_band)
  return input_power_c_band_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::set_allocated_input_power_c_band(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerCBand* input_power_c_band) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete input_power_c_band_;
  }
  if (input_power_c_band) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      input_power_c_band = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, input_power_c_band, submessage_arena);
    }
    
  } else {
    
  }
  input_power_c_band_ = input_power_c_band;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.input_power_c_band)
}

// .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerLBand input_power_l_band = 362773089 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-l-band"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State::has_input_power_l_band() const {
  return this != internal_default_instance() && input_power_l_band_ != NULL;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::clear_input_power_l_band() {
  if (GetArenaNoVirtual() == NULL && input_power_l_band_ != NULL) {
    delete input_power_l_band_;
  }
  input_power_l_band_ = NULL;
}
inline const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand& OpticalAmplifier_Amplifiers_Amplifier_State::input_power_l_band() const {
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand* p = input_power_l_band_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.input_power_l_band)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand*>(
      &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand_default_instance_);
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand* OpticalAmplifier_Amplifiers_Amplifier_State::release_input_power_l_band() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.input_power_l_band)
  
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand* temp = input_power_l_band_;
  input_power_l_band_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand* OpticalAmplifier_Amplifiers_Amplifier_State::mutable_input_power_l_band() {
  
  if (input_power_l_band_ == NULL) {
    input_power_l_band_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.input_power_l_band)
  return input_power_l_band_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::set_allocated_input_power_l_band(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerLBand* input_power_l_band) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete input_power_l_band_;
  }
  if (input_power_l_band) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      input_power_l_band = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, input_power_l_band, submessage_arena);
    }
    
  } else {
    
  }
  input_power_l_band_ = input_power_l_band;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.input_power_l_band)
}

// .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.InputPowerTotal input_power_total = 290016501 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/input-power-total"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State::has_input_power_total() const {
  return this != internal_default_instance() && input_power_total_ != NULL;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::clear_input_power_total() {
  if (GetArenaNoVirtual() == NULL && input_power_total_ != NULL) {
    delete input_power_total_;
  }
  input_power_total_ = NULL;
}
inline const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal& OpticalAmplifier_Amplifiers_Amplifier_State::input_power_total() const {
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal* p = input_power_total_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.input_power_total)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal*>(
      &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal_default_instance_);
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal* OpticalAmplifier_Amplifiers_Amplifier_State::release_input_power_total() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.input_power_total)
  
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal* temp = input_power_total_;
  input_power_total_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal* OpticalAmplifier_Amplifiers_Amplifier_State::mutable_input_power_total() {
  
  if (input_power_total_ == NULL) {
    input_power_total_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.input_power_total)
  return input_power_total_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::set_allocated_input_power_total(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_InputPowerTotal* input_power_total) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete input_power_total_;
  }
  if (input_power_total) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      input_power_total = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, input_power_total, submessage_arena);
    }
    
  } else {
    
  }
  input_power_total_ = input_power_total;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.input_power_total)
}

// .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.LaserBiasCurrent laser_bias_current = 363893777 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/laser-bias-current"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State::has_laser_bias_current() const {
  return this != internal_default_instance() && laser_bias_current_ != NULL;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::clear_laser_bias_current() {
  if (GetArenaNoVirtual() == NULL && laser_bias_current_ != NULL) {
    delete laser_bias_current_;
  }
  laser_bias_current_ = NULL;
}
inline const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent& OpticalAmplifier_Amplifiers_Amplifier_State::laser_bias_current() const {
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent* p = laser_bias_current_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.laser_bias_current)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent*>(
      &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent_default_instance_);
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent* OpticalAmplifier_Amplifiers_Amplifier_State::release_laser_bias_current() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.laser_bias_current)
  
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent* temp = laser_bias_current_;
  laser_bias_current_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent* OpticalAmplifier_Amplifiers_Amplifier_State::mutable_laser_bias_current() {
  
  if (laser_bias_current_ == NULL) {
    laser_bias_current_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.laser_bias_current)
  return laser_bias_current_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::set_allocated_laser_bias_current(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_LaserBiasCurrent* laser_bias_current) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete laser_bias_current_;
  }
  if (laser_bias_current) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      laser_bias_current = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, laser_bias_current, submessage_arena);
    }
    
  } else {
    
  }
  laser_bias_current_ = laser_bias_current;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.laser_bias_current)
}

// .ywrapper.StringValue name = 411449237 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/name"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& OpticalAmplifier_Amplifiers_Amplifier_State::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* OpticalAmplifier_Amplifiers_Amplifier_State::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* OpticalAmplifier_Amplifiers_Amplifier_State::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.name)
  return name_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.name)
}

// .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OpticalReturnLoss optical_return_loss = 1826957 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/optical-return-loss"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State::has_optical_return_loss() const {
  return this != internal_default_instance() && optical_return_loss_ != NULL;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::clear_optical_return_loss() {
  if (GetArenaNoVirtual() == NULL && optical_return_loss_ != NULL) {
    delete optical_return_loss_;
  }
  optical_return_loss_ = NULL;
}
inline const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss& OpticalAmplifier_Amplifiers_Amplifier_State::optical_return_loss() const {
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss* p = optical_return_loss_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.optical_return_loss)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss*>(
      &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss_default_instance_);
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss* OpticalAmplifier_Amplifiers_Amplifier_State::release_optical_return_loss() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.optical_return_loss)
  
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss* temp = optical_return_loss_;
  optical_return_loss_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss* OpticalAmplifier_Amplifiers_Amplifier_State::mutable_optical_return_loss() {
  
  if (optical_return_loss_ == NULL) {
    optical_return_loss_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.optical_return_loss)
  return optical_return_loss_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::set_allocated_optical_return_loss(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OpticalReturnLoss* optical_return_loss) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete optical_return_loss_;
  }
  if (optical_return_loss) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      optical_return_loss = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, optical_return_loss, submessage_arena);
    }
    
  } else {
    
  }
  optical_return_loss_ = optical_return_loss;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.optical_return_loss)
}

// .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerCBand output_power_c_band = 533754081 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-c-band"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State::has_output_power_c_band() const {
  return this != internal_default_instance() && output_power_c_band_ != NULL;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::clear_output_power_c_band() {
  if (GetArenaNoVirtual() == NULL && output_power_c_band_ != NULL) {
    delete output_power_c_band_;
  }
  output_power_c_band_ = NULL;
}
inline const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand& OpticalAmplifier_Amplifiers_Amplifier_State::output_power_c_band() const {
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand* p = output_power_c_band_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.output_power_c_band)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand*>(
      &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand_default_instance_);
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand* OpticalAmplifier_Amplifiers_Amplifier_State::release_output_power_c_band() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.output_power_c_band)
  
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand* temp = output_power_c_band_;
  output_power_c_band_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand* OpticalAmplifier_Amplifiers_Amplifier_State::mutable_output_power_c_band() {
  
  if (output_power_c_band_ == NULL) {
    output_power_c_band_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.output_power_c_band)
  return output_power_c_band_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::set_allocated_output_power_c_band(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerCBand* output_power_c_band) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete output_power_c_band_;
  }
  if (output_power_c_band) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      output_power_c_band = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, output_power_c_band, submessage_arena);
    }
    
  } else {
    
  }
  output_power_c_band_ = output_power_c_band;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.output_power_c_band)
}

// .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerLBand output_power_l_band = 148447468 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-l-band"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State::has_output_power_l_band() const {
  return this != internal_default_instance() && output_power_l_band_ != NULL;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::clear_output_power_l_band() {
  if (GetArenaNoVirtual() == NULL && output_power_l_band_ != NULL) {
    delete output_power_l_band_;
  }
  output_power_l_band_ = NULL;
}
inline const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand& OpticalAmplifier_Amplifiers_Amplifier_State::output_power_l_band() const {
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand* p = output_power_l_band_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.output_power_l_band)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand*>(
      &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand_default_instance_);
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand* OpticalAmplifier_Amplifiers_Amplifier_State::release_output_power_l_band() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.output_power_l_band)
  
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand* temp = output_power_l_band_;
  output_power_l_band_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand* OpticalAmplifier_Amplifiers_Amplifier_State::mutable_output_power_l_band() {
  
  if (output_power_l_band_ == NULL) {
    output_power_l_band_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.output_power_l_band)
  return output_power_l_band_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::set_allocated_output_power_l_band(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerLBand* output_power_l_band) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete output_power_l_band_;
  }
  if (output_power_l_band) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      output_power_l_band = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, output_power_l_band, submessage_arena);
    }
    
  } else {
    
  }
  output_power_l_band_ = output_power_l_band;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.output_power_l_band)
}

// .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.OutputPowerTotal output_power_total = 170412918 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/output-power-total"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State::has_output_power_total() const {
  return this != internal_default_instance() && output_power_total_ != NULL;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::clear_output_power_total() {
  if (GetArenaNoVirtual() == NULL && output_power_total_ != NULL) {
    delete output_power_total_;
  }
  output_power_total_ = NULL;
}
inline const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal& OpticalAmplifier_Amplifiers_Amplifier_State::output_power_total() const {
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal* p = output_power_total_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.output_power_total)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal*>(
      &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal_default_instance_);
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal* OpticalAmplifier_Amplifiers_Amplifier_State::release_output_power_total() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.output_power_total)
  
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal* temp = output_power_total_;
  output_power_total_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal* OpticalAmplifier_Amplifiers_Amplifier_State::mutable_output_power_total() {
  
  if (output_power_total_ == NULL) {
    output_power_total_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.output_power_total)
  return output_power_total_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::set_allocated_output_power_total(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State_OutputPowerTotal* output_power_total) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete output_power_total_;
  }
  if (output_power_total) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      output_power_total = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, output_power_total, submessage_arena);
    }
    
  } else {
    
  }
  output_power_total_ = output_power_total;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.output_power_total)
}

// .ywrapper.Decimal64Value target_gain = 382709921 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/target-gain"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State::has_target_gain() const {
  return this != internal_default_instance() && target_gain_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State::target_gain() const {
  const ::ywrapper::Decimal64Value* p = target_gain_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.target_gain)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State::release_target_gain() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.target_gain)
  
  ::ywrapper::Decimal64Value* temp = target_gain_;
  target_gain_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State::mutable_target_gain() {
  
  if (target_gain_ == NULL) {
    target_gain_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.target_gain)
  return target_gain_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::set_allocated_target_gain(::ywrapper::Decimal64Value* target_gain) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(target_gain_);
  }
  if (target_gain) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      target_gain = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target_gain, submessage_arena);
    }
    
  } else {
    
  }
  target_gain_ = target_gain;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.target_gain)
}

// .ywrapper.Decimal64Value target_gain_tilt = 253671195 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/target-gain-tilt"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State::has_target_gain_tilt() const {
  return this != internal_default_instance() && target_gain_tilt_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State::target_gain_tilt() const {
  const ::ywrapper::Decimal64Value* p = target_gain_tilt_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.target_gain_tilt)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State::release_target_gain_tilt() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.target_gain_tilt)
  
  ::ywrapper::Decimal64Value* temp = target_gain_tilt_;
  target_gain_tilt_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State::mutable_target_gain_tilt() {
  
  if (target_gain_tilt_ == NULL) {
    target_gain_tilt_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.target_gain_tilt)
  return target_gain_tilt_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::set_allocated_target_gain_tilt(::ywrapper::Decimal64Value* target_gain_tilt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(target_gain_tilt_);
  }
  if (target_gain_tilt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      target_gain_tilt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target_gain_tilt, submessage_arena);
    }
    
  } else {
    
  }
  target_gain_tilt_ = target_gain_tilt;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.target_gain_tilt)
}

// .ywrapper.Decimal64Value target_output_power = 39144115 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/target-output-power"];
inline bool OpticalAmplifier_Amplifiers_Amplifier_State::has_target_output_power() const {
  return this != internal_default_instance() && target_output_power_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_Amplifiers_Amplifier_State::target_output_power() const {
  const ::ywrapper::Decimal64Value* p = target_output_power_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.target_output_power)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State::release_target_output_power() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.target_output_power)
  
  ::ywrapper::Decimal64Value* temp = target_output_power_;
  target_output_power_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_Amplifiers_Amplifier_State::mutable_target_output_power() {
  
  if (target_output_power_ == NULL) {
    target_output_power_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.target_output_power)
  return target_output_power_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::set_allocated_target_output_power(::ywrapper::Decimal64Value* target_output_power) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(target_output_power_);
  }
  if (target_output_power) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      target_output_power = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, target_output_power, submessage_arena);
    }
    
  } else {
    
  }
  target_output_power_ = target_output_power;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.target_output_power)
}

// .openconfig.enums.OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE type = 28656020 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state/type"];
inline void OpticalAmplifier_Amplifiers_Amplifier_State::clear_type() {
  type_ = 0;
}
inline ::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE OpticalAmplifier_Amplifiers_Amplifier_State::type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.type)
  return static_cast< ::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE >(type_);
}
inline void OpticalAmplifier_Amplifiers_Amplifier_State::set_type(::openconfig::enums::OpenconfigOpticalAmplifierOPTICALAMPLIFIERTYPE value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State.type)
}

// -------------------------------------------------------------------

// OpticalAmplifier_Amplifiers_Amplifier

// .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.Config config = 47251912 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/config"];
inline bool OpticalAmplifier_Amplifiers_Amplifier::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void OpticalAmplifier_Amplifiers_Amplifier::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config& OpticalAmplifier_Amplifiers_Amplifier::config() const {
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config*>(
      &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_Config_default_instance_);
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config* OpticalAmplifier_Amplifiers_Amplifier::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.config)
  
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config* OpticalAmplifier_Amplifiers_Amplifier::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.config)
  return config_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier::set_allocated_config(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.config)
}

// .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.State state = 337450593 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/state"];
inline bool OpticalAmplifier_Amplifiers_Amplifier::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void OpticalAmplifier_Amplifiers_Amplifier::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State& OpticalAmplifier_Amplifiers_Amplifier::state() const {
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State*>(
      &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_State_default_instance_);
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State* OpticalAmplifier_Amplifiers_Amplifier::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.state)
  
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State* OpticalAmplifier_Amplifiers_Amplifier::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.state)
  return state_;
}
inline void OpticalAmplifier_Amplifiers_Amplifier::set_allocated_state(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier.state)
}

// -------------------------------------------------------------------

// OpticalAmplifier_Amplifiers_AmplifierKey

// string name = 1 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier/name"];
inline void OpticalAmplifier_Amplifiers_AmplifierKey::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OpticalAmplifier_Amplifiers_AmplifierKey::name() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey.name)
  return name_.GetNoArena();
}
inline void OpticalAmplifier_Amplifiers_AmplifierKey::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey.name)
}
#if LANG_CXX11
inline void OpticalAmplifier_Amplifiers_AmplifierKey::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey.name)
}
#endif
inline void OpticalAmplifier_Amplifiers_AmplifierKey::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey.name)
}
inline void OpticalAmplifier_Amplifiers_AmplifierKey::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey.name)
}
inline ::std::string* OpticalAmplifier_Amplifiers_AmplifierKey::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpticalAmplifier_Amplifiers_AmplifierKey::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpticalAmplifier_Amplifiers_AmplifierKey::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey.name)
}

// .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.Amplifier amplifier = 2;
inline bool OpticalAmplifier_Amplifiers_AmplifierKey::has_amplifier() const {
  return this != internal_default_instance() && amplifier_ != NULL;
}
inline void OpticalAmplifier_Amplifiers_AmplifierKey::clear_amplifier() {
  if (GetArenaNoVirtual() == NULL && amplifier_ != NULL) {
    delete amplifier_;
  }
  amplifier_ = NULL;
}
inline const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier& OpticalAmplifier_Amplifiers_AmplifierKey::amplifier() const {
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier* p = amplifier_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey.amplifier)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier*>(
      &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_Amplifier_default_instance_);
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier* OpticalAmplifier_Amplifiers_AmplifierKey::release_amplifier() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey.amplifier)
  
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier* temp = amplifier_;
  amplifier_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier* OpticalAmplifier_Amplifiers_AmplifierKey::mutable_amplifier() {
  
  if (amplifier_ == NULL) {
    amplifier_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey.amplifier)
  return amplifier_;
}
inline void OpticalAmplifier_Amplifiers_AmplifierKey::set_allocated_amplifier(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_Amplifier* amplifier) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete amplifier_;
  }
  if (amplifier) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      amplifier = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, amplifier, submessage_arena);
    }
    
  } else {
    
  }
  amplifier_ = amplifier;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey.amplifier)
}

// -------------------------------------------------------------------

// OpticalAmplifier_Amplifiers

// repeated .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.AmplifierKey amplifier = 265912407 [(.yext.schemapath) = "/optical-amplifier/amplifiers/amplifier"];
inline int OpticalAmplifier_Amplifiers::amplifier_size() const {
  return amplifier_.size();
}
inline void OpticalAmplifier_Amplifiers::clear_amplifier() {
  amplifier_.Clear();
}
inline const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_AmplifierKey& OpticalAmplifier_Amplifiers::amplifier(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.amplifier)
  return amplifier_.Get(index);
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_AmplifierKey* OpticalAmplifier_Amplifiers::mutable_amplifier(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.amplifier)
  return amplifier_.Mutable(index);
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_AmplifierKey* OpticalAmplifier_Amplifiers::add_amplifier() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.amplifier)
  return amplifier_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_AmplifierKey >*
OpticalAmplifier_Amplifiers::mutable_amplifier() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.amplifier)
  return &amplifier_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers_AmplifierKey >&
OpticalAmplifier_Amplifiers::amplifier() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers.amplifier)
  return amplifier_;
}

// -------------------------------------------------------------------

// OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config

// .ywrapper.StringValue interface = 147399380 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/config/interface"];
inline bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::has_interface() const {
  return this != internal_default_instance() && interface_ != NULL;
}
inline const ::ywrapper::StringValue& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::interface() const {
  const ::ywrapper::StringValue* p = interface_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config.interface)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::release_interface() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config.interface)
  
  ::ywrapper::StringValue* temp = interface_;
  interface_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::mutable_interface() {
  
  if (interface_ == NULL) {
    interface_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config.interface)
  return interface_;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config::set_allocated_interface(::ywrapper::StringValue* interface) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interface_);
  }
  if (interface) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interface = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interface, submessage_arena);
    }
    
  } else {
    
  }
  interface_ = interface;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config.interface)
}

// -------------------------------------------------------------------

// OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower

// .ywrapper.Decimal64Value avg = 217925853 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/avg"];
inline bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower.avg)
  return avg_;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower.avg)
}

// .ywrapper.Decimal64Value instant = 247179786 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/instant"];
inline bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower.instant)
  return instant_;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower.instant)
}

// .ywrapper.UintValue interval = 189599228 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/interval"];
inline bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower.interval)
  return interval_;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower.interval)
}

// .ywrapper.Decimal64Value max = 536112191 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/max"];
inline bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower.max)
  return max_;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower.max)
}

// .ywrapper.Decimal64Value min = 401891265 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power/min"];
inline bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower.min)
  return min_;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower.min)
}

// -------------------------------------------------------------------

// OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent

// .ywrapper.Decimal64Value avg = 354513576 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/avg"];
inline bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent.avg)
  return avg_;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent.avg)
}

// .ywrapper.Decimal64Value instant = 237850003 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/instant"];
inline bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent.instant)
  return instant_;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent.instant)
}

// .ywrapper.UintValue interval = 285212819 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/interval"];
inline bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent.interval)
  return interval_;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent.interval)
}

// .ywrapper.Decimal64Value max = 171931370 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/max"];
inline bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent.max)
  return max_;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent.max)
}

// .ywrapper.Decimal64Value min = 306152260 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current/min"];
inline bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent.min)
  return min_;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent.min)
}

// -------------------------------------------------------------------

// OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower

// .ywrapper.Decimal64Value avg = 381268042 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/avg"];
inline bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::avg() const {
  const ::ywrapper::Decimal64Value* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower.avg)
  
  ::ywrapper::Decimal64Value* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower.avg)
  return avg_;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::set_allocated_avg(::ywrapper::Decimal64Value* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower.avg)
}

// .ywrapper.Decimal64Value instant = 134280905 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/instant"];
inline bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::instant() const {
  const ::ywrapper::Decimal64Value* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower.instant)
  
  ::ywrapper::Decimal64Value* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower.instant)
  return instant_;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::set_allocated_instant(::ywrapper::Decimal64Value* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower.instant)
}

// .ywrapper.UintValue interval = 416178893 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/interval"];
inline bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower.interval)
  return interval_;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower.interval)
}

// .ywrapper.Decimal64Value max = 131575260 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/max"];
inline bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::max() const {
  const ::ywrapper::Decimal64Value* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower.max)
  
  ::ywrapper::Decimal64Value* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower.max)
  return max_;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::set_allocated_max(::ywrapper::Decimal64Value* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower.max)
}

// .ywrapper.Decimal64Value min = 534225250 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power/min"];
inline bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::Decimal64Value& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::min() const {
  const ::ywrapper::Decimal64Value* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::Decimal64Value*>(
      &::ywrapper::_Decimal64Value_default_instance_);
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower.min)
  
  ::ywrapper::Decimal64Value* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::Decimal64Value* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::Decimal64Value;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower.min)
  return min_;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower::set_allocated_min(::ywrapper::Decimal64Value* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower.min)
}

// -------------------------------------------------------------------

// OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State

// .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.InputPower input_power = 273167428 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/input-power"];
inline bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::has_input_power() const {
  return this != internal_default_instance() && input_power_ != NULL;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::clear_input_power() {
  if (GetArenaNoVirtual() == NULL && input_power_ != NULL) {
    delete input_power_;
  }
  input_power_ = NULL;
}
inline const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::input_power() const {
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower* p = input_power_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.input_power)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower*>(
      &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower_default_instance_);
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::release_input_power() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.input_power)
  
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower* temp = input_power_;
  input_power_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::mutable_input_power() {
  
  if (input_power_ == NULL) {
    input_power_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.input_power)
  return input_power_;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::set_allocated_input_power(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_InputPower* input_power) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete input_power_;
  }
  if (input_power) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      input_power = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, input_power, submessage_arena);
    }
    
  } else {
    
  }
  input_power_ = input_power;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.input_power)
}

// .ywrapper.StringValue interface = 295428929 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/interface"];
inline bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::has_interface() const {
  return this != internal_default_instance() && interface_ != NULL;
}
inline const ::ywrapper::StringValue& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::interface() const {
  const ::ywrapper::StringValue* p = interface_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.interface)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::release_interface() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.interface)
  
  ::ywrapper::StringValue* temp = interface_;
  interface_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::mutable_interface() {
  
  if (interface_ == NULL) {
    interface_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.interface)
  return interface_;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::set_allocated_interface(::ywrapper::StringValue* interface) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interface_);
  }
  if (interface) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interface = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interface, submessage_arena);
    }
    
  } else {
    
  }
  interface_ = interface;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.interface)
}

// .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.LaserBiasCurrent laser_bias_current = 267426693 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/laser-bias-current"];
inline bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::has_laser_bias_current() const {
  return this != internal_default_instance() && laser_bias_current_ != NULL;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::clear_laser_bias_current() {
  if (GetArenaNoVirtual() == NULL && laser_bias_current_ != NULL) {
    delete laser_bias_current_;
  }
  laser_bias_current_ = NULL;
}
inline const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::laser_bias_current() const {
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent* p = laser_bias_current_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.laser_bias_current)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent*>(
      &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent_default_instance_);
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::release_laser_bias_current() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.laser_bias_current)
  
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent* temp = laser_bias_current_;
  laser_bias_current_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::mutable_laser_bias_current() {
  
  if (laser_bias_current_ == NULL) {
    laser_bias_current_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.laser_bias_current)
  return laser_bias_current_;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::set_allocated_laser_bias_current(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_LaserBiasCurrent* laser_bias_current) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete laser_bias_current_;
  }
  if (laser_bias_current) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      laser_bias_current = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, laser_bias_current, submessage_arena);
    }
    
  } else {
    
  }
  laser_bias_current_ = laser_bias_current;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.laser_bias_current)
}

// .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.OutputPower output_power = 348784371 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state/output-power"];
inline bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::has_output_power() const {
  return this != internal_default_instance() && output_power_ != NULL;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::clear_output_power() {
  if (GetArenaNoVirtual() == NULL && output_power_ != NULL) {
    delete output_power_;
  }
  output_power_ = NULL;
}
inline const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::output_power() const {
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower* p = output_power_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.output_power)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower*>(
      &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower_default_instance_);
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::release_output_power() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.output_power)
  
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower* temp = output_power_;
  output_power_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::mutable_output_power() {
  
  if (output_power_ == NULL) {
    output_power_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.output_power)
  return output_power_;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State::set_allocated_output_power(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_OutputPower* output_power) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete output_power_;
  }
  if (output_power) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      output_power = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, output_power, submessage_arena);
    }
    
  } else {
    
  }
  output_power_ = output_power;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State.output_power)
}

// -------------------------------------------------------------------

// OpticalAmplifier_SupervisoryChannels_SupervisoryChannel

// .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.Config config = 299726764 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/config"];
inline bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::config() const {
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config*>(
      &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config_default_instance_);
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.config)
  
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.config)
  return config_;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::set_allocated_config(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.config)
}

// .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.State state = 48802981 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/state"];
inline bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State& OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::state() const {
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State*>(
      &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State_default_instance_);
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.state)
  
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State* OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.state)
  return state_;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannel::set_allocated_state(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel.state)
}

// -------------------------------------------------------------------

// OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey

// string interface = 1 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel/interface"];
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::clear_interface() {
  interface_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::interface() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey.interface)
  return interface_.GetNoArena();
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::set_interface(const ::std::string& value) {
  
  interface_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey.interface)
}
#if LANG_CXX11
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::set_interface(::std::string&& value) {
  
  interface_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey.interface)
}
#endif
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::set_interface(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  interface_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey.interface)
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::set_interface(const char* value, size_t size) {
  
  interface_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey.interface)
}
inline ::std::string* OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::mutable_interface() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey.interface)
  return interface_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::release_interface() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey.interface)
  
  return interface_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::set_allocated_interface(::std::string* interface) {
  if (interface != NULL) {
    
  } else {
    
  }
  interface_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), interface);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey.interface)
}

// .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannel supervisory_channel = 2;
inline bool OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::has_supervisory_channel() const {
  return this != internal_default_instance() && supervisory_channel_ != NULL;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::clear_supervisory_channel() {
  if (GetArenaNoVirtual() == NULL && supervisory_channel_ != NULL) {
    delete supervisory_channel_;
  }
  supervisory_channel_ = NULL;
}
inline const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel& OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::supervisory_channel() const {
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel* p = supervisory_channel_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey.supervisory_channel)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel*>(
      &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_SupervisoryChannel_default_instance_);
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel* OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::release_supervisory_channel() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey.supervisory_channel)
  
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel* temp = supervisory_channel_;
  supervisory_channel_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel* OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::mutable_supervisory_channel() {
  
  if (supervisory_channel_ == NULL) {
    supervisory_channel_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey.supervisory_channel)
  return supervisory_channel_;
}
inline void OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey::set_allocated_supervisory_channel(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannel* supervisory_channel) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete supervisory_channel_;
  }
  if (supervisory_channel) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      supervisory_channel = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, supervisory_channel, submessage_arena);
    }
    
  } else {
    
  }
  supervisory_channel_ = supervisory_channel;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey.supervisory_channel)
}

// -------------------------------------------------------------------

// OpticalAmplifier_SupervisoryChannels

// repeated .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.SupervisoryChannelKey supervisory_channel = 42639227 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels/supervisory-channel"];
inline int OpticalAmplifier_SupervisoryChannels::supervisory_channel_size() const {
  return supervisory_channel_.size();
}
inline void OpticalAmplifier_SupervisoryChannels::clear_supervisory_channel() {
  supervisory_channel_.Clear();
}
inline const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey& OpticalAmplifier_SupervisoryChannels::supervisory_channel(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.supervisory_channel)
  return supervisory_channel_.Get(index);
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey* OpticalAmplifier_SupervisoryChannels::mutable_supervisory_channel(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.supervisory_channel)
  return supervisory_channel_.Mutable(index);
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey* OpticalAmplifier_SupervisoryChannels::add_supervisory_channel() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.supervisory_channel)
  return supervisory_channel_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey >*
OpticalAmplifier_SupervisoryChannels::mutable_supervisory_channel() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.supervisory_channel)
  return &supervisory_channel_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels_SupervisoryChannelKey >&
OpticalAmplifier_SupervisoryChannels::supervisory_channel() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels.supervisory_channel)
  return supervisory_channel_;
}

// -------------------------------------------------------------------

// OpticalAmplifier

// .openconfig.openconfig_optical_amplifier.OpticalAmplifier.Amplifiers amplifiers = 372184323 [(.yext.schemapath) = "/optical-amplifier/amplifiers"];
inline bool OpticalAmplifier::has_amplifiers() const {
  return this != internal_default_instance() && amplifiers_ != NULL;
}
inline void OpticalAmplifier::clear_amplifiers() {
  if (GetArenaNoVirtual() == NULL && amplifiers_ != NULL) {
    delete amplifiers_;
  }
  amplifiers_ = NULL;
}
inline const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers& OpticalAmplifier::amplifiers() const {
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers* p = amplifiers_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.amplifiers)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers*>(
      &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_Amplifiers_default_instance_);
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers* OpticalAmplifier::release_amplifiers() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.amplifiers)
  
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers* temp = amplifiers_;
  amplifiers_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers* OpticalAmplifier::mutable_amplifiers() {
  
  if (amplifiers_ == NULL) {
    amplifiers_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.amplifiers)
  return amplifiers_;
}
inline void OpticalAmplifier::set_allocated_amplifiers(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_Amplifiers* amplifiers) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete amplifiers_;
  }
  if (amplifiers) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      amplifiers = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, amplifiers, submessage_arena);
    }
    
  } else {
    
  }
  amplifiers_ = amplifiers;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.amplifiers)
}

// .openconfig.openconfig_optical_amplifier.OpticalAmplifier.SupervisoryChannels supervisory_channels = 28767387 [(.yext.schemapath) = "/optical-amplifier/supervisory-channels"];
inline bool OpticalAmplifier::has_supervisory_channels() const {
  return this != internal_default_instance() && supervisory_channels_ != NULL;
}
inline void OpticalAmplifier::clear_supervisory_channels() {
  if (GetArenaNoVirtual() == NULL && supervisory_channels_ != NULL) {
    delete supervisory_channels_;
  }
  supervisory_channels_ = NULL;
}
inline const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels& OpticalAmplifier::supervisory_channels() const {
  const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels* p = supervisory_channels_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_optical_amplifier.OpticalAmplifier.supervisory_channels)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels*>(
      &::openconfig::openconfig_optical_amplifier::_OpticalAmplifier_SupervisoryChannels_default_instance_);
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels* OpticalAmplifier::release_supervisory_channels() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_optical_amplifier.OpticalAmplifier.supervisory_channels)
  
  ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels* temp = supervisory_channels_;
  supervisory_channels_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels* OpticalAmplifier::mutable_supervisory_channels() {
  
  if (supervisory_channels_ == NULL) {
    supervisory_channels_ = new ::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_optical_amplifier.OpticalAmplifier.supervisory_channels)
  return supervisory_channels_;
}
inline void OpticalAmplifier::set_allocated_supervisory_channels(::openconfig::openconfig_optical_amplifier::OpticalAmplifier_SupervisoryChannels* supervisory_channels) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete supervisory_channels_;
  }
  if (supervisory_channels) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      supervisory_channels = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, supervisory_channels, submessage_arena);
    }
    
  } else {
    
  }
  supervisory_channels_ = supervisory_channels;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_optical_amplifier.OpticalAmplifier.supervisory_channels)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace openconfig_optical_amplifier
}  // namespace openconfig

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_openconfig_2fopenconfig_5foptical_5famplifier_2fopenconfig_5foptical_5famplifier_2eproto__INCLUDED
