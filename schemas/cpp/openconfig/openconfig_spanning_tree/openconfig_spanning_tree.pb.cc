// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: openconfig/openconfig_spanning_tree/openconfig_spanning_tree.proto

#include "openconfig/openconfig_spanning_tree/openconfig_spanning_tree.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace openconfig {
namespace openconfig_spanning_tree {
class Stp_Global_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Global_Config>
      _instance;
} _Stp_Global_Config_default_instance_;
class Stp_Global_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Global_State>
      _instance;
} _Stp_Global_State_default_instance_;
class Stp_GlobalDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Global>
      _instance;
} _Stp_Global_default_instance_;
class Stp_Interfaces_Interface_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Interfaces_Interface_Config>
      _instance;
} _Stp_Interfaces_Interface_Config_default_instance_;
class Stp_Interfaces_Interface_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Interfaces_Interface_State>
      _instance;
} _Stp_Interfaces_Interface_State_default_instance_;
class Stp_Interfaces_InterfaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Interfaces_Interface>
      _instance;
} _Stp_Interfaces_Interface_default_instance_;
class Stp_Interfaces_InterfaceKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Interfaces_InterfaceKey>
      _instance;
} _Stp_Interfaces_InterfaceKey_default_instance_;
class Stp_InterfacesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Interfaces>
      _instance;
} _Stp_Interfaces_default_instance_;
class Stp_Mstp_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Mstp_Config>
      _instance;
} _Stp_Mstp_Config_default_instance_;
class Stp_Mstp_MstInstances_MstInstance_Config_VlanUnionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion>
      _instance;
} _Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion_default_instance_;
class Stp_Mstp_MstInstances_MstInstance_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Mstp_MstInstances_MstInstance_Config>
      _instance;
} _Stp_Mstp_MstInstances_MstInstance_Config_default_instance_;
class Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config>
      _instance;
} _Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config_default_instance_;
class Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_CountersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters>
      _instance;
} _Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters_default_instance_;
class Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State>
      _instance;
} _Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_default_instance_;
class Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface>
      _instance;
} _Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_default_instance_;
class Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey>
      _instance;
} _Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey_default_instance_;
class Stp_Mstp_MstInstances_MstInstance_InterfacesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Mstp_MstInstances_MstInstance_Interfaces>
      _instance;
} _Stp_Mstp_MstInstances_MstInstance_Interfaces_default_instance_;
class Stp_Mstp_MstInstances_MstInstance_State_VlanUnionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Mstp_MstInstances_MstInstance_State_VlanUnion>
      _instance;
} _Stp_Mstp_MstInstances_MstInstance_State_VlanUnion_default_instance_;
class Stp_Mstp_MstInstances_MstInstance_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Mstp_MstInstances_MstInstance_State>
      _instance;
} _Stp_Mstp_MstInstances_MstInstance_State_default_instance_;
class Stp_Mstp_MstInstances_MstInstanceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Mstp_MstInstances_MstInstance>
      _instance;
} _Stp_Mstp_MstInstances_MstInstance_default_instance_;
class Stp_Mstp_MstInstances_MstInstanceKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Mstp_MstInstances_MstInstanceKey>
      _instance;
} _Stp_Mstp_MstInstances_MstInstanceKey_default_instance_;
class Stp_Mstp_MstInstancesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Mstp_MstInstances>
      _instance;
} _Stp_Mstp_MstInstances_default_instance_;
class Stp_Mstp_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Mstp_State>
      _instance;
} _Stp_Mstp_State_default_instance_;
class Stp_MstpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Mstp>
      _instance;
} _Stp_Mstp_default_instance_;
class Stp_RapidPvst_Vlan_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_RapidPvst_Vlan_Config>
      _instance;
} _Stp_RapidPvst_Vlan_Config_default_instance_;
class Stp_RapidPvst_Vlan_Interfaces_Interface_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_RapidPvst_Vlan_Interfaces_Interface_Config>
      _instance;
} _Stp_RapidPvst_Vlan_Interfaces_Interface_Config_default_instance_;
class Stp_RapidPvst_Vlan_Interfaces_Interface_State_CountersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters>
      _instance;
} _Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters_default_instance_;
class Stp_RapidPvst_Vlan_Interfaces_Interface_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_RapidPvst_Vlan_Interfaces_Interface_State>
      _instance;
} _Stp_RapidPvst_Vlan_Interfaces_Interface_State_default_instance_;
class Stp_RapidPvst_Vlan_Interfaces_InterfaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_RapidPvst_Vlan_Interfaces_Interface>
      _instance;
} _Stp_RapidPvst_Vlan_Interfaces_Interface_default_instance_;
class Stp_RapidPvst_Vlan_Interfaces_InterfaceKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_RapidPvst_Vlan_Interfaces_InterfaceKey>
      _instance;
} _Stp_RapidPvst_Vlan_Interfaces_InterfaceKey_default_instance_;
class Stp_RapidPvst_Vlan_InterfacesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_RapidPvst_Vlan_Interfaces>
      _instance;
} _Stp_RapidPvst_Vlan_Interfaces_default_instance_;
class Stp_RapidPvst_Vlan_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_RapidPvst_Vlan_State>
      _instance;
} _Stp_RapidPvst_Vlan_State_default_instance_;
class Stp_RapidPvst_VlanDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_RapidPvst_Vlan>
      _instance;
} _Stp_RapidPvst_Vlan_default_instance_;
class Stp_RapidPvst_VlanKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_RapidPvst_VlanKey>
      _instance;
} _Stp_RapidPvst_VlanKey_default_instance_;
class Stp_RapidPvstDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_RapidPvst>
      _instance;
} _Stp_RapidPvst_default_instance_;
class Stp_Rstp_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Rstp_Config>
      _instance;
} _Stp_Rstp_Config_default_instance_;
class Stp_Rstp_Interfaces_Interface_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Rstp_Interfaces_Interface_Config>
      _instance;
} _Stp_Rstp_Interfaces_Interface_Config_default_instance_;
class Stp_Rstp_Interfaces_Interface_State_CountersDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Rstp_Interfaces_Interface_State_Counters>
      _instance;
} _Stp_Rstp_Interfaces_Interface_State_Counters_default_instance_;
class Stp_Rstp_Interfaces_Interface_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Rstp_Interfaces_Interface_State>
      _instance;
} _Stp_Rstp_Interfaces_Interface_State_default_instance_;
class Stp_Rstp_Interfaces_InterfaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Rstp_Interfaces_Interface>
      _instance;
} _Stp_Rstp_Interfaces_Interface_default_instance_;
class Stp_Rstp_Interfaces_InterfaceKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Rstp_Interfaces_InterfaceKey>
      _instance;
} _Stp_Rstp_Interfaces_InterfaceKey_default_instance_;
class Stp_Rstp_InterfacesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Rstp_Interfaces>
      _instance;
} _Stp_Rstp_Interfaces_default_instance_;
class Stp_Rstp_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Rstp_State>
      _instance;
} _Stp_Rstp_State_default_instance_;
class Stp_RstpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp_Rstp>
      _instance;
} _Stp_Rstp_default_instance_;
class StpDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Stp>
      _instance;
} _Stp_default_instance_;
}  // namespace openconfig_spanning_tree
}  // namespace openconfig
namespace protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto {
void InitDefaultsStp_Global_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBoolValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Global_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Global_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Global_Config::InitAsDefaultInstance();
}

void InitDefaultsStp_Global_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Global_ConfigImpl);
}

void InitDefaultsStp_Global_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBoolValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Global_State_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Global_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Global_State::InitAsDefaultInstance();
}

void InitDefaultsStp_Global_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Global_StateImpl);
}

void InitDefaultsStp_GlobalImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Global_Config();
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Global_State();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Global_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Global();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Global::InitAsDefaultInstance();
}

void InitDefaultsStp_Global() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_GlobalImpl);
}

void InitDefaultsStp_Interfaces_Interface_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBoolValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Interfaces_Interface_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_Config::InitAsDefaultInstance();
}

void InitDefaultsStp_Interfaces_Interface_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Interfaces_Interface_ConfigImpl);
}

void InitDefaultsStp_Interfaces_Interface_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsBoolValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Interfaces_Interface_State_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_State::InitAsDefaultInstance();
}

void InitDefaultsStp_Interfaces_Interface_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Interfaces_Interface_StateImpl);
}

void InitDefaultsStp_Interfaces_InterfaceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Interfaces_Interface_Config();
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Interfaces_Interface_State();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Interfaces_Interface_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface::InitAsDefaultInstance();
}

void InitDefaultsStp_Interfaces_Interface() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Interfaces_InterfaceImpl);
}

void InitDefaultsStp_Interfaces_InterfaceKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Interfaces_Interface();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Interfaces_InterfaceKey_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Interfaces_InterfaceKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Interfaces_InterfaceKey::InitAsDefaultInstance();
}

void InitDefaultsStp_Interfaces_InterfaceKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Interfaces_InterfaceKeyImpl);
}

void InitDefaultsStp_InterfacesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Interfaces_InterfaceKey();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Interfaces_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Interfaces();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Interfaces::InitAsDefaultInstance();
}

void InitDefaultsStp_Interfaces() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_InterfacesImpl);
}

void InitDefaultsStp_Mstp_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Mstp_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Mstp_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_Config::InitAsDefaultInstance();
}

void InitDefaultsStp_Mstp_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Mstp_ConfigImpl);
}

void InitDefaultsStp_Mstp_MstInstances_MstInstance_Config_VlanUnionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::InitAsDefaultInstance();
}

void InitDefaultsStp_Mstp_MstInstances_MstInstance_Config_VlanUnion() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Mstp_MstInstances_MstInstance_Config_VlanUnionImpl);
}

void InitDefaultsStp_Mstp_MstInstances_MstInstance_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Config_VlanUnion();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config::InitAsDefaultInstance();
}

void InitDefaultsStp_Mstp_MstInstances_MstInstance_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Mstp_MstInstances_MstInstance_ConfigImpl);
}

void InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::InitAsDefaultInstance();
}

void InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_ConfigImpl);
}

void InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_CountersImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::InitAsDefaultInstance();
}

void InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_CountersImpl);
}

void InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::InitAsDefaultInstance();
}

void InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_StateImpl);
}

void InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config();
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::InitAsDefaultInstance();
}

void InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceImpl);
}

void InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::InitAsDefaultInstance();
}

void InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKeyImpl);
}

void InitDefaultsStp_Mstp_MstInstances_MstInstance_InterfacesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces::InitAsDefaultInstance();
}

void InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Mstp_MstInstances_MstInstance_InterfacesImpl);
}

void InitDefaultsStp_Mstp_MstInstances_MstInstance_State_VlanUnionImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_State_VlanUnion_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State_VlanUnion();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::InitAsDefaultInstance();
}

void InitDefaultsStp_Mstp_MstInstances_MstInstance_State_VlanUnion() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Mstp_MstInstances_MstInstance_State_VlanUnionImpl);
}

void InitDefaultsStp_Mstp_MstInstances_MstInstance_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_State_VlanUnion();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_State_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State::InitAsDefaultInstance();
}

void InitDefaultsStp_Mstp_MstInstances_MstInstance_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Mstp_MstInstances_MstInstance_StateImpl);
}

void InitDefaultsStp_Mstp_MstInstances_MstInstanceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Config();
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces();
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_State();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance::InitAsDefaultInstance();
}

void InitDefaultsStp_Mstp_MstInstances_MstInstance() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Mstp_MstInstances_MstInstanceImpl);
}

void InitDefaultsStp_Mstp_MstInstances_MstInstanceKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstanceKey_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstanceKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstanceKey::InitAsDefaultInstance();
}

void InitDefaultsStp_Mstp_MstInstances_MstInstanceKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Mstp_MstInstances_MstInstanceKeyImpl);
}

void InitDefaultsStp_Mstp_MstInstancesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstanceKey();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances::InitAsDefaultInstance();
}

void InitDefaultsStp_Mstp_MstInstances() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Mstp_MstInstancesImpl);
}

void InitDefaultsStp_Mstp_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Mstp_State_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Mstp_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_State::InitAsDefaultInstance();
}

void InitDefaultsStp_Mstp_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Mstp_StateImpl);
}

void InitDefaultsStp_MstpImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_Config();
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances();
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_State();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Mstp_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Mstp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Mstp::InitAsDefaultInstance();
}

void InitDefaultsStp_Mstp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_MstpImpl);
}

void InitDefaultsStp_RapidPvst_Vlan_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Config::InitAsDefaultInstance();
}

void InitDefaultsStp_RapidPvst_Vlan_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_RapidPvst_Vlan_ConfigImpl);
}

void InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_Config::InitAsDefaultInstance();
}

void InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_ConfigImpl);
}

void InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_State_CountersImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::InitAsDefaultInstance();
}

void InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_State_Counters() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_State_CountersImpl);
}

void InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_State_Counters();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_State_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State::InitAsDefaultInstance();
}

void InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_StateImpl);
}

void InitDefaultsStp_RapidPvst_Vlan_Interfaces_InterfaceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_Config();
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_State();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface::InitAsDefaultInstance();
}

void InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_RapidPvst_Vlan_Interfaces_InterfaceImpl);
}

void InitDefaultsStp_RapidPvst_Vlan_Interfaces_InterfaceKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_InterfaceKey_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_InterfaceKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::InitAsDefaultInstance();
}

void InitDefaultsStp_RapidPvst_Vlan_Interfaces_InterfaceKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_RapidPvst_Vlan_Interfaces_InterfaceKeyImpl);
}

void InitDefaultsStp_RapidPvst_Vlan_InterfacesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_Interfaces_InterfaceKey();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces::InitAsDefaultInstance();
}

void InitDefaultsStp_RapidPvst_Vlan_Interfaces() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_RapidPvst_Vlan_InterfacesImpl);
}

void InitDefaultsStp_RapidPvst_Vlan_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_State_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State::InitAsDefaultInstance();
}

void InitDefaultsStp_RapidPvst_Vlan_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_RapidPvst_Vlan_StateImpl);
}

void InitDefaultsStp_RapidPvst_VlanImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_Config();
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_Interfaces();
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_State();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan::InitAsDefaultInstance();
}

void InitDefaultsStp_RapidPvst_Vlan() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_RapidPvst_VlanImpl);
}

void InitDefaultsStp_RapidPvst_VlanKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_VlanKey_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_VlanKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_VlanKey::InitAsDefaultInstance();
}

void InitDefaultsStp_RapidPvst_VlanKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_RapidPvst_VlanKeyImpl);
}

void InitDefaultsStp_RapidPvstImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_VlanKey();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_RapidPvst();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst::InitAsDefaultInstance();
}

void InitDefaultsStp_RapidPvst() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_RapidPvstImpl);
}

void InitDefaultsStp_Rstp_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Rstp_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Rstp_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Config::InitAsDefaultInstance();
}

void InitDefaultsStp_Rstp_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Rstp_ConfigImpl);
}

void InitDefaultsStp_Rstp_Interfaces_Interface_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_Config::InitAsDefaultInstance();
}

void InitDefaultsStp_Rstp_Interfaces_Interface_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Rstp_Interfaces_Interface_ConfigImpl);
}

void InitDefaultsStp_Rstp_Interfaces_Interface_State_CountersImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_State_Counters_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State_Counters();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State_Counters::InitAsDefaultInstance();
}

void InitDefaultsStp_Rstp_Interfaces_Interface_State_Counters() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Rstp_Interfaces_Interface_State_CountersImpl);
}

void InitDefaultsStp_Rstp_Interfaces_Interface_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_Interfaces_Interface_State_Counters();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_State_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State::InitAsDefaultInstance();
}

void InitDefaultsStp_Rstp_Interfaces_Interface_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Rstp_Interfaces_Interface_StateImpl);
}

void InitDefaultsStp_Rstp_Interfaces_InterfaceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_Interfaces_Interface_Config();
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_Interfaces_Interface_State();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface::InitAsDefaultInstance();
}

void InitDefaultsStp_Rstp_Interfaces_Interface() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Rstp_Interfaces_InterfaceImpl);
}

void InitDefaultsStp_Rstp_Interfaces_InterfaceKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_Interfaces_Interface();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_InterfaceKey_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_InterfaceKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_InterfaceKey::InitAsDefaultInstance();
}

void InitDefaultsStp_Rstp_Interfaces_InterfaceKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Rstp_Interfaces_InterfaceKeyImpl);
}

void InitDefaultsStp_Rstp_InterfacesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_Interfaces_InterfaceKey();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces::InitAsDefaultInstance();
}

void InitDefaultsStp_Rstp_Interfaces() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Rstp_InterfacesImpl);
}

void InitDefaultsStp_Rstp_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Rstp_State_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Rstp_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_State::InitAsDefaultInstance();
}

void InitDefaultsStp_Rstp_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_Rstp_StateImpl);
}

void InitDefaultsStp_RstpImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_Config();
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_Interfaces();
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_State();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_Rstp_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp_Rstp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp_Rstp::InitAsDefaultInstance();
}

void InitDefaultsStp_Rstp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStp_RstpImpl);
}

void InitDefaultsStpImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Global();
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Interfaces();
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp();
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst();
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp();
  {
    void* ptr = &::openconfig::openconfig_spanning_tree::_Stp_default_instance_;
    new (ptr) ::openconfig::openconfig_spanning_tree::Stp();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_spanning_tree::Stp::InitAsDefaultInstance();
}

void InitDefaultsStp() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsStpImpl);
}

::google::protobuf::Metadata file_level_metadata[45];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Global_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Global_Config, bpdu_filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Global_Config, bpdu_guard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Global_Config, bpduguard_timeout_recovery_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Global_Config, bridge_assurance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Global_Config, enabled_protocol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Global_Config, etherchannel_misconfig_guard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Global_Config, loop_guard_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Global_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Global_State, bpdu_filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Global_State, bpdu_guard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Global_State, bpduguard_timeout_recovery_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Global_State, bridge_assurance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Global_State, enabled_protocol_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Global_State, etherchannel_misconfig_guard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Global_State, loop_guard_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Global, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Global, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Global, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_Config, bpdu_filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_Config, bpdu_guard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_Config, edge_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_Config, guard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_Config, link_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_Config, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_State, bpdu_filter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_State, bpdu_guard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_State, edge_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_State, guard_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_State, link_type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_State, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Interfaces_InterfaceKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Interfaces_InterfaceKey, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Interfaces_InterfaceKey, interface_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Interfaces, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Interfaces, interface_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_Config, forwarding_delay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_Config, hello_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_Config, hold_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_Config, max_age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_Config, max_hop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_Config, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_Config, revision_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion, vlan_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion, vlan_uint64_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config, bridge_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config, mst_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config, vlan_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config, cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config, port_priority_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters, bpdu_received_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters, bpdu_sent_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State, cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State, counters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State, designated_bridge_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State, designated_bridge_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State, designated_cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State, designated_port_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State, designated_port_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State, designated_root_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State, designated_root_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State, forward_transisitions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State, port_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State, port_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State, port_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State, role_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey, interface_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces, interface_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State_VlanUnion, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State_VlanUnion, vlan_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State_VlanUnion, vlan_uint64_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State, bridge_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State, bridge_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State, designated_root_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State, designated_root_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State, hold_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State, mst_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State, root_cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State, root_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State, time_since_topology_change_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State, topology_changes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State, vlan_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance, interfaces_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstanceKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstanceKey, mst_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstanceKey, mst_instance_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances, mst_instance_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_State, forwarding_delay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_State, hello_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_State, hold_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_State, max_age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_State, max_hop_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_State, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp_State, revision_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp, mst_instances_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Mstp, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Config, bridge_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Config, forwarding_delay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Config, hello_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Config, hold_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Config, max_age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Config, vlan_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_Config, cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_Config, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_Config, port_priority_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters, bpdu_received_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters, bpdu_sent_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State, cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State, counters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State, designated_bridge_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State, designated_bridge_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State, designated_cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State, designated_port_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State, designated_port_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State, designated_root_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State, designated_root_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State, forward_transisitions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State, port_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State, port_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State, port_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State, role_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_InterfaceKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_InterfaceKey, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_InterfaceKey, interface_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces, interface_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State, bridge_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State, bridge_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State, designated_root_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State, designated_root_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State, forwarding_delay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State, hello_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State, hold_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State, hold_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State, max_age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State, root_cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State, root_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State, time_since_topology_change_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State, topology_changes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State, vlan_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan, interfaces_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_VlanKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_VlanKey, vlan_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_VlanKey, vlan_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_RapidPvst, vlan_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Config, bridge_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Config, forwarding_delay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Config, hello_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Config, hold_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Config, max_age_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_Config, cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_Config, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_Config, port_priority_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State_Counters, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State_Counters, bpdu_received_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State_Counters, bpdu_sent_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State, cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State, counters_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State, designated_bridge_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State, designated_bridge_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State, designated_cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State, designated_port_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State, designated_port_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State, designated_root_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State, designated_root_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State, forward_transisitions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State, port_num_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State, port_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State, port_state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State, role_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_InterfaceKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_InterfaceKey, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_InterfaceKey, interface_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces, interface_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_State, bridge_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_State, bridge_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_State, designated_root_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_State, designated_root_priority_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_State, forwarding_delay_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_State, hello_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_State, hold_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_State, hold_time_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_State, max_age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_State, root_cost_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_State, root_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_State, time_since_topology_change_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp_State, topology_changes_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp, interfaces_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp_Rstp, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp, global_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp, interfaces_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp, mstp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp, rapid_pvst_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_spanning_tree::Stp, rstp_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Global_Config)},
  { 12, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Global_State)},
  { 24, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Global)},
  { 31, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_Config)},
  { 42, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_State)},
  { 53, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface)},
  { 60, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Interfaces_InterfaceKey)},
  { 67, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Interfaces)},
  { 73, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Mstp_Config)},
  { 85, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion)},
  { 92, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config)},
  { 100, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config)},
  { 108, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters)},
  { 115, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State)},
  { 135, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface)},
  { 142, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey)},
  { 149, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces)},
  { 155, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State_VlanUnion)},
  { 162, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State)},
  { 178, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance)},
  { 186, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstanceKey)},
  { 193, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances)},
  { 199, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Mstp_State)},
  { 211, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Mstp)},
  { 219, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Config)},
  { 230, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_Config)},
  { 238, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters)},
  { 245, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State)},
  { 265, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface)},
  { 272, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_InterfaceKey)},
  { 279, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces)},
  { 285, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State)},
  { 304, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan)},
  { 312, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_VlanKey)},
  { 319, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_RapidPvst)},
  { 325, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Rstp_Config)},
  { 335, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_Config)},
  { 343, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State_Counters)},
  { 350, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State)},
  { 370, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface)},
  { 377, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_InterfaceKey)},
  { 384, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces)},
  { 390, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Rstp_State)},
  { 408, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp_Rstp)},
  { 416, -1, sizeof(::openconfig::openconfig_spanning_tree::Stp)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Global_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Global_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Global_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Interfaces_Interface_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Interfaces_Interface_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Interfaces_Interface_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Interfaces_InterfaceKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Interfaces_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Mstp_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_State_VlanUnion_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstanceKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Mstp_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Mstp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_InterfaceKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_VlanKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Rstp_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_State_Counters_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_InterfaceKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Rstp_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_Rstp_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_spanning_tree::_Stp_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "openconfig/openconfig_spanning_tree/openconfig_spanning_tree.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 45);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\nBopenconfig/openconfig_spanning_tree/op"
      "enconfig_spanning_tree.proto\022#openconfig"
      ".openconfig_spanning_tree\0328github.com/op"
      "enconfig/ygot/proto/ywrapper/ywrapper.pr"
      "oto\0320github.com/openconfig/ygot/proto/ye"
      "xt/yext.proto\032\034openconfig/enums/enums.pr"
      "oto\"\314\252\001\n\003Stp\022R\n\006global\030\262\236\205] \001(\0132/.openco"
      "nfig.openconfig_spanning_tree.Stp.Global"
      "B\016\202A\013/stp/global\022_\n\ninterfaces\030\253\226\247\267\001 \001(\013"
      "23.openconfig.openconfig_spanning_tree.S"
      "tp.InterfacesB\022\202A\017/stp/interfaces\022M\n\004mst"
      "p\030\247\276\374\221\001 \001(\0132-.openconfig.openconfig_span"
      "ning_tree.Stp.MstpB\014\202A\t/stp/mstp\022]\n\nrapi"
      "d_pvst\030\203\315\2216 \001(\01322.openconfig.openconfig_"
      "spanning_tree.Stp.RapidPvstB\022\202A\017/stp/rap"
      "id-pvst\022L\n\004rstp\030\252\310\342+ \001(\0132-.openconfig.op"
      "enconfig_spanning_tree.Stp.RstpB\014\202A\t/stp"
      "/rstp\032\253\014\n\006Global\022a\n\006config\030\363\210\237\217\001 \001(\01326.o"
      "penconfig.openconfig_spanning_tree.Stp.G"
      "lobal.ConfigB\025\202A\022/stp/global/config\022]\n\005s"
      "tate\030\324\343\230\' \001(\01325.openconfig.openconfig_sp"
      "anning_tree.Stp.Global.StateB\024\202A\021/stp/gl"
      "obal/state\032\262\005\n\006Config\022O\n\013bpdu_filter\030\324\347\262"
      "\307\001 \001(\0132\023.ywrapper.BoolValueB!\202A\036/stp/glo"
      "bal/config/bpdu-filter\022M\n\nbpdu_guard\030\251\247\365"
      "\323\001 \001(\0132\023.ywrapper.BoolValueB \202A\035/stp/glo"
      "bal/config/bpdu-guard\022l\n\032bpduguard_timeo"
      "ut_recovery\030\312\360\2455 \001(\0132\023.ywrapper.UintValu"
      "eB0\202A-/stp/global/config/bpduguard-timeo"
      "ut-recovery\022X\n\020bridge_assurance\030\365\252\236S \001(\013"
      "2\023.ywrapper.BoolValueB&\202A#/stp/global/co"
      "nfig/bridge-assurance\022~\n\020enabled_protoco"
      "l\030\272\243\320\367\001 \003(\01628.openconfig.enums.Openconfi"
      "gSpanningTreeTypesSTPPROTOCOLB&\202A#/stp/g"
      "lobal/config/enabled-protocol\022q\n\034etherch"
      "annel_misconfig_guard\030\313\331\227\323\001 \001(\0132\023.ywrapp"
      "er.BoolValueB2\202A//stp/global/config/ethe"
      "rchannel-misconfig-guard\022M\n\nloop_guard\030\254"
      "\270\223\225\001 \001(\0132\023.ywrapper.BoolValueB \202A\035/stp/g"
      "lobal/config/loop-guard\032\251\005\n\005State\022M\n\013bpd"
      "u_filter\030\353\215\311\027 \001(\0132\023.ywrapper.BoolValueB "
      "\202A\035/stp/global/state/bpdu-filter\022L\n\nbpdu"
      "_guard\030\374\345\275\270\001 \001(\0132\023.ywrapper.BoolValueB\037\202"
      "A\034/stp/global/state/bpdu-guard\022l\n\032bpdugu"
      "ard_timeout_recovery\030\337\270\264\372\001 \001(\0132\023.ywrappe"
      "r.UintValueB/\202A,/stp/global/state/bpdugu"
      "ard-timeout-recovery\022W\n\020bridge_assurance"
      "\030\304\317\254q \001(\0132\023.ywrapper.BoolValueB%\202A\"/stp/"
      "global/state/bridge-assurance\022}\n\020enabled"
      "_protocol\030\377\312\320\225\001 \003(\01628.openconfig.enums.O"
      "penconfigSpanningTreeTypesSTPPROTOCOLB%\202"
      "A\"/stp/global/state/enabled-protocol\022p\n\034"
      "etherchannel_misconfig_guard\030\322\301\223\236\001 \001(\0132\023"
      ".ywrapper.BoolValueB1\202A./stp/global/stat"
      "e/etherchannel-misconfig-guard\022K\n\nloop_g"
      "uard\030\275\212\371B \001(\0132\023.ywrapper.BoolValueB\037\202A\034/"
      "stp/global/state/loop-guard\032\245\016\n\nInterfac"
      "es\022u\n\tinterface\030\373\327\244\234\001 \003(\0132@.openconfig.o"
      "penconfig_spanning_tree.Stp.Interfaces.I"
      "nterfaceKeyB\034\202A\031/stp/interfaces/interfac"
      "e\032\213\014\n\tInterface\022}\n\006config\030\254\362\274\343\001 \001(\0132D.op"
      "enconfig.openconfig_spanning_tree.Stp.In"
      "terfaces.Interface.ConfigB#\202A /stp/inter"
      "faces/interface/config\022y\n\005state\030\245\252\273T \001(\013"
      "2C.openconfig.openconfig_spanning_tree.S"
      "tp.Interfaces.Interface.StateB\"\202A\037/stp/i"
      "nterfaces/interface/state\032\204\005\n\006Config\022]\n\013"
      "bpdu_filter\030\243\242\342\353\001 \001(\0132\023.ywrapper.BoolVal"
      "ueB/\202A,/stp/interfaces/interface/config/"
      "bpdu-filter\022Z\n\nbpdu_guard\030\204\337\222# \001(\0132\023.ywr"
      "apper.BoolValueB.\202A+/stp/interfaces/inte"
      "rface/config/bpdu-guard\022~\n\tedge_port\030\270\305\237"
      "\270\001 \001(\01628.openconfig.enums.OpenconfigSpan"
      "ningTreeTypesSTPEDGEPORTB-\202A*/stp/interf"
      "aces/interface/config/edge-port\022r\n\005guard"
      "\030\356\306\236\304\001 \001(\01624.openconfig.enums.Openconfig"
      "SpanningTreeStpGuardTypeB)\202A&/stp/interf"
      "aces/interface/config/guard\022y\n\tlink_type"
      "\030\320\200\263\266\001 \001(\01623.openconfig.enums.Openconfig"
      "SpanningTreeStpLinkTypeB-\202A*/stp/interfa"
      "ces/interface/config/link-type\022P\n\004name\030\356"
      "\370\267& \001(\0132\025.ywrapper.StringValueB(\202A%/stp/"
      "interfaces/interface/config/name\032\374\004\n\005Sta"
      "te\022[\n\013bpdu_filter\030\336\277\2265 \001(\0132\023.ywrapper.Bo"
      "olValueB.\202A+/stp/interfaces/interface/st"
      "ate/bpdu-filter\022Y\n\nbpdu_guard\030\357\237\377Y \001(\0132\023"
      ".ywrapper.BoolValueB-\202A*/stp/interfaces/"
      "interface/state/bpdu-guard\022|\n\tedge_port\030"
      "\221\334\3516 \001(\01628.openconfig.enums.OpenconfigSp"
      "anningTreeTypesSTPEDGEPORTB,\202A)/stp/inte"
      "rfaces/interface/state/edge-port\022q\n\005guar"
      "d\030\267\362\223\313\001 \001(\01624.openconfig.enums.Openconfi"
      "gSpanningTreeStpGuardTypeB(\202A%/stp/inter"
      "faces/interface/state/guard\022x\n\tlink_type"
      "\030\265\215\232\270\001 \001(\01623.openconfig.enums.Openconfig"
      "SpanningTreeStpLinkTypeB,\202A)/stp/interfa"
      "ces/interface/state/link-type\022P\n\004name\030\341\372"
      "\331\263\001 \001(\0132\025.ywrapper.StringValueB\'\202A$/stp/"
      "interfaces/interface/state/name\032\221\001\n\014Inte"
      "rfaceKey\022/\n\004name\030\001 \001(\tB!\202A\036/stp/interfac"
      "es/interface/name\022P\n\tinterface\030\002 \001(\0132=.o"
      "penconfig.openconfig_spanning_tree.Stp.I"
      "nterfaces.Interface\032\310;\n\004Mstp\022]\n\006config\030\270"
      "\204\337\254\001 \001(\01324.openconfig.openconfig_spannin"
      "g_tree.Stp.Mstp.ConfigB\023\202A\020/stp/mstp/con"
      "fig\022p\n\rmst_instances\030\265\244\333\" \001(\0132:.openconf"
      "ig.openconfig_spanning_tree.Stp.Mstp.Mst"
      "InstancesB\032\202A\027/stp/mstp/mst-instances\022Z\n"
      "\005state\030\321\242\373\307\001 \001(\01323.openconfig.openconfig"
      "_spanning_tree.Stp.Mstp.StateB\022\202A\017/stp/m"
      "stp/state\032\220\004\n\006Config\022V\n\020forwarding_delay"
      "\030\254\255\335\010 \001(\0132\023.ywrapper.UintValueB$\202A!/stp/"
      "mstp/config/forwarding-delay\022J\n\nhello_ti"
      "me\030\241\373\320J \001(\0132\023.ywrapper.UintValueB\036\202A\033/st"
      "p/mstp/config/hello-time\022K\n\nhold_count\030\262"
      "\231\333\257\001 \001(\0132\023.ywrapper.UintValueB\036\202A\033/stp/m"
      "stp/config/hold-count\022D\n\007max_age\030\205\210\377J \001("
      "\0132\023.ywrapper.UintValueB\033\202A\030/stp/mstp/con"
      "fig/max-age\022E\n\007max_hop\030\371\372\250\212\001 \001(\0132\023.ywrap"
      "per.UintValueB\033\202A\030/stp/mstp/config/max-h"
      "op\022@\n\004name\030\202\330\226b \001(\0132\025.ywrapper.StringVal"
      "ueB\030\202A\025/stp/mstp/config/name\022F\n\010revision"
      "\030\310\200\222H \001(\0132\023.ywrapper.UintValueB\034\202A\031/stp/"
      "mstp/config/revision\032\3610\n\014MstInstances\022\214\001"
      "\n\014mst_instance\030\224\273\223\355\001 \003(\0132I.openconfig.op"
      "enconfig_spanning_tree.Stp.Mstp.MstInsta"
      "nces.MstInstanceKeyB\'\202A$/stp/mstp/mst-in"
      "stances/mst-instance\032\240.\n\013MstInstance\022\221\001\n"
      "\006config\030\231\220\267\341\001 \001(\0132M.openconfig.openconfi"
      "g_spanning_tree.Stp.Mstp.MstInstances.Ms"
      "tInstance.ConfigB.\202A+/stp/mstp/mst-insta"
      "nces/mst-instance/config\022\235\001\n\ninterfaces\030"
      "\367\264\235\352\001 \001(\0132Q.openconfig.openconfig_spanni"
      "ng_tree.Stp.Mstp.MstInstances.MstInstanc"
      "e.InterfacesB2\202A//stp/mstp/mst-instances"
      "/mst-instance/interfaces\022\216\001\n\005state\030\356\327\274\227\001"
      " \001(\0132L.openconfig.openconfig_spanning_tr"
      "ee.Stp.Mstp.MstInstances.MstInstance.Sta"
      "teB-\202A*/stp/mstp/mst-instances/mst-insta"
      "nce/state\032\267\003\n\006Config\022o\n\017bridge_priority\030"
      "\254\323\315G \001(\0132\023.ywrapper.UintValueB>\202A;/stp/m"
      "stp/mst-instances/mst-instance/config/br"
      "idge-priority\022]\n\006mst_id\030\212\212\251\037 \001(\0132\023.ywrap"
      "per.UintValueB5\202A2/stp/mstp/mst-instance"
      "s/mst-instance/config/mst-id\022\236\001\n\004vlan\030\233\232"
      "\365\366\001 \003(\0132W.openconfig.openconfig_spanning"
      "_tree.Stp.Mstp.MstInstances.MstInstance."
      "Config.VlanUnionB3\202A0/stp/mstp/mst-insta"
      "nces/mst-instance/config/vlan\032<\n\tVlanUni"
      "on\022\026\n\013vlan_string\030\341\313\3775 \001(\t\022\027\n\013vlan_uint6"
      "4\030\204\350\205\253\001 \001(\004\032\271\034\n\nInterfaces\022\262\001\n\tinterface"
      "\030\207\352\313\' \003(\0132^.openconfig.openconfig_spanni"
      "ng_tree.Stp.Mstp.MstInstances.MstInstanc"
      "e.Interfaces.InterfaceKeyB<\202A9/stp/mstp/"
      "mst-instances/mst-instance/interfaces/in"
      "terface\032\243\031\n\tInterface\022\273\001\n\006config\030\230\204\203\356\001 \001"
      "(\0132b.openconfig.openconfig_spanning_tree"
      ".Stp.Mstp.MstInstances.MstInstance.Inter"
      "faces.Interface.ConfigBC\202A@/stp/mstp/mst"
      "-instances/mst-instance/interfaces/inter"
      "face/config\022\267\001\n\005state\030\261\335\266@ \001(\0132a.opencon"
      "fig.openconfig_spanning_tree.Stp.Mstp.Ms"
      "tInstances.MstInstance.Interfaces.Interf"
      "ace.StateBB\202A\?/stp/mstp/mst-instances/ms"
      "t-instance/interfaces/interface/state\032\355\002"
      "\n\006Config\022n\n\004cost\030\210\231\315n \001(\0132\023.ywrapper.Uin"
      "tValueBH\202AE/stp/mstp/mst-instances/mst-i"
      "nstance/interfaces/interface/config/cost"
      "\022p\n\004name\030\342\237\330\006 \001(\0132\025.ywrapper.StringValue"
      "BH\202AE/stp/mstp/mst-instances/mst-instanc"
      "e/interfaces/interface/config/name\022\200\001\n\rp"
      "ort_priority\030\327\256\374B \001(\0132\023.ywrapper.UintVal"
      "ueBQ\202AN/stp/mstp/mst-instances/mst-insta"
      "nce/interfaces/interface/config/port-pri"
      "ority\032\255\023\n\005State\022m\n\004cost\030\243\262\235L \001(\0132\023.ywrap"
      "per.UintValueBG\202AD/stp/mstp/mst-instance"
      "s/mst-instance/interfaces/interface/stat"
      "e/cost\022\315\001\n\010counters\030\253\275\375\367\001 \001(\0132j.openconf"
      "ig.openconfig_spanning_tree.Stp.Mstp.Mst"
      "Instances.MstInstance.Interfaces.Interfa"
      "ce.State.CountersBK\202AH/stp/mstp/mst-inst"
      "ances/mst-instance/interfaces/interface/"
      "state/counters\022\231\001\n\031designated_bridge_add"
      "ress\030\253\314\330S \001(\0132\025.ywrapper.StringValueB\\\202A"
      "Y/stp/mstp/mst-instances/mst-instance/in"
      "terfaces/interface/state/designated-brid"
      "ge-address\022\232\001\n\032designated_bridge_priorit"
      "y\030\211\331\377\303\001 \001(\0132\023.ywrapper.UintValueB]\202AZ/st"
      "p/mstp/mst-instances/mst-instance/interf"
      "aces/interface/state/designated-bridge-p"
      "riority\022\203\001\n\017designated_cost\030\324\307\330\013 \001(\0132\023.y"
      "wrapper.UintValueBR\202AO/stp/mstp/mst-inst"
      "ances/mst-instance/interfaces/interface/"
      "state/designated-cost\022\214\001\n\023designated_por"
      "t_num\030\341\243\344\221\001 \001(\0132\023.ywrapper.UintValueBV\202A"
      "S/stp/mstp/mst-instances/mst-instance/in"
      "terfaces/interface/state/designated-port"
      "-num\022\225\001\n\030designated_port_priority\030\363\263\246I \001"
      "(\0132\023.ywrapper.UintValueB[\202AX/stp/mstp/ms"
      "t-instances/mst-instance/interfaces/inte"
      "rface/state/designated-port-priority\022\225\001\n"
      "\027designated_root_address\030\314\337\241j \001(\0132\025.ywra"
      "pper.StringValueBZ\202AW/stp/mstp/mst-insta"
      "nces/mst-instance/interfaces/interface/s"
      "tate/designated-root-address\022\225\001\n\030designa"
      "ted_root_priority\030\204\254\333^ \001(\0132\023.ywrapper.Ui"
      "ntValueB[\202AX/stp/mstp/mst-instances/mst-"
      "instance/interfaces/interface/state/desi"
      "gnated-root-priority\022\220\001\n\025forward_transis"
      "itions\030\350\360\214\253\001 \001(\0132\023.ywrapper.UintValueBX\202"
      "AU/stp/mstp/mst-instances/mst-instance/i"
      "nterfaces/interface/state/forward-transi"
      "sitions\022p\n\004name\030\305\376\316\214\001 \001(\0132\025.ywrapper.Str"
      "ingValueBG\202AD/stp/mstp/mst-instances/mst"
      "-instance/interfaces/interface/state/nam"
      "e\022v\n\010port_num\030\272\345\325\347\001 \001(\0132\023.ywrapper.UintV"
      "alueBK\202AH/stp/mstp/mst-instances/mst-ins"
      "tance/interfaces/interface/state/port-nu"
      "m\022\177\n\rport_priority\030\216\231\312\017 \001(\0132\023.ywrapper.U"
      "intValueBP\202AM/stp/mstp/mst-instances/mst"
      "-instance/interfaces/interface/state/por"
      "t-priority\022\237\001\n\nport_state\030\371\351\370x \001(\01629.ope"
      "nconfig.enums.OpenconfigSpanningTreeType"
      "sSTPPORTSTATEBM\202AJ/stp/mstp/mst-instance"
      "s/mst-instance/interfaces/interface/stat"
      "e/port-state\022\223\001\n\004role\030\244\311\362\213\001 \001(\01628.openco"
      "nfig.enums.OpenconfigSpanningTreeTypesST"
      "PPORTROLEBG\202AD/stp/mstp/mst-instances/ms"
      "t-instance/interfaces/interface/state/ro"
      "le\032\230\002\n\010Counters\022\210\001\n\rbpdu_received\030\273\230\253\036 \001"
      "(\0132\023.ywrapper.UintValueBY\202AV/stp/mstp/ms"
      "t-instances/mst-instance/interfaces/inte"
      "rface/state/counters/bpdu-received\022\200\001\n\tb"
      "pdu_sent\030\250\241\311X \001(\0132\023.ywrapper.UintValueBU"
      "\202AR/stp/mstp/mst-instances/mst-instance/"
      "interfaces/interface/state/counters/bpdu"
      "-sent\032\317\001\n\014InterfaceKey\022O\n\004name\030\001 \001(\tBA\202A"
      ">/stp/mstp/mst-instances/mst-instance/in"
      "terfaces/interface/name\022n\n\tinterface\030\002 \001"
      "(\0132[.openconfig.openconfig_spanning_tree"
      ".Stp.Mstp.MstInstances.MstInstance.Inter"
      "faces.Interface\032\325\n\n\005State\022o\n\016bridge_addr"
      "ess\030\335\353\206\370\001 \001(\0132\025.ywrapper.StringValueB<\202A"
      "9/stp/mstp/mst-instances/mst-instance/st"
      "ate/bridge-address\022o\n\017bridge_priority\030\357\305"
      "\241\250\001 \001(\0132\023.ywrapper.UintValueB=\202A:/stp/ms"
      "tp/mst-instances/mst-instance/state/brid"
      "ge-priority\022\200\001\n\027designated_root_address\030"
      "\363\200\323\033 \001(\0132\025.ywrapper.StringValueBE\202AB/stp"
      "/mstp/mst-instances/mst-instance/state/d"
      "esignated-root-address\022\201\001\n\030designated_ro"
      "ot_priority\030\201\301\311\247\001 \001(\0132\023.ywrapper.UintVal"
      "ueBF\202AC/stp/mstp/mst-instances/mst-insta"
      "nce/state/designated-root-priority\022c\n\tho"
      "ld_time\030\230\354\377\227\001 \001(\0132\023.ywrapper.UintValueB7"
      "\202A4/stp/mstp/mst-instances/mst-instance/"
      "state/hold-time\022]\n\006mst_id\030\343\307\357\302\001 \001(\0132\023.yw"
      "rapper.UintValueB4\202A1/stp/mstp/mst-insta"
      "nces/mst-instance/state/mst-id\022c\n\troot_c"
      "ost\030\371\276\273\221\001 \001(\0132\023.ywrapper.UintValueB7\202A4/"
      "stp/mstp/mst-instances/mst-instance/stat"
      "e/root-cost\022c\n\troot_port\030\247\305\273\275\001 \001(\0132\023.ywr"
      "apper.UintValueB7\202A4/stp/mstp/mst-instan"
      "ces/mst-instance/state/root-port\022\205\001\n\032tim"
      "e_since_topology_change\030\214\271\325\321\001 \001(\0132\023.ywra"
      "pper.UintValueBH\202AE/stp/mstp/mst-instanc"
      "es/mst-instance/state/time-since-topolog"
      "y-change\022q\n\020topology_changes\030\352\305\205\230\001 \001(\0132\023"
      ".ywrapper.UintValueB>\202A;/stp/mstp/mst-in"
      "stances/mst-instance/state/topology-chan"
      "ges\022\233\001\n\004vlan\030\342\357\322S \003(\0132V.openconfig.openc"
      "onfig_spanning_tree.Stp.Mstp.MstInstance"
      "s.MstInstance.State.VlanUnionB2\202A//stp/m"
      "stp/mst-instances/mst-instance/state/vla"
      "n\032<\n\tVlanUnion\022\026\n\013vlan_string\030\212\327\302\014 \001(\t\022\027"
      "\n\013vlan_uint64\030\213\254\236\301\001 \001(\004\032\256\001\n\016MstInstanceK"
      "ey\022>\n\006mst_id\030\001 \001(\004B.\202A+/stp/mstp/mst-ins"
      "tances/mst-instance/mst-id\022\\\n\014mst_instan"
      "ce\030\002 \001(\0132F.openconfig.openconfig_spannin"
      "g_tree.Stp.Mstp.MstInstances.MstInstance"
      "\032\213\004\n\005State\022V\n\020forwarding_delay\030\333\247\272\364\001 \001(\013"
      "2\023.ywrapper.UintValueB#\202A /stp/mstp/stat"
      "e/forwarding-delay\022J\n\nhello_time\030\306\364\304\367\001 \001"
      "(\0132\023.ywrapper.UintValueB\035\202A\032/stp/mstp/st"
      "ate/hello-time\022I\n\nhold_count\030\321\277\2064 \001(\0132\023."
      "ywrapper.UintValueB\035\202A\032/stp/mstp/state/h"
      "old-count\022D\n\007max_age\030\334\315\320\366\001 \001(\0132\023.ywrappe"
      "r.UintValueB\032\202A\027/stp/mstp/state/max-age\022"
      "C\n\007max_hop\030\340\271\2146 \001(\0132\023.ywrapper.UintValue"
      "B\032\202A\027/stp/mstp/state/max-hop\022@\n\004name\030\345\204\326"
      "\254\001 \001(\0132\025.ywrapper.StringValueB\027\202A\024/stp/m"
      "stp/state/name\022F\n\010revision\030\363\214\243\313\001 \001(\0132\023.y"
      "wrapper.UintValueB\033\202A\030/stp/mstp/state/re"
      "vision\032\243,\n\tRapidPvst\022e\n\004vlan\030\255\225\303\355\001 \003(\0132:"
      ".openconfig.openconfig_spanning_tree.Stp"
      ".RapidPvst.VlanKeyB\027\202A\024/stp/rapid-pvst/v"
      "lan\032\251*\n\004Vlan\022q\n\006config\030\302\303\246E \001(\0132>.openco"
      "nfig.openconfig_spanning_tree.Stp.RapidP"
      "vst.Vlan.ConfigB\036\202A\033/stp/rapid-pvst/vlan"
      "/config\022~\n\ninterfaces\030\250\343\273\221\001 \001(\0132B.openco"
      "nfig.openconfig_spanning_tree.Stp.RapidP"
      "vst.Vlan.InterfacesB\"\202A\037/stp/rapid-pvst/"
      "vlan/interfaces\022o\n\005state\030\377\246\251\310\001 \001(\0132=.ope"
      "nconfig.openconfig_spanning_tree.Stp.Rap"
      "idPvst.Vlan.StateB\035\202A\032/stp/rapid-pvst/vl"
      "an/state\032\236\004\n\006Config\022_\n\017bridge_priority\030\353"
      "\376\213% \001(\0132\023.ywrapper.UintValueB.\202A+/stp/ra"
      "pid-pvst/vlan/config/bridge-priority\022a\n\020"
      "forwarding_delay\030\372\314\372! \001(\0132\023.ywrapper.Uin"
      "tValueB/\202A,/stp/rapid-pvst/vlan/config/f"
      "orwarding-delay\022V\n\nhello_time\030\317\231\242\305\001 \001(\0132"
      "\023.ywrapper.UintValueB)\202A&/stp/rapid-pvst"
      "/vlan/config/hello-time\022U\n\nhold_count\030\374\222"
      "\200v \001(\0132\023.ywrapper.UintValueB)\202A&/stp/rap"
      "id-pvst/vlan/config/hold-count\022O\n\007max_ag"
      "e\030\247\336\346t \001(\0132\023.ywrapper.UintValueB&\202A#/stp"
      "/rapid-pvst/vlan/config/max-age\022P\n\007vlan_"
      "id\030\320\312\254\364\001 \001(\0132\023.ywrapper.UintValueB&\202A#/s"
      "tp/rapid-pvst/vlan/config/vlan-id\032\346\030\n\nIn"
      "terfaces\022\224\001\n\tinterface\030\300\261\255\330\001 \003(\0132O.openc"
      "onfig.openconfig_spanning_tree.Stp.Rapid"
      "Pvst.Vlan.Interfaces.InterfaceKeyB,\202A)/s"
      "tp/rapid-pvst/vlan/interfaces/interface\032"
      "\215\026\n\tInterface\022\233\001\n\006config\030\265\261\2117 \001(\0132S.open"
      "config.openconfig_spanning_tree.Stp.Rapi"
      "dPvst.Vlan.Interfaces.Interface.ConfigB3"
      "\202A0/stp/rapid-pvst/vlan/interfaces/inter"
      "face/config\022\230\001\n\005state\030\252\367\304a \001(\0132R.opencon"
      "fig.openconfig_spanning_tree.Stp.RapidPv"
      "st.Vlan.Interfaces.Interface.StateB2\202A//"
      "stp/rapid-pvst/vlan/interfaces/interface"
      "/state\032\274\002\n\006Config\022^\n\004cost\030\327\375\3545 \001(\0132\023.ywr"
      "apper.UintValueB8\202A5/stp/rapid-pvst/vlan"
      "/interfaces/interface/config/cost\022`\n\004nam"
      "e\030\221\216\314f \001(\0132\025.ywrapper.StringValueB8\202A5/s"
      "tp/rapid-pvst/vlan/interfaces/interface/"
      "config/name\022p\n\rport_priority\030\322\332\341k \001(\0132\023."
      "ywrapper.UintValueBA\202A>/stp/rapid-pvst/v"
      "lan/interfaces/interface/config/port-pri"
      "ority\032\207\021\n\005State\022^\n\004cost\030\376\215\313\271\001 \001(\0132\023.ywra"
      "pper.UintValueB7\202A4/stp/rapid-pvst/vlan/"
      "interfaces/interface/state/cost\022\255\001\n\010coun"
      "ters\030\206\242\303{ \001(\0132[.openconfig.openconfig_sp"
      "anning_tree.Stp.RapidPvst.Vlan.Interface"
      "s.Interface.State.CountersB;\202A8/stp/rapi"
      "d-pvst/vlan/interfaces/interface/state/c"
      "ounters\022\212\001\n\031designated_bridge_address\030\310\231"
      "\377\207\001 \001(\0132\025.ywrapper.StringValueBL\202AI/stp/"
      "rapid-pvst/vlan/interfaces/interface/sta"
      "te/designated-bridge-address\022\212\001\n\032designa"
      "ted_bridge_priority\030\300\262\260\350\001 \001(\0132\023.ywrapper"
      ".UintValueBM\202AJ/stp/rapid-pvst/vlan/inte"
      "rfaces/interface/state/designated-bridge"
      "-priority\022s\n\017designated_cost\030\307\201\342a \001(\0132\023."
      "ywrapper.UintValueBB\202A\?/stp/rapid-pvst/v"
      "lan/interfaces/interface/state/designate"
      "d-cost\022{\n\023designated_port_num\030\336\353\203L \001(\0132\023"
      ".ywrapper.UintValueBF\202AC/stp/rapid-pvst/"
      "vlan/interfaces/interface/state/designat"
      "ed-port-num\022\205\001\n\030designated_port_priority"
      "\030\342\315\215\016 \001(\0132\023.ywrapper.UintValueBK\202AH/stp/"
      "rapid-pvst/vlan/interfaces/interface/sta"
      "te/designated-port-priority\022\205\001\n\027designat"
      "ed_root_address\030\357\234\224C \001(\0132\025.ywrapper.Stri"
      "ngValueBJ\202AG/stp/rapid-pvst/vlan/interfa"
      "ces/interface/state/designated-root-addr"
      "ess\022\205\001\n\030designated_root_priority\030\235\355\307\022 \001("
      "\0132\023.ywrapper.UintValueBK\202AH/stp/rapid-pv"
      "st/vlan/interfaces/interface/state/desig"
      "nated-root-priority\022\177\n\025forward_transisit"
      "ions\030\347\332\300w \001(\0132\023.ywrapper.UintValueBH\202AE/"
      "stp/rapid-pvst/vlan/interfaces/interface"
      "/state/forward-transisitions\022_\n\004name\030\370\202\204"
      "+ \001(\0132\025.ywrapper.StringValueB7\202A4/stp/ra"
      "pid-pvst/vlan/interfaces/interface/state"
      "/name\022e\n\010port_num\030\313\233\266{ \001(\0132\023.ywrapper.Ui"
      "ntValueB;\202A8/stp/rapid-pvst/vlan/interfa"
      "ces/interface/state/port-num\022o\n\rport_pri"
      "ority\030\251\215\235] \001(\0132\023.ywrapper.UintValueB@\202A="
      "/stp/rapid-pvst/vlan/interfaces/interfac"
      "e/state/port-priority\022\220\001\n\nport_state\030\274\375\236"
      "\255\001 \001(\01629.openconfig.enums.OpenconfigSpan"
      "ningTreeTypesSTPPORTSTATEB=\202A:/stp/rapid"
      "-pvst/vlan/interfaces/interface/state/po"
      "rt-state\022\203\001\n\004role\030\335\241\321\245\001 \001(\01628.openconfig"
      ".enums.OpenconfigSpanningTreeTypesSTPPOR"
      "TROLEB7\202A4/stp/rapid-pvst/vlan/interface"
      "s/interface/state/role\032\366\001\n\010Counters\022x\n\rb"
      "pdu_received\030\306\315\211; \001(\0132\023.ywrapper.UintVal"
      "ueBI\202AF/stp/rapid-pvst/vlan/interfaces/i"
      "nterface/state/counters/bpdu-received\022p\n"
      "\tbpdu_sent\030\345\235\346\006 \001(\0132\023.ywrapper.UintValue"
      "BE\202AB/stp/rapid-pvst/vlan/interfaces/int"
      "erface/state/counters/bpdu-sent\032\260\001\n\014Inte"
      "rfaceKey\022\?\n\004name\030\001 \001(\tB1\202A./stp/rapid-pv"
      "st/vlan/interfaces/interface/name\022_\n\tint"
      "erface\030\002 \001(\0132L.openconfig.openconfig_spa"
      "nning_tree.Stp.RapidPvst.Vlan.Interfaces"
      ".Interface\032\262\n\n\005State\022_\n\016bridge_address\030\332"
      "\216\372\330\001 \001(\0132\025.ywrapper.StringValueB,\202A)/stp"
      "/rapid-pvst/vlan/state/bridge-address\022^\n"
      "\017bridge_priority\030\316\353\274T \001(\0132\023.ywrapper.Uin"
      "tValueB-\202A*/stp/rapid-pvst/vlan/state/br"
      "idge-priority\022p\n\027designated_root_address"
      "\030\342\253\255. \001(\0132\025.ywrapper.StringValueB5\202A2/st"
      "p/rapid-pvst/vlan/state/designated-root-"
      "address\022p\n\030designated_root_priority\030\346\276\320j"
      " \001(\0132\023.ywrapper.UintValueB6\202A3/stp/rapid"
      "-pvst/vlan/state/designated-root-priorit"
      "y\022`\n\020forwarding_delay\030\265\364\345[ \001(\0132\023.ywrappe"
      "r.UintValueB.\202A+/stp/rapid-pvst/vlan/sta"
      "te/forwarding-delay\022U\n\nhello_time\030\210\350\321\236\001 "
      "\001(\0132\023.ywrapper.UintValueB(\202A%/stp/rapid-"
      "pvst/vlan/state/hello-time\022T\n\nhold_count"
      "\030\377\266\363\037 \001(\0132\023.ywrapper.UintValueB(\202A%/stp/"
      "rapid-pvst/vlan/state/hold-count\022R\n\thold"
      "_time\030\235\332\367, \001(\0132\023.ywrapper.UintValueB\'\202A$"
      "/stp/rapid-pvst/vlan/state/hold-time\022O\n\007"
      "max_age\030\322\336\302\204\001 \001(\0132\023.ywrapper.UintValueB%"
      "\202A\"/stp/rapid-pvst/vlan/state/max-age\022S\n"
      "\troot_cost\030\360\311\375\264\001 \001(\0132\023.ywrapper.UintValu"
      "eB\'\202A$/stp/rapid-pvst/vlan/state/root-co"
      "st\022R\n\troot_port\030\312\207\314t \001(\0132\023.ywrapper.Uint"
      "ValueB\'\202A$/stp/rapid-pvst/vlan/state/roo"
      "t-port\022t\n\032time_since_topology_change\030\273\261\275"
      "A \001(\0132\023.ywrapper.UintValueB8\202A5/stp/rapi"
      "d-pvst/vlan/state/time-since-topology-ch"
      "ange\022a\n\020topology_changes\030\365\253\311\306\001 \001(\0132\023.ywr"
      "apper.UintValueB.\202A+/stp/rapid-pvst/vlan"
      "/state/topology-changes\022N\n\007vlan_id\030\355\371\232O "
      "\001(\0132\023.ywrapper.UintValueB%\202A\"/stp/rapid-"
      "pvst/vlan/state/vlan-id\032\202\001\n\007VlanKey\0220\n\007v"
      "lan_id\030\001 \001(\004B\037\202A\034/stp/rapid-pvst/vlan/vl"
      "an-id\022E\n\004vlan\030\002 \001(\01327.openconfig.opencon"
      "fig_spanning_tree.Stp.RapidPvst.Vlan\032\314$\n"
      "\004Rstp\022]\n\006config\030\373\321\346\311\001 \001(\01324.openconfig.o"
      "penconfig_spanning_tree.Stp.Rstp.ConfigB"
      "\023\202A\020/stp/rstp/config\022h\n\ninterfaces\030\241\223\360o "
      "\001(\01328.openconfig.openconfig_spanning_tre"
      "e.Stp.Rstp.InterfacesB\027\202A\024/stp/rstp/inte"
      "rfaces\022Z\n\005state\030\374\250\373\211\001 \001(\01323.openconfig.o"
      "penconfig_spanning_tree.Stp.Rstp.StateB\022"
      "\202A\017/stp/rstp/state\032\226\003\n\006Config\022T\n\017bridge_"
      "priority\030\342\241\312] \001(\0132\023.ywrapper.UintValueB#"
      "\202A /stp/rstp/config/bridge-priority\022W\n\020f"
      "orwarding_delay\030\221\252\276\340\001 \001(\0132\023.ywrapper.Uin"
      "tValueB$\202A!/stp/rstp/config/forwarding-d"
      "elay\022J\n\nhello_time\030\224\343\253* \001(\0132\023.ywrapper.U"
      "intValueB\036\202A\033/stp/rstp/config/hello-time"
      "\022K\n\nhold_count\030\253\304\300\301\001 \001(\0132\023.ywrapper.Uint"
      "ValueB\036\202A\033/stp/rstp/config/hold-count\022D\n"
      "\007max_age\030\366\251\341\034 \001(\0132\023.ywrapper.UintValueB\033"
      "\202A\030/stp/rstp/config/max-age\032\256\026\n\nInterfac"
      "es\022\177\n\tinterface\030\275\202\257\251\001 \003(\0132E.openconfig.o"
      "penconfig_spanning_tree.Stp.Rstp.Interfa"
      "ces.InterfaceKeyB!\202A\036/stp/rstp/interface"
      "s/interface\032\200\024\n\tInterface\022\207\001\n\006config\030\362\232\334"
      "\310\001 \001(\0132I.openconfig.openconfig_spanning_"
      "tree.Stp.Rstp.Interfaces.Interface.Confi"
      "gB(\202A%/stp/rstp/interfaces/interface/con"
      "fig\022\204\001\n\005state\030\357\232\202\335\001 \001(\0132H.openconfig.ope"
      "nconfig_spanning_tree.Stp.Rstp.Interface"
      "s.Interface.StateB\'\202A$/stp/rstp/interfac"
      "es/interface/state\032\235\002\n\006Config\022S\n\004cost\030\266\322"
      "\220\014 \001(\0132\023.ywrapper.UintValueB-\202A*/stp/rst"
      "p/interfaces/interface/config/cost\022V\n\004na"
      "me\030\200\265\261\220\001 \001(\0132\025.ywrapper.StringValueB-\202A*"
      "/stp/rstp/interfaces/interface/config/na"
      "me\022f\n\rport_priority\030\201\237\305\303\001 \001(\0132\023.ywrapper"
      ".UintValueB6\202A3/stp/rstp/interfaces/inte"
      "rface/config/port-priority\032\301\017\n\005State\022S\n\004"
      "cost\030\375\343\301\245\001 \001(\0132\023.ywrapper.UintValueB,\202A)"
      "/stp/rstp/interfaces/interface/state/cos"
      "t\022\231\001\n\010counters\030\205\255\373\227\001 \001(\0132Q.openconfig.op"
      "enconfig_spanning_tree.Stp.Rstp.Interfac"
      "es.Interface.State.CountersB0\202A-/stp/rst"
      "p/interfaces/interface/state/counters\022~\n"
      "\031designated_bridge_address\030\251\260\374\r \001(\0132\025.yw"
      "rapper.StringValueBA\202A>/stp/rstp/interfa"
      "ces/interface/state/designated-bridge-ad"
      "dress\022\177\n\032designated_bridge_priority\030\313\323\236\231"
      "\001 \001(\0132\023.ywrapper.UintValueBB\202A\?/stp/rstp"
      "/interfaces/interface/state/designated-b"
      "ridge-priority\022h\n\017designated_cost\030\206\364\301u \001"
      "(\0132\023.ywrapper.UintValueB7\202A4/stp/rstp/in"
      "terfaces/interface/state/designated-cost"
      "\022q\n\023designated_port_num\030\343\247\345\234\001 \001(\0132\023.ywra"
      "pper.UintValueB;\202A8/stp/rstp/interfaces/"
      "interface/state/designated-port-num\022{\n\030d"
      "esignated_port_priority\030\261\375\305\365\001 \001(\0132\023.ywra"
      "pper.UintValueB@\202A=/stp/rstp/interfaces/"
      "interface/state/designated-port-priority"
      "\022z\n\027designated_root_address\030\362\204\304\022 \001(\0132\025.y"
      "wrapper.StringValueB\?\202A</stp/rstp/interf"
      "aces/interface/state/designated-root-add"
      "ress\022{\n\030designated_root_priority\030\326\301\353\242\001 \001"
      "(\0132\023.ywrapper.UintValueB@\202A=/stp/rstp/in"
      "terfaces/interface/state/designated-root"
      "-priority\022t\n\025forward_transisitions\030\312\327\245r "
      "\001(\0132\023.ywrapper.UintValueB=\202A:/stp/rstp/i"
      "nterfaces/interface/state/forward-transi"
      "sitions\022U\n\004name\030\227\244\240\326\001 \001(\0132\025.ywrapper.Str"
      "ingValueB,\202A)/stp/rstp/interfaces/interf"
      "ace/state/name\022Z\n\010port_num\030\334\376\377k \001(\0132\023.yw"
      "rapper.UintValueB0\202A-/stp/rstp/interface"
      "s/interface/state/port-num\022d\n\rport_prior"
      "ity\030\204\314\3118 \001(\0132\023.ywrapper.UintValueB5\202A2/s"
      "tp/rstp/interfaces/interface/state/port-"
      "priority\022\204\001\n\nport_state\030\343\244\233/ \001(\01629.openc"
      "onfig.enums.OpenconfigSpanningTreeTypesS"
      "TPPORTSTATEB2\202A//stp/rstp/interfaces/int"
      "erface/state/port-state\022x\n\004role\030\352\224\245\255\001 \001("
      "\01628.openconfig.enums.OpenconfigSpanningT"
      "reeTypesSTPPORTROLEB,\202A)/stp/rstp/interf"
      "aces/interface/state/role\032\342\001\n\010Counters\022n"
      "\n\rbpdu_received\030\341\221\204\242\001 \001(\0132\023.ywrapper.Uin"
      "tValueB>\202A;/stp/rstp/interfaces/interfac"
      "e/state/counters/bpdu-received\022f\n\tbpdu_s"
      "ent\030\362\270\277\307\001 \001(\0132\023.ywrapper.UintValueB:\202A7/"
      "stp/rstp/interfaces/interface/state/coun"
      "ters/bpdu-sent\032\233\001\n\014InterfaceKey\0224\n\004name\030"
      "\001 \001(\tB&\202A#/stp/rstp/interfaces/interface"
      "/name\022U\n\tinterface\030\002 \001(\0132B.openconfig.op"
      "enconfig_spanning_tree.Stp.Rstp.Interfac"
      "es.Interface\032\324\010\n\005State\022S\n\016bridge_address"
      "\030\343\356\345e \001(\0132\025.ywrapper.StringValueB!\202A\036/st"
      "p/rstp/state/bridge-address\022S\n\017bridge_pr"
      "iority\030\221\271\262\036 \001(\0132\023.ywrapper.UintValueB\"\202A"
      "\037/stp/rstp/state/bridge-priority\022e\n\027desi"
      "gnated_root_address\030\311\275\274\025 \001(\0132\025.ywrapper."
      "StringValueB*\202A\'/stp/rstp/state/designat"
      "ed-root-address\022f\n\030designated_root_prior"
      "ity\030\353\361\303\200\001 \001(\0132\023.ywrapper.UintValueB+\202A(/"
      "stp/rstp/state/designated-root-priority\022"
      "V\n\020forwarding_delay\030\340\272\213\270\001 \001(\0132\023.ywrapper"
      ".UintValueB#\202A /stp/rstp/state/forwardin"
      "g-delay\022J\n\nhello_time\030\305\256\225\352\001 \001(\0132\023.ywrapp"
      "er.UintValueB\035\202A\032/stp/rstp/state/hello-t"
      "ime\022I\n\nhold_count\030\346\337\274\010 \001(\0132\023.ywrapper.Ui"
      "ntValueB\035\202A\032/stp/rstp/state/hold-count\022H"
      "\n\thold_time\030\216\211\354\301\001 \001(\0132\023.ywrapper.UintVal"
      "ueB\034\202A\031/stp/rstp/state/hold-time\022C\n\007max_"
      "age\030\221\375\255& \001(\0132\023.ywrapper.UintValueB\032\202A\027/s"
      "tp/rstp/state/max-age\022H\n\troot_cost\030\253\227\232\354\001"
      " \001(\0132\023.ywrapper.UintValueB\034\202A\031/stp/rstp/"
      "state/root-cost\022H\n\troot_port\030\335\205\255\363\001 \001(\0132\023"
      ".ywrapper.UintValueB\034\202A\031/stp/rstp/state/"
      "root-port\022i\n\032time_since_topology_change\030"
      "\232\232\340p \001(\0132\023.ywrapper.UintValueB-\202A*/stp/r"
      "stp/state/time-since-topology-change\022U\n\020"
      "topology_changes\030\360\357\202\177 \001(\0132\023.ywrapper.Uin"
      "tValueB#\202A /stp/rstp/state/topology-chan"
      "gesb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 22091);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "openconfig/openconfig_spanning_tree/openconfig_spanning_tree.proto", &protobuf_RegisterTypes);
  ::protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::AddDescriptors();
  ::protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fyext_2fyext_2eproto::AddDescriptors();
  ::protobuf_openconfig_2fenums_2fenums_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto
namespace openconfig {
namespace openconfig_spanning_tree {

// ===================================================================

void Stp_Global_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_Global_Config_default_instance_._instance.get_mutable()->bpdu_filter_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Global_Config_default_instance_._instance.get_mutable()->bpdu_guard_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Global_Config_default_instance_._instance.get_mutable()->bpduguard_timeout_recovery_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Global_Config_default_instance_._instance.get_mutable()->bridge_assurance_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Global_Config_default_instance_._instance.get_mutable()->etherchannel_misconfig_guard_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Global_Config_default_instance_._instance.get_mutable()->loop_guard_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
}
void Stp_Global_Config::clear_bpdu_filter() {
  if (GetArenaNoVirtual() == NULL && bpdu_filter_ != NULL) {
    delete bpdu_filter_;
  }
  bpdu_filter_ = NULL;
}
void Stp_Global_Config::clear_bpdu_guard() {
  if (GetArenaNoVirtual() == NULL && bpdu_guard_ != NULL) {
    delete bpdu_guard_;
  }
  bpdu_guard_ = NULL;
}
void Stp_Global_Config::clear_bpduguard_timeout_recovery() {
  if (GetArenaNoVirtual() == NULL && bpduguard_timeout_recovery_ != NULL) {
    delete bpduguard_timeout_recovery_;
  }
  bpduguard_timeout_recovery_ = NULL;
}
void Stp_Global_Config::clear_bridge_assurance() {
  if (GetArenaNoVirtual() == NULL && bridge_assurance_ != NULL) {
    delete bridge_assurance_;
  }
  bridge_assurance_ = NULL;
}
void Stp_Global_Config::clear_etherchannel_misconfig_guard() {
  if (GetArenaNoVirtual() == NULL && etherchannel_misconfig_guard_ != NULL) {
    delete etherchannel_misconfig_guard_;
  }
  etherchannel_misconfig_guard_ = NULL;
}
void Stp_Global_Config::clear_loop_guard() {
  if (GetArenaNoVirtual() == NULL && loop_guard_ != NULL) {
    delete loop_guard_;
  }
  loop_guard_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Global_Config::kBpduFilterFieldNumber;
const int Stp_Global_Config::kBpduGuardFieldNumber;
const int Stp_Global_Config::kBpduguardTimeoutRecoveryFieldNumber;
const int Stp_Global_Config::kBridgeAssuranceFieldNumber;
const int Stp_Global_Config::kEnabledProtocolFieldNumber;
const int Stp_Global_Config::kEtherchannelMisconfigGuardFieldNumber;
const int Stp_Global_Config::kLoopGuardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Global_Config::Stp_Global_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Global_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Global.Config)
}
Stp_Global_Config::Stp_Global_Config(const Stp_Global_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      enabled_protocol_(from.enabled_protocol_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bpduguard_timeout_recovery()) {
    bpduguard_timeout_recovery_ = new ::ywrapper::UintValue(*from.bpduguard_timeout_recovery_);
  } else {
    bpduguard_timeout_recovery_ = NULL;
  }
  if (from.has_bridge_assurance()) {
    bridge_assurance_ = new ::ywrapper::BoolValue(*from.bridge_assurance_);
  } else {
    bridge_assurance_ = NULL;
  }
  if (from.has_loop_guard()) {
    loop_guard_ = new ::ywrapper::BoolValue(*from.loop_guard_);
  } else {
    loop_guard_ = NULL;
  }
  if (from.has_bpdu_filter()) {
    bpdu_filter_ = new ::ywrapper::BoolValue(*from.bpdu_filter_);
  } else {
    bpdu_filter_ = NULL;
  }
  if (from.has_etherchannel_misconfig_guard()) {
    etherchannel_misconfig_guard_ = new ::ywrapper::BoolValue(*from.etherchannel_misconfig_guard_);
  } else {
    etherchannel_misconfig_guard_ = NULL;
  }
  if (from.has_bpdu_guard()) {
    bpdu_guard_ = new ::ywrapper::BoolValue(*from.bpdu_guard_);
  } else {
    bpdu_guard_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Global.Config)
}

void Stp_Global_Config::SharedCtor() {
  ::memset(&bpduguard_timeout_recovery_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bpdu_guard_) -
      reinterpret_cast<char*>(&bpduguard_timeout_recovery_)) + sizeof(bpdu_guard_));
  _cached_size_ = 0;
}

Stp_Global_Config::~Stp_Global_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Global.Config)
  SharedDtor();
}

void Stp_Global_Config::SharedDtor() {
  if (this != internal_default_instance()) delete bpduguard_timeout_recovery_;
  if (this != internal_default_instance()) delete bridge_assurance_;
  if (this != internal_default_instance()) delete loop_guard_;
  if (this != internal_default_instance()) delete bpdu_filter_;
  if (this != internal_default_instance()) delete etherchannel_misconfig_guard_;
  if (this != internal_default_instance()) delete bpdu_guard_;
}

void Stp_Global_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Global_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Global_Config& Stp_Global_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Global_Config();
  return *internal_default_instance();
}

Stp_Global_Config* Stp_Global_Config::New(::google::protobuf::Arena* arena) const {
  Stp_Global_Config* n = new Stp_Global_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Global_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Global.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  enabled_protocol_.Clear();
  if (GetArenaNoVirtual() == NULL && bpduguard_timeout_recovery_ != NULL) {
    delete bpduguard_timeout_recovery_;
  }
  bpduguard_timeout_recovery_ = NULL;
  if (GetArenaNoVirtual() == NULL && bridge_assurance_ != NULL) {
    delete bridge_assurance_;
  }
  bridge_assurance_ = NULL;
  if (GetArenaNoVirtual() == NULL && loop_guard_ != NULL) {
    delete loop_guard_;
  }
  loop_guard_ = NULL;
  if (GetArenaNoVirtual() == NULL && bpdu_filter_ != NULL) {
    delete bpdu_filter_;
  }
  bpdu_filter_ = NULL;
  if (GetArenaNoVirtual() == NULL && etherchannel_misconfig_guard_ != NULL) {
    delete etherchannel_misconfig_guard_;
  }
  etherchannel_misconfig_guard_ = NULL;
  if (GetArenaNoVirtual() == NULL && bpdu_guard_ != NULL) {
    delete bpdu_guard_;
  }
  bpdu_guard_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_Global_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Global.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4154494418u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue bpduguard_timeout_recovery = 111769674 [(.yext.schemapath) = "/stp/global/config/bpduguard-timeout-recovery"];
      case 111769674: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 894157394 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bpduguard_timeout_recovery()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue bridge_assurance = 174560629 [(.yext.schemapath) = "/stp/global/config/bridge-assurance"];
      case 174560629: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 1396485034 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bridge_assurance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue loop_guard = 312794156 [(.yext.schemapath) = "/stp/global/config/loop-guard"];
      case 312794156: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 2502353250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_loop_guard()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue bpdu_filter = 418165716 [(.yext.schemapath) = "/stp/global/config/bpdu-filter"];
      case 418165716: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 3345325730 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bpdu_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue etherchannel_misconfig_guard = 442887371 [(.yext.schemapath) = "/stp/global/config/etherchannel-misconfig-guard"];
      case 442887371: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 3543098970 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_etherchannel_misconfig_guard()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue bpdu_guard = 444421033 [(.yext.schemapath) = "/stp/global/config/bpdu-guard"];
      case 444421033: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 3555368266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bpdu_guard()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openconfig.enums.OpenconfigSpanningTreeTypesSTPPROTOCOL enabled_protocol = 519311802 [(.yext.schemapath) = "/stp/global/config/enabled-protocol"];
      case 519311802: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 4154494418 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_enabled_protocol(static_cast< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPROTOCOL >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 4154494416 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_enabled_protocol(static_cast< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPROTOCOL >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Global.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Global.Config)
  return false;
#undef DO_
}

void Stp_Global_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Global.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue bpduguard_timeout_recovery = 111769674 [(.yext.schemapath) = "/stp/global/config/bpduguard-timeout-recovery"];
  if (this->has_bpduguard_timeout_recovery()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      111769674, *this->bpduguard_timeout_recovery_, output);
  }

  // .ywrapper.BoolValue bridge_assurance = 174560629 [(.yext.schemapath) = "/stp/global/config/bridge-assurance"];
  if (this->has_bridge_assurance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      174560629, *this->bridge_assurance_, output);
  }

  // .ywrapper.BoolValue loop_guard = 312794156 [(.yext.schemapath) = "/stp/global/config/loop-guard"];
  if (this->has_loop_guard()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      312794156, *this->loop_guard_, output);
  }

  // .ywrapper.BoolValue bpdu_filter = 418165716 [(.yext.schemapath) = "/stp/global/config/bpdu-filter"];
  if (this->has_bpdu_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      418165716, *this->bpdu_filter_, output);
  }

  // .ywrapper.BoolValue etherchannel_misconfig_guard = 442887371 [(.yext.schemapath) = "/stp/global/config/etherchannel-misconfig-guard"];
  if (this->has_etherchannel_misconfig_guard()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      442887371, *this->etherchannel_misconfig_guard_, output);
  }

  // .ywrapper.BoolValue bpdu_guard = 444421033 [(.yext.schemapath) = "/stp/global/config/bpdu-guard"];
  if (this->has_bpdu_guard()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      444421033, *this->bpdu_guard_, output);
  }

  // repeated .openconfig.enums.OpenconfigSpanningTreeTypesSTPPROTOCOL enabled_protocol = 519311802 [(.yext.schemapath) = "/stp/global/config/enabled-protocol"];
  if (this->enabled_protocol_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      519311802,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_enabled_protocol_cached_byte_size_));
  }
  for (int i = 0, n = this->enabled_protocol_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->enabled_protocol(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Global.Config)
}

::google::protobuf::uint8* Stp_Global_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Global.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue bpduguard_timeout_recovery = 111769674 [(.yext.schemapath) = "/stp/global/config/bpduguard-timeout-recovery"];
  if (this->has_bpduguard_timeout_recovery()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        111769674, *this->bpduguard_timeout_recovery_, deterministic, target);
  }

  // .ywrapper.BoolValue bridge_assurance = 174560629 [(.yext.schemapath) = "/stp/global/config/bridge-assurance"];
  if (this->has_bridge_assurance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        174560629, *this->bridge_assurance_, deterministic, target);
  }

  // .ywrapper.BoolValue loop_guard = 312794156 [(.yext.schemapath) = "/stp/global/config/loop-guard"];
  if (this->has_loop_guard()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        312794156, *this->loop_guard_, deterministic, target);
  }

  // .ywrapper.BoolValue bpdu_filter = 418165716 [(.yext.schemapath) = "/stp/global/config/bpdu-filter"];
  if (this->has_bpdu_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        418165716, *this->bpdu_filter_, deterministic, target);
  }

  // .ywrapper.BoolValue etherchannel_misconfig_guard = 442887371 [(.yext.schemapath) = "/stp/global/config/etherchannel-misconfig-guard"];
  if (this->has_etherchannel_misconfig_guard()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        442887371, *this->etherchannel_misconfig_guard_, deterministic, target);
  }

  // .ywrapper.BoolValue bpdu_guard = 444421033 [(.yext.schemapath) = "/stp/global/config/bpdu-guard"];
  if (this->has_bpdu_guard()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        444421033, *this->bpdu_guard_, deterministic, target);
  }

  // repeated .openconfig.enums.OpenconfigSpanningTreeTypesSTPPROTOCOL enabled_protocol = 519311802 [(.yext.schemapath) = "/stp/global/config/enabled-protocol"];
  if (this->enabled_protocol_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      519311802,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _enabled_protocol_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->enabled_protocol_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Global.Config)
  return target;
}

size_t Stp_Global_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Global.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.enums.OpenconfigSpanningTreeTypesSTPPROTOCOL enabled_protocol = 519311802 [(.yext.schemapath) = "/stp/global/config/enabled-protocol"];
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->enabled_protocol_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->enabled_protocol(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _enabled_protocol_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .ywrapper.UintValue bpduguard_timeout_recovery = 111769674 [(.yext.schemapath) = "/stp/global/config/bpduguard-timeout-recovery"];
  if (this->has_bpduguard_timeout_recovery()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bpduguard_timeout_recovery_);
  }

  // .ywrapper.BoolValue bridge_assurance = 174560629 [(.yext.schemapath) = "/stp/global/config/bridge-assurance"];
  if (this->has_bridge_assurance()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bridge_assurance_);
  }

  // .ywrapper.BoolValue loop_guard = 312794156 [(.yext.schemapath) = "/stp/global/config/loop-guard"];
  if (this->has_loop_guard()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->loop_guard_);
  }

  // .ywrapper.BoolValue bpdu_filter = 418165716 [(.yext.schemapath) = "/stp/global/config/bpdu-filter"];
  if (this->has_bpdu_filter()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bpdu_filter_);
  }

  // .ywrapper.BoolValue etherchannel_misconfig_guard = 442887371 [(.yext.schemapath) = "/stp/global/config/etherchannel-misconfig-guard"];
  if (this->has_etherchannel_misconfig_guard()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->etherchannel_misconfig_guard_);
  }

  // .ywrapper.BoolValue bpdu_guard = 444421033 [(.yext.schemapath) = "/stp/global/config/bpdu-guard"];
  if (this->has_bpdu_guard()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bpdu_guard_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Global_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Global.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Global_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Global_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Global.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Global.Config)
    MergeFrom(*source);
  }
}

void Stp_Global_Config::MergeFrom(const Stp_Global_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Global.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  enabled_protocol_.MergeFrom(from.enabled_protocol_);
  if (from.has_bpduguard_timeout_recovery()) {
    mutable_bpduguard_timeout_recovery()->::ywrapper::UintValue::MergeFrom(from.bpduguard_timeout_recovery());
  }
  if (from.has_bridge_assurance()) {
    mutable_bridge_assurance()->::ywrapper::BoolValue::MergeFrom(from.bridge_assurance());
  }
  if (from.has_loop_guard()) {
    mutable_loop_guard()->::ywrapper::BoolValue::MergeFrom(from.loop_guard());
  }
  if (from.has_bpdu_filter()) {
    mutable_bpdu_filter()->::ywrapper::BoolValue::MergeFrom(from.bpdu_filter());
  }
  if (from.has_etherchannel_misconfig_guard()) {
    mutable_etherchannel_misconfig_guard()->::ywrapper::BoolValue::MergeFrom(from.etherchannel_misconfig_guard());
  }
  if (from.has_bpdu_guard()) {
    mutable_bpdu_guard()->::ywrapper::BoolValue::MergeFrom(from.bpdu_guard());
  }
}

void Stp_Global_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Global.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Global_Config::CopyFrom(const Stp_Global_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Global.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Global_Config::IsInitialized() const {
  return true;
}

void Stp_Global_Config::Swap(Stp_Global_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Global_Config::InternalSwap(Stp_Global_Config* other) {
  using std::swap;
  enabled_protocol_.InternalSwap(&other->enabled_protocol_);
  swap(bpduguard_timeout_recovery_, other->bpduguard_timeout_recovery_);
  swap(bridge_assurance_, other->bridge_assurance_);
  swap(loop_guard_, other->loop_guard_);
  swap(bpdu_filter_, other->bpdu_filter_);
  swap(etherchannel_misconfig_guard_, other->etherchannel_misconfig_guard_);
  swap(bpdu_guard_, other->bpdu_guard_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Global_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Global_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_Global_State_default_instance_._instance.get_mutable()->bpdu_filter_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Global_State_default_instance_._instance.get_mutable()->bpdu_guard_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Global_State_default_instance_._instance.get_mutable()->bpduguard_timeout_recovery_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Global_State_default_instance_._instance.get_mutable()->bridge_assurance_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Global_State_default_instance_._instance.get_mutable()->etherchannel_misconfig_guard_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Global_State_default_instance_._instance.get_mutable()->loop_guard_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
}
void Stp_Global_State::clear_bpdu_filter() {
  if (GetArenaNoVirtual() == NULL && bpdu_filter_ != NULL) {
    delete bpdu_filter_;
  }
  bpdu_filter_ = NULL;
}
void Stp_Global_State::clear_bpdu_guard() {
  if (GetArenaNoVirtual() == NULL && bpdu_guard_ != NULL) {
    delete bpdu_guard_;
  }
  bpdu_guard_ = NULL;
}
void Stp_Global_State::clear_bpduguard_timeout_recovery() {
  if (GetArenaNoVirtual() == NULL && bpduguard_timeout_recovery_ != NULL) {
    delete bpduguard_timeout_recovery_;
  }
  bpduguard_timeout_recovery_ = NULL;
}
void Stp_Global_State::clear_bridge_assurance() {
  if (GetArenaNoVirtual() == NULL && bridge_assurance_ != NULL) {
    delete bridge_assurance_;
  }
  bridge_assurance_ = NULL;
}
void Stp_Global_State::clear_etherchannel_misconfig_guard() {
  if (GetArenaNoVirtual() == NULL && etherchannel_misconfig_guard_ != NULL) {
    delete etherchannel_misconfig_guard_;
  }
  etherchannel_misconfig_guard_ = NULL;
}
void Stp_Global_State::clear_loop_guard() {
  if (GetArenaNoVirtual() == NULL && loop_guard_ != NULL) {
    delete loop_guard_;
  }
  loop_guard_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Global_State::kBpduFilterFieldNumber;
const int Stp_Global_State::kBpduGuardFieldNumber;
const int Stp_Global_State::kBpduguardTimeoutRecoveryFieldNumber;
const int Stp_Global_State::kBridgeAssuranceFieldNumber;
const int Stp_Global_State::kEnabledProtocolFieldNumber;
const int Stp_Global_State::kEtherchannelMisconfigGuardFieldNumber;
const int Stp_Global_State::kLoopGuardFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Global_State::Stp_Global_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Global_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Global.State)
}
Stp_Global_State::Stp_Global_State(const Stp_Global_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      enabled_protocol_(from.enabled_protocol_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bpdu_filter()) {
    bpdu_filter_ = new ::ywrapper::BoolValue(*from.bpdu_filter_);
  } else {
    bpdu_filter_ = NULL;
  }
  if (from.has_loop_guard()) {
    loop_guard_ = new ::ywrapper::BoolValue(*from.loop_guard_);
  } else {
    loop_guard_ = NULL;
  }
  if (from.has_bridge_assurance()) {
    bridge_assurance_ = new ::ywrapper::BoolValue(*from.bridge_assurance_);
  } else {
    bridge_assurance_ = NULL;
  }
  if (from.has_etherchannel_misconfig_guard()) {
    etherchannel_misconfig_guard_ = new ::ywrapper::BoolValue(*from.etherchannel_misconfig_guard_);
  } else {
    etherchannel_misconfig_guard_ = NULL;
  }
  if (from.has_bpdu_guard()) {
    bpdu_guard_ = new ::ywrapper::BoolValue(*from.bpdu_guard_);
  } else {
    bpdu_guard_ = NULL;
  }
  if (from.has_bpduguard_timeout_recovery()) {
    bpduguard_timeout_recovery_ = new ::ywrapper::UintValue(*from.bpduguard_timeout_recovery_);
  } else {
    bpduguard_timeout_recovery_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Global.State)
}

void Stp_Global_State::SharedCtor() {
  ::memset(&bpdu_filter_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bpduguard_timeout_recovery_) -
      reinterpret_cast<char*>(&bpdu_filter_)) + sizeof(bpduguard_timeout_recovery_));
  _cached_size_ = 0;
}

Stp_Global_State::~Stp_Global_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Global.State)
  SharedDtor();
}

void Stp_Global_State::SharedDtor() {
  if (this != internal_default_instance()) delete bpdu_filter_;
  if (this != internal_default_instance()) delete loop_guard_;
  if (this != internal_default_instance()) delete bridge_assurance_;
  if (this != internal_default_instance()) delete etherchannel_misconfig_guard_;
  if (this != internal_default_instance()) delete bpdu_guard_;
  if (this != internal_default_instance()) delete bpduguard_timeout_recovery_;
}

void Stp_Global_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Global_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Global_State& Stp_Global_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Global_State();
  return *internal_default_instance();
}

Stp_Global_State* Stp_Global_State::New(::google::protobuf::Arena* arena) const {
  Stp_Global_State* n = new Stp_Global_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Global_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Global.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  enabled_protocol_.Clear();
  if (GetArenaNoVirtual() == NULL && bpdu_filter_ != NULL) {
    delete bpdu_filter_;
  }
  bpdu_filter_ = NULL;
  if (GetArenaNoVirtual() == NULL && loop_guard_ != NULL) {
    delete loop_guard_;
  }
  loop_guard_ = NULL;
  if (GetArenaNoVirtual() == NULL && bridge_assurance_ != NULL) {
    delete bridge_assurance_;
  }
  bridge_assurance_ = NULL;
  if (GetArenaNoVirtual() == NULL && etherchannel_misconfig_guard_ != NULL) {
    delete etherchannel_misconfig_guard_;
  }
  etherchannel_misconfig_guard_ = NULL;
  if (GetArenaNoVirtual() == NULL && bpdu_guard_ != NULL) {
    delete bpdu_guard_;
  }
  bpdu_guard_ = NULL;
  if (GetArenaNoVirtual() == NULL && bpduguard_timeout_recovery_ != NULL) {
    delete bpduguard_timeout_recovery_;
  }
  bpduguard_timeout_recovery_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_Global_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Global.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4201177850u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.BoolValue bpdu_filter = 49432299 [(.yext.schemapath) = "/stp/global/state/bpdu-filter"];
      case 49432299: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 395458394 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bpdu_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue loop_guard = 140395837 [(.yext.schemapath) = "/stp/global/state/loop-guard"];
      case 140395837: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 1123166698 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_loop_guard()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue bridge_assurance = 237709252 [(.yext.schemapath) = "/stp/global/state/bridge-assurance"];
      case 237709252: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 1901674018 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bridge_assurance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openconfig.enums.OpenconfigSpanningTreeTypesSTPPROTOCOL enabled_protocol = 313795967 [(.yext.schemapath) = "/stp/global/state/enabled-protocol"];
      case 313795967: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 2510367738 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_enabled_protocol(static_cast< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPROTOCOL >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(248u /* 2510367736 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_enabled_protocol(static_cast< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPROTOCOL >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue etherchannel_misconfig_guard = 331669714 [(.yext.schemapath) = "/stp/global/state/etherchannel-misconfig-guard"];
      case 331669714: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 2653357714 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_etherchannel_misconfig_guard()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue bpdu_guard = 386888444 [(.yext.schemapath) = "/stp/global/state/bpdu-guard"];
      case 386888444: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 3095107554 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bpdu_guard()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue bpduguard_timeout_recovery = 525147231 [(.yext.schemapath) = "/stp/global/state/bpduguard-timeout-recovery"];
      case 525147231: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 4201177850 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bpduguard_timeout_recovery()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Global.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Global.State)
  return false;
#undef DO_
}

void Stp_Global_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Global.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.BoolValue bpdu_filter = 49432299 [(.yext.schemapath) = "/stp/global/state/bpdu-filter"];
  if (this->has_bpdu_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      49432299, *this->bpdu_filter_, output);
  }

  // .ywrapper.BoolValue loop_guard = 140395837 [(.yext.schemapath) = "/stp/global/state/loop-guard"];
  if (this->has_loop_guard()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      140395837, *this->loop_guard_, output);
  }

  // .ywrapper.BoolValue bridge_assurance = 237709252 [(.yext.schemapath) = "/stp/global/state/bridge-assurance"];
  if (this->has_bridge_assurance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      237709252, *this->bridge_assurance_, output);
  }

  // repeated .openconfig.enums.OpenconfigSpanningTreeTypesSTPPROTOCOL enabled_protocol = 313795967 [(.yext.schemapath) = "/stp/global/state/enabled-protocol"];
  if (this->enabled_protocol_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      313795967,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_enabled_protocol_cached_byte_size_));
  }
  for (int i = 0, n = this->enabled_protocol_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->enabled_protocol(i), output);
  }

  // .ywrapper.BoolValue etherchannel_misconfig_guard = 331669714 [(.yext.schemapath) = "/stp/global/state/etherchannel-misconfig-guard"];
  if (this->has_etherchannel_misconfig_guard()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      331669714, *this->etherchannel_misconfig_guard_, output);
  }

  // .ywrapper.BoolValue bpdu_guard = 386888444 [(.yext.schemapath) = "/stp/global/state/bpdu-guard"];
  if (this->has_bpdu_guard()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      386888444, *this->bpdu_guard_, output);
  }

  // .ywrapper.UintValue bpduguard_timeout_recovery = 525147231 [(.yext.schemapath) = "/stp/global/state/bpduguard-timeout-recovery"];
  if (this->has_bpduguard_timeout_recovery()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      525147231, *this->bpduguard_timeout_recovery_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Global.State)
}

::google::protobuf::uint8* Stp_Global_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Global.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.BoolValue bpdu_filter = 49432299 [(.yext.schemapath) = "/stp/global/state/bpdu-filter"];
  if (this->has_bpdu_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        49432299, *this->bpdu_filter_, deterministic, target);
  }

  // .ywrapper.BoolValue loop_guard = 140395837 [(.yext.schemapath) = "/stp/global/state/loop-guard"];
  if (this->has_loop_guard()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        140395837, *this->loop_guard_, deterministic, target);
  }

  // .ywrapper.BoolValue bridge_assurance = 237709252 [(.yext.schemapath) = "/stp/global/state/bridge-assurance"];
  if (this->has_bridge_assurance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        237709252, *this->bridge_assurance_, deterministic, target);
  }

  // repeated .openconfig.enums.OpenconfigSpanningTreeTypesSTPPROTOCOL enabled_protocol = 313795967 [(.yext.schemapath) = "/stp/global/state/enabled-protocol"];
  if (this->enabled_protocol_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      313795967,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _enabled_protocol_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->enabled_protocol_, target);
  }

  // .ywrapper.BoolValue etherchannel_misconfig_guard = 331669714 [(.yext.schemapath) = "/stp/global/state/etherchannel-misconfig-guard"];
  if (this->has_etherchannel_misconfig_guard()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        331669714, *this->etherchannel_misconfig_guard_, deterministic, target);
  }

  // .ywrapper.BoolValue bpdu_guard = 386888444 [(.yext.schemapath) = "/stp/global/state/bpdu-guard"];
  if (this->has_bpdu_guard()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        386888444, *this->bpdu_guard_, deterministic, target);
  }

  // .ywrapper.UintValue bpduguard_timeout_recovery = 525147231 [(.yext.schemapath) = "/stp/global/state/bpduguard-timeout-recovery"];
  if (this->has_bpduguard_timeout_recovery()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        525147231, *this->bpduguard_timeout_recovery_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Global.State)
  return target;
}

size_t Stp_Global_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Global.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.enums.OpenconfigSpanningTreeTypesSTPPROTOCOL enabled_protocol = 313795967 [(.yext.schemapath) = "/stp/global/state/enabled-protocol"];
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->enabled_protocol_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->enabled_protocol(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _enabled_protocol_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // .ywrapper.BoolValue bpdu_filter = 49432299 [(.yext.schemapath) = "/stp/global/state/bpdu-filter"];
  if (this->has_bpdu_filter()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bpdu_filter_);
  }

  // .ywrapper.BoolValue loop_guard = 140395837 [(.yext.schemapath) = "/stp/global/state/loop-guard"];
  if (this->has_loop_guard()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->loop_guard_);
  }

  // .ywrapper.BoolValue bridge_assurance = 237709252 [(.yext.schemapath) = "/stp/global/state/bridge-assurance"];
  if (this->has_bridge_assurance()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bridge_assurance_);
  }

  // .ywrapper.BoolValue etherchannel_misconfig_guard = 331669714 [(.yext.schemapath) = "/stp/global/state/etherchannel-misconfig-guard"];
  if (this->has_etherchannel_misconfig_guard()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->etherchannel_misconfig_guard_);
  }

  // .ywrapper.BoolValue bpdu_guard = 386888444 [(.yext.schemapath) = "/stp/global/state/bpdu-guard"];
  if (this->has_bpdu_guard()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bpdu_guard_);
  }

  // .ywrapper.UintValue bpduguard_timeout_recovery = 525147231 [(.yext.schemapath) = "/stp/global/state/bpduguard-timeout-recovery"];
  if (this->has_bpduguard_timeout_recovery()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bpduguard_timeout_recovery_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Global_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Global.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Global_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Global_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Global.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Global.State)
    MergeFrom(*source);
  }
}

void Stp_Global_State::MergeFrom(const Stp_Global_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Global.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  enabled_protocol_.MergeFrom(from.enabled_protocol_);
  if (from.has_bpdu_filter()) {
    mutable_bpdu_filter()->::ywrapper::BoolValue::MergeFrom(from.bpdu_filter());
  }
  if (from.has_loop_guard()) {
    mutable_loop_guard()->::ywrapper::BoolValue::MergeFrom(from.loop_guard());
  }
  if (from.has_bridge_assurance()) {
    mutable_bridge_assurance()->::ywrapper::BoolValue::MergeFrom(from.bridge_assurance());
  }
  if (from.has_etherchannel_misconfig_guard()) {
    mutable_etherchannel_misconfig_guard()->::ywrapper::BoolValue::MergeFrom(from.etherchannel_misconfig_guard());
  }
  if (from.has_bpdu_guard()) {
    mutable_bpdu_guard()->::ywrapper::BoolValue::MergeFrom(from.bpdu_guard());
  }
  if (from.has_bpduguard_timeout_recovery()) {
    mutable_bpduguard_timeout_recovery()->::ywrapper::UintValue::MergeFrom(from.bpduguard_timeout_recovery());
  }
}

void Stp_Global_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Global.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Global_State::CopyFrom(const Stp_Global_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Global.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Global_State::IsInitialized() const {
  return true;
}

void Stp_Global_State::Swap(Stp_Global_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Global_State::InternalSwap(Stp_Global_State* other) {
  using std::swap;
  enabled_protocol_.InternalSwap(&other->enabled_protocol_);
  swap(bpdu_filter_, other->bpdu_filter_);
  swap(loop_guard_, other->loop_guard_);
  swap(bridge_assurance_, other->bridge_assurance_);
  swap(etherchannel_misconfig_guard_, other->etherchannel_misconfig_guard_);
  swap(bpdu_guard_, other->bpdu_guard_);
  swap(bpduguard_timeout_recovery_, other->bpduguard_timeout_recovery_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Global_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Global::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_Global_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_Global_Config*>(
      ::openconfig::openconfig_spanning_tree::Stp_Global_Config::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Global_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_Global_State*>(
      ::openconfig::openconfig_spanning_tree::Stp_Global_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Global::kConfigFieldNumber;
const int Stp_Global::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Global::Stp_Global()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Global();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Global)
}
Stp_Global::Stp_Global(const Stp_Global& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_spanning_tree::Stp_Global_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_spanning_tree::Stp_Global_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Global)
}

void Stp_Global::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&state_)) + sizeof(config_));
  _cached_size_ = 0;
}

Stp_Global::~Stp_Global() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Global)
  SharedDtor();
}

void Stp_Global::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
}

void Stp_Global::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Global::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Global& Stp_Global::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Global();
  return *internal_default_instance();
}

Stp_Global* Stp_Global::New(::google::protobuf::Arena* arena) const {
  Stp_Global* n = new Stp_Global;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Global::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Global)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_Global::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Global)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2403214234u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_spanning_tree.Stp.Global.State state = 82194900 [(.yext.schemapath) = "/stp/global/state"];
      case 82194900: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 657559202 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_spanning_tree.Stp.Global.Config config = 300401779 [(.yext.schemapath) = "/stp/global/config"];
      case 300401779: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 2403214234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Global)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Global)
  return false;
#undef DO_
}

void Stp_Global::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Global)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_spanning_tree.Stp.Global.State state = 82194900 [(.yext.schemapath) = "/stp/global/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      82194900, *this->state_, output);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Global.Config config = 300401779 [(.yext.schemapath) = "/stp/global/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      300401779, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Global)
}

::google::protobuf::uint8* Stp_Global::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Global)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_spanning_tree.Stp.Global.State state = 82194900 [(.yext.schemapath) = "/stp/global/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        82194900, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Global.Config config = 300401779 [(.yext.schemapath) = "/stp/global/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        300401779, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Global)
  return target;
}

size_t Stp_Global::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Global)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_spanning_tree.Stp.Global.State state = 82194900 [(.yext.schemapath) = "/stp/global/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Global.Config config = 300401779 [(.yext.schemapath) = "/stp/global/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Global::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Global)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Global* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Global>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Global)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Global)
    MergeFrom(*source);
  }
}

void Stp_Global::MergeFrom(const Stp_Global& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Global)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_spanning_tree::Stp_Global_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_spanning_tree::Stp_Global_Config::MergeFrom(from.config());
  }
}

void Stp_Global::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Global)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Global::CopyFrom(const Stp_Global& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Global)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Global::IsInitialized() const {
  return true;
}

void Stp_Global::Swap(Stp_Global* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Global::InternalSwap(Stp_Global* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Global::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Interfaces_Interface_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_Interfaces_Interface_Config_default_instance_._instance.get_mutable()->bpdu_filter_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Interfaces_Interface_Config_default_instance_._instance.get_mutable()->bpdu_guard_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Interfaces_Interface_Config_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void Stp_Interfaces_Interface_Config::clear_bpdu_filter() {
  if (GetArenaNoVirtual() == NULL && bpdu_filter_ != NULL) {
    delete bpdu_filter_;
  }
  bpdu_filter_ = NULL;
}
void Stp_Interfaces_Interface_Config::clear_bpdu_guard() {
  if (GetArenaNoVirtual() == NULL && bpdu_guard_ != NULL) {
    delete bpdu_guard_;
  }
  bpdu_guard_ = NULL;
}
void Stp_Interfaces_Interface_Config::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Interfaces_Interface_Config::kBpduFilterFieldNumber;
const int Stp_Interfaces_Interface_Config::kBpduGuardFieldNumber;
const int Stp_Interfaces_Interface_Config::kEdgePortFieldNumber;
const int Stp_Interfaces_Interface_Config::kGuardFieldNumber;
const int Stp_Interfaces_Interface_Config::kLinkTypeFieldNumber;
const int Stp_Interfaces_Interface_Config::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Interfaces_Interface_Config::Stp_Interfaces_Interface_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Interfaces_Interface_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config)
}
Stp_Interfaces_Interface_Config::Stp_Interfaces_Interface_Config(const Stp_Interfaces_Interface_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bpdu_guard()) {
    bpdu_guard_ = new ::ywrapper::BoolValue(*from.bpdu_guard_);
  } else {
    bpdu_guard_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_bpdu_filter()) {
    bpdu_filter_ = new ::ywrapper::BoolValue(*from.bpdu_filter_);
  } else {
    bpdu_filter_ = NULL;
  }
  ::memcpy(&guard_, &from.guard_,
    static_cast<size_t>(reinterpret_cast<char*>(&edge_port_) -
    reinterpret_cast<char*>(&guard_)) + sizeof(edge_port_));
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config)
}

void Stp_Interfaces_Interface_Config::SharedCtor() {
  ::memset(&bpdu_guard_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&edge_port_) -
      reinterpret_cast<char*>(&bpdu_guard_)) + sizeof(edge_port_));
  _cached_size_ = 0;
}

Stp_Interfaces_Interface_Config::~Stp_Interfaces_Interface_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config)
  SharedDtor();
}

void Stp_Interfaces_Interface_Config::SharedDtor() {
  if (this != internal_default_instance()) delete bpdu_guard_;
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete bpdu_filter_;
}

void Stp_Interfaces_Interface_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Interfaces_Interface_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Interfaces_Interface_Config& Stp_Interfaces_Interface_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Interfaces_Interface_Config();
  return *internal_default_instance();
}

Stp_Interfaces_Interface_Config* Stp_Interfaces_Interface_Config::New(::google::protobuf::Arena* arena) const {
  Stp_Interfaces_Interface_Config* n = new Stp_Interfaces_Interface_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Interfaces_Interface_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && bpdu_guard_ != NULL) {
    delete bpdu_guard_;
  }
  bpdu_guard_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && bpdu_filter_ != NULL) {
    delete bpdu_filter_;
  }
  bpdu_filter_ = NULL;
  ::memset(&guard_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&edge_port_) -
      reinterpret_cast<char*>(&guard_)) + sizeof(edge_port_));
  _internal_metadata_.Clear();
}

bool Stp_Interfaces_Interface_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3955525914u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.BoolValue bpdu_guard = 73707396 [(.yext.schemapath) = "/stp/interfaces/interface/config/bpdu-guard"];
      case 73707396: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 589659170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bpdu_guard()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue name = 80608366 [(.yext.schemapath) = "/stp/interfaces/interface/config/name"];
      case 80608366: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 644866930 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigSpanningTreeStpLinkType link_type = 382517328 [(.yext.schemapath) = "/stp/interfaces/interface/config/link-type"];
      case 382517328: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 3060138624 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_link_type(static_cast< ::openconfig::enums::OpenconfigSpanningTreeStpLinkType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigSpanningTreeTypesSTPEDGEPORT edge_port = 386392760 [(.yext.schemapath) = "/stp/interfaces/interface/config/edge-port"];
      case 386392760: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(192u /* 3091142080 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_edge_port(static_cast< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPEDGEPORT >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigSpanningTreeStpGuardType guard = 411542382 [(.yext.schemapath) = "/stp/interfaces/interface/config/guard"];
      case 411542382: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 3292339056 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_guard(static_cast< ::openconfig::enums::OpenconfigSpanningTreeStpGuardType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue bpdu_filter = 494440739 [(.yext.schemapath) = "/stp/interfaces/interface/config/bpdu-filter"];
      case 494440739: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 3955525914 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bpdu_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config)
  return false;
#undef DO_
}

void Stp_Interfaces_Interface_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.BoolValue bpdu_guard = 73707396 [(.yext.schemapath) = "/stp/interfaces/interface/config/bpdu-guard"];
  if (this->has_bpdu_guard()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      73707396, *this->bpdu_guard_, output);
  }

  // .ywrapper.StringValue name = 80608366 [(.yext.schemapath) = "/stp/interfaces/interface/config/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      80608366, *this->name_, output);
  }

  // .openconfig.enums.OpenconfigSpanningTreeStpLinkType link_type = 382517328 [(.yext.schemapath) = "/stp/interfaces/interface/config/link-type"];
  if (this->link_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      382517328, this->link_type(), output);
  }

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPEDGEPORT edge_port = 386392760 [(.yext.schemapath) = "/stp/interfaces/interface/config/edge-port"];
  if (this->edge_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      386392760, this->edge_port(), output);
  }

  // .openconfig.enums.OpenconfigSpanningTreeStpGuardType guard = 411542382 [(.yext.schemapath) = "/stp/interfaces/interface/config/guard"];
  if (this->guard() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      411542382, this->guard(), output);
  }

  // .ywrapper.BoolValue bpdu_filter = 494440739 [(.yext.schemapath) = "/stp/interfaces/interface/config/bpdu-filter"];
  if (this->has_bpdu_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      494440739, *this->bpdu_filter_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config)
}

::google::protobuf::uint8* Stp_Interfaces_Interface_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.BoolValue bpdu_guard = 73707396 [(.yext.schemapath) = "/stp/interfaces/interface/config/bpdu-guard"];
  if (this->has_bpdu_guard()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        73707396, *this->bpdu_guard_, deterministic, target);
  }

  // .ywrapper.StringValue name = 80608366 [(.yext.schemapath) = "/stp/interfaces/interface/config/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        80608366, *this->name_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigSpanningTreeStpLinkType link_type = 382517328 [(.yext.schemapath) = "/stp/interfaces/interface/config/link-type"];
  if (this->link_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      382517328, this->link_type(), target);
  }

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPEDGEPORT edge_port = 386392760 [(.yext.schemapath) = "/stp/interfaces/interface/config/edge-port"];
  if (this->edge_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      386392760, this->edge_port(), target);
  }

  // .openconfig.enums.OpenconfigSpanningTreeStpGuardType guard = 411542382 [(.yext.schemapath) = "/stp/interfaces/interface/config/guard"];
  if (this->guard() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      411542382, this->guard(), target);
  }

  // .ywrapper.BoolValue bpdu_filter = 494440739 [(.yext.schemapath) = "/stp/interfaces/interface/config/bpdu-filter"];
  if (this->has_bpdu_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        494440739, *this->bpdu_filter_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config)
  return target;
}

size_t Stp_Interfaces_Interface_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.BoolValue bpdu_guard = 73707396 [(.yext.schemapath) = "/stp/interfaces/interface/config/bpdu-guard"];
  if (this->has_bpdu_guard()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bpdu_guard_);
  }

  // .ywrapper.StringValue name = 80608366 [(.yext.schemapath) = "/stp/interfaces/interface/config/name"];
  if (this->has_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  // .ywrapper.BoolValue bpdu_filter = 494440739 [(.yext.schemapath) = "/stp/interfaces/interface/config/bpdu-filter"];
  if (this->has_bpdu_filter()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bpdu_filter_);
  }

  // .openconfig.enums.OpenconfigSpanningTreeStpGuardType guard = 411542382 [(.yext.schemapath) = "/stp/interfaces/interface/config/guard"];
  if (this->guard() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->guard());
  }

  // .openconfig.enums.OpenconfigSpanningTreeStpLinkType link_type = 382517328 [(.yext.schemapath) = "/stp/interfaces/interface/config/link-type"];
  if (this->link_type() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->link_type());
  }

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPEDGEPORT edge_port = 386392760 [(.yext.schemapath) = "/stp/interfaces/interface/config/edge-port"];
  if (this->edge_port() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->edge_port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Interfaces_Interface_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Interfaces_Interface_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Interfaces_Interface_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config)
    MergeFrom(*source);
  }
}

void Stp_Interfaces_Interface_Config::MergeFrom(const Stp_Interfaces_Interface_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bpdu_guard()) {
    mutable_bpdu_guard()->::ywrapper::BoolValue::MergeFrom(from.bpdu_guard());
  }
  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
  if (from.has_bpdu_filter()) {
    mutable_bpdu_filter()->::ywrapper::BoolValue::MergeFrom(from.bpdu_filter());
  }
  if (from.guard() != 0) {
    set_guard(from.guard());
  }
  if (from.link_type() != 0) {
    set_link_type(from.link_type());
  }
  if (from.edge_port() != 0) {
    set_edge_port(from.edge_port());
  }
}

void Stp_Interfaces_Interface_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Interfaces_Interface_Config::CopyFrom(const Stp_Interfaces_Interface_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Interfaces_Interface_Config::IsInitialized() const {
  return true;
}

void Stp_Interfaces_Interface_Config::Swap(Stp_Interfaces_Interface_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Interfaces_Interface_Config::InternalSwap(Stp_Interfaces_Interface_Config* other) {
  using std::swap;
  swap(bpdu_guard_, other->bpdu_guard_);
  swap(name_, other->name_);
  swap(bpdu_filter_, other->bpdu_filter_);
  swap(guard_, other->guard_);
  swap(link_type_, other->link_type_);
  swap(edge_port_, other->edge_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Interfaces_Interface_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Interfaces_Interface_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_Interfaces_Interface_State_default_instance_._instance.get_mutable()->bpdu_filter_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Interfaces_Interface_State_default_instance_._instance.get_mutable()->bpdu_guard_ = const_cast< ::ywrapper::BoolValue*>(
      ::ywrapper::BoolValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Interfaces_Interface_State_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void Stp_Interfaces_Interface_State::clear_bpdu_filter() {
  if (GetArenaNoVirtual() == NULL && bpdu_filter_ != NULL) {
    delete bpdu_filter_;
  }
  bpdu_filter_ = NULL;
}
void Stp_Interfaces_Interface_State::clear_bpdu_guard() {
  if (GetArenaNoVirtual() == NULL && bpdu_guard_ != NULL) {
    delete bpdu_guard_;
  }
  bpdu_guard_ = NULL;
}
void Stp_Interfaces_Interface_State::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Interfaces_Interface_State::kBpduFilterFieldNumber;
const int Stp_Interfaces_Interface_State::kBpduGuardFieldNumber;
const int Stp_Interfaces_Interface_State::kEdgePortFieldNumber;
const int Stp_Interfaces_Interface_State::kGuardFieldNumber;
const int Stp_Interfaces_Interface_State::kLinkTypeFieldNumber;
const int Stp_Interfaces_Interface_State::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Interfaces_Interface_State::Stp_Interfaces_Interface_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Interfaces_Interface_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State)
}
Stp_Interfaces_Interface_State::Stp_Interfaces_Interface_State(const Stp_Interfaces_Interface_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bpdu_filter()) {
    bpdu_filter_ = new ::ywrapper::BoolValue(*from.bpdu_filter_);
  } else {
    bpdu_filter_ = NULL;
  }
  if (from.has_bpdu_guard()) {
    bpdu_guard_ = new ::ywrapper::BoolValue(*from.bpdu_guard_);
  } else {
    bpdu_guard_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  ::memcpy(&guard_, &from.guard_,
    static_cast<size_t>(reinterpret_cast<char*>(&link_type_) -
    reinterpret_cast<char*>(&guard_)) + sizeof(link_type_));
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State)
}

void Stp_Interfaces_Interface_State::SharedCtor() {
  ::memset(&bpdu_filter_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&link_type_) -
      reinterpret_cast<char*>(&bpdu_filter_)) + sizeof(link_type_));
  _cached_size_ = 0;
}

Stp_Interfaces_Interface_State::~Stp_Interfaces_Interface_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State)
  SharedDtor();
}

void Stp_Interfaces_Interface_State::SharedDtor() {
  if (this != internal_default_instance()) delete bpdu_filter_;
  if (this != internal_default_instance()) delete bpdu_guard_;
  if (this != internal_default_instance()) delete name_;
}

void Stp_Interfaces_Interface_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Interfaces_Interface_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Interfaces_Interface_State& Stp_Interfaces_Interface_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Interfaces_Interface_State();
  return *internal_default_instance();
}

Stp_Interfaces_Interface_State* Stp_Interfaces_Interface_State::New(::google::protobuf::Arena* arena) const {
  Stp_Interfaces_Interface_State* n = new Stp_Interfaces_Interface_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Interfaces_Interface_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && bpdu_filter_ != NULL) {
    delete bpdu_filter_;
  }
  bpdu_filter_ = NULL;
  if (GetArenaNoVirtual() == NULL && bpdu_guard_ != NULL) {
    delete bpdu_guard_;
  }
  bpdu_guard_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  ::memset(&guard_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&link_type_) -
      reinterpret_cast<char*>(&guard_)) + sizeof(link_type_));
  _internal_metadata_.Clear();
}

bool Stp_Interfaces_Interface_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3408382392u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.BoolValue bpdu_filter = 111517662 [(.yext.schemapath) = "/stp/interfaces/interface/state/bpdu-filter"];
      case 111517662: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 892141298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bpdu_filter()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigSpanningTreeTypesSTPEDGEPORT edge_port = 114978321 [(.yext.schemapath) = "/stp/interfaces/interface/state/edge-port"];
      case 114978321: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 919826568 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_edge_port(static_cast< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPEDGEPORT >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.BoolValue bpdu_guard = 188731375 [(.yext.schemapath) = "/stp/interfaces/interface/state/bpdu-guard"];
      case 188731375: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 1509851002 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bpdu_guard()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue name = 376864097 [(.yext.schemapath) = "/stp/interfaces/interface/state/name"];
      case 376864097: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 3014912778 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigSpanningTreeStpLinkType link_type = 386303669 [(.yext.schemapath) = "/stp/interfaces/interface/state/link-type"];
      case 386303669: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 3090429352 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_link_type(static_cast< ::openconfig::enums::OpenconfigSpanningTreeStpLinkType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigSpanningTreeStpGuardType guard = 426047799 [(.yext.schemapath) = "/stp/interfaces/interface/state/guard"];
      case 426047799: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 3408382392 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_guard(static_cast< ::openconfig::enums::OpenconfigSpanningTreeStpGuardType >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State)
  return false;
#undef DO_
}

void Stp_Interfaces_Interface_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.BoolValue bpdu_filter = 111517662 [(.yext.schemapath) = "/stp/interfaces/interface/state/bpdu-filter"];
  if (this->has_bpdu_filter()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      111517662, *this->bpdu_filter_, output);
  }

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPEDGEPORT edge_port = 114978321 [(.yext.schemapath) = "/stp/interfaces/interface/state/edge-port"];
  if (this->edge_port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      114978321, this->edge_port(), output);
  }

  // .ywrapper.BoolValue bpdu_guard = 188731375 [(.yext.schemapath) = "/stp/interfaces/interface/state/bpdu-guard"];
  if (this->has_bpdu_guard()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      188731375, *this->bpdu_guard_, output);
  }

  // .ywrapper.StringValue name = 376864097 [(.yext.schemapath) = "/stp/interfaces/interface/state/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      376864097, *this->name_, output);
  }

  // .openconfig.enums.OpenconfigSpanningTreeStpLinkType link_type = 386303669 [(.yext.schemapath) = "/stp/interfaces/interface/state/link-type"];
  if (this->link_type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      386303669, this->link_type(), output);
  }

  // .openconfig.enums.OpenconfigSpanningTreeStpGuardType guard = 426047799 [(.yext.schemapath) = "/stp/interfaces/interface/state/guard"];
  if (this->guard() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      426047799, this->guard(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State)
}

::google::protobuf::uint8* Stp_Interfaces_Interface_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.BoolValue bpdu_filter = 111517662 [(.yext.schemapath) = "/stp/interfaces/interface/state/bpdu-filter"];
  if (this->has_bpdu_filter()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        111517662, *this->bpdu_filter_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPEDGEPORT edge_port = 114978321 [(.yext.schemapath) = "/stp/interfaces/interface/state/edge-port"];
  if (this->edge_port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      114978321, this->edge_port(), target);
  }

  // .ywrapper.BoolValue bpdu_guard = 188731375 [(.yext.schemapath) = "/stp/interfaces/interface/state/bpdu-guard"];
  if (this->has_bpdu_guard()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        188731375, *this->bpdu_guard_, deterministic, target);
  }

  // .ywrapper.StringValue name = 376864097 [(.yext.schemapath) = "/stp/interfaces/interface/state/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        376864097, *this->name_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigSpanningTreeStpLinkType link_type = 386303669 [(.yext.schemapath) = "/stp/interfaces/interface/state/link-type"];
  if (this->link_type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      386303669, this->link_type(), target);
  }

  // .openconfig.enums.OpenconfigSpanningTreeStpGuardType guard = 426047799 [(.yext.schemapath) = "/stp/interfaces/interface/state/guard"];
  if (this->guard() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      426047799, this->guard(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State)
  return target;
}

size_t Stp_Interfaces_Interface_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.BoolValue bpdu_filter = 111517662 [(.yext.schemapath) = "/stp/interfaces/interface/state/bpdu-filter"];
  if (this->has_bpdu_filter()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bpdu_filter_);
  }

  // .ywrapper.BoolValue bpdu_guard = 188731375 [(.yext.schemapath) = "/stp/interfaces/interface/state/bpdu-guard"];
  if (this->has_bpdu_guard()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bpdu_guard_);
  }

  // .ywrapper.StringValue name = 376864097 [(.yext.schemapath) = "/stp/interfaces/interface/state/name"];
  if (this->has_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  // .openconfig.enums.OpenconfigSpanningTreeStpGuardType guard = 426047799 [(.yext.schemapath) = "/stp/interfaces/interface/state/guard"];
  if (this->guard() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->guard());
  }

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPEDGEPORT edge_port = 114978321 [(.yext.schemapath) = "/stp/interfaces/interface/state/edge-port"];
  if (this->edge_port() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->edge_port());
  }

  // .openconfig.enums.OpenconfigSpanningTreeStpLinkType link_type = 386303669 [(.yext.schemapath) = "/stp/interfaces/interface/state/link-type"];
  if (this->link_type() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->link_type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Interfaces_Interface_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Interfaces_Interface_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Interfaces_Interface_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State)
    MergeFrom(*source);
  }
}

void Stp_Interfaces_Interface_State::MergeFrom(const Stp_Interfaces_Interface_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bpdu_filter()) {
    mutable_bpdu_filter()->::ywrapper::BoolValue::MergeFrom(from.bpdu_filter());
  }
  if (from.has_bpdu_guard()) {
    mutable_bpdu_guard()->::ywrapper::BoolValue::MergeFrom(from.bpdu_guard());
  }
  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
  if (from.guard() != 0) {
    set_guard(from.guard());
  }
  if (from.edge_port() != 0) {
    set_edge_port(from.edge_port());
  }
  if (from.link_type() != 0) {
    set_link_type(from.link_type());
  }
}

void Stp_Interfaces_Interface_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Interfaces_Interface_State::CopyFrom(const Stp_Interfaces_Interface_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Interfaces_Interface_State::IsInitialized() const {
  return true;
}

void Stp_Interfaces_Interface_State::Swap(Stp_Interfaces_Interface_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Interfaces_Interface_State::InternalSwap(Stp_Interfaces_Interface_State* other) {
  using std::swap;
  swap(bpdu_filter_, other->bpdu_filter_);
  swap(bpdu_guard_, other->bpdu_guard_);
  swap(name_, other->name_);
  swap(guard_, other->guard_);
  swap(edge_port_, other->edge_port_);
  swap(link_type_, other->link_type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Interfaces_Interface_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Interfaces_Interface::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_Interfaces_Interface_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_Config*>(
      ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_Config::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Interfaces_Interface_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_State*>(
      ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Interfaces_Interface::kConfigFieldNumber;
const int Stp_Interfaces_Interface::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Interfaces_Interface::Stp_Interfaces_Interface()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Interfaces_Interface();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface)
}
Stp_Interfaces_Interface::Stp_Interfaces_Interface(const Stp_Interfaces_Interface& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface)
}

void Stp_Interfaces_Interface::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&state_)) + sizeof(config_));
  _cached_size_ = 0;
}

Stp_Interfaces_Interface::~Stp_Interfaces_Interface() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface)
  SharedDtor();
}

void Stp_Interfaces_Interface::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
}

void Stp_Interfaces_Interface::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Interfaces_Interface::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Interfaces_Interface& Stp_Interfaces_Interface::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Interfaces_Interface();
  return *internal_default_instance();
}

Stp_Interfaces_Interface* Stp_Interfaces_Interface::New(::google::protobuf::Arena* arena) const {
  Stp_Interfaces_Interface* n = new Stp_Interfaces_Interface;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Interfaces_Interface::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_Interfaces_Interface::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3816409442u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State state = 177132837 [(.yext.schemapath) = "/stp/interfaces/interface/state"];
      case 177132837: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 1417062698 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config config = 477051180 [(.yext.schemapath) = "/stp/interfaces/interface/config"];
      case 477051180: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 3816409442 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface)
  return false;
#undef DO_
}

void Stp_Interfaces_Interface::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State state = 177132837 [(.yext.schemapath) = "/stp/interfaces/interface/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      177132837, *this->state_, output);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config config = 477051180 [(.yext.schemapath) = "/stp/interfaces/interface/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      477051180, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface)
}

::google::protobuf::uint8* Stp_Interfaces_Interface::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State state = 177132837 [(.yext.schemapath) = "/stp/interfaces/interface/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        177132837, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config config = 477051180 [(.yext.schemapath) = "/stp/interfaces/interface/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        477051180, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface)
  return target;
}

size_t Stp_Interfaces_Interface::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State state = 177132837 [(.yext.schemapath) = "/stp/interfaces/interface/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config config = 477051180 [(.yext.schemapath) = "/stp/interfaces/interface/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Interfaces_Interface::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Interfaces_Interface* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Interfaces_Interface>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface)
    MergeFrom(*source);
  }
}

void Stp_Interfaces_Interface::MergeFrom(const Stp_Interfaces_Interface& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_Config::MergeFrom(from.config());
  }
}

void Stp_Interfaces_Interface::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Interfaces_Interface::CopyFrom(const Stp_Interfaces_Interface& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Interfaces_Interface::IsInitialized() const {
  return true;
}

void Stp_Interfaces_Interface::Swap(Stp_Interfaces_Interface* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Interfaces_Interface::InternalSwap(Stp_Interfaces_Interface* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Interfaces_Interface::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Interfaces_InterfaceKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_Interfaces_InterfaceKey_default_instance_._instance.get_mutable()->interface_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface*>(
      ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Interfaces_InterfaceKey::kNameFieldNumber;
const int Stp_Interfaces_InterfaceKey::kInterfaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Interfaces_InterfaceKey::Stp_Interfaces_InterfaceKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Interfaces_InterfaceKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey)
}
Stp_Interfaces_InterfaceKey::Stp_Interfaces_InterfaceKey(const Stp_Interfaces_InterfaceKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_interface()) {
    interface_ = new ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface(*from.interface_);
  } else {
    interface_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey)
}

void Stp_Interfaces_InterfaceKey::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interface_ = NULL;
  _cached_size_ = 0;
}

Stp_Interfaces_InterfaceKey::~Stp_Interfaces_InterfaceKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey)
  SharedDtor();
}

void Stp_Interfaces_InterfaceKey::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete interface_;
}

void Stp_Interfaces_InterfaceKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Interfaces_InterfaceKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Interfaces_InterfaceKey& Stp_Interfaces_InterfaceKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Interfaces_InterfaceKey();
  return *internal_default_instance();
}

Stp_Interfaces_InterfaceKey* Stp_Interfaces_InterfaceKey::New(::google::protobuf::Arena* arena) const {
  Stp_Interfaces_InterfaceKey* n = new Stp_Interfaces_InterfaceKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Interfaces_InterfaceKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_Interfaces_InterfaceKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.yext.schemapath) = "/stp/interfaces/interface/name"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface interface = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey)
  return false;
#undef DO_
}

void Stp_Interfaces_InterfaceKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.yext.schemapath) = "/stp/interfaces/interface/name"];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface interface = 2;
  if (this->has_interface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->interface_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey)
}

::google::protobuf::uint8* Stp_Interfaces_InterfaceKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.yext.schemapath) = "/stp/interfaces/interface/name"];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface interface = 2;
  if (this->has_interface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->interface_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey)
  return target;
}

size_t Stp_Interfaces_InterfaceKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1 [(.yext.schemapath) = "/stp/interfaces/interface/name"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface interface = 2;
  if (this->has_interface()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interface_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Interfaces_InterfaceKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Interfaces_InterfaceKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Interfaces_InterfaceKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey)
    MergeFrom(*source);
  }
}

void Stp_Interfaces_InterfaceKey::MergeFrom(const Stp_Interfaces_InterfaceKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_interface()) {
    mutable_interface()->::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface::MergeFrom(from.interface());
  }
}

void Stp_Interfaces_InterfaceKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Interfaces_InterfaceKey::CopyFrom(const Stp_Interfaces_InterfaceKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Interfaces_InterfaceKey::IsInitialized() const {
  return true;
}

void Stp_Interfaces_InterfaceKey::Swap(Stp_Interfaces_InterfaceKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Interfaces_InterfaceKey::InternalSwap(Stp_Interfaces_InterfaceKey* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(interface_, other->interface_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Interfaces_InterfaceKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Interfaces::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Interfaces::kInterfaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Interfaces::Stp_Interfaces()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Interfaces();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Interfaces)
}
Stp_Interfaces::Stp_Interfaces(const Stp_Interfaces& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      interface_(from.interface_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Interfaces)
}

void Stp_Interfaces::SharedCtor() {
  _cached_size_ = 0;
}

Stp_Interfaces::~Stp_Interfaces() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Interfaces)
  SharedDtor();
}

void Stp_Interfaces::SharedDtor() {
}

void Stp_Interfaces::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Interfaces::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Interfaces& Stp_Interfaces::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Interfaces();
  return *internal_default_instance();
}

Stp_Interfaces* Stp_Interfaces::New(::google::protobuf::Arena* arena) const {
  Stp_Interfaces* n = new Stp_Interfaces;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Interfaces::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Interfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  interface_.Clear();
  _internal_metadata_.Clear();
}

bool Stp_Interfaces::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Interfaces)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2622054362u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey interface = 327756795 [(.yext.schemapath) = "/stp/interfaces/interface"];
      case 327756795: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 2622054362 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_interface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Interfaces)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Interfaces)
  return false;
#undef DO_
}

void Stp_Interfaces::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Interfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey interface = 327756795 [(.yext.schemapath) = "/stp/interfaces/interface"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interface_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      327756795, this->interface(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Interfaces)
}

::google::protobuf::uint8* Stp_Interfaces::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Interfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey interface = 327756795 [(.yext.schemapath) = "/stp/interfaces/interface"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interface_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        327756795, this->interface(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Interfaces)
  return target;
}

size_t Stp_Interfaces::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Interfaces)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey interface = 327756795 [(.yext.schemapath) = "/stp/interfaces/interface"];
  {
    unsigned int count = static_cast<unsigned int>(this->interface_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->interface(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Interfaces::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Interfaces)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Interfaces* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Interfaces>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Interfaces)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Interfaces)
    MergeFrom(*source);
  }
}

void Stp_Interfaces::MergeFrom(const Stp_Interfaces& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Interfaces)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  interface_.MergeFrom(from.interface_);
}

void Stp_Interfaces::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Interfaces)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Interfaces::CopyFrom(const Stp_Interfaces& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Interfaces)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Interfaces::IsInitialized() const {
  return true;
}

void Stp_Interfaces::Swap(Stp_Interfaces* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Interfaces::InternalSwap(Stp_Interfaces* other) {
  using std::swap;
  interface_.InternalSwap(&other->interface_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Interfaces::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Mstp_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_Config_default_instance_._instance.get_mutable()->forwarding_delay_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_Config_default_instance_._instance.get_mutable()->hello_time_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_Config_default_instance_._instance.get_mutable()->hold_count_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_Config_default_instance_._instance.get_mutable()->max_age_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_Config_default_instance_._instance.get_mutable()->max_hop_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_Config_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_Config_default_instance_._instance.get_mutable()->revision_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Stp_Mstp_Config::clear_forwarding_delay() {
  if (GetArenaNoVirtual() == NULL && forwarding_delay_ != NULL) {
    delete forwarding_delay_;
  }
  forwarding_delay_ = NULL;
}
void Stp_Mstp_Config::clear_hello_time() {
  if (GetArenaNoVirtual() == NULL && hello_time_ != NULL) {
    delete hello_time_;
  }
  hello_time_ = NULL;
}
void Stp_Mstp_Config::clear_hold_count() {
  if (GetArenaNoVirtual() == NULL && hold_count_ != NULL) {
    delete hold_count_;
  }
  hold_count_ = NULL;
}
void Stp_Mstp_Config::clear_max_age() {
  if (GetArenaNoVirtual() == NULL && max_age_ != NULL) {
    delete max_age_;
  }
  max_age_ = NULL;
}
void Stp_Mstp_Config::clear_max_hop() {
  if (GetArenaNoVirtual() == NULL && max_hop_ != NULL) {
    delete max_hop_;
  }
  max_hop_ = NULL;
}
void Stp_Mstp_Config::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void Stp_Mstp_Config::clear_revision() {
  if (GetArenaNoVirtual() == NULL && revision_ != NULL) {
    delete revision_;
  }
  revision_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Mstp_Config::kForwardingDelayFieldNumber;
const int Stp_Mstp_Config::kHelloTimeFieldNumber;
const int Stp_Mstp_Config::kHoldCountFieldNumber;
const int Stp_Mstp_Config::kMaxAgeFieldNumber;
const int Stp_Mstp_Config::kMaxHopFieldNumber;
const int Stp_Mstp_Config::kNameFieldNumber;
const int Stp_Mstp_Config::kRevisionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Mstp_Config::Stp_Mstp_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.Config)
}
Stp_Mstp_Config::Stp_Mstp_Config(const Stp_Mstp_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_forwarding_delay()) {
    forwarding_delay_ = new ::ywrapper::UintValue(*from.forwarding_delay_);
  } else {
    forwarding_delay_ = NULL;
  }
  if (from.has_revision()) {
    revision_ = new ::ywrapper::UintValue(*from.revision_);
  } else {
    revision_ = NULL;
  }
  if (from.has_hello_time()) {
    hello_time_ = new ::ywrapper::UintValue(*from.hello_time_);
  } else {
    hello_time_ = NULL;
  }
  if (from.has_max_age()) {
    max_age_ = new ::ywrapper::UintValue(*from.max_age_);
  } else {
    max_age_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_max_hop()) {
    max_hop_ = new ::ywrapper::UintValue(*from.max_hop_);
  } else {
    max_hop_ = NULL;
  }
  if (from.has_hold_count()) {
    hold_count_ = new ::ywrapper::UintValue(*from.hold_count_);
  } else {
    hold_count_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.Config)
}

void Stp_Mstp_Config::SharedCtor() {
  ::memset(&forwarding_delay_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hold_count_) -
      reinterpret_cast<char*>(&forwarding_delay_)) + sizeof(hold_count_));
  _cached_size_ = 0;
}

Stp_Mstp_Config::~Stp_Mstp_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Mstp.Config)
  SharedDtor();
}

void Stp_Mstp_Config::SharedDtor() {
  if (this != internal_default_instance()) delete forwarding_delay_;
  if (this != internal_default_instance()) delete revision_;
  if (this != internal_default_instance()) delete hello_time_;
  if (this != internal_default_instance()) delete max_age_;
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete max_hop_;
  if (this != internal_default_instance()) delete hold_count_;
}

void Stp_Mstp_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Mstp_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Mstp_Config& Stp_Mstp_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_Config();
  return *internal_default_instance();
}

Stp_Mstp_Config* Stp_Mstp_Config::New(::google::protobuf::Arena* arena) const {
  Stp_Mstp_Config* n = new Stp_Mstp_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Mstp_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Mstp.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && forwarding_delay_ != NULL) {
    delete forwarding_delay_;
  }
  forwarding_delay_ = NULL;
  if (GetArenaNoVirtual() == NULL && revision_ != NULL) {
    delete revision_;
  }
  revision_ = NULL;
  if (GetArenaNoVirtual() == NULL && hello_time_ != NULL) {
    delete hello_time_;
  }
  hello_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_age_ != NULL) {
    delete max_age_;
  }
  max_age_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_hop_ != NULL) {
    delete max_hop_;
  }
  max_hop_ = NULL;
  if (GetArenaNoVirtual() == NULL && hold_count_ != NULL) {
    delete hold_count_;
  }
  hold_count_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_Mstp_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Mstp.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2947966354u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue forwarding_delay = 18306732 [(.yext.schemapath) = "/stp/mstp/config/forwarding-delay"];
      case 18306732: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 146453858 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_forwarding_delay()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue revision = 151289928 [(.yext.schemapath) = "/stp/mstp/config/revision"];
      case 151289928: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 1210319426 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_revision()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue hello_time = 156515745 [(.yext.schemapath) = "/stp/mstp/config/hello-time"];
      case 156515745: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 1252125962 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hello_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue max_age = 157271045 [(.yext.schemapath) = "/stp/mstp/config/max-age"];
      case 157271045: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 1258168362 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_age()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue name = 205892610 [(.yext.schemapath) = "/stp/mstp/config/name"];
      case 205892610: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 1647140882 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue max_hop = 290078073 [(.yext.schemapath) = "/stp/mstp/config/max-hop"];
      case 290078073: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 2320624586 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_hop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue hold_count = 368495794 [(.yext.schemapath) = "/stp/mstp/config/hold-count"];
      case 368495794: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 2947966354 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hold_count()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Mstp.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Mstp.Config)
  return false;
#undef DO_
}

void Stp_Mstp_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Mstp.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue forwarding_delay = 18306732 [(.yext.schemapath) = "/stp/mstp/config/forwarding-delay"];
  if (this->has_forwarding_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18306732, *this->forwarding_delay_, output);
  }

  // .ywrapper.UintValue revision = 151289928 [(.yext.schemapath) = "/stp/mstp/config/revision"];
  if (this->has_revision()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      151289928, *this->revision_, output);
  }

  // .ywrapper.UintValue hello_time = 156515745 [(.yext.schemapath) = "/stp/mstp/config/hello-time"];
  if (this->has_hello_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      156515745, *this->hello_time_, output);
  }

  // .ywrapper.UintValue max_age = 157271045 [(.yext.schemapath) = "/stp/mstp/config/max-age"];
  if (this->has_max_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      157271045, *this->max_age_, output);
  }

  // .ywrapper.StringValue name = 205892610 [(.yext.schemapath) = "/stp/mstp/config/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      205892610, *this->name_, output);
  }

  // .ywrapper.UintValue max_hop = 290078073 [(.yext.schemapath) = "/stp/mstp/config/max-hop"];
  if (this->has_max_hop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      290078073, *this->max_hop_, output);
  }

  // .ywrapper.UintValue hold_count = 368495794 [(.yext.schemapath) = "/stp/mstp/config/hold-count"];
  if (this->has_hold_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      368495794, *this->hold_count_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Mstp.Config)
}

::google::protobuf::uint8* Stp_Mstp_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Mstp.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue forwarding_delay = 18306732 [(.yext.schemapath) = "/stp/mstp/config/forwarding-delay"];
  if (this->has_forwarding_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        18306732, *this->forwarding_delay_, deterministic, target);
  }

  // .ywrapper.UintValue revision = 151289928 [(.yext.schemapath) = "/stp/mstp/config/revision"];
  if (this->has_revision()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        151289928, *this->revision_, deterministic, target);
  }

  // .ywrapper.UintValue hello_time = 156515745 [(.yext.schemapath) = "/stp/mstp/config/hello-time"];
  if (this->has_hello_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        156515745, *this->hello_time_, deterministic, target);
  }

  // .ywrapper.UintValue max_age = 157271045 [(.yext.schemapath) = "/stp/mstp/config/max-age"];
  if (this->has_max_age()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        157271045, *this->max_age_, deterministic, target);
  }

  // .ywrapper.StringValue name = 205892610 [(.yext.schemapath) = "/stp/mstp/config/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        205892610, *this->name_, deterministic, target);
  }

  // .ywrapper.UintValue max_hop = 290078073 [(.yext.schemapath) = "/stp/mstp/config/max-hop"];
  if (this->has_max_hop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        290078073, *this->max_hop_, deterministic, target);
  }

  // .ywrapper.UintValue hold_count = 368495794 [(.yext.schemapath) = "/stp/mstp/config/hold-count"];
  if (this->has_hold_count()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        368495794, *this->hold_count_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Mstp.Config)
  return target;
}

size_t Stp_Mstp_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Mstp.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue forwarding_delay = 18306732 [(.yext.schemapath) = "/stp/mstp/config/forwarding-delay"];
  if (this->has_forwarding_delay()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->forwarding_delay_);
  }

  // .ywrapper.UintValue revision = 151289928 [(.yext.schemapath) = "/stp/mstp/config/revision"];
  if (this->has_revision()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->revision_);
  }

  // .ywrapper.UintValue hello_time = 156515745 [(.yext.schemapath) = "/stp/mstp/config/hello-time"];
  if (this->has_hello_time()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->hello_time_);
  }

  // .ywrapper.UintValue max_age = 157271045 [(.yext.schemapath) = "/stp/mstp/config/max-age"];
  if (this->has_max_age()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_age_);
  }

  // .ywrapper.StringValue name = 205892610 [(.yext.schemapath) = "/stp/mstp/config/name"];
  if (this->has_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  // .ywrapper.UintValue max_hop = 290078073 [(.yext.schemapath) = "/stp/mstp/config/max-hop"];
  if (this->has_max_hop()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_hop_);
  }

  // .ywrapper.UintValue hold_count = 368495794 [(.yext.schemapath) = "/stp/mstp/config/hold-count"];
  if (this->has_hold_count()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->hold_count_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Mstp_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Mstp_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Mstp_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Mstp.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Mstp.Config)
    MergeFrom(*source);
  }
}

void Stp_Mstp_Config::MergeFrom(const Stp_Mstp_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_forwarding_delay()) {
    mutable_forwarding_delay()->::ywrapper::UintValue::MergeFrom(from.forwarding_delay());
  }
  if (from.has_revision()) {
    mutable_revision()->::ywrapper::UintValue::MergeFrom(from.revision());
  }
  if (from.has_hello_time()) {
    mutable_hello_time()->::ywrapper::UintValue::MergeFrom(from.hello_time());
  }
  if (from.has_max_age()) {
    mutable_max_age()->::ywrapper::UintValue::MergeFrom(from.max_age());
  }
  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
  if (from.has_max_hop()) {
    mutable_max_hop()->::ywrapper::UintValue::MergeFrom(from.max_hop());
  }
  if (from.has_hold_count()) {
    mutable_hold_count()->::ywrapper::UintValue::MergeFrom(from.hold_count());
  }
}

void Stp_Mstp_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Mstp_Config::CopyFrom(const Stp_Mstp_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Mstp_Config::IsInitialized() const {
  return true;
}

void Stp_Mstp_Config::Swap(Stp_Mstp_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Mstp_Config::InternalSwap(Stp_Mstp_Config* other) {
  using std::swap;
  swap(forwarding_delay_, other->forwarding_delay_);
  swap(revision_, other->revision_);
  swap(hello_time_, other->hello_time_);
  swap(max_age_, other->max_age_);
  swap(name_, other->name_);
  swap(max_hop_, other->max_hop_);
  swap(hold_count_, other->hold_count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Mstp_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::kVlanStringFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::kVlanUint64FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Config_VlanUnion();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion)
}
Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion(const Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vlan_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vlan_string().size() > 0) {
    vlan_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vlan_string_);
  }
  vlan_uint64_ = from.vlan_uint64_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion)
}

void Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::SharedCtor() {
  vlan_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vlan_uint64_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::~Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion)
  SharedDtor();
}

void Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::SharedDtor() {
  vlan_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion& Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Config_VlanUnion();
  return *internal_default_instance();
}

Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion* Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::New(::google::protobuf::Arena* arena) const {
  Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion* n = new Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vlan_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vlan_uint64_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2869665824u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string vlan_string = 113239521;
      case 113239521: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 905916170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vlan_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vlan_string().data(), static_cast<int>(this->vlan_string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion.vlan_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 vlan_uint64 = 358708228;
      case 358708228: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 2869665824 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &vlan_uint64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion)
  return false;
#undef DO_
}

void Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string vlan_string = 113239521;
  if (this->vlan_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vlan_string().data(), static_cast<int>(this->vlan_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion.vlan_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      113239521, this->vlan_string(), output);
  }

  // uint64 vlan_uint64 = 358708228;
  if (this->vlan_uint64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(358708228, this->vlan_uint64(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion)
}

::google::protobuf::uint8* Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string vlan_string = 113239521;
  if (this->vlan_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vlan_string().data(), static_cast<int>(this->vlan_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion.vlan_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        113239521, this->vlan_string(), target);
  }

  // uint64 vlan_uint64 = 358708228;
  if (this->vlan_uint64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(358708228, this->vlan_uint64(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion)
  return target;
}

size_t Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string vlan_string = 113239521;
  if (this->vlan_string().size() > 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vlan_string());
  }

  // uint64 vlan_uint64 = 358708228;
  if (this->vlan_uint64() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->vlan_uint64());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion)
    MergeFrom(*source);
  }
}

void Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::MergeFrom(const Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vlan_string().size() > 0) {

    vlan_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vlan_string_);
  }
  if (from.vlan_uint64() != 0) {
    set_vlan_uint64(from.vlan_uint64());
  }
}

void Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::CopyFrom(const Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::IsInitialized() const {
  return true;
}

void Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::Swap(Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::InternalSwap(Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion* other) {
  using std::swap;
  vlan_string_.Swap(&other->vlan_string_);
  swap(vlan_uint64_, other->vlan_uint64_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Mstp_MstInstances_MstInstance_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Config_default_instance_._instance.get_mutable()->bridge_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Config_default_instance_._instance.get_mutable()->mst_id_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Stp_Mstp_MstInstances_MstInstance_Config::clear_bridge_priority() {
  if (GetArenaNoVirtual() == NULL && bridge_priority_ != NULL) {
    delete bridge_priority_;
  }
  bridge_priority_ = NULL;
}
void Stp_Mstp_MstInstances_MstInstance_Config::clear_mst_id() {
  if (GetArenaNoVirtual() == NULL && mst_id_ != NULL) {
    delete mst_id_;
  }
  mst_id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Mstp_MstInstances_MstInstance_Config::kBridgePriorityFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_Config::kMstIdFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_Config::kVlanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Mstp_MstInstances_MstInstance_Config::Stp_Mstp_MstInstances_MstInstance_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config)
}
Stp_Mstp_MstInstances_MstInstance_Config::Stp_Mstp_MstInstances_MstInstance_Config(const Stp_Mstp_MstInstances_MstInstance_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      vlan_(from.vlan_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mst_id()) {
    mst_id_ = new ::ywrapper::UintValue(*from.mst_id_);
  } else {
    mst_id_ = NULL;
  }
  if (from.has_bridge_priority()) {
    bridge_priority_ = new ::ywrapper::UintValue(*from.bridge_priority_);
  } else {
    bridge_priority_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config)
}

void Stp_Mstp_MstInstances_MstInstance_Config::SharedCtor() {
  ::memset(&mst_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bridge_priority_) -
      reinterpret_cast<char*>(&mst_id_)) + sizeof(bridge_priority_));
  _cached_size_ = 0;
}

Stp_Mstp_MstInstances_MstInstance_Config::~Stp_Mstp_MstInstances_MstInstance_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config)
  SharedDtor();
}

void Stp_Mstp_MstInstances_MstInstance_Config::SharedDtor() {
  if (this != internal_default_instance()) delete mst_id_;
  if (this != internal_default_instance()) delete bridge_priority_;
}

void Stp_Mstp_MstInstances_MstInstance_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Mstp_MstInstances_MstInstance_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Mstp_MstInstances_MstInstance_Config& Stp_Mstp_MstInstances_MstInstance_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Config();
  return *internal_default_instance();
}

Stp_Mstp_MstInstances_MstInstance_Config* Stp_Mstp_MstInstances_MstInstance_Config::New(::google::protobuf::Arena* arena) const {
  Stp_Mstp_MstInstances_MstInstance_Config* n = new Stp_Mstp_MstInstances_MstInstance_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Mstp_MstInstances_MstInstance_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vlan_.Clear();
  if (GetArenaNoVirtual() == NULL && mst_id_ != NULL) {
    delete mst_id_;
  }
  mst_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && bridge_priority_ != NULL) {
    delete bridge_priority_;
  }
  bridge_priority_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_Mstp_MstInstances_MstInstance_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4142557402u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue mst_id = 65684746 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/config/mst-id"];
      case 65684746: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 525477970 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mst_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue bridge_priority = 150170028 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/config/bridge-priority"];
      case 150170028: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 1201360226 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bridge_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion vlan = 517819675 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/config/vlan"];
      case 517819675: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 4142557402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_vlan()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config)
  return false;
#undef DO_
}

void Stp_Mstp_MstInstances_MstInstance_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue mst_id = 65684746 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/config/mst-id"];
  if (this->has_mst_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      65684746, *this->mst_id_, output);
  }

  // .ywrapper.UintValue bridge_priority = 150170028 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/config/bridge-priority"];
  if (this->has_bridge_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      150170028, *this->bridge_priority_, output);
  }

  // repeated .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion vlan = 517819675 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/config/vlan"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vlan_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      517819675, this->vlan(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config)
}

::google::protobuf::uint8* Stp_Mstp_MstInstances_MstInstance_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue mst_id = 65684746 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/config/mst-id"];
  if (this->has_mst_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        65684746, *this->mst_id_, deterministic, target);
  }

  // .ywrapper.UintValue bridge_priority = 150170028 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/config/bridge-priority"];
  if (this->has_bridge_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        150170028, *this->bridge_priority_, deterministic, target);
  }

  // repeated .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion vlan = 517819675 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/config/vlan"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vlan_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        517819675, this->vlan(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config)
  return target;
}

size_t Stp_Mstp_MstInstances_MstInstance_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion vlan = 517819675 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/config/vlan"];
  {
    unsigned int count = static_cast<unsigned int>(this->vlan_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vlan(static_cast<int>(i)));
    }
  }

  // .ywrapper.UintValue mst_id = 65684746 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/config/mst-id"];
  if (this->has_mst_id()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mst_id_);
  }

  // .ywrapper.UintValue bridge_priority = 150170028 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/config/bridge-priority"];
  if (this->has_bridge_priority()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bridge_priority_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Mstp_MstInstances_MstInstance_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Mstp_MstInstances_MstInstance_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Mstp_MstInstances_MstInstance_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config)
    MergeFrom(*source);
  }
}

void Stp_Mstp_MstInstances_MstInstance_Config::MergeFrom(const Stp_Mstp_MstInstances_MstInstance_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vlan_.MergeFrom(from.vlan_);
  if (from.has_mst_id()) {
    mutable_mst_id()->::ywrapper::UintValue::MergeFrom(from.mst_id());
  }
  if (from.has_bridge_priority()) {
    mutable_bridge_priority()->::ywrapper::UintValue::MergeFrom(from.bridge_priority());
  }
}

void Stp_Mstp_MstInstances_MstInstance_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Mstp_MstInstances_MstInstance_Config::CopyFrom(const Stp_Mstp_MstInstances_MstInstance_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Mstp_MstInstances_MstInstance_Config::IsInitialized() const {
  return true;
}

void Stp_Mstp_MstInstances_MstInstance_Config::Swap(Stp_Mstp_MstInstances_MstInstance_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Mstp_MstInstances_MstInstance_Config::InternalSwap(Stp_Mstp_MstInstances_MstInstance_Config* other) {
  using std::swap;
  vlan_.InternalSwap(&other->vlan_);
  swap(mst_id_, other->mst_id_);
  swap(bridge_priority_, other->bridge_priority_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Mstp_MstInstances_MstInstance_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config_default_instance_._instance.get_mutable()->cost_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config_default_instance_._instance.get_mutable()->port_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::clear_cost() {
  if (GetArenaNoVirtual() == NULL && cost_ != NULL) {
    delete cost_;
  }
  cost_ = NULL;
}
void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::clear_port_priority() {
  if (GetArenaNoVirtual() == NULL && port_priority_ != NULL) {
    delete port_priority_;
  }
  port_priority_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::kCostFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::kNameFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::kPortPriorityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config)
}
Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_port_priority()) {
    port_priority_ = new ::ywrapper::UintValue(*from.port_priority_);
  } else {
    port_priority_ = NULL;
  }
  if (from.has_cost()) {
    cost_ = new ::ywrapper::UintValue(*from.cost_);
  } else {
    cost_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config)
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::SharedCtor() {
  ::memset(&name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&cost_) -
      reinterpret_cast<char*>(&name_)) + sizeof(cost_));
  _cached_size_ = 0;
}

Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::~Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config)
  SharedDtor();
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::SharedDtor() {
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete port_priority_;
  if (this != internal_default_instance()) delete cost_;
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config& Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config();
  return *internal_default_instance();
}

Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::New(::google::protobuf::Arena* arena) const {
  Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config* n = new Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && port_priority_ != NULL) {
    delete port_priority_;
  }
  port_priority_ = NULL;
  if (GetArenaNoVirtual() == NULL && cost_ != NULL) {
    delete cost_;
  }
  cost_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1855611970u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue name = 14028770 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/config/name"];
      case 14028770: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 112230162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue port_priority = 140449623 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/config/port-priority"];
      case 140449623: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 1123596986 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_port_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue cost = 231951496 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/config/cost"];
      case 231951496: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 1855611970 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cost()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config)
  return false;
#undef DO_
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue name = 14028770 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/config/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14028770, *this->name_, output);
  }

  // .ywrapper.UintValue port_priority = 140449623 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/config/port-priority"];
  if (this->has_port_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      140449623, *this->port_priority_, output);
  }

  // .ywrapper.UintValue cost = 231951496 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/config/cost"];
  if (this->has_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      231951496, *this->cost_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config)
}

::google::protobuf::uint8* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue name = 14028770 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/config/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14028770, *this->name_, deterministic, target);
  }

  // .ywrapper.UintValue port_priority = 140449623 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/config/port-priority"];
  if (this->has_port_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        140449623, *this->port_priority_, deterministic, target);
  }

  // .ywrapper.UintValue cost = 231951496 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/config/cost"];
  if (this->has_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        231951496, *this->cost_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config)
  return target;
}

size_t Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue name = 14028770 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/config/name"];
  if (this->has_name()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  // .ywrapper.UintValue port_priority = 140449623 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/config/port-priority"];
  if (this->has_port_priority()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->port_priority_);
  }

  // .ywrapper.UintValue cost = 231951496 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/config/cost"];
  if (this->has_cost()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->cost_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config)
    MergeFrom(*source);
  }
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::MergeFrom(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
  if (from.has_port_priority()) {
    mutable_port_priority()->::ywrapper::UintValue::MergeFrom(from.port_priority());
  }
  if (from.has_cost()) {
    mutable_cost()->::ywrapper::UintValue::MergeFrom(from.cost());
  }
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::CopyFrom(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::IsInitialized() const {
  return true;
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::Swap(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::InternalSwap(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config* other) {
  using std::swap;
  swap(name_, other->name_);
  swap(port_priority_, other->port_priority_);
  swap(cost_, other->cost_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters_default_instance_._instance.get_mutable()->bpdu_received_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters_default_instance_._instance.get_mutable()->bpdu_sent_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::clear_bpdu_received() {
  if (GetArenaNoVirtual() == NULL && bpdu_received_ != NULL) {
    delete bpdu_received_;
  }
  bpdu_received_ = NULL;
}
void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::clear_bpdu_sent() {
  if (GetArenaNoVirtual() == NULL && bpdu_sent_ != NULL) {
    delete bpdu_sent_;
  }
  bpdu_sent_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::kBpduReceivedFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::kBpduSentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters)
}
Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bpdu_received()) {
    bpdu_received_ = new ::ywrapper::UintValue(*from.bpdu_received_);
  } else {
    bpdu_received_ = NULL;
  }
  if (from.has_bpdu_sent()) {
    bpdu_sent_ = new ::ywrapper::UintValue(*from.bpdu_sent_);
  } else {
    bpdu_sent_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters)
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::SharedCtor() {
  ::memset(&bpdu_received_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bpdu_sent_) -
      reinterpret_cast<char*>(&bpdu_received_)) + sizeof(bpdu_sent_));
  _cached_size_ = 0;
}

Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::~Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters)
  SharedDtor();
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::SharedDtor() {
  if (this != internal_default_instance()) delete bpdu_received_;
  if (this != internal_default_instance()) delete bpdu_sent_;
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters& Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters();
  return *internal_default_instance();
}

Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::New(::google::protobuf::Arena* arena) const {
  Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters* n = new Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && bpdu_received_ != NULL) {
    delete bpdu_received_;
  }
  bpdu_received_ = NULL;
  if (GetArenaNoVirtual() == NULL && bpdu_sent_ != NULL) {
    delete bpdu_sent_;
  }
  bpdu_sent_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1485997378u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue bpdu_received = 63622203 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/counters/bpdu-received"];
      case 63622203: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 508977626 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bpdu_received()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue bpdu_sent = 185749672 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/counters/bpdu-sent"];
      case 185749672: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 1485997378 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bpdu_sent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters)
  return false;
#undef DO_
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue bpdu_received = 63622203 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/counters/bpdu-received"];
  if (this->has_bpdu_received()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      63622203, *this->bpdu_received_, output);
  }

  // .ywrapper.UintValue bpdu_sent = 185749672 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/counters/bpdu-sent"];
  if (this->has_bpdu_sent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      185749672, *this->bpdu_sent_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters)
}

::google::protobuf::uint8* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue bpdu_received = 63622203 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/counters/bpdu-received"];
  if (this->has_bpdu_received()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        63622203, *this->bpdu_received_, deterministic, target);
  }

  // .ywrapper.UintValue bpdu_sent = 185749672 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/counters/bpdu-sent"];
  if (this->has_bpdu_sent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        185749672, *this->bpdu_sent_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters)
  return target;
}

size_t Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue bpdu_received = 63622203 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/counters/bpdu-received"];
  if (this->has_bpdu_received()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bpdu_received_);
  }

  // .ywrapper.UintValue bpdu_sent = 185749672 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/counters/bpdu-sent"];
  if (this->has_bpdu_sent()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bpdu_sent_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters)
    MergeFrom(*source);
  }
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::MergeFrom(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bpdu_received()) {
    mutable_bpdu_received()->::ywrapper::UintValue::MergeFrom(from.bpdu_received());
  }
  if (from.has_bpdu_sent()) {
    mutable_bpdu_sent()->::ywrapper::UintValue::MergeFrom(from.bpdu_sent());
  }
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::CopyFrom(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::IsInitialized() const {
  return true;
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::Swap(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::InternalSwap(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters* other) {
  using std::swap;
  swap(bpdu_received_, other->bpdu_received_);
  swap(bpdu_sent_, other->bpdu_sent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_default_instance_._instance.get_mutable()->cost_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_default_instance_._instance.get_mutable()->counters_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters*>(
      ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_default_instance_._instance.get_mutable()->designated_bridge_address_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_default_instance_._instance.get_mutable()->designated_bridge_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_default_instance_._instance.get_mutable()->designated_cost_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_default_instance_._instance.get_mutable()->designated_port_num_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_default_instance_._instance.get_mutable()->designated_port_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_default_instance_._instance.get_mutable()->designated_root_address_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_default_instance_._instance.get_mutable()->designated_root_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_default_instance_._instance.get_mutable()->forward_transisitions_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_default_instance_._instance.get_mutable()->port_num_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_default_instance_._instance.get_mutable()->port_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::clear_cost() {
  if (GetArenaNoVirtual() == NULL && cost_ != NULL) {
    delete cost_;
  }
  cost_ = NULL;
}
void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::clear_designated_bridge_address() {
  if (GetArenaNoVirtual() == NULL && designated_bridge_address_ != NULL) {
    delete designated_bridge_address_;
  }
  designated_bridge_address_ = NULL;
}
void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::clear_designated_bridge_priority() {
  if (GetArenaNoVirtual() == NULL && designated_bridge_priority_ != NULL) {
    delete designated_bridge_priority_;
  }
  designated_bridge_priority_ = NULL;
}
void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::clear_designated_cost() {
  if (GetArenaNoVirtual() == NULL && designated_cost_ != NULL) {
    delete designated_cost_;
  }
  designated_cost_ = NULL;
}
void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::clear_designated_port_num() {
  if (GetArenaNoVirtual() == NULL && designated_port_num_ != NULL) {
    delete designated_port_num_;
  }
  designated_port_num_ = NULL;
}
void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::clear_designated_port_priority() {
  if (GetArenaNoVirtual() == NULL && designated_port_priority_ != NULL) {
    delete designated_port_priority_;
  }
  designated_port_priority_ = NULL;
}
void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::clear_designated_root_address() {
  if (GetArenaNoVirtual() == NULL && designated_root_address_ != NULL) {
    delete designated_root_address_;
  }
  designated_root_address_ = NULL;
}
void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::clear_designated_root_priority() {
  if (GetArenaNoVirtual() == NULL && designated_root_priority_ != NULL) {
    delete designated_root_priority_;
  }
  designated_root_priority_ = NULL;
}
void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::clear_forward_transisitions() {
  if (GetArenaNoVirtual() == NULL && forward_transisitions_ != NULL) {
    delete forward_transisitions_;
  }
  forward_transisitions_ = NULL;
}
void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::clear_port_num() {
  if (GetArenaNoVirtual() == NULL && port_num_ != NULL) {
    delete port_num_;
  }
  port_num_ = NULL;
}
void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::clear_port_priority() {
  if (GetArenaNoVirtual() == NULL && port_priority_ != NULL) {
    delete port_priority_;
  }
  port_priority_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::kCostFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::kCountersFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::kDesignatedBridgeAddressFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::kDesignatedBridgePriorityFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::kDesignatedCostFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::kDesignatedPortNumFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::kDesignatedPortPriorityFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::kDesignatedRootAddressFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::kDesignatedRootPriorityFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::kForwardTransisitionsFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::kNameFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::kPortNumFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::kPortPriorityFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::kPortStateFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::kRoleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State)
}
Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_designated_cost()) {
    designated_cost_ = new ::ywrapper::UintValue(*from.designated_cost_);
  } else {
    designated_cost_ = NULL;
  }
  if (from.has_port_priority()) {
    port_priority_ = new ::ywrapper::UintValue(*from.port_priority_);
  } else {
    port_priority_ = NULL;
  }
  if (from.has_designated_port_priority()) {
    designated_port_priority_ = new ::ywrapper::UintValue(*from.designated_port_priority_);
  } else {
    designated_port_priority_ = NULL;
  }
  if (from.has_cost()) {
    cost_ = new ::ywrapper::UintValue(*from.cost_);
  } else {
    cost_ = NULL;
  }
  if (from.has_designated_bridge_address()) {
    designated_bridge_address_ = new ::ywrapper::StringValue(*from.designated_bridge_address_);
  } else {
    designated_bridge_address_ = NULL;
  }
  if (from.has_designated_root_priority()) {
    designated_root_priority_ = new ::ywrapper::UintValue(*from.designated_root_priority_);
  } else {
    designated_root_priority_ = NULL;
  }
  if (from.has_designated_root_address()) {
    designated_root_address_ = new ::ywrapper::StringValue(*from.designated_root_address_);
  } else {
    designated_root_address_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_designated_port_num()) {
    designated_port_num_ = new ::ywrapper::UintValue(*from.designated_port_num_);
  } else {
    designated_port_num_ = NULL;
  }
  if (from.has_forward_transisitions()) {
    forward_transisitions_ = new ::ywrapper::UintValue(*from.forward_transisitions_);
  } else {
    forward_transisitions_ = NULL;
  }
  if (from.has_designated_bridge_priority()) {
    designated_bridge_priority_ = new ::ywrapper::UintValue(*from.designated_bridge_priority_);
  } else {
    designated_bridge_priority_ = NULL;
  }
  if (from.has_port_num()) {
    port_num_ = new ::ywrapper::UintValue(*from.port_num_);
  } else {
    port_num_ = NULL;
  }
  if (from.has_counters()) {
    counters_ = new ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters(*from.counters_);
  } else {
    counters_ = NULL;
  }
  ::memcpy(&port_state_, &from.port_state_,
    static_cast<size_t>(reinterpret_cast<char*>(&role_) -
    reinterpret_cast<char*>(&port_state_)) + sizeof(role_));
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State)
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::SharedCtor() {
  ::memset(&designated_cost_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&role_) -
      reinterpret_cast<char*>(&designated_cost_)) + sizeof(role_));
  _cached_size_ = 0;
}

Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::~Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State)
  SharedDtor();
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::SharedDtor() {
  if (this != internal_default_instance()) delete designated_cost_;
  if (this != internal_default_instance()) delete port_priority_;
  if (this != internal_default_instance()) delete designated_port_priority_;
  if (this != internal_default_instance()) delete cost_;
  if (this != internal_default_instance()) delete designated_bridge_address_;
  if (this != internal_default_instance()) delete designated_root_priority_;
  if (this != internal_default_instance()) delete designated_root_address_;
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete designated_port_num_;
  if (this != internal_default_instance()) delete forward_transisitions_;
  if (this != internal_default_instance()) delete designated_bridge_priority_;
  if (this != internal_default_instance()) delete port_num_;
  if (this != internal_default_instance()) delete counters_;
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State& Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State();
  return *internal_default_instance();
}

Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::New(::google::protobuf::Arena* arena) const {
  Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State* n = new Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && designated_cost_ != NULL) {
    delete designated_cost_;
  }
  designated_cost_ = NULL;
  if (GetArenaNoVirtual() == NULL && port_priority_ != NULL) {
    delete port_priority_;
  }
  port_priority_ = NULL;
  if (GetArenaNoVirtual() == NULL && designated_port_priority_ != NULL) {
    delete designated_port_priority_;
  }
  designated_port_priority_ = NULL;
  if (GetArenaNoVirtual() == NULL && cost_ != NULL) {
    delete cost_;
  }
  cost_ = NULL;
  if (GetArenaNoVirtual() == NULL && designated_bridge_address_ != NULL) {
    delete designated_bridge_address_;
  }
  designated_bridge_address_ = NULL;
  if (GetArenaNoVirtual() == NULL && designated_root_priority_ != NULL) {
    delete designated_root_priority_;
  }
  designated_root_priority_ = NULL;
  if (GetArenaNoVirtual() == NULL && designated_root_address_ != NULL) {
    delete designated_root_address_;
  }
  designated_root_address_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && designated_port_num_ != NULL) {
    delete designated_port_num_;
  }
  designated_port_num_ = NULL;
  if (GetArenaNoVirtual() == NULL && forward_transisitions_ != NULL) {
    delete forward_transisitions_;
  }
  forward_transisitions_ = NULL;
  if (GetArenaNoVirtual() == NULL && designated_bridge_priority_ != NULL) {
    delete designated_bridge_priority_;
  }
  designated_bridge_priority_ = NULL;
  if (GetArenaNoVirtual() == NULL && port_num_ != NULL) {
    delete port_num_;
  }
  port_num_ = NULL;
  if (GetArenaNoVirtual() == NULL && counters_ != NULL) {
    delete counters_;
  }
  counters_ = NULL;
  ::memset(&port_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&role_) -
      reinterpret_cast<char*>(&port_state_)) + sizeof(role_));
  _internal_metadata_.Clear();
}

bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4160419162u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue designated_cost = 24519636 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-cost"];
      case 24519636: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 196157090 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_designated_cost()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue port_priority = 32672910 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/port-priority"];
      case 32672910: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 261383282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_port_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue designated_port_priority = 153721331 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-port-priority"];
      case 153721331: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 1229770650 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_designated_port_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue cost = 159865123 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/cost"];
      case 159865123: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 1278920986 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cost()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue designated_bridge_address = 175515179 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-bridge-address"];
      case 175515179: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 1404121434 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_designated_bridge_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue designated_root_priority = 198628868 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-root-priority"];
      case 198628868: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 1589030946 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_designated_root_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue designated_root_address = 222851020 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-root-address"];
      case 222851020: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 1782808162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_designated_root_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTSTATE port_state = 253637881 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/port-state"];
      case 253637881: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 2029103048 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_port_state(static_cast< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTSTATE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTROLE role = 293381284 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/role"];
      case 293381284: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 2347050272 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_role(static_cast< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTROLE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue name = 294895429 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/name"];
      case 294895429: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 2359163434 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue designated_port_num = 305730017 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-port-num"];
      case 305730017: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 2445840138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_designated_port_num()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue forward_transisitions = 358824040 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/forward-transisitions"];
      case 358824040: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 2870592322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_forward_transisitions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue designated_bridge_priority = 411036809 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-bridge-priority"];
      case 411036809: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 3288294474 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_designated_bridge_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue port_num = 485847738 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/port-num"];
      case 485847738: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 3886781906 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_port_num()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters counters = 520052395 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/counters"];
      case 520052395: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 4160419162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_counters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State)
  return false;
#undef DO_
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue designated_cost = 24519636 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-cost"];
  if (this->has_designated_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      24519636, *this->designated_cost_, output);
  }

  // .ywrapper.UintValue port_priority = 32672910 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/port-priority"];
  if (this->has_port_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      32672910, *this->port_priority_, output);
  }

  // .ywrapper.UintValue designated_port_priority = 153721331 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-port-priority"];
  if (this->has_designated_port_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      153721331, *this->designated_port_priority_, output);
  }

  // .ywrapper.UintValue cost = 159865123 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/cost"];
  if (this->has_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      159865123, *this->cost_, output);
  }

  // .ywrapper.StringValue designated_bridge_address = 175515179 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-bridge-address"];
  if (this->has_designated_bridge_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      175515179, *this->designated_bridge_address_, output);
  }

  // .ywrapper.UintValue designated_root_priority = 198628868 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-root-priority"];
  if (this->has_designated_root_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      198628868, *this->designated_root_priority_, output);
  }

  // .ywrapper.StringValue designated_root_address = 222851020 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-root-address"];
  if (this->has_designated_root_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      222851020, *this->designated_root_address_, output);
  }

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTSTATE port_state = 253637881 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/port-state"];
  if (this->port_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      253637881, this->port_state(), output);
  }

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTROLE role = 293381284 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/role"];
  if (this->role() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      293381284, this->role(), output);
  }

  // .ywrapper.StringValue name = 294895429 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      294895429, *this->name_, output);
  }

  // .ywrapper.UintValue designated_port_num = 305730017 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-port-num"];
  if (this->has_designated_port_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      305730017, *this->designated_port_num_, output);
  }

  // .ywrapper.UintValue forward_transisitions = 358824040 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/forward-transisitions"];
  if (this->has_forward_transisitions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      358824040, *this->forward_transisitions_, output);
  }

  // .ywrapper.UintValue designated_bridge_priority = 411036809 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-bridge-priority"];
  if (this->has_designated_bridge_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      411036809, *this->designated_bridge_priority_, output);
  }

  // .ywrapper.UintValue port_num = 485847738 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/port-num"];
  if (this->has_port_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      485847738, *this->port_num_, output);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters counters = 520052395 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/counters"];
  if (this->has_counters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      520052395, *this->counters_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State)
}

::google::protobuf::uint8* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue designated_cost = 24519636 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-cost"];
  if (this->has_designated_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        24519636, *this->designated_cost_, deterministic, target);
  }

  // .ywrapper.UintValue port_priority = 32672910 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/port-priority"];
  if (this->has_port_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        32672910, *this->port_priority_, deterministic, target);
  }

  // .ywrapper.UintValue designated_port_priority = 153721331 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-port-priority"];
  if (this->has_designated_port_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        153721331, *this->designated_port_priority_, deterministic, target);
  }

  // .ywrapper.UintValue cost = 159865123 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/cost"];
  if (this->has_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        159865123, *this->cost_, deterministic, target);
  }

  // .ywrapper.StringValue designated_bridge_address = 175515179 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-bridge-address"];
  if (this->has_designated_bridge_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        175515179, *this->designated_bridge_address_, deterministic, target);
  }

  // .ywrapper.UintValue designated_root_priority = 198628868 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-root-priority"];
  if (this->has_designated_root_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        198628868, *this->designated_root_priority_, deterministic, target);
  }

  // .ywrapper.StringValue designated_root_address = 222851020 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-root-address"];
  if (this->has_designated_root_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        222851020, *this->designated_root_address_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTSTATE port_state = 253637881 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/port-state"];
  if (this->port_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      253637881, this->port_state(), target);
  }

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTROLE role = 293381284 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/role"];
  if (this->role() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      293381284, this->role(), target);
  }

  // .ywrapper.StringValue name = 294895429 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        294895429, *this->name_, deterministic, target);
  }

  // .ywrapper.UintValue designated_port_num = 305730017 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-port-num"];
  if (this->has_designated_port_num()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        305730017, *this->designated_port_num_, deterministic, target);
  }

  // .ywrapper.UintValue forward_transisitions = 358824040 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/forward-transisitions"];
  if (this->has_forward_transisitions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        358824040, *this->forward_transisitions_, deterministic, target);
  }

  // .ywrapper.UintValue designated_bridge_priority = 411036809 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-bridge-priority"];
  if (this->has_designated_bridge_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        411036809, *this->designated_bridge_priority_, deterministic, target);
  }

  // .ywrapper.UintValue port_num = 485847738 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/port-num"];
  if (this->has_port_num()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        485847738, *this->port_num_, deterministic, target);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters counters = 520052395 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/counters"];
  if (this->has_counters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        520052395, *this->counters_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State)
  return target;
}

size_t Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue designated_cost = 24519636 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-cost"];
  if (this->has_designated_cost()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->designated_cost_);
  }

  // .ywrapper.UintValue port_priority = 32672910 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/port-priority"];
  if (this->has_port_priority()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->port_priority_);
  }

  // .ywrapper.UintValue designated_port_priority = 153721331 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-port-priority"];
  if (this->has_designated_port_priority()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->designated_port_priority_);
  }

  // .ywrapper.UintValue cost = 159865123 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/cost"];
  if (this->has_cost()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->cost_);
  }

  // .ywrapper.StringValue designated_bridge_address = 175515179 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-bridge-address"];
  if (this->has_designated_bridge_address()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->designated_bridge_address_);
  }

  // .ywrapper.UintValue designated_root_priority = 198628868 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-root-priority"];
  if (this->has_designated_root_priority()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->designated_root_priority_);
  }

  // .ywrapper.StringValue designated_root_address = 222851020 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-root-address"];
  if (this->has_designated_root_address()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->designated_root_address_);
  }

  // .ywrapper.StringValue name = 294895429 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/name"];
  if (this->has_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  // .ywrapper.UintValue designated_port_num = 305730017 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-port-num"];
  if (this->has_designated_port_num()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->designated_port_num_);
  }

  // .ywrapper.UintValue forward_transisitions = 358824040 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/forward-transisitions"];
  if (this->has_forward_transisitions()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->forward_transisitions_);
  }

  // .ywrapper.UintValue designated_bridge_priority = 411036809 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-bridge-priority"];
  if (this->has_designated_bridge_priority()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->designated_bridge_priority_);
  }

  // .ywrapper.UintValue port_num = 485847738 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/port-num"];
  if (this->has_port_num()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->port_num_);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters counters = 520052395 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/counters"];
  if (this->has_counters()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->counters_);
  }

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTSTATE port_state = 253637881 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/port-state"];
  if (this->port_state() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->port_state());
  }

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTROLE role = 293381284 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/role"];
  if (this->role() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->role());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State)
    MergeFrom(*source);
  }
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::MergeFrom(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_designated_cost()) {
    mutable_designated_cost()->::ywrapper::UintValue::MergeFrom(from.designated_cost());
  }
  if (from.has_port_priority()) {
    mutable_port_priority()->::ywrapper::UintValue::MergeFrom(from.port_priority());
  }
  if (from.has_designated_port_priority()) {
    mutable_designated_port_priority()->::ywrapper::UintValue::MergeFrom(from.designated_port_priority());
  }
  if (from.has_cost()) {
    mutable_cost()->::ywrapper::UintValue::MergeFrom(from.cost());
  }
  if (from.has_designated_bridge_address()) {
    mutable_designated_bridge_address()->::ywrapper::StringValue::MergeFrom(from.designated_bridge_address());
  }
  if (from.has_designated_root_priority()) {
    mutable_designated_root_priority()->::ywrapper::UintValue::MergeFrom(from.designated_root_priority());
  }
  if (from.has_designated_root_address()) {
    mutable_designated_root_address()->::ywrapper::StringValue::MergeFrom(from.designated_root_address());
  }
  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
  if (from.has_designated_port_num()) {
    mutable_designated_port_num()->::ywrapper::UintValue::MergeFrom(from.designated_port_num());
  }
  if (from.has_forward_transisitions()) {
    mutable_forward_transisitions()->::ywrapper::UintValue::MergeFrom(from.forward_transisitions());
  }
  if (from.has_designated_bridge_priority()) {
    mutable_designated_bridge_priority()->::ywrapper::UintValue::MergeFrom(from.designated_bridge_priority());
  }
  if (from.has_port_num()) {
    mutable_port_num()->::ywrapper::UintValue::MergeFrom(from.port_num());
  }
  if (from.has_counters()) {
    mutable_counters()->::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::MergeFrom(from.counters());
  }
  if (from.port_state() != 0) {
    set_port_state(from.port_state());
  }
  if (from.role() != 0) {
    set_role(from.role());
  }
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::CopyFrom(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::IsInitialized() const {
  return true;
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::Swap(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::InternalSwap(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State* other) {
  using std::swap;
  swap(designated_cost_, other->designated_cost_);
  swap(port_priority_, other->port_priority_);
  swap(designated_port_priority_, other->designated_port_priority_);
  swap(cost_, other->cost_);
  swap(designated_bridge_address_, other->designated_bridge_address_);
  swap(designated_root_priority_, other->designated_root_priority_);
  swap(designated_root_address_, other->designated_root_address_);
  swap(name_, other->name_);
  swap(designated_port_num_, other->designated_port_num_);
  swap(forward_transisitions_, other->forward_transisitions_);
  swap(designated_bridge_priority_, other->designated_bridge_priority_);
  swap(port_num_, other->port_num_);
  swap(counters_, other->counters_);
  swap(port_state_, other->port_state_);
  swap(role_, other->role_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config*>(
      ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State*>(
      ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::kConfigFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface)
}
Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface)
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&state_)) + sizeof(config_));
  _cached_size_ = 0;
}

Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::~Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface)
  SharedDtor();
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface& Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface();
  return *internal_default_instance();
}

Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::New(::google::protobuf::Arena* arena) const {
  Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface* n = new Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3993374914u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State state = 135114417 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state"];
      case 135114417: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 1080915338 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config config = 499171864 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/config"];
      case 499171864: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 3993374914 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface)
  return false;
#undef DO_
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State state = 135114417 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      135114417, *this->state_, output);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config config = 499171864 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      499171864, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface)
}

::google::protobuf::uint8* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State state = 135114417 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        135114417, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config config = 499171864 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        499171864, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface)
  return target;
}

size_t Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State state = 135114417 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config config = 499171864 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface)
    MergeFrom(*source);
  }
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::MergeFrom(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::MergeFrom(from.config());
  }
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::CopyFrom(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::IsInitialized() const {
  return true;
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::Swap(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::InternalSwap(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey_default_instance_._instance.get_mutable()->interface_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface*>(
      ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::kNameFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::kInterfaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey)
}
Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey(const Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_interface()) {
    interface_ = new ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface(*from.interface_);
  } else {
    interface_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey)
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interface_ = NULL;
  _cached_size_ = 0;
}

Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::~Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey)
  SharedDtor();
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete interface_;
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey& Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey();
  return *internal_default_instance();
}

Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey* Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::New(::google::protobuf::Arena* arena) const {
  Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey* n = new Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/name"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface interface = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey)
  return false;
#undef DO_
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/name"];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface interface = 2;
  if (this->has_interface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->interface_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey)
}

::google::protobuf::uint8* Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/name"];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface interface = 2;
  if (this->has_interface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->interface_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey)
  return target;
}

size_t Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/name"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface interface = 2;
  if (this->has_interface()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interface_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey)
    MergeFrom(*source);
  }
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::MergeFrom(const Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_interface()) {
    mutable_interface()->::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::MergeFrom(from.interface());
  }
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::CopyFrom(const Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::IsInitialized() const {
  return true;
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::Swap(Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::InternalSwap(Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(interface_, other->interface_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Mstp_MstInstances_MstInstance_Interfaces::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Mstp_MstInstances_MstInstance_Interfaces::kInterfaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Mstp_MstInstances_MstInstance_Interfaces::Stp_Mstp_MstInstances_MstInstance_Interfaces()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces)
}
Stp_Mstp_MstInstances_MstInstance_Interfaces::Stp_Mstp_MstInstances_MstInstance_Interfaces(const Stp_Mstp_MstInstances_MstInstance_Interfaces& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      interface_(from.interface_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces)
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces::SharedCtor() {
  _cached_size_ = 0;
}

Stp_Mstp_MstInstances_MstInstance_Interfaces::~Stp_Mstp_MstInstances_MstInstance_Interfaces() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces)
  SharedDtor();
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces::SharedDtor() {
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Mstp_MstInstances_MstInstance_Interfaces::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Mstp_MstInstances_MstInstance_Interfaces& Stp_Mstp_MstInstances_MstInstance_Interfaces::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces();
  return *internal_default_instance();
}

Stp_Mstp_MstInstances_MstInstance_Interfaces* Stp_Mstp_MstInstances_MstInstance_Interfaces::New(::google::protobuf::Arena* arena) const {
  Stp_Mstp_MstInstances_MstInstance_Interfaces* n = new Stp_Mstp_MstInstances_MstInstance_Interfaces;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  interface_.Clear();
  _internal_metadata_.Clear();
}

bool Stp_Mstp_MstInstances_MstInstance_Interfaces::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(664250426u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey interface = 83031303 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface"];
      case 83031303: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 664250426 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_interface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces)
  return false;
#undef DO_
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey interface = 83031303 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interface_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      83031303, this->interface(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces)
}

::google::protobuf::uint8* Stp_Mstp_MstInstances_MstInstance_Interfaces::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey interface = 83031303 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interface_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        83031303, this->interface(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces)
  return target;
}

size_t Stp_Mstp_MstInstances_MstInstance_Interfaces::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey interface = 83031303 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface"];
  {
    unsigned int count = static_cast<unsigned int>(this->interface_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->interface(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Mstp_MstInstances_MstInstance_Interfaces* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Mstp_MstInstances_MstInstance_Interfaces>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces)
    MergeFrom(*source);
  }
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces::MergeFrom(const Stp_Mstp_MstInstances_MstInstance_Interfaces& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  interface_.MergeFrom(from.interface_);
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces::CopyFrom(const Stp_Mstp_MstInstances_MstInstance_Interfaces& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Mstp_MstInstances_MstInstance_Interfaces::IsInitialized() const {
  return true;
}

void Stp_Mstp_MstInstances_MstInstance_Interfaces::Swap(Stp_Mstp_MstInstances_MstInstance_Interfaces* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Mstp_MstInstances_MstInstance_Interfaces::InternalSwap(Stp_Mstp_MstInstances_MstInstance_Interfaces* other) {
  using std::swap;
  interface_.InternalSwap(&other->interface_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Mstp_MstInstances_MstInstance_Interfaces::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::kVlanStringFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::kVlanUint64FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::Stp_Mstp_MstInstances_MstInstance_State_VlanUnion()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_State_VlanUnion();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion)
}
Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::Stp_Mstp_MstInstances_MstInstance_State_VlanUnion(const Stp_Mstp_MstInstances_MstInstance_State_VlanUnion& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vlan_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vlan_string().size() > 0) {
    vlan_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vlan_string_);
  }
  vlan_uint64_ = from.vlan_uint64_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion)
}

void Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::SharedCtor() {
  vlan_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vlan_uint64_ = GOOGLE_ULONGLONG(0);
  _cached_size_ = 0;
}

Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::~Stp_Mstp_MstInstances_MstInstance_State_VlanUnion() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion)
  SharedDtor();
}

void Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::SharedDtor() {
  vlan_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Mstp_MstInstances_MstInstance_State_VlanUnion& Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_State_VlanUnion();
  return *internal_default_instance();
}

Stp_Mstp_MstInstances_MstInstance_State_VlanUnion* Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::New(::google::protobuf::Arena* arena) const {
  Stp_Mstp_MstInstances_MstInstance_State_VlanUnion* n = new Stp_Mstp_MstInstances_MstInstance_State_VlanUnion;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vlan_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vlan_uint64_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3241979992u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string vlan_string = 26258314;
      case 26258314: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 210066514 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vlan_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->vlan_string().data(), static_cast<int>(this->vlan_string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion.vlan_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 vlan_uint64 = 405247499;
      case 405247499: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 3241979992 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &vlan_uint64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion)
  return false;
#undef DO_
}

void Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string vlan_string = 26258314;
  if (this->vlan_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vlan_string().data(), static_cast<int>(this->vlan_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion.vlan_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      26258314, this->vlan_string(), output);
  }

  // uint64 vlan_uint64 = 405247499;
  if (this->vlan_uint64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(405247499, this->vlan_uint64(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion)
}

::google::protobuf::uint8* Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string vlan_string = 26258314;
  if (this->vlan_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->vlan_string().data(), static_cast<int>(this->vlan_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion.vlan_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        26258314, this->vlan_string(), target);
  }

  // uint64 vlan_uint64 = 405247499;
  if (this->vlan_uint64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(405247499, this->vlan_uint64(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion)
  return target;
}

size_t Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string vlan_string = 26258314;
  if (this->vlan_string().size() > 0) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->vlan_string());
  }

  // uint64 vlan_uint64 = 405247499;
  if (this->vlan_uint64() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->vlan_uint64());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Mstp_MstInstances_MstInstance_State_VlanUnion* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Mstp_MstInstances_MstInstance_State_VlanUnion>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion)
    MergeFrom(*source);
  }
}

void Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::MergeFrom(const Stp_Mstp_MstInstances_MstInstance_State_VlanUnion& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vlan_string().size() > 0) {

    vlan_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vlan_string_);
  }
  if (from.vlan_uint64() != 0) {
    set_vlan_uint64(from.vlan_uint64());
  }
}

void Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::CopyFrom(const Stp_Mstp_MstInstances_MstInstance_State_VlanUnion& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::IsInitialized() const {
  return true;
}

void Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::Swap(Stp_Mstp_MstInstances_MstInstance_State_VlanUnion* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::InternalSwap(Stp_Mstp_MstInstances_MstInstance_State_VlanUnion* other) {
  using std::swap;
  vlan_string_.Swap(&other->vlan_string_);
  swap(vlan_uint64_, other->vlan_uint64_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Mstp_MstInstances_MstInstance_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_State_default_instance_._instance.get_mutable()->bridge_address_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_State_default_instance_._instance.get_mutable()->bridge_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_State_default_instance_._instance.get_mutable()->designated_root_address_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_State_default_instance_._instance.get_mutable()->designated_root_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_State_default_instance_._instance.get_mutable()->hold_time_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_State_default_instance_._instance.get_mutable()->mst_id_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_State_default_instance_._instance.get_mutable()->root_cost_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_State_default_instance_._instance.get_mutable()->root_port_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_State_default_instance_._instance.get_mutable()->time_since_topology_change_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_State_default_instance_._instance.get_mutable()->topology_changes_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Stp_Mstp_MstInstances_MstInstance_State::clear_bridge_address() {
  if (GetArenaNoVirtual() == NULL && bridge_address_ != NULL) {
    delete bridge_address_;
  }
  bridge_address_ = NULL;
}
void Stp_Mstp_MstInstances_MstInstance_State::clear_bridge_priority() {
  if (GetArenaNoVirtual() == NULL && bridge_priority_ != NULL) {
    delete bridge_priority_;
  }
  bridge_priority_ = NULL;
}
void Stp_Mstp_MstInstances_MstInstance_State::clear_designated_root_address() {
  if (GetArenaNoVirtual() == NULL && designated_root_address_ != NULL) {
    delete designated_root_address_;
  }
  designated_root_address_ = NULL;
}
void Stp_Mstp_MstInstances_MstInstance_State::clear_designated_root_priority() {
  if (GetArenaNoVirtual() == NULL && designated_root_priority_ != NULL) {
    delete designated_root_priority_;
  }
  designated_root_priority_ = NULL;
}
void Stp_Mstp_MstInstances_MstInstance_State::clear_hold_time() {
  if (GetArenaNoVirtual() == NULL && hold_time_ != NULL) {
    delete hold_time_;
  }
  hold_time_ = NULL;
}
void Stp_Mstp_MstInstances_MstInstance_State::clear_mst_id() {
  if (GetArenaNoVirtual() == NULL && mst_id_ != NULL) {
    delete mst_id_;
  }
  mst_id_ = NULL;
}
void Stp_Mstp_MstInstances_MstInstance_State::clear_root_cost() {
  if (GetArenaNoVirtual() == NULL && root_cost_ != NULL) {
    delete root_cost_;
  }
  root_cost_ = NULL;
}
void Stp_Mstp_MstInstances_MstInstance_State::clear_root_port() {
  if (GetArenaNoVirtual() == NULL && root_port_ != NULL) {
    delete root_port_;
  }
  root_port_ = NULL;
}
void Stp_Mstp_MstInstances_MstInstance_State::clear_time_since_topology_change() {
  if (GetArenaNoVirtual() == NULL && time_since_topology_change_ != NULL) {
    delete time_since_topology_change_;
  }
  time_since_topology_change_ = NULL;
}
void Stp_Mstp_MstInstances_MstInstance_State::clear_topology_changes() {
  if (GetArenaNoVirtual() == NULL && topology_changes_ != NULL) {
    delete topology_changes_;
  }
  topology_changes_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Mstp_MstInstances_MstInstance_State::kBridgeAddressFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_State::kBridgePriorityFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_State::kDesignatedRootAddressFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_State::kDesignatedRootPriorityFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_State::kHoldTimeFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_State::kMstIdFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_State::kRootCostFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_State::kRootPortFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_State::kTimeSinceTopologyChangeFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_State::kTopologyChangesFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance_State::kVlanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Mstp_MstInstances_MstInstance_State::Stp_Mstp_MstInstances_MstInstance_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State)
}
Stp_Mstp_MstInstances_MstInstance_State::Stp_Mstp_MstInstances_MstInstance_State(const Stp_Mstp_MstInstances_MstInstance_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      vlan_(from.vlan_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_designated_root_address()) {
    designated_root_address_ = new ::ywrapper::StringValue(*from.designated_root_address_);
  } else {
    designated_root_address_ = NULL;
  }
  if (from.has_root_cost()) {
    root_cost_ = new ::ywrapper::UintValue(*from.root_cost_);
  } else {
    root_cost_ = NULL;
  }
  if (from.has_hold_time()) {
    hold_time_ = new ::ywrapper::UintValue(*from.hold_time_);
  } else {
    hold_time_ = NULL;
  }
  if (from.has_topology_changes()) {
    topology_changes_ = new ::ywrapper::UintValue(*from.topology_changes_);
  } else {
    topology_changes_ = NULL;
  }
  if (from.has_designated_root_priority()) {
    designated_root_priority_ = new ::ywrapper::UintValue(*from.designated_root_priority_);
  } else {
    designated_root_priority_ = NULL;
  }
  if (from.has_bridge_priority()) {
    bridge_priority_ = new ::ywrapper::UintValue(*from.bridge_priority_);
  } else {
    bridge_priority_ = NULL;
  }
  if (from.has_root_port()) {
    root_port_ = new ::ywrapper::UintValue(*from.root_port_);
  } else {
    root_port_ = NULL;
  }
  if (from.has_mst_id()) {
    mst_id_ = new ::ywrapper::UintValue(*from.mst_id_);
  } else {
    mst_id_ = NULL;
  }
  if (from.has_time_since_topology_change()) {
    time_since_topology_change_ = new ::ywrapper::UintValue(*from.time_since_topology_change_);
  } else {
    time_since_topology_change_ = NULL;
  }
  if (from.has_bridge_address()) {
    bridge_address_ = new ::ywrapper::StringValue(*from.bridge_address_);
  } else {
    bridge_address_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State)
}

void Stp_Mstp_MstInstances_MstInstance_State::SharedCtor() {
  ::memset(&designated_root_address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bridge_address_) -
      reinterpret_cast<char*>(&designated_root_address_)) + sizeof(bridge_address_));
  _cached_size_ = 0;
}

Stp_Mstp_MstInstances_MstInstance_State::~Stp_Mstp_MstInstances_MstInstance_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State)
  SharedDtor();
}

void Stp_Mstp_MstInstances_MstInstance_State::SharedDtor() {
  if (this != internal_default_instance()) delete designated_root_address_;
  if (this != internal_default_instance()) delete root_cost_;
  if (this != internal_default_instance()) delete hold_time_;
  if (this != internal_default_instance()) delete topology_changes_;
  if (this != internal_default_instance()) delete designated_root_priority_;
  if (this != internal_default_instance()) delete bridge_priority_;
  if (this != internal_default_instance()) delete root_port_;
  if (this != internal_default_instance()) delete mst_id_;
  if (this != internal_default_instance()) delete time_since_topology_change_;
  if (this != internal_default_instance()) delete bridge_address_;
}

void Stp_Mstp_MstInstances_MstInstance_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Mstp_MstInstances_MstInstance_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Mstp_MstInstances_MstInstance_State& Stp_Mstp_MstInstances_MstInstance_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_State();
  return *internal_default_instance();
}

Stp_Mstp_MstInstances_MstInstance_State* Stp_Mstp_MstInstances_MstInstance_State::New(::google::protobuf::Arena* arena) const {
  Stp_Mstp_MstInstances_MstInstance_State* n = new Stp_Mstp_MstInstances_MstInstance_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Mstp_MstInstances_MstInstance_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vlan_.Clear();
  if (GetArenaNoVirtual() == NULL && designated_root_address_ != NULL) {
    delete designated_root_address_;
  }
  designated_root_address_ = NULL;
  if (GetArenaNoVirtual() == NULL && root_cost_ != NULL) {
    delete root_cost_;
  }
  root_cost_ = NULL;
  if (GetArenaNoVirtual() == NULL && hold_time_ != NULL) {
    delete hold_time_;
  }
  hold_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && topology_changes_ != NULL) {
    delete topology_changes_;
  }
  topology_changes_ = NULL;
  if (GetArenaNoVirtual() == NULL && designated_root_priority_ != NULL) {
    delete designated_root_priority_;
  }
  designated_root_priority_ = NULL;
  if (GetArenaNoVirtual() == NULL && bridge_priority_ != NULL) {
    delete bridge_priority_;
  }
  bridge_priority_ = NULL;
  if (GetArenaNoVirtual() == NULL && root_port_ != NULL) {
    delete root_port_;
  }
  root_port_ = NULL;
  if (GetArenaNoVirtual() == NULL && mst_id_ != NULL) {
    delete mst_id_;
  }
  mst_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && time_since_topology_change_ != NULL) {
    delete time_since_topology_change_;
  }
  time_since_topology_change_ = NULL;
  if (GetArenaNoVirtual() == NULL && bridge_address_ != NULL) {
    delete bridge_address_;
  }
  bridge_address_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_Mstp_MstInstances_MstInstance_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4161646314u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue designated_root_address = 57983091 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/designated-root-address"];
      case 57983091: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 463864730 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_designated_root_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion vlan = 175421410 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/vlan"];
      case 175421410: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 1403371282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_vlan()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue root_cost = 305061753 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/root-cost"];
      case 305061753: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 2440494026 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_root_cost()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue hold_time = 318764568 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/hold-time"];
      case 318764568: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 2550116546 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hold_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue topology_changes = 318857962 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/topology-changes"];
      case 318857962: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 2550863698 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_topology_changes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue designated_root_priority = 351428737 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/designated-root-priority"];
      case 351428737: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 2811429898 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_designated_root_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue bridge_priority = 352871151 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/bridge-priority"];
      case 352871151: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 2822969210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bridge_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue root_port = 397337255 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/root-port"];
      case 397337255: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 3178698042 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_root_port()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue mst_id = 408675299 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/mst-id"];
      case 408675299: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 3269402394 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mst_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue time_since_topology_change = 439704716 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/time-since-topology-change"];
      case 439704716: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 3517637730 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time_since_topology_change()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue bridge_address = 520205789 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/bridge-address"];
      case 520205789: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 4161646314 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bridge_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State)
  return false;
#undef DO_
}

void Stp_Mstp_MstInstances_MstInstance_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue designated_root_address = 57983091 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/designated-root-address"];
  if (this->has_designated_root_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      57983091, *this->designated_root_address_, output);
  }

  // repeated .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion vlan = 175421410 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/vlan"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vlan_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      175421410, this->vlan(static_cast<int>(i)), output);
  }

  // .ywrapper.UintValue root_cost = 305061753 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/root-cost"];
  if (this->has_root_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      305061753, *this->root_cost_, output);
  }

  // .ywrapper.UintValue hold_time = 318764568 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/hold-time"];
  if (this->has_hold_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      318764568, *this->hold_time_, output);
  }

  // .ywrapper.UintValue topology_changes = 318857962 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/topology-changes"];
  if (this->has_topology_changes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      318857962, *this->topology_changes_, output);
  }

  // .ywrapper.UintValue designated_root_priority = 351428737 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/designated-root-priority"];
  if (this->has_designated_root_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      351428737, *this->designated_root_priority_, output);
  }

  // .ywrapper.UintValue bridge_priority = 352871151 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/bridge-priority"];
  if (this->has_bridge_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      352871151, *this->bridge_priority_, output);
  }

  // .ywrapper.UintValue root_port = 397337255 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/root-port"];
  if (this->has_root_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      397337255, *this->root_port_, output);
  }

  // .ywrapper.UintValue mst_id = 408675299 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/mst-id"];
  if (this->has_mst_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      408675299, *this->mst_id_, output);
  }

  // .ywrapper.UintValue time_since_topology_change = 439704716 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/time-since-topology-change"];
  if (this->has_time_since_topology_change()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      439704716, *this->time_since_topology_change_, output);
  }

  // .ywrapper.StringValue bridge_address = 520205789 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/bridge-address"];
  if (this->has_bridge_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      520205789, *this->bridge_address_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State)
}

::google::protobuf::uint8* Stp_Mstp_MstInstances_MstInstance_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue designated_root_address = 57983091 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/designated-root-address"];
  if (this->has_designated_root_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        57983091, *this->designated_root_address_, deterministic, target);
  }

  // repeated .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion vlan = 175421410 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/vlan"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vlan_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        175421410, this->vlan(static_cast<int>(i)), deterministic, target);
  }

  // .ywrapper.UintValue root_cost = 305061753 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/root-cost"];
  if (this->has_root_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        305061753, *this->root_cost_, deterministic, target);
  }

  // .ywrapper.UintValue hold_time = 318764568 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/hold-time"];
  if (this->has_hold_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        318764568, *this->hold_time_, deterministic, target);
  }

  // .ywrapper.UintValue topology_changes = 318857962 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/topology-changes"];
  if (this->has_topology_changes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        318857962, *this->topology_changes_, deterministic, target);
  }

  // .ywrapper.UintValue designated_root_priority = 351428737 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/designated-root-priority"];
  if (this->has_designated_root_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        351428737, *this->designated_root_priority_, deterministic, target);
  }

  // .ywrapper.UintValue bridge_priority = 352871151 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/bridge-priority"];
  if (this->has_bridge_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        352871151, *this->bridge_priority_, deterministic, target);
  }

  // .ywrapper.UintValue root_port = 397337255 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/root-port"];
  if (this->has_root_port()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        397337255, *this->root_port_, deterministic, target);
  }

  // .ywrapper.UintValue mst_id = 408675299 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/mst-id"];
  if (this->has_mst_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        408675299, *this->mst_id_, deterministic, target);
  }

  // .ywrapper.UintValue time_since_topology_change = 439704716 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/time-since-topology-change"];
  if (this->has_time_since_topology_change()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        439704716, *this->time_since_topology_change_, deterministic, target);
  }

  // .ywrapper.StringValue bridge_address = 520205789 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/bridge-address"];
  if (this->has_bridge_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        520205789, *this->bridge_address_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State)
  return target;
}

size_t Stp_Mstp_MstInstances_MstInstance_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion vlan = 175421410 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/vlan"];
  {
    unsigned int count = static_cast<unsigned int>(this->vlan_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vlan(static_cast<int>(i)));
    }
  }

  // .ywrapper.StringValue designated_root_address = 57983091 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/designated-root-address"];
  if (this->has_designated_root_address()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->designated_root_address_);
  }

  // .ywrapper.UintValue root_cost = 305061753 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/root-cost"];
  if (this->has_root_cost()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->root_cost_);
  }

  // .ywrapper.UintValue hold_time = 318764568 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/hold-time"];
  if (this->has_hold_time()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->hold_time_);
  }

  // .ywrapper.UintValue topology_changes = 318857962 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/topology-changes"];
  if (this->has_topology_changes()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->topology_changes_);
  }

  // .ywrapper.UintValue designated_root_priority = 351428737 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/designated-root-priority"];
  if (this->has_designated_root_priority()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->designated_root_priority_);
  }

  // .ywrapper.UintValue bridge_priority = 352871151 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/bridge-priority"];
  if (this->has_bridge_priority()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bridge_priority_);
  }

  // .ywrapper.UintValue root_port = 397337255 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/root-port"];
  if (this->has_root_port()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->root_port_);
  }

  // .ywrapper.UintValue mst_id = 408675299 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/mst-id"];
  if (this->has_mst_id()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mst_id_);
  }

  // .ywrapper.UintValue time_since_topology_change = 439704716 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/time-since-topology-change"];
  if (this->has_time_since_topology_change()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->time_since_topology_change_);
  }

  // .ywrapper.StringValue bridge_address = 520205789 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/bridge-address"];
  if (this->has_bridge_address()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bridge_address_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Mstp_MstInstances_MstInstance_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Mstp_MstInstances_MstInstance_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Mstp_MstInstances_MstInstance_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State)
    MergeFrom(*source);
  }
}

void Stp_Mstp_MstInstances_MstInstance_State::MergeFrom(const Stp_Mstp_MstInstances_MstInstance_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vlan_.MergeFrom(from.vlan_);
  if (from.has_designated_root_address()) {
    mutable_designated_root_address()->::ywrapper::StringValue::MergeFrom(from.designated_root_address());
  }
  if (from.has_root_cost()) {
    mutable_root_cost()->::ywrapper::UintValue::MergeFrom(from.root_cost());
  }
  if (from.has_hold_time()) {
    mutable_hold_time()->::ywrapper::UintValue::MergeFrom(from.hold_time());
  }
  if (from.has_topology_changes()) {
    mutable_topology_changes()->::ywrapper::UintValue::MergeFrom(from.topology_changes());
  }
  if (from.has_designated_root_priority()) {
    mutable_designated_root_priority()->::ywrapper::UintValue::MergeFrom(from.designated_root_priority());
  }
  if (from.has_bridge_priority()) {
    mutable_bridge_priority()->::ywrapper::UintValue::MergeFrom(from.bridge_priority());
  }
  if (from.has_root_port()) {
    mutable_root_port()->::ywrapper::UintValue::MergeFrom(from.root_port());
  }
  if (from.has_mst_id()) {
    mutable_mst_id()->::ywrapper::UintValue::MergeFrom(from.mst_id());
  }
  if (from.has_time_since_topology_change()) {
    mutable_time_since_topology_change()->::ywrapper::UintValue::MergeFrom(from.time_since_topology_change());
  }
  if (from.has_bridge_address()) {
    mutable_bridge_address()->::ywrapper::StringValue::MergeFrom(from.bridge_address());
  }
}

void Stp_Mstp_MstInstances_MstInstance_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Mstp_MstInstances_MstInstance_State::CopyFrom(const Stp_Mstp_MstInstances_MstInstance_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Mstp_MstInstances_MstInstance_State::IsInitialized() const {
  return true;
}

void Stp_Mstp_MstInstances_MstInstance_State::Swap(Stp_Mstp_MstInstances_MstInstance_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Mstp_MstInstances_MstInstance_State::InternalSwap(Stp_Mstp_MstInstances_MstInstance_State* other) {
  using std::swap;
  vlan_.InternalSwap(&other->vlan_);
  swap(designated_root_address_, other->designated_root_address_);
  swap(root_cost_, other->root_cost_);
  swap(hold_time_, other->hold_time_);
  swap(topology_changes_, other->topology_changes_);
  swap(designated_root_priority_, other->designated_root_priority_);
  swap(bridge_priority_, other->bridge_priority_);
  swap(root_port_, other->root_port_);
  swap(mst_id_, other->mst_id_);
  swap(time_since_topology_change_, other->time_since_topology_change_);
  swap(bridge_address_, other->bridge_address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Mstp_MstInstances_MstInstance_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Mstp_MstInstances_MstInstance::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config*>(
      ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_default_instance_._instance.get_mutable()->interfaces_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces*>(
      ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State*>(
      ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Mstp_MstInstances_MstInstance::kConfigFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance::kInterfacesFieldNumber;
const int Stp_Mstp_MstInstances_MstInstance::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Mstp_MstInstances_MstInstance::Stp_Mstp_MstInstances_MstInstance()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance)
}
Stp_Mstp_MstInstances_MstInstance::Stp_Mstp_MstInstances_MstInstance(const Stp_Mstp_MstInstances_MstInstance& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_interfaces()) {
    interfaces_ = new ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces(*from.interfaces_);
  } else {
    interfaces_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance)
}

void Stp_Mstp_MstInstances_MstInstance::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interfaces_) -
      reinterpret_cast<char*>(&state_)) + sizeof(interfaces_));
  _cached_size_ = 0;
}

Stp_Mstp_MstInstances_MstInstance::~Stp_Mstp_MstInstances_MstInstance() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance)
  SharedDtor();
}

void Stp_Mstp_MstInstances_MstInstance::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete interfaces_;
}

void Stp_Mstp_MstInstances_MstInstance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Mstp_MstInstances_MstInstance::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Mstp_MstInstances_MstInstance& Stp_Mstp_MstInstances_MstInstance::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance();
  return *internal_default_instance();
}

Stp_Mstp_MstInstances_MstInstance* Stp_Mstp_MstInstances_MstInstance::New(::google::protobuf::Arena* arena) const {
  Stp_Mstp_MstInstances_MstInstance* n = new Stp_Mstp_MstInstances_MstInstance;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Mstp_MstInstances_MstInstance::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && interfaces_ != NULL) {
    delete interfaces_;
  }
  interfaces_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_Mstp_MstInstances_MstInstance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3929723834u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State state = 317664238 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state"];
      case 317664238: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 2541313906 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config config = 472762393 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/config"];
      case 472762393: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 3782099146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces interfaces = 491215479 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces"];
      case 491215479: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 3929723834 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interfaces()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance)
  return false;
#undef DO_
}

void Stp_Mstp_MstInstances_MstInstance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State state = 317664238 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      317664238, *this->state_, output);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config config = 472762393 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      472762393, *this->config_, output);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces interfaces = 491215479 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces"];
  if (this->has_interfaces()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      491215479, *this->interfaces_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance)
}

::google::protobuf::uint8* Stp_Mstp_MstInstances_MstInstance::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State state = 317664238 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        317664238, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config config = 472762393 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        472762393, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces interfaces = 491215479 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces"];
  if (this->has_interfaces()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        491215479, *this->interfaces_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance)
  return target;
}

size_t Stp_Mstp_MstInstances_MstInstance::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State state = 317664238 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config config = 472762393 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces interfaces = 491215479 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces"];
  if (this->has_interfaces()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interfaces_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Mstp_MstInstances_MstInstance::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Mstp_MstInstances_MstInstance* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Mstp_MstInstances_MstInstance>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance)
    MergeFrom(*source);
  }
}

void Stp_Mstp_MstInstances_MstInstance::MergeFrom(const Stp_Mstp_MstInstances_MstInstance& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config::MergeFrom(from.config());
  }
  if (from.has_interfaces()) {
    mutable_interfaces()->::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces::MergeFrom(from.interfaces());
  }
}

void Stp_Mstp_MstInstances_MstInstance::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Mstp_MstInstances_MstInstance::CopyFrom(const Stp_Mstp_MstInstances_MstInstance& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Mstp_MstInstances_MstInstance::IsInitialized() const {
  return true;
}

void Stp_Mstp_MstInstances_MstInstance::Swap(Stp_Mstp_MstInstances_MstInstance* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Mstp_MstInstances_MstInstance::InternalSwap(Stp_Mstp_MstInstances_MstInstance* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(config_, other->config_);
  swap(interfaces_, other->interfaces_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Mstp_MstInstances_MstInstance::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Mstp_MstInstances_MstInstanceKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstanceKey_default_instance_._instance.get_mutable()->mst_instance_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance*>(
      ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Mstp_MstInstances_MstInstanceKey::kMstIdFieldNumber;
const int Stp_Mstp_MstInstances_MstInstanceKey::kMstInstanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Mstp_MstInstances_MstInstanceKey::Stp_Mstp_MstInstances_MstInstanceKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstanceKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey)
}
Stp_Mstp_MstInstances_MstInstanceKey::Stp_Mstp_MstInstances_MstInstanceKey(const Stp_Mstp_MstInstances_MstInstanceKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mst_instance()) {
    mst_instance_ = new ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance(*from.mst_instance_);
  } else {
    mst_instance_ = NULL;
  }
  mst_id_ = from.mst_id_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey)
}

void Stp_Mstp_MstInstances_MstInstanceKey::SharedCtor() {
  ::memset(&mst_instance_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&mst_id_) -
      reinterpret_cast<char*>(&mst_instance_)) + sizeof(mst_id_));
  _cached_size_ = 0;
}

Stp_Mstp_MstInstances_MstInstanceKey::~Stp_Mstp_MstInstances_MstInstanceKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey)
  SharedDtor();
}

void Stp_Mstp_MstInstances_MstInstanceKey::SharedDtor() {
  if (this != internal_default_instance()) delete mst_instance_;
}

void Stp_Mstp_MstInstances_MstInstanceKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Mstp_MstInstances_MstInstanceKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Mstp_MstInstances_MstInstanceKey& Stp_Mstp_MstInstances_MstInstanceKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstanceKey();
  return *internal_default_instance();
}

Stp_Mstp_MstInstances_MstInstanceKey* Stp_Mstp_MstInstances_MstInstanceKey::New(::google::protobuf::Arena* arena) const {
  Stp_Mstp_MstInstances_MstInstanceKey* n = new Stp_Mstp_MstInstances_MstInstanceKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Mstp_MstInstances_MstInstanceKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && mst_instance_ != NULL) {
    delete mst_instance_;
  }
  mst_instance_ = NULL;
  mst_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Stp_Mstp_MstInstances_MstInstanceKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 mst_id = 1 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/mst-id"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &mst_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance mst_instance = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mst_instance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey)
  return false;
#undef DO_
}

void Stp_Mstp_MstInstances_MstInstanceKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 mst_id = 1 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/mst-id"];
  if (this->mst_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->mst_id(), output);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance mst_instance = 2;
  if (this->has_mst_instance()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->mst_instance_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey)
}

::google::protobuf::uint8* Stp_Mstp_MstInstances_MstInstanceKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 mst_id = 1 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/mst-id"];
  if (this->mst_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->mst_id(), target);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance mst_instance = 2;
  if (this->has_mst_instance()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->mst_instance_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey)
  return target;
}

size_t Stp_Mstp_MstInstances_MstInstanceKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance mst_instance = 2;
  if (this->has_mst_instance()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mst_instance_);
  }

  // uint64 mst_id = 1 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/mst-id"];
  if (this->mst_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->mst_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Mstp_MstInstances_MstInstanceKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Mstp_MstInstances_MstInstanceKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Mstp_MstInstances_MstInstanceKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey)
    MergeFrom(*source);
  }
}

void Stp_Mstp_MstInstances_MstInstanceKey::MergeFrom(const Stp_Mstp_MstInstances_MstInstanceKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mst_instance()) {
    mutable_mst_instance()->::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance::MergeFrom(from.mst_instance());
  }
  if (from.mst_id() != 0) {
    set_mst_id(from.mst_id());
  }
}

void Stp_Mstp_MstInstances_MstInstanceKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Mstp_MstInstances_MstInstanceKey::CopyFrom(const Stp_Mstp_MstInstances_MstInstanceKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Mstp_MstInstances_MstInstanceKey::IsInitialized() const {
  return true;
}

void Stp_Mstp_MstInstances_MstInstanceKey::Swap(Stp_Mstp_MstInstances_MstInstanceKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Mstp_MstInstances_MstInstanceKey::InternalSwap(Stp_Mstp_MstInstances_MstInstanceKey* other) {
  using std::swap;
  swap(mst_instance_, other->mst_instance_);
  swap(mst_id_, other->mst_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Mstp_MstInstances_MstInstanceKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Mstp_MstInstances::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Mstp_MstInstances::kMstInstanceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Mstp_MstInstances::Stp_Mstp_MstInstances()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances)
}
Stp_Mstp_MstInstances::Stp_Mstp_MstInstances(const Stp_Mstp_MstInstances& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mst_instance_(from.mst_instance_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances)
}

void Stp_Mstp_MstInstances::SharedCtor() {
  _cached_size_ = 0;
}

Stp_Mstp_MstInstances::~Stp_Mstp_MstInstances() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances)
  SharedDtor();
}

void Stp_Mstp_MstInstances::SharedDtor() {
}

void Stp_Mstp_MstInstances::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Mstp_MstInstances::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Mstp_MstInstances& Stp_Mstp_MstInstances::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances();
  return *internal_default_instance();
}

Stp_Mstp_MstInstances* Stp_Mstp_MstInstances::New(::google::protobuf::Arena* arena) const {
  Stp_Mstp_MstInstances* n = new Stp_Mstp_MstInstances;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Mstp_MstInstances::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mst_instance_.Clear();
  _internal_metadata_.Clear();
}

bool Stp_Mstp_MstInstances::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3978751138u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey mst_instance = 497343892 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance"];
      case 497343892: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 3978751138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_mst_instance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances)
  return false;
#undef DO_
}

void Stp_Mstp_MstInstances::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey mst_instance = 497343892 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mst_instance_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      497343892, this->mst_instance(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances)
}

::google::protobuf::uint8* Stp_Mstp_MstInstances::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey mst_instance = 497343892 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mst_instance_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        497343892, this->mst_instance(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances)
  return target;
}

size_t Stp_Mstp_MstInstances::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey mst_instance = 497343892 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance"];
  {
    unsigned int count = static_cast<unsigned int>(this->mst_instance_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mst_instance(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Mstp_MstInstances::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Mstp_MstInstances* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Mstp_MstInstances>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances)
    MergeFrom(*source);
  }
}

void Stp_Mstp_MstInstances::MergeFrom(const Stp_Mstp_MstInstances& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mst_instance_.MergeFrom(from.mst_instance_);
}

void Stp_Mstp_MstInstances::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Mstp_MstInstances::CopyFrom(const Stp_Mstp_MstInstances& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Mstp_MstInstances::IsInitialized() const {
  return true;
}

void Stp_Mstp_MstInstances::Swap(Stp_Mstp_MstInstances* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Mstp_MstInstances::InternalSwap(Stp_Mstp_MstInstances* other) {
  using std::swap;
  mst_instance_.InternalSwap(&other->mst_instance_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Mstp_MstInstances::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Mstp_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_State_default_instance_._instance.get_mutable()->forwarding_delay_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_State_default_instance_._instance.get_mutable()->hello_time_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_State_default_instance_._instance.get_mutable()->hold_count_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_State_default_instance_._instance.get_mutable()->max_age_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_State_default_instance_._instance.get_mutable()->max_hop_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_State_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_State_default_instance_._instance.get_mutable()->revision_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Stp_Mstp_State::clear_forwarding_delay() {
  if (GetArenaNoVirtual() == NULL && forwarding_delay_ != NULL) {
    delete forwarding_delay_;
  }
  forwarding_delay_ = NULL;
}
void Stp_Mstp_State::clear_hello_time() {
  if (GetArenaNoVirtual() == NULL && hello_time_ != NULL) {
    delete hello_time_;
  }
  hello_time_ = NULL;
}
void Stp_Mstp_State::clear_hold_count() {
  if (GetArenaNoVirtual() == NULL && hold_count_ != NULL) {
    delete hold_count_;
  }
  hold_count_ = NULL;
}
void Stp_Mstp_State::clear_max_age() {
  if (GetArenaNoVirtual() == NULL && max_age_ != NULL) {
    delete max_age_;
  }
  max_age_ = NULL;
}
void Stp_Mstp_State::clear_max_hop() {
  if (GetArenaNoVirtual() == NULL && max_hop_ != NULL) {
    delete max_hop_;
  }
  max_hop_ = NULL;
}
void Stp_Mstp_State::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void Stp_Mstp_State::clear_revision() {
  if (GetArenaNoVirtual() == NULL && revision_ != NULL) {
    delete revision_;
  }
  revision_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Mstp_State::kForwardingDelayFieldNumber;
const int Stp_Mstp_State::kHelloTimeFieldNumber;
const int Stp_Mstp_State::kHoldCountFieldNumber;
const int Stp_Mstp_State::kMaxAgeFieldNumber;
const int Stp_Mstp_State::kMaxHopFieldNumber;
const int Stp_Mstp_State::kNameFieldNumber;
const int Stp_Mstp_State::kRevisionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Mstp_State::Stp_Mstp_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.State)
}
Stp_Mstp_State::Stp_Mstp_State(const Stp_Mstp_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_hold_count()) {
    hold_count_ = new ::ywrapper::UintValue(*from.hold_count_);
  } else {
    hold_count_ = NULL;
  }
  if (from.has_max_hop()) {
    max_hop_ = new ::ywrapper::UintValue(*from.max_hop_);
  } else {
    max_hop_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_revision()) {
    revision_ = new ::ywrapper::UintValue(*from.revision_);
  } else {
    revision_ = NULL;
  }
  if (from.has_forwarding_delay()) {
    forwarding_delay_ = new ::ywrapper::UintValue(*from.forwarding_delay_);
  } else {
    forwarding_delay_ = NULL;
  }
  if (from.has_max_age()) {
    max_age_ = new ::ywrapper::UintValue(*from.max_age_);
  } else {
    max_age_ = NULL;
  }
  if (from.has_hello_time()) {
    hello_time_ = new ::ywrapper::UintValue(*from.hello_time_);
  } else {
    hello_time_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Mstp.State)
}

void Stp_Mstp_State::SharedCtor() {
  ::memset(&hold_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hello_time_) -
      reinterpret_cast<char*>(&hold_count_)) + sizeof(hello_time_));
  _cached_size_ = 0;
}

Stp_Mstp_State::~Stp_Mstp_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Mstp.State)
  SharedDtor();
}

void Stp_Mstp_State::SharedDtor() {
  if (this != internal_default_instance()) delete hold_count_;
  if (this != internal_default_instance()) delete max_hop_;
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete revision_;
  if (this != internal_default_instance()) delete forwarding_delay_;
  if (this != internal_default_instance()) delete max_age_;
  if (this != internal_default_instance()) delete hello_time_;
}

void Stp_Mstp_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Mstp_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Mstp_State& Stp_Mstp_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_State();
  return *internal_default_instance();
}

Stp_Mstp_State* Stp_Mstp_State::New(::google::protobuf::Arena* arena) const {
  Stp_Mstp_State* n = new Stp_Mstp_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Mstp_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Mstp.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && hold_count_ != NULL) {
    delete hold_count_;
  }
  hold_count_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_hop_ != NULL) {
    delete max_hop_;
  }
  max_hop_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && revision_ != NULL) {
    delete revision_;
  }
  revision_ = NULL;
  if (GetArenaNoVirtual() == NULL && forwarding_delay_ != NULL) {
    delete forwarding_delay_;
  }
  forwarding_delay_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_age_ != NULL) {
    delete max_age_;
  }
  max_age_ = NULL;
  if (GetArenaNoVirtual() == NULL && hello_time_ != NULL) {
    delete hello_time_;
  }
  hello_time_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_Mstp_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Mstp.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4153004594u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue hold_count = 109158353 [(.yext.schemapath) = "/stp/mstp/state/hold-count"];
      case 109158353: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 873266826 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hold_count()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue max_hop = 113450208 [(.yext.schemapath) = "/stp/mstp/state/max-hop"];
      case 113450208: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 907601666 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_hop()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue name = 362119781 [(.yext.schemapath) = "/stp/mstp/state/name"];
      case 362119781: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 2896958250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue revision = 426296947 [(.yext.schemapath) = "/stp/mstp/state/revision"];
      case 426296947: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 3410375578 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_revision()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue forwarding_delay = 512660443 [(.yext.schemapath) = "/stp/mstp/state/forwarding-delay"];
      case 512660443: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 4101283546 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_forwarding_delay()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue max_age = 517220060 [(.yext.schemapath) = "/stp/mstp/state/max-age"];
      case 517220060: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 4137760482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_age()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue hello_time = 519125574 [(.yext.schemapath) = "/stp/mstp/state/hello-time"];
      case 519125574: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 4153004594 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hello_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Mstp.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Mstp.State)
  return false;
#undef DO_
}

void Stp_Mstp_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Mstp.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue hold_count = 109158353 [(.yext.schemapath) = "/stp/mstp/state/hold-count"];
  if (this->has_hold_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      109158353, *this->hold_count_, output);
  }

  // .ywrapper.UintValue max_hop = 113450208 [(.yext.schemapath) = "/stp/mstp/state/max-hop"];
  if (this->has_max_hop()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      113450208, *this->max_hop_, output);
  }

  // .ywrapper.StringValue name = 362119781 [(.yext.schemapath) = "/stp/mstp/state/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      362119781, *this->name_, output);
  }

  // .ywrapper.UintValue revision = 426296947 [(.yext.schemapath) = "/stp/mstp/state/revision"];
  if (this->has_revision()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      426296947, *this->revision_, output);
  }

  // .ywrapper.UintValue forwarding_delay = 512660443 [(.yext.schemapath) = "/stp/mstp/state/forwarding-delay"];
  if (this->has_forwarding_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      512660443, *this->forwarding_delay_, output);
  }

  // .ywrapper.UintValue max_age = 517220060 [(.yext.schemapath) = "/stp/mstp/state/max-age"];
  if (this->has_max_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      517220060, *this->max_age_, output);
  }

  // .ywrapper.UintValue hello_time = 519125574 [(.yext.schemapath) = "/stp/mstp/state/hello-time"];
  if (this->has_hello_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      519125574, *this->hello_time_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Mstp.State)
}

::google::protobuf::uint8* Stp_Mstp_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Mstp.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue hold_count = 109158353 [(.yext.schemapath) = "/stp/mstp/state/hold-count"];
  if (this->has_hold_count()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        109158353, *this->hold_count_, deterministic, target);
  }

  // .ywrapper.UintValue max_hop = 113450208 [(.yext.schemapath) = "/stp/mstp/state/max-hop"];
  if (this->has_max_hop()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        113450208, *this->max_hop_, deterministic, target);
  }

  // .ywrapper.StringValue name = 362119781 [(.yext.schemapath) = "/stp/mstp/state/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        362119781, *this->name_, deterministic, target);
  }

  // .ywrapper.UintValue revision = 426296947 [(.yext.schemapath) = "/stp/mstp/state/revision"];
  if (this->has_revision()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        426296947, *this->revision_, deterministic, target);
  }

  // .ywrapper.UintValue forwarding_delay = 512660443 [(.yext.schemapath) = "/stp/mstp/state/forwarding-delay"];
  if (this->has_forwarding_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        512660443, *this->forwarding_delay_, deterministic, target);
  }

  // .ywrapper.UintValue max_age = 517220060 [(.yext.schemapath) = "/stp/mstp/state/max-age"];
  if (this->has_max_age()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        517220060, *this->max_age_, deterministic, target);
  }

  // .ywrapper.UintValue hello_time = 519125574 [(.yext.schemapath) = "/stp/mstp/state/hello-time"];
  if (this->has_hello_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        519125574, *this->hello_time_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Mstp.State)
  return target;
}

size_t Stp_Mstp_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Mstp.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue hold_count = 109158353 [(.yext.schemapath) = "/stp/mstp/state/hold-count"];
  if (this->has_hold_count()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->hold_count_);
  }

  // .ywrapper.UintValue max_hop = 113450208 [(.yext.schemapath) = "/stp/mstp/state/max-hop"];
  if (this->has_max_hop()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_hop_);
  }

  // .ywrapper.StringValue name = 362119781 [(.yext.schemapath) = "/stp/mstp/state/name"];
  if (this->has_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  // .ywrapper.UintValue revision = 426296947 [(.yext.schemapath) = "/stp/mstp/state/revision"];
  if (this->has_revision()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->revision_);
  }

  // .ywrapper.UintValue forwarding_delay = 512660443 [(.yext.schemapath) = "/stp/mstp/state/forwarding-delay"];
  if (this->has_forwarding_delay()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->forwarding_delay_);
  }

  // .ywrapper.UintValue max_age = 517220060 [(.yext.schemapath) = "/stp/mstp/state/max-age"];
  if (this->has_max_age()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_age_);
  }

  // .ywrapper.UintValue hello_time = 519125574 [(.yext.schemapath) = "/stp/mstp/state/hello-time"];
  if (this->has_hello_time()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->hello_time_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Mstp_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Mstp_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Mstp_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Mstp.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Mstp.State)
    MergeFrom(*source);
  }
}

void Stp_Mstp_State::MergeFrom(const Stp_Mstp_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_hold_count()) {
    mutable_hold_count()->::ywrapper::UintValue::MergeFrom(from.hold_count());
  }
  if (from.has_max_hop()) {
    mutable_max_hop()->::ywrapper::UintValue::MergeFrom(from.max_hop());
  }
  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
  if (from.has_revision()) {
    mutable_revision()->::ywrapper::UintValue::MergeFrom(from.revision());
  }
  if (from.has_forwarding_delay()) {
    mutable_forwarding_delay()->::ywrapper::UintValue::MergeFrom(from.forwarding_delay());
  }
  if (from.has_max_age()) {
    mutable_max_age()->::ywrapper::UintValue::MergeFrom(from.max_age());
  }
  if (from.has_hello_time()) {
    mutable_hello_time()->::ywrapper::UintValue::MergeFrom(from.hello_time());
  }
}

void Stp_Mstp_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Mstp_State::CopyFrom(const Stp_Mstp_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Mstp_State::IsInitialized() const {
  return true;
}

void Stp_Mstp_State::Swap(Stp_Mstp_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Mstp_State::InternalSwap(Stp_Mstp_State* other) {
  using std::swap;
  swap(hold_count_, other->hold_count_);
  swap(max_hop_, other->max_hop_);
  swap(name_, other->name_);
  swap(revision_, other->revision_);
  swap(forwarding_delay_, other->forwarding_delay_);
  swap(max_age_, other->max_age_);
  swap(hello_time_, other->hello_time_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Mstp_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Mstp::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_Mstp_Config*>(
      ::openconfig::openconfig_spanning_tree::Stp_Mstp_Config::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_default_instance_._instance.get_mutable()->mst_instances_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances*>(
      ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Mstp_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_Mstp_State*>(
      ::openconfig::openconfig_spanning_tree::Stp_Mstp_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Mstp::kConfigFieldNumber;
const int Stp_Mstp::kMstInstancesFieldNumber;
const int Stp_Mstp::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Mstp::Stp_Mstp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Mstp)
}
Stp_Mstp::Stp_Mstp(const Stp_Mstp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mst_instances()) {
    mst_instances_ = new ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances(*from.mst_instances_);
  } else {
    mst_instances_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_spanning_tree::Stp_Mstp_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_spanning_tree::Stp_Mstp_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Mstp)
}

void Stp_Mstp::SharedCtor() {
  ::memset(&mst_instances_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&mst_instances_)) + sizeof(state_));
  _cached_size_ = 0;
}

Stp_Mstp::~Stp_Mstp() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Mstp)
  SharedDtor();
}

void Stp_Mstp::SharedDtor() {
  if (this != internal_default_instance()) delete mst_instances_;
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete state_;
}

void Stp_Mstp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Mstp::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Mstp& Stp_Mstp::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp();
  return *internal_default_instance();
}

Stp_Mstp* Stp_Mstp::New(::google::protobuf::Arena* arena) const {
  Stp_Mstp* n = new Stp_Mstp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Mstp::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Mstp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && mst_instances_ != NULL) {
    delete mst_instances_;
  }
  mst_instances_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_Mstp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Mstp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3354823306u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances mst_instances = 72798773 [(.yext.schemapath) = "/stp/mstp/mst-instances"];
      case 72798773: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 582390186 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mst_instances()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_spanning_tree.Stp.Mstp.Config config = 362267192 [(.yext.schemapath) = "/stp/mstp/config"];
      case 362267192: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 2898137538 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_spanning_tree.Stp.Mstp.State state = 419352913 [(.yext.schemapath) = "/stp/mstp/state"];
      case 419352913: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 3354823306 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Mstp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Mstp)
  return false;
#undef DO_
}

void Stp_Mstp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Mstp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances mst_instances = 72798773 [(.yext.schemapath) = "/stp/mstp/mst-instances"];
  if (this->has_mst_instances()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      72798773, *this->mst_instances_, output);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.Config config = 362267192 [(.yext.schemapath) = "/stp/mstp/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      362267192, *this->config_, output);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.State state = 419352913 [(.yext.schemapath) = "/stp/mstp/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      419352913, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Mstp)
}

::google::protobuf::uint8* Stp_Mstp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Mstp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances mst_instances = 72798773 [(.yext.schemapath) = "/stp/mstp/mst-instances"];
  if (this->has_mst_instances()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        72798773, *this->mst_instances_, deterministic, target);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.Config config = 362267192 [(.yext.schemapath) = "/stp/mstp/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        362267192, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.State state = 419352913 [(.yext.schemapath) = "/stp/mstp/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        419352913, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Mstp)
  return target;
}

size_t Stp_Mstp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Mstp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances mst_instances = 72798773 [(.yext.schemapath) = "/stp/mstp/mst-instances"];
  if (this->has_mst_instances()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mst_instances_);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.Config config = 362267192 [(.yext.schemapath) = "/stp/mstp/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.State state = 419352913 [(.yext.schemapath) = "/stp/mstp/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Mstp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Mstp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Mstp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Mstp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Mstp)
    MergeFrom(*source);
  }
}

void Stp_Mstp::MergeFrom(const Stp_Mstp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mst_instances()) {
    mutable_mst_instances()->::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances::MergeFrom(from.mst_instances());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_spanning_tree::Stp_Mstp_Config::MergeFrom(from.config());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_spanning_tree::Stp_Mstp_State::MergeFrom(from.state());
  }
}

void Stp_Mstp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Mstp::CopyFrom(const Stp_Mstp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Mstp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Mstp::IsInitialized() const {
  return true;
}

void Stp_Mstp::Swap(Stp_Mstp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Mstp::InternalSwap(Stp_Mstp* other) {
  using std::swap;
  swap(mst_instances_, other->mst_instances_);
  swap(config_, other->config_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Mstp::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_RapidPvst_Vlan_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Config_default_instance_._instance.get_mutable()->bridge_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Config_default_instance_._instance.get_mutable()->forwarding_delay_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Config_default_instance_._instance.get_mutable()->hello_time_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Config_default_instance_._instance.get_mutable()->hold_count_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Config_default_instance_._instance.get_mutable()->max_age_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Config_default_instance_._instance.get_mutable()->vlan_id_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Stp_RapidPvst_Vlan_Config::clear_bridge_priority() {
  if (GetArenaNoVirtual() == NULL && bridge_priority_ != NULL) {
    delete bridge_priority_;
  }
  bridge_priority_ = NULL;
}
void Stp_RapidPvst_Vlan_Config::clear_forwarding_delay() {
  if (GetArenaNoVirtual() == NULL && forwarding_delay_ != NULL) {
    delete forwarding_delay_;
  }
  forwarding_delay_ = NULL;
}
void Stp_RapidPvst_Vlan_Config::clear_hello_time() {
  if (GetArenaNoVirtual() == NULL && hello_time_ != NULL) {
    delete hello_time_;
  }
  hello_time_ = NULL;
}
void Stp_RapidPvst_Vlan_Config::clear_hold_count() {
  if (GetArenaNoVirtual() == NULL && hold_count_ != NULL) {
    delete hold_count_;
  }
  hold_count_ = NULL;
}
void Stp_RapidPvst_Vlan_Config::clear_max_age() {
  if (GetArenaNoVirtual() == NULL && max_age_ != NULL) {
    delete max_age_;
  }
  max_age_ = NULL;
}
void Stp_RapidPvst_Vlan_Config::clear_vlan_id() {
  if (GetArenaNoVirtual() == NULL && vlan_id_ != NULL) {
    delete vlan_id_;
  }
  vlan_id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_RapidPvst_Vlan_Config::kBridgePriorityFieldNumber;
const int Stp_RapidPvst_Vlan_Config::kForwardingDelayFieldNumber;
const int Stp_RapidPvst_Vlan_Config::kHelloTimeFieldNumber;
const int Stp_RapidPvst_Vlan_Config::kHoldCountFieldNumber;
const int Stp_RapidPvst_Vlan_Config::kMaxAgeFieldNumber;
const int Stp_RapidPvst_Vlan_Config::kVlanIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_RapidPvst_Vlan_Config::Stp_RapidPvst_Vlan_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config)
}
Stp_RapidPvst_Vlan_Config::Stp_RapidPvst_Vlan_Config(const Stp_RapidPvst_Vlan_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_forwarding_delay()) {
    forwarding_delay_ = new ::ywrapper::UintValue(*from.forwarding_delay_);
  } else {
    forwarding_delay_ = NULL;
  }
  if (from.has_bridge_priority()) {
    bridge_priority_ = new ::ywrapper::UintValue(*from.bridge_priority_);
  } else {
    bridge_priority_ = NULL;
  }
  if (from.has_max_age()) {
    max_age_ = new ::ywrapper::UintValue(*from.max_age_);
  } else {
    max_age_ = NULL;
  }
  if (from.has_hold_count()) {
    hold_count_ = new ::ywrapper::UintValue(*from.hold_count_);
  } else {
    hold_count_ = NULL;
  }
  if (from.has_hello_time()) {
    hello_time_ = new ::ywrapper::UintValue(*from.hello_time_);
  } else {
    hello_time_ = NULL;
  }
  if (from.has_vlan_id()) {
    vlan_id_ = new ::ywrapper::UintValue(*from.vlan_id_);
  } else {
    vlan_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config)
}

void Stp_RapidPvst_Vlan_Config::SharedCtor() {
  ::memset(&forwarding_delay_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vlan_id_) -
      reinterpret_cast<char*>(&forwarding_delay_)) + sizeof(vlan_id_));
  _cached_size_ = 0;
}

Stp_RapidPvst_Vlan_Config::~Stp_RapidPvst_Vlan_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config)
  SharedDtor();
}

void Stp_RapidPvst_Vlan_Config::SharedDtor() {
  if (this != internal_default_instance()) delete forwarding_delay_;
  if (this != internal_default_instance()) delete bridge_priority_;
  if (this != internal_default_instance()) delete max_age_;
  if (this != internal_default_instance()) delete hold_count_;
  if (this != internal_default_instance()) delete hello_time_;
  if (this != internal_default_instance()) delete vlan_id_;
}

void Stp_RapidPvst_Vlan_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_RapidPvst_Vlan_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_RapidPvst_Vlan_Config& Stp_RapidPvst_Vlan_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_Config();
  return *internal_default_instance();
}

Stp_RapidPvst_Vlan_Config* Stp_RapidPvst_Vlan_Config::New(::google::protobuf::Arena* arena) const {
  Stp_RapidPvst_Vlan_Config* n = new Stp_RapidPvst_Vlan_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_RapidPvst_Vlan_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && forwarding_delay_ != NULL) {
    delete forwarding_delay_;
  }
  forwarding_delay_ = NULL;
  if (GetArenaNoVirtual() == NULL && bridge_priority_ != NULL) {
    delete bridge_priority_;
  }
  bridge_priority_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_age_ != NULL) {
    delete max_age_;
  }
  max_age_ = NULL;
  if (GetArenaNoVirtual() == NULL && hold_count_ != NULL) {
    delete hold_count_;
  }
  hold_count_ = NULL;
  if (GetArenaNoVirtual() == NULL && hello_time_ != NULL) {
    delete hello_time_;
  }
  hello_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && vlan_id_ != NULL) {
    delete vlan_id_;
  }
  vlan_id_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_RapidPvst_Vlan_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4099484290u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue forwarding_delay = 71214714 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/forwarding-delay"];
      case 71214714: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 569717714 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_forwarding_delay()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue bridge_priority = 77791083 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/bridge-priority"];
      case 77791083: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 622328666 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bridge_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue max_age = 244952871 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/max-age"];
      case 244952871: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 1959622970 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_age()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue hold_count = 247466364 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/hold-count"];
      case 247466364: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 1979730914 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hold_count()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue hello_time = 413699279 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/hello-time"];
      case 413699279: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 3309594234 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hello_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue vlan_id = 512435536 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/vlan-id"];
      case 512435536: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 4099484290 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vlan_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config)
  return false;
#undef DO_
}

void Stp_RapidPvst_Vlan_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue forwarding_delay = 71214714 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/forwarding-delay"];
  if (this->has_forwarding_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      71214714, *this->forwarding_delay_, output);
  }

  // .ywrapper.UintValue bridge_priority = 77791083 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/bridge-priority"];
  if (this->has_bridge_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      77791083, *this->bridge_priority_, output);
  }

  // .ywrapper.UintValue max_age = 244952871 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/max-age"];
  if (this->has_max_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      244952871, *this->max_age_, output);
  }

  // .ywrapper.UintValue hold_count = 247466364 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/hold-count"];
  if (this->has_hold_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      247466364, *this->hold_count_, output);
  }

  // .ywrapper.UintValue hello_time = 413699279 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/hello-time"];
  if (this->has_hello_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      413699279, *this->hello_time_, output);
  }

  // .ywrapper.UintValue vlan_id = 512435536 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/vlan-id"];
  if (this->has_vlan_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      512435536, *this->vlan_id_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config)
}

::google::protobuf::uint8* Stp_RapidPvst_Vlan_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue forwarding_delay = 71214714 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/forwarding-delay"];
  if (this->has_forwarding_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        71214714, *this->forwarding_delay_, deterministic, target);
  }

  // .ywrapper.UintValue bridge_priority = 77791083 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/bridge-priority"];
  if (this->has_bridge_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        77791083, *this->bridge_priority_, deterministic, target);
  }

  // .ywrapper.UintValue max_age = 244952871 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/max-age"];
  if (this->has_max_age()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        244952871, *this->max_age_, deterministic, target);
  }

  // .ywrapper.UintValue hold_count = 247466364 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/hold-count"];
  if (this->has_hold_count()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        247466364, *this->hold_count_, deterministic, target);
  }

  // .ywrapper.UintValue hello_time = 413699279 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/hello-time"];
  if (this->has_hello_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        413699279, *this->hello_time_, deterministic, target);
  }

  // .ywrapper.UintValue vlan_id = 512435536 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/vlan-id"];
  if (this->has_vlan_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        512435536, *this->vlan_id_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config)
  return target;
}

size_t Stp_RapidPvst_Vlan_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue forwarding_delay = 71214714 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/forwarding-delay"];
  if (this->has_forwarding_delay()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->forwarding_delay_);
  }

  // .ywrapper.UintValue bridge_priority = 77791083 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/bridge-priority"];
  if (this->has_bridge_priority()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bridge_priority_);
  }

  // .ywrapper.UintValue max_age = 244952871 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/max-age"];
  if (this->has_max_age()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_age_);
  }

  // .ywrapper.UintValue hold_count = 247466364 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/hold-count"];
  if (this->has_hold_count()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->hold_count_);
  }

  // .ywrapper.UintValue hello_time = 413699279 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/hello-time"];
  if (this->has_hello_time()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->hello_time_);
  }

  // .ywrapper.UintValue vlan_id = 512435536 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/vlan-id"];
  if (this->has_vlan_id()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->vlan_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_RapidPvst_Vlan_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_RapidPvst_Vlan_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_RapidPvst_Vlan_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config)
    MergeFrom(*source);
  }
}

void Stp_RapidPvst_Vlan_Config::MergeFrom(const Stp_RapidPvst_Vlan_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_forwarding_delay()) {
    mutable_forwarding_delay()->::ywrapper::UintValue::MergeFrom(from.forwarding_delay());
  }
  if (from.has_bridge_priority()) {
    mutable_bridge_priority()->::ywrapper::UintValue::MergeFrom(from.bridge_priority());
  }
  if (from.has_max_age()) {
    mutable_max_age()->::ywrapper::UintValue::MergeFrom(from.max_age());
  }
  if (from.has_hold_count()) {
    mutable_hold_count()->::ywrapper::UintValue::MergeFrom(from.hold_count());
  }
  if (from.has_hello_time()) {
    mutable_hello_time()->::ywrapper::UintValue::MergeFrom(from.hello_time());
  }
  if (from.has_vlan_id()) {
    mutable_vlan_id()->::ywrapper::UintValue::MergeFrom(from.vlan_id());
  }
}

void Stp_RapidPvst_Vlan_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_RapidPvst_Vlan_Config::CopyFrom(const Stp_RapidPvst_Vlan_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_RapidPvst_Vlan_Config::IsInitialized() const {
  return true;
}

void Stp_RapidPvst_Vlan_Config::Swap(Stp_RapidPvst_Vlan_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_RapidPvst_Vlan_Config::InternalSwap(Stp_RapidPvst_Vlan_Config* other) {
  using std::swap;
  swap(forwarding_delay_, other->forwarding_delay_);
  swap(bridge_priority_, other->bridge_priority_);
  swap(max_age_, other->max_age_);
  swap(hold_count_, other->hold_count_);
  swap(hello_time_, other->hello_time_);
  swap(vlan_id_, other->vlan_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_RapidPvst_Vlan_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_RapidPvst_Vlan_Interfaces_Interface_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_Config_default_instance_._instance.get_mutable()->cost_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_Config_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_Config_default_instance_._instance.get_mutable()->port_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Stp_RapidPvst_Vlan_Interfaces_Interface_Config::clear_cost() {
  if (GetArenaNoVirtual() == NULL && cost_ != NULL) {
    delete cost_;
  }
  cost_ = NULL;
}
void Stp_RapidPvst_Vlan_Interfaces_Interface_Config::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void Stp_RapidPvst_Vlan_Interfaces_Interface_Config::clear_port_priority() {
  if (GetArenaNoVirtual() == NULL && port_priority_ != NULL) {
    delete port_priority_;
  }
  port_priority_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_RapidPvst_Vlan_Interfaces_Interface_Config::kCostFieldNumber;
const int Stp_RapidPvst_Vlan_Interfaces_Interface_Config::kNameFieldNumber;
const int Stp_RapidPvst_Vlan_Interfaces_Interface_Config::kPortPriorityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_RapidPvst_Vlan_Interfaces_Interface_Config::Stp_RapidPvst_Vlan_Interfaces_Interface_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config)
}
Stp_RapidPvst_Vlan_Interfaces_Interface_Config::Stp_RapidPvst_Vlan_Interfaces_Interface_Config(const Stp_RapidPvst_Vlan_Interfaces_Interface_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cost()) {
    cost_ = new ::ywrapper::UintValue(*from.cost_);
  } else {
    cost_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_port_priority()) {
    port_priority_ = new ::ywrapper::UintValue(*from.port_priority_);
  } else {
    port_priority_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config)
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_Config::SharedCtor() {
  ::memset(&cost_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_priority_) -
      reinterpret_cast<char*>(&cost_)) + sizeof(port_priority_));
  _cached_size_ = 0;
}

Stp_RapidPvst_Vlan_Interfaces_Interface_Config::~Stp_RapidPvst_Vlan_Interfaces_Interface_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config)
  SharedDtor();
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_Config::SharedDtor() {
  if (this != internal_default_instance()) delete cost_;
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete port_priority_;
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_RapidPvst_Vlan_Interfaces_Interface_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_RapidPvst_Vlan_Interfaces_Interface_Config& Stp_RapidPvst_Vlan_Interfaces_Interface_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_Config();
  return *internal_default_instance();
}

Stp_RapidPvst_Vlan_Interfaces_Interface_Config* Stp_RapidPvst_Vlan_Interfaces_Interface_Config::New(::google::protobuf::Arena* arena) const {
  Stp_RapidPvst_Vlan_Interfaces_Interface_Config* n = new Stp_RapidPvst_Vlan_Interfaces_Interface_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && cost_ != NULL) {
    delete cost_;
  }
  cost_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && port_priority_ != NULL) {
    delete port_priority_;
  }
  port_priority_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_RapidPvst_Vlan_Interfaces_Interface_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1807968914u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue cost = 112934615 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/config/cost"];
      case 112934615: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 903476922 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cost()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue name = 215156497 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/config/name"];
      case 215156497: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 1721251978 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue port_priority = 225996114 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/config/port-priority"];
      case 225996114: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 1807968914 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_port_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config)
  return false;
#undef DO_
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue cost = 112934615 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/config/cost"];
  if (this->has_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      112934615, *this->cost_, output);
  }

  // .ywrapper.StringValue name = 215156497 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/config/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      215156497, *this->name_, output);
  }

  // .ywrapper.UintValue port_priority = 225996114 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/config/port-priority"];
  if (this->has_port_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      225996114, *this->port_priority_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config)
}

::google::protobuf::uint8* Stp_RapidPvst_Vlan_Interfaces_Interface_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue cost = 112934615 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/config/cost"];
  if (this->has_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        112934615, *this->cost_, deterministic, target);
  }

  // .ywrapper.StringValue name = 215156497 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/config/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        215156497, *this->name_, deterministic, target);
  }

  // .ywrapper.UintValue port_priority = 225996114 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/config/port-priority"];
  if (this->has_port_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        225996114, *this->port_priority_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config)
  return target;
}

size_t Stp_RapidPvst_Vlan_Interfaces_Interface_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue cost = 112934615 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/config/cost"];
  if (this->has_cost()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->cost_);
  }

  // .ywrapper.StringValue name = 215156497 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/config/name"];
  if (this->has_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  // .ywrapper.UintValue port_priority = 225996114 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/config/port-priority"];
  if (this->has_port_priority()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->port_priority_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_RapidPvst_Vlan_Interfaces_Interface_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_RapidPvst_Vlan_Interfaces_Interface_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config)
    MergeFrom(*source);
  }
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_Config::MergeFrom(const Stp_RapidPvst_Vlan_Interfaces_Interface_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cost()) {
    mutable_cost()->::ywrapper::UintValue::MergeFrom(from.cost());
  }
  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
  if (from.has_port_priority()) {
    mutable_port_priority()->::ywrapper::UintValue::MergeFrom(from.port_priority());
  }
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_Config::CopyFrom(const Stp_RapidPvst_Vlan_Interfaces_Interface_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_RapidPvst_Vlan_Interfaces_Interface_Config::IsInitialized() const {
  return true;
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_Config::Swap(Stp_RapidPvst_Vlan_Interfaces_Interface_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_RapidPvst_Vlan_Interfaces_Interface_Config::InternalSwap(Stp_RapidPvst_Vlan_Interfaces_Interface_Config* other) {
  using std::swap;
  swap(cost_, other->cost_);
  swap(name_, other->name_);
  swap(port_priority_, other->port_priority_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_RapidPvst_Vlan_Interfaces_Interface_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters_default_instance_._instance.get_mutable()->bpdu_received_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters_default_instance_._instance.get_mutable()->bpdu_sent_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::clear_bpdu_received() {
  if (GetArenaNoVirtual() == NULL && bpdu_received_ != NULL) {
    delete bpdu_received_;
  }
  bpdu_received_ = NULL;
}
void Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::clear_bpdu_sent() {
  if (GetArenaNoVirtual() == NULL && bpdu_sent_ != NULL) {
    delete bpdu_sent_;
  }
  bpdu_sent_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::kBpduReceivedFieldNumber;
const int Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::kBpduSentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_State_Counters();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters)
}
Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters(const Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bpdu_sent()) {
    bpdu_sent_ = new ::ywrapper::UintValue(*from.bpdu_sent_);
  } else {
    bpdu_sent_ = NULL;
  }
  if (from.has_bpdu_received()) {
    bpdu_received_ = new ::ywrapper::UintValue(*from.bpdu_received_);
  } else {
    bpdu_received_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters)
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::SharedCtor() {
  ::memset(&bpdu_sent_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bpdu_received_) -
      reinterpret_cast<char*>(&bpdu_sent_)) + sizeof(bpdu_received_));
  _cached_size_ = 0;
}

Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::~Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters)
  SharedDtor();
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::SharedDtor() {
  if (this != internal_default_instance()) delete bpdu_sent_;
  if (this != internal_default_instance()) delete bpdu_received_;
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters& Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_State_Counters();
  return *internal_default_instance();
}

Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters* Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::New(::google::protobuf::Arena* arena) const {
  Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters* n = new Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && bpdu_sent_ != NULL) {
    delete bpdu_sent_;
  }
  bpdu_sent_ = NULL;
  if (GetArenaNoVirtual() == NULL && bpdu_received_ != NULL) {
    delete bpdu_received_;
  }
  bpdu_received_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(991114802u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue bpdu_sent = 14257893 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/counters/bpdu-sent"];
      case 14257893: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 114063146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bpdu_sent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue bpdu_received = 123889350 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/counters/bpdu-received"];
      case 123889350: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 991114802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bpdu_received()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters)
  return false;
#undef DO_
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue bpdu_sent = 14257893 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/counters/bpdu-sent"];
  if (this->has_bpdu_sent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14257893, *this->bpdu_sent_, output);
  }

  // .ywrapper.UintValue bpdu_received = 123889350 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/counters/bpdu-received"];
  if (this->has_bpdu_received()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      123889350, *this->bpdu_received_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters)
}

::google::protobuf::uint8* Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue bpdu_sent = 14257893 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/counters/bpdu-sent"];
  if (this->has_bpdu_sent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14257893, *this->bpdu_sent_, deterministic, target);
  }

  // .ywrapper.UintValue bpdu_received = 123889350 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/counters/bpdu-received"];
  if (this->has_bpdu_received()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        123889350, *this->bpdu_received_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters)
  return target;
}

size_t Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue bpdu_sent = 14257893 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/counters/bpdu-sent"];
  if (this->has_bpdu_sent()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bpdu_sent_);
  }

  // .ywrapper.UintValue bpdu_received = 123889350 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/counters/bpdu-received"];
  if (this->has_bpdu_received()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bpdu_received_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters)
    MergeFrom(*source);
  }
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::MergeFrom(const Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bpdu_sent()) {
    mutable_bpdu_sent()->::ywrapper::UintValue::MergeFrom(from.bpdu_sent());
  }
  if (from.has_bpdu_received()) {
    mutable_bpdu_received()->::ywrapper::UintValue::MergeFrom(from.bpdu_received());
  }
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::CopyFrom(const Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::IsInitialized() const {
  return true;
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::Swap(Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::InternalSwap(Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters* other) {
  using std::swap;
  swap(bpdu_sent_, other->bpdu_sent_);
  swap(bpdu_received_, other->bpdu_received_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_RapidPvst_Vlan_Interfaces_Interface_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_State_default_instance_._instance.get_mutable()->cost_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_State_default_instance_._instance.get_mutable()->counters_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters*>(
      ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_State_default_instance_._instance.get_mutable()->designated_bridge_address_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_State_default_instance_._instance.get_mutable()->designated_bridge_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_State_default_instance_._instance.get_mutable()->designated_cost_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_State_default_instance_._instance.get_mutable()->designated_port_num_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_State_default_instance_._instance.get_mutable()->designated_port_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_State_default_instance_._instance.get_mutable()->designated_root_address_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_State_default_instance_._instance.get_mutable()->designated_root_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_State_default_instance_._instance.get_mutable()->forward_transisitions_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_State_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_State_default_instance_._instance.get_mutable()->port_num_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_State_default_instance_._instance.get_mutable()->port_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Stp_RapidPvst_Vlan_Interfaces_Interface_State::clear_cost() {
  if (GetArenaNoVirtual() == NULL && cost_ != NULL) {
    delete cost_;
  }
  cost_ = NULL;
}
void Stp_RapidPvst_Vlan_Interfaces_Interface_State::clear_designated_bridge_address() {
  if (GetArenaNoVirtual() == NULL && designated_bridge_address_ != NULL) {
    delete designated_bridge_address_;
  }
  designated_bridge_address_ = NULL;
}
void Stp_RapidPvst_Vlan_Interfaces_Interface_State::clear_designated_bridge_priority() {
  if (GetArenaNoVirtual() == NULL && designated_bridge_priority_ != NULL) {
    delete designated_bridge_priority_;
  }
  designated_bridge_priority_ = NULL;
}
void Stp_RapidPvst_Vlan_Interfaces_Interface_State::clear_designated_cost() {
  if (GetArenaNoVirtual() == NULL && designated_cost_ != NULL) {
    delete designated_cost_;
  }
  designated_cost_ = NULL;
}
void Stp_RapidPvst_Vlan_Interfaces_Interface_State::clear_designated_port_num() {
  if (GetArenaNoVirtual() == NULL && designated_port_num_ != NULL) {
    delete designated_port_num_;
  }
  designated_port_num_ = NULL;
}
void Stp_RapidPvst_Vlan_Interfaces_Interface_State::clear_designated_port_priority() {
  if (GetArenaNoVirtual() == NULL && designated_port_priority_ != NULL) {
    delete designated_port_priority_;
  }
  designated_port_priority_ = NULL;
}
void Stp_RapidPvst_Vlan_Interfaces_Interface_State::clear_designated_root_address() {
  if (GetArenaNoVirtual() == NULL && designated_root_address_ != NULL) {
    delete designated_root_address_;
  }
  designated_root_address_ = NULL;
}
void Stp_RapidPvst_Vlan_Interfaces_Interface_State::clear_designated_root_priority() {
  if (GetArenaNoVirtual() == NULL && designated_root_priority_ != NULL) {
    delete designated_root_priority_;
  }
  designated_root_priority_ = NULL;
}
void Stp_RapidPvst_Vlan_Interfaces_Interface_State::clear_forward_transisitions() {
  if (GetArenaNoVirtual() == NULL && forward_transisitions_ != NULL) {
    delete forward_transisitions_;
  }
  forward_transisitions_ = NULL;
}
void Stp_RapidPvst_Vlan_Interfaces_Interface_State::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void Stp_RapidPvst_Vlan_Interfaces_Interface_State::clear_port_num() {
  if (GetArenaNoVirtual() == NULL && port_num_ != NULL) {
    delete port_num_;
  }
  port_num_ = NULL;
}
void Stp_RapidPvst_Vlan_Interfaces_Interface_State::clear_port_priority() {
  if (GetArenaNoVirtual() == NULL && port_priority_ != NULL) {
    delete port_priority_;
  }
  port_priority_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_RapidPvst_Vlan_Interfaces_Interface_State::kCostFieldNumber;
const int Stp_RapidPvst_Vlan_Interfaces_Interface_State::kCountersFieldNumber;
const int Stp_RapidPvst_Vlan_Interfaces_Interface_State::kDesignatedBridgeAddressFieldNumber;
const int Stp_RapidPvst_Vlan_Interfaces_Interface_State::kDesignatedBridgePriorityFieldNumber;
const int Stp_RapidPvst_Vlan_Interfaces_Interface_State::kDesignatedCostFieldNumber;
const int Stp_RapidPvst_Vlan_Interfaces_Interface_State::kDesignatedPortNumFieldNumber;
const int Stp_RapidPvst_Vlan_Interfaces_Interface_State::kDesignatedPortPriorityFieldNumber;
const int Stp_RapidPvst_Vlan_Interfaces_Interface_State::kDesignatedRootAddressFieldNumber;
const int Stp_RapidPvst_Vlan_Interfaces_Interface_State::kDesignatedRootPriorityFieldNumber;
const int Stp_RapidPvst_Vlan_Interfaces_Interface_State::kForwardTransisitionsFieldNumber;
const int Stp_RapidPvst_Vlan_Interfaces_Interface_State::kNameFieldNumber;
const int Stp_RapidPvst_Vlan_Interfaces_Interface_State::kPortNumFieldNumber;
const int Stp_RapidPvst_Vlan_Interfaces_Interface_State::kPortPriorityFieldNumber;
const int Stp_RapidPvst_Vlan_Interfaces_Interface_State::kPortStateFieldNumber;
const int Stp_RapidPvst_Vlan_Interfaces_Interface_State::kRoleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_RapidPvst_Vlan_Interfaces_Interface_State::Stp_RapidPvst_Vlan_Interfaces_Interface_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State)
}
Stp_RapidPvst_Vlan_Interfaces_Interface_State::Stp_RapidPvst_Vlan_Interfaces_Interface_State(const Stp_RapidPvst_Vlan_Interfaces_Interface_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_designated_port_priority()) {
    designated_port_priority_ = new ::ywrapper::UintValue(*from.designated_port_priority_);
  } else {
    designated_port_priority_ = NULL;
  }
  if (from.has_designated_root_priority()) {
    designated_root_priority_ = new ::ywrapper::UintValue(*from.designated_root_priority_);
  } else {
    designated_root_priority_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_designated_root_address()) {
    designated_root_address_ = new ::ywrapper::StringValue(*from.designated_root_address_);
  } else {
    designated_root_address_ = NULL;
  }
  if (from.has_designated_port_num()) {
    designated_port_num_ = new ::ywrapper::UintValue(*from.designated_port_num_);
  } else {
    designated_port_num_ = NULL;
  }
  if (from.has_port_priority()) {
    port_priority_ = new ::ywrapper::UintValue(*from.port_priority_);
  } else {
    port_priority_ = NULL;
  }
  if (from.has_designated_cost()) {
    designated_cost_ = new ::ywrapper::UintValue(*from.designated_cost_);
  } else {
    designated_cost_ = NULL;
  }
  if (from.has_forward_transisitions()) {
    forward_transisitions_ = new ::ywrapper::UintValue(*from.forward_transisitions_);
  } else {
    forward_transisitions_ = NULL;
  }
  if (from.has_port_num()) {
    port_num_ = new ::ywrapper::UintValue(*from.port_num_);
  } else {
    port_num_ = NULL;
  }
  if (from.has_counters()) {
    counters_ = new ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters(*from.counters_);
  } else {
    counters_ = NULL;
  }
  if (from.has_designated_bridge_address()) {
    designated_bridge_address_ = new ::ywrapper::StringValue(*from.designated_bridge_address_);
  } else {
    designated_bridge_address_ = NULL;
  }
  if (from.has_cost()) {
    cost_ = new ::ywrapper::UintValue(*from.cost_);
  } else {
    cost_ = NULL;
  }
  if (from.has_designated_bridge_priority()) {
    designated_bridge_priority_ = new ::ywrapper::UintValue(*from.designated_bridge_priority_);
  } else {
    designated_bridge_priority_ = NULL;
  }
  ::memcpy(&role_, &from.role_,
    static_cast<size_t>(reinterpret_cast<char*>(&port_state_) -
    reinterpret_cast<char*>(&role_)) + sizeof(port_state_));
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State)
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_State::SharedCtor() {
  ::memset(&designated_port_priority_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_state_) -
      reinterpret_cast<char*>(&designated_port_priority_)) + sizeof(port_state_));
  _cached_size_ = 0;
}

Stp_RapidPvst_Vlan_Interfaces_Interface_State::~Stp_RapidPvst_Vlan_Interfaces_Interface_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State)
  SharedDtor();
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_State::SharedDtor() {
  if (this != internal_default_instance()) delete designated_port_priority_;
  if (this != internal_default_instance()) delete designated_root_priority_;
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete designated_root_address_;
  if (this != internal_default_instance()) delete designated_port_num_;
  if (this != internal_default_instance()) delete port_priority_;
  if (this != internal_default_instance()) delete designated_cost_;
  if (this != internal_default_instance()) delete forward_transisitions_;
  if (this != internal_default_instance()) delete port_num_;
  if (this != internal_default_instance()) delete counters_;
  if (this != internal_default_instance()) delete designated_bridge_address_;
  if (this != internal_default_instance()) delete cost_;
  if (this != internal_default_instance()) delete designated_bridge_priority_;
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_RapidPvst_Vlan_Interfaces_Interface_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_RapidPvst_Vlan_Interfaces_Interface_State& Stp_RapidPvst_Vlan_Interfaces_Interface_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_State();
  return *internal_default_instance();
}

Stp_RapidPvst_Vlan_Interfaces_Interface_State* Stp_RapidPvst_Vlan_Interfaces_Interface_State::New(::google::protobuf::Arena* arena) const {
  Stp_RapidPvst_Vlan_Interfaces_Interface_State* n = new Stp_RapidPvst_Vlan_Interfaces_Interface_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && designated_port_priority_ != NULL) {
    delete designated_port_priority_;
  }
  designated_port_priority_ = NULL;
  if (GetArenaNoVirtual() == NULL && designated_root_priority_ != NULL) {
    delete designated_root_priority_;
  }
  designated_root_priority_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && designated_root_address_ != NULL) {
    delete designated_root_address_;
  }
  designated_root_address_ = NULL;
  if (GetArenaNoVirtual() == NULL && designated_port_num_ != NULL) {
    delete designated_port_num_;
  }
  designated_port_num_ = NULL;
  if (GetArenaNoVirtual() == NULL && port_priority_ != NULL) {
    delete port_priority_;
  }
  port_priority_ = NULL;
  if (GetArenaNoVirtual() == NULL && designated_cost_ != NULL) {
    delete designated_cost_;
  }
  designated_cost_ = NULL;
  if (GetArenaNoVirtual() == NULL && forward_transisitions_ != NULL) {
    delete forward_transisitions_;
  }
  forward_transisitions_ = NULL;
  if (GetArenaNoVirtual() == NULL && port_num_ != NULL) {
    delete port_num_;
  }
  port_num_ = NULL;
  if (GetArenaNoVirtual() == NULL && counters_ != NULL) {
    delete counters_;
  }
  counters_ = NULL;
  if (GetArenaNoVirtual() == NULL && designated_bridge_address_ != NULL) {
    delete designated_bridge_address_;
  }
  designated_bridge_address_ = NULL;
  if (GetArenaNoVirtual() == NULL && cost_ != NULL) {
    delete cost_;
  }
  cost_ = NULL;
  if (GetArenaNoVirtual() == NULL && designated_bridge_priority_ != NULL) {
    delete designated_bridge_priority_;
  }
  designated_bridge_priority_ = NULL;
  ::memset(&role_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_state_) -
      reinterpret_cast<char*>(&role_)) + sizeof(port_state_));
  _internal_metadata_.Clear();
}

bool Stp_RapidPvst_Vlan_Interfaces_Interface_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3898657282u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue designated_port_priority = 29583074 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-port-priority"];
      case 29583074: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 236664594 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_designated_port_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue designated_root_priority = 38925981 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-root-priority"];
      case 38925981: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 311407850 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_designated_root_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue name = 90243448 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/name"];
      case 90243448: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 721947586 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue designated_root_address = 140840559 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-root-address"];
      case 140840559: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 1126724474 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_designated_root_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue designated_port_num = 159446494 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-port-num"];
      case 159446494: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 1275571954 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_designated_port_num()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue port_priority = 195511977 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/port-priority"];
      case 195511977: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 1564095818 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_port_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue designated_cost = 205029575 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-cost"];
      case 205029575: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 1640236602 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_designated_cost()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue forward_transisitions = 250621287 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/forward-transisitions"];
      case 250621287: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 2004970298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_forward_transisitions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue port_num = 258837963 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/port-num"];
      case 258837963: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 2070703706 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_port_num()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters counters = 259051782 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/counters"];
      case 259051782: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 2072414258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_counters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue designated_bridge_address = 285199560 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-bridge-address"];
      case 285199560: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 2281596482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_designated_bridge_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTROLE role = 347361501 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/role"];
      case 347361501: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 2778892008 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_role(static_cast< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTROLE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTSTATE port_state = 363314876 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/port-state"];
      case 363314876: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 2906519008 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_port_state(static_cast< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTSTATE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue cost = 389203710 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/cost"];
      case 389203710: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 3113629682 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cost()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue designated_bridge_priority = 487332160 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-bridge-priority"];
      case 487332160: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 3898657282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_designated_bridge_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State)
  return false;
#undef DO_
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue designated_port_priority = 29583074 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-port-priority"];
  if (this->has_designated_port_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29583074, *this->designated_port_priority_, output);
  }

  // .ywrapper.UintValue designated_root_priority = 38925981 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-root-priority"];
  if (this->has_designated_root_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      38925981, *this->designated_root_priority_, output);
  }

  // .ywrapper.StringValue name = 90243448 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      90243448, *this->name_, output);
  }

  // .ywrapper.StringValue designated_root_address = 140840559 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-root-address"];
  if (this->has_designated_root_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      140840559, *this->designated_root_address_, output);
  }

  // .ywrapper.UintValue designated_port_num = 159446494 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-port-num"];
  if (this->has_designated_port_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      159446494, *this->designated_port_num_, output);
  }

  // .ywrapper.UintValue port_priority = 195511977 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/port-priority"];
  if (this->has_port_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      195511977, *this->port_priority_, output);
  }

  // .ywrapper.UintValue designated_cost = 205029575 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-cost"];
  if (this->has_designated_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      205029575, *this->designated_cost_, output);
  }

  // .ywrapper.UintValue forward_transisitions = 250621287 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/forward-transisitions"];
  if (this->has_forward_transisitions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      250621287, *this->forward_transisitions_, output);
  }

  // .ywrapper.UintValue port_num = 258837963 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/port-num"];
  if (this->has_port_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      258837963, *this->port_num_, output);
  }

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters counters = 259051782 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/counters"];
  if (this->has_counters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      259051782, *this->counters_, output);
  }

  // .ywrapper.StringValue designated_bridge_address = 285199560 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-bridge-address"];
  if (this->has_designated_bridge_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      285199560, *this->designated_bridge_address_, output);
  }

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTROLE role = 347361501 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/role"];
  if (this->role() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      347361501, this->role(), output);
  }

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTSTATE port_state = 363314876 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/port-state"];
  if (this->port_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      363314876, this->port_state(), output);
  }

  // .ywrapper.UintValue cost = 389203710 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/cost"];
  if (this->has_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      389203710, *this->cost_, output);
  }

  // .ywrapper.UintValue designated_bridge_priority = 487332160 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-bridge-priority"];
  if (this->has_designated_bridge_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      487332160, *this->designated_bridge_priority_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State)
}

::google::protobuf::uint8* Stp_RapidPvst_Vlan_Interfaces_Interface_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue designated_port_priority = 29583074 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-port-priority"];
  if (this->has_designated_port_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29583074, *this->designated_port_priority_, deterministic, target);
  }

  // .ywrapper.UintValue designated_root_priority = 38925981 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-root-priority"];
  if (this->has_designated_root_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        38925981, *this->designated_root_priority_, deterministic, target);
  }

  // .ywrapper.StringValue name = 90243448 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        90243448, *this->name_, deterministic, target);
  }

  // .ywrapper.StringValue designated_root_address = 140840559 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-root-address"];
  if (this->has_designated_root_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        140840559, *this->designated_root_address_, deterministic, target);
  }

  // .ywrapper.UintValue designated_port_num = 159446494 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-port-num"];
  if (this->has_designated_port_num()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        159446494, *this->designated_port_num_, deterministic, target);
  }

  // .ywrapper.UintValue port_priority = 195511977 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/port-priority"];
  if (this->has_port_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        195511977, *this->port_priority_, deterministic, target);
  }

  // .ywrapper.UintValue designated_cost = 205029575 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-cost"];
  if (this->has_designated_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        205029575, *this->designated_cost_, deterministic, target);
  }

  // .ywrapper.UintValue forward_transisitions = 250621287 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/forward-transisitions"];
  if (this->has_forward_transisitions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        250621287, *this->forward_transisitions_, deterministic, target);
  }

  // .ywrapper.UintValue port_num = 258837963 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/port-num"];
  if (this->has_port_num()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        258837963, *this->port_num_, deterministic, target);
  }

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters counters = 259051782 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/counters"];
  if (this->has_counters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        259051782, *this->counters_, deterministic, target);
  }

  // .ywrapper.StringValue designated_bridge_address = 285199560 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-bridge-address"];
  if (this->has_designated_bridge_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        285199560, *this->designated_bridge_address_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTROLE role = 347361501 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/role"];
  if (this->role() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      347361501, this->role(), target);
  }

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTSTATE port_state = 363314876 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/port-state"];
  if (this->port_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      363314876, this->port_state(), target);
  }

  // .ywrapper.UintValue cost = 389203710 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/cost"];
  if (this->has_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        389203710, *this->cost_, deterministic, target);
  }

  // .ywrapper.UintValue designated_bridge_priority = 487332160 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-bridge-priority"];
  if (this->has_designated_bridge_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        487332160, *this->designated_bridge_priority_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State)
  return target;
}

size_t Stp_RapidPvst_Vlan_Interfaces_Interface_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue designated_port_priority = 29583074 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-port-priority"];
  if (this->has_designated_port_priority()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->designated_port_priority_);
  }

  // .ywrapper.UintValue designated_root_priority = 38925981 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-root-priority"];
  if (this->has_designated_root_priority()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->designated_root_priority_);
  }

  // .ywrapper.StringValue name = 90243448 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/name"];
  if (this->has_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  // .ywrapper.StringValue designated_root_address = 140840559 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-root-address"];
  if (this->has_designated_root_address()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->designated_root_address_);
  }

  // .ywrapper.UintValue designated_port_num = 159446494 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-port-num"];
  if (this->has_designated_port_num()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->designated_port_num_);
  }

  // .ywrapper.UintValue port_priority = 195511977 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/port-priority"];
  if (this->has_port_priority()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->port_priority_);
  }

  // .ywrapper.UintValue designated_cost = 205029575 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-cost"];
  if (this->has_designated_cost()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->designated_cost_);
  }

  // .ywrapper.UintValue forward_transisitions = 250621287 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/forward-transisitions"];
  if (this->has_forward_transisitions()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->forward_transisitions_);
  }

  // .ywrapper.UintValue port_num = 258837963 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/port-num"];
  if (this->has_port_num()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->port_num_);
  }

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters counters = 259051782 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/counters"];
  if (this->has_counters()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->counters_);
  }

  // .ywrapper.StringValue designated_bridge_address = 285199560 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-bridge-address"];
  if (this->has_designated_bridge_address()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->designated_bridge_address_);
  }

  // .ywrapper.UintValue cost = 389203710 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/cost"];
  if (this->has_cost()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->cost_);
  }

  // .ywrapper.UintValue designated_bridge_priority = 487332160 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-bridge-priority"];
  if (this->has_designated_bridge_priority()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->designated_bridge_priority_);
  }

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTROLE role = 347361501 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/role"];
  if (this->role() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->role());
  }

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTSTATE port_state = 363314876 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/port-state"];
  if (this->port_state() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->port_state());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_RapidPvst_Vlan_Interfaces_Interface_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_RapidPvst_Vlan_Interfaces_Interface_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State)
    MergeFrom(*source);
  }
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_State::MergeFrom(const Stp_RapidPvst_Vlan_Interfaces_Interface_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_designated_port_priority()) {
    mutable_designated_port_priority()->::ywrapper::UintValue::MergeFrom(from.designated_port_priority());
  }
  if (from.has_designated_root_priority()) {
    mutable_designated_root_priority()->::ywrapper::UintValue::MergeFrom(from.designated_root_priority());
  }
  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
  if (from.has_designated_root_address()) {
    mutable_designated_root_address()->::ywrapper::StringValue::MergeFrom(from.designated_root_address());
  }
  if (from.has_designated_port_num()) {
    mutable_designated_port_num()->::ywrapper::UintValue::MergeFrom(from.designated_port_num());
  }
  if (from.has_port_priority()) {
    mutable_port_priority()->::ywrapper::UintValue::MergeFrom(from.port_priority());
  }
  if (from.has_designated_cost()) {
    mutable_designated_cost()->::ywrapper::UintValue::MergeFrom(from.designated_cost());
  }
  if (from.has_forward_transisitions()) {
    mutable_forward_transisitions()->::ywrapper::UintValue::MergeFrom(from.forward_transisitions());
  }
  if (from.has_port_num()) {
    mutable_port_num()->::ywrapper::UintValue::MergeFrom(from.port_num());
  }
  if (from.has_counters()) {
    mutable_counters()->::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::MergeFrom(from.counters());
  }
  if (from.has_designated_bridge_address()) {
    mutable_designated_bridge_address()->::ywrapper::StringValue::MergeFrom(from.designated_bridge_address());
  }
  if (from.has_cost()) {
    mutable_cost()->::ywrapper::UintValue::MergeFrom(from.cost());
  }
  if (from.has_designated_bridge_priority()) {
    mutable_designated_bridge_priority()->::ywrapper::UintValue::MergeFrom(from.designated_bridge_priority());
  }
  if (from.role() != 0) {
    set_role(from.role());
  }
  if (from.port_state() != 0) {
    set_port_state(from.port_state());
  }
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_State::CopyFrom(const Stp_RapidPvst_Vlan_Interfaces_Interface_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_RapidPvst_Vlan_Interfaces_Interface_State::IsInitialized() const {
  return true;
}

void Stp_RapidPvst_Vlan_Interfaces_Interface_State::Swap(Stp_RapidPvst_Vlan_Interfaces_Interface_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_RapidPvst_Vlan_Interfaces_Interface_State::InternalSwap(Stp_RapidPvst_Vlan_Interfaces_Interface_State* other) {
  using std::swap;
  swap(designated_port_priority_, other->designated_port_priority_);
  swap(designated_root_priority_, other->designated_root_priority_);
  swap(name_, other->name_);
  swap(designated_root_address_, other->designated_root_address_);
  swap(designated_port_num_, other->designated_port_num_);
  swap(port_priority_, other->port_priority_);
  swap(designated_cost_, other->designated_cost_);
  swap(forward_transisitions_, other->forward_transisitions_);
  swap(port_num_, other->port_num_);
  swap(counters_, other->counters_);
  swap(designated_bridge_address_, other->designated_bridge_address_);
  swap(cost_, other->cost_);
  swap(designated_bridge_priority_, other->designated_bridge_priority_);
  swap(role_, other->role_);
  swap(port_state_, other->port_state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_RapidPvst_Vlan_Interfaces_Interface_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_RapidPvst_Vlan_Interfaces_Interface::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_Config*>(
      ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_Config::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State*>(
      ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_RapidPvst_Vlan_Interfaces_Interface::kConfigFieldNumber;
const int Stp_RapidPvst_Vlan_Interfaces_Interface::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_RapidPvst_Vlan_Interfaces_Interface::Stp_RapidPvst_Vlan_Interfaces_Interface()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface)
}
Stp_RapidPvst_Vlan_Interfaces_Interface::Stp_RapidPvst_Vlan_Interfaces_Interface(const Stp_RapidPvst_Vlan_Interfaces_Interface& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface)
}

void Stp_RapidPvst_Vlan_Interfaces_Interface::SharedCtor() {
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&config_)) + sizeof(state_));
  _cached_size_ = 0;
}

Stp_RapidPvst_Vlan_Interfaces_Interface::~Stp_RapidPvst_Vlan_Interfaces_Interface() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface)
  SharedDtor();
}

void Stp_RapidPvst_Vlan_Interfaces_Interface::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete state_;
}

void Stp_RapidPvst_Vlan_Interfaces_Interface::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_RapidPvst_Vlan_Interfaces_Interface::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_RapidPvst_Vlan_Interfaces_Interface& Stp_RapidPvst_Vlan_Interfaces_Interface::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface();
  return *internal_default_instance();
}

Stp_RapidPvst_Vlan_Interfaces_Interface* Stp_RapidPvst_Vlan_Interfaces_Interface::New(::google::protobuf::Arena* arena) const {
  Stp_RapidPvst_Vlan_Interfaces_Interface* n = new Stp_RapidPvst_Vlan_Interfaces_Interface;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_RapidPvst_Vlan_Interfaces_Interface::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_RapidPvst_Vlan_Interfaces_Interface::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1636425042u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config config = 115497141 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/config"];
      case 115497141: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 923977130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State state = 204553130 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state"];
      case 204553130: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 1636425042 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface)
  return false;
#undef DO_
}

void Stp_RapidPvst_Vlan_Interfaces_Interface::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config config = 115497141 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      115497141, *this->config_, output);
  }

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State state = 204553130 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      204553130, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface)
}

::google::protobuf::uint8* Stp_RapidPvst_Vlan_Interfaces_Interface::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config config = 115497141 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        115497141, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State state = 204553130 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        204553130, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface)
  return target;
}

size_t Stp_RapidPvst_Vlan_Interfaces_Interface::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config config = 115497141 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State state = 204553130 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_RapidPvst_Vlan_Interfaces_Interface::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_RapidPvst_Vlan_Interfaces_Interface* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_RapidPvst_Vlan_Interfaces_Interface>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface)
    MergeFrom(*source);
  }
}

void Stp_RapidPvst_Vlan_Interfaces_Interface::MergeFrom(const Stp_RapidPvst_Vlan_Interfaces_Interface& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_Config::MergeFrom(from.config());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State::MergeFrom(from.state());
  }
}

void Stp_RapidPvst_Vlan_Interfaces_Interface::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_RapidPvst_Vlan_Interfaces_Interface::CopyFrom(const Stp_RapidPvst_Vlan_Interfaces_Interface& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_RapidPvst_Vlan_Interfaces_Interface::IsInitialized() const {
  return true;
}

void Stp_RapidPvst_Vlan_Interfaces_Interface::Swap(Stp_RapidPvst_Vlan_Interfaces_Interface* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_RapidPvst_Vlan_Interfaces_Interface::InternalSwap(Stp_RapidPvst_Vlan_Interfaces_Interface* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_RapidPvst_Vlan_Interfaces_Interface::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_InterfaceKey_default_instance_._instance.get_mutable()->interface_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface*>(
      ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::kNameFieldNumber;
const int Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::kInterfaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::Stp_RapidPvst_Vlan_Interfaces_InterfaceKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_Interfaces_InterfaceKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey)
}
Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::Stp_RapidPvst_Vlan_Interfaces_InterfaceKey(const Stp_RapidPvst_Vlan_Interfaces_InterfaceKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_interface()) {
    interface_ = new ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface(*from.interface_);
  } else {
    interface_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey)
}

void Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interface_ = NULL;
  _cached_size_ = 0;
}

Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::~Stp_RapidPvst_Vlan_Interfaces_InterfaceKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey)
  SharedDtor();
}

void Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete interface_;
}

void Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_RapidPvst_Vlan_Interfaces_InterfaceKey& Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_Interfaces_InterfaceKey();
  return *internal_default_instance();
}

Stp_RapidPvst_Vlan_Interfaces_InterfaceKey* Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::New(::google::protobuf::Arena* arena) const {
  Stp_RapidPvst_Vlan_Interfaces_InterfaceKey* n = new Stp_RapidPvst_Vlan_Interfaces_InterfaceKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/name"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface interface = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey)
  return false;
#undef DO_
}

void Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/name"];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface interface = 2;
  if (this->has_interface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->interface_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey)
}

::google::protobuf::uint8* Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/name"];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface interface = 2;
  if (this->has_interface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->interface_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey)
  return target;
}

size_t Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/name"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface interface = 2;
  if (this->has_interface()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interface_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_RapidPvst_Vlan_Interfaces_InterfaceKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_RapidPvst_Vlan_Interfaces_InterfaceKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey)
    MergeFrom(*source);
  }
}

void Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::MergeFrom(const Stp_RapidPvst_Vlan_Interfaces_InterfaceKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_interface()) {
    mutable_interface()->::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface::MergeFrom(from.interface());
  }
}

void Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::CopyFrom(const Stp_RapidPvst_Vlan_Interfaces_InterfaceKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::IsInitialized() const {
  return true;
}

void Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::Swap(Stp_RapidPvst_Vlan_Interfaces_InterfaceKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::InternalSwap(Stp_RapidPvst_Vlan_Interfaces_InterfaceKey* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(interface_, other->interface_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_RapidPvst_Vlan_Interfaces::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_RapidPvst_Vlan_Interfaces::kInterfaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_RapidPvst_Vlan_Interfaces::Stp_RapidPvst_Vlan_Interfaces()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_Interfaces();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces)
}
Stp_RapidPvst_Vlan_Interfaces::Stp_RapidPvst_Vlan_Interfaces(const Stp_RapidPvst_Vlan_Interfaces& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      interface_(from.interface_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces)
}

void Stp_RapidPvst_Vlan_Interfaces::SharedCtor() {
  _cached_size_ = 0;
}

Stp_RapidPvst_Vlan_Interfaces::~Stp_RapidPvst_Vlan_Interfaces() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces)
  SharedDtor();
}

void Stp_RapidPvst_Vlan_Interfaces::SharedDtor() {
}

void Stp_RapidPvst_Vlan_Interfaces::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_RapidPvst_Vlan_Interfaces::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_RapidPvst_Vlan_Interfaces& Stp_RapidPvst_Vlan_Interfaces::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_Interfaces();
  return *internal_default_instance();
}

Stp_RapidPvst_Vlan_Interfaces* Stp_RapidPvst_Vlan_Interfaces::New(::google::protobuf::Arena* arena) const {
  Stp_RapidPvst_Vlan_Interfaces* n = new Stp_RapidPvst_Vlan_Interfaces;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_RapidPvst_Vlan_Interfaces::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  interface_.Clear();
  _internal_metadata_.Clear();
}

bool Stp_RapidPvst_Vlan_Interfaces::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3629827586u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey interface = 453728448 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface"];
      case 453728448: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 3629827586 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_interface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces)
  return false;
#undef DO_
}

void Stp_RapidPvst_Vlan_Interfaces::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey interface = 453728448 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interface_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      453728448, this->interface(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces)
}

::google::protobuf::uint8* Stp_RapidPvst_Vlan_Interfaces::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey interface = 453728448 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interface_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        453728448, this->interface(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces)
  return target;
}

size_t Stp_RapidPvst_Vlan_Interfaces::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey interface = 453728448 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface"];
  {
    unsigned int count = static_cast<unsigned int>(this->interface_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->interface(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_RapidPvst_Vlan_Interfaces::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_RapidPvst_Vlan_Interfaces* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_RapidPvst_Vlan_Interfaces>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces)
    MergeFrom(*source);
  }
}

void Stp_RapidPvst_Vlan_Interfaces::MergeFrom(const Stp_RapidPvst_Vlan_Interfaces& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  interface_.MergeFrom(from.interface_);
}

void Stp_RapidPvst_Vlan_Interfaces::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_RapidPvst_Vlan_Interfaces::CopyFrom(const Stp_RapidPvst_Vlan_Interfaces& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_RapidPvst_Vlan_Interfaces::IsInitialized() const {
  return true;
}

void Stp_RapidPvst_Vlan_Interfaces::Swap(Stp_RapidPvst_Vlan_Interfaces* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_RapidPvst_Vlan_Interfaces::InternalSwap(Stp_RapidPvst_Vlan_Interfaces* other) {
  using std::swap;
  interface_.InternalSwap(&other->interface_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_RapidPvst_Vlan_Interfaces::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_RapidPvst_Vlan_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_State_default_instance_._instance.get_mutable()->bridge_address_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_State_default_instance_._instance.get_mutable()->bridge_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_State_default_instance_._instance.get_mutable()->designated_root_address_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_State_default_instance_._instance.get_mutable()->designated_root_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_State_default_instance_._instance.get_mutable()->forwarding_delay_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_State_default_instance_._instance.get_mutable()->hello_time_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_State_default_instance_._instance.get_mutable()->hold_count_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_State_default_instance_._instance.get_mutable()->hold_time_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_State_default_instance_._instance.get_mutable()->max_age_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_State_default_instance_._instance.get_mutable()->root_cost_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_State_default_instance_._instance.get_mutable()->root_port_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_State_default_instance_._instance.get_mutable()->time_since_topology_change_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_State_default_instance_._instance.get_mutable()->topology_changes_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_State_default_instance_._instance.get_mutable()->vlan_id_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Stp_RapidPvst_Vlan_State::clear_bridge_address() {
  if (GetArenaNoVirtual() == NULL && bridge_address_ != NULL) {
    delete bridge_address_;
  }
  bridge_address_ = NULL;
}
void Stp_RapidPvst_Vlan_State::clear_bridge_priority() {
  if (GetArenaNoVirtual() == NULL && bridge_priority_ != NULL) {
    delete bridge_priority_;
  }
  bridge_priority_ = NULL;
}
void Stp_RapidPvst_Vlan_State::clear_designated_root_address() {
  if (GetArenaNoVirtual() == NULL && designated_root_address_ != NULL) {
    delete designated_root_address_;
  }
  designated_root_address_ = NULL;
}
void Stp_RapidPvst_Vlan_State::clear_designated_root_priority() {
  if (GetArenaNoVirtual() == NULL && designated_root_priority_ != NULL) {
    delete designated_root_priority_;
  }
  designated_root_priority_ = NULL;
}
void Stp_RapidPvst_Vlan_State::clear_forwarding_delay() {
  if (GetArenaNoVirtual() == NULL && forwarding_delay_ != NULL) {
    delete forwarding_delay_;
  }
  forwarding_delay_ = NULL;
}
void Stp_RapidPvst_Vlan_State::clear_hello_time() {
  if (GetArenaNoVirtual() == NULL && hello_time_ != NULL) {
    delete hello_time_;
  }
  hello_time_ = NULL;
}
void Stp_RapidPvst_Vlan_State::clear_hold_count() {
  if (GetArenaNoVirtual() == NULL && hold_count_ != NULL) {
    delete hold_count_;
  }
  hold_count_ = NULL;
}
void Stp_RapidPvst_Vlan_State::clear_hold_time() {
  if (GetArenaNoVirtual() == NULL && hold_time_ != NULL) {
    delete hold_time_;
  }
  hold_time_ = NULL;
}
void Stp_RapidPvst_Vlan_State::clear_max_age() {
  if (GetArenaNoVirtual() == NULL && max_age_ != NULL) {
    delete max_age_;
  }
  max_age_ = NULL;
}
void Stp_RapidPvst_Vlan_State::clear_root_cost() {
  if (GetArenaNoVirtual() == NULL && root_cost_ != NULL) {
    delete root_cost_;
  }
  root_cost_ = NULL;
}
void Stp_RapidPvst_Vlan_State::clear_root_port() {
  if (GetArenaNoVirtual() == NULL && root_port_ != NULL) {
    delete root_port_;
  }
  root_port_ = NULL;
}
void Stp_RapidPvst_Vlan_State::clear_time_since_topology_change() {
  if (GetArenaNoVirtual() == NULL && time_since_topology_change_ != NULL) {
    delete time_since_topology_change_;
  }
  time_since_topology_change_ = NULL;
}
void Stp_RapidPvst_Vlan_State::clear_topology_changes() {
  if (GetArenaNoVirtual() == NULL && topology_changes_ != NULL) {
    delete topology_changes_;
  }
  topology_changes_ = NULL;
}
void Stp_RapidPvst_Vlan_State::clear_vlan_id() {
  if (GetArenaNoVirtual() == NULL && vlan_id_ != NULL) {
    delete vlan_id_;
  }
  vlan_id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_RapidPvst_Vlan_State::kBridgeAddressFieldNumber;
const int Stp_RapidPvst_Vlan_State::kBridgePriorityFieldNumber;
const int Stp_RapidPvst_Vlan_State::kDesignatedRootAddressFieldNumber;
const int Stp_RapidPvst_Vlan_State::kDesignatedRootPriorityFieldNumber;
const int Stp_RapidPvst_Vlan_State::kForwardingDelayFieldNumber;
const int Stp_RapidPvst_Vlan_State::kHelloTimeFieldNumber;
const int Stp_RapidPvst_Vlan_State::kHoldCountFieldNumber;
const int Stp_RapidPvst_Vlan_State::kHoldTimeFieldNumber;
const int Stp_RapidPvst_Vlan_State::kMaxAgeFieldNumber;
const int Stp_RapidPvst_Vlan_State::kRootCostFieldNumber;
const int Stp_RapidPvst_Vlan_State::kRootPortFieldNumber;
const int Stp_RapidPvst_Vlan_State::kTimeSinceTopologyChangeFieldNumber;
const int Stp_RapidPvst_Vlan_State::kTopologyChangesFieldNumber;
const int Stp_RapidPvst_Vlan_State::kVlanIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_RapidPvst_Vlan_State::Stp_RapidPvst_Vlan_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State)
}
Stp_RapidPvst_Vlan_State::Stp_RapidPvst_Vlan_State(const Stp_RapidPvst_Vlan_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_hold_count()) {
    hold_count_ = new ::ywrapper::UintValue(*from.hold_count_);
  } else {
    hold_count_ = NULL;
  }
  if (from.has_hold_time()) {
    hold_time_ = new ::ywrapper::UintValue(*from.hold_time_);
  } else {
    hold_time_ = NULL;
  }
  if (from.has_designated_root_address()) {
    designated_root_address_ = new ::ywrapper::StringValue(*from.designated_root_address_);
  } else {
    designated_root_address_ = NULL;
  }
  if (from.has_time_since_topology_change()) {
    time_since_topology_change_ = new ::ywrapper::UintValue(*from.time_since_topology_change_);
  } else {
    time_since_topology_change_ = NULL;
  }
  if (from.has_vlan_id()) {
    vlan_id_ = new ::ywrapper::UintValue(*from.vlan_id_);
  } else {
    vlan_id_ = NULL;
  }
  if (from.has_bridge_priority()) {
    bridge_priority_ = new ::ywrapper::UintValue(*from.bridge_priority_);
  } else {
    bridge_priority_ = NULL;
  }
  if (from.has_forwarding_delay()) {
    forwarding_delay_ = new ::ywrapper::UintValue(*from.forwarding_delay_);
  } else {
    forwarding_delay_ = NULL;
  }
  if (from.has_designated_root_priority()) {
    designated_root_priority_ = new ::ywrapper::UintValue(*from.designated_root_priority_);
  } else {
    designated_root_priority_ = NULL;
  }
  if (from.has_root_port()) {
    root_port_ = new ::ywrapper::UintValue(*from.root_port_);
  } else {
    root_port_ = NULL;
  }
  if (from.has_max_age()) {
    max_age_ = new ::ywrapper::UintValue(*from.max_age_);
  } else {
    max_age_ = NULL;
  }
  if (from.has_hello_time()) {
    hello_time_ = new ::ywrapper::UintValue(*from.hello_time_);
  } else {
    hello_time_ = NULL;
  }
  if (from.has_root_cost()) {
    root_cost_ = new ::ywrapper::UintValue(*from.root_cost_);
  } else {
    root_cost_ = NULL;
  }
  if (from.has_topology_changes()) {
    topology_changes_ = new ::ywrapper::UintValue(*from.topology_changes_);
  } else {
    topology_changes_ = NULL;
  }
  if (from.has_bridge_address()) {
    bridge_address_ = new ::ywrapper::StringValue(*from.bridge_address_);
  } else {
    bridge_address_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State)
}

void Stp_RapidPvst_Vlan_State::SharedCtor() {
  ::memset(&hold_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bridge_address_) -
      reinterpret_cast<char*>(&hold_count_)) + sizeof(bridge_address_));
  _cached_size_ = 0;
}

Stp_RapidPvst_Vlan_State::~Stp_RapidPvst_Vlan_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State)
  SharedDtor();
}

void Stp_RapidPvst_Vlan_State::SharedDtor() {
  if (this != internal_default_instance()) delete hold_count_;
  if (this != internal_default_instance()) delete hold_time_;
  if (this != internal_default_instance()) delete designated_root_address_;
  if (this != internal_default_instance()) delete time_since_topology_change_;
  if (this != internal_default_instance()) delete vlan_id_;
  if (this != internal_default_instance()) delete bridge_priority_;
  if (this != internal_default_instance()) delete forwarding_delay_;
  if (this != internal_default_instance()) delete designated_root_priority_;
  if (this != internal_default_instance()) delete root_port_;
  if (this != internal_default_instance()) delete max_age_;
  if (this != internal_default_instance()) delete hello_time_;
  if (this != internal_default_instance()) delete root_cost_;
  if (this != internal_default_instance()) delete topology_changes_;
  if (this != internal_default_instance()) delete bridge_address_;
}

void Stp_RapidPvst_Vlan_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_RapidPvst_Vlan_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_RapidPvst_Vlan_State& Stp_RapidPvst_Vlan_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_State();
  return *internal_default_instance();
}

Stp_RapidPvst_Vlan_State* Stp_RapidPvst_Vlan_State::New(::google::protobuf::Arena* arena) const {
  Stp_RapidPvst_Vlan_State* n = new Stp_RapidPvst_Vlan_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_RapidPvst_Vlan_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && hold_count_ != NULL) {
    delete hold_count_;
  }
  hold_count_ = NULL;
  if (GetArenaNoVirtual() == NULL && hold_time_ != NULL) {
    delete hold_time_;
  }
  hold_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && designated_root_address_ != NULL) {
    delete designated_root_address_;
  }
  designated_root_address_ = NULL;
  if (GetArenaNoVirtual() == NULL && time_since_topology_change_ != NULL) {
    delete time_since_topology_change_;
  }
  time_since_topology_change_ = NULL;
  if (GetArenaNoVirtual() == NULL && vlan_id_ != NULL) {
    delete vlan_id_;
  }
  vlan_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && bridge_priority_ != NULL) {
    delete bridge_priority_;
  }
  bridge_priority_ = NULL;
  if (GetArenaNoVirtual() == NULL && forwarding_delay_ != NULL) {
    delete forwarding_delay_;
  }
  forwarding_delay_ = NULL;
  if (GetArenaNoVirtual() == NULL && designated_root_priority_ != NULL) {
    delete designated_root_priority_;
  }
  designated_root_priority_ = NULL;
  if (GetArenaNoVirtual() == NULL && root_port_ != NULL) {
    delete root_port_;
  }
  root_port_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_age_ != NULL) {
    delete max_age_;
  }
  max_age_ = NULL;
  if (GetArenaNoVirtual() == NULL && hello_time_ != NULL) {
    delete hello_time_;
  }
  hello_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && root_cost_ != NULL) {
    delete root_cost_;
  }
  root_cost_ = NULL;
  if (GetArenaNoVirtual() == NULL && topology_changes_ != NULL) {
    delete topology_changes_;
  }
  topology_changes_ = NULL;
  if (GetArenaNoVirtual() == NULL && bridge_address_ != NULL) {
    delete bridge_address_;
  }
  bridge_address_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_RapidPvst_Vlan_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3639884498u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue hold_count = 66902911 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/hold-count"];
      case 66902911: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 535223290 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hold_count()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue hold_time = 94235933 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/hold-time"];
      case 94235933: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 753887466 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hold_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue designated_root_address = 97211874 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/designated-root-address"];
      case 97211874: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 777694994 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_designated_root_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue time_since_topology_change = 137320635 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/time-since-topology-change"];
      case 137320635: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 1098565082 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time_since_topology_change()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue vlan_id = 166116589 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/vlan-id"];
      case 166116589: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 1328932714 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vlan_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue bridge_priority = 177157582 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/bridge-priority"];
      case 177157582: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 1417260658 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bridge_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue forwarding_delay = 192510517 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/forwarding-delay"];
      case 192510517: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 1540084138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_forwarding_delay()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue designated_root_priority = 223616870 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/designated-root-priority"];
      case 223616870: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 1788934962 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_designated_root_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue root_port = 244515786 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/root-port"];
      case 244515786: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 1956126290 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_root_port()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue max_age = 277917522 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/max-age"];
      case 277917522: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 2223340178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_age()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue hello_time = 332690440 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/hello-time"];
      case 332690440: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 2661523522 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hello_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue root_cost = 379544816 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/root-cost"];
      case 379544816: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 3036358530 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_root_cost()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue topology_changes = 416437749 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/topology-changes"];
      case 416437749: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 3331501994 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_topology_changes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue bridge_address = 454985562 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/bridge-address"];
      case 454985562: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 3639884498 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bridge_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State)
  return false;
#undef DO_
}

void Stp_RapidPvst_Vlan_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue hold_count = 66902911 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/hold-count"];
  if (this->has_hold_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      66902911, *this->hold_count_, output);
  }

  // .ywrapper.UintValue hold_time = 94235933 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/hold-time"];
  if (this->has_hold_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      94235933, *this->hold_time_, output);
  }

  // .ywrapper.StringValue designated_root_address = 97211874 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/designated-root-address"];
  if (this->has_designated_root_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      97211874, *this->designated_root_address_, output);
  }

  // .ywrapper.UintValue time_since_topology_change = 137320635 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/time-since-topology-change"];
  if (this->has_time_since_topology_change()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      137320635, *this->time_since_topology_change_, output);
  }

  // .ywrapper.UintValue vlan_id = 166116589 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/vlan-id"];
  if (this->has_vlan_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      166116589, *this->vlan_id_, output);
  }

  // .ywrapper.UintValue bridge_priority = 177157582 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/bridge-priority"];
  if (this->has_bridge_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      177157582, *this->bridge_priority_, output);
  }

  // .ywrapper.UintValue forwarding_delay = 192510517 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/forwarding-delay"];
  if (this->has_forwarding_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      192510517, *this->forwarding_delay_, output);
  }

  // .ywrapper.UintValue designated_root_priority = 223616870 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/designated-root-priority"];
  if (this->has_designated_root_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      223616870, *this->designated_root_priority_, output);
  }

  // .ywrapper.UintValue root_port = 244515786 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/root-port"];
  if (this->has_root_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      244515786, *this->root_port_, output);
  }

  // .ywrapper.UintValue max_age = 277917522 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/max-age"];
  if (this->has_max_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      277917522, *this->max_age_, output);
  }

  // .ywrapper.UintValue hello_time = 332690440 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/hello-time"];
  if (this->has_hello_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      332690440, *this->hello_time_, output);
  }

  // .ywrapper.UintValue root_cost = 379544816 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/root-cost"];
  if (this->has_root_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      379544816, *this->root_cost_, output);
  }

  // .ywrapper.UintValue topology_changes = 416437749 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/topology-changes"];
  if (this->has_topology_changes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      416437749, *this->topology_changes_, output);
  }

  // .ywrapper.StringValue bridge_address = 454985562 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/bridge-address"];
  if (this->has_bridge_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      454985562, *this->bridge_address_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State)
}

::google::protobuf::uint8* Stp_RapidPvst_Vlan_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue hold_count = 66902911 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/hold-count"];
  if (this->has_hold_count()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        66902911, *this->hold_count_, deterministic, target);
  }

  // .ywrapper.UintValue hold_time = 94235933 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/hold-time"];
  if (this->has_hold_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        94235933, *this->hold_time_, deterministic, target);
  }

  // .ywrapper.StringValue designated_root_address = 97211874 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/designated-root-address"];
  if (this->has_designated_root_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        97211874, *this->designated_root_address_, deterministic, target);
  }

  // .ywrapper.UintValue time_since_topology_change = 137320635 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/time-since-topology-change"];
  if (this->has_time_since_topology_change()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        137320635, *this->time_since_topology_change_, deterministic, target);
  }

  // .ywrapper.UintValue vlan_id = 166116589 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/vlan-id"];
  if (this->has_vlan_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        166116589, *this->vlan_id_, deterministic, target);
  }

  // .ywrapper.UintValue bridge_priority = 177157582 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/bridge-priority"];
  if (this->has_bridge_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        177157582, *this->bridge_priority_, deterministic, target);
  }

  // .ywrapper.UintValue forwarding_delay = 192510517 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/forwarding-delay"];
  if (this->has_forwarding_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        192510517, *this->forwarding_delay_, deterministic, target);
  }

  // .ywrapper.UintValue designated_root_priority = 223616870 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/designated-root-priority"];
  if (this->has_designated_root_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        223616870, *this->designated_root_priority_, deterministic, target);
  }

  // .ywrapper.UintValue root_port = 244515786 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/root-port"];
  if (this->has_root_port()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        244515786, *this->root_port_, deterministic, target);
  }

  // .ywrapper.UintValue max_age = 277917522 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/max-age"];
  if (this->has_max_age()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        277917522, *this->max_age_, deterministic, target);
  }

  // .ywrapper.UintValue hello_time = 332690440 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/hello-time"];
  if (this->has_hello_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        332690440, *this->hello_time_, deterministic, target);
  }

  // .ywrapper.UintValue root_cost = 379544816 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/root-cost"];
  if (this->has_root_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        379544816, *this->root_cost_, deterministic, target);
  }

  // .ywrapper.UintValue topology_changes = 416437749 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/topology-changes"];
  if (this->has_topology_changes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        416437749, *this->topology_changes_, deterministic, target);
  }

  // .ywrapper.StringValue bridge_address = 454985562 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/bridge-address"];
  if (this->has_bridge_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        454985562, *this->bridge_address_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State)
  return target;
}

size_t Stp_RapidPvst_Vlan_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue hold_count = 66902911 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/hold-count"];
  if (this->has_hold_count()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->hold_count_);
  }

  // .ywrapper.UintValue hold_time = 94235933 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/hold-time"];
  if (this->has_hold_time()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->hold_time_);
  }

  // .ywrapper.StringValue designated_root_address = 97211874 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/designated-root-address"];
  if (this->has_designated_root_address()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->designated_root_address_);
  }

  // .ywrapper.UintValue time_since_topology_change = 137320635 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/time-since-topology-change"];
  if (this->has_time_since_topology_change()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->time_since_topology_change_);
  }

  // .ywrapper.UintValue vlan_id = 166116589 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/vlan-id"];
  if (this->has_vlan_id()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->vlan_id_);
  }

  // .ywrapper.UintValue bridge_priority = 177157582 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/bridge-priority"];
  if (this->has_bridge_priority()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bridge_priority_);
  }

  // .ywrapper.UintValue forwarding_delay = 192510517 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/forwarding-delay"];
  if (this->has_forwarding_delay()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->forwarding_delay_);
  }

  // .ywrapper.UintValue designated_root_priority = 223616870 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/designated-root-priority"];
  if (this->has_designated_root_priority()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->designated_root_priority_);
  }

  // .ywrapper.UintValue root_port = 244515786 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/root-port"];
  if (this->has_root_port()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->root_port_);
  }

  // .ywrapper.UintValue max_age = 277917522 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/max-age"];
  if (this->has_max_age()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_age_);
  }

  // .ywrapper.UintValue hello_time = 332690440 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/hello-time"];
  if (this->has_hello_time()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->hello_time_);
  }

  // .ywrapper.UintValue root_cost = 379544816 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/root-cost"];
  if (this->has_root_cost()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->root_cost_);
  }

  // .ywrapper.UintValue topology_changes = 416437749 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/topology-changes"];
  if (this->has_topology_changes()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->topology_changes_);
  }

  // .ywrapper.StringValue bridge_address = 454985562 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/bridge-address"];
  if (this->has_bridge_address()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bridge_address_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_RapidPvst_Vlan_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_RapidPvst_Vlan_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_RapidPvst_Vlan_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State)
    MergeFrom(*source);
  }
}

void Stp_RapidPvst_Vlan_State::MergeFrom(const Stp_RapidPvst_Vlan_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_hold_count()) {
    mutable_hold_count()->::ywrapper::UintValue::MergeFrom(from.hold_count());
  }
  if (from.has_hold_time()) {
    mutable_hold_time()->::ywrapper::UintValue::MergeFrom(from.hold_time());
  }
  if (from.has_designated_root_address()) {
    mutable_designated_root_address()->::ywrapper::StringValue::MergeFrom(from.designated_root_address());
  }
  if (from.has_time_since_topology_change()) {
    mutable_time_since_topology_change()->::ywrapper::UintValue::MergeFrom(from.time_since_topology_change());
  }
  if (from.has_vlan_id()) {
    mutable_vlan_id()->::ywrapper::UintValue::MergeFrom(from.vlan_id());
  }
  if (from.has_bridge_priority()) {
    mutable_bridge_priority()->::ywrapper::UintValue::MergeFrom(from.bridge_priority());
  }
  if (from.has_forwarding_delay()) {
    mutable_forwarding_delay()->::ywrapper::UintValue::MergeFrom(from.forwarding_delay());
  }
  if (from.has_designated_root_priority()) {
    mutable_designated_root_priority()->::ywrapper::UintValue::MergeFrom(from.designated_root_priority());
  }
  if (from.has_root_port()) {
    mutable_root_port()->::ywrapper::UintValue::MergeFrom(from.root_port());
  }
  if (from.has_max_age()) {
    mutable_max_age()->::ywrapper::UintValue::MergeFrom(from.max_age());
  }
  if (from.has_hello_time()) {
    mutable_hello_time()->::ywrapper::UintValue::MergeFrom(from.hello_time());
  }
  if (from.has_root_cost()) {
    mutable_root_cost()->::ywrapper::UintValue::MergeFrom(from.root_cost());
  }
  if (from.has_topology_changes()) {
    mutable_topology_changes()->::ywrapper::UintValue::MergeFrom(from.topology_changes());
  }
  if (from.has_bridge_address()) {
    mutable_bridge_address()->::ywrapper::StringValue::MergeFrom(from.bridge_address());
  }
}

void Stp_RapidPvst_Vlan_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_RapidPvst_Vlan_State::CopyFrom(const Stp_RapidPvst_Vlan_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_RapidPvst_Vlan_State::IsInitialized() const {
  return true;
}

void Stp_RapidPvst_Vlan_State::Swap(Stp_RapidPvst_Vlan_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_RapidPvst_Vlan_State::InternalSwap(Stp_RapidPvst_Vlan_State* other) {
  using std::swap;
  swap(hold_count_, other->hold_count_);
  swap(hold_time_, other->hold_time_);
  swap(designated_root_address_, other->designated_root_address_);
  swap(time_since_topology_change_, other->time_since_topology_change_);
  swap(vlan_id_, other->vlan_id_);
  swap(bridge_priority_, other->bridge_priority_);
  swap(forwarding_delay_, other->forwarding_delay_);
  swap(designated_root_priority_, other->designated_root_priority_);
  swap(root_port_, other->root_port_);
  swap(max_age_, other->max_age_);
  swap(hello_time_, other->hello_time_);
  swap(root_cost_, other->root_cost_);
  swap(topology_changes_, other->topology_changes_);
  swap(bridge_address_, other->bridge_address_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_RapidPvst_Vlan_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_RapidPvst_Vlan::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Config*>(
      ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Config::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_default_instance_._instance.get_mutable()->interfaces_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces*>(
      ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State*>(
      ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_RapidPvst_Vlan::kConfigFieldNumber;
const int Stp_RapidPvst_Vlan::kInterfacesFieldNumber;
const int Stp_RapidPvst_Vlan::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_RapidPvst_Vlan::Stp_RapidPvst_Vlan()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan)
}
Stp_RapidPvst_Vlan::Stp_RapidPvst_Vlan(const Stp_RapidPvst_Vlan& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_interfaces()) {
    interfaces_ = new ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces(*from.interfaces_);
  } else {
    interfaces_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan)
}

void Stp_RapidPvst_Vlan::SharedCtor() {
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&config_)) + sizeof(state_));
  _cached_size_ = 0;
}

Stp_RapidPvst_Vlan::~Stp_RapidPvst_Vlan() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan)
  SharedDtor();
}

void Stp_RapidPvst_Vlan::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete interfaces_;
  if (this != internal_default_instance()) delete state_;
}

void Stp_RapidPvst_Vlan::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_RapidPvst_Vlan::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_RapidPvst_Vlan& Stp_RapidPvst_Vlan::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan();
  return *internal_default_instance();
}

Stp_RapidPvst_Vlan* Stp_RapidPvst_Vlan::New(::google::protobuf::Arena* arena) const {
  Stp_RapidPvst_Vlan* n = new Stp_RapidPvst_Vlan;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_RapidPvst_Vlan::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && interfaces_ != NULL) {
    delete interfaces_;
  }
  interfaces_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_RapidPvst_Vlan::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3360857082u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config config = 145334722 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config"];
      case 145334722: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 1162677778 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces interfaces = 305066408 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces"];
      case 305066408: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 2440531266 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interfaces()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State state = 420107135 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state"];
      case 420107135: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 3360857082 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan)
  return false;
#undef DO_
}

void Stp_RapidPvst_Vlan::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config config = 145334722 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      145334722, *this->config_, output);
  }

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces interfaces = 305066408 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces"];
  if (this->has_interfaces()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      305066408, *this->interfaces_, output);
  }

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State state = 420107135 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      420107135, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan)
}

::google::protobuf::uint8* Stp_RapidPvst_Vlan::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config config = 145334722 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        145334722, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces interfaces = 305066408 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces"];
  if (this->has_interfaces()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        305066408, *this->interfaces_, deterministic, target);
  }

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State state = 420107135 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        420107135, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan)
  return target;
}

size_t Stp_RapidPvst_Vlan::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config config = 145334722 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces interfaces = 305066408 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces"];
  if (this->has_interfaces()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interfaces_);
  }

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State state = 420107135 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_RapidPvst_Vlan::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_RapidPvst_Vlan* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_RapidPvst_Vlan>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan)
    MergeFrom(*source);
  }
}

void Stp_RapidPvst_Vlan::MergeFrom(const Stp_RapidPvst_Vlan& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Config::MergeFrom(from.config());
  }
  if (from.has_interfaces()) {
    mutable_interfaces()->::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces::MergeFrom(from.interfaces());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State::MergeFrom(from.state());
  }
}

void Stp_RapidPvst_Vlan::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_RapidPvst_Vlan::CopyFrom(const Stp_RapidPvst_Vlan& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_RapidPvst_Vlan::IsInitialized() const {
  return true;
}

void Stp_RapidPvst_Vlan::Swap(Stp_RapidPvst_Vlan* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_RapidPvst_Vlan::InternalSwap(Stp_RapidPvst_Vlan* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(interfaces_, other->interfaces_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_RapidPvst_Vlan::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_RapidPvst_VlanKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_VlanKey_default_instance_._instance.get_mutable()->vlan_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan*>(
      ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_RapidPvst_VlanKey::kVlanIdFieldNumber;
const int Stp_RapidPvst_VlanKey::kVlanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_RapidPvst_VlanKey::Stp_RapidPvst_VlanKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_VlanKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey)
}
Stp_RapidPvst_VlanKey::Stp_RapidPvst_VlanKey(const Stp_RapidPvst_VlanKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_vlan()) {
    vlan_ = new ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan(*from.vlan_);
  } else {
    vlan_ = NULL;
  }
  vlan_id_ = from.vlan_id_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey)
}

void Stp_RapidPvst_VlanKey::SharedCtor() {
  ::memset(&vlan_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vlan_id_) -
      reinterpret_cast<char*>(&vlan_)) + sizeof(vlan_id_));
  _cached_size_ = 0;
}

Stp_RapidPvst_VlanKey::~Stp_RapidPvst_VlanKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey)
  SharedDtor();
}

void Stp_RapidPvst_VlanKey::SharedDtor() {
  if (this != internal_default_instance()) delete vlan_;
}

void Stp_RapidPvst_VlanKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_RapidPvst_VlanKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_RapidPvst_VlanKey& Stp_RapidPvst_VlanKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_VlanKey();
  return *internal_default_instance();
}

Stp_RapidPvst_VlanKey* Stp_RapidPvst_VlanKey::New(::google::protobuf::Arena* arena) const {
  Stp_RapidPvst_VlanKey* n = new Stp_RapidPvst_VlanKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_RapidPvst_VlanKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && vlan_ != NULL) {
    delete vlan_;
  }
  vlan_ = NULL;
  vlan_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Stp_RapidPvst_VlanKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 vlan_id = 1 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/vlan-id"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &vlan_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan vlan = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_vlan()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey)
  return false;
#undef DO_
}

void Stp_RapidPvst_VlanKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 vlan_id = 1 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/vlan-id"];
  if (this->vlan_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->vlan_id(), output);
  }

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan vlan = 2;
  if (this->has_vlan()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->vlan_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey)
}

::google::protobuf::uint8* Stp_RapidPvst_VlanKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 vlan_id = 1 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/vlan-id"];
  if (this->vlan_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->vlan_id(), target);
  }

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan vlan = 2;
  if (this->has_vlan()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->vlan_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey)
  return target;
}

size_t Stp_RapidPvst_VlanKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan vlan = 2;
  if (this->has_vlan()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->vlan_);
  }

  // uint64 vlan_id = 1 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/vlan-id"];
  if (this->vlan_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->vlan_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_RapidPvst_VlanKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_RapidPvst_VlanKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_RapidPvst_VlanKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey)
    MergeFrom(*source);
  }
}

void Stp_RapidPvst_VlanKey::MergeFrom(const Stp_RapidPvst_VlanKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_vlan()) {
    mutable_vlan()->::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan::MergeFrom(from.vlan());
  }
  if (from.vlan_id() != 0) {
    set_vlan_id(from.vlan_id());
  }
}

void Stp_RapidPvst_VlanKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_RapidPvst_VlanKey::CopyFrom(const Stp_RapidPvst_VlanKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_RapidPvst_VlanKey::IsInitialized() const {
  return true;
}

void Stp_RapidPvst_VlanKey::Swap(Stp_RapidPvst_VlanKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_RapidPvst_VlanKey::InternalSwap(Stp_RapidPvst_VlanKey* other) {
  using std::swap;
  swap(vlan_, other->vlan_);
  swap(vlan_id_, other->vlan_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_RapidPvst_VlanKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_RapidPvst::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_RapidPvst::kVlanFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_RapidPvst::Stp_RapidPvst()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst)
}
Stp_RapidPvst::Stp_RapidPvst(const Stp_RapidPvst& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      vlan_(from.vlan_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst)
}

void Stp_RapidPvst::SharedCtor() {
  _cached_size_ = 0;
}

Stp_RapidPvst::~Stp_RapidPvst() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.RapidPvst)
  SharedDtor();
}

void Stp_RapidPvst::SharedDtor() {
}

void Stp_RapidPvst::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_RapidPvst::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_RapidPvst& Stp_RapidPvst::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst();
  return *internal_default_instance();
}

Stp_RapidPvst* Stp_RapidPvst::New(::google::protobuf::Arena* arena) const {
  Stp_RapidPvst* n = new Stp_RapidPvst;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_RapidPvst::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vlan_.Clear();
  _internal_metadata_.Clear();
}

bool Stp_RapidPvst::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3985003882u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey vlan = 498125485 [(.yext.schemapath) = "/stp/rapid-pvst/vlan"];
      case 498125485: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 3985003882 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_vlan()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.RapidPvst)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.RapidPvst)
  return false;
#undef DO_
}

void Stp_RapidPvst::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey vlan = 498125485 [(.yext.schemapath) = "/stp/rapid-pvst/vlan"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vlan_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      498125485, this->vlan(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.RapidPvst)
}

::google::protobuf::uint8* Stp_RapidPvst::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey vlan = 498125485 [(.yext.schemapath) = "/stp/rapid-pvst/vlan"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vlan_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        498125485, this->vlan(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.RapidPvst)
  return target;
}

size_t Stp_RapidPvst::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey vlan = 498125485 [(.yext.schemapath) = "/stp/rapid-pvst/vlan"];
  {
    unsigned int count = static_cast<unsigned int>(this->vlan_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vlan(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_RapidPvst::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_RapidPvst* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_RapidPvst>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.RapidPvst)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.RapidPvst)
    MergeFrom(*source);
  }
}

void Stp_RapidPvst::MergeFrom(const Stp_RapidPvst& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vlan_.MergeFrom(from.vlan_);
}

void Stp_RapidPvst::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_RapidPvst::CopyFrom(const Stp_RapidPvst& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.RapidPvst)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_RapidPvst::IsInitialized() const {
  return true;
}

void Stp_RapidPvst::Swap(Stp_RapidPvst* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_RapidPvst::InternalSwap(Stp_RapidPvst* other) {
  using std::swap;
  vlan_.InternalSwap(&other->vlan_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_RapidPvst::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Rstp_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_Config_default_instance_._instance.get_mutable()->bridge_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_Config_default_instance_._instance.get_mutable()->forwarding_delay_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_Config_default_instance_._instance.get_mutable()->hello_time_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_Config_default_instance_._instance.get_mutable()->hold_count_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_Config_default_instance_._instance.get_mutable()->max_age_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Stp_Rstp_Config::clear_bridge_priority() {
  if (GetArenaNoVirtual() == NULL && bridge_priority_ != NULL) {
    delete bridge_priority_;
  }
  bridge_priority_ = NULL;
}
void Stp_Rstp_Config::clear_forwarding_delay() {
  if (GetArenaNoVirtual() == NULL && forwarding_delay_ != NULL) {
    delete forwarding_delay_;
  }
  forwarding_delay_ = NULL;
}
void Stp_Rstp_Config::clear_hello_time() {
  if (GetArenaNoVirtual() == NULL && hello_time_ != NULL) {
    delete hello_time_;
  }
  hello_time_ = NULL;
}
void Stp_Rstp_Config::clear_hold_count() {
  if (GetArenaNoVirtual() == NULL && hold_count_ != NULL) {
    delete hold_count_;
  }
  hold_count_ = NULL;
}
void Stp_Rstp_Config::clear_max_age() {
  if (GetArenaNoVirtual() == NULL && max_age_ != NULL) {
    delete max_age_;
  }
  max_age_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Rstp_Config::kBridgePriorityFieldNumber;
const int Stp_Rstp_Config::kForwardingDelayFieldNumber;
const int Stp_Rstp_Config::kHelloTimeFieldNumber;
const int Stp_Rstp_Config::kHoldCountFieldNumber;
const int Stp_Rstp_Config::kMaxAgeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Rstp_Config::Stp_Rstp_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Rstp.Config)
}
Stp_Rstp_Config::Stp_Rstp_Config(const Stp_Rstp_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_max_age()) {
    max_age_ = new ::ywrapper::UintValue(*from.max_age_);
  } else {
    max_age_ = NULL;
  }
  if (from.has_hello_time()) {
    hello_time_ = new ::ywrapper::UintValue(*from.hello_time_);
  } else {
    hello_time_ = NULL;
  }
  if (from.has_bridge_priority()) {
    bridge_priority_ = new ::ywrapper::UintValue(*from.bridge_priority_);
  } else {
    bridge_priority_ = NULL;
  }
  if (from.has_hold_count()) {
    hold_count_ = new ::ywrapper::UintValue(*from.hold_count_);
  } else {
    hold_count_ = NULL;
  }
  if (from.has_forwarding_delay()) {
    forwarding_delay_ = new ::ywrapper::UintValue(*from.forwarding_delay_);
  } else {
    forwarding_delay_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Rstp.Config)
}

void Stp_Rstp_Config::SharedCtor() {
  ::memset(&max_age_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&forwarding_delay_) -
      reinterpret_cast<char*>(&max_age_)) + sizeof(forwarding_delay_));
  _cached_size_ = 0;
}

Stp_Rstp_Config::~Stp_Rstp_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Rstp.Config)
  SharedDtor();
}

void Stp_Rstp_Config::SharedDtor() {
  if (this != internal_default_instance()) delete max_age_;
  if (this != internal_default_instance()) delete hello_time_;
  if (this != internal_default_instance()) delete bridge_priority_;
  if (this != internal_default_instance()) delete hold_count_;
  if (this != internal_default_instance()) delete forwarding_delay_;
}

void Stp_Rstp_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Rstp_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Rstp_Config& Stp_Rstp_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_Config();
  return *internal_default_instance();
}

Stp_Rstp_Config* Stp_Rstp_Config::New(::google::protobuf::Arena* arena) const {
  Stp_Rstp_Config* n = new Stp_Rstp_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Rstp_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && max_age_ != NULL) {
    delete max_age_;
  }
  max_age_ = NULL;
  if (GetArenaNoVirtual() == NULL && hello_time_ != NULL) {
    delete hello_time_;
  }
  hello_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && bridge_priority_ != NULL) {
    delete bridge_priority_;
  }
  bridge_priority_ = NULL;
  if (GetArenaNoVirtual() == NULL && hold_count_ != NULL) {
    delete hold_count_;
  }
  hold_count_ = NULL;
  if (GetArenaNoVirtual() == NULL && forwarding_delay_ != NULL) {
    delete forwarding_delay_;
  }
  forwarding_delay_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_Rstp_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3766265994u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue max_age = 60314870 [(.yext.schemapath) = "/stp/rstp/config/max-age"];
      case 60314870: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 482518962 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_age()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue hello_time = 88797588 [(.yext.schemapath) = "/stp/rstp/config/hello-time"];
      case 88797588: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 710380706 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hello_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue bridge_priority = 196251874 [(.yext.schemapath) = "/stp/rstp/config/bridge-priority"];
      case 196251874: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 1570014994 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bridge_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue hold_count = 405807659 [(.yext.schemapath) = "/stp/rstp/config/hold-count"];
      case 405807659: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 3246461274 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hold_count()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue forwarding_delay = 470783249 [(.yext.schemapath) = "/stp/rstp/config/forwarding-delay"];
      case 470783249: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 3766265994 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_forwarding_delay()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Rstp.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Rstp.Config)
  return false;
#undef DO_
}

void Stp_Rstp_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue max_age = 60314870 [(.yext.schemapath) = "/stp/rstp/config/max-age"];
  if (this->has_max_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      60314870, *this->max_age_, output);
  }

  // .ywrapper.UintValue hello_time = 88797588 [(.yext.schemapath) = "/stp/rstp/config/hello-time"];
  if (this->has_hello_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      88797588, *this->hello_time_, output);
  }

  // .ywrapper.UintValue bridge_priority = 196251874 [(.yext.schemapath) = "/stp/rstp/config/bridge-priority"];
  if (this->has_bridge_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      196251874, *this->bridge_priority_, output);
  }

  // .ywrapper.UintValue hold_count = 405807659 [(.yext.schemapath) = "/stp/rstp/config/hold-count"];
  if (this->has_hold_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      405807659, *this->hold_count_, output);
  }

  // .ywrapper.UintValue forwarding_delay = 470783249 [(.yext.schemapath) = "/stp/rstp/config/forwarding-delay"];
  if (this->has_forwarding_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      470783249, *this->forwarding_delay_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Rstp.Config)
}

::google::protobuf::uint8* Stp_Rstp_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue max_age = 60314870 [(.yext.schemapath) = "/stp/rstp/config/max-age"];
  if (this->has_max_age()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        60314870, *this->max_age_, deterministic, target);
  }

  // .ywrapper.UintValue hello_time = 88797588 [(.yext.schemapath) = "/stp/rstp/config/hello-time"];
  if (this->has_hello_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        88797588, *this->hello_time_, deterministic, target);
  }

  // .ywrapper.UintValue bridge_priority = 196251874 [(.yext.schemapath) = "/stp/rstp/config/bridge-priority"];
  if (this->has_bridge_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        196251874, *this->bridge_priority_, deterministic, target);
  }

  // .ywrapper.UintValue hold_count = 405807659 [(.yext.schemapath) = "/stp/rstp/config/hold-count"];
  if (this->has_hold_count()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        405807659, *this->hold_count_, deterministic, target);
  }

  // .ywrapper.UintValue forwarding_delay = 470783249 [(.yext.schemapath) = "/stp/rstp/config/forwarding-delay"];
  if (this->has_forwarding_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        470783249, *this->forwarding_delay_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Rstp.Config)
  return target;
}

size_t Stp_Rstp_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue max_age = 60314870 [(.yext.schemapath) = "/stp/rstp/config/max-age"];
  if (this->has_max_age()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_age_);
  }

  // .ywrapper.UintValue hello_time = 88797588 [(.yext.schemapath) = "/stp/rstp/config/hello-time"];
  if (this->has_hello_time()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->hello_time_);
  }

  // .ywrapper.UintValue bridge_priority = 196251874 [(.yext.schemapath) = "/stp/rstp/config/bridge-priority"];
  if (this->has_bridge_priority()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bridge_priority_);
  }

  // .ywrapper.UintValue hold_count = 405807659 [(.yext.schemapath) = "/stp/rstp/config/hold-count"];
  if (this->has_hold_count()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->hold_count_);
  }

  // .ywrapper.UintValue forwarding_delay = 470783249 [(.yext.schemapath) = "/stp/rstp/config/forwarding-delay"];
  if (this->has_forwarding_delay()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->forwarding_delay_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Rstp_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Rstp_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Rstp_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Rstp.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Rstp.Config)
    MergeFrom(*source);
  }
}

void Stp_Rstp_Config::MergeFrom(const Stp_Rstp_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_max_age()) {
    mutable_max_age()->::ywrapper::UintValue::MergeFrom(from.max_age());
  }
  if (from.has_hello_time()) {
    mutable_hello_time()->::ywrapper::UintValue::MergeFrom(from.hello_time());
  }
  if (from.has_bridge_priority()) {
    mutable_bridge_priority()->::ywrapper::UintValue::MergeFrom(from.bridge_priority());
  }
  if (from.has_hold_count()) {
    mutable_hold_count()->::ywrapper::UintValue::MergeFrom(from.hold_count());
  }
  if (from.has_forwarding_delay()) {
    mutable_forwarding_delay()->::ywrapper::UintValue::MergeFrom(from.forwarding_delay());
  }
}

void Stp_Rstp_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Rstp_Config::CopyFrom(const Stp_Rstp_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Rstp_Config::IsInitialized() const {
  return true;
}

void Stp_Rstp_Config::Swap(Stp_Rstp_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Rstp_Config::InternalSwap(Stp_Rstp_Config* other) {
  using std::swap;
  swap(max_age_, other->max_age_);
  swap(hello_time_, other->hello_time_);
  swap(bridge_priority_, other->bridge_priority_);
  swap(hold_count_, other->hold_count_);
  swap(forwarding_delay_, other->forwarding_delay_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Rstp_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Rstp_Interfaces_Interface_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_Config_default_instance_._instance.get_mutable()->cost_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_Config_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_Config_default_instance_._instance.get_mutable()->port_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Stp_Rstp_Interfaces_Interface_Config::clear_cost() {
  if (GetArenaNoVirtual() == NULL && cost_ != NULL) {
    delete cost_;
  }
  cost_ = NULL;
}
void Stp_Rstp_Interfaces_Interface_Config::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void Stp_Rstp_Interfaces_Interface_Config::clear_port_priority() {
  if (GetArenaNoVirtual() == NULL && port_priority_ != NULL) {
    delete port_priority_;
  }
  port_priority_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Rstp_Interfaces_Interface_Config::kCostFieldNumber;
const int Stp_Rstp_Interfaces_Interface_Config::kNameFieldNumber;
const int Stp_Rstp_Interfaces_Interface_Config::kPortPriorityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Rstp_Interfaces_Interface_Config::Stp_Rstp_Interfaces_Interface_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_Interfaces_Interface_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config)
}
Stp_Rstp_Interfaces_Interface_Config::Stp_Rstp_Interfaces_Interface_Config(const Stp_Rstp_Interfaces_Interface_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_cost()) {
    cost_ = new ::ywrapper::UintValue(*from.cost_);
  } else {
    cost_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_port_priority()) {
    port_priority_ = new ::ywrapper::UintValue(*from.port_priority_);
  } else {
    port_priority_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config)
}

void Stp_Rstp_Interfaces_Interface_Config::SharedCtor() {
  ::memset(&cost_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_priority_) -
      reinterpret_cast<char*>(&cost_)) + sizeof(port_priority_));
  _cached_size_ = 0;
}

Stp_Rstp_Interfaces_Interface_Config::~Stp_Rstp_Interfaces_Interface_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config)
  SharedDtor();
}

void Stp_Rstp_Interfaces_Interface_Config::SharedDtor() {
  if (this != internal_default_instance()) delete cost_;
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete port_priority_;
}

void Stp_Rstp_Interfaces_Interface_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Rstp_Interfaces_Interface_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Rstp_Interfaces_Interface_Config& Stp_Rstp_Interfaces_Interface_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_Interfaces_Interface_Config();
  return *internal_default_instance();
}

Stp_Rstp_Interfaces_Interface_Config* Stp_Rstp_Interfaces_Interface_Config::New(::google::protobuf::Arena* arena) const {
  Stp_Rstp_Interfaces_Interface_Config* n = new Stp_Rstp_Interfaces_Interface_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Rstp_Interfaces_Interface_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && cost_ != NULL) {
    delete cost_;
  }
  cost_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && port_priority_ != NULL) {
    delete port_priority_;
  }
  port_priority_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_Rstp_Interfaces_Interface_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3280632842u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue cost = 25438518 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/config/cost"];
      case 25438518: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 203508146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cost()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue name = 302799488 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/config/name"];
      case 302799488: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 2422395906 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue port_priority = 410079105 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/config/port-priority"];
      case 410079105: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 3280632842 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_port_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config)
  return false;
#undef DO_
}

void Stp_Rstp_Interfaces_Interface_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue cost = 25438518 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/config/cost"];
  if (this->has_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      25438518, *this->cost_, output);
  }

  // .ywrapper.StringValue name = 302799488 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/config/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      302799488, *this->name_, output);
  }

  // .ywrapper.UintValue port_priority = 410079105 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/config/port-priority"];
  if (this->has_port_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      410079105, *this->port_priority_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config)
}

::google::protobuf::uint8* Stp_Rstp_Interfaces_Interface_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue cost = 25438518 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/config/cost"];
  if (this->has_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        25438518, *this->cost_, deterministic, target);
  }

  // .ywrapper.StringValue name = 302799488 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/config/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        302799488, *this->name_, deterministic, target);
  }

  // .ywrapper.UintValue port_priority = 410079105 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/config/port-priority"];
  if (this->has_port_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        410079105, *this->port_priority_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config)
  return target;
}

size_t Stp_Rstp_Interfaces_Interface_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue cost = 25438518 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/config/cost"];
  if (this->has_cost()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->cost_);
  }

  // .ywrapper.StringValue name = 302799488 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/config/name"];
  if (this->has_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  // .ywrapper.UintValue port_priority = 410079105 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/config/port-priority"];
  if (this->has_port_priority()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->port_priority_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Rstp_Interfaces_Interface_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Rstp_Interfaces_Interface_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Rstp_Interfaces_Interface_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config)
    MergeFrom(*source);
  }
}

void Stp_Rstp_Interfaces_Interface_Config::MergeFrom(const Stp_Rstp_Interfaces_Interface_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_cost()) {
    mutable_cost()->::ywrapper::UintValue::MergeFrom(from.cost());
  }
  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
  if (from.has_port_priority()) {
    mutable_port_priority()->::ywrapper::UintValue::MergeFrom(from.port_priority());
  }
}

void Stp_Rstp_Interfaces_Interface_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Rstp_Interfaces_Interface_Config::CopyFrom(const Stp_Rstp_Interfaces_Interface_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Rstp_Interfaces_Interface_Config::IsInitialized() const {
  return true;
}

void Stp_Rstp_Interfaces_Interface_Config::Swap(Stp_Rstp_Interfaces_Interface_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Rstp_Interfaces_Interface_Config::InternalSwap(Stp_Rstp_Interfaces_Interface_Config* other) {
  using std::swap;
  swap(cost_, other->cost_);
  swap(name_, other->name_);
  swap(port_priority_, other->port_priority_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Rstp_Interfaces_Interface_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Rstp_Interfaces_Interface_State_Counters::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_State_Counters_default_instance_._instance.get_mutable()->bpdu_received_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_State_Counters_default_instance_._instance.get_mutable()->bpdu_sent_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Stp_Rstp_Interfaces_Interface_State_Counters::clear_bpdu_received() {
  if (GetArenaNoVirtual() == NULL && bpdu_received_ != NULL) {
    delete bpdu_received_;
  }
  bpdu_received_ = NULL;
}
void Stp_Rstp_Interfaces_Interface_State_Counters::clear_bpdu_sent() {
  if (GetArenaNoVirtual() == NULL && bpdu_sent_ != NULL) {
    delete bpdu_sent_;
  }
  bpdu_sent_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Rstp_Interfaces_Interface_State_Counters::kBpduReceivedFieldNumber;
const int Stp_Rstp_Interfaces_Interface_State_Counters::kBpduSentFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Rstp_Interfaces_Interface_State_Counters::Stp_Rstp_Interfaces_Interface_State_Counters()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_Interfaces_Interface_State_Counters();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters)
}
Stp_Rstp_Interfaces_Interface_State_Counters::Stp_Rstp_Interfaces_Interface_State_Counters(const Stp_Rstp_Interfaces_Interface_State_Counters& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_bpdu_received()) {
    bpdu_received_ = new ::ywrapper::UintValue(*from.bpdu_received_);
  } else {
    bpdu_received_ = NULL;
  }
  if (from.has_bpdu_sent()) {
    bpdu_sent_ = new ::ywrapper::UintValue(*from.bpdu_sent_);
  } else {
    bpdu_sent_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters)
}

void Stp_Rstp_Interfaces_Interface_State_Counters::SharedCtor() {
  ::memset(&bpdu_received_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&bpdu_sent_) -
      reinterpret_cast<char*>(&bpdu_received_)) + sizeof(bpdu_sent_));
  _cached_size_ = 0;
}

Stp_Rstp_Interfaces_Interface_State_Counters::~Stp_Rstp_Interfaces_Interface_State_Counters() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters)
  SharedDtor();
}

void Stp_Rstp_Interfaces_Interface_State_Counters::SharedDtor() {
  if (this != internal_default_instance()) delete bpdu_received_;
  if (this != internal_default_instance()) delete bpdu_sent_;
}

void Stp_Rstp_Interfaces_Interface_State_Counters::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Rstp_Interfaces_Interface_State_Counters::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Rstp_Interfaces_Interface_State_Counters& Stp_Rstp_Interfaces_Interface_State_Counters::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_Interfaces_Interface_State_Counters();
  return *internal_default_instance();
}

Stp_Rstp_Interfaces_Interface_State_Counters* Stp_Rstp_Interfaces_Interface_State_Counters::New(::google::protobuf::Arena* arena) const {
  Stp_Rstp_Interfaces_Interface_State_Counters* n = new Stp_Rstp_Interfaces_Interface_State_Counters;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Rstp_Interfaces_Interface_State_Counters::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && bpdu_received_ != NULL) {
    delete bpdu_received_;
  }
  bpdu_received_ = NULL;
  if (GetArenaNoVirtual() == NULL && bpdu_sent_ != NULL) {
    delete bpdu_sent_;
  }
  bpdu_sent_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_Rstp_Interfaces_Interface_State_Counters::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3346981778u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue bpdu_received = 339806433 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/counters/bpdu-received"];
      case 339806433: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 2718451466 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bpdu_received()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue bpdu_sent = 418372722 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/counters/bpdu-sent"];
      case 418372722: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 3346981778 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bpdu_sent()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters)
  return false;
#undef DO_
}

void Stp_Rstp_Interfaces_Interface_State_Counters::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue bpdu_received = 339806433 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/counters/bpdu-received"];
  if (this->has_bpdu_received()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      339806433, *this->bpdu_received_, output);
  }

  // .ywrapper.UintValue bpdu_sent = 418372722 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/counters/bpdu-sent"];
  if (this->has_bpdu_sent()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      418372722, *this->bpdu_sent_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters)
}

::google::protobuf::uint8* Stp_Rstp_Interfaces_Interface_State_Counters::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue bpdu_received = 339806433 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/counters/bpdu-received"];
  if (this->has_bpdu_received()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        339806433, *this->bpdu_received_, deterministic, target);
  }

  // .ywrapper.UintValue bpdu_sent = 418372722 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/counters/bpdu-sent"];
  if (this->has_bpdu_sent()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        418372722, *this->bpdu_sent_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters)
  return target;
}

size_t Stp_Rstp_Interfaces_Interface_State_Counters::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue bpdu_received = 339806433 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/counters/bpdu-received"];
  if (this->has_bpdu_received()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bpdu_received_);
  }

  // .ywrapper.UintValue bpdu_sent = 418372722 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/counters/bpdu-sent"];
  if (this->has_bpdu_sent()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bpdu_sent_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Rstp_Interfaces_Interface_State_Counters::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Rstp_Interfaces_Interface_State_Counters* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Rstp_Interfaces_Interface_State_Counters>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters)
    MergeFrom(*source);
  }
}

void Stp_Rstp_Interfaces_Interface_State_Counters::MergeFrom(const Stp_Rstp_Interfaces_Interface_State_Counters& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_bpdu_received()) {
    mutable_bpdu_received()->::ywrapper::UintValue::MergeFrom(from.bpdu_received());
  }
  if (from.has_bpdu_sent()) {
    mutable_bpdu_sent()->::ywrapper::UintValue::MergeFrom(from.bpdu_sent());
  }
}

void Stp_Rstp_Interfaces_Interface_State_Counters::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Rstp_Interfaces_Interface_State_Counters::CopyFrom(const Stp_Rstp_Interfaces_Interface_State_Counters& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Rstp_Interfaces_Interface_State_Counters::IsInitialized() const {
  return true;
}

void Stp_Rstp_Interfaces_Interface_State_Counters::Swap(Stp_Rstp_Interfaces_Interface_State_Counters* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Rstp_Interfaces_Interface_State_Counters::InternalSwap(Stp_Rstp_Interfaces_Interface_State_Counters* other) {
  using std::swap;
  swap(bpdu_received_, other->bpdu_received_);
  swap(bpdu_sent_, other->bpdu_sent_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Rstp_Interfaces_Interface_State_Counters::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Rstp_Interfaces_Interface_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_State_default_instance_._instance.get_mutable()->cost_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_State_default_instance_._instance.get_mutable()->counters_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State_Counters*>(
      ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State_Counters::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_State_default_instance_._instance.get_mutable()->designated_bridge_address_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_State_default_instance_._instance.get_mutable()->designated_bridge_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_State_default_instance_._instance.get_mutable()->designated_cost_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_State_default_instance_._instance.get_mutable()->designated_port_num_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_State_default_instance_._instance.get_mutable()->designated_port_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_State_default_instance_._instance.get_mutable()->designated_root_address_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_State_default_instance_._instance.get_mutable()->designated_root_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_State_default_instance_._instance.get_mutable()->forward_transisitions_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_State_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_State_default_instance_._instance.get_mutable()->port_num_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_State_default_instance_._instance.get_mutable()->port_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Stp_Rstp_Interfaces_Interface_State::clear_cost() {
  if (GetArenaNoVirtual() == NULL && cost_ != NULL) {
    delete cost_;
  }
  cost_ = NULL;
}
void Stp_Rstp_Interfaces_Interface_State::clear_designated_bridge_address() {
  if (GetArenaNoVirtual() == NULL && designated_bridge_address_ != NULL) {
    delete designated_bridge_address_;
  }
  designated_bridge_address_ = NULL;
}
void Stp_Rstp_Interfaces_Interface_State::clear_designated_bridge_priority() {
  if (GetArenaNoVirtual() == NULL && designated_bridge_priority_ != NULL) {
    delete designated_bridge_priority_;
  }
  designated_bridge_priority_ = NULL;
}
void Stp_Rstp_Interfaces_Interface_State::clear_designated_cost() {
  if (GetArenaNoVirtual() == NULL && designated_cost_ != NULL) {
    delete designated_cost_;
  }
  designated_cost_ = NULL;
}
void Stp_Rstp_Interfaces_Interface_State::clear_designated_port_num() {
  if (GetArenaNoVirtual() == NULL && designated_port_num_ != NULL) {
    delete designated_port_num_;
  }
  designated_port_num_ = NULL;
}
void Stp_Rstp_Interfaces_Interface_State::clear_designated_port_priority() {
  if (GetArenaNoVirtual() == NULL && designated_port_priority_ != NULL) {
    delete designated_port_priority_;
  }
  designated_port_priority_ = NULL;
}
void Stp_Rstp_Interfaces_Interface_State::clear_designated_root_address() {
  if (GetArenaNoVirtual() == NULL && designated_root_address_ != NULL) {
    delete designated_root_address_;
  }
  designated_root_address_ = NULL;
}
void Stp_Rstp_Interfaces_Interface_State::clear_designated_root_priority() {
  if (GetArenaNoVirtual() == NULL && designated_root_priority_ != NULL) {
    delete designated_root_priority_;
  }
  designated_root_priority_ = NULL;
}
void Stp_Rstp_Interfaces_Interface_State::clear_forward_transisitions() {
  if (GetArenaNoVirtual() == NULL && forward_transisitions_ != NULL) {
    delete forward_transisitions_;
  }
  forward_transisitions_ = NULL;
}
void Stp_Rstp_Interfaces_Interface_State::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
void Stp_Rstp_Interfaces_Interface_State::clear_port_num() {
  if (GetArenaNoVirtual() == NULL && port_num_ != NULL) {
    delete port_num_;
  }
  port_num_ = NULL;
}
void Stp_Rstp_Interfaces_Interface_State::clear_port_priority() {
  if (GetArenaNoVirtual() == NULL && port_priority_ != NULL) {
    delete port_priority_;
  }
  port_priority_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Rstp_Interfaces_Interface_State::kCostFieldNumber;
const int Stp_Rstp_Interfaces_Interface_State::kCountersFieldNumber;
const int Stp_Rstp_Interfaces_Interface_State::kDesignatedBridgeAddressFieldNumber;
const int Stp_Rstp_Interfaces_Interface_State::kDesignatedBridgePriorityFieldNumber;
const int Stp_Rstp_Interfaces_Interface_State::kDesignatedCostFieldNumber;
const int Stp_Rstp_Interfaces_Interface_State::kDesignatedPortNumFieldNumber;
const int Stp_Rstp_Interfaces_Interface_State::kDesignatedPortPriorityFieldNumber;
const int Stp_Rstp_Interfaces_Interface_State::kDesignatedRootAddressFieldNumber;
const int Stp_Rstp_Interfaces_Interface_State::kDesignatedRootPriorityFieldNumber;
const int Stp_Rstp_Interfaces_Interface_State::kForwardTransisitionsFieldNumber;
const int Stp_Rstp_Interfaces_Interface_State::kNameFieldNumber;
const int Stp_Rstp_Interfaces_Interface_State::kPortNumFieldNumber;
const int Stp_Rstp_Interfaces_Interface_State::kPortPriorityFieldNumber;
const int Stp_Rstp_Interfaces_Interface_State::kPortStateFieldNumber;
const int Stp_Rstp_Interfaces_Interface_State::kRoleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Rstp_Interfaces_Interface_State::Stp_Rstp_Interfaces_Interface_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_Interfaces_Interface_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State)
}
Stp_Rstp_Interfaces_Interface_State::Stp_Rstp_Interfaces_Interface_State(const Stp_Rstp_Interfaces_Interface_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_designated_bridge_address()) {
    designated_bridge_address_ = new ::ywrapper::StringValue(*from.designated_bridge_address_);
  } else {
    designated_bridge_address_ = NULL;
  }
  if (from.has_designated_root_address()) {
    designated_root_address_ = new ::ywrapper::StringValue(*from.designated_root_address_);
  } else {
    designated_root_address_ = NULL;
  }
  if (from.has_port_priority()) {
    port_priority_ = new ::ywrapper::UintValue(*from.port_priority_);
  } else {
    port_priority_ = NULL;
  }
  if (from.has_port_num()) {
    port_num_ = new ::ywrapper::UintValue(*from.port_num_);
  } else {
    port_num_ = NULL;
  }
  if (from.has_forward_transisitions()) {
    forward_transisitions_ = new ::ywrapper::UintValue(*from.forward_transisitions_);
  } else {
    forward_transisitions_ = NULL;
  }
  if (from.has_designated_cost()) {
    designated_cost_ = new ::ywrapper::UintValue(*from.designated_cost_);
  } else {
    designated_cost_ = NULL;
  }
  if (from.has_counters()) {
    counters_ = new ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State_Counters(*from.counters_);
  } else {
    counters_ = NULL;
  }
  if (from.has_designated_bridge_priority()) {
    designated_bridge_priority_ = new ::ywrapper::UintValue(*from.designated_bridge_priority_);
  } else {
    designated_bridge_priority_ = NULL;
  }
  if (from.has_designated_port_num()) {
    designated_port_num_ = new ::ywrapper::UintValue(*from.designated_port_num_);
  } else {
    designated_port_num_ = NULL;
  }
  if (from.has_designated_root_priority()) {
    designated_root_priority_ = new ::ywrapper::UintValue(*from.designated_root_priority_);
  } else {
    designated_root_priority_ = NULL;
  }
  if (from.has_cost()) {
    cost_ = new ::ywrapper::UintValue(*from.cost_);
  } else {
    cost_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_designated_port_priority()) {
    designated_port_priority_ = new ::ywrapper::UintValue(*from.designated_port_priority_);
  } else {
    designated_port_priority_ = NULL;
  }
  ::memcpy(&port_state_, &from.port_state_,
    static_cast<size_t>(reinterpret_cast<char*>(&role_) -
    reinterpret_cast<char*>(&port_state_)) + sizeof(role_));
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State)
}

void Stp_Rstp_Interfaces_Interface_State::SharedCtor() {
  ::memset(&designated_bridge_address_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&role_) -
      reinterpret_cast<char*>(&designated_bridge_address_)) + sizeof(role_));
  _cached_size_ = 0;
}

Stp_Rstp_Interfaces_Interface_State::~Stp_Rstp_Interfaces_Interface_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State)
  SharedDtor();
}

void Stp_Rstp_Interfaces_Interface_State::SharedDtor() {
  if (this != internal_default_instance()) delete designated_bridge_address_;
  if (this != internal_default_instance()) delete designated_root_address_;
  if (this != internal_default_instance()) delete port_priority_;
  if (this != internal_default_instance()) delete port_num_;
  if (this != internal_default_instance()) delete forward_transisitions_;
  if (this != internal_default_instance()) delete designated_cost_;
  if (this != internal_default_instance()) delete counters_;
  if (this != internal_default_instance()) delete designated_bridge_priority_;
  if (this != internal_default_instance()) delete designated_port_num_;
  if (this != internal_default_instance()) delete designated_root_priority_;
  if (this != internal_default_instance()) delete cost_;
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete designated_port_priority_;
}

void Stp_Rstp_Interfaces_Interface_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Rstp_Interfaces_Interface_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Rstp_Interfaces_Interface_State& Stp_Rstp_Interfaces_Interface_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_Interfaces_Interface_State();
  return *internal_default_instance();
}

Stp_Rstp_Interfaces_Interface_State* Stp_Rstp_Interfaces_Interface_State::New(::google::protobuf::Arena* arena) const {
  Stp_Rstp_Interfaces_Interface_State* n = new Stp_Rstp_Interfaces_Interface_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Rstp_Interfaces_Interface_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && designated_bridge_address_ != NULL) {
    delete designated_bridge_address_;
  }
  designated_bridge_address_ = NULL;
  if (GetArenaNoVirtual() == NULL && designated_root_address_ != NULL) {
    delete designated_root_address_;
  }
  designated_root_address_ = NULL;
  if (GetArenaNoVirtual() == NULL && port_priority_ != NULL) {
    delete port_priority_;
  }
  port_priority_ = NULL;
  if (GetArenaNoVirtual() == NULL && port_num_ != NULL) {
    delete port_num_;
  }
  port_num_ = NULL;
  if (GetArenaNoVirtual() == NULL && forward_transisitions_ != NULL) {
    delete forward_transisitions_;
  }
  forward_transisitions_ = NULL;
  if (GetArenaNoVirtual() == NULL && designated_cost_ != NULL) {
    delete designated_cost_;
  }
  designated_cost_ = NULL;
  if (GetArenaNoVirtual() == NULL && counters_ != NULL) {
    delete counters_;
  }
  counters_ = NULL;
  if (GetArenaNoVirtual() == NULL && designated_bridge_priority_ != NULL) {
    delete designated_bridge_priority_;
  }
  designated_bridge_priority_ = NULL;
  if (GetArenaNoVirtual() == NULL && designated_port_num_ != NULL) {
    delete designated_port_num_;
  }
  designated_port_num_ = NULL;
  if (GetArenaNoVirtual() == NULL && designated_root_priority_ != NULL) {
    delete designated_root_priority_;
  }
  designated_root_priority_ = NULL;
  if (GetArenaNoVirtual() == NULL && cost_ != NULL) {
    delete cost_;
  }
  cost_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && designated_port_priority_ != NULL) {
    delete designated_port_priority_;
  }
  designated_port_priority_ = NULL;
  ::memset(&port_state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&role_) -
      reinterpret_cast<char*>(&port_state_)) + sizeof(role_));
  _internal_metadata_.Clear();
}

bool Stp_Rstp_Interfaces_Interface_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4119590282u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue designated_bridge_address = 29300777 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-bridge-address"];
      case 29300777: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 234406218 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_designated_bridge_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue designated_root_address = 38863474 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-root-address"];
      case 38863474: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 310907794 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_designated_root_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTSTATE port_state = 99013219 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/port-state"];
      case 99013219: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 792105752 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_port_state(static_cast< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTSTATE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue port_priority = 118646276 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/port-priority"];
      case 118646276: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 949170210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_port_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue port_num = 226492252 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/port-num"];
      case 226492252: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 1811938018 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_port_num()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue forward_transisitions = 239692746 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/forward-transisitions"];
      case 239692746: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 1917541970 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_forward_transisitions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue designated_cost = 246446598 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-cost"];
      case 246446598: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 1971572786 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_designated_cost()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters counters = 318690949 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/counters"];
      case 318690949: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 2549527594 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_counters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue designated_bridge_priority = 321366475 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-bridge-priority"];
      case 321366475: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 2570931802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_designated_bridge_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue designated_port_num = 328815587 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-port-num"];
      case 328815587: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 2630524698 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_designated_port_num()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue designated_root_priority = 341500118 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-root-priority"];
      case 341500118: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 2732000946 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_designated_root_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue cost = 347107837 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/cost"];
      case 347107837: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 2776862698 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_cost()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTROLE role = 363416170 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/role"];
      case 363416170: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 2907329360 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_role(static_cast< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTROLE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue name = 449319447 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/name"];
      case 449319447: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 3594555578 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue designated_port_priority = 514948785 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-port-priority"];
      case 514948785: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 4119590282 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_designated_port_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State)
  return false;
#undef DO_
}

void Stp_Rstp_Interfaces_Interface_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue designated_bridge_address = 29300777 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-bridge-address"];
  if (this->has_designated_bridge_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29300777, *this->designated_bridge_address_, output);
  }

  // .ywrapper.StringValue designated_root_address = 38863474 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-root-address"];
  if (this->has_designated_root_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      38863474, *this->designated_root_address_, output);
  }

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTSTATE port_state = 99013219 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/port-state"];
  if (this->port_state() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      99013219, this->port_state(), output);
  }

  // .ywrapper.UintValue port_priority = 118646276 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/port-priority"];
  if (this->has_port_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      118646276, *this->port_priority_, output);
  }

  // .ywrapper.UintValue port_num = 226492252 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/port-num"];
  if (this->has_port_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      226492252, *this->port_num_, output);
  }

  // .ywrapper.UintValue forward_transisitions = 239692746 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/forward-transisitions"];
  if (this->has_forward_transisitions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      239692746, *this->forward_transisitions_, output);
  }

  // .ywrapper.UintValue designated_cost = 246446598 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-cost"];
  if (this->has_designated_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      246446598, *this->designated_cost_, output);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters counters = 318690949 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/counters"];
  if (this->has_counters()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      318690949, *this->counters_, output);
  }

  // .ywrapper.UintValue designated_bridge_priority = 321366475 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-bridge-priority"];
  if (this->has_designated_bridge_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      321366475, *this->designated_bridge_priority_, output);
  }

  // .ywrapper.UintValue designated_port_num = 328815587 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-port-num"];
  if (this->has_designated_port_num()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      328815587, *this->designated_port_num_, output);
  }

  // .ywrapper.UintValue designated_root_priority = 341500118 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-root-priority"];
  if (this->has_designated_root_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      341500118, *this->designated_root_priority_, output);
  }

  // .ywrapper.UintValue cost = 347107837 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/cost"];
  if (this->has_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      347107837, *this->cost_, output);
  }

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTROLE role = 363416170 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/role"];
  if (this->role() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      363416170, this->role(), output);
  }

  // .ywrapper.StringValue name = 449319447 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      449319447, *this->name_, output);
  }

  // .ywrapper.UintValue designated_port_priority = 514948785 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-port-priority"];
  if (this->has_designated_port_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      514948785, *this->designated_port_priority_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State)
}

::google::protobuf::uint8* Stp_Rstp_Interfaces_Interface_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue designated_bridge_address = 29300777 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-bridge-address"];
  if (this->has_designated_bridge_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29300777, *this->designated_bridge_address_, deterministic, target);
  }

  // .ywrapper.StringValue designated_root_address = 38863474 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-root-address"];
  if (this->has_designated_root_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        38863474, *this->designated_root_address_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTSTATE port_state = 99013219 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/port-state"];
  if (this->port_state() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      99013219, this->port_state(), target);
  }

  // .ywrapper.UintValue port_priority = 118646276 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/port-priority"];
  if (this->has_port_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        118646276, *this->port_priority_, deterministic, target);
  }

  // .ywrapper.UintValue port_num = 226492252 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/port-num"];
  if (this->has_port_num()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        226492252, *this->port_num_, deterministic, target);
  }

  // .ywrapper.UintValue forward_transisitions = 239692746 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/forward-transisitions"];
  if (this->has_forward_transisitions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        239692746, *this->forward_transisitions_, deterministic, target);
  }

  // .ywrapper.UintValue designated_cost = 246446598 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-cost"];
  if (this->has_designated_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        246446598, *this->designated_cost_, deterministic, target);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters counters = 318690949 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/counters"];
  if (this->has_counters()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        318690949, *this->counters_, deterministic, target);
  }

  // .ywrapper.UintValue designated_bridge_priority = 321366475 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-bridge-priority"];
  if (this->has_designated_bridge_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        321366475, *this->designated_bridge_priority_, deterministic, target);
  }

  // .ywrapper.UintValue designated_port_num = 328815587 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-port-num"];
  if (this->has_designated_port_num()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        328815587, *this->designated_port_num_, deterministic, target);
  }

  // .ywrapper.UintValue designated_root_priority = 341500118 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-root-priority"];
  if (this->has_designated_root_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        341500118, *this->designated_root_priority_, deterministic, target);
  }

  // .ywrapper.UintValue cost = 347107837 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/cost"];
  if (this->has_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        347107837, *this->cost_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTROLE role = 363416170 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/role"];
  if (this->role() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      363416170, this->role(), target);
  }

  // .ywrapper.StringValue name = 449319447 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        449319447, *this->name_, deterministic, target);
  }

  // .ywrapper.UintValue designated_port_priority = 514948785 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-port-priority"];
  if (this->has_designated_port_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        514948785, *this->designated_port_priority_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State)
  return target;
}

size_t Stp_Rstp_Interfaces_Interface_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue designated_bridge_address = 29300777 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-bridge-address"];
  if (this->has_designated_bridge_address()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->designated_bridge_address_);
  }

  // .ywrapper.StringValue designated_root_address = 38863474 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-root-address"];
  if (this->has_designated_root_address()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->designated_root_address_);
  }

  // .ywrapper.UintValue port_priority = 118646276 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/port-priority"];
  if (this->has_port_priority()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->port_priority_);
  }

  // .ywrapper.UintValue port_num = 226492252 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/port-num"];
  if (this->has_port_num()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->port_num_);
  }

  // .ywrapper.UintValue forward_transisitions = 239692746 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/forward-transisitions"];
  if (this->has_forward_transisitions()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->forward_transisitions_);
  }

  // .ywrapper.UintValue designated_cost = 246446598 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-cost"];
  if (this->has_designated_cost()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->designated_cost_);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters counters = 318690949 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/counters"];
  if (this->has_counters()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->counters_);
  }

  // .ywrapper.UintValue designated_bridge_priority = 321366475 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-bridge-priority"];
  if (this->has_designated_bridge_priority()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->designated_bridge_priority_);
  }

  // .ywrapper.UintValue designated_port_num = 328815587 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-port-num"];
  if (this->has_designated_port_num()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->designated_port_num_);
  }

  // .ywrapper.UintValue designated_root_priority = 341500118 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-root-priority"];
  if (this->has_designated_root_priority()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->designated_root_priority_);
  }

  // .ywrapper.UintValue cost = 347107837 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/cost"];
  if (this->has_cost()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->cost_);
  }

  // .ywrapper.StringValue name = 449319447 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/name"];
  if (this->has_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  // .ywrapper.UintValue designated_port_priority = 514948785 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-port-priority"];
  if (this->has_designated_port_priority()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->designated_port_priority_);
  }

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTSTATE port_state = 99013219 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/port-state"];
  if (this->port_state() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->port_state());
  }

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTROLE role = 363416170 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/role"];
  if (this->role() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->role());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Rstp_Interfaces_Interface_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Rstp_Interfaces_Interface_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Rstp_Interfaces_Interface_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State)
    MergeFrom(*source);
  }
}

void Stp_Rstp_Interfaces_Interface_State::MergeFrom(const Stp_Rstp_Interfaces_Interface_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_designated_bridge_address()) {
    mutable_designated_bridge_address()->::ywrapper::StringValue::MergeFrom(from.designated_bridge_address());
  }
  if (from.has_designated_root_address()) {
    mutable_designated_root_address()->::ywrapper::StringValue::MergeFrom(from.designated_root_address());
  }
  if (from.has_port_priority()) {
    mutable_port_priority()->::ywrapper::UintValue::MergeFrom(from.port_priority());
  }
  if (from.has_port_num()) {
    mutable_port_num()->::ywrapper::UintValue::MergeFrom(from.port_num());
  }
  if (from.has_forward_transisitions()) {
    mutable_forward_transisitions()->::ywrapper::UintValue::MergeFrom(from.forward_transisitions());
  }
  if (from.has_designated_cost()) {
    mutable_designated_cost()->::ywrapper::UintValue::MergeFrom(from.designated_cost());
  }
  if (from.has_counters()) {
    mutable_counters()->::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State_Counters::MergeFrom(from.counters());
  }
  if (from.has_designated_bridge_priority()) {
    mutable_designated_bridge_priority()->::ywrapper::UintValue::MergeFrom(from.designated_bridge_priority());
  }
  if (from.has_designated_port_num()) {
    mutable_designated_port_num()->::ywrapper::UintValue::MergeFrom(from.designated_port_num());
  }
  if (from.has_designated_root_priority()) {
    mutable_designated_root_priority()->::ywrapper::UintValue::MergeFrom(from.designated_root_priority());
  }
  if (from.has_cost()) {
    mutable_cost()->::ywrapper::UintValue::MergeFrom(from.cost());
  }
  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
  if (from.has_designated_port_priority()) {
    mutable_designated_port_priority()->::ywrapper::UintValue::MergeFrom(from.designated_port_priority());
  }
  if (from.port_state() != 0) {
    set_port_state(from.port_state());
  }
  if (from.role() != 0) {
    set_role(from.role());
  }
}

void Stp_Rstp_Interfaces_Interface_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Rstp_Interfaces_Interface_State::CopyFrom(const Stp_Rstp_Interfaces_Interface_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Rstp_Interfaces_Interface_State::IsInitialized() const {
  return true;
}

void Stp_Rstp_Interfaces_Interface_State::Swap(Stp_Rstp_Interfaces_Interface_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Rstp_Interfaces_Interface_State::InternalSwap(Stp_Rstp_Interfaces_Interface_State* other) {
  using std::swap;
  swap(designated_bridge_address_, other->designated_bridge_address_);
  swap(designated_root_address_, other->designated_root_address_);
  swap(port_priority_, other->port_priority_);
  swap(port_num_, other->port_num_);
  swap(forward_transisitions_, other->forward_transisitions_);
  swap(designated_cost_, other->designated_cost_);
  swap(counters_, other->counters_);
  swap(designated_bridge_priority_, other->designated_bridge_priority_);
  swap(designated_port_num_, other->designated_port_num_);
  swap(designated_root_priority_, other->designated_root_priority_);
  swap(cost_, other->cost_);
  swap(name_, other->name_);
  swap(designated_port_priority_, other->designated_port_priority_);
  swap(port_state_, other->port_state_);
  swap(role_, other->role_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Rstp_Interfaces_Interface_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Rstp_Interfaces_Interface::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_Config*>(
      ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_Config::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State*>(
      ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Rstp_Interfaces_Interface::kConfigFieldNumber;
const int Stp_Rstp_Interfaces_Interface::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Rstp_Interfaces_Interface::Stp_Rstp_Interfaces_Interface()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_Interfaces_Interface();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface)
}
Stp_Rstp_Interfaces_Interface::Stp_Rstp_Interfaces_Interface(const Stp_Rstp_Interfaces_Interface& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface)
}

void Stp_Rstp_Interfaces_Interface::SharedCtor() {
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&config_)) + sizeof(state_));
  _cached_size_ = 0;
}

Stp_Rstp_Interfaces_Interface::~Stp_Rstp_Interfaces_Interface() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface)
  SharedDtor();
}

void Stp_Rstp_Interfaces_Interface::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete state_;
}

void Stp_Rstp_Interfaces_Interface::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Rstp_Interfaces_Interface::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Rstp_Interfaces_Interface& Stp_Rstp_Interfaces_Interface::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_Interfaces_Interface();
  return *internal_default_instance();
}

Stp_Rstp_Interfaces_Interface* Stp_Rstp_Interfaces_Interface::New(::google::protobuf::Arena* arena) const {
  Stp_Rstp_Interfaces_Interface* n = new Stp_Rstp_Interfaces_Interface;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Rstp_Interfaces_Interface::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_Rstp_Interfaces_Interface::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3708054394u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config config = 420941170 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/config"];
      case 420941170: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 3367529362 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State state = 463506799 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state"];
      case 463506799: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 3708054394 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface)
  return false;
#undef DO_
}

void Stp_Rstp_Interfaces_Interface::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config config = 420941170 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      420941170, *this->config_, output);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State state = 463506799 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      463506799, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface)
}

::google::protobuf::uint8* Stp_Rstp_Interfaces_Interface::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config config = 420941170 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        420941170, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State state = 463506799 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        463506799, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface)
  return target;
}

size_t Stp_Rstp_Interfaces_Interface::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config config = 420941170 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State state = 463506799 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Rstp_Interfaces_Interface::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Rstp_Interfaces_Interface* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Rstp_Interfaces_Interface>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface)
    MergeFrom(*source);
  }
}

void Stp_Rstp_Interfaces_Interface::MergeFrom(const Stp_Rstp_Interfaces_Interface& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_Config::MergeFrom(from.config());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State::MergeFrom(from.state());
  }
}

void Stp_Rstp_Interfaces_Interface::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Rstp_Interfaces_Interface::CopyFrom(const Stp_Rstp_Interfaces_Interface& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Rstp_Interfaces_Interface::IsInitialized() const {
  return true;
}

void Stp_Rstp_Interfaces_Interface::Swap(Stp_Rstp_Interfaces_Interface* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Rstp_Interfaces_Interface::InternalSwap(Stp_Rstp_Interfaces_Interface* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Rstp_Interfaces_Interface::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Rstp_Interfaces_InterfaceKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_InterfaceKey_default_instance_._instance.get_mutable()->interface_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface*>(
      ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Rstp_Interfaces_InterfaceKey::kNameFieldNumber;
const int Stp_Rstp_Interfaces_InterfaceKey::kInterfaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Rstp_Interfaces_InterfaceKey::Stp_Rstp_Interfaces_InterfaceKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_Interfaces_InterfaceKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey)
}
Stp_Rstp_Interfaces_InterfaceKey::Stp_Rstp_Interfaces_InterfaceKey(const Stp_Rstp_Interfaces_InterfaceKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_interface()) {
    interface_ = new ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface(*from.interface_);
  } else {
    interface_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey)
}

void Stp_Rstp_Interfaces_InterfaceKey::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interface_ = NULL;
  _cached_size_ = 0;
}

Stp_Rstp_Interfaces_InterfaceKey::~Stp_Rstp_Interfaces_InterfaceKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey)
  SharedDtor();
}

void Stp_Rstp_Interfaces_InterfaceKey::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete interface_;
}

void Stp_Rstp_Interfaces_InterfaceKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Rstp_Interfaces_InterfaceKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Rstp_Interfaces_InterfaceKey& Stp_Rstp_Interfaces_InterfaceKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_Interfaces_InterfaceKey();
  return *internal_default_instance();
}

Stp_Rstp_Interfaces_InterfaceKey* Stp_Rstp_Interfaces_InterfaceKey::New(::google::protobuf::Arena* arena) const {
  Stp_Rstp_Interfaces_InterfaceKey* n = new Stp_Rstp_Interfaces_InterfaceKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Rstp_Interfaces_InterfaceKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_Rstp_Interfaces_InterfaceKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/name"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface interface = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey)
  return false;
#undef DO_
}

void Stp_Rstp_Interfaces_InterfaceKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/name"];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface interface = 2;
  if (this->has_interface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->interface_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey)
}

::google::protobuf::uint8* Stp_Rstp_Interfaces_InterfaceKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/name"];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface interface = 2;
  if (this->has_interface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->interface_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey)
  return target;
}

size_t Stp_Rstp_Interfaces_InterfaceKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/name"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface interface = 2;
  if (this->has_interface()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interface_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Rstp_Interfaces_InterfaceKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Rstp_Interfaces_InterfaceKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Rstp_Interfaces_InterfaceKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey)
    MergeFrom(*source);
  }
}

void Stp_Rstp_Interfaces_InterfaceKey::MergeFrom(const Stp_Rstp_Interfaces_InterfaceKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_interface()) {
    mutable_interface()->::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface::MergeFrom(from.interface());
  }
}

void Stp_Rstp_Interfaces_InterfaceKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Rstp_Interfaces_InterfaceKey::CopyFrom(const Stp_Rstp_Interfaces_InterfaceKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Rstp_Interfaces_InterfaceKey::IsInitialized() const {
  return true;
}

void Stp_Rstp_Interfaces_InterfaceKey::Swap(Stp_Rstp_Interfaces_InterfaceKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Rstp_Interfaces_InterfaceKey::InternalSwap(Stp_Rstp_Interfaces_InterfaceKey* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(interface_, other->interface_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Rstp_Interfaces_InterfaceKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Rstp_Interfaces::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Rstp_Interfaces::kInterfaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Rstp_Interfaces::Stp_Rstp_Interfaces()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_Interfaces();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces)
}
Stp_Rstp_Interfaces::Stp_Rstp_Interfaces(const Stp_Rstp_Interfaces& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      interface_(from.interface_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces)
}

void Stp_Rstp_Interfaces::SharedCtor() {
  _cached_size_ = 0;
}

Stp_Rstp_Interfaces::~Stp_Rstp_Interfaces() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces)
  SharedDtor();
}

void Stp_Rstp_Interfaces::SharedDtor() {
}

void Stp_Rstp_Interfaces::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Rstp_Interfaces::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Rstp_Interfaces& Stp_Rstp_Interfaces::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_Interfaces();
  return *internal_default_instance();
}

Stp_Rstp_Interfaces* Stp_Rstp_Interfaces::New(::google::protobuf::Arena* arena) const {
  Stp_Rstp_Interfaces* n = new Stp_Rstp_Interfaces;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Rstp_Interfaces::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  interface_.Clear();
  _internal_metadata_.Clear();
}

bool Stp_Rstp_Interfaces::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2841512426u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey interface = 355189053 [(.yext.schemapath) = "/stp/rstp/interfaces/interface"];
      case 355189053: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 2841512426 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_interface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces)
  return false;
#undef DO_
}

void Stp_Rstp_Interfaces::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey interface = 355189053 [(.yext.schemapath) = "/stp/rstp/interfaces/interface"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interface_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      355189053, this->interface(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces)
}

::google::protobuf::uint8* Stp_Rstp_Interfaces::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey interface = 355189053 [(.yext.schemapath) = "/stp/rstp/interfaces/interface"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interface_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        355189053, this->interface(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces)
  return target;
}

size_t Stp_Rstp_Interfaces::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey interface = 355189053 [(.yext.schemapath) = "/stp/rstp/interfaces/interface"];
  {
    unsigned int count = static_cast<unsigned int>(this->interface_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->interface(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Rstp_Interfaces::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Rstp_Interfaces* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Rstp_Interfaces>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces)
    MergeFrom(*source);
  }
}

void Stp_Rstp_Interfaces::MergeFrom(const Stp_Rstp_Interfaces& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  interface_.MergeFrom(from.interface_);
}

void Stp_Rstp_Interfaces::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Rstp_Interfaces::CopyFrom(const Stp_Rstp_Interfaces& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Rstp_Interfaces::IsInitialized() const {
  return true;
}

void Stp_Rstp_Interfaces::Swap(Stp_Rstp_Interfaces* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Rstp_Interfaces::InternalSwap(Stp_Rstp_Interfaces* other) {
  using std::swap;
  interface_.InternalSwap(&other->interface_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Rstp_Interfaces::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Rstp_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_State_default_instance_._instance.get_mutable()->bridge_address_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_State_default_instance_._instance.get_mutable()->bridge_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_State_default_instance_._instance.get_mutable()->designated_root_address_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_State_default_instance_._instance.get_mutable()->designated_root_priority_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_State_default_instance_._instance.get_mutable()->forwarding_delay_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_State_default_instance_._instance.get_mutable()->hello_time_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_State_default_instance_._instance.get_mutable()->hold_count_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_State_default_instance_._instance.get_mutable()->hold_time_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_State_default_instance_._instance.get_mutable()->max_age_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_State_default_instance_._instance.get_mutable()->root_cost_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_State_default_instance_._instance.get_mutable()->root_port_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_State_default_instance_._instance.get_mutable()->time_since_topology_change_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_State_default_instance_._instance.get_mutable()->topology_changes_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Stp_Rstp_State::clear_bridge_address() {
  if (GetArenaNoVirtual() == NULL && bridge_address_ != NULL) {
    delete bridge_address_;
  }
  bridge_address_ = NULL;
}
void Stp_Rstp_State::clear_bridge_priority() {
  if (GetArenaNoVirtual() == NULL && bridge_priority_ != NULL) {
    delete bridge_priority_;
  }
  bridge_priority_ = NULL;
}
void Stp_Rstp_State::clear_designated_root_address() {
  if (GetArenaNoVirtual() == NULL && designated_root_address_ != NULL) {
    delete designated_root_address_;
  }
  designated_root_address_ = NULL;
}
void Stp_Rstp_State::clear_designated_root_priority() {
  if (GetArenaNoVirtual() == NULL && designated_root_priority_ != NULL) {
    delete designated_root_priority_;
  }
  designated_root_priority_ = NULL;
}
void Stp_Rstp_State::clear_forwarding_delay() {
  if (GetArenaNoVirtual() == NULL && forwarding_delay_ != NULL) {
    delete forwarding_delay_;
  }
  forwarding_delay_ = NULL;
}
void Stp_Rstp_State::clear_hello_time() {
  if (GetArenaNoVirtual() == NULL && hello_time_ != NULL) {
    delete hello_time_;
  }
  hello_time_ = NULL;
}
void Stp_Rstp_State::clear_hold_count() {
  if (GetArenaNoVirtual() == NULL && hold_count_ != NULL) {
    delete hold_count_;
  }
  hold_count_ = NULL;
}
void Stp_Rstp_State::clear_hold_time() {
  if (GetArenaNoVirtual() == NULL && hold_time_ != NULL) {
    delete hold_time_;
  }
  hold_time_ = NULL;
}
void Stp_Rstp_State::clear_max_age() {
  if (GetArenaNoVirtual() == NULL && max_age_ != NULL) {
    delete max_age_;
  }
  max_age_ = NULL;
}
void Stp_Rstp_State::clear_root_cost() {
  if (GetArenaNoVirtual() == NULL && root_cost_ != NULL) {
    delete root_cost_;
  }
  root_cost_ = NULL;
}
void Stp_Rstp_State::clear_root_port() {
  if (GetArenaNoVirtual() == NULL && root_port_ != NULL) {
    delete root_port_;
  }
  root_port_ = NULL;
}
void Stp_Rstp_State::clear_time_since_topology_change() {
  if (GetArenaNoVirtual() == NULL && time_since_topology_change_ != NULL) {
    delete time_since_topology_change_;
  }
  time_since_topology_change_ = NULL;
}
void Stp_Rstp_State::clear_topology_changes() {
  if (GetArenaNoVirtual() == NULL && topology_changes_ != NULL) {
    delete topology_changes_;
  }
  topology_changes_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Rstp_State::kBridgeAddressFieldNumber;
const int Stp_Rstp_State::kBridgePriorityFieldNumber;
const int Stp_Rstp_State::kDesignatedRootAddressFieldNumber;
const int Stp_Rstp_State::kDesignatedRootPriorityFieldNumber;
const int Stp_Rstp_State::kForwardingDelayFieldNumber;
const int Stp_Rstp_State::kHelloTimeFieldNumber;
const int Stp_Rstp_State::kHoldCountFieldNumber;
const int Stp_Rstp_State::kHoldTimeFieldNumber;
const int Stp_Rstp_State::kMaxAgeFieldNumber;
const int Stp_Rstp_State::kRootCostFieldNumber;
const int Stp_Rstp_State::kRootPortFieldNumber;
const int Stp_Rstp_State::kTimeSinceTopologyChangeFieldNumber;
const int Stp_Rstp_State::kTopologyChangesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Rstp_State::Stp_Rstp_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Rstp.State)
}
Stp_Rstp_State::Stp_Rstp_State(const Stp_Rstp_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_hold_count()) {
    hold_count_ = new ::ywrapper::UintValue(*from.hold_count_);
  } else {
    hold_count_ = NULL;
  }
  if (from.has_designated_root_address()) {
    designated_root_address_ = new ::ywrapper::StringValue(*from.designated_root_address_);
  } else {
    designated_root_address_ = NULL;
  }
  if (from.has_bridge_priority()) {
    bridge_priority_ = new ::ywrapper::UintValue(*from.bridge_priority_);
  } else {
    bridge_priority_ = NULL;
  }
  if (from.has_max_age()) {
    max_age_ = new ::ywrapper::UintValue(*from.max_age_);
  } else {
    max_age_ = NULL;
  }
  if (from.has_bridge_address()) {
    bridge_address_ = new ::ywrapper::StringValue(*from.bridge_address_);
  } else {
    bridge_address_ = NULL;
  }
  if (from.has_time_since_topology_change()) {
    time_since_topology_change_ = new ::ywrapper::UintValue(*from.time_since_topology_change_);
  } else {
    time_since_topology_change_ = NULL;
  }
  if (from.has_topology_changes()) {
    topology_changes_ = new ::ywrapper::UintValue(*from.topology_changes_);
  } else {
    topology_changes_ = NULL;
  }
  if (from.has_designated_root_priority()) {
    designated_root_priority_ = new ::ywrapper::UintValue(*from.designated_root_priority_);
  } else {
    designated_root_priority_ = NULL;
  }
  if (from.has_forwarding_delay()) {
    forwarding_delay_ = new ::ywrapper::UintValue(*from.forwarding_delay_);
  } else {
    forwarding_delay_ = NULL;
  }
  if (from.has_hold_time()) {
    hold_time_ = new ::ywrapper::UintValue(*from.hold_time_);
  } else {
    hold_time_ = NULL;
  }
  if (from.has_hello_time()) {
    hello_time_ = new ::ywrapper::UintValue(*from.hello_time_);
  } else {
    hello_time_ = NULL;
  }
  if (from.has_root_cost()) {
    root_cost_ = new ::ywrapper::UintValue(*from.root_cost_);
  } else {
    root_cost_ = NULL;
  }
  if (from.has_root_port()) {
    root_port_ = new ::ywrapper::UintValue(*from.root_port_);
  } else {
    root_port_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Rstp.State)
}

void Stp_Rstp_State::SharedCtor() {
  ::memset(&hold_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&root_port_) -
      reinterpret_cast<char*>(&hold_count_)) + sizeof(root_port_));
  _cached_size_ = 0;
}

Stp_Rstp_State::~Stp_Rstp_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Rstp.State)
  SharedDtor();
}

void Stp_Rstp_State::SharedDtor() {
  if (this != internal_default_instance()) delete hold_count_;
  if (this != internal_default_instance()) delete designated_root_address_;
  if (this != internal_default_instance()) delete bridge_priority_;
  if (this != internal_default_instance()) delete max_age_;
  if (this != internal_default_instance()) delete bridge_address_;
  if (this != internal_default_instance()) delete time_since_topology_change_;
  if (this != internal_default_instance()) delete topology_changes_;
  if (this != internal_default_instance()) delete designated_root_priority_;
  if (this != internal_default_instance()) delete forwarding_delay_;
  if (this != internal_default_instance()) delete hold_time_;
  if (this != internal_default_instance()) delete hello_time_;
  if (this != internal_default_instance()) delete root_cost_;
  if (this != internal_default_instance()) delete root_port_;
}

void Stp_Rstp_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Rstp_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Rstp_State& Stp_Rstp_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_State();
  return *internal_default_instance();
}

Stp_Rstp_State* Stp_Rstp_State::New(::google::protobuf::Arena* arena) const {
  Stp_Rstp_State* n = new Stp_Rstp_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Rstp_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Rstp.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && hold_count_ != NULL) {
    delete hold_count_;
  }
  hold_count_ = NULL;
  if (GetArenaNoVirtual() == NULL && designated_root_address_ != NULL) {
    delete designated_root_address_;
  }
  designated_root_address_ = NULL;
  if (GetArenaNoVirtual() == NULL && bridge_priority_ != NULL) {
    delete bridge_priority_;
  }
  bridge_priority_ = NULL;
  if (GetArenaNoVirtual() == NULL && max_age_ != NULL) {
    delete max_age_;
  }
  max_age_ = NULL;
  if (GetArenaNoVirtual() == NULL && bridge_address_ != NULL) {
    delete bridge_address_;
  }
  bridge_address_ = NULL;
  if (GetArenaNoVirtual() == NULL && time_since_topology_change_ != NULL) {
    delete time_since_topology_change_;
  }
  time_since_topology_change_ = NULL;
  if (GetArenaNoVirtual() == NULL && topology_changes_ != NULL) {
    delete topology_changes_;
  }
  topology_changes_ = NULL;
  if (GetArenaNoVirtual() == NULL && designated_root_priority_ != NULL) {
    delete designated_root_priority_;
  }
  designated_root_priority_ = NULL;
  if (GetArenaNoVirtual() == NULL && forwarding_delay_ != NULL) {
    delete forwarding_delay_;
  }
  forwarding_delay_ = NULL;
  if (GetArenaNoVirtual() == NULL && hold_time_ != NULL) {
    delete hold_time_;
  }
  hold_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && hello_time_ != NULL) {
    delete hello_time_;
  }
  hello_time_ = NULL;
  if (GetArenaNoVirtual() == NULL && root_cost_ != NULL) {
    delete root_cost_;
  }
  root_cost_ = NULL;
  if (GetArenaNoVirtual() == NULL && root_port_ != NULL) {
    delete root_port_;
  }
  root_port_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_Rstp_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Rstp.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4082767594u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue hold_count = 17772518 [(.yext.schemapath) = "/stp/rstp/state/hold-count"];
      case 17772518: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 142180146 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hold_count()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue designated_root_address = 45031113 [(.yext.schemapath) = "/stp/rstp/state/designated-root-address"];
      case 45031113: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 360248906 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_designated_root_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue bridge_priority = 63741073 [(.yext.schemapath) = "/stp/rstp/state/bridge-priority"];
      case 63741073: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 509928586 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bridge_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue max_age = 80445073 [(.yext.schemapath) = "/stp/rstp/state/max-age"];
      case 80445073: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 643560586 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_max_age()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue bridge_address = 213481315 [(.yext.schemapath) = "/stp/rstp/state/bridge-address"];
      case 213481315: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 1707850522 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_bridge_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue time_since_topology_change = 236457242 [(.yext.schemapath) = "/stp/rstp/state/time-since-topology-change"];
      case 236457242: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 1891657938 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_time_since_topology_change()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue topology_changes = 266385392 [(.yext.schemapath) = "/stp/rstp/state/topology-changes"];
      case 266385392: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 2131083138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_topology_changes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue designated_root_priority = 269547755 [(.yext.schemapath) = "/stp/rstp/state/designated-root-priority"];
      case 269547755: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 2156382042 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_designated_root_priority()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue forwarding_delay = 386063712 [(.yext.schemapath) = "/stp/rstp/state/forwarding-delay"];
      case 386063712: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 3088509698 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_forwarding_delay()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue hold_time = 406520974 [(.yext.schemapath) = "/stp/rstp/state/hold-time"];
      case 406520974: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 3252167794 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hold_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue hello_time = 491083589 [(.yext.schemapath) = "/stp/rstp/state/hello-time"];
      case 491083589: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 3928668714 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hello_time()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue root_cost = 495356843 [(.yext.schemapath) = "/stp/rstp/state/root-cost"];
      case 495356843: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 3962854746 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_root_cost()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue root_port = 510345949 [(.yext.schemapath) = "/stp/rstp/state/root-port"];
      case 510345949: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 4082767594 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_root_port()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Rstp.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Rstp.State)
  return false;
#undef DO_
}

void Stp_Rstp_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Rstp.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue hold_count = 17772518 [(.yext.schemapath) = "/stp/rstp/state/hold-count"];
  if (this->has_hold_count()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17772518, *this->hold_count_, output);
  }

  // .ywrapper.StringValue designated_root_address = 45031113 [(.yext.schemapath) = "/stp/rstp/state/designated-root-address"];
  if (this->has_designated_root_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      45031113, *this->designated_root_address_, output);
  }

  // .ywrapper.UintValue bridge_priority = 63741073 [(.yext.schemapath) = "/stp/rstp/state/bridge-priority"];
  if (this->has_bridge_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      63741073, *this->bridge_priority_, output);
  }

  // .ywrapper.UintValue max_age = 80445073 [(.yext.schemapath) = "/stp/rstp/state/max-age"];
  if (this->has_max_age()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      80445073, *this->max_age_, output);
  }

  // .ywrapper.StringValue bridge_address = 213481315 [(.yext.schemapath) = "/stp/rstp/state/bridge-address"];
  if (this->has_bridge_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      213481315, *this->bridge_address_, output);
  }

  // .ywrapper.UintValue time_since_topology_change = 236457242 [(.yext.schemapath) = "/stp/rstp/state/time-since-topology-change"];
  if (this->has_time_since_topology_change()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      236457242, *this->time_since_topology_change_, output);
  }

  // .ywrapper.UintValue topology_changes = 266385392 [(.yext.schemapath) = "/stp/rstp/state/topology-changes"];
  if (this->has_topology_changes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      266385392, *this->topology_changes_, output);
  }

  // .ywrapper.UintValue designated_root_priority = 269547755 [(.yext.schemapath) = "/stp/rstp/state/designated-root-priority"];
  if (this->has_designated_root_priority()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      269547755, *this->designated_root_priority_, output);
  }

  // .ywrapper.UintValue forwarding_delay = 386063712 [(.yext.schemapath) = "/stp/rstp/state/forwarding-delay"];
  if (this->has_forwarding_delay()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      386063712, *this->forwarding_delay_, output);
  }

  // .ywrapper.UintValue hold_time = 406520974 [(.yext.schemapath) = "/stp/rstp/state/hold-time"];
  if (this->has_hold_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      406520974, *this->hold_time_, output);
  }

  // .ywrapper.UintValue hello_time = 491083589 [(.yext.schemapath) = "/stp/rstp/state/hello-time"];
  if (this->has_hello_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      491083589, *this->hello_time_, output);
  }

  // .ywrapper.UintValue root_cost = 495356843 [(.yext.schemapath) = "/stp/rstp/state/root-cost"];
  if (this->has_root_cost()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      495356843, *this->root_cost_, output);
  }

  // .ywrapper.UintValue root_port = 510345949 [(.yext.schemapath) = "/stp/rstp/state/root-port"];
  if (this->has_root_port()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      510345949, *this->root_port_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Rstp.State)
}

::google::protobuf::uint8* Stp_Rstp_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Rstp.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue hold_count = 17772518 [(.yext.schemapath) = "/stp/rstp/state/hold-count"];
  if (this->has_hold_count()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        17772518, *this->hold_count_, deterministic, target);
  }

  // .ywrapper.StringValue designated_root_address = 45031113 [(.yext.schemapath) = "/stp/rstp/state/designated-root-address"];
  if (this->has_designated_root_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        45031113, *this->designated_root_address_, deterministic, target);
  }

  // .ywrapper.UintValue bridge_priority = 63741073 [(.yext.schemapath) = "/stp/rstp/state/bridge-priority"];
  if (this->has_bridge_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        63741073, *this->bridge_priority_, deterministic, target);
  }

  // .ywrapper.UintValue max_age = 80445073 [(.yext.schemapath) = "/stp/rstp/state/max-age"];
  if (this->has_max_age()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        80445073, *this->max_age_, deterministic, target);
  }

  // .ywrapper.StringValue bridge_address = 213481315 [(.yext.schemapath) = "/stp/rstp/state/bridge-address"];
  if (this->has_bridge_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        213481315, *this->bridge_address_, deterministic, target);
  }

  // .ywrapper.UintValue time_since_topology_change = 236457242 [(.yext.schemapath) = "/stp/rstp/state/time-since-topology-change"];
  if (this->has_time_since_topology_change()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        236457242, *this->time_since_topology_change_, deterministic, target);
  }

  // .ywrapper.UintValue topology_changes = 266385392 [(.yext.schemapath) = "/stp/rstp/state/topology-changes"];
  if (this->has_topology_changes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        266385392, *this->topology_changes_, deterministic, target);
  }

  // .ywrapper.UintValue designated_root_priority = 269547755 [(.yext.schemapath) = "/stp/rstp/state/designated-root-priority"];
  if (this->has_designated_root_priority()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        269547755, *this->designated_root_priority_, deterministic, target);
  }

  // .ywrapper.UintValue forwarding_delay = 386063712 [(.yext.schemapath) = "/stp/rstp/state/forwarding-delay"];
  if (this->has_forwarding_delay()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        386063712, *this->forwarding_delay_, deterministic, target);
  }

  // .ywrapper.UintValue hold_time = 406520974 [(.yext.schemapath) = "/stp/rstp/state/hold-time"];
  if (this->has_hold_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        406520974, *this->hold_time_, deterministic, target);
  }

  // .ywrapper.UintValue hello_time = 491083589 [(.yext.schemapath) = "/stp/rstp/state/hello-time"];
  if (this->has_hello_time()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        491083589, *this->hello_time_, deterministic, target);
  }

  // .ywrapper.UintValue root_cost = 495356843 [(.yext.schemapath) = "/stp/rstp/state/root-cost"];
  if (this->has_root_cost()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        495356843, *this->root_cost_, deterministic, target);
  }

  // .ywrapper.UintValue root_port = 510345949 [(.yext.schemapath) = "/stp/rstp/state/root-port"];
  if (this->has_root_port()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        510345949, *this->root_port_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Rstp.State)
  return target;
}

size_t Stp_Rstp_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Rstp.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue hold_count = 17772518 [(.yext.schemapath) = "/stp/rstp/state/hold-count"];
  if (this->has_hold_count()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->hold_count_);
  }

  // .ywrapper.StringValue designated_root_address = 45031113 [(.yext.schemapath) = "/stp/rstp/state/designated-root-address"];
  if (this->has_designated_root_address()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->designated_root_address_);
  }

  // .ywrapper.UintValue bridge_priority = 63741073 [(.yext.schemapath) = "/stp/rstp/state/bridge-priority"];
  if (this->has_bridge_priority()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bridge_priority_);
  }

  // .ywrapper.UintValue max_age = 80445073 [(.yext.schemapath) = "/stp/rstp/state/max-age"];
  if (this->has_max_age()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->max_age_);
  }

  // .ywrapper.StringValue bridge_address = 213481315 [(.yext.schemapath) = "/stp/rstp/state/bridge-address"];
  if (this->has_bridge_address()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->bridge_address_);
  }

  // .ywrapper.UintValue time_since_topology_change = 236457242 [(.yext.schemapath) = "/stp/rstp/state/time-since-topology-change"];
  if (this->has_time_since_topology_change()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->time_since_topology_change_);
  }

  // .ywrapper.UintValue topology_changes = 266385392 [(.yext.schemapath) = "/stp/rstp/state/topology-changes"];
  if (this->has_topology_changes()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->topology_changes_);
  }

  // .ywrapper.UintValue designated_root_priority = 269547755 [(.yext.schemapath) = "/stp/rstp/state/designated-root-priority"];
  if (this->has_designated_root_priority()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->designated_root_priority_);
  }

  // .ywrapper.UintValue forwarding_delay = 386063712 [(.yext.schemapath) = "/stp/rstp/state/forwarding-delay"];
  if (this->has_forwarding_delay()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->forwarding_delay_);
  }

  // .ywrapper.UintValue hold_time = 406520974 [(.yext.schemapath) = "/stp/rstp/state/hold-time"];
  if (this->has_hold_time()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->hold_time_);
  }

  // .ywrapper.UintValue hello_time = 491083589 [(.yext.schemapath) = "/stp/rstp/state/hello-time"];
  if (this->has_hello_time()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->hello_time_);
  }

  // .ywrapper.UintValue root_cost = 495356843 [(.yext.schemapath) = "/stp/rstp/state/root-cost"];
  if (this->has_root_cost()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->root_cost_);
  }

  // .ywrapper.UintValue root_port = 510345949 [(.yext.schemapath) = "/stp/rstp/state/root-port"];
  if (this->has_root_port()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->root_port_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Rstp_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Rstp_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Rstp_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Rstp.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Rstp.State)
    MergeFrom(*source);
  }
}

void Stp_Rstp_State::MergeFrom(const Stp_Rstp_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_hold_count()) {
    mutable_hold_count()->::ywrapper::UintValue::MergeFrom(from.hold_count());
  }
  if (from.has_designated_root_address()) {
    mutable_designated_root_address()->::ywrapper::StringValue::MergeFrom(from.designated_root_address());
  }
  if (from.has_bridge_priority()) {
    mutable_bridge_priority()->::ywrapper::UintValue::MergeFrom(from.bridge_priority());
  }
  if (from.has_max_age()) {
    mutable_max_age()->::ywrapper::UintValue::MergeFrom(from.max_age());
  }
  if (from.has_bridge_address()) {
    mutable_bridge_address()->::ywrapper::StringValue::MergeFrom(from.bridge_address());
  }
  if (from.has_time_since_topology_change()) {
    mutable_time_since_topology_change()->::ywrapper::UintValue::MergeFrom(from.time_since_topology_change());
  }
  if (from.has_topology_changes()) {
    mutable_topology_changes()->::ywrapper::UintValue::MergeFrom(from.topology_changes());
  }
  if (from.has_designated_root_priority()) {
    mutable_designated_root_priority()->::ywrapper::UintValue::MergeFrom(from.designated_root_priority());
  }
  if (from.has_forwarding_delay()) {
    mutable_forwarding_delay()->::ywrapper::UintValue::MergeFrom(from.forwarding_delay());
  }
  if (from.has_hold_time()) {
    mutable_hold_time()->::ywrapper::UintValue::MergeFrom(from.hold_time());
  }
  if (from.has_hello_time()) {
    mutable_hello_time()->::ywrapper::UintValue::MergeFrom(from.hello_time());
  }
  if (from.has_root_cost()) {
    mutable_root_cost()->::ywrapper::UintValue::MergeFrom(from.root_cost());
  }
  if (from.has_root_port()) {
    mutable_root_port()->::ywrapper::UintValue::MergeFrom(from.root_port());
  }
}

void Stp_Rstp_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Rstp_State::CopyFrom(const Stp_Rstp_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Rstp_State::IsInitialized() const {
  return true;
}

void Stp_Rstp_State::Swap(Stp_Rstp_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Rstp_State::InternalSwap(Stp_Rstp_State* other) {
  using std::swap;
  swap(hold_count_, other->hold_count_);
  swap(designated_root_address_, other->designated_root_address_);
  swap(bridge_priority_, other->bridge_priority_);
  swap(max_age_, other->max_age_);
  swap(bridge_address_, other->bridge_address_);
  swap(time_since_topology_change_, other->time_since_topology_change_);
  swap(topology_changes_, other->topology_changes_);
  swap(designated_root_priority_, other->designated_root_priority_);
  swap(forwarding_delay_, other->forwarding_delay_);
  swap(hold_time_, other->hold_time_);
  swap(hello_time_, other->hello_time_);
  swap(root_cost_, other->root_cost_);
  swap(root_port_, other->root_port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Rstp_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp_Rstp::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_Rstp_Config*>(
      ::openconfig::openconfig_spanning_tree::Stp_Rstp_Config::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_default_instance_._instance.get_mutable()->interfaces_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces*>(
      ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_Rstp_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_Rstp_State*>(
      ::openconfig::openconfig_spanning_tree::Stp_Rstp_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp_Rstp::kConfigFieldNumber;
const int Stp_Rstp::kInterfacesFieldNumber;
const int Stp_Rstp::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp_Rstp::Stp_Rstp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp.Rstp)
}
Stp_Rstp::Stp_Rstp(const Stp_Rstp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_interfaces()) {
    interfaces_ = new ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces(*from.interfaces_);
  } else {
    interfaces_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_spanning_tree::Stp_Rstp_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_spanning_tree::Stp_Rstp_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp.Rstp)
}

void Stp_Rstp::SharedCtor() {
  ::memset(&interfaces_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&interfaces_)) + sizeof(config_));
  _cached_size_ = 0;
}

Stp_Rstp::~Stp_Rstp() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp.Rstp)
  SharedDtor();
}

void Stp_Rstp::SharedDtor() {
  if (this != internal_default_instance()) delete interfaces_;
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
}

void Stp_Rstp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp_Rstp::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp_Rstp& Stp_Rstp::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp();
  return *internal_default_instance();
}

Stp_Rstp* Stp_Rstp::New(::google::protobuf::Arena* arena) const {
  Stp_Rstp* n = new Stp_Rstp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp_Rstp::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp.Rstp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && interfaces_ != NULL) {
    delete interfaces_;
  }
  interfaces_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp_Rstp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp.Rstp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3385673690u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces interfaces = 234621345 [(.yext.schemapath) = "/stp/rstp/interfaces"];
      case 234621345: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 1876970762 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interfaces()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_spanning_tree.Stp.Rstp.State state = 289330300 [(.yext.schemapath) = "/stp/rstp/state"];
      case 289330300: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 2314642402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_spanning_tree.Stp.Rstp.Config config = 423209211 [(.yext.schemapath) = "/stp/rstp/config"];
      case 423209211: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 3385673690 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp.Rstp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp.Rstp)
  return false;
#undef DO_
}

void Stp_Rstp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp.Rstp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces interfaces = 234621345 [(.yext.schemapath) = "/stp/rstp/interfaces"];
  if (this->has_interfaces()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      234621345, *this->interfaces_, output);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Rstp.State state = 289330300 [(.yext.schemapath) = "/stp/rstp/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      289330300, *this->state_, output);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Rstp.Config config = 423209211 [(.yext.schemapath) = "/stp/rstp/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      423209211, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp.Rstp)
}

::google::protobuf::uint8* Stp_Rstp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp.Rstp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces interfaces = 234621345 [(.yext.schemapath) = "/stp/rstp/interfaces"];
  if (this->has_interfaces()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        234621345, *this->interfaces_, deterministic, target);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Rstp.State state = 289330300 [(.yext.schemapath) = "/stp/rstp/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        289330300, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Rstp.Config config = 423209211 [(.yext.schemapath) = "/stp/rstp/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        423209211, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp.Rstp)
  return target;
}

size_t Stp_Rstp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp.Rstp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces interfaces = 234621345 [(.yext.schemapath) = "/stp/rstp/interfaces"];
  if (this->has_interfaces()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interfaces_);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Rstp.State state = 289330300 [(.yext.schemapath) = "/stp/rstp/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Rstp.Config config = 423209211 [(.yext.schemapath) = "/stp/rstp/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp_Rstp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp_Rstp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp_Rstp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp.Rstp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp.Rstp)
    MergeFrom(*source);
  }
}

void Stp_Rstp::MergeFrom(const Stp_Rstp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_interfaces()) {
    mutable_interfaces()->::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces::MergeFrom(from.interfaces());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_spanning_tree::Stp_Rstp_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_spanning_tree::Stp_Rstp_Config::MergeFrom(from.config());
  }
}

void Stp_Rstp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp_Rstp::CopyFrom(const Stp_Rstp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp.Rstp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp_Rstp::IsInitialized() const {
  return true;
}

void Stp_Rstp::Swap(Stp_Rstp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp_Rstp::InternalSwap(Stp_Rstp* other) {
  using std::swap;
  swap(interfaces_, other->interfaces_);
  swap(state_, other->state_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp_Rstp::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Stp::InitAsDefaultInstance() {
  ::openconfig::openconfig_spanning_tree::_Stp_default_instance_._instance.get_mutable()->global_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_Global*>(
      ::openconfig::openconfig_spanning_tree::Stp_Global::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_default_instance_._instance.get_mutable()->interfaces_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_Interfaces*>(
      ::openconfig::openconfig_spanning_tree::Stp_Interfaces::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_default_instance_._instance.get_mutable()->mstp_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_Mstp*>(
      ::openconfig::openconfig_spanning_tree::Stp_Mstp::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_default_instance_._instance.get_mutable()->rapid_pvst_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_RapidPvst*>(
      ::openconfig::openconfig_spanning_tree::Stp_RapidPvst::internal_default_instance());
  ::openconfig::openconfig_spanning_tree::_Stp_default_instance_._instance.get_mutable()->rstp_ = const_cast< ::openconfig::openconfig_spanning_tree::Stp_Rstp*>(
      ::openconfig::openconfig_spanning_tree::Stp_Rstp::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Stp::kGlobalFieldNumber;
const int Stp::kInterfacesFieldNumber;
const int Stp::kMstpFieldNumber;
const int Stp::kRapidPvstFieldNumber;
const int Stp::kRstpFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Stp::Stp()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_spanning_tree.Stp)
}
Stp::Stp(const Stp& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_rstp()) {
    rstp_ = new ::openconfig::openconfig_spanning_tree::Stp_Rstp(*from.rstp_);
  } else {
    rstp_ = NULL;
  }
  if (from.has_rapid_pvst()) {
    rapid_pvst_ = new ::openconfig::openconfig_spanning_tree::Stp_RapidPvst(*from.rapid_pvst_);
  } else {
    rapid_pvst_ = NULL;
  }
  if (from.has_global()) {
    global_ = new ::openconfig::openconfig_spanning_tree::Stp_Global(*from.global_);
  } else {
    global_ = NULL;
  }
  if (from.has_mstp()) {
    mstp_ = new ::openconfig::openconfig_spanning_tree::Stp_Mstp(*from.mstp_);
  } else {
    mstp_ = NULL;
  }
  if (from.has_interfaces()) {
    interfaces_ = new ::openconfig::openconfig_spanning_tree::Stp_Interfaces(*from.interfaces_);
  } else {
    interfaces_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_spanning_tree.Stp)
}

void Stp::SharedCtor() {
  ::memset(&rstp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interfaces_) -
      reinterpret_cast<char*>(&rstp_)) + sizeof(interfaces_));
  _cached_size_ = 0;
}

Stp::~Stp() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_spanning_tree.Stp)
  SharedDtor();
}

void Stp::SharedDtor() {
  if (this != internal_default_instance()) delete rstp_;
  if (this != internal_default_instance()) delete rapid_pvst_;
  if (this != internal_default_instance()) delete global_;
  if (this != internal_default_instance()) delete mstp_;
  if (this != internal_default_instance()) delete interfaces_;
}

void Stp::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Stp::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Stp& Stp::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp();
  return *internal_default_instance();
}

Stp* Stp::New(::google::protobuf::Arena* arena) const {
  Stp* n = new Stp;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Stp::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_spanning_tree.Stp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && rstp_ != NULL) {
    delete rstp_;
  }
  rstp_ = NULL;
  if (GetArenaNoVirtual() == NULL && rapid_pvst_ != NULL) {
    delete rapid_pvst_;
  }
  rapid_pvst_ = NULL;
  if (GetArenaNoVirtual() == NULL && global_ != NULL) {
    delete global_;
  }
  global_ = NULL;
  if (GetArenaNoVirtual() == NULL && mstp_ != NULL) {
    delete mstp_;
  }
  mstp_ = NULL;
  if (GetArenaNoVirtual() == NULL && interfaces_ != NULL) {
    delete interfaces_;
  }
  interfaces_ = NULL;
  _internal_metadata_.Clear();
}

bool Stp::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_spanning_tree.Stp)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3075365210u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_spanning_tree.Stp.Rstp rstp = 91792426 [(.yext.schemapath) = "/stp/rstp"];
      case 91792426: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 734339410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rstp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_spanning_tree.Stp.RapidPvst rapid_pvst = 113534595 [(.yext.schemapath) = "/stp/rapid-pvst"];
      case 113534595: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 908276762 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_rapid_pvst()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_spanning_tree.Stp.Global global = 195120946 [(.yext.schemapath) = "/stp/global"];
      case 195120946: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 1560967570 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_global()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_spanning_tree.Stp.Mstp mstp = 306126631 [(.yext.schemapath) = "/stp/mstp"];
      case 306126631: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 2449013050 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_mstp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_spanning_tree.Stp.Interfaces interfaces = 384420651 [(.yext.schemapath) = "/stp/interfaces"];
      case 384420651: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 3075365210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interfaces()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_spanning_tree.Stp)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_spanning_tree.Stp)
  return false;
#undef DO_
}

void Stp::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_spanning_tree.Stp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_spanning_tree.Stp.Rstp rstp = 91792426 [(.yext.schemapath) = "/stp/rstp"];
  if (this->has_rstp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      91792426, *this->rstp_, output);
  }

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst rapid_pvst = 113534595 [(.yext.schemapath) = "/stp/rapid-pvst"];
  if (this->has_rapid_pvst()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      113534595, *this->rapid_pvst_, output);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Global global = 195120946 [(.yext.schemapath) = "/stp/global"];
  if (this->has_global()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      195120946, *this->global_, output);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Mstp mstp = 306126631 [(.yext.schemapath) = "/stp/mstp"];
  if (this->has_mstp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      306126631, *this->mstp_, output);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Interfaces interfaces = 384420651 [(.yext.schemapath) = "/stp/interfaces"];
  if (this->has_interfaces()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      384420651, *this->interfaces_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_spanning_tree.Stp)
}

::google::protobuf::uint8* Stp::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_spanning_tree.Stp)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_spanning_tree.Stp.Rstp rstp = 91792426 [(.yext.schemapath) = "/stp/rstp"];
  if (this->has_rstp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        91792426, *this->rstp_, deterministic, target);
  }

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst rapid_pvst = 113534595 [(.yext.schemapath) = "/stp/rapid-pvst"];
  if (this->has_rapid_pvst()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        113534595, *this->rapid_pvst_, deterministic, target);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Global global = 195120946 [(.yext.schemapath) = "/stp/global"];
  if (this->has_global()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        195120946, *this->global_, deterministic, target);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Mstp mstp = 306126631 [(.yext.schemapath) = "/stp/mstp"];
  if (this->has_mstp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        306126631, *this->mstp_, deterministic, target);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Interfaces interfaces = 384420651 [(.yext.schemapath) = "/stp/interfaces"];
  if (this->has_interfaces()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        384420651, *this->interfaces_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_spanning_tree.Stp)
  return target;
}

size_t Stp::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_spanning_tree.Stp)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_spanning_tree.Stp.Rstp rstp = 91792426 [(.yext.schemapath) = "/stp/rstp"];
  if (this->has_rstp()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->rstp_);
  }

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst rapid_pvst = 113534595 [(.yext.schemapath) = "/stp/rapid-pvst"];
  if (this->has_rapid_pvst()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->rapid_pvst_);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Global global = 195120946 [(.yext.schemapath) = "/stp/global"];
  if (this->has_global()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->global_);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Mstp mstp = 306126631 [(.yext.schemapath) = "/stp/mstp"];
  if (this->has_mstp()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->mstp_);
  }

  // .openconfig.openconfig_spanning_tree.Stp.Interfaces interfaces = 384420651 [(.yext.schemapath) = "/stp/interfaces"];
  if (this->has_interfaces()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interfaces_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Stp::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_spanning_tree.Stp)
  GOOGLE_DCHECK_NE(&from, this);
  const Stp* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Stp>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_spanning_tree.Stp)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_spanning_tree.Stp)
    MergeFrom(*source);
  }
}

void Stp::MergeFrom(const Stp& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_spanning_tree.Stp)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_rstp()) {
    mutable_rstp()->::openconfig::openconfig_spanning_tree::Stp_Rstp::MergeFrom(from.rstp());
  }
  if (from.has_rapid_pvst()) {
    mutable_rapid_pvst()->::openconfig::openconfig_spanning_tree::Stp_RapidPvst::MergeFrom(from.rapid_pvst());
  }
  if (from.has_global()) {
    mutable_global()->::openconfig::openconfig_spanning_tree::Stp_Global::MergeFrom(from.global());
  }
  if (from.has_mstp()) {
    mutable_mstp()->::openconfig::openconfig_spanning_tree::Stp_Mstp::MergeFrom(from.mstp());
  }
  if (from.has_interfaces()) {
    mutable_interfaces()->::openconfig::openconfig_spanning_tree::Stp_Interfaces::MergeFrom(from.interfaces());
  }
}

void Stp::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_spanning_tree.Stp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Stp::CopyFrom(const Stp& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_spanning_tree.Stp)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Stp::IsInitialized() const {
  return true;
}

void Stp::Swap(Stp* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Stp::InternalSwap(Stp* other) {
  using std::swap;
  swap(rstp_, other->rstp_);
  swap(rapid_pvst_, other->rapid_pvst_);
  swap(global_, other->global_);
  swap(mstp_, other->mstp_);
  swap(interfaces_, other->interfaces_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Stp::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace openconfig_spanning_tree
}  // namespace openconfig

// @@protoc_insertion_point(global_scope)
