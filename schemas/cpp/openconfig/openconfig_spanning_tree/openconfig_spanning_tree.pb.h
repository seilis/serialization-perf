// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: openconfig/openconfig_spanning_tree/openconfig_spanning_tree.proto

#ifndef PROTOBUF_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto__INCLUDED
#define PROTOBUF_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "github.com/openconfig/ygot/proto/ywrapper/ywrapper.pb.h"
#include "github.com/openconfig/ygot/proto/yext/yext.pb.h"
#include "openconfig/enums/enums.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[45];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsStp_Global_ConfigImpl();
void InitDefaultsStp_Global_Config();
void InitDefaultsStp_Global_StateImpl();
void InitDefaultsStp_Global_State();
void InitDefaultsStp_GlobalImpl();
void InitDefaultsStp_Global();
void InitDefaultsStp_Interfaces_Interface_ConfigImpl();
void InitDefaultsStp_Interfaces_Interface_Config();
void InitDefaultsStp_Interfaces_Interface_StateImpl();
void InitDefaultsStp_Interfaces_Interface_State();
void InitDefaultsStp_Interfaces_InterfaceImpl();
void InitDefaultsStp_Interfaces_Interface();
void InitDefaultsStp_Interfaces_InterfaceKeyImpl();
void InitDefaultsStp_Interfaces_InterfaceKey();
void InitDefaultsStp_InterfacesImpl();
void InitDefaultsStp_Interfaces();
void InitDefaultsStp_Mstp_ConfigImpl();
void InitDefaultsStp_Mstp_Config();
void InitDefaultsStp_Mstp_MstInstances_MstInstance_Config_VlanUnionImpl();
void InitDefaultsStp_Mstp_MstInstances_MstInstance_Config_VlanUnion();
void InitDefaultsStp_Mstp_MstInstances_MstInstance_ConfigImpl();
void InitDefaultsStp_Mstp_MstInstances_MstInstance_Config();
void InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_ConfigImpl();
void InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config();
void InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_CountersImpl();
void InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters();
void InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_StateImpl();
void InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State();
void InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceImpl();
void InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface();
void InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKeyImpl();
void InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey();
void InitDefaultsStp_Mstp_MstInstances_MstInstance_InterfacesImpl();
void InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces();
void InitDefaultsStp_Mstp_MstInstances_MstInstance_State_VlanUnionImpl();
void InitDefaultsStp_Mstp_MstInstances_MstInstance_State_VlanUnion();
void InitDefaultsStp_Mstp_MstInstances_MstInstance_StateImpl();
void InitDefaultsStp_Mstp_MstInstances_MstInstance_State();
void InitDefaultsStp_Mstp_MstInstances_MstInstanceImpl();
void InitDefaultsStp_Mstp_MstInstances_MstInstance();
void InitDefaultsStp_Mstp_MstInstances_MstInstanceKeyImpl();
void InitDefaultsStp_Mstp_MstInstances_MstInstanceKey();
void InitDefaultsStp_Mstp_MstInstancesImpl();
void InitDefaultsStp_Mstp_MstInstances();
void InitDefaultsStp_Mstp_StateImpl();
void InitDefaultsStp_Mstp_State();
void InitDefaultsStp_MstpImpl();
void InitDefaultsStp_Mstp();
void InitDefaultsStp_RapidPvst_Vlan_ConfigImpl();
void InitDefaultsStp_RapidPvst_Vlan_Config();
void InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_ConfigImpl();
void InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_Config();
void InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_State_CountersImpl();
void InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_State_Counters();
void InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_StateImpl();
void InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_State();
void InitDefaultsStp_RapidPvst_Vlan_Interfaces_InterfaceImpl();
void InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface();
void InitDefaultsStp_RapidPvst_Vlan_Interfaces_InterfaceKeyImpl();
void InitDefaultsStp_RapidPvst_Vlan_Interfaces_InterfaceKey();
void InitDefaultsStp_RapidPvst_Vlan_InterfacesImpl();
void InitDefaultsStp_RapidPvst_Vlan_Interfaces();
void InitDefaultsStp_RapidPvst_Vlan_StateImpl();
void InitDefaultsStp_RapidPvst_Vlan_State();
void InitDefaultsStp_RapidPvst_VlanImpl();
void InitDefaultsStp_RapidPvst_Vlan();
void InitDefaultsStp_RapidPvst_VlanKeyImpl();
void InitDefaultsStp_RapidPvst_VlanKey();
void InitDefaultsStp_RapidPvstImpl();
void InitDefaultsStp_RapidPvst();
void InitDefaultsStp_Rstp_ConfigImpl();
void InitDefaultsStp_Rstp_Config();
void InitDefaultsStp_Rstp_Interfaces_Interface_ConfigImpl();
void InitDefaultsStp_Rstp_Interfaces_Interface_Config();
void InitDefaultsStp_Rstp_Interfaces_Interface_State_CountersImpl();
void InitDefaultsStp_Rstp_Interfaces_Interface_State_Counters();
void InitDefaultsStp_Rstp_Interfaces_Interface_StateImpl();
void InitDefaultsStp_Rstp_Interfaces_Interface_State();
void InitDefaultsStp_Rstp_Interfaces_InterfaceImpl();
void InitDefaultsStp_Rstp_Interfaces_Interface();
void InitDefaultsStp_Rstp_Interfaces_InterfaceKeyImpl();
void InitDefaultsStp_Rstp_Interfaces_InterfaceKey();
void InitDefaultsStp_Rstp_InterfacesImpl();
void InitDefaultsStp_Rstp_Interfaces();
void InitDefaultsStp_Rstp_StateImpl();
void InitDefaultsStp_Rstp_State();
void InitDefaultsStp_RstpImpl();
void InitDefaultsStp_Rstp();
void InitDefaultsStpImpl();
void InitDefaultsStp();
inline void InitDefaults() {
  InitDefaultsStp_Global_Config();
  InitDefaultsStp_Global_State();
  InitDefaultsStp_Global();
  InitDefaultsStp_Interfaces_Interface_Config();
  InitDefaultsStp_Interfaces_Interface_State();
  InitDefaultsStp_Interfaces_Interface();
  InitDefaultsStp_Interfaces_InterfaceKey();
  InitDefaultsStp_Interfaces();
  InitDefaultsStp_Mstp_Config();
  InitDefaultsStp_Mstp_MstInstances_MstInstance_Config_VlanUnion();
  InitDefaultsStp_Mstp_MstInstances_MstInstance_Config();
  InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config();
  InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters();
  InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State();
  InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface();
  InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey();
  InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces();
  InitDefaultsStp_Mstp_MstInstances_MstInstance_State_VlanUnion();
  InitDefaultsStp_Mstp_MstInstances_MstInstance_State();
  InitDefaultsStp_Mstp_MstInstances_MstInstance();
  InitDefaultsStp_Mstp_MstInstances_MstInstanceKey();
  InitDefaultsStp_Mstp_MstInstances();
  InitDefaultsStp_Mstp_State();
  InitDefaultsStp_Mstp();
  InitDefaultsStp_RapidPvst_Vlan_Config();
  InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_Config();
  InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_State_Counters();
  InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_State();
  InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface();
  InitDefaultsStp_RapidPvst_Vlan_Interfaces_InterfaceKey();
  InitDefaultsStp_RapidPvst_Vlan_Interfaces();
  InitDefaultsStp_RapidPvst_Vlan_State();
  InitDefaultsStp_RapidPvst_Vlan();
  InitDefaultsStp_RapidPvst_VlanKey();
  InitDefaultsStp_RapidPvst();
  InitDefaultsStp_Rstp_Config();
  InitDefaultsStp_Rstp_Interfaces_Interface_Config();
  InitDefaultsStp_Rstp_Interfaces_Interface_State_Counters();
  InitDefaultsStp_Rstp_Interfaces_Interface_State();
  InitDefaultsStp_Rstp_Interfaces_Interface();
  InitDefaultsStp_Rstp_Interfaces_InterfaceKey();
  InitDefaultsStp_Rstp_Interfaces();
  InitDefaultsStp_Rstp_State();
  InitDefaultsStp_Rstp();
  InitDefaultsStp();
}
}  // namespace protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto
namespace openconfig {
namespace openconfig_spanning_tree {
class Stp;
class StpDefaultTypeInternal;
extern StpDefaultTypeInternal _Stp_default_instance_;
class Stp_Global;
class Stp_GlobalDefaultTypeInternal;
extern Stp_GlobalDefaultTypeInternal _Stp_Global_default_instance_;
class Stp_Global_Config;
class Stp_Global_ConfigDefaultTypeInternal;
extern Stp_Global_ConfigDefaultTypeInternal _Stp_Global_Config_default_instance_;
class Stp_Global_State;
class Stp_Global_StateDefaultTypeInternal;
extern Stp_Global_StateDefaultTypeInternal _Stp_Global_State_default_instance_;
class Stp_Interfaces;
class Stp_InterfacesDefaultTypeInternal;
extern Stp_InterfacesDefaultTypeInternal _Stp_Interfaces_default_instance_;
class Stp_Interfaces_Interface;
class Stp_Interfaces_InterfaceDefaultTypeInternal;
extern Stp_Interfaces_InterfaceDefaultTypeInternal _Stp_Interfaces_Interface_default_instance_;
class Stp_Interfaces_InterfaceKey;
class Stp_Interfaces_InterfaceKeyDefaultTypeInternal;
extern Stp_Interfaces_InterfaceKeyDefaultTypeInternal _Stp_Interfaces_InterfaceKey_default_instance_;
class Stp_Interfaces_Interface_Config;
class Stp_Interfaces_Interface_ConfigDefaultTypeInternal;
extern Stp_Interfaces_Interface_ConfigDefaultTypeInternal _Stp_Interfaces_Interface_Config_default_instance_;
class Stp_Interfaces_Interface_State;
class Stp_Interfaces_Interface_StateDefaultTypeInternal;
extern Stp_Interfaces_Interface_StateDefaultTypeInternal _Stp_Interfaces_Interface_State_default_instance_;
class Stp_Mstp;
class Stp_MstpDefaultTypeInternal;
extern Stp_MstpDefaultTypeInternal _Stp_Mstp_default_instance_;
class Stp_Mstp_Config;
class Stp_Mstp_ConfigDefaultTypeInternal;
extern Stp_Mstp_ConfigDefaultTypeInternal _Stp_Mstp_Config_default_instance_;
class Stp_Mstp_MstInstances;
class Stp_Mstp_MstInstancesDefaultTypeInternal;
extern Stp_Mstp_MstInstancesDefaultTypeInternal _Stp_Mstp_MstInstances_default_instance_;
class Stp_Mstp_MstInstances_MstInstance;
class Stp_Mstp_MstInstances_MstInstanceDefaultTypeInternal;
extern Stp_Mstp_MstInstances_MstInstanceDefaultTypeInternal _Stp_Mstp_MstInstances_MstInstance_default_instance_;
class Stp_Mstp_MstInstances_MstInstanceKey;
class Stp_Mstp_MstInstances_MstInstanceKeyDefaultTypeInternal;
extern Stp_Mstp_MstInstances_MstInstanceKeyDefaultTypeInternal _Stp_Mstp_MstInstances_MstInstanceKey_default_instance_;
class Stp_Mstp_MstInstances_MstInstance_Config;
class Stp_Mstp_MstInstances_MstInstance_ConfigDefaultTypeInternal;
extern Stp_Mstp_MstInstances_MstInstance_ConfigDefaultTypeInternal _Stp_Mstp_MstInstances_MstInstance_Config_default_instance_;
class Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion;
class Stp_Mstp_MstInstances_MstInstance_Config_VlanUnionDefaultTypeInternal;
extern Stp_Mstp_MstInstances_MstInstance_Config_VlanUnionDefaultTypeInternal _Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion_default_instance_;
class Stp_Mstp_MstInstances_MstInstance_Interfaces;
class Stp_Mstp_MstInstances_MstInstance_InterfacesDefaultTypeInternal;
extern Stp_Mstp_MstInstances_MstInstance_InterfacesDefaultTypeInternal _Stp_Mstp_MstInstances_MstInstance_Interfaces_default_instance_;
class Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface;
class Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceDefaultTypeInternal;
extern Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceDefaultTypeInternal _Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_default_instance_;
class Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey;
class Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKeyDefaultTypeInternal;
extern Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKeyDefaultTypeInternal _Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey_default_instance_;
class Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config;
class Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_ConfigDefaultTypeInternal;
extern Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_ConfigDefaultTypeInternal _Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config_default_instance_;
class Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State;
class Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_StateDefaultTypeInternal;
extern Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_StateDefaultTypeInternal _Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_default_instance_;
class Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters;
class Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_CountersDefaultTypeInternal;
extern Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_CountersDefaultTypeInternal _Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters_default_instance_;
class Stp_Mstp_MstInstances_MstInstance_State;
class Stp_Mstp_MstInstances_MstInstance_StateDefaultTypeInternal;
extern Stp_Mstp_MstInstances_MstInstance_StateDefaultTypeInternal _Stp_Mstp_MstInstances_MstInstance_State_default_instance_;
class Stp_Mstp_MstInstances_MstInstance_State_VlanUnion;
class Stp_Mstp_MstInstances_MstInstance_State_VlanUnionDefaultTypeInternal;
extern Stp_Mstp_MstInstances_MstInstance_State_VlanUnionDefaultTypeInternal _Stp_Mstp_MstInstances_MstInstance_State_VlanUnion_default_instance_;
class Stp_Mstp_State;
class Stp_Mstp_StateDefaultTypeInternal;
extern Stp_Mstp_StateDefaultTypeInternal _Stp_Mstp_State_default_instance_;
class Stp_RapidPvst;
class Stp_RapidPvstDefaultTypeInternal;
extern Stp_RapidPvstDefaultTypeInternal _Stp_RapidPvst_default_instance_;
class Stp_RapidPvst_Vlan;
class Stp_RapidPvst_VlanDefaultTypeInternal;
extern Stp_RapidPvst_VlanDefaultTypeInternal _Stp_RapidPvst_Vlan_default_instance_;
class Stp_RapidPvst_VlanKey;
class Stp_RapidPvst_VlanKeyDefaultTypeInternal;
extern Stp_RapidPvst_VlanKeyDefaultTypeInternal _Stp_RapidPvst_VlanKey_default_instance_;
class Stp_RapidPvst_Vlan_Config;
class Stp_RapidPvst_Vlan_ConfigDefaultTypeInternal;
extern Stp_RapidPvst_Vlan_ConfigDefaultTypeInternal _Stp_RapidPvst_Vlan_Config_default_instance_;
class Stp_RapidPvst_Vlan_Interfaces;
class Stp_RapidPvst_Vlan_InterfacesDefaultTypeInternal;
extern Stp_RapidPvst_Vlan_InterfacesDefaultTypeInternal _Stp_RapidPvst_Vlan_Interfaces_default_instance_;
class Stp_RapidPvst_Vlan_Interfaces_Interface;
class Stp_RapidPvst_Vlan_Interfaces_InterfaceDefaultTypeInternal;
extern Stp_RapidPvst_Vlan_Interfaces_InterfaceDefaultTypeInternal _Stp_RapidPvst_Vlan_Interfaces_Interface_default_instance_;
class Stp_RapidPvst_Vlan_Interfaces_InterfaceKey;
class Stp_RapidPvst_Vlan_Interfaces_InterfaceKeyDefaultTypeInternal;
extern Stp_RapidPvst_Vlan_Interfaces_InterfaceKeyDefaultTypeInternal _Stp_RapidPvst_Vlan_Interfaces_InterfaceKey_default_instance_;
class Stp_RapidPvst_Vlan_Interfaces_Interface_Config;
class Stp_RapidPvst_Vlan_Interfaces_Interface_ConfigDefaultTypeInternal;
extern Stp_RapidPvst_Vlan_Interfaces_Interface_ConfigDefaultTypeInternal _Stp_RapidPvst_Vlan_Interfaces_Interface_Config_default_instance_;
class Stp_RapidPvst_Vlan_Interfaces_Interface_State;
class Stp_RapidPvst_Vlan_Interfaces_Interface_StateDefaultTypeInternal;
extern Stp_RapidPvst_Vlan_Interfaces_Interface_StateDefaultTypeInternal _Stp_RapidPvst_Vlan_Interfaces_Interface_State_default_instance_;
class Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters;
class Stp_RapidPvst_Vlan_Interfaces_Interface_State_CountersDefaultTypeInternal;
extern Stp_RapidPvst_Vlan_Interfaces_Interface_State_CountersDefaultTypeInternal _Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters_default_instance_;
class Stp_RapidPvst_Vlan_State;
class Stp_RapidPvst_Vlan_StateDefaultTypeInternal;
extern Stp_RapidPvst_Vlan_StateDefaultTypeInternal _Stp_RapidPvst_Vlan_State_default_instance_;
class Stp_Rstp;
class Stp_RstpDefaultTypeInternal;
extern Stp_RstpDefaultTypeInternal _Stp_Rstp_default_instance_;
class Stp_Rstp_Config;
class Stp_Rstp_ConfigDefaultTypeInternal;
extern Stp_Rstp_ConfigDefaultTypeInternal _Stp_Rstp_Config_default_instance_;
class Stp_Rstp_Interfaces;
class Stp_Rstp_InterfacesDefaultTypeInternal;
extern Stp_Rstp_InterfacesDefaultTypeInternal _Stp_Rstp_Interfaces_default_instance_;
class Stp_Rstp_Interfaces_Interface;
class Stp_Rstp_Interfaces_InterfaceDefaultTypeInternal;
extern Stp_Rstp_Interfaces_InterfaceDefaultTypeInternal _Stp_Rstp_Interfaces_Interface_default_instance_;
class Stp_Rstp_Interfaces_InterfaceKey;
class Stp_Rstp_Interfaces_InterfaceKeyDefaultTypeInternal;
extern Stp_Rstp_Interfaces_InterfaceKeyDefaultTypeInternal _Stp_Rstp_Interfaces_InterfaceKey_default_instance_;
class Stp_Rstp_Interfaces_Interface_Config;
class Stp_Rstp_Interfaces_Interface_ConfigDefaultTypeInternal;
extern Stp_Rstp_Interfaces_Interface_ConfigDefaultTypeInternal _Stp_Rstp_Interfaces_Interface_Config_default_instance_;
class Stp_Rstp_Interfaces_Interface_State;
class Stp_Rstp_Interfaces_Interface_StateDefaultTypeInternal;
extern Stp_Rstp_Interfaces_Interface_StateDefaultTypeInternal _Stp_Rstp_Interfaces_Interface_State_default_instance_;
class Stp_Rstp_Interfaces_Interface_State_Counters;
class Stp_Rstp_Interfaces_Interface_State_CountersDefaultTypeInternal;
extern Stp_Rstp_Interfaces_Interface_State_CountersDefaultTypeInternal _Stp_Rstp_Interfaces_Interface_State_Counters_default_instance_;
class Stp_Rstp_State;
class Stp_Rstp_StateDefaultTypeInternal;
extern Stp_Rstp_StateDefaultTypeInternal _Stp_Rstp_State_default_instance_;
}  // namespace openconfig_spanning_tree
}  // namespace openconfig
namespace openconfig {
namespace openconfig_spanning_tree {

// ===================================================================

class Stp_Global_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Global.Config) */ {
 public:
  Stp_Global_Config();
  virtual ~Stp_Global_Config();

  Stp_Global_Config(const Stp_Global_Config& from);

  inline Stp_Global_Config& operator=(const Stp_Global_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Global_Config(Stp_Global_Config&& from) noexcept
    : Stp_Global_Config() {
    *this = ::std::move(from);
  }

  inline Stp_Global_Config& operator=(Stp_Global_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Global_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Global_Config* internal_default_instance() {
    return reinterpret_cast<const Stp_Global_Config*>(
               &_Stp_Global_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Stp_Global_Config* other);
  friend void swap(Stp_Global_Config& a, Stp_Global_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Global_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Global_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Global_Config& from);
  void MergeFrom(const Stp_Global_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Global_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .openconfig.enums.OpenconfigSpanningTreeTypesSTPPROTOCOL enabled_protocol = 519311802 [(.yext.schemapath) = "/stp/global/config/enabled-protocol"];
  int enabled_protocol_size() const;
  void clear_enabled_protocol();
  static const int kEnabledProtocolFieldNumber = 519311802;
  ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPROTOCOL enabled_protocol(int index) const;
  void set_enabled_protocol(int index, ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPROTOCOL value);
  void add_enabled_protocol(::openconfig::enums::OpenconfigSpanningTreeTypesSTPPROTOCOL value);
  const ::google::protobuf::RepeatedField<int>& enabled_protocol() const;
  ::google::protobuf::RepeatedField<int>* mutable_enabled_protocol();

  // .ywrapper.UintValue bpduguard_timeout_recovery = 111769674 [(.yext.schemapath) = "/stp/global/config/bpduguard-timeout-recovery"];
  bool has_bpduguard_timeout_recovery() const;
  void clear_bpduguard_timeout_recovery();
  static const int kBpduguardTimeoutRecoveryFieldNumber = 111769674;
  const ::ywrapper::UintValue& bpduguard_timeout_recovery() const;
  ::ywrapper::UintValue* release_bpduguard_timeout_recovery();
  ::ywrapper::UintValue* mutable_bpduguard_timeout_recovery();
  void set_allocated_bpduguard_timeout_recovery(::ywrapper::UintValue* bpduguard_timeout_recovery);

  // .ywrapper.BoolValue bridge_assurance = 174560629 [(.yext.schemapath) = "/stp/global/config/bridge-assurance"];
  bool has_bridge_assurance() const;
  void clear_bridge_assurance();
  static const int kBridgeAssuranceFieldNumber = 174560629;
  const ::ywrapper::BoolValue& bridge_assurance() const;
  ::ywrapper::BoolValue* release_bridge_assurance();
  ::ywrapper::BoolValue* mutable_bridge_assurance();
  void set_allocated_bridge_assurance(::ywrapper::BoolValue* bridge_assurance);

  // .ywrapper.BoolValue loop_guard = 312794156 [(.yext.schemapath) = "/stp/global/config/loop-guard"];
  bool has_loop_guard() const;
  void clear_loop_guard();
  static const int kLoopGuardFieldNumber = 312794156;
  const ::ywrapper::BoolValue& loop_guard() const;
  ::ywrapper::BoolValue* release_loop_guard();
  ::ywrapper::BoolValue* mutable_loop_guard();
  void set_allocated_loop_guard(::ywrapper::BoolValue* loop_guard);

  // .ywrapper.BoolValue bpdu_filter = 418165716 [(.yext.schemapath) = "/stp/global/config/bpdu-filter"];
  bool has_bpdu_filter() const;
  void clear_bpdu_filter();
  static const int kBpduFilterFieldNumber = 418165716;
  const ::ywrapper::BoolValue& bpdu_filter() const;
  ::ywrapper::BoolValue* release_bpdu_filter();
  ::ywrapper::BoolValue* mutable_bpdu_filter();
  void set_allocated_bpdu_filter(::ywrapper::BoolValue* bpdu_filter);

  // .ywrapper.BoolValue etherchannel_misconfig_guard = 442887371 [(.yext.schemapath) = "/stp/global/config/etherchannel-misconfig-guard"];
  bool has_etherchannel_misconfig_guard() const;
  void clear_etherchannel_misconfig_guard();
  static const int kEtherchannelMisconfigGuardFieldNumber = 442887371;
  const ::ywrapper::BoolValue& etherchannel_misconfig_guard() const;
  ::ywrapper::BoolValue* release_etherchannel_misconfig_guard();
  ::ywrapper::BoolValue* mutable_etherchannel_misconfig_guard();
  void set_allocated_etherchannel_misconfig_guard(::ywrapper::BoolValue* etherchannel_misconfig_guard);

  // .ywrapper.BoolValue bpdu_guard = 444421033 [(.yext.schemapath) = "/stp/global/config/bpdu-guard"];
  bool has_bpdu_guard() const;
  void clear_bpdu_guard();
  static const int kBpduGuardFieldNumber = 444421033;
  const ::ywrapper::BoolValue& bpdu_guard() const;
  ::ywrapper::BoolValue* release_bpdu_guard();
  ::ywrapper::BoolValue* mutable_bpdu_guard();
  void set_allocated_bpdu_guard(::ywrapper::BoolValue* bpdu_guard);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Global.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> enabled_protocol_;
  mutable int _enabled_protocol_cached_byte_size_;
  ::ywrapper::UintValue* bpduguard_timeout_recovery_;
  ::ywrapper::BoolValue* bridge_assurance_;
  ::ywrapper::BoolValue* loop_guard_;
  ::ywrapper::BoolValue* bpdu_filter_;
  ::ywrapper::BoolValue* etherchannel_misconfig_guard_;
  ::ywrapper::BoolValue* bpdu_guard_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Global_ConfigImpl();
};
// -------------------------------------------------------------------

class Stp_Global_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Global.State) */ {
 public:
  Stp_Global_State();
  virtual ~Stp_Global_State();

  Stp_Global_State(const Stp_Global_State& from);

  inline Stp_Global_State& operator=(const Stp_Global_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Global_State(Stp_Global_State&& from) noexcept
    : Stp_Global_State() {
    *this = ::std::move(from);
  }

  inline Stp_Global_State& operator=(Stp_Global_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Global_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Global_State* internal_default_instance() {
    return reinterpret_cast<const Stp_Global_State*>(
               &_Stp_Global_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Stp_Global_State* other);
  friend void swap(Stp_Global_State& a, Stp_Global_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Global_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Global_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Global_State& from);
  void MergeFrom(const Stp_Global_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Global_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .openconfig.enums.OpenconfigSpanningTreeTypesSTPPROTOCOL enabled_protocol = 313795967 [(.yext.schemapath) = "/stp/global/state/enabled-protocol"];
  int enabled_protocol_size() const;
  void clear_enabled_protocol();
  static const int kEnabledProtocolFieldNumber = 313795967;
  ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPROTOCOL enabled_protocol(int index) const;
  void set_enabled_protocol(int index, ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPROTOCOL value);
  void add_enabled_protocol(::openconfig::enums::OpenconfigSpanningTreeTypesSTPPROTOCOL value);
  const ::google::protobuf::RepeatedField<int>& enabled_protocol() const;
  ::google::protobuf::RepeatedField<int>* mutable_enabled_protocol();

  // .ywrapper.BoolValue bpdu_filter = 49432299 [(.yext.schemapath) = "/stp/global/state/bpdu-filter"];
  bool has_bpdu_filter() const;
  void clear_bpdu_filter();
  static const int kBpduFilterFieldNumber = 49432299;
  const ::ywrapper::BoolValue& bpdu_filter() const;
  ::ywrapper::BoolValue* release_bpdu_filter();
  ::ywrapper::BoolValue* mutable_bpdu_filter();
  void set_allocated_bpdu_filter(::ywrapper::BoolValue* bpdu_filter);

  // .ywrapper.BoolValue loop_guard = 140395837 [(.yext.schemapath) = "/stp/global/state/loop-guard"];
  bool has_loop_guard() const;
  void clear_loop_guard();
  static const int kLoopGuardFieldNumber = 140395837;
  const ::ywrapper::BoolValue& loop_guard() const;
  ::ywrapper::BoolValue* release_loop_guard();
  ::ywrapper::BoolValue* mutable_loop_guard();
  void set_allocated_loop_guard(::ywrapper::BoolValue* loop_guard);

  // .ywrapper.BoolValue bridge_assurance = 237709252 [(.yext.schemapath) = "/stp/global/state/bridge-assurance"];
  bool has_bridge_assurance() const;
  void clear_bridge_assurance();
  static const int kBridgeAssuranceFieldNumber = 237709252;
  const ::ywrapper::BoolValue& bridge_assurance() const;
  ::ywrapper::BoolValue* release_bridge_assurance();
  ::ywrapper::BoolValue* mutable_bridge_assurance();
  void set_allocated_bridge_assurance(::ywrapper::BoolValue* bridge_assurance);

  // .ywrapper.BoolValue etherchannel_misconfig_guard = 331669714 [(.yext.schemapath) = "/stp/global/state/etherchannel-misconfig-guard"];
  bool has_etherchannel_misconfig_guard() const;
  void clear_etherchannel_misconfig_guard();
  static const int kEtherchannelMisconfigGuardFieldNumber = 331669714;
  const ::ywrapper::BoolValue& etherchannel_misconfig_guard() const;
  ::ywrapper::BoolValue* release_etherchannel_misconfig_guard();
  ::ywrapper::BoolValue* mutable_etherchannel_misconfig_guard();
  void set_allocated_etherchannel_misconfig_guard(::ywrapper::BoolValue* etherchannel_misconfig_guard);

  // .ywrapper.BoolValue bpdu_guard = 386888444 [(.yext.schemapath) = "/stp/global/state/bpdu-guard"];
  bool has_bpdu_guard() const;
  void clear_bpdu_guard();
  static const int kBpduGuardFieldNumber = 386888444;
  const ::ywrapper::BoolValue& bpdu_guard() const;
  ::ywrapper::BoolValue* release_bpdu_guard();
  ::ywrapper::BoolValue* mutable_bpdu_guard();
  void set_allocated_bpdu_guard(::ywrapper::BoolValue* bpdu_guard);

  // .ywrapper.UintValue bpduguard_timeout_recovery = 525147231 [(.yext.schemapath) = "/stp/global/state/bpduguard-timeout-recovery"];
  bool has_bpduguard_timeout_recovery() const;
  void clear_bpduguard_timeout_recovery();
  static const int kBpduguardTimeoutRecoveryFieldNumber = 525147231;
  const ::ywrapper::UintValue& bpduguard_timeout_recovery() const;
  ::ywrapper::UintValue* release_bpduguard_timeout_recovery();
  ::ywrapper::UintValue* mutable_bpduguard_timeout_recovery();
  void set_allocated_bpduguard_timeout_recovery(::ywrapper::UintValue* bpduguard_timeout_recovery);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Global.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField<int> enabled_protocol_;
  mutable int _enabled_protocol_cached_byte_size_;
  ::ywrapper::BoolValue* bpdu_filter_;
  ::ywrapper::BoolValue* loop_guard_;
  ::ywrapper::BoolValue* bridge_assurance_;
  ::ywrapper::BoolValue* etherchannel_misconfig_guard_;
  ::ywrapper::BoolValue* bpdu_guard_;
  ::ywrapper::UintValue* bpduguard_timeout_recovery_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Global_StateImpl();
};
// -------------------------------------------------------------------

class Stp_Global : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Global) */ {
 public:
  Stp_Global();
  virtual ~Stp_Global();

  Stp_Global(const Stp_Global& from);

  inline Stp_Global& operator=(const Stp_Global& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Global(Stp_Global&& from) noexcept
    : Stp_Global() {
    *this = ::std::move(from);
  }

  inline Stp_Global& operator=(Stp_Global&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Global& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Global* internal_default_instance() {
    return reinterpret_cast<const Stp_Global*>(
               &_Stp_Global_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(Stp_Global* other);
  friend void swap(Stp_Global& a, Stp_Global& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Global* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Global* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Global& from);
  void MergeFrom(const Stp_Global& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Global* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Stp_Global_Config Config;
  typedef Stp_Global_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_spanning_tree.Stp.Global.State state = 82194900 [(.yext.schemapath) = "/stp/global/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 82194900;
  const ::openconfig::openconfig_spanning_tree::Stp_Global_State& state() const;
  ::openconfig::openconfig_spanning_tree::Stp_Global_State* release_state();
  ::openconfig::openconfig_spanning_tree::Stp_Global_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_spanning_tree::Stp_Global_State* state);

  // .openconfig.openconfig_spanning_tree.Stp.Global.Config config = 300401779 [(.yext.schemapath) = "/stp/global/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 300401779;
  const ::openconfig::openconfig_spanning_tree::Stp_Global_Config& config() const;
  ::openconfig::openconfig_spanning_tree::Stp_Global_Config* release_config();
  ::openconfig::openconfig_spanning_tree::Stp_Global_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_spanning_tree::Stp_Global_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Global)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_spanning_tree::Stp_Global_State* state_;
  ::openconfig::openconfig_spanning_tree::Stp_Global_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_GlobalImpl();
};
// -------------------------------------------------------------------

class Stp_Interfaces_Interface_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config) */ {
 public:
  Stp_Interfaces_Interface_Config();
  virtual ~Stp_Interfaces_Interface_Config();

  Stp_Interfaces_Interface_Config(const Stp_Interfaces_Interface_Config& from);

  inline Stp_Interfaces_Interface_Config& operator=(const Stp_Interfaces_Interface_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Interfaces_Interface_Config(Stp_Interfaces_Interface_Config&& from) noexcept
    : Stp_Interfaces_Interface_Config() {
    *this = ::std::move(from);
  }

  inline Stp_Interfaces_Interface_Config& operator=(Stp_Interfaces_Interface_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Interfaces_Interface_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Interfaces_Interface_Config* internal_default_instance() {
    return reinterpret_cast<const Stp_Interfaces_Interface_Config*>(
               &_Stp_Interfaces_Interface_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(Stp_Interfaces_Interface_Config* other);
  friend void swap(Stp_Interfaces_Interface_Config& a, Stp_Interfaces_Interface_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Interfaces_Interface_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Interfaces_Interface_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Interfaces_Interface_Config& from);
  void MergeFrom(const Stp_Interfaces_Interface_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Interfaces_Interface_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.BoolValue bpdu_guard = 73707396 [(.yext.schemapath) = "/stp/interfaces/interface/config/bpdu-guard"];
  bool has_bpdu_guard() const;
  void clear_bpdu_guard();
  static const int kBpduGuardFieldNumber = 73707396;
  const ::ywrapper::BoolValue& bpdu_guard() const;
  ::ywrapper::BoolValue* release_bpdu_guard();
  ::ywrapper::BoolValue* mutable_bpdu_guard();
  void set_allocated_bpdu_guard(::ywrapper::BoolValue* bpdu_guard);

  // .ywrapper.StringValue name = 80608366 [(.yext.schemapath) = "/stp/interfaces/interface/config/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 80608366;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .ywrapper.BoolValue bpdu_filter = 494440739 [(.yext.schemapath) = "/stp/interfaces/interface/config/bpdu-filter"];
  bool has_bpdu_filter() const;
  void clear_bpdu_filter();
  static const int kBpduFilterFieldNumber = 494440739;
  const ::ywrapper::BoolValue& bpdu_filter() const;
  ::ywrapper::BoolValue* release_bpdu_filter();
  ::ywrapper::BoolValue* mutable_bpdu_filter();
  void set_allocated_bpdu_filter(::ywrapper::BoolValue* bpdu_filter);

  // .openconfig.enums.OpenconfigSpanningTreeStpGuardType guard = 411542382 [(.yext.schemapath) = "/stp/interfaces/interface/config/guard"];
  void clear_guard();
  static const int kGuardFieldNumber = 411542382;
  ::openconfig::enums::OpenconfigSpanningTreeStpGuardType guard() const;
  void set_guard(::openconfig::enums::OpenconfigSpanningTreeStpGuardType value);

  // .openconfig.enums.OpenconfigSpanningTreeStpLinkType link_type = 382517328 [(.yext.schemapath) = "/stp/interfaces/interface/config/link-type"];
  void clear_link_type();
  static const int kLinkTypeFieldNumber = 382517328;
  ::openconfig::enums::OpenconfigSpanningTreeStpLinkType link_type() const;
  void set_link_type(::openconfig::enums::OpenconfigSpanningTreeStpLinkType value);

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPEDGEPORT edge_port = 386392760 [(.yext.schemapath) = "/stp/interfaces/interface/config/edge-port"];
  void clear_edge_port();
  static const int kEdgePortFieldNumber = 386392760;
  ::openconfig::enums::OpenconfigSpanningTreeTypesSTPEDGEPORT edge_port() const;
  void set_edge_port(::openconfig::enums::OpenconfigSpanningTreeTypesSTPEDGEPORT value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::BoolValue* bpdu_guard_;
  ::ywrapper::StringValue* name_;
  ::ywrapper::BoolValue* bpdu_filter_;
  int guard_;
  int link_type_;
  int edge_port_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Interfaces_Interface_ConfigImpl();
};
// -------------------------------------------------------------------

class Stp_Interfaces_Interface_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State) */ {
 public:
  Stp_Interfaces_Interface_State();
  virtual ~Stp_Interfaces_Interface_State();

  Stp_Interfaces_Interface_State(const Stp_Interfaces_Interface_State& from);

  inline Stp_Interfaces_Interface_State& operator=(const Stp_Interfaces_Interface_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Interfaces_Interface_State(Stp_Interfaces_Interface_State&& from) noexcept
    : Stp_Interfaces_Interface_State() {
    *this = ::std::move(from);
  }

  inline Stp_Interfaces_Interface_State& operator=(Stp_Interfaces_Interface_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Interfaces_Interface_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Interfaces_Interface_State* internal_default_instance() {
    return reinterpret_cast<const Stp_Interfaces_Interface_State*>(
               &_Stp_Interfaces_Interface_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(Stp_Interfaces_Interface_State* other);
  friend void swap(Stp_Interfaces_Interface_State& a, Stp_Interfaces_Interface_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Interfaces_Interface_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Interfaces_Interface_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Interfaces_Interface_State& from);
  void MergeFrom(const Stp_Interfaces_Interface_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Interfaces_Interface_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.BoolValue bpdu_filter = 111517662 [(.yext.schemapath) = "/stp/interfaces/interface/state/bpdu-filter"];
  bool has_bpdu_filter() const;
  void clear_bpdu_filter();
  static const int kBpduFilterFieldNumber = 111517662;
  const ::ywrapper::BoolValue& bpdu_filter() const;
  ::ywrapper::BoolValue* release_bpdu_filter();
  ::ywrapper::BoolValue* mutable_bpdu_filter();
  void set_allocated_bpdu_filter(::ywrapper::BoolValue* bpdu_filter);

  // .ywrapper.BoolValue bpdu_guard = 188731375 [(.yext.schemapath) = "/stp/interfaces/interface/state/bpdu-guard"];
  bool has_bpdu_guard() const;
  void clear_bpdu_guard();
  static const int kBpduGuardFieldNumber = 188731375;
  const ::ywrapper::BoolValue& bpdu_guard() const;
  ::ywrapper::BoolValue* release_bpdu_guard();
  ::ywrapper::BoolValue* mutable_bpdu_guard();
  void set_allocated_bpdu_guard(::ywrapper::BoolValue* bpdu_guard);

  // .ywrapper.StringValue name = 376864097 [(.yext.schemapath) = "/stp/interfaces/interface/state/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 376864097;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .openconfig.enums.OpenconfigSpanningTreeStpGuardType guard = 426047799 [(.yext.schemapath) = "/stp/interfaces/interface/state/guard"];
  void clear_guard();
  static const int kGuardFieldNumber = 426047799;
  ::openconfig::enums::OpenconfigSpanningTreeStpGuardType guard() const;
  void set_guard(::openconfig::enums::OpenconfigSpanningTreeStpGuardType value);

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPEDGEPORT edge_port = 114978321 [(.yext.schemapath) = "/stp/interfaces/interface/state/edge-port"];
  void clear_edge_port();
  static const int kEdgePortFieldNumber = 114978321;
  ::openconfig::enums::OpenconfigSpanningTreeTypesSTPEDGEPORT edge_port() const;
  void set_edge_port(::openconfig::enums::OpenconfigSpanningTreeTypesSTPEDGEPORT value);

  // .openconfig.enums.OpenconfigSpanningTreeStpLinkType link_type = 386303669 [(.yext.schemapath) = "/stp/interfaces/interface/state/link-type"];
  void clear_link_type();
  static const int kLinkTypeFieldNumber = 386303669;
  ::openconfig::enums::OpenconfigSpanningTreeStpLinkType link_type() const;
  void set_link_type(::openconfig::enums::OpenconfigSpanningTreeStpLinkType value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::BoolValue* bpdu_filter_;
  ::ywrapper::BoolValue* bpdu_guard_;
  ::ywrapper::StringValue* name_;
  int guard_;
  int edge_port_;
  int link_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Interfaces_Interface_StateImpl();
};
// -------------------------------------------------------------------

class Stp_Interfaces_Interface : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface) */ {
 public:
  Stp_Interfaces_Interface();
  virtual ~Stp_Interfaces_Interface();

  Stp_Interfaces_Interface(const Stp_Interfaces_Interface& from);

  inline Stp_Interfaces_Interface& operator=(const Stp_Interfaces_Interface& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Interfaces_Interface(Stp_Interfaces_Interface&& from) noexcept
    : Stp_Interfaces_Interface() {
    *this = ::std::move(from);
  }

  inline Stp_Interfaces_Interface& operator=(Stp_Interfaces_Interface&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Interfaces_Interface& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Interfaces_Interface* internal_default_instance() {
    return reinterpret_cast<const Stp_Interfaces_Interface*>(
               &_Stp_Interfaces_Interface_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(Stp_Interfaces_Interface* other);
  friend void swap(Stp_Interfaces_Interface& a, Stp_Interfaces_Interface& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Interfaces_Interface* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Interfaces_Interface* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Interfaces_Interface& from);
  void MergeFrom(const Stp_Interfaces_Interface& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Interfaces_Interface* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Stp_Interfaces_Interface_Config Config;
  typedef Stp_Interfaces_Interface_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State state = 177132837 [(.yext.schemapath) = "/stp/interfaces/interface/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 177132837;
  const ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_State& state() const;
  ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_State* release_state();
  ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_State* state);

  // .openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config config = 477051180 [(.yext.schemapath) = "/stp/interfaces/interface/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 477051180;
  const ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_Config& config() const;
  ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_Config* release_config();
  ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_State* state_;
  ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Interfaces_InterfaceImpl();
};
// -------------------------------------------------------------------

class Stp_Interfaces_InterfaceKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey) */ {
 public:
  Stp_Interfaces_InterfaceKey();
  virtual ~Stp_Interfaces_InterfaceKey();

  Stp_Interfaces_InterfaceKey(const Stp_Interfaces_InterfaceKey& from);

  inline Stp_Interfaces_InterfaceKey& operator=(const Stp_Interfaces_InterfaceKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Interfaces_InterfaceKey(Stp_Interfaces_InterfaceKey&& from) noexcept
    : Stp_Interfaces_InterfaceKey() {
    *this = ::std::move(from);
  }

  inline Stp_Interfaces_InterfaceKey& operator=(Stp_Interfaces_InterfaceKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Interfaces_InterfaceKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Interfaces_InterfaceKey* internal_default_instance() {
    return reinterpret_cast<const Stp_Interfaces_InterfaceKey*>(
               &_Stp_Interfaces_InterfaceKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(Stp_Interfaces_InterfaceKey* other);
  friend void swap(Stp_Interfaces_InterfaceKey& a, Stp_Interfaces_InterfaceKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Interfaces_InterfaceKey* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Interfaces_InterfaceKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Interfaces_InterfaceKey& from);
  void MergeFrom(const Stp_Interfaces_InterfaceKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Interfaces_InterfaceKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1 [(.yext.schemapath) = "/stp/interfaces/interface/name"];
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface interface = 2;
  bool has_interface() const;
  void clear_interface();
  static const int kInterfaceFieldNumber = 2;
  const ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface& interface() const;
  ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface* release_interface();
  ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface* mutable_interface();
  void set_allocated_interface(::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface* interface);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface* interface_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Interfaces_InterfaceKeyImpl();
};
// -------------------------------------------------------------------

class Stp_Interfaces : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Interfaces) */ {
 public:
  Stp_Interfaces();
  virtual ~Stp_Interfaces();

  Stp_Interfaces(const Stp_Interfaces& from);

  inline Stp_Interfaces& operator=(const Stp_Interfaces& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Interfaces(Stp_Interfaces&& from) noexcept
    : Stp_Interfaces() {
    *this = ::std::move(from);
  }

  inline Stp_Interfaces& operator=(Stp_Interfaces&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Interfaces& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Interfaces* internal_default_instance() {
    return reinterpret_cast<const Stp_Interfaces*>(
               &_Stp_Interfaces_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(Stp_Interfaces* other);
  friend void swap(Stp_Interfaces& a, Stp_Interfaces& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Interfaces* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Interfaces* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Interfaces& from);
  void MergeFrom(const Stp_Interfaces& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Interfaces* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Stp_Interfaces_Interface Interface;
  typedef Stp_Interfaces_InterfaceKey InterfaceKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey interface = 327756795 [(.yext.schemapath) = "/stp/interfaces/interface"];
  int interface_size() const;
  void clear_interface();
  static const int kInterfaceFieldNumber = 327756795;
  const ::openconfig::openconfig_spanning_tree::Stp_Interfaces_InterfaceKey& interface(int index) const;
  ::openconfig::openconfig_spanning_tree::Stp_Interfaces_InterfaceKey* mutable_interface(int index);
  ::openconfig::openconfig_spanning_tree::Stp_Interfaces_InterfaceKey* add_interface();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Interfaces_InterfaceKey >*
      mutable_interface();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Interfaces_InterfaceKey >&
      interface() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Interfaces)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Interfaces_InterfaceKey > interface_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_InterfacesImpl();
};
// -------------------------------------------------------------------

class Stp_Mstp_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Mstp.Config) */ {
 public:
  Stp_Mstp_Config();
  virtual ~Stp_Mstp_Config();

  Stp_Mstp_Config(const Stp_Mstp_Config& from);

  inline Stp_Mstp_Config& operator=(const Stp_Mstp_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Mstp_Config(Stp_Mstp_Config&& from) noexcept
    : Stp_Mstp_Config() {
    *this = ::std::move(from);
  }

  inline Stp_Mstp_Config& operator=(Stp_Mstp_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Mstp_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Mstp_Config* internal_default_instance() {
    return reinterpret_cast<const Stp_Mstp_Config*>(
               &_Stp_Mstp_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(Stp_Mstp_Config* other);
  friend void swap(Stp_Mstp_Config& a, Stp_Mstp_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Mstp_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Mstp_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Mstp_Config& from);
  void MergeFrom(const Stp_Mstp_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Mstp_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue forwarding_delay = 18306732 [(.yext.schemapath) = "/stp/mstp/config/forwarding-delay"];
  bool has_forwarding_delay() const;
  void clear_forwarding_delay();
  static const int kForwardingDelayFieldNumber = 18306732;
  const ::ywrapper::UintValue& forwarding_delay() const;
  ::ywrapper::UintValue* release_forwarding_delay();
  ::ywrapper::UintValue* mutable_forwarding_delay();
  void set_allocated_forwarding_delay(::ywrapper::UintValue* forwarding_delay);

  // .ywrapper.UintValue revision = 151289928 [(.yext.schemapath) = "/stp/mstp/config/revision"];
  bool has_revision() const;
  void clear_revision();
  static const int kRevisionFieldNumber = 151289928;
  const ::ywrapper::UintValue& revision() const;
  ::ywrapper::UintValue* release_revision();
  ::ywrapper::UintValue* mutable_revision();
  void set_allocated_revision(::ywrapper::UintValue* revision);

  // .ywrapper.UintValue hello_time = 156515745 [(.yext.schemapath) = "/stp/mstp/config/hello-time"];
  bool has_hello_time() const;
  void clear_hello_time();
  static const int kHelloTimeFieldNumber = 156515745;
  const ::ywrapper::UintValue& hello_time() const;
  ::ywrapper::UintValue* release_hello_time();
  ::ywrapper::UintValue* mutable_hello_time();
  void set_allocated_hello_time(::ywrapper::UintValue* hello_time);

  // .ywrapper.UintValue max_age = 157271045 [(.yext.schemapath) = "/stp/mstp/config/max-age"];
  bool has_max_age() const;
  void clear_max_age();
  static const int kMaxAgeFieldNumber = 157271045;
  const ::ywrapper::UintValue& max_age() const;
  ::ywrapper::UintValue* release_max_age();
  ::ywrapper::UintValue* mutable_max_age();
  void set_allocated_max_age(::ywrapper::UintValue* max_age);

  // .ywrapper.StringValue name = 205892610 [(.yext.schemapath) = "/stp/mstp/config/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 205892610;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .ywrapper.UintValue max_hop = 290078073 [(.yext.schemapath) = "/stp/mstp/config/max-hop"];
  bool has_max_hop() const;
  void clear_max_hop();
  static const int kMaxHopFieldNumber = 290078073;
  const ::ywrapper::UintValue& max_hop() const;
  ::ywrapper::UintValue* release_max_hop();
  ::ywrapper::UintValue* mutable_max_hop();
  void set_allocated_max_hop(::ywrapper::UintValue* max_hop);

  // .ywrapper.UintValue hold_count = 368495794 [(.yext.schemapath) = "/stp/mstp/config/hold-count"];
  bool has_hold_count() const;
  void clear_hold_count();
  static const int kHoldCountFieldNumber = 368495794;
  const ::ywrapper::UintValue& hold_count() const;
  ::ywrapper::UintValue* release_hold_count();
  ::ywrapper::UintValue* mutable_hold_count();
  void set_allocated_hold_count(::ywrapper::UintValue* hold_count);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Mstp.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* forwarding_delay_;
  ::ywrapper::UintValue* revision_;
  ::ywrapper::UintValue* hello_time_;
  ::ywrapper::UintValue* max_age_;
  ::ywrapper::StringValue* name_;
  ::ywrapper::UintValue* max_hop_;
  ::ywrapper::UintValue* hold_count_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_ConfigImpl();
};
// -------------------------------------------------------------------

class Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion) */ {
 public:
  Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion();
  virtual ~Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion();

  Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion(const Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion& from);

  inline Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion& operator=(const Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion(Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion&& from) noexcept
    : Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion() {
    *this = ::std::move(from);
  }

  inline Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion& operator=(Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion* internal_default_instance() {
    return reinterpret_cast<const Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion*>(
               &_Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion* other);
  friend void swap(Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion& a, Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion& from);
  void MergeFrom(const Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string vlan_string = 113239521;
  void clear_vlan_string();
  static const int kVlanStringFieldNumber = 113239521;
  const ::std::string& vlan_string() const;
  void set_vlan_string(const ::std::string& value);
  #if LANG_CXX11
  void set_vlan_string(::std::string&& value);
  #endif
  void set_vlan_string(const char* value);
  void set_vlan_string(const char* value, size_t size);
  ::std::string* mutable_vlan_string();
  ::std::string* release_vlan_string();
  void set_allocated_vlan_string(::std::string* vlan_string);

  // uint64 vlan_uint64 = 358708228;
  void clear_vlan_uint64();
  static const int kVlanUint64FieldNumber = 358708228;
  ::google::protobuf::uint64 vlan_uint64() const;
  void set_vlan_uint64(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr vlan_string_;
  ::google::protobuf::uint64 vlan_uint64_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Config_VlanUnionImpl();
};
// -------------------------------------------------------------------

class Stp_Mstp_MstInstances_MstInstance_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config) */ {
 public:
  Stp_Mstp_MstInstances_MstInstance_Config();
  virtual ~Stp_Mstp_MstInstances_MstInstance_Config();

  Stp_Mstp_MstInstances_MstInstance_Config(const Stp_Mstp_MstInstances_MstInstance_Config& from);

  inline Stp_Mstp_MstInstances_MstInstance_Config& operator=(const Stp_Mstp_MstInstances_MstInstance_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Mstp_MstInstances_MstInstance_Config(Stp_Mstp_MstInstances_MstInstance_Config&& from) noexcept
    : Stp_Mstp_MstInstances_MstInstance_Config() {
    *this = ::std::move(from);
  }

  inline Stp_Mstp_MstInstances_MstInstance_Config& operator=(Stp_Mstp_MstInstances_MstInstance_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Mstp_MstInstances_MstInstance_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Mstp_MstInstances_MstInstance_Config* internal_default_instance() {
    return reinterpret_cast<const Stp_Mstp_MstInstances_MstInstance_Config*>(
               &_Stp_Mstp_MstInstances_MstInstance_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(Stp_Mstp_MstInstances_MstInstance_Config* other);
  friend void swap(Stp_Mstp_MstInstances_MstInstance_Config& a, Stp_Mstp_MstInstances_MstInstance_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Mstp_MstInstances_MstInstance_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Mstp_MstInstances_MstInstance_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Mstp_MstInstances_MstInstance_Config& from);
  void MergeFrom(const Stp_Mstp_MstInstances_MstInstance_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Mstp_MstInstances_MstInstance_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion VlanUnion;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion vlan = 517819675 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/config/vlan"];
  int vlan_size() const;
  void clear_vlan();
  static const int kVlanFieldNumber = 517819675;
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion& vlan(int index) const;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion* mutable_vlan(int index);
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion* add_vlan();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion >*
      mutable_vlan();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion >&
      vlan() const;

  // .ywrapper.UintValue mst_id = 65684746 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/config/mst-id"];
  bool has_mst_id() const;
  void clear_mst_id();
  static const int kMstIdFieldNumber = 65684746;
  const ::ywrapper::UintValue& mst_id() const;
  ::ywrapper::UintValue* release_mst_id();
  ::ywrapper::UintValue* mutable_mst_id();
  void set_allocated_mst_id(::ywrapper::UintValue* mst_id);

  // .ywrapper.UintValue bridge_priority = 150170028 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/config/bridge-priority"];
  bool has_bridge_priority() const;
  void clear_bridge_priority();
  static const int kBridgePriorityFieldNumber = 150170028;
  const ::ywrapper::UintValue& bridge_priority() const;
  ::ywrapper::UintValue* release_bridge_priority();
  ::ywrapper::UintValue* mutable_bridge_priority();
  void set_allocated_bridge_priority(::ywrapper::UintValue* bridge_priority);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion > vlan_;
  ::ywrapper::UintValue* mst_id_;
  ::ywrapper::UintValue* bridge_priority_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_ConfigImpl();
};
// -------------------------------------------------------------------

class Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config) */ {
 public:
  Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config();
  virtual ~Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config();

  Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config& from);

  inline Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config& operator=(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config&& from) noexcept
    : Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config() {
    *this = ::std::move(from);
  }

  inline Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config& operator=(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config* internal_default_instance() {
    return reinterpret_cast<const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config*>(
               &_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config* other);
  friend void swap(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config& a, Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config& from);
  void MergeFrom(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue name = 14028770 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/config/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 14028770;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .ywrapper.UintValue port_priority = 140449623 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/config/port-priority"];
  bool has_port_priority() const;
  void clear_port_priority();
  static const int kPortPriorityFieldNumber = 140449623;
  const ::ywrapper::UintValue& port_priority() const;
  ::ywrapper::UintValue* release_port_priority();
  ::ywrapper::UintValue* mutable_port_priority();
  void set_allocated_port_priority(::ywrapper::UintValue* port_priority);

  // .ywrapper.UintValue cost = 231951496 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/config/cost"];
  bool has_cost() const;
  void clear_cost();
  static const int kCostFieldNumber = 231951496;
  const ::ywrapper::UintValue& cost() const;
  ::ywrapper::UintValue* release_cost();
  ::ywrapper::UintValue* mutable_cost();
  void set_allocated_cost(::ywrapper::UintValue* cost);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* name_;
  ::ywrapper::UintValue* port_priority_;
  ::ywrapper::UintValue* cost_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_ConfigImpl();
};
// -------------------------------------------------------------------

class Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters) */ {
 public:
  Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters();
  virtual ~Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters();

  Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters& from);

  inline Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters& operator=(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters&& from) noexcept
    : Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters() {
    *this = ::std::move(from);
  }

  inline Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters& operator=(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters* internal_default_instance() {
    return reinterpret_cast<const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters*>(
               &_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters* other);
  friend void swap(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters& a, Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters& from);
  void MergeFrom(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue bpdu_received = 63622203 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/counters/bpdu-received"];
  bool has_bpdu_received() const;
  void clear_bpdu_received();
  static const int kBpduReceivedFieldNumber = 63622203;
  const ::ywrapper::UintValue& bpdu_received() const;
  ::ywrapper::UintValue* release_bpdu_received();
  ::ywrapper::UintValue* mutable_bpdu_received();
  void set_allocated_bpdu_received(::ywrapper::UintValue* bpdu_received);

  // .ywrapper.UintValue bpdu_sent = 185749672 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/counters/bpdu-sent"];
  bool has_bpdu_sent() const;
  void clear_bpdu_sent();
  static const int kBpduSentFieldNumber = 185749672;
  const ::ywrapper::UintValue& bpdu_sent() const;
  ::ywrapper::UintValue* release_bpdu_sent();
  ::ywrapper::UintValue* mutable_bpdu_sent();
  void set_allocated_bpdu_sent(::ywrapper::UintValue* bpdu_sent);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* bpdu_received_;
  ::ywrapper::UintValue* bpdu_sent_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_CountersImpl();
};
// -------------------------------------------------------------------

class Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State) */ {
 public:
  Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State();
  virtual ~Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State();

  Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State& from);

  inline Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State& operator=(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State&& from) noexcept
    : Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State() {
    *this = ::std::move(from);
  }

  inline Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State& operator=(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State* internal_default_instance() {
    return reinterpret_cast<const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State*>(
               &_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State* other);
  friend void swap(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State& a, Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State& from);
  void MergeFrom(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters Counters;

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue designated_cost = 24519636 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-cost"];
  bool has_designated_cost() const;
  void clear_designated_cost();
  static const int kDesignatedCostFieldNumber = 24519636;
  const ::ywrapper::UintValue& designated_cost() const;
  ::ywrapper::UintValue* release_designated_cost();
  ::ywrapper::UintValue* mutable_designated_cost();
  void set_allocated_designated_cost(::ywrapper::UintValue* designated_cost);

  // .ywrapper.UintValue port_priority = 32672910 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/port-priority"];
  bool has_port_priority() const;
  void clear_port_priority();
  static const int kPortPriorityFieldNumber = 32672910;
  const ::ywrapper::UintValue& port_priority() const;
  ::ywrapper::UintValue* release_port_priority();
  ::ywrapper::UintValue* mutable_port_priority();
  void set_allocated_port_priority(::ywrapper::UintValue* port_priority);

  // .ywrapper.UintValue designated_port_priority = 153721331 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-port-priority"];
  bool has_designated_port_priority() const;
  void clear_designated_port_priority();
  static const int kDesignatedPortPriorityFieldNumber = 153721331;
  const ::ywrapper::UintValue& designated_port_priority() const;
  ::ywrapper::UintValue* release_designated_port_priority();
  ::ywrapper::UintValue* mutable_designated_port_priority();
  void set_allocated_designated_port_priority(::ywrapper::UintValue* designated_port_priority);

  // .ywrapper.UintValue cost = 159865123 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/cost"];
  bool has_cost() const;
  void clear_cost();
  static const int kCostFieldNumber = 159865123;
  const ::ywrapper::UintValue& cost() const;
  ::ywrapper::UintValue* release_cost();
  ::ywrapper::UintValue* mutable_cost();
  void set_allocated_cost(::ywrapper::UintValue* cost);

  // .ywrapper.StringValue designated_bridge_address = 175515179 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-bridge-address"];
  bool has_designated_bridge_address() const;
  void clear_designated_bridge_address();
  static const int kDesignatedBridgeAddressFieldNumber = 175515179;
  const ::ywrapper::StringValue& designated_bridge_address() const;
  ::ywrapper::StringValue* release_designated_bridge_address();
  ::ywrapper::StringValue* mutable_designated_bridge_address();
  void set_allocated_designated_bridge_address(::ywrapper::StringValue* designated_bridge_address);

  // .ywrapper.UintValue designated_root_priority = 198628868 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-root-priority"];
  bool has_designated_root_priority() const;
  void clear_designated_root_priority();
  static const int kDesignatedRootPriorityFieldNumber = 198628868;
  const ::ywrapper::UintValue& designated_root_priority() const;
  ::ywrapper::UintValue* release_designated_root_priority();
  ::ywrapper::UintValue* mutable_designated_root_priority();
  void set_allocated_designated_root_priority(::ywrapper::UintValue* designated_root_priority);

  // .ywrapper.StringValue designated_root_address = 222851020 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-root-address"];
  bool has_designated_root_address() const;
  void clear_designated_root_address();
  static const int kDesignatedRootAddressFieldNumber = 222851020;
  const ::ywrapper::StringValue& designated_root_address() const;
  ::ywrapper::StringValue* release_designated_root_address();
  ::ywrapper::StringValue* mutable_designated_root_address();
  void set_allocated_designated_root_address(::ywrapper::StringValue* designated_root_address);

  // .ywrapper.StringValue name = 294895429 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 294895429;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .ywrapper.UintValue designated_port_num = 305730017 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-port-num"];
  bool has_designated_port_num() const;
  void clear_designated_port_num();
  static const int kDesignatedPortNumFieldNumber = 305730017;
  const ::ywrapper::UintValue& designated_port_num() const;
  ::ywrapper::UintValue* release_designated_port_num();
  ::ywrapper::UintValue* mutable_designated_port_num();
  void set_allocated_designated_port_num(::ywrapper::UintValue* designated_port_num);

  // .ywrapper.UintValue forward_transisitions = 358824040 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/forward-transisitions"];
  bool has_forward_transisitions() const;
  void clear_forward_transisitions();
  static const int kForwardTransisitionsFieldNumber = 358824040;
  const ::ywrapper::UintValue& forward_transisitions() const;
  ::ywrapper::UintValue* release_forward_transisitions();
  ::ywrapper::UintValue* mutable_forward_transisitions();
  void set_allocated_forward_transisitions(::ywrapper::UintValue* forward_transisitions);

  // .ywrapper.UintValue designated_bridge_priority = 411036809 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-bridge-priority"];
  bool has_designated_bridge_priority() const;
  void clear_designated_bridge_priority();
  static const int kDesignatedBridgePriorityFieldNumber = 411036809;
  const ::ywrapper::UintValue& designated_bridge_priority() const;
  ::ywrapper::UintValue* release_designated_bridge_priority();
  ::ywrapper::UintValue* mutable_designated_bridge_priority();
  void set_allocated_designated_bridge_priority(::ywrapper::UintValue* designated_bridge_priority);

  // .ywrapper.UintValue port_num = 485847738 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/port-num"];
  bool has_port_num() const;
  void clear_port_num();
  static const int kPortNumFieldNumber = 485847738;
  const ::ywrapper::UintValue& port_num() const;
  ::ywrapper::UintValue* release_port_num();
  ::ywrapper::UintValue* mutable_port_num();
  void set_allocated_port_num(::ywrapper::UintValue* port_num);

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters counters = 520052395 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/counters"];
  bool has_counters() const;
  void clear_counters();
  static const int kCountersFieldNumber = 520052395;
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters& counters() const;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters* release_counters();
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters* mutable_counters();
  void set_allocated_counters(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters* counters);

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTSTATE port_state = 253637881 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/port-state"];
  void clear_port_state();
  static const int kPortStateFieldNumber = 253637881;
  ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTSTATE port_state() const;
  void set_port_state(::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTSTATE value);

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTROLE role = 293381284 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/role"];
  void clear_role();
  static const int kRoleFieldNumber = 293381284;
  ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTROLE role() const;
  void set_role(::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTROLE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* designated_cost_;
  ::ywrapper::UintValue* port_priority_;
  ::ywrapper::UintValue* designated_port_priority_;
  ::ywrapper::UintValue* cost_;
  ::ywrapper::StringValue* designated_bridge_address_;
  ::ywrapper::UintValue* designated_root_priority_;
  ::ywrapper::StringValue* designated_root_address_;
  ::ywrapper::StringValue* name_;
  ::ywrapper::UintValue* designated_port_num_;
  ::ywrapper::UintValue* forward_transisitions_;
  ::ywrapper::UintValue* designated_bridge_priority_;
  ::ywrapper::UintValue* port_num_;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters* counters_;
  int port_state_;
  int role_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_Interface_StateImpl();
};
// -------------------------------------------------------------------

class Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface) */ {
 public:
  Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface();
  virtual ~Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface();

  Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface& from);

  inline Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface& operator=(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface&& from) noexcept
    : Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface() {
    *this = ::std::move(from);
  }

  inline Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface& operator=(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface* internal_default_instance() {
    return reinterpret_cast<const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface*>(
               &_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface* other);
  friend void swap(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface& a, Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface& from);
  void MergeFrom(const Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config Config;
  typedef Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State state = 135114417 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 135114417;
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State& state() const;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State* release_state();
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State* state);

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config config = 499171864 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 499171864;
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config& config() const;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config* release_config();
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State* state_;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceImpl();
};
// -------------------------------------------------------------------

class Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey) */ {
 public:
  Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey();
  virtual ~Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey();

  Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey(const Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey& from);

  inline Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey& operator=(const Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey(Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey&& from) noexcept
    : Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey() {
    *this = ::std::move(from);
  }

  inline Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey& operator=(Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey* internal_default_instance() {
    return reinterpret_cast<const Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey*>(
               &_Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey* other);
  friend void swap(Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey& a, Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey& from);
  void MergeFrom(const Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/name"];
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface interface = 2;
  bool has_interface() const;
  void clear_interface();
  static const int kInterfaceFieldNumber = 2;
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface& interface() const;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface* release_interface();
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface* mutable_interface();
  void set_allocated_interface(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface* interface);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface* interface_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKeyImpl();
};
// -------------------------------------------------------------------

class Stp_Mstp_MstInstances_MstInstance_Interfaces : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces) */ {
 public:
  Stp_Mstp_MstInstances_MstInstance_Interfaces();
  virtual ~Stp_Mstp_MstInstances_MstInstance_Interfaces();

  Stp_Mstp_MstInstances_MstInstance_Interfaces(const Stp_Mstp_MstInstances_MstInstance_Interfaces& from);

  inline Stp_Mstp_MstInstances_MstInstance_Interfaces& operator=(const Stp_Mstp_MstInstances_MstInstance_Interfaces& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Mstp_MstInstances_MstInstance_Interfaces(Stp_Mstp_MstInstances_MstInstance_Interfaces&& from) noexcept
    : Stp_Mstp_MstInstances_MstInstance_Interfaces() {
    *this = ::std::move(from);
  }

  inline Stp_Mstp_MstInstances_MstInstance_Interfaces& operator=(Stp_Mstp_MstInstances_MstInstance_Interfaces&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Mstp_MstInstances_MstInstance_Interfaces& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Mstp_MstInstances_MstInstance_Interfaces* internal_default_instance() {
    return reinterpret_cast<const Stp_Mstp_MstInstances_MstInstance_Interfaces*>(
               &_Stp_Mstp_MstInstances_MstInstance_Interfaces_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(Stp_Mstp_MstInstances_MstInstance_Interfaces* other);
  friend void swap(Stp_Mstp_MstInstances_MstInstance_Interfaces& a, Stp_Mstp_MstInstances_MstInstance_Interfaces& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Mstp_MstInstances_MstInstance_Interfaces* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Mstp_MstInstances_MstInstance_Interfaces* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Mstp_MstInstances_MstInstance_Interfaces& from);
  void MergeFrom(const Stp_Mstp_MstInstances_MstInstance_Interfaces& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Mstp_MstInstances_MstInstance_Interfaces* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface Interface;
  typedef Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey InterfaceKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey interface = 83031303 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface"];
  int interface_size() const;
  void clear_interface();
  static const int kInterfaceFieldNumber = 83031303;
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey& interface(int index) const;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey* mutable_interface(int index);
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey* add_interface();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey >*
      mutable_interface();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey >&
      interface() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey > interface_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_InterfacesImpl();
};
// -------------------------------------------------------------------

class Stp_Mstp_MstInstances_MstInstance_State_VlanUnion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion) */ {
 public:
  Stp_Mstp_MstInstances_MstInstance_State_VlanUnion();
  virtual ~Stp_Mstp_MstInstances_MstInstance_State_VlanUnion();

  Stp_Mstp_MstInstances_MstInstance_State_VlanUnion(const Stp_Mstp_MstInstances_MstInstance_State_VlanUnion& from);

  inline Stp_Mstp_MstInstances_MstInstance_State_VlanUnion& operator=(const Stp_Mstp_MstInstances_MstInstance_State_VlanUnion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Mstp_MstInstances_MstInstance_State_VlanUnion(Stp_Mstp_MstInstances_MstInstance_State_VlanUnion&& from) noexcept
    : Stp_Mstp_MstInstances_MstInstance_State_VlanUnion() {
    *this = ::std::move(from);
  }

  inline Stp_Mstp_MstInstances_MstInstance_State_VlanUnion& operator=(Stp_Mstp_MstInstances_MstInstance_State_VlanUnion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Mstp_MstInstances_MstInstance_State_VlanUnion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Mstp_MstInstances_MstInstance_State_VlanUnion* internal_default_instance() {
    return reinterpret_cast<const Stp_Mstp_MstInstances_MstInstance_State_VlanUnion*>(
               &_Stp_Mstp_MstInstances_MstInstance_State_VlanUnion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(Stp_Mstp_MstInstances_MstInstance_State_VlanUnion* other);
  friend void swap(Stp_Mstp_MstInstances_MstInstance_State_VlanUnion& a, Stp_Mstp_MstInstances_MstInstance_State_VlanUnion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Mstp_MstInstances_MstInstance_State_VlanUnion* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Mstp_MstInstances_MstInstance_State_VlanUnion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Mstp_MstInstances_MstInstance_State_VlanUnion& from);
  void MergeFrom(const Stp_Mstp_MstInstances_MstInstance_State_VlanUnion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Mstp_MstInstances_MstInstance_State_VlanUnion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string vlan_string = 26258314;
  void clear_vlan_string();
  static const int kVlanStringFieldNumber = 26258314;
  const ::std::string& vlan_string() const;
  void set_vlan_string(const ::std::string& value);
  #if LANG_CXX11
  void set_vlan_string(::std::string&& value);
  #endif
  void set_vlan_string(const char* value);
  void set_vlan_string(const char* value, size_t size);
  ::std::string* mutable_vlan_string();
  ::std::string* release_vlan_string();
  void set_allocated_vlan_string(::std::string* vlan_string);

  // uint64 vlan_uint64 = 405247499;
  void clear_vlan_uint64();
  static const int kVlanUint64FieldNumber = 405247499;
  ::google::protobuf::uint64 vlan_uint64() const;
  void set_vlan_uint64(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr vlan_string_;
  ::google::protobuf::uint64 vlan_uint64_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_State_VlanUnionImpl();
};
// -------------------------------------------------------------------

class Stp_Mstp_MstInstances_MstInstance_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State) */ {
 public:
  Stp_Mstp_MstInstances_MstInstance_State();
  virtual ~Stp_Mstp_MstInstances_MstInstance_State();

  Stp_Mstp_MstInstances_MstInstance_State(const Stp_Mstp_MstInstances_MstInstance_State& from);

  inline Stp_Mstp_MstInstances_MstInstance_State& operator=(const Stp_Mstp_MstInstances_MstInstance_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Mstp_MstInstances_MstInstance_State(Stp_Mstp_MstInstances_MstInstance_State&& from) noexcept
    : Stp_Mstp_MstInstances_MstInstance_State() {
    *this = ::std::move(from);
  }

  inline Stp_Mstp_MstInstances_MstInstance_State& operator=(Stp_Mstp_MstInstances_MstInstance_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Mstp_MstInstances_MstInstance_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Mstp_MstInstances_MstInstance_State* internal_default_instance() {
    return reinterpret_cast<const Stp_Mstp_MstInstances_MstInstance_State*>(
               &_Stp_Mstp_MstInstances_MstInstance_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(Stp_Mstp_MstInstances_MstInstance_State* other);
  friend void swap(Stp_Mstp_MstInstances_MstInstance_State& a, Stp_Mstp_MstInstances_MstInstance_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Mstp_MstInstances_MstInstance_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Mstp_MstInstances_MstInstance_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Mstp_MstInstances_MstInstance_State& from);
  void MergeFrom(const Stp_Mstp_MstInstances_MstInstance_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Mstp_MstInstances_MstInstance_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Stp_Mstp_MstInstances_MstInstance_State_VlanUnion VlanUnion;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion vlan = 175421410 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/vlan"];
  int vlan_size() const;
  void clear_vlan();
  static const int kVlanFieldNumber = 175421410;
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State_VlanUnion& vlan(int index) const;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State_VlanUnion* mutable_vlan(int index);
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State_VlanUnion* add_vlan();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State_VlanUnion >*
      mutable_vlan();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State_VlanUnion >&
      vlan() const;

  // .ywrapper.StringValue designated_root_address = 57983091 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/designated-root-address"];
  bool has_designated_root_address() const;
  void clear_designated_root_address();
  static const int kDesignatedRootAddressFieldNumber = 57983091;
  const ::ywrapper::StringValue& designated_root_address() const;
  ::ywrapper::StringValue* release_designated_root_address();
  ::ywrapper::StringValue* mutable_designated_root_address();
  void set_allocated_designated_root_address(::ywrapper::StringValue* designated_root_address);

  // .ywrapper.UintValue root_cost = 305061753 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/root-cost"];
  bool has_root_cost() const;
  void clear_root_cost();
  static const int kRootCostFieldNumber = 305061753;
  const ::ywrapper::UintValue& root_cost() const;
  ::ywrapper::UintValue* release_root_cost();
  ::ywrapper::UintValue* mutable_root_cost();
  void set_allocated_root_cost(::ywrapper::UintValue* root_cost);

  // .ywrapper.UintValue hold_time = 318764568 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/hold-time"];
  bool has_hold_time() const;
  void clear_hold_time();
  static const int kHoldTimeFieldNumber = 318764568;
  const ::ywrapper::UintValue& hold_time() const;
  ::ywrapper::UintValue* release_hold_time();
  ::ywrapper::UintValue* mutable_hold_time();
  void set_allocated_hold_time(::ywrapper::UintValue* hold_time);

  // .ywrapper.UintValue topology_changes = 318857962 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/topology-changes"];
  bool has_topology_changes() const;
  void clear_topology_changes();
  static const int kTopologyChangesFieldNumber = 318857962;
  const ::ywrapper::UintValue& topology_changes() const;
  ::ywrapper::UintValue* release_topology_changes();
  ::ywrapper::UintValue* mutable_topology_changes();
  void set_allocated_topology_changes(::ywrapper::UintValue* topology_changes);

  // .ywrapper.UintValue designated_root_priority = 351428737 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/designated-root-priority"];
  bool has_designated_root_priority() const;
  void clear_designated_root_priority();
  static const int kDesignatedRootPriorityFieldNumber = 351428737;
  const ::ywrapper::UintValue& designated_root_priority() const;
  ::ywrapper::UintValue* release_designated_root_priority();
  ::ywrapper::UintValue* mutable_designated_root_priority();
  void set_allocated_designated_root_priority(::ywrapper::UintValue* designated_root_priority);

  // .ywrapper.UintValue bridge_priority = 352871151 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/bridge-priority"];
  bool has_bridge_priority() const;
  void clear_bridge_priority();
  static const int kBridgePriorityFieldNumber = 352871151;
  const ::ywrapper::UintValue& bridge_priority() const;
  ::ywrapper::UintValue* release_bridge_priority();
  ::ywrapper::UintValue* mutable_bridge_priority();
  void set_allocated_bridge_priority(::ywrapper::UintValue* bridge_priority);

  // .ywrapper.UintValue root_port = 397337255 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/root-port"];
  bool has_root_port() const;
  void clear_root_port();
  static const int kRootPortFieldNumber = 397337255;
  const ::ywrapper::UintValue& root_port() const;
  ::ywrapper::UintValue* release_root_port();
  ::ywrapper::UintValue* mutable_root_port();
  void set_allocated_root_port(::ywrapper::UintValue* root_port);

  // .ywrapper.UintValue mst_id = 408675299 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/mst-id"];
  bool has_mst_id() const;
  void clear_mst_id();
  static const int kMstIdFieldNumber = 408675299;
  const ::ywrapper::UintValue& mst_id() const;
  ::ywrapper::UintValue* release_mst_id();
  ::ywrapper::UintValue* mutable_mst_id();
  void set_allocated_mst_id(::ywrapper::UintValue* mst_id);

  // .ywrapper.UintValue time_since_topology_change = 439704716 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/time-since-topology-change"];
  bool has_time_since_topology_change() const;
  void clear_time_since_topology_change();
  static const int kTimeSinceTopologyChangeFieldNumber = 439704716;
  const ::ywrapper::UintValue& time_since_topology_change() const;
  ::ywrapper::UintValue* release_time_since_topology_change();
  ::ywrapper::UintValue* mutable_time_since_topology_change();
  void set_allocated_time_since_topology_change(::ywrapper::UintValue* time_since_topology_change);

  // .ywrapper.StringValue bridge_address = 520205789 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/bridge-address"];
  bool has_bridge_address() const;
  void clear_bridge_address();
  static const int kBridgeAddressFieldNumber = 520205789;
  const ::ywrapper::StringValue& bridge_address() const;
  ::ywrapper::StringValue* release_bridge_address();
  ::ywrapper::StringValue* mutable_bridge_address();
  void set_allocated_bridge_address(::ywrapper::StringValue* bridge_address);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State_VlanUnion > vlan_;
  ::ywrapper::StringValue* designated_root_address_;
  ::ywrapper::UintValue* root_cost_;
  ::ywrapper::UintValue* hold_time_;
  ::ywrapper::UintValue* topology_changes_;
  ::ywrapper::UintValue* designated_root_priority_;
  ::ywrapper::UintValue* bridge_priority_;
  ::ywrapper::UintValue* root_port_;
  ::ywrapper::UintValue* mst_id_;
  ::ywrapper::UintValue* time_since_topology_change_;
  ::ywrapper::StringValue* bridge_address_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstance_StateImpl();
};
// -------------------------------------------------------------------

class Stp_Mstp_MstInstances_MstInstance : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance) */ {
 public:
  Stp_Mstp_MstInstances_MstInstance();
  virtual ~Stp_Mstp_MstInstances_MstInstance();

  Stp_Mstp_MstInstances_MstInstance(const Stp_Mstp_MstInstances_MstInstance& from);

  inline Stp_Mstp_MstInstances_MstInstance& operator=(const Stp_Mstp_MstInstances_MstInstance& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Mstp_MstInstances_MstInstance(Stp_Mstp_MstInstances_MstInstance&& from) noexcept
    : Stp_Mstp_MstInstances_MstInstance() {
    *this = ::std::move(from);
  }

  inline Stp_Mstp_MstInstances_MstInstance& operator=(Stp_Mstp_MstInstances_MstInstance&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Mstp_MstInstances_MstInstance& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Mstp_MstInstances_MstInstance* internal_default_instance() {
    return reinterpret_cast<const Stp_Mstp_MstInstances_MstInstance*>(
               &_Stp_Mstp_MstInstances_MstInstance_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(Stp_Mstp_MstInstances_MstInstance* other);
  friend void swap(Stp_Mstp_MstInstances_MstInstance& a, Stp_Mstp_MstInstances_MstInstance& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Mstp_MstInstances_MstInstance* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Mstp_MstInstances_MstInstance* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Mstp_MstInstances_MstInstance& from);
  void MergeFrom(const Stp_Mstp_MstInstances_MstInstance& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Mstp_MstInstances_MstInstance* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Stp_Mstp_MstInstances_MstInstance_Config Config;
  typedef Stp_Mstp_MstInstances_MstInstance_Interfaces Interfaces;
  typedef Stp_Mstp_MstInstances_MstInstance_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State state = 317664238 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 317664238;
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State& state() const;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State* release_state();
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State* state);

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config config = 472762393 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 472762393;
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config& config() const;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config* release_config();
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config* config);

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces interfaces = 491215479 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces"];
  bool has_interfaces() const;
  void clear_interfaces();
  static const int kInterfacesFieldNumber = 491215479;
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces& interfaces() const;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces* release_interfaces();
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces* mutable_interfaces();
  void set_allocated_interfaces(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces* interfaces);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State* state_;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config* config_;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces* interfaces_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstanceImpl();
};
// -------------------------------------------------------------------

class Stp_Mstp_MstInstances_MstInstanceKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey) */ {
 public:
  Stp_Mstp_MstInstances_MstInstanceKey();
  virtual ~Stp_Mstp_MstInstances_MstInstanceKey();

  Stp_Mstp_MstInstances_MstInstanceKey(const Stp_Mstp_MstInstances_MstInstanceKey& from);

  inline Stp_Mstp_MstInstances_MstInstanceKey& operator=(const Stp_Mstp_MstInstances_MstInstanceKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Mstp_MstInstances_MstInstanceKey(Stp_Mstp_MstInstances_MstInstanceKey&& from) noexcept
    : Stp_Mstp_MstInstances_MstInstanceKey() {
    *this = ::std::move(from);
  }

  inline Stp_Mstp_MstInstances_MstInstanceKey& operator=(Stp_Mstp_MstInstances_MstInstanceKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Mstp_MstInstances_MstInstanceKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Mstp_MstInstances_MstInstanceKey* internal_default_instance() {
    return reinterpret_cast<const Stp_Mstp_MstInstances_MstInstanceKey*>(
               &_Stp_Mstp_MstInstances_MstInstanceKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(Stp_Mstp_MstInstances_MstInstanceKey* other);
  friend void swap(Stp_Mstp_MstInstances_MstInstanceKey& a, Stp_Mstp_MstInstances_MstInstanceKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Mstp_MstInstances_MstInstanceKey* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Mstp_MstInstances_MstInstanceKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Mstp_MstInstances_MstInstanceKey& from);
  void MergeFrom(const Stp_Mstp_MstInstances_MstInstanceKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Mstp_MstInstances_MstInstanceKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance mst_instance = 2;
  bool has_mst_instance() const;
  void clear_mst_instance();
  static const int kMstInstanceFieldNumber = 2;
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance& mst_instance() const;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance* release_mst_instance();
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance* mutable_mst_instance();
  void set_allocated_mst_instance(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance* mst_instance);

  // uint64 mst_id = 1 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/mst-id"];
  void clear_mst_id();
  static const int kMstIdFieldNumber = 1;
  ::google::protobuf::uint64 mst_id() const;
  void set_mst_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance* mst_instance_;
  ::google::protobuf::uint64 mst_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstances_MstInstanceKeyImpl();
};
// -------------------------------------------------------------------

class Stp_Mstp_MstInstances : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances) */ {
 public:
  Stp_Mstp_MstInstances();
  virtual ~Stp_Mstp_MstInstances();

  Stp_Mstp_MstInstances(const Stp_Mstp_MstInstances& from);

  inline Stp_Mstp_MstInstances& operator=(const Stp_Mstp_MstInstances& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Mstp_MstInstances(Stp_Mstp_MstInstances&& from) noexcept
    : Stp_Mstp_MstInstances() {
    *this = ::std::move(from);
  }

  inline Stp_Mstp_MstInstances& operator=(Stp_Mstp_MstInstances&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Mstp_MstInstances& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Mstp_MstInstances* internal_default_instance() {
    return reinterpret_cast<const Stp_Mstp_MstInstances*>(
               &_Stp_Mstp_MstInstances_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(Stp_Mstp_MstInstances* other);
  friend void swap(Stp_Mstp_MstInstances& a, Stp_Mstp_MstInstances& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Mstp_MstInstances* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Mstp_MstInstances* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Mstp_MstInstances& from);
  void MergeFrom(const Stp_Mstp_MstInstances& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Mstp_MstInstances* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Stp_Mstp_MstInstances_MstInstance MstInstance;
  typedef Stp_Mstp_MstInstances_MstInstanceKey MstInstanceKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey mst_instance = 497343892 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance"];
  int mst_instance_size() const;
  void clear_mst_instance();
  static const int kMstInstanceFieldNumber = 497343892;
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstanceKey& mst_instance(int index) const;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstanceKey* mutable_mst_instance(int index);
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstanceKey* add_mst_instance();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstanceKey >*
      mutable_mst_instance();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstanceKey >&
      mst_instance() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstanceKey > mst_instance_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_MstInstancesImpl();
};
// -------------------------------------------------------------------

class Stp_Mstp_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Mstp.State) */ {
 public:
  Stp_Mstp_State();
  virtual ~Stp_Mstp_State();

  Stp_Mstp_State(const Stp_Mstp_State& from);

  inline Stp_Mstp_State& operator=(const Stp_Mstp_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Mstp_State(Stp_Mstp_State&& from) noexcept
    : Stp_Mstp_State() {
    *this = ::std::move(from);
  }

  inline Stp_Mstp_State& operator=(Stp_Mstp_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Mstp_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Mstp_State* internal_default_instance() {
    return reinterpret_cast<const Stp_Mstp_State*>(
               &_Stp_Mstp_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(Stp_Mstp_State* other);
  friend void swap(Stp_Mstp_State& a, Stp_Mstp_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Mstp_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Mstp_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Mstp_State& from);
  void MergeFrom(const Stp_Mstp_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Mstp_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue hold_count = 109158353 [(.yext.schemapath) = "/stp/mstp/state/hold-count"];
  bool has_hold_count() const;
  void clear_hold_count();
  static const int kHoldCountFieldNumber = 109158353;
  const ::ywrapper::UintValue& hold_count() const;
  ::ywrapper::UintValue* release_hold_count();
  ::ywrapper::UintValue* mutable_hold_count();
  void set_allocated_hold_count(::ywrapper::UintValue* hold_count);

  // .ywrapper.UintValue max_hop = 113450208 [(.yext.schemapath) = "/stp/mstp/state/max-hop"];
  bool has_max_hop() const;
  void clear_max_hop();
  static const int kMaxHopFieldNumber = 113450208;
  const ::ywrapper::UintValue& max_hop() const;
  ::ywrapper::UintValue* release_max_hop();
  ::ywrapper::UintValue* mutable_max_hop();
  void set_allocated_max_hop(::ywrapper::UintValue* max_hop);

  // .ywrapper.StringValue name = 362119781 [(.yext.schemapath) = "/stp/mstp/state/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 362119781;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .ywrapper.UintValue revision = 426296947 [(.yext.schemapath) = "/stp/mstp/state/revision"];
  bool has_revision() const;
  void clear_revision();
  static const int kRevisionFieldNumber = 426296947;
  const ::ywrapper::UintValue& revision() const;
  ::ywrapper::UintValue* release_revision();
  ::ywrapper::UintValue* mutable_revision();
  void set_allocated_revision(::ywrapper::UintValue* revision);

  // .ywrapper.UintValue forwarding_delay = 512660443 [(.yext.schemapath) = "/stp/mstp/state/forwarding-delay"];
  bool has_forwarding_delay() const;
  void clear_forwarding_delay();
  static const int kForwardingDelayFieldNumber = 512660443;
  const ::ywrapper::UintValue& forwarding_delay() const;
  ::ywrapper::UintValue* release_forwarding_delay();
  ::ywrapper::UintValue* mutable_forwarding_delay();
  void set_allocated_forwarding_delay(::ywrapper::UintValue* forwarding_delay);

  // .ywrapper.UintValue max_age = 517220060 [(.yext.schemapath) = "/stp/mstp/state/max-age"];
  bool has_max_age() const;
  void clear_max_age();
  static const int kMaxAgeFieldNumber = 517220060;
  const ::ywrapper::UintValue& max_age() const;
  ::ywrapper::UintValue* release_max_age();
  ::ywrapper::UintValue* mutable_max_age();
  void set_allocated_max_age(::ywrapper::UintValue* max_age);

  // .ywrapper.UintValue hello_time = 519125574 [(.yext.schemapath) = "/stp/mstp/state/hello-time"];
  bool has_hello_time() const;
  void clear_hello_time();
  static const int kHelloTimeFieldNumber = 519125574;
  const ::ywrapper::UintValue& hello_time() const;
  ::ywrapper::UintValue* release_hello_time();
  ::ywrapper::UintValue* mutable_hello_time();
  void set_allocated_hello_time(::ywrapper::UintValue* hello_time);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Mstp.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* hold_count_;
  ::ywrapper::UintValue* max_hop_;
  ::ywrapper::StringValue* name_;
  ::ywrapper::UintValue* revision_;
  ::ywrapper::UintValue* forwarding_delay_;
  ::ywrapper::UintValue* max_age_;
  ::ywrapper::UintValue* hello_time_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Mstp_StateImpl();
};
// -------------------------------------------------------------------

class Stp_Mstp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Mstp) */ {
 public:
  Stp_Mstp();
  virtual ~Stp_Mstp();

  Stp_Mstp(const Stp_Mstp& from);

  inline Stp_Mstp& operator=(const Stp_Mstp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Mstp(Stp_Mstp&& from) noexcept
    : Stp_Mstp() {
    *this = ::std::move(from);
  }

  inline Stp_Mstp& operator=(Stp_Mstp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Mstp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Mstp* internal_default_instance() {
    return reinterpret_cast<const Stp_Mstp*>(
               &_Stp_Mstp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(Stp_Mstp* other);
  friend void swap(Stp_Mstp& a, Stp_Mstp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Mstp* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Mstp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Mstp& from);
  void MergeFrom(const Stp_Mstp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Mstp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Stp_Mstp_Config Config;
  typedef Stp_Mstp_MstInstances MstInstances;
  typedef Stp_Mstp_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances mst_instances = 72798773 [(.yext.schemapath) = "/stp/mstp/mst-instances"];
  bool has_mst_instances() const;
  void clear_mst_instances();
  static const int kMstInstancesFieldNumber = 72798773;
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances& mst_instances() const;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances* release_mst_instances();
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances* mutable_mst_instances();
  void set_allocated_mst_instances(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances* mst_instances);

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.Config config = 362267192 [(.yext.schemapath) = "/stp/mstp/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 362267192;
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp_Config& config() const;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_Config* release_config();
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_spanning_tree::Stp_Mstp_Config* config);

  // .openconfig.openconfig_spanning_tree.Stp.Mstp.State state = 419352913 [(.yext.schemapath) = "/stp/mstp/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 419352913;
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp_State& state() const;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_State* release_state();
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_spanning_tree::Stp_Mstp_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Mstp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances* mst_instances_;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_Config* config_;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_MstpImpl();
};
// -------------------------------------------------------------------

class Stp_RapidPvst_Vlan_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config) */ {
 public:
  Stp_RapidPvst_Vlan_Config();
  virtual ~Stp_RapidPvst_Vlan_Config();

  Stp_RapidPvst_Vlan_Config(const Stp_RapidPvst_Vlan_Config& from);

  inline Stp_RapidPvst_Vlan_Config& operator=(const Stp_RapidPvst_Vlan_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_RapidPvst_Vlan_Config(Stp_RapidPvst_Vlan_Config&& from) noexcept
    : Stp_RapidPvst_Vlan_Config() {
    *this = ::std::move(from);
  }

  inline Stp_RapidPvst_Vlan_Config& operator=(Stp_RapidPvst_Vlan_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_RapidPvst_Vlan_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_RapidPvst_Vlan_Config* internal_default_instance() {
    return reinterpret_cast<const Stp_RapidPvst_Vlan_Config*>(
               &_Stp_RapidPvst_Vlan_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(Stp_RapidPvst_Vlan_Config* other);
  friend void swap(Stp_RapidPvst_Vlan_Config& a, Stp_RapidPvst_Vlan_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_RapidPvst_Vlan_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_RapidPvst_Vlan_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_RapidPvst_Vlan_Config& from);
  void MergeFrom(const Stp_RapidPvst_Vlan_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_RapidPvst_Vlan_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue forwarding_delay = 71214714 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/forwarding-delay"];
  bool has_forwarding_delay() const;
  void clear_forwarding_delay();
  static const int kForwardingDelayFieldNumber = 71214714;
  const ::ywrapper::UintValue& forwarding_delay() const;
  ::ywrapper::UintValue* release_forwarding_delay();
  ::ywrapper::UintValue* mutable_forwarding_delay();
  void set_allocated_forwarding_delay(::ywrapper::UintValue* forwarding_delay);

  // .ywrapper.UintValue bridge_priority = 77791083 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/bridge-priority"];
  bool has_bridge_priority() const;
  void clear_bridge_priority();
  static const int kBridgePriorityFieldNumber = 77791083;
  const ::ywrapper::UintValue& bridge_priority() const;
  ::ywrapper::UintValue* release_bridge_priority();
  ::ywrapper::UintValue* mutable_bridge_priority();
  void set_allocated_bridge_priority(::ywrapper::UintValue* bridge_priority);

  // .ywrapper.UintValue max_age = 244952871 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/max-age"];
  bool has_max_age() const;
  void clear_max_age();
  static const int kMaxAgeFieldNumber = 244952871;
  const ::ywrapper::UintValue& max_age() const;
  ::ywrapper::UintValue* release_max_age();
  ::ywrapper::UintValue* mutable_max_age();
  void set_allocated_max_age(::ywrapper::UintValue* max_age);

  // .ywrapper.UintValue hold_count = 247466364 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/hold-count"];
  bool has_hold_count() const;
  void clear_hold_count();
  static const int kHoldCountFieldNumber = 247466364;
  const ::ywrapper::UintValue& hold_count() const;
  ::ywrapper::UintValue* release_hold_count();
  ::ywrapper::UintValue* mutable_hold_count();
  void set_allocated_hold_count(::ywrapper::UintValue* hold_count);

  // .ywrapper.UintValue hello_time = 413699279 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/hello-time"];
  bool has_hello_time() const;
  void clear_hello_time();
  static const int kHelloTimeFieldNumber = 413699279;
  const ::ywrapper::UintValue& hello_time() const;
  ::ywrapper::UintValue* release_hello_time();
  ::ywrapper::UintValue* mutable_hello_time();
  void set_allocated_hello_time(::ywrapper::UintValue* hello_time);

  // .ywrapper.UintValue vlan_id = 512435536 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/vlan-id"];
  bool has_vlan_id() const;
  void clear_vlan_id();
  static const int kVlanIdFieldNumber = 512435536;
  const ::ywrapper::UintValue& vlan_id() const;
  ::ywrapper::UintValue* release_vlan_id();
  ::ywrapper::UintValue* mutable_vlan_id();
  void set_allocated_vlan_id(::ywrapper::UintValue* vlan_id);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* forwarding_delay_;
  ::ywrapper::UintValue* bridge_priority_;
  ::ywrapper::UintValue* max_age_;
  ::ywrapper::UintValue* hold_count_;
  ::ywrapper::UintValue* hello_time_;
  ::ywrapper::UintValue* vlan_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_ConfigImpl();
};
// -------------------------------------------------------------------

class Stp_RapidPvst_Vlan_Interfaces_Interface_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config) */ {
 public:
  Stp_RapidPvst_Vlan_Interfaces_Interface_Config();
  virtual ~Stp_RapidPvst_Vlan_Interfaces_Interface_Config();

  Stp_RapidPvst_Vlan_Interfaces_Interface_Config(const Stp_RapidPvst_Vlan_Interfaces_Interface_Config& from);

  inline Stp_RapidPvst_Vlan_Interfaces_Interface_Config& operator=(const Stp_RapidPvst_Vlan_Interfaces_Interface_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_RapidPvst_Vlan_Interfaces_Interface_Config(Stp_RapidPvst_Vlan_Interfaces_Interface_Config&& from) noexcept
    : Stp_RapidPvst_Vlan_Interfaces_Interface_Config() {
    *this = ::std::move(from);
  }

  inline Stp_RapidPvst_Vlan_Interfaces_Interface_Config& operator=(Stp_RapidPvst_Vlan_Interfaces_Interface_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_RapidPvst_Vlan_Interfaces_Interface_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_RapidPvst_Vlan_Interfaces_Interface_Config* internal_default_instance() {
    return reinterpret_cast<const Stp_RapidPvst_Vlan_Interfaces_Interface_Config*>(
               &_Stp_RapidPvst_Vlan_Interfaces_Interface_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(Stp_RapidPvst_Vlan_Interfaces_Interface_Config* other);
  friend void swap(Stp_RapidPvst_Vlan_Interfaces_Interface_Config& a, Stp_RapidPvst_Vlan_Interfaces_Interface_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_RapidPvst_Vlan_Interfaces_Interface_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_RapidPvst_Vlan_Interfaces_Interface_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_RapidPvst_Vlan_Interfaces_Interface_Config& from);
  void MergeFrom(const Stp_RapidPvst_Vlan_Interfaces_Interface_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_RapidPvst_Vlan_Interfaces_Interface_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue cost = 112934615 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/config/cost"];
  bool has_cost() const;
  void clear_cost();
  static const int kCostFieldNumber = 112934615;
  const ::ywrapper::UintValue& cost() const;
  ::ywrapper::UintValue* release_cost();
  ::ywrapper::UintValue* mutable_cost();
  void set_allocated_cost(::ywrapper::UintValue* cost);

  // .ywrapper.StringValue name = 215156497 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/config/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 215156497;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .ywrapper.UintValue port_priority = 225996114 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/config/port-priority"];
  bool has_port_priority() const;
  void clear_port_priority();
  static const int kPortPriorityFieldNumber = 225996114;
  const ::ywrapper::UintValue& port_priority() const;
  ::ywrapper::UintValue* release_port_priority();
  ::ywrapper::UintValue* mutable_port_priority();
  void set_allocated_port_priority(::ywrapper::UintValue* port_priority);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* cost_;
  ::ywrapper::StringValue* name_;
  ::ywrapper::UintValue* port_priority_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_ConfigImpl();
};
// -------------------------------------------------------------------

class Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters) */ {
 public:
  Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters();
  virtual ~Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters();

  Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters(const Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters& from);

  inline Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters& operator=(const Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters(Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters&& from) noexcept
    : Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters() {
    *this = ::std::move(from);
  }

  inline Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters& operator=(Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters* internal_default_instance() {
    return reinterpret_cast<const Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters*>(
               &_Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters* other);
  friend void swap(Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters& a, Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters& from);
  void MergeFrom(const Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue bpdu_sent = 14257893 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/counters/bpdu-sent"];
  bool has_bpdu_sent() const;
  void clear_bpdu_sent();
  static const int kBpduSentFieldNumber = 14257893;
  const ::ywrapper::UintValue& bpdu_sent() const;
  ::ywrapper::UintValue* release_bpdu_sent();
  ::ywrapper::UintValue* mutable_bpdu_sent();
  void set_allocated_bpdu_sent(::ywrapper::UintValue* bpdu_sent);

  // .ywrapper.UintValue bpdu_received = 123889350 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/counters/bpdu-received"];
  bool has_bpdu_received() const;
  void clear_bpdu_received();
  static const int kBpduReceivedFieldNumber = 123889350;
  const ::ywrapper::UintValue& bpdu_received() const;
  ::ywrapper::UintValue* release_bpdu_received();
  ::ywrapper::UintValue* mutable_bpdu_received();
  void set_allocated_bpdu_received(::ywrapper::UintValue* bpdu_received);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* bpdu_sent_;
  ::ywrapper::UintValue* bpdu_received_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_State_CountersImpl();
};
// -------------------------------------------------------------------

class Stp_RapidPvst_Vlan_Interfaces_Interface_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State) */ {
 public:
  Stp_RapidPvst_Vlan_Interfaces_Interface_State();
  virtual ~Stp_RapidPvst_Vlan_Interfaces_Interface_State();

  Stp_RapidPvst_Vlan_Interfaces_Interface_State(const Stp_RapidPvst_Vlan_Interfaces_Interface_State& from);

  inline Stp_RapidPvst_Vlan_Interfaces_Interface_State& operator=(const Stp_RapidPvst_Vlan_Interfaces_Interface_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_RapidPvst_Vlan_Interfaces_Interface_State(Stp_RapidPvst_Vlan_Interfaces_Interface_State&& from) noexcept
    : Stp_RapidPvst_Vlan_Interfaces_Interface_State() {
    *this = ::std::move(from);
  }

  inline Stp_RapidPvst_Vlan_Interfaces_Interface_State& operator=(Stp_RapidPvst_Vlan_Interfaces_Interface_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_RapidPvst_Vlan_Interfaces_Interface_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_RapidPvst_Vlan_Interfaces_Interface_State* internal_default_instance() {
    return reinterpret_cast<const Stp_RapidPvst_Vlan_Interfaces_Interface_State*>(
               &_Stp_RapidPvst_Vlan_Interfaces_Interface_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(Stp_RapidPvst_Vlan_Interfaces_Interface_State* other);
  friend void swap(Stp_RapidPvst_Vlan_Interfaces_Interface_State& a, Stp_RapidPvst_Vlan_Interfaces_Interface_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_RapidPvst_Vlan_Interfaces_Interface_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_RapidPvst_Vlan_Interfaces_Interface_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_RapidPvst_Vlan_Interfaces_Interface_State& from);
  void MergeFrom(const Stp_RapidPvst_Vlan_Interfaces_Interface_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_RapidPvst_Vlan_Interfaces_Interface_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters Counters;

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue designated_port_priority = 29583074 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-port-priority"];
  bool has_designated_port_priority() const;
  void clear_designated_port_priority();
  static const int kDesignatedPortPriorityFieldNumber = 29583074;
  const ::ywrapper::UintValue& designated_port_priority() const;
  ::ywrapper::UintValue* release_designated_port_priority();
  ::ywrapper::UintValue* mutable_designated_port_priority();
  void set_allocated_designated_port_priority(::ywrapper::UintValue* designated_port_priority);

  // .ywrapper.UintValue designated_root_priority = 38925981 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-root-priority"];
  bool has_designated_root_priority() const;
  void clear_designated_root_priority();
  static const int kDesignatedRootPriorityFieldNumber = 38925981;
  const ::ywrapper::UintValue& designated_root_priority() const;
  ::ywrapper::UintValue* release_designated_root_priority();
  ::ywrapper::UintValue* mutable_designated_root_priority();
  void set_allocated_designated_root_priority(::ywrapper::UintValue* designated_root_priority);

  // .ywrapper.StringValue name = 90243448 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 90243448;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .ywrapper.StringValue designated_root_address = 140840559 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-root-address"];
  bool has_designated_root_address() const;
  void clear_designated_root_address();
  static const int kDesignatedRootAddressFieldNumber = 140840559;
  const ::ywrapper::StringValue& designated_root_address() const;
  ::ywrapper::StringValue* release_designated_root_address();
  ::ywrapper::StringValue* mutable_designated_root_address();
  void set_allocated_designated_root_address(::ywrapper::StringValue* designated_root_address);

  // .ywrapper.UintValue designated_port_num = 159446494 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-port-num"];
  bool has_designated_port_num() const;
  void clear_designated_port_num();
  static const int kDesignatedPortNumFieldNumber = 159446494;
  const ::ywrapper::UintValue& designated_port_num() const;
  ::ywrapper::UintValue* release_designated_port_num();
  ::ywrapper::UintValue* mutable_designated_port_num();
  void set_allocated_designated_port_num(::ywrapper::UintValue* designated_port_num);

  // .ywrapper.UintValue port_priority = 195511977 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/port-priority"];
  bool has_port_priority() const;
  void clear_port_priority();
  static const int kPortPriorityFieldNumber = 195511977;
  const ::ywrapper::UintValue& port_priority() const;
  ::ywrapper::UintValue* release_port_priority();
  ::ywrapper::UintValue* mutable_port_priority();
  void set_allocated_port_priority(::ywrapper::UintValue* port_priority);

  // .ywrapper.UintValue designated_cost = 205029575 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-cost"];
  bool has_designated_cost() const;
  void clear_designated_cost();
  static const int kDesignatedCostFieldNumber = 205029575;
  const ::ywrapper::UintValue& designated_cost() const;
  ::ywrapper::UintValue* release_designated_cost();
  ::ywrapper::UintValue* mutable_designated_cost();
  void set_allocated_designated_cost(::ywrapper::UintValue* designated_cost);

  // .ywrapper.UintValue forward_transisitions = 250621287 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/forward-transisitions"];
  bool has_forward_transisitions() const;
  void clear_forward_transisitions();
  static const int kForwardTransisitionsFieldNumber = 250621287;
  const ::ywrapper::UintValue& forward_transisitions() const;
  ::ywrapper::UintValue* release_forward_transisitions();
  ::ywrapper::UintValue* mutable_forward_transisitions();
  void set_allocated_forward_transisitions(::ywrapper::UintValue* forward_transisitions);

  // .ywrapper.UintValue port_num = 258837963 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/port-num"];
  bool has_port_num() const;
  void clear_port_num();
  static const int kPortNumFieldNumber = 258837963;
  const ::ywrapper::UintValue& port_num() const;
  ::ywrapper::UintValue* release_port_num();
  ::ywrapper::UintValue* mutable_port_num();
  void set_allocated_port_num(::ywrapper::UintValue* port_num);

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters counters = 259051782 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/counters"];
  bool has_counters() const;
  void clear_counters();
  static const int kCountersFieldNumber = 259051782;
  const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters& counters() const;
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters* release_counters();
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters* mutable_counters();
  void set_allocated_counters(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters* counters);

  // .ywrapper.StringValue designated_bridge_address = 285199560 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-bridge-address"];
  bool has_designated_bridge_address() const;
  void clear_designated_bridge_address();
  static const int kDesignatedBridgeAddressFieldNumber = 285199560;
  const ::ywrapper::StringValue& designated_bridge_address() const;
  ::ywrapper::StringValue* release_designated_bridge_address();
  ::ywrapper::StringValue* mutable_designated_bridge_address();
  void set_allocated_designated_bridge_address(::ywrapper::StringValue* designated_bridge_address);

  // .ywrapper.UintValue cost = 389203710 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/cost"];
  bool has_cost() const;
  void clear_cost();
  static const int kCostFieldNumber = 389203710;
  const ::ywrapper::UintValue& cost() const;
  ::ywrapper::UintValue* release_cost();
  ::ywrapper::UintValue* mutable_cost();
  void set_allocated_cost(::ywrapper::UintValue* cost);

  // .ywrapper.UintValue designated_bridge_priority = 487332160 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-bridge-priority"];
  bool has_designated_bridge_priority() const;
  void clear_designated_bridge_priority();
  static const int kDesignatedBridgePriorityFieldNumber = 487332160;
  const ::ywrapper::UintValue& designated_bridge_priority() const;
  ::ywrapper::UintValue* release_designated_bridge_priority();
  ::ywrapper::UintValue* mutable_designated_bridge_priority();
  void set_allocated_designated_bridge_priority(::ywrapper::UintValue* designated_bridge_priority);

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTROLE role = 347361501 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/role"];
  void clear_role();
  static const int kRoleFieldNumber = 347361501;
  ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTROLE role() const;
  void set_role(::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTROLE value);

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTSTATE port_state = 363314876 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/port-state"];
  void clear_port_state();
  static const int kPortStateFieldNumber = 363314876;
  ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTSTATE port_state() const;
  void set_port_state(::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTSTATE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* designated_port_priority_;
  ::ywrapper::UintValue* designated_root_priority_;
  ::ywrapper::StringValue* name_;
  ::ywrapper::StringValue* designated_root_address_;
  ::ywrapper::UintValue* designated_port_num_;
  ::ywrapper::UintValue* port_priority_;
  ::ywrapper::UintValue* designated_cost_;
  ::ywrapper::UintValue* forward_transisitions_;
  ::ywrapper::UintValue* port_num_;
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters* counters_;
  ::ywrapper::StringValue* designated_bridge_address_;
  ::ywrapper::UintValue* cost_;
  ::ywrapper::UintValue* designated_bridge_priority_;
  int role_;
  int port_state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_Interfaces_Interface_StateImpl();
};
// -------------------------------------------------------------------

class Stp_RapidPvst_Vlan_Interfaces_Interface : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface) */ {
 public:
  Stp_RapidPvst_Vlan_Interfaces_Interface();
  virtual ~Stp_RapidPvst_Vlan_Interfaces_Interface();

  Stp_RapidPvst_Vlan_Interfaces_Interface(const Stp_RapidPvst_Vlan_Interfaces_Interface& from);

  inline Stp_RapidPvst_Vlan_Interfaces_Interface& operator=(const Stp_RapidPvst_Vlan_Interfaces_Interface& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_RapidPvst_Vlan_Interfaces_Interface(Stp_RapidPvst_Vlan_Interfaces_Interface&& from) noexcept
    : Stp_RapidPvst_Vlan_Interfaces_Interface() {
    *this = ::std::move(from);
  }

  inline Stp_RapidPvst_Vlan_Interfaces_Interface& operator=(Stp_RapidPvst_Vlan_Interfaces_Interface&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_RapidPvst_Vlan_Interfaces_Interface& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_RapidPvst_Vlan_Interfaces_Interface* internal_default_instance() {
    return reinterpret_cast<const Stp_RapidPvst_Vlan_Interfaces_Interface*>(
               &_Stp_RapidPvst_Vlan_Interfaces_Interface_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(Stp_RapidPvst_Vlan_Interfaces_Interface* other);
  friend void swap(Stp_RapidPvst_Vlan_Interfaces_Interface& a, Stp_RapidPvst_Vlan_Interfaces_Interface& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_RapidPvst_Vlan_Interfaces_Interface* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_RapidPvst_Vlan_Interfaces_Interface* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_RapidPvst_Vlan_Interfaces_Interface& from);
  void MergeFrom(const Stp_RapidPvst_Vlan_Interfaces_Interface& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_RapidPvst_Vlan_Interfaces_Interface* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Stp_RapidPvst_Vlan_Interfaces_Interface_Config Config;
  typedef Stp_RapidPvst_Vlan_Interfaces_Interface_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config config = 115497141 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 115497141;
  const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_Config& config() const;
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_Config* release_config();
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_Config* config);

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State state = 204553130 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 204553130;
  const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State& state() const;
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State* release_state();
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_Config* config_;
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_Interfaces_InterfaceImpl();
};
// -------------------------------------------------------------------

class Stp_RapidPvst_Vlan_Interfaces_InterfaceKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey) */ {
 public:
  Stp_RapidPvst_Vlan_Interfaces_InterfaceKey();
  virtual ~Stp_RapidPvst_Vlan_Interfaces_InterfaceKey();

  Stp_RapidPvst_Vlan_Interfaces_InterfaceKey(const Stp_RapidPvst_Vlan_Interfaces_InterfaceKey& from);

  inline Stp_RapidPvst_Vlan_Interfaces_InterfaceKey& operator=(const Stp_RapidPvst_Vlan_Interfaces_InterfaceKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_RapidPvst_Vlan_Interfaces_InterfaceKey(Stp_RapidPvst_Vlan_Interfaces_InterfaceKey&& from) noexcept
    : Stp_RapidPvst_Vlan_Interfaces_InterfaceKey() {
    *this = ::std::move(from);
  }

  inline Stp_RapidPvst_Vlan_Interfaces_InterfaceKey& operator=(Stp_RapidPvst_Vlan_Interfaces_InterfaceKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_RapidPvst_Vlan_Interfaces_InterfaceKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_RapidPvst_Vlan_Interfaces_InterfaceKey* internal_default_instance() {
    return reinterpret_cast<const Stp_RapidPvst_Vlan_Interfaces_InterfaceKey*>(
               &_Stp_RapidPvst_Vlan_Interfaces_InterfaceKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(Stp_RapidPvst_Vlan_Interfaces_InterfaceKey* other);
  friend void swap(Stp_RapidPvst_Vlan_Interfaces_InterfaceKey& a, Stp_RapidPvst_Vlan_Interfaces_InterfaceKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_RapidPvst_Vlan_Interfaces_InterfaceKey* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_RapidPvst_Vlan_Interfaces_InterfaceKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_RapidPvst_Vlan_Interfaces_InterfaceKey& from);
  void MergeFrom(const Stp_RapidPvst_Vlan_Interfaces_InterfaceKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_RapidPvst_Vlan_Interfaces_InterfaceKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/name"];
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface interface = 2;
  bool has_interface() const;
  void clear_interface();
  static const int kInterfaceFieldNumber = 2;
  const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface& interface() const;
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface* release_interface();
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface* mutable_interface();
  void set_allocated_interface(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface* interface);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface* interface_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_Interfaces_InterfaceKeyImpl();
};
// -------------------------------------------------------------------

class Stp_RapidPvst_Vlan_Interfaces : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces) */ {
 public:
  Stp_RapidPvst_Vlan_Interfaces();
  virtual ~Stp_RapidPvst_Vlan_Interfaces();

  Stp_RapidPvst_Vlan_Interfaces(const Stp_RapidPvst_Vlan_Interfaces& from);

  inline Stp_RapidPvst_Vlan_Interfaces& operator=(const Stp_RapidPvst_Vlan_Interfaces& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_RapidPvst_Vlan_Interfaces(Stp_RapidPvst_Vlan_Interfaces&& from) noexcept
    : Stp_RapidPvst_Vlan_Interfaces() {
    *this = ::std::move(from);
  }

  inline Stp_RapidPvst_Vlan_Interfaces& operator=(Stp_RapidPvst_Vlan_Interfaces&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_RapidPvst_Vlan_Interfaces& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_RapidPvst_Vlan_Interfaces* internal_default_instance() {
    return reinterpret_cast<const Stp_RapidPvst_Vlan_Interfaces*>(
               &_Stp_RapidPvst_Vlan_Interfaces_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(Stp_RapidPvst_Vlan_Interfaces* other);
  friend void swap(Stp_RapidPvst_Vlan_Interfaces& a, Stp_RapidPvst_Vlan_Interfaces& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_RapidPvst_Vlan_Interfaces* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_RapidPvst_Vlan_Interfaces* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_RapidPvst_Vlan_Interfaces& from);
  void MergeFrom(const Stp_RapidPvst_Vlan_Interfaces& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_RapidPvst_Vlan_Interfaces* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Stp_RapidPvst_Vlan_Interfaces_Interface Interface;
  typedef Stp_RapidPvst_Vlan_Interfaces_InterfaceKey InterfaceKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey interface = 453728448 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface"];
  int interface_size() const;
  void clear_interface();
  static const int kInterfaceFieldNumber = 453728448;
  const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_InterfaceKey& interface(int index) const;
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_InterfaceKey* mutable_interface(int index);
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_InterfaceKey* add_interface();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_InterfaceKey >*
      mutable_interface();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_InterfaceKey >&
      interface() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_InterfaceKey > interface_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_InterfacesImpl();
};
// -------------------------------------------------------------------

class Stp_RapidPvst_Vlan_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State) */ {
 public:
  Stp_RapidPvst_Vlan_State();
  virtual ~Stp_RapidPvst_Vlan_State();

  Stp_RapidPvst_Vlan_State(const Stp_RapidPvst_Vlan_State& from);

  inline Stp_RapidPvst_Vlan_State& operator=(const Stp_RapidPvst_Vlan_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_RapidPvst_Vlan_State(Stp_RapidPvst_Vlan_State&& from) noexcept
    : Stp_RapidPvst_Vlan_State() {
    *this = ::std::move(from);
  }

  inline Stp_RapidPvst_Vlan_State& operator=(Stp_RapidPvst_Vlan_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_RapidPvst_Vlan_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_RapidPvst_Vlan_State* internal_default_instance() {
    return reinterpret_cast<const Stp_RapidPvst_Vlan_State*>(
               &_Stp_RapidPvst_Vlan_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(Stp_RapidPvst_Vlan_State* other);
  friend void swap(Stp_RapidPvst_Vlan_State& a, Stp_RapidPvst_Vlan_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_RapidPvst_Vlan_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_RapidPvst_Vlan_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_RapidPvst_Vlan_State& from);
  void MergeFrom(const Stp_RapidPvst_Vlan_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_RapidPvst_Vlan_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue hold_count = 66902911 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/hold-count"];
  bool has_hold_count() const;
  void clear_hold_count();
  static const int kHoldCountFieldNumber = 66902911;
  const ::ywrapper::UintValue& hold_count() const;
  ::ywrapper::UintValue* release_hold_count();
  ::ywrapper::UintValue* mutable_hold_count();
  void set_allocated_hold_count(::ywrapper::UintValue* hold_count);

  // .ywrapper.UintValue hold_time = 94235933 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/hold-time"];
  bool has_hold_time() const;
  void clear_hold_time();
  static const int kHoldTimeFieldNumber = 94235933;
  const ::ywrapper::UintValue& hold_time() const;
  ::ywrapper::UintValue* release_hold_time();
  ::ywrapper::UintValue* mutable_hold_time();
  void set_allocated_hold_time(::ywrapper::UintValue* hold_time);

  // .ywrapper.StringValue designated_root_address = 97211874 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/designated-root-address"];
  bool has_designated_root_address() const;
  void clear_designated_root_address();
  static const int kDesignatedRootAddressFieldNumber = 97211874;
  const ::ywrapper::StringValue& designated_root_address() const;
  ::ywrapper::StringValue* release_designated_root_address();
  ::ywrapper::StringValue* mutable_designated_root_address();
  void set_allocated_designated_root_address(::ywrapper::StringValue* designated_root_address);

  // .ywrapper.UintValue time_since_topology_change = 137320635 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/time-since-topology-change"];
  bool has_time_since_topology_change() const;
  void clear_time_since_topology_change();
  static const int kTimeSinceTopologyChangeFieldNumber = 137320635;
  const ::ywrapper::UintValue& time_since_topology_change() const;
  ::ywrapper::UintValue* release_time_since_topology_change();
  ::ywrapper::UintValue* mutable_time_since_topology_change();
  void set_allocated_time_since_topology_change(::ywrapper::UintValue* time_since_topology_change);

  // .ywrapper.UintValue vlan_id = 166116589 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/vlan-id"];
  bool has_vlan_id() const;
  void clear_vlan_id();
  static const int kVlanIdFieldNumber = 166116589;
  const ::ywrapper::UintValue& vlan_id() const;
  ::ywrapper::UintValue* release_vlan_id();
  ::ywrapper::UintValue* mutable_vlan_id();
  void set_allocated_vlan_id(::ywrapper::UintValue* vlan_id);

  // .ywrapper.UintValue bridge_priority = 177157582 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/bridge-priority"];
  bool has_bridge_priority() const;
  void clear_bridge_priority();
  static const int kBridgePriorityFieldNumber = 177157582;
  const ::ywrapper::UintValue& bridge_priority() const;
  ::ywrapper::UintValue* release_bridge_priority();
  ::ywrapper::UintValue* mutable_bridge_priority();
  void set_allocated_bridge_priority(::ywrapper::UintValue* bridge_priority);

  // .ywrapper.UintValue forwarding_delay = 192510517 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/forwarding-delay"];
  bool has_forwarding_delay() const;
  void clear_forwarding_delay();
  static const int kForwardingDelayFieldNumber = 192510517;
  const ::ywrapper::UintValue& forwarding_delay() const;
  ::ywrapper::UintValue* release_forwarding_delay();
  ::ywrapper::UintValue* mutable_forwarding_delay();
  void set_allocated_forwarding_delay(::ywrapper::UintValue* forwarding_delay);

  // .ywrapper.UintValue designated_root_priority = 223616870 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/designated-root-priority"];
  bool has_designated_root_priority() const;
  void clear_designated_root_priority();
  static const int kDesignatedRootPriorityFieldNumber = 223616870;
  const ::ywrapper::UintValue& designated_root_priority() const;
  ::ywrapper::UintValue* release_designated_root_priority();
  ::ywrapper::UintValue* mutable_designated_root_priority();
  void set_allocated_designated_root_priority(::ywrapper::UintValue* designated_root_priority);

  // .ywrapper.UintValue root_port = 244515786 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/root-port"];
  bool has_root_port() const;
  void clear_root_port();
  static const int kRootPortFieldNumber = 244515786;
  const ::ywrapper::UintValue& root_port() const;
  ::ywrapper::UintValue* release_root_port();
  ::ywrapper::UintValue* mutable_root_port();
  void set_allocated_root_port(::ywrapper::UintValue* root_port);

  // .ywrapper.UintValue max_age = 277917522 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/max-age"];
  bool has_max_age() const;
  void clear_max_age();
  static const int kMaxAgeFieldNumber = 277917522;
  const ::ywrapper::UintValue& max_age() const;
  ::ywrapper::UintValue* release_max_age();
  ::ywrapper::UintValue* mutable_max_age();
  void set_allocated_max_age(::ywrapper::UintValue* max_age);

  // .ywrapper.UintValue hello_time = 332690440 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/hello-time"];
  bool has_hello_time() const;
  void clear_hello_time();
  static const int kHelloTimeFieldNumber = 332690440;
  const ::ywrapper::UintValue& hello_time() const;
  ::ywrapper::UintValue* release_hello_time();
  ::ywrapper::UintValue* mutable_hello_time();
  void set_allocated_hello_time(::ywrapper::UintValue* hello_time);

  // .ywrapper.UintValue root_cost = 379544816 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/root-cost"];
  bool has_root_cost() const;
  void clear_root_cost();
  static const int kRootCostFieldNumber = 379544816;
  const ::ywrapper::UintValue& root_cost() const;
  ::ywrapper::UintValue* release_root_cost();
  ::ywrapper::UintValue* mutable_root_cost();
  void set_allocated_root_cost(::ywrapper::UintValue* root_cost);

  // .ywrapper.UintValue topology_changes = 416437749 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/topology-changes"];
  bool has_topology_changes() const;
  void clear_topology_changes();
  static const int kTopologyChangesFieldNumber = 416437749;
  const ::ywrapper::UintValue& topology_changes() const;
  ::ywrapper::UintValue* release_topology_changes();
  ::ywrapper::UintValue* mutable_topology_changes();
  void set_allocated_topology_changes(::ywrapper::UintValue* topology_changes);

  // .ywrapper.StringValue bridge_address = 454985562 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/bridge-address"];
  bool has_bridge_address() const;
  void clear_bridge_address();
  static const int kBridgeAddressFieldNumber = 454985562;
  const ::ywrapper::StringValue& bridge_address() const;
  ::ywrapper::StringValue* release_bridge_address();
  ::ywrapper::StringValue* mutable_bridge_address();
  void set_allocated_bridge_address(::ywrapper::StringValue* bridge_address);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* hold_count_;
  ::ywrapper::UintValue* hold_time_;
  ::ywrapper::StringValue* designated_root_address_;
  ::ywrapper::UintValue* time_since_topology_change_;
  ::ywrapper::UintValue* vlan_id_;
  ::ywrapper::UintValue* bridge_priority_;
  ::ywrapper::UintValue* forwarding_delay_;
  ::ywrapper::UintValue* designated_root_priority_;
  ::ywrapper::UintValue* root_port_;
  ::ywrapper::UintValue* max_age_;
  ::ywrapper::UintValue* hello_time_;
  ::ywrapper::UintValue* root_cost_;
  ::ywrapper::UintValue* topology_changes_;
  ::ywrapper::StringValue* bridge_address_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_Vlan_StateImpl();
};
// -------------------------------------------------------------------

class Stp_RapidPvst_Vlan : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan) */ {
 public:
  Stp_RapidPvst_Vlan();
  virtual ~Stp_RapidPvst_Vlan();

  Stp_RapidPvst_Vlan(const Stp_RapidPvst_Vlan& from);

  inline Stp_RapidPvst_Vlan& operator=(const Stp_RapidPvst_Vlan& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_RapidPvst_Vlan(Stp_RapidPvst_Vlan&& from) noexcept
    : Stp_RapidPvst_Vlan() {
    *this = ::std::move(from);
  }

  inline Stp_RapidPvst_Vlan& operator=(Stp_RapidPvst_Vlan&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_RapidPvst_Vlan& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_RapidPvst_Vlan* internal_default_instance() {
    return reinterpret_cast<const Stp_RapidPvst_Vlan*>(
               &_Stp_RapidPvst_Vlan_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(Stp_RapidPvst_Vlan* other);
  friend void swap(Stp_RapidPvst_Vlan& a, Stp_RapidPvst_Vlan& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_RapidPvst_Vlan* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_RapidPvst_Vlan* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_RapidPvst_Vlan& from);
  void MergeFrom(const Stp_RapidPvst_Vlan& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_RapidPvst_Vlan* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Stp_RapidPvst_Vlan_Config Config;
  typedef Stp_RapidPvst_Vlan_Interfaces Interfaces;
  typedef Stp_RapidPvst_Vlan_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config config = 145334722 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 145334722;
  const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Config& config() const;
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Config* release_config();
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Config* config);

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces interfaces = 305066408 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces"];
  bool has_interfaces() const;
  void clear_interfaces();
  static const int kInterfacesFieldNumber = 305066408;
  const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces& interfaces() const;
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces* release_interfaces();
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces* mutable_interfaces();
  void set_allocated_interfaces(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces* interfaces);

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State state = 420107135 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 420107135;
  const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State& state() const;
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State* release_state();
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Config* config_;
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces* interfaces_;
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_VlanImpl();
};
// -------------------------------------------------------------------

class Stp_RapidPvst_VlanKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey) */ {
 public:
  Stp_RapidPvst_VlanKey();
  virtual ~Stp_RapidPvst_VlanKey();

  Stp_RapidPvst_VlanKey(const Stp_RapidPvst_VlanKey& from);

  inline Stp_RapidPvst_VlanKey& operator=(const Stp_RapidPvst_VlanKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_RapidPvst_VlanKey(Stp_RapidPvst_VlanKey&& from) noexcept
    : Stp_RapidPvst_VlanKey() {
    *this = ::std::move(from);
  }

  inline Stp_RapidPvst_VlanKey& operator=(Stp_RapidPvst_VlanKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_RapidPvst_VlanKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_RapidPvst_VlanKey* internal_default_instance() {
    return reinterpret_cast<const Stp_RapidPvst_VlanKey*>(
               &_Stp_RapidPvst_VlanKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(Stp_RapidPvst_VlanKey* other);
  friend void swap(Stp_RapidPvst_VlanKey& a, Stp_RapidPvst_VlanKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_RapidPvst_VlanKey* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_RapidPvst_VlanKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_RapidPvst_VlanKey& from);
  void MergeFrom(const Stp_RapidPvst_VlanKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_RapidPvst_VlanKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan vlan = 2;
  bool has_vlan() const;
  void clear_vlan();
  static const int kVlanFieldNumber = 2;
  const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan& vlan() const;
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan* release_vlan();
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan* mutable_vlan();
  void set_allocated_vlan(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan* vlan);

  // uint64 vlan_id = 1 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/vlan-id"];
  void clear_vlan_id();
  static const int kVlanIdFieldNumber = 1;
  ::google::protobuf::uint64 vlan_id() const;
  void set_vlan_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan* vlan_;
  ::google::protobuf::uint64 vlan_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvst_VlanKeyImpl();
};
// -------------------------------------------------------------------

class Stp_RapidPvst : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.RapidPvst) */ {
 public:
  Stp_RapidPvst();
  virtual ~Stp_RapidPvst();

  Stp_RapidPvst(const Stp_RapidPvst& from);

  inline Stp_RapidPvst& operator=(const Stp_RapidPvst& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_RapidPvst(Stp_RapidPvst&& from) noexcept
    : Stp_RapidPvst() {
    *this = ::std::move(from);
  }

  inline Stp_RapidPvst& operator=(Stp_RapidPvst&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_RapidPvst& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_RapidPvst* internal_default_instance() {
    return reinterpret_cast<const Stp_RapidPvst*>(
               &_Stp_RapidPvst_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(Stp_RapidPvst* other);
  friend void swap(Stp_RapidPvst& a, Stp_RapidPvst& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_RapidPvst* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_RapidPvst* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_RapidPvst& from);
  void MergeFrom(const Stp_RapidPvst& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_RapidPvst* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Stp_RapidPvst_Vlan Vlan;
  typedef Stp_RapidPvst_VlanKey VlanKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey vlan = 498125485 [(.yext.schemapath) = "/stp/rapid-pvst/vlan"];
  int vlan_size() const;
  void clear_vlan();
  static const int kVlanFieldNumber = 498125485;
  const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_VlanKey& vlan(int index) const;
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_VlanKey* mutable_vlan(int index);
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_VlanKey* add_vlan();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_VlanKey >*
      mutable_vlan();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_VlanKey >&
      vlan() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.RapidPvst)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_VlanKey > vlan_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RapidPvstImpl();
};
// -------------------------------------------------------------------

class Stp_Rstp_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Rstp.Config) */ {
 public:
  Stp_Rstp_Config();
  virtual ~Stp_Rstp_Config();

  Stp_Rstp_Config(const Stp_Rstp_Config& from);

  inline Stp_Rstp_Config& operator=(const Stp_Rstp_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Rstp_Config(Stp_Rstp_Config&& from) noexcept
    : Stp_Rstp_Config() {
    *this = ::std::move(from);
  }

  inline Stp_Rstp_Config& operator=(Stp_Rstp_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Rstp_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Rstp_Config* internal_default_instance() {
    return reinterpret_cast<const Stp_Rstp_Config*>(
               &_Stp_Rstp_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(Stp_Rstp_Config* other);
  friend void swap(Stp_Rstp_Config& a, Stp_Rstp_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Rstp_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Rstp_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Rstp_Config& from);
  void MergeFrom(const Stp_Rstp_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Rstp_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue max_age = 60314870 [(.yext.schemapath) = "/stp/rstp/config/max-age"];
  bool has_max_age() const;
  void clear_max_age();
  static const int kMaxAgeFieldNumber = 60314870;
  const ::ywrapper::UintValue& max_age() const;
  ::ywrapper::UintValue* release_max_age();
  ::ywrapper::UintValue* mutable_max_age();
  void set_allocated_max_age(::ywrapper::UintValue* max_age);

  // .ywrapper.UintValue hello_time = 88797588 [(.yext.schemapath) = "/stp/rstp/config/hello-time"];
  bool has_hello_time() const;
  void clear_hello_time();
  static const int kHelloTimeFieldNumber = 88797588;
  const ::ywrapper::UintValue& hello_time() const;
  ::ywrapper::UintValue* release_hello_time();
  ::ywrapper::UintValue* mutable_hello_time();
  void set_allocated_hello_time(::ywrapper::UintValue* hello_time);

  // .ywrapper.UintValue bridge_priority = 196251874 [(.yext.schemapath) = "/stp/rstp/config/bridge-priority"];
  bool has_bridge_priority() const;
  void clear_bridge_priority();
  static const int kBridgePriorityFieldNumber = 196251874;
  const ::ywrapper::UintValue& bridge_priority() const;
  ::ywrapper::UintValue* release_bridge_priority();
  ::ywrapper::UintValue* mutable_bridge_priority();
  void set_allocated_bridge_priority(::ywrapper::UintValue* bridge_priority);

  // .ywrapper.UintValue hold_count = 405807659 [(.yext.schemapath) = "/stp/rstp/config/hold-count"];
  bool has_hold_count() const;
  void clear_hold_count();
  static const int kHoldCountFieldNumber = 405807659;
  const ::ywrapper::UintValue& hold_count() const;
  ::ywrapper::UintValue* release_hold_count();
  ::ywrapper::UintValue* mutable_hold_count();
  void set_allocated_hold_count(::ywrapper::UintValue* hold_count);

  // .ywrapper.UintValue forwarding_delay = 470783249 [(.yext.schemapath) = "/stp/rstp/config/forwarding-delay"];
  bool has_forwarding_delay() const;
  void clear_forwarding_delay();
  static const int kForwardingDelayFieldNumber = 470783249;
  const ::ywrapper::UintValue& forwarding_delay() const;
  ::ywrapper::UintValue* release_forwarding_delay();
  ::ywrapper::UintValue* mutable_forwarding_delay();
  void set_allocated_forwarding_delay(::ywrapper::UintValue* forwarding_delay);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Rstp.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* max_age_;
  ::ywrapper::UintValue* hello_time_;
  ::ywrapper::UintValue* bridge_priority_;
  ::ywrapper::UintValue* hold_count_;
  ::ywrapper::UintValue* forwarding_delay_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_ConfigImpl();
};
// -------------------------------------------------------------------

class Stp_Rstp_Interfaces_Interface_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config) */ {
 public:
  Stp_Rstp_Interfaces_Interface_Config();
  virtual ~Stp_Rstp_Interfaces_Interface_Config();

  Stp_Rstp_Interfaces_Interface_Config(const Stp_Rstp_Interfaces_Interface_Config& from);

  inline Stp_Rstp_Interfaces_Interface_Config& operator=(const Stp_Rstp_Interfaces_Interface_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Rstp_Interfaces_Interface_Config(Stp_Rstp_Interfaces_Interface_Config&& from) noexcept
    : Stp_Rstp_Interfaces_Interface_Config() {
    *this = ::std::move(from);
  }

  inline Stp_Rstp_Interfaces_Interface_Config& operator=(Stp_Rstp_Interfaces_Interface_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Rstp_Interfaces_Interface_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Rstp_Interfaces_Interface_Config* internal_default_instance() {
    return reinterpret_cast<const Stp_Rstp_Interfaces_Interface_Config*>(
               &_Stp_Rstp_Interfaces_Interface_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(Stp_Rstp_Interfaces_Interface_Config* other);
  friend void swap(Stp_Rstp_Interfaces_Interface_Config& a, Stp_Rstp_Interfaces_Interface_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Rstp_Interfaces_Interface_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Rstp_Interfaces_Interface_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Rstp_Interfaces_Interface_Config& from);
  void MergeFrom(const Stp_Rstp_Interfaces_Interface_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Rstp_Interfaces_Interface_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue cost = 25438518 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/config/cost"];
  bool has_cost() const;
  void clear_cost();
  static const int kCostFieldNumber = 25438518;
  const ::ywrapper::UintValue& cost() const;
  ::ywrapper::UintValue* release_cost();
  ::ywrapper::UintValue* mutable_cost();
  void set_allocated_cost(::ywrapper::UintValue* cost);

  // .ywrapper.StringValue name = 302799488 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/config/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 302799488;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .ywrapper.UintValue port_priority = 410079105 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/config/port-priority"];
  bool has_port_priority() const;
  void clear_port_priority();
  static const int kPortPriorityFieldNumber = 410079105;
  const ::ywrapper::UintValue& port_priority() const;
  ::ywrapper::UintValue* release_port_priority();
  ::ywrapper::UintValue* mutable_port_priority();
  void set_allocated_port_priority(::ywrapper::UintValue* port_priority);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* cost_;
  ::ywrapper::StringValue* name_;
  ::ywrapper::UintValue* port_priority_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_Interfaces_Interface_ConfigImpl();
};
// -------------------------------------------------------------------

class Stp_Rstp_Interfaces_Interface_State_Counters : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters) */ {
 public:
  Stp_Rstp_Interfaces_Interface_State_Counters();
  virtual ~Stp_Rstp_Interfaces_Interface_State_Counters();

  Stp_Rstp_Interfaces_Interface_State_Counters(const Stp_Rstp_Interfaces_Interface_State_Counters& from);

  inline Stp_Rstp_Interfaces_Interface_State_Counters& operator=(const Stp_Rstp_Interfaces_Interface_State_Counters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Rstp_Interfaces_Interface_State_Counters(Stp_Rstp_Interfaces_Interface_State_Counters&& from) noexcept
    : Stp_Rstp_Interfaces_Interface_State_Counters() {
    *this = ::std::move(from);
  }

  inline Stp_Rstp_Interfaces_Interface_State_Counters& operator=(Stp_Rstp_Interfaces_Interface_State_Counters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Rstp_Interfaces_Interface_State_Counters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Rstp_Interfaces_Interface_State_Counters* internal_default_instance() {
    return reinterpret_cast<const Stp_Rstp_Interfaces_Interface_State_Counters*>(
               &_Stp_Rstp_Interfaces_Interface_State_Counters_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(Stp_Rstp_Interfaces_Interface_State_Counters* other);
  friend void swap(Stp_Rstp_Interfaces_Interface_State_Counters& a, Stp_Rstp_Interfaces_Interface_State_Counters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Rstp_Interfaces_Interface_State_Counters* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Rstp_Interfaces_Interface_State_Counters* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Rstp_Interfaces_Interface_State_Counters& from);
  void MergeFrom(const Stp_Rstp_Interfaces_Interface_State_Counters& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Rstp_Interfaces_Interface_State_Counters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue bpdu_received = 339806433 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/counters/bpdu-received"];
  bool has_bpdu_received() const;
  void clear_bpdu_received();
  static const int kBpduReceivedFieldNumber = 339806433;
  const ::ywrapper::UintValue& bpdu_received() const;
  ::ywrapper::UintValue* release_bpdu_received();
  ::ywrapper::UintValue* mutable_bpdu_received();
  void set_allocated_bpdu_received(::ywrapper::UintValue* bpdu_received);

  // .ywrapper.UintValue bpdu_sent = 418372722 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/counters/bpdu-sent"];
  bool has_bpdu_sent() const;
  void clear_bpdu_sent();
  static const int kBpduSentFieldNumber = 418372722;
  const ::ywrapper::UintValue& bpdu_sent() const;
  ::ywrapper::UintValue* release_bpdu_sent();
  ::ywrapper::UintValue* mutable_bpdu_sent();
  void set_allocated_bpdu_sent(::ywrapper::UintValue* bpdu_sent);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* bpdu_received_;
  ::ywrapper::UintValue* bpdu_sent_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_Interfaces_Interface_State_CountersImpl();
};
// -------------------------------------------------------------------

class Stp_Rstp_Interfaces_Interface_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State) */ {
 public:
  Stp_Rstp_Interfaces_Interface_State();
  virtual ~Stp_Rstp_Interfaces_Interface_State();

  Stp_Rstp_Interfaces_Interface_State(const Stp_Rstp_Interfaces_Interface_State& from);

  inline Stp_Rstp_Interfaces_Interface_State& operator=(const Stp_Rstp_Interfaces_Interface_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Rstp_Interfaces_Interface_State(Stp_Rstp_Interfaces_Interface_State&& from) noexcept
    : Stp_Rstp_Interfaces_Interface_State() {
    *this = ::std::move(from);
  }

  inline Stp_Rstp_Interfaces_Interface_State& operator=(Stp_Rstp_Interfaces_Interface_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Rstp_Interfaces_Interface_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Rstp_Interfaces_Interface_State* internal_default_instance() {
    return reinterpret_cast<const Stp_Rstp_Interfaces_Interface_State*>(
               &_Stp_Rstp_Interfaces_Interface_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(Stp_Rstp_Interfaces_Interface_State* other);
  friend void swap(Stp_Rstp_Interfaces_Interface_State& a, Stp_Rstp_Interfaces_Interface_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Rstp_Interfaces_Interface_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Rstp_Interfaces_Interface_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Rstp_Interfaces_Interface_State& from);
  void MergeFrom(const Stp_Rstp_Interfaces_Interface_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Rstp_Interfaces_Interface_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Stp_Rstp_Interfaces_Interface_State_Counters Counters;

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue designated_bridge_address = 29300777 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-bridge-address"];
  bool has_designated_bridge_address() const;
  void clear_designated_bridge_address();
  static const int kDesignatedBridgeAddressFieldNumber = 29300777;
  const ::ywrapper::StringValue& designated_bridge_address() const;
  ::ywrapper::StringValue* release_designated_bridge_address();
  ::ywrapper::StringValue* mutable_designated_bridge_address();
  void set_allocated_designated_bridge_address(::ywrapper::StringValue* designated_bridge_address);

  // .ywrapper.StringValue designated_root_address = 38863474 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-root-address"];
  bool has_designated_root_address() const;
  void clear_designated_root_address();
  static const int kDesignatedRootAddressFieldNumber = 38863474;
  const ::ywrapper::StringValue& designated_root_address() const;
  ::ywrapper::StringValue* release_designated_root_address();
  ::ywrapper::StringValue* mutable_designated_root_address();
  void set_allocated_designated_root_address(::ywrapper::StringValue* designated_root_address);

  // .ywrapper.UintValue port_priority = 118646276 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/port-priority"];
  bool has_port_priority() const;
  void clear_port_priority();
  static const int kPortPriorityFieldNumber = 118646276;
  const ::ywrapper::UintValue& port_priority() const;
  ::ywrapper::UintValue* release_port_priority();
  ::ywrapper::UintValue* mutable_port_priority();
  void set_allocated_port_priority(::ywrapper::UintValue* port_priority);

  // .ywrapper.UintValue port_num = 226492252 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/port-num"];
  bool has_port_num() const;
  void clear_port_num();
  static const int kPortNumFieldNumber = 226492252;
  const ::ywrapper::UintValue& port_num() const;
  ::ywrapper::UintValue* release_port_num();
  ::ywrapper::UintValue* mutable_port_num();
  void set_allocated_port_num(::ywrapper::UintValue* port_num);

  // .ywrapper.UintValue forward_transisitions = 239692746 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/forward-transisitions"];
  bool has_forward_transisitions() const;
  void clear_forward_transisitions();
  static const int kForwardTransisitionsFieldNumber = 239692746;
  const ::ywrapper::UintValue& forward_transisitions() const;
  ::ywrapper::UintValue* release_forward_transisitions();
  ::ywrapper::UintValue* mutable_forward_transisitions();
  void set_allocated_forward_transisitions(::ywrapper::UintValue* forward_transisitions);

  // .ywrapper.UintValue designated_cost = 246446598 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-cost"];
  bool has_designated_cost() const;
  void clear_designated_cost();
  static const int kDesignatedCostFieldNumber = 246446598;
  const ::ywrapper::UintValue& designated_cost() const;
  ::ywrapper::UintValue* release_designated_cost();
  ::ywrapper::UintValue* mutable_designated_cost();
  void set_allocated_designated_cost(::ywrapper::UintValue* designated_cost);

  // .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters counters = 318690949 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/counters"];
  bool has_counters() const;
  void clear_counters();
  static const int kCountersFieldNumber = 318690949;
  const ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State_Counters& counters() const;
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State_Counters* release_counters();
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State_Counters* mutable_counters();
  void set_allocated_counters(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State_Counters* counters);

  // .ywrapper.UintValue designated_bridge_priority = 321366475 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-bridge-priority"];
  bool has_designated_bridge_priority() const;
  void clear_designated_bridge_priority();
  static const int kDesignatedBridgePriorityFieldNumber = 321366475;
  const ::ywrapper::UintValue& designated_bridge_priority() const;
  ::ywrapper::UintValue* release_designated_bridge_priority();
  ::ywrapper::UintValue* mutable_designated_bridge_priority();
  void set_allocated_designated_bridge_priority(::ywrapper::UintValue* designated_bridge_priority);

  // .ywrapper.UintValue designated_port_num = 328815587 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-port-num"];
  bool has_designated_port_num() const;
  void clear_designated_port_num();
  static const int kDesignatedPortNumFieldNumber = 328815587;
  const ::ywrapper::UintValue& designated_port_num() const;
  ::ywrapper::UintValue* release_designated_port_num();
  ::ywrapper::UintValue* mutable_designated_port_num();
  void set_allocated_designated_port_num(::ywrapper::UintValue* designated_port_num);

  // .ywrapper.UintValue designated_root_priority = 341500118 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-root-priority"];
  bool has_designated_root_priority() const;
  void clear_designated_root_priority();
  static const int kDesignatedRootPriorityFieldNumber = 341500118;
  const ::ywrapper::UintValue& designated_root_priority() const;
  ::ywrapper::UintValue* release_designated_root_priority();
  ::ywrapper::UintValue* mutable_designated_root_priority();
  void set_allocated_designated_root_priority(::ywrapper::UintValue* designated_root_priority);

  // .ywrapper.UintValue cost = 347107837 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/cost"];
  bool has_cost() const;
  void clear_cost();
  static const int kCostFieldNumber = 347107837;
  const ::ywrapper::UintValue& cost() const;
  ::ywrapper::UintValue* release_cost();
  ::ywrapper::UintValue* mutable_cost();
  void set_allocated_cost(::ywrapper::UintValue* cost);

  // .ywrapper.StringValue name = 449319447 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 449319447;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .ywrapper.UintValue designated_port_priority = 514948785 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-port-priority"];
  bool has_designated_port_priority() const;
  void clear_designated_port_priority();
  static const int kDesignatedPortPriorityFieldNumber = 514948785;
  const ::ywrapper::UintValue& designated_port_priority() const;
  ::ywrapper::UintValue* release_designated_port_priority();
  ::ywrapper::UintValue* mutable_designated_port_priority();
  void set_allocated_designated_port_priority(::ywrapper::UintValue* designated_port_priority);

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTSTATE port_state = 99013219 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/port-state"];
  void clear_port_state();
  static const int kPortStateFieldNumber = 99013219;
  ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTSTATE port_state() const;
  void set_port_state(::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTSTATE value);

  // .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTROLE role = 363416170 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/role"];
  void clear_role();
  static const int kRoleFieldNumber = 363416170;
  ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTROLE role() const;
  void set_role(::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTROLE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* designated_bridge_address_;
  ::ywrapper::StringValue* designated_root_address_;
  ::ywrapper::UintValue* port_priority_;
  ::ywrapper::UintValue* port_num_;
  ::ywrapper::UintValue* forward_transisitions_;
  ::ywrapper::UintValue* designated_cost_;
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State_Counters* counters_;
  ::ywrapper::UintValue* designated_bridge_priority_;
  ::ywrapper::UintValue* designated_port_num_;
  ::ywrapper::UintValue* designated_root_priority_;
  ::ywrapper::UintValue* cost_;
  ::ywrapper::StringValue* name_;
  ::ywrapper::UintValue* designated_port_priority_;
  int port_state_;
  int role_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_Interfaces_Interface_StateImpl();
};
// -------------------------------------------------------------------

class Stp_Rstp_Interfaces_Interface : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface) */ {
 public:
  Stp_Rstp_Interfaces_Interface();
  virtual ~Stp_Rstp_Interfaces_Interface();

  Stp_Rstp_Interfaces_Interface(const Stp_Rstp_Interfaces_Interface& from);

  inline Stp_Rstp_Interfaces_Interface& operator=(const Stp_Rstp_Interfaces_Interface& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Rstp_Interfaces_Interface(Stp_Rstp_Interfaces_Interface&& from) noexcept
    : Stp_Rstp_Interfaces_Interface() {
    *this = ::std::move(from);
  }

  inline Stp_Rstp_Interfaces_Interface& operator=(Stp_Rstp_Interfaces_Interface&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Rstp_Interfaces_Interface& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Rstp_Interfaces_Interface* internal_default_instance() {
    return reinterpret_cast<const Stp_Rstp_Interfaces_Interface*>(
               &_Stp_Rstp_Interfaces_Interface_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(Stp_Rstp_Interfaces_Interface* other);
  friend void swap(Stp_Rstp_Interfaces_Interface& a, Stp_Rstp_Interfaces_Interface& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Rstp_Interfaces_Interface* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Rstp_Interfaces_Interface* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Rstp_Interfaces_Interface& from);
  void MergeFrom(const Stp_Rstp_Interfaces_Interface& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Rstp_Interfaces_Interface* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Stp_Rstp_Interfaces_Interface_Config Config;
  typedef Stp_Rstp_Interfaces_Interface_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config config = 420941170 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 420941170;
  const ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_Config& config() const;
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_Config* release_config();
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_Config* config);

  // .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State state = 463506799 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 463506799;
  const ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State& state() const;
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State* release_state();
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_Config* config_;
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_Interfaces_InterfaceImpl();
};
// -------------------------------------------------------------------

class Stp_Rstp_Interfaces_InterfaceKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey) */ {
 public:
  Stp_Rstp_Interfaces_InterfaceKey();
  virtual ~Stp_Rstp_Interfaces_InterfaceKey();

  Stp_Rstp_Interfaces_InterfaceKey(const Stp_Rstp_Interfaces_InterfaceKey& from);

  inline Stp_Rstp_Interfaces_InterfaceKey& operator=(const Stp_Rstp_Interfaces_InterfaceKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Rstp_Interfaces_InterfaceKey(Stp_Rstp_Interfaces_InterfaceKey&& from) noexcept
    : Stp_Rstp_Interfaces_InterfaceKey() {
    *this = ::std::move(from);
  }

  inline Stp_Rstp_Interfaces_InterfaceKey& operator=(Stp_Rstp_Interfaces_InterfaceKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Rstp_Interfaces_InterfaceKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Rstp_Interfaces_InterfaceKey* internal_default_instance() {
    return reinterpret_cast<const Stp_Rstp_Interfaces_InterfaceKey*>(
               &_Stp_Rstp_Interfaces_InterfaceKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(Stp_Rstp_Interfaces_InterfaceKey* other);
  friend void swap(Stp_Rstp_Interfaces_InterfaceKey& a, Stp_Rstp_Interfaces_InterfaceKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Rstp_Interfaces_InterfaceKey* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Rstp_Interfaces_InterfaceKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Rstp_Interfaces_InterfaceKey& from);
  void MergeFrom(const Stp_Rstp_Interfaces_InterfaceKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Rstp_Interfaces_InterfaceKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/name"];
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface interface = 2;
  bool has_interface() const;
  void clear_interface();
  static const int kInterfaceFieldNumber = 2;
  const ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface& interface() const;
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface* release_interface();
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface* mutable_interface();
  void set_allocated_interface(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface* interface);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface* interface_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_Interfaces_InterfaceKeyImpl();
};
// -------------------------------------------------------------------

class Stp_Rstp_Interfaces : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces) */ {
 public:
  Stp_Rstp_Interfaces();
  virtual ~Stp_Rstp_Interfaces();

  Stp_Rstp_Interfaces(const Stp_Rstp_Interfaces& from);

  inline Stp_Rstp_Interfaces& operator=(const Stp_Rstp_Interfaces& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Rstp_Interfaces(Stp_Rstp_Interfaces&& from) noexcept
    : Stp_Rstp_Interfaces() {
    *this = ::std::move(from);
  }

  inline Stp_Rstp_Interfaces& operator=(Stp_Rstp_Interfaces&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Rstp_Interfaces& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Rstp_Interfaces* internal_default_instance() {
    return reinterpret_cast<const Stp_Rstp_Interfaces*>(
               &_Stp_Rstp_Interfaces_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(Stp_Rstp_Interfaces* other);
  friend void swap(Stp_Rstp_Interfaces& a, Stp_Rstp_Interfaces& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Rstp_Interfaces* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Rstp_Interfaces* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Rstp_Interfaces& from);
  void MergeFrom(const Stp_Rstp_Interfaces& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Rstp_Interfaces* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Stp_Rstp_Interfaces_Interface Interface;
  typedef Stp_Rstp_Interfaces_InterfaceKey InterfaceKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey interface = 355189053 [(.yext.schemapath) = "/stp/rstp/interfaces/interface"];
  int interface_size() const;
  void clear_interface();
  static const int kInterfaceFieldNumber = 355189053;
  const ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_InterfaceKey& interface(int index) const;
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_InterfaceKey* mutable_interface(int index);
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_InterfaceKey* add_interface();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_InterfaceKey >*
      mutable_interface();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_InterfaceKey >&
      interface() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_InterfaceKey > interface_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_InterfacesImpl();
};
// -------------------------------------------------------------------

class Stp_Rstp_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Rstp.State) */ {
 public:
  Stp_Rstp_State();
  virtual ~Stp_Rstp_State();

  Stp_Rstp_State(const Stp_Rstp_State& from);

  inline Stp_Rstp_State& operator=(const Stp_Rstp_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Rstp_State(Stp_Rstp_State&& from) noexcept
    : Stp_Rstp_State() {
    *this = ::std::move(from);
  }

  inline Stp_Rstp_State& operator=(Stp_Rstp_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Rstp_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Rstp_State* internal_default_instance() {
    return reinterpret_cast<const Stp_Rstp_State*>(
               &_Stp_Rstp_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(Stp_Rstp_State* other);
  friend void swap(Stp_Rstp_State& a, Stp_Rstp_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Rstp_State* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Rstp_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Rstp_State& from);
  void MergeFrom(const Stp_Rstp_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Rstp_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue hold_count = 17772518 [(.yext.schemapath) = "/stp/rstp/state/hold-count"];
  bool has_hold_count() const;
  void clear_hold_count();
  static const int kHoldCountFieldNumber = 17772518;
  const ::ywrapper::UintValue& hold_count() const;
  ::ywrapper::UintValue* release_hold_count();
  ::ywrapper::UintValue* mutable_hold_count();
  void set_allocated_hold_count(::ywrapper::UintValue* hold_count);

  // .ywrapper.StringValue designated_root_address = 45031113 [(.yext.schemapath) = "/stp/rstp/state/designated-root-address"];
  bool has_designated_root_address() const;
  void clear_designated_root_address();
  static const int kDesignatedRootAddressFieldNumber = 45031113;
  const ::ywrapper::StringValue& designated_root_address() const;
  ::ywrapper::StringValue* release_designated_root_address();
  ::ywrapper::StringValue* mutable_designated_root_address();
  void set_allocated_designated_root_address(::ywrapper::StringValue* designated_root_address);

  // .ywrapper.UintValue bridge_priority = 63741073 [(.yext.schemapath) = "/stp/rstp/state/bridge-priority"];
  bool has_bridge_priority() const;
  void clear_bridge_priority();
  static const int kBridgePriorityFieldNumber = 63741073;
  const ::ywrapper::UintValue& bridge_priority() const;
  ::ywrapper::UintValue* release_bridge_priority();
  ::ywrapper::UintValue* mutable_bridge_priority();
  void set_allocated_bridge_priority(::ywrapper::UintValue* bridge_priority);

  // .ywrapper.UintValue max_age = 80445073 [(.yext.schemapath) = "/stp/rstp/state/max-age"];
  bool has_max_age() const;
  void clear_max_age();
  static const int kMaxAgeFieldNumber = 80445073;
  const ::ywrapper::UintValue& max_age() const;
  ::ywrapper::UintValue* release_max_age();
  ::ywrapper::UintValue* mutable_max_age();
  void set_allocated_max_age(::ywrapper::UintValue* max_age);

  // .ywrapper.StringValue bridge_address = 213481315 [(.yext.schemapath) = "/stp/rstp/state/bridge-address"];
  bool has_bridge_address() const;
  void clear_bridge_address();
  static const int kBridgeAddressFieldNumber = 213481315;
  const ::ywrapper::StringValue& bridge_address() const;
  ::ywrapper::StringValue* release_bridge_address();
  ::ywrapper::StringValue* mutable_bridge_address();
  void set_allocated_bridge_address(::ywrapper::StringValue* bridge_address);

  // .ywrapper.UintValue time_since_topology_change = 236457242 [(.yext.schemapath) = "/stp/rstp/state/time-since-topology-change"];
  bool has_time_since_topology_change() const;
  void clear_time_since_topology_change();
  static const int kTimeSinceTopologyChangeFieldNumber = 236457242;
  const ::ywrapper::UintValue& time_since_topology_change() const;
  ::ywrapper::UintValue* release_time_since_topology_change();
  ::ywrapper::UintValue* mutable_time_since_topology_change();
  void set_allocated_time_since_topology_change(::ywrapper::UintValue* time_since_topology_change);

  // .ywrapper.UintValue topology_changes = 266385392 [(.yext.schemapath) = "/stp/rstp/state/topology-changes"];
  bool has_topology_changes() const;
  void clear_topology_changes();
  static const int kTopologyChangesFieldNumber = 266385392;
  const ::ywrapper::UintValue& topology_changes() const;
  ::ywrapper::UintValue* release_topology_changes();
  ::ywrapper::UintValue* mutable_topology_changes();
  void set_allocated_topology_changes(::ywrapper::UintValue* topology_changes);

  // .ywrapper.UintValue designated_root_priority = 269547755 [(.yext.schemapath) = "/stp/rstp/state/designated-root-priority"];
  bool has_designated_root_priority() const;
  void clear_designated_root_priority();
  static const int kDesignatedRootPriorityFieldNumber = 269547755;
  const ::ywrapper::UintValue& designated_root_priority() const;
  ::ywrapper::UintValue* release_designated_root_priority();
  ::ywrapper::UintValue* mutable_designated_root_priority();
  void set_allocated_designated_root_priority(::ywrapper::UintValue* designated_root_priority);

  // .ywrapper.UintValue forwarding_delay = 386063712 [(.yext.schemapath) = "/stp/rstp/state/forwarding-delay"];
  bool has_forwarding_delay() const;
  void clear_forwarding_delay();
  static const int kForwardingDelayFieldNumber = 386063712;
  const ::ywrapper::UintValue& forwarding_delay() const;
  ::ywrapper::UintValue* release_forwarding_delay();
  ::ywrapper::UintValue* mutable_forwarding_delay();
  void set_allocated_forwarding_delay(::ywrapper::UintValue* forwarding_delay);

  // .ywrapper.UintValue hold_time = 406520974 [(.yext.schemapath) = "/stp/rstp/state/hold-time"];
  bool has_hold_time() const;
  void clear_hold_time();
  static const int kHoldTimeFieldNumber = 406520974;
  const ::ywrapper::UintValue& hold_time() const;
  ::ywrapper::UintValue* release_hold_time();
  ::ywrapper::UintValue* mutable_hold_time();
  void set_allocated_hold_time(::ywrapper::UintValue* hold_time);

  // .ywrapper.UintValue hello_time = 491083589 [(.yext.schemapath) = "/stp/rstp/state/hello-time"];
  bool has_hello_time() const;
  void clear_hello_time();
  static const int kHelloTimeFieldNumber = 491083589;
  const ::ywrapper::UintValue& hello_time() const;
  ::ywrapper::UintValue* release_hello_time();
  ::ywrapper::UintValue* mutable_hello_time();
  void set_allocated_hello_time(::ywrapper::UintValue* hello_time);

  // .ywrapper.UintValue root_cost = 495356843 [(.yext.schemapath) = "/stp/rstp/state/root-cost"];
  bool has_root_cost() const;
  void clear_root_cost();
  static const int kRootCostFieldNumber = 495356843;
  const ::ywrapper::UintValue& root_cost() const;
  ::ywrapper::UintValue* release_root_cost();
  ::ywrapper::UintValue* mutable_root_cost();
  void set_allocated_root_cost(::ywrapper::UintValue* root_cost);

  // .ywrapper.UintValue root_port = 510345949 [(.yext.schemapath) = "/stp/rstp/state/root-port"];
  bool has_root_port() const;
  void clear_root_port();
  static const int kRootPortFieldNumber = 510345949;
  const ::ywrapper::UintValue& root_port() const;
  ::ywrapper::UintValue* release_root_port();
  ::ywrapper::UintValue* mutable_root_port();
  void set_allocated_root_port(::ywrapper::UintValue* root_port);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Rstp.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* hold_count_;
  ::ywrapper::StringValue* designated_root_address_;
  ::ywrapper::UintValue* bridge_priority_;
  ::ywrapper::UintValue* max_age_;
  ::ywrapper::StringValue* bridge_address_;
  ::ywrapper::UintValue* time_since_topology_change_;
  ::ywrapper::UintValue* topology_changes_;
  ::ywrapper::UintValue* designated_root_priority_;
  ::ywrapper::UintValue* forwarding_delay_;
  ::ywrapper::UintValue* hold_time_;
  ::ywrapper::UintValue* hello_time_;
  ::ywrapper::UintValue* root_cost_;
  ::ywrapper::UintValue* root_port_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_Rstp_StateImpl();
};
// -------------------------------------------------------------------

class Stp_Rstp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp.Rstp) */ {
 public:
  Stp_Rstp();
  virtual ~Stp_Rstp();

  Stp_Rstp(const Stp_Rstp& from);

  inline Stp_Rstp& operator=(const Stp_Rstp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp_Rstp(Stp_Rstp&& from) noexcept
    : Stp_Rstp() {
    *this = ::std::move(from);
  }

  inline Stp_Rstp& operator=(Stp_Rstp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp_Rstp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp_Rstp* internal_default_instance() {
    return reinterpret_cast<const Stp_Rstp*>(
               &_Stp_Rstp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(Stp_Rstp* other);
  friend void swap(Stp_Rstp& a, Stp_Rstp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp_Rstp* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp_Rstp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp_Rstp& from);
  void MergeFrom(const Stp_Rstp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp_Rstp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Stp_Rstp_Config Config;
  typedef Stp_Rstp_Interfaces Interfaces;
  typedef Stp_Rstp_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces interfaces = 234621345 [(.yext.schemapath) = "/stp/rstp/interfaces"];
  bool has_interfaces() const;
  void clear_interfaces();
  static const int kInterfacesFieldNumber = 234621345;
  const ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces& interfaces() const;
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces* release_interfaces();
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces* mutable_interfaces();
  void set_allocated_interfaces(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces* interfaces);

  // .openconfig.openconfig_spanning_tree.Stp.Rstp.State state = 289330300 [(.yext.schemapath) = "/stp/rstp/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 289330300;
  const ::openconfig::openconfig_spanning_tree::Stp_Rstp_State& state() const;
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_State* release_state();
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_spanning_tree::Stp_Rstp_State* state);

  // .openconfig.openconfig_spanning_tree.Stp.Rstp.Config config = 423209211 [(.yext.schemapath) = "/stp/rstp/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 423209211;
  const ::openconfig::openconfig_spanning_tree::Stp_Rstp_Config& config() const;
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Config* release_config();
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_spanning_tree::Stp_Rstp_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp.Rstp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces* interfaces_;
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_State* state_;
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStp_RstpImpl();
};
// -------------------------------------------------------------------

class Stp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_spanning_tree.Stp) */ {
 public:
  Stp();
  virtual ~Stp();

  Stp(const Stp& from);

  inline Stp& operator=(const Stp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Stp(Stp&& from) noexcept
    : Stp() {
    *this = ::std::move(from);
  }

  inline Stp& operator=(Stp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Stp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Stp* internal_default_instance() {
    return reinterpret_cast<const Stp*>(
               &_Stp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(Stp* other);
  friend void swap(Stp& a, Stp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Stp* New() const PROTOBUF_FINAL { return New(NULL); }

  Stp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Stp& from);
  void MergeFrom(const Stp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Stp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef Stp_Global Global;
  typedef Stp_Interfaces Interfaces;
  typedef Stp_Mstp Mstp;
  typedef Stp_RapidPvst RapidPvst;
  typedef Stp_Rstp Rstp;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_spanning_tree.Stp.Rstp rstp = 91792426 [(.yext.schemapath) = "/stp/rstp"];
  bool has_rstp() const;
  void clear_rstp();
  static const int kRstpFieldNumber = 91792426;
  const ::openconfig::openconfig_spanning_tree::Stp_Rstp& rstp() const;
  ::openconfig::openconfig_spanning_tree::Stp_Rstp* release_rstp();
  ::openconfig::openconfig_spanning_tree::Stp_Rstp* mutable_rstp();
  void set_allocated_rstp(::openconfig::openconfig_spanning_tree::Stp_Rstp* rstp);

  // .openconfig.openconfig_spanning_tree.Stp.RapidPvst rapid_pvst = 113534595 [(.yext.schemapath) = "/stp/rapid-pvst"];
  bool has_rapid_pvst() const;
  void clear_rapid_pvst();
  static const int kRapidPvstFieldNumber = 113534595;
  const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst& rapid_pvst() const;
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst* release_rapid_pvst();
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst* mutable_rapid_pvst();
  void set_allocated_rapid_pvst(::openconfig::openconfig_spanning_tree::Stp_RapidPvst* rapid_pvst);

  // .openconfig.openconfig_spanning_tree.Stp.Global global = 195120946 [(.yext.schemapath) = "/stp/global"];
  bool has_global() const;
  void clear_global();
  static const int kGlobalFieldNumber = 195120946;
  const ::openconfig::openconfig_spanning_tree::Stp_Global& global() const;
  ::openconfig::openconfig_spanning_tree::Stp_Global* release_global();
  ::openconfig::openconfig_spanning_tree::Stp_Global* mutable_global();
  void set_allocated_global(::openconfig::openconfig_spanning_tree::Stp_Global* global);

  // .openconfig.openconfig_spanning_tree.Stp.Mstp mstp = 306126631 [(.yext.schemapath) = "/stp/mstp"];
  bool has_mstp() const;
  void clear_mstp();
  static const int kMstpFieldNumber = 306126631;
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp& mstp() const;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp* release_mstp();
  ::openconfig::openconfig_spanning_tree::Stp_Mstp* mutable_mstp();
  void set_allocated_mstp(::openconfig::openconfig_spanning_tree::Stp_Mstp* mstp);

  // .openconfig.openconfig_spanning_tree.Stp.Interfaces interfaces = 384420651 [(.yext.schemapath) = "/stp/interfaces"];
  bool has_interfaces() const;
  void clear_interfaces();
  static const int kInterfacesFieldNumber = 384420651;
  const ::openconfig::openconfig_spanning_tree::Stp_Interfaces& interfaces() const;
  ::openconfig::openconfig_spanning_tree::Stp_Interfaces* release_interfaces();
  ::openconfig::openconfig_spanning_tree::Stp_Interfaces* mutable_interfaces();
  void set_allocated_interfaces(::openconfig::openconfig_spanning_tree::Stp_Interfaces* interfaces);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_spanning_tree.Stp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_spanning_tree::Stp_Rstp* rstp_;
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst* rapid_pvst_;
  ::openconfig::openconfig_spanning_tree::Stp_Global* global_;
  ::openconfig::openconfig_spanning_tree::Stp_Mstp* mstp_;
  ::openconfig::openconfig_spanning_tree::Stp_Interfaces* interfaces_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto::InitDefaultsStpImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Stp_Global_Config

// .ywrapper.BoolValue bpdu_filter = 418165716 [(.yext.schemapath) = "/stp/global/config/bpdu-filter"];
inline bool Stp_Global_Config::has_bpdu_filter() const {
  return this != internal_default_instance() && bpdu_filter_ != NULL;
}
inline const ::ywrapper::BoolValue& Stp_Global_Config::bpdu_filter() const {
  const ::ywrapper::BoolValue* p = bpdu_filter_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Global.Config.bpdu_filter)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Stp_Global_Config::release_bpdu_filter() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Global.Config.bpdu_filter)
  
  ::ywrapper::BoolValue* temp = bpdu_filter_;
  bpdu_filter_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Stp_Global_Config::mutable_bpdu_filter() {
  
  if (bpdu_filter_ == NULL) {
    bpdu_filter_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Global.Config.bpdu_filter)
  return bpdu_filter_;
}
inline void Stp_Global_Config::set_allocated_bpdu_filter(::ywrapper::BoolValue* bpdu_filter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bpdu_filter_);
  }
  if (bpdu_filter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bpdu_filter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bpdu_filter, submessage_arena);
    }
    
  } else {
    
  }
  bpdu_filter_ = bpdu_filter;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Global.Config.bpdu_filter)
}

// .ywrapper.BoolValue bpdu_guard = 444421033 [(.yext.schemapath) = "/stp/global/config/bpdu-guard"];
inline bool Stp_Global_Config::has_bpdu_guard() const {
  return this != internal_default_instance() && bpdu_guard_ != NULL;
}
inline const ::ywrapper::BoolValue& Stp_Global_Config::bpdu_guard() const {
  const ::ywrapper::BoolValue* p = bpdu_guard_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Global.Config.bpdu_guard)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Stp_Global_Config::release_bpdu_guard() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Global.Config.bpdu_guard)
  
  ::ywrapper::BoolValue* temp = bpdu_guard_;
  bpdu_guard_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Stp_Global_Config::mutable_bpdu_guard() {
  
  if (bpdu_guard_ == NULL) {
    bpdu_guard_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Global.Config.bpdu_guard)
  return bpdu_guard_;
}
inline void Stp_Global_Config::set_allocated_bpdu_guard(::ywrapper::BoolValue* bpdu_guard) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bpdu_guard_);
  }
  if (bpdu_guard) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bpdu_guard = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bpdu_guard, submessage_arena);
    }
    
  } else {
    
  }
  bpdu_guard_ = bpdu_guard;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Global.Config.bpdu_guard)
}

// .ywrapper.UintValue bpduguard_timeout_recovery = 111769674 [(.yext.schemapath) = "/stp/global/config/bpduguard-timeout-recovery"];
inline bool Stp_Global_Config::has_bpduguard_timeout_recovery() const {
  return this != internal_default_instance() && bpduguard_timeout_recovery_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Global_Config::bpduguard_timeout_recovery() const {
  const ::ywrapper::UintValue* p = bpduguard_timeout_recovery_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Global.Config.bpduguard_timeout_recovery)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Global_Config::release_bpduguard_timeout_recovery() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Global.Config.bpduguard_timeout_recovery)
  
  ::ywrapper::UintValue* temp = bpduguard_timeout_recovery_;
  bpduguard_timeout_recovery_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Global_Config::mutable_bpduguard_timeout_recovery() {
  
  if (bpduguard_timeout_recovery_ == NULL) {
    bpduguard_timeout_recovery_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Global.Config.bpduguard_timeout_recovery)
  return bpduguard_timeout_recovery_;
}
inline void Stp_Global_Config::set_allocated_bpduguard_timeout_recovery(::ywrapper::UintValue* bpduguard_timeout_recovery) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bpduguard_timeout_recovery_);
  }
  if (bpduguard_timeout_recovery) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bpduguard_timeout_recovery = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bpduguard_timeout_recovery, submessage_arena);
    }
    
  } else {
    
  }
  bpduguard_timeout_recovery_ = bpduguard_timeout_recovery;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Global.Config.bpduguard_timeout_recovery)
}

// .ywrapper.BoolValue bridge_assurance = 174560629 [(.yext.schemapath) = "/stp/global/config/bridge-assurance"];
inline bool Stp_Global_Config::has_bridge_assurance() const {
  return this != internal_default_instance() && bridge_assurance_ != NULL;
}
inline const ::ywrapper::BoolValue& Stp_Global_Config::bridge_assurance() const {
  const ::ywrapper::BoolValue* p = bridge_assurance_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Global.Config.bridge_assurance)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Stp_Global_Config::release_bridge_assurance() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Global.Config.bridge_assurance)
  
  ::ywrapper::BoolValue* temp = bridge_assurance_;
  bridge_assurance_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Stp_Global_Config::mutable_bridge_assurance() {
  
  if (bridge_assurance_ == NULL) {
    bridge_assurance_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Global.Config.bridge_assurance)
  return bridge_assurance_;
}
inline void Stp_Global_Config::set_allocated_bridge_assurance(::ywrapper::BoolValue* bridge_assurance) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bridge_assurance_);
  }
  if (bridge_assurance) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bridge_assurance = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bridge_assurance, submessage_arena);
    }
    
  } else {
    
  }
  bridge_assurance_ = bridge_assurance;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Global.Config.bridge_assurance)
}

// repeated .openconfig.enums.OpenconfigSpanningTreeTypesSTPPROTOCOL enabled_protocol = 519311802 [(.yext.schemapath) = "/stp/global/config/enabled-protocol"];
inline int Stp_Global_Config::enabled_protocol_size() const {
  return enabled_protocol_.size();
}
inline void Stp_Global_Config::clear_enabled_protocol() {
  enabled_protocol_.Clear();
}
inline ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPROTOCOL Stp_Global_Config::enabled_protocol(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Global.Config.enabled_protocol)
  return static_cast< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPROTOCOL >(enabled_protocol_.Get(index));
}
inline void Stp_Global_Config::set_enabled_protocol(int index, ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPROTOCOL value) {
  enabled_protocol_.Set(index, value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_spanning_tree.Stp.Global.Config.enabled_protocol)
}
inline void Stp_Global_Config::add_enabled_protocol(::openconfig::enums::OpenconfigSpanningTreeTypesSTPPROTOCOL value) {
  enabled_protocol_.Add(value);
  // @@protoc_insertion_point(field_add:openconfig.openconfig_spanning_tree.Stp.Global.Config.enabled_protocol)
}
inline const ::google::protobuf::RepeatedField<int>&
Stp_Global_Config::enabled_protocol() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_spanning_tree.Stp.Global.Config.enabled_protocol)
  return enabled_protocol_;
}
inline ::google::protobuf::RepeatedField<int>*
Stp_Global_Config::mutable_enabled_protocol() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_spanning_tree.Stp.Global.Config.enabled_protocol)
  return &enabled_protocol_;
}

// .ywrapper.BoolValue etherchannel_misconfig_guard = 442887371 [(.yext.schemapath) = "/stp/global/config/etherchannel-misconfig-guard"];
inline bool Stp_Global_Config::has_etherchannel_misconfig_guard() const {
  return this != internal_default_instance() && etherchannel_misconfig_guard_ != NULL;
}
inline const ::ywrapper::BoolValue& Stp_Global_Config::etherchannel_misconfig_guard() const {
  const ::ywrapper::BoolValue* p = etherchannel_misconfig_guard_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Global.Config.etherchannel_misconfig_guard)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Stp_Global_Config::release_etherchannel_misconfig_guard() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Global.Config.etherchannel_misconfig_guard)
  
  ::ywrapper::BoolValue* temp = etherchannel_misconfig_guard_;
  etherchannel_misconfig_guard_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Stp_Global_Config::mutable_etherchannel_misconfig_guard() {
  
  if (etherchannel_misconfig_guard_ == NULL) {
    etherchannel_misconfig_guard_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Global.Config.etherchannel_misconfig_guard)
  return etherchannel_misconfig_guard_;
}
inline void Stp_Global_Config::set_allocated_etherchannel_misconfig_guard(::ywrapper::BoolValue* etherchannel_misconfig_guard) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(etherchannel_misconfig_guard_);
  }
  if (etherchannel_misconfig_guard) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      etherchannel_misconfig_guard = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, etherchannel_misconfig_guard, submessage_arena);
    }
    
  } else {
    
  }
  etherchannel_misconfig_guard_ = etherchannel_misconfig_guard;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Global.Config.etherchannel_misconfig_guard)
}

// .ywrapper.BoolValue loop_guard = 312794156 [(.yext.schemapath) = "/stp/global/config/loop-guard"];
inline bool Stp_Global_Config::has_loop_guard() const {
  return this != internal_default_instance() && loop_guard_ != NULL;
}
inline const ::ywrapper::BoolValue& Stp_Global_Config::loop_guard() const {
  const ::ywrapper::BoolValue* p = loop_guard_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Global.Config.loop_guard)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Stp_Global_Config::release_loop_guard() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Global.Config.loop_guard)
  
  ::ywrapper::BoolValue* temp = loop_guard_;
  loop_guard_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Stp_Global_Config::mutable_loop_guard() {
  
  if (loop_guard_ == NULL) {
    loop_guard_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Global.Config.loop_guard)
  return loop_guard_;
}
inline void Stp_Global_Config::set_allocated_loop_guard(::ywrapper::BoolValue* loop_guard) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(loop_guard_);
  }
  if (loop_guard) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      loop_guard = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loop_guard, submessage_arena);
    }
    
  } else {
    
  }
  loop_guard_ = loop_guard;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Global.Config.loop_guard)
}

// -------------------------------------------------------------------

// Stp_Global_State

// .ywrapper.BoolValue bpdu_filter = 49432299 [(.yext.schemapath) = "/stp/global/state/bpdu-filter"];
inline bool Stp_Global_State::has_bpdu_filter() const {
  return this != internal_default_instance() && bpdu_filter_ != NULL;
}
inline const ::ywrapper::BoolValue& Stp_Global_State::bpdu_filter() const {
  const ::ywrapper::BoolValue* p = bpdu_filter_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Global.State.bpdu_filter)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Stp_Global_State::release_bpdu_filter() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Global.State.bpdu_filter)
  
  ::ywrapper::BoolValue* temp = bpdu_filter_;
  bpdu_filter_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Stp_Global_State::mutable_bpdu_filter() {
  
  if (bpdu_filter_ == NULL) {
    bpdu_filter_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Global.State.bpdu_filter)
  return bpdu_filter_;
}
inline void Stp_Global_State::set_allocated_bpdu_filter(::ywrapper::BoolValue* bpdu_filter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bpdu_filter_);
  }
  if (bpdu_filter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bpdu_filter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bpdu_filter, submessage_arena);
    }
    
  } else {
    
  }
  bpdu_filter_ = bpdu_filter;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Global.State.bpdu_filter)
}

// .ywrapper.BoolValue bpdu_guard = 386888444 [(.yext.schemapath) = "/stp/global/state/bpdu-guard"];
inline bool Stp_Global_State::has_bpdu_guard() const {
  return this != internal_default_instance() && bpdu_guard_ != NULL;
}
inline const ::ywrapper::BoolValue& Stp_Global_State::bpdu_guard() const {
  const ::ywrapper::BoolValue* p = bpdu_guard_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Global.State.bpdu_guard)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Stp_Global_State::release_bpdu_guard() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Global.State.bpdu_guard)
  
  ::ywrapper::BoolValue* temp = bpdu_guard_;
  bpdu_guard_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Stp_Global_State::mutable_bpdu_guard() {
  
  if (bpdu_guard_ == NULL) {
    bpdu_guard_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Global.State.bpdu_guard)
  return bpdu_guard_;
}
inline void Stp_Global_State::set_allocated_bpdu_guard(::ywrapper::BoolValue* bpdu_guard) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bpdu_guard_);
  }
  if (bpdu_guard) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bpdu_guard = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bpdu_guard, submessage_arena);
    }
    
  } else {
    
  }
  bpdu_guard_ = bpdu_guard;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Global.State.bpdu_guard)
}

// .ywrapper.UintValue bpduguard_timeout_recovery = 525147231 [(.yext.schemapath) = "/stp/global/state/bpduguard-timeout-recovery"];
inline bool Stp_Global_State::has_bpduguard_timeout_recovery() const {
  return this != internal_default_instance() && bpduguard_timeout_recovery_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Global_State::bpduguard_timeout_recovery() const {
  const ::ywrapper::UintValue* p = bpduguard_timeout_recovery_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Global.State.bpduguard_timeout_recovery)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Global_State::release_bpduguard_timeout_recovery() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Global.State.bpduguard_timeout_recovery)
  
  ::ywrapper::UintValue* temp = bpduguard_timeout_recovery_;
  bpduguard_timeout_recovery_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Global_State::mutable_bpduguard_timeout_recovery() {
  
  if (bpduguard_timeout_recovery_ == NULL) {
    bpduguard_timeout_recovery_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Global.State.bpduguard_timeout_recovery)
  return bpduguard_timeout_recovery_;
}
inline void Stp_Global_State::set_allocated_bpduguard_timeout_recovery(::ywrapper::UintValue* bpduguard_timeout_recovery) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bpduguard_timeout_recovery_);
  }
  if (bpduguard_timeout_recovery) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bpduguard_timeout_recovery = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bpduguard_timeout_recovery, submessage_arena);
    }
    
  } else {
    
  }
  bpduguard_timeout_recovery_ = bpduguard_timeout_recovery;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Global.State.bpduguard_timeout_recovery)
}

// .ywrapper.BoolValue bridge_assurance = 237709252 [(.yext.schemapath) = "/stp/global/state/bridge-assurance"];
inline bool Stp_Global_State::has_bridge_assurance() const {
  return this != internal_default_instance() && bridge_assurance_ != NULL;
}
inline const ::ywrapper::BoolValue& Stp_Global_State::bridge_assurance() const {
  const ::ywrapper::BoolValue* p = bridge_assurance_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Global.State.bridge_assurance)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Stp_Global_State::release_bridge_assurance() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Global.State.bridge_assurance)
  
  ::ywrapper::BoolValue* temp = bridge_assurance_;
  bridge_assurance_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Stp_Global_State::mutable_bridge_assurance() {
  
  if (bridge_assurance_ == NULL) {
    bridge_assurance_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Global.State.bridge_assurance)
  return bridge_assurance_;
}
inline void Stp_Global_State::set_allocated_bridge_assurance(::ywrapper::BoolValue* bridge_assurance) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bridge_assurance_);
  }
  if (bridge_assurance) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bridge_assurance = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bridge_assurance, submessage_arena);
    }
    
  } else {
    
  }
  bridge_assurance_ = bridge_assurance;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Global.State.bridge_assurance)
}

// repeated .openconfig.enums.OpenconfigSpanningTreeTypesSTPPROTOCOL enabled_protocol = 313795967 [(.yext.schemapath) = "/stp/global/state/enabled-protocol"];
inline int Stp_Global_State::enabled_protocol_size() const {
  return enabled_protocol_.size();
}
inline void Stp_Global_State::clear_enabled_protocol() {
  enabled_protocol_.Clear();
}
inline ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPROTOCOL Stp_Global_State::enabled_protocol(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Global.State.enabled_protocol)
  return static_cast< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPROTOCOL >(enabled_protocol_.Get(index));
}
inline void Stp_Global_State::set_enabled_protocol(int index, ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPROTOCOL value) {
  enabled_protocol_.Set(index, value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_spanning_tree.Stp.Global.State.enabled_protocol)
}
inline void Stp_Global_State::add_enabled_protocol(::openconfig::enums::OpenconfigSpanningTreeTypesSTPPROTOCOL value) {
  enabled_protocol_.Add(value);
  // @@protoc_insertion_point(field_add:openconfig.openconfig_spanning_tree.Stp.Global.State.enabled_protocol)
}
inline const ::google::protobuf::RepeatedField<int>&
Stp_Global_State::enabled_protocol() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_spanning_tree.Stp.Global.State.enabled_protocol)
  return enabled_protocol_;
}
inline ::google::protobuf::RepeatedField<int>*
Stp_Global_State::mutable_enabled_protocol() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_spanning_tree.Stp.Global.State.enabled_protocol)
  return &enabled_protocol_;
}

// .ywrapper.BoolValue etherchannel_misconfig_guard = 331669714 [(.yext.schemapath) = "/stp/global/state/etherchannel-misconfig-guard"];
inline bool Stp_Global_State::has_etherchannel_misconfig_guard() const {
  return this != internal_default_instance() && etherchannel_misconfig_guard_ != NULL;
}
inline const ::ywrapper::BoolValue& Stp_Global_State::etherchannel_misconfig_guard() const {
  const ::ywrapper::BoolValue* p = etherchannel_misconfig_guard_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Global.State.etherchannel_misconfig_guard)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Stp_Global_State::release_etherchannel_misconfig_guard() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Global.State.etherchannel_misconfig_guard)
  
  ::ywrapper::BoolValue* temp = etherchannel_misconfig_guard_;
  etherchannel_misconfig_guard_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Stp_Global_State::mutable_etherchannel_misconfig_guard() {
  
  if (etherchannel_misconfig_guard_ == NULL) {
    etherchannel_misconfig_guard_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Global.State.etherchannel_misconfig_guard)
  return etherchannel_misconfig_guard_;
}
inline void Stp_Global_State::set_allocated_etherchannel_misconfig_guard(::ywrapper::BoolValue* etherchannel_misconfig_guard) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(etherchannel_misconfig_guard_);
  }
  if (etherchannel_misconfig_guard) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      etherchannel_misconfig_guard = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, etherchannel_misconfig_guard, submessage_arena);
    }
    
  } else {
    
  }
  etherchannel_misconfig_guard_ = etherchannel_misconfig_guard;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Global.State.etherchannel_misconfig_guard)
}

// .ywrapper.BoolValue loop_guard = 140395837 [(.yext.schemapath) = "/stp/global/state/loop-guard"];
inline bool Stp_Global_State::has_loop_guard() const {
  return this != internal_default_instance() && loop_guard_ != NULL;
}
inline const ::ywrapper::BoolValue& Stp_Global_State::loop_guard() const {
  const ::ywrapper::BoolValue* p = loop_guard_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Global.State.loop_guard)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Stp_Global_State::release_loop_guard() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Global.State.loop_guard)
  
  ::ywrapper::BoolValue* temp = loop_guard_;
  loop_guard_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Stp_Global_State::mutable_loop_guard() {
  
  if (loop_guard_ == NULL) {
    loop_guard_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Global.State.loop_guard)
  return loop_guard_;
}
inline void Stp_Global_State::set_allocated_loop_guard(::ywrapper::BoolValue* loop_guard) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(loop_guard_);
  }
  if (loop_guard) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      loop_guard = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, loop_guard, submessage_arena);
    }
    
  } else {
    
  }
  loop_guard_ = loop_guard;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Global.State.loop_guard)
}

// -------------------------------------------------------------------

// Stp_Global

// .openconfig.openconfig_spanning_tree.Stp.Global.Config config = 300401779 [(.yext.schemapath) = "/stp/global/config"];
inline bool Stp_Global::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Stp_Global::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Global_Config& Stp_Global::config() const {
  const ::openconfig::openconfig_spanning_tree::Stp_Global_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Global.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_Global_Config*>(
      &::openconfig::openconfig_spanning_tree::_Stp_Global_Config_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Global_Config* Stp_Global::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Global.config)
  
  ::openconfig::openconfig_spanning_tree::Stp_Global_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_Global_Config* Stp_Global::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_spanning_tree::Stp_Global_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Global.config)
  return config_;
}
inline void Stp_Global::set_allocated_config(::openconfig::openconfig_spanning_tree::Stp_Global_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Global.config)
}

// .openconfig.openconfig_spanning_tree.Stp.Global.State state = 82194900 [(.yext.schemapath) = "/stp/global/state"];
inline bool Stp_Global::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Stp_Global::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Global_State& Stp_Global::state() const {
  const ::openconfig::openconfig_spanning_tree::Stp_Global_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Global.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_Global_State*>(
      &::openconfig::openconfig_spanning_tree::_Stp_Global_State_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Global_State* Stp_Global::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Global.state)
  
  ::openconfig::openconfig_spanning_tree::Stp_Global_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_Global_State* Stp_Global::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_spanning_tree::Stp_Global_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Global.state)
  return state_;
}
inline void Stp_Global::set_allocated_state(::openconfig::openconfig_spanning_tree::Stp_Global_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Global.state)
}

// -------------------------------------------------------------------

// Stp_Interfaces_Interface_Config

// .ywrapper.BoolValue bpdu_filter = 494440739 [(.yext.schemapath) = "/stp/interfaces/interface/config/bpdu-filter"];
inline bool Stp_Interfaces_Interface_Config::has_bpdu_filter() const {
  return this != internal_default_instance() && bpdu_filter_ != NULL;
}
inline const ::ywrapper::BoolValue& Stp_Interfaces_Interface_Config::bpdu_filter() const {
  const ::ywrapper::BoolValue* p = bpdu_filter_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config.bpdu_filter)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Stp_Interfaces_Interface_Config::release_bpdu_filter() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config.bpdu_filter)
  
  ::ywrapper::BoolValue* temp = bpdu_filter_;
  bpdu_filter_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Stp_Interfaces_Interface_Config::mutable_bpdu_filter() {
  
  if (bpdu_filter_ == NULL) {
    bpdu_filter_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config.bpdu_filter)
  return bpdu_filter_;
}
inline void Stp_Interfaces_Interface_Config::set_allocated_bpdu_filter(::ywrapper::BoolValue* bpdu_filter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bpdu_filter_);
  }
  if (bpdu_filter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bpdu_filter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bpdu_filter, submessage_arena);
    }
    
  } else {
    
  }
  bpdu_filter_ = bpdu_filter;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config.bpdu_filter)
}

// .ywrapper.BoolValue bpdu_guard = 73707396 [(.yext.schemapath) = "/stp/interfaces/interface/config/bpdu-guard"];
inline bool Stp_Interfaces_Interface_Config::has_bpdu_guard() const {
  return this != internal_default_instance() && bpdu_guard_ != NULL;
}
inline const ::ywrapper::BoolValue& Stp_Interfaces_Interface_Config::bpdu_guard() const {
  const ::ywrapper::BoolValue* p = bpdu_guard_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config.bpdu_guard)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Stp_Interfaces_Interface_Config::release_bpdu_guard() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config.bpdu_guard)
  
  ::ywrapper::BoolValue* temp = bpdu_guard_;
  bpdu_guard_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Stp_Interfaces_Interface_Config::mutable_bpdu_guard() {
  
  if (bpdu_guard_ == NULL) {
    bpdu_guard_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config.bpdu_guard)
  return bpdu_guard_;
}
inline void Stp_Interfaces_Interface_Config::set_allocated_bpdu_guard(::ywrapper::BoolValue* bpdu_guard) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bpdu_guard_);
  }
  if (bpdu_guard) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bpdu_guard = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bpdu_guard, submessage_arena);
    }
    
  } else {
    
  }
  bpdu_guard_ = bpdu_guard;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config.bpdu_guard)
}

// .openconfig.enums.OpenconfigSpanningTreeTypesSTPEDGEPORT edge_port = 386392760 [(.yext.schemapath) = "/stp/interfaces/interface/config/edge-port"];
inline void Stp_Interfaces_Interface_Config::clear_edge_port() {
  edge_port_ = 0;
}
inline ::openconfig::enums::OpenconfigSpanningTreeTypesSTPEDGEPORT Stp_Interfaces_Interface_Config::edge_port() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config.edge_port)
  return static_cast< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPEDGEPORT >(edge_port_);
}
inline void Stp_Interfaces_Interface_Config::set_edge_port(::openconfig::enums::OpenconfigSpanningTreeTypesSTPEDGEPORT value) {
  
  edge_port_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config.edge_port)
}

// .openconfig.enums.OpenconfigSpanningTreeStpGuardType guard = 411542382 [(.yext.schemapath) = "/stp/interfaces/interface/config/guard"];
inline void Stp_Interfaces_Interface_Config::clear_guard() {
  guard_ = 0;
}
inline ::openconfig::enums::OpenconfigSpanningTreeStpGuardType Stp_Interfaces_Interface_Config::guard() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config.guard)
  return static_cast< ::openconfig::enums::OpenconfigSpanningTreeStpGuardType >(guard_);
}
inline void Stp_Interfaces_Interface_Config::set_guard(::openconfig::enums::OpenconfigSpanningTreeStpGuardType value) {
  
  guard_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config.guard)
}

// .openconfig.enums.OpenconfigSpanningTreeStpLinkType link_type = 382517328 [(.yext.schemapath) = "/stp/interfaces/interface/config/link-type"];
inline void Stp_Interfaces_Interface_Config::clear_link_type() {
  link_type_ = 0;
}
inline ::openconfig::enums::OpenconfigSpanningTreeStpLinkType Stp_Interfaces_Interface_Config::link_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config.link_type)
  return static_cast< ::openconfig::enums::OpenconfigSpanningTreeStpLinkType >(link_type_);
}
inline void Stp_Interfaces_Interface_Config::set_link_type(::openconfig::enums::OpenconfigSpanningTreeStpLinkType value) {
  
  link_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config.link_type)
}

// .ywrapper.StringValue name = 80608366 [(.yext.schemapath) = "/stp/interfaces/interface/config/name"];
inline bool Stp_Interfaces_Interface_Config::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& Stp_Interfaces_Interface_Config::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Stp_Interfaces_Interface_Config::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Stp_Interfaces_Interface_Config::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config.name)
  return name_;
}
inline void Stp_Interfaces_Interface_Config::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config.name)
}

// -------------------------------------------------------------------

// Stp_Interfaces_Interface_State

// .ywrapper.BoolValue bpdu_filter = 111517662 [(.yext.schemapath) = "/stp/interfaces/interface/state/bpdu-filter"];
inline bool Stp_Interfaces_Interface_State::has_bpdu_filter() const {
  return this != internal_default_instance() && bpdu_filter_ != NULL;
}
inline const ::ywrapper::BoolValue& Stp_Interfaces_Interface_State::bpdu_filter() const {
  const ::ywrapper::BoolValue* p = bpdu_filter_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State.bpdu_filter)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Stp_Interfaces_Interface_State::release_bpdu_filter() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State.bpdu_filter)
  
  ::ywrapper::BoolValue* temp = bpdu_filter_;
  bpdu_filter_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Stp_Interfaces_Interface_State::mutable_bpdu_filter() {
  
  if (bpdu_filter_ == NULL) {
    bpdu_filter_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State.bpdu_filter)
  return bpdu_filter_;
}
inline void Stp_Interfaces_Interface_State::set_allocated_bpdu_filter(::ywrapper::BoolValue* bpdu_filter) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bpdu_filter_);
  }
  if (bpdu_filter) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bpdu_filter = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bpdu_filter, submessage_arena);
    }
    
  } else {
    
  }
  bpdu_filter_ = bpdu_filter;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State.bpdu_filter)
}

// .ywrapper.BoolValue bpdu_guard = 188731375 [(.yext.schemapath) = "/stp/interfaces/interface/state/bpdu-guard"];
inline bool Stp_Interfaces_Interface_State::has_bpdu_guard() const {
  return this != internal_default_instance() && bpdu_guard_ != NULL;
}
inline const ::ywrapper::BoolValue& Stp_Interfaces_Interface_State::bpdu_guard() const {
  const ::ywrapper::BoolValue* p = bpdu_guard_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State.bpdu_guard)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* Stp_Interfaces_Interface_State::release_bpdu_guard() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State.bpdu_guard)
  
  ::ywrapper::BoolValue* temp = bpdu_guard_;
  bpdu_guard_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* Stp_Interfaces_Interface_State::mutable_bpdu_guard() {
  
  if (bpdu_guard_ == NULL) {
    bpdu_guard_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State.bpdu_guard)
  return bpdu_guard_;
}
inline void Stp_Interfaces_Interface_State::set_allocated_bpdu_guard(::ywrapper::BoolValue* bpdu_guard) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bpdu_guard_);
  }
  if (bpdu_guard) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bpdu_guard = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bpdu_guard, submessage_arena);
    }
    
  } else {
    
  }
  bpdu_guard_ = bpdu_guard;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State.bpdu_guard)
}

// .openconfig.enums.OpenconfigSpanningTreeTypesSTPEDGEPORT edge_port = 114978321 [(.yext.schemapath) = "/stp/interfaces/interface/state/edge-port"];
inline void Stp_Interfaces_Interface_State::clear_edge_port() {
  edge_port_ = 0;
}
inline ::openconfig::enums::OpenconfigSpanningTreeTypesSTPEDGEPORT Stp_Interfaces_Interface_State::edge_port() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State.edge_port)
  return static_cast< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPEDGEPORT >(edge_port_);
}
inline void Stp_Interfaces_Interface_State::set_edge_port(::openconfig::enums::OpenconfigSpanningTreeTypesSTPEDGEPORT value) {
  
  edge_port_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State.edge_port)
}

// .openconfig.enums.OpenconfigSpanningTreeStpGuardType guard = 426047799 [(.yext.schemapath) = "/stp/interfaces/interface/state/guard"];
inline void Stp_Interfaces_Interface_State::clear_guard() {
  guard_ = 0;
}
inline ::openconfig::enums::OpenconfigSpanningTreeStpGuardType Stp_Interfaces_Interface_State::guard() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State.guard)
  return static_cast< ::openconfig::enums::OpenconfigSpanningTreeStpGuardType >(guard_);
}
inline void Stp_Interfaces_Interface_State::set_guard(::openconfig::enums::OpenconfigSpanningTreeStpGuardType value) {
  
  guard_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State.guard)
}

// .openconfig.enums.OpenconfigSpanningTreeStpLinkType link_type = 386303669 [(.yext.schemapath) = "/stp/interfaces/interface/state/link-type"];
inline void Stp_Interfaces_Interface_State::clear_link_type() {
  link_type_ = 0;
}
inline ::openconfig::enums::OpenconfigSpanningTreeStpLinkType Stp_Interfaces_Interface_State::link_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State.link_type)
  return static_cast< ::openconfig::enums::OpenconfigSpanningTreeStpLinkType >(link_type_);
}
inline void Stp_Interfaces_Interface_State::set_link_type(::openconfig::enums::OpenconfigSpanningTreeStpLinkType value) {
  
  link_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State.link_type)
}

// .ywrapper.StringValue name = 376864097 [(.yext.schemapath) = "/stp/interfaces/interface/state/name"];
inline bool Stp_Interfaces_Interface_State::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& Stp_Interfaces_Interface_State::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Stp_Interfaces_Interface_State::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Stp_Interfaces_Interface_State::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State.name)
  return name_;
}
inline void Stp_Interfaces_Interface_State::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State.name)
}

// -------------------------------------------------------------------

// Stp_Interfaces_Interface

// .openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.Config config = 477051180 [(.yext.schemapath) = "/stp/interfaces/interface/config"];
inline bool Stp_Interfaces_Interface::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Stp_Interfaces_Interface::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_Config& Stp_Interfaces_Interface::config() const {
  const ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_Config*>(
      &::openconfig::openconfig_spanning_tree::_Stp_Interfaces_Interface_Config_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_Config* Stp_Interfaces_Interface::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.config)
  
  ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_Config* Stp_Interfaces_Interface::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.config)
  return config_;
}
inline void Stp_Interfaces_Interface::set_allocated_config(::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.config)
}

// .openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.State state = 177132837 [(.yext.schemapath) = "/stp/interfaces/interface/state"];
inline bool Stp_Interfaces_Interface::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Stp_Interfaces_Interface::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_State& Stp_Interfaces_Interface::state() const {
  const ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_State*>(
      &::openconfig::openconfig_spanning_tree::_Stp_Interfaces_Interface_State_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_State* Stp_Interfaces_Interface::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.state)
  
  ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_State* Stp_Interfaces_Interface::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.state)
  return state_;
}
inline void Stp_Interfaces_Interface::set_allocated_state(::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface.state)
}

// -------------------------------------------------------------------

// Stp_Interfaces_InterfaceKey

// string name = 1 [(.yext.schemapath) = "/stp/interfaces/interface/name"];
inline void Stp_Interfaces_InterfaceKey::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Stp_Interfaces_InterfaceKey::name() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey.name)
  return name_.GetNoArena();
}
inline void Stp_Interfaces_InterfaceKey::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey.name)
}
#if LANG_CXX11
inline void Stp_Interfaces_InterfaceKey::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey.name)
}
#endif
inline void Stp_Interfaces_InterfaceKey::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey.name)
}
inline void Stp_Interfaces_InterfaceKey::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey.name)
}
inline ::std::string* Stp_Interfaces_InterfaceKey::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Stp_Interfaces_InterfaceKey::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Stp_Interfaces_InterfaceKey::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey.name)
}

// .openconfig.openconfig_spanning_tree.Stp.Interfaces.Interface interface = 2;
inline bool Stp_Interfaces_InterfaceKey::has_interface() const {
  return this != internal_default_instance() && interface_ != NULL;
}
inline void Stp_Interfaces_InterfaceKey::clear_interface() {
  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface& Stp_Interfaces_InterfaceKey::interface() const {
  const ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface* p = interface_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey.interface)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface*>(
      &::openconfig::openconfig_spanning_tree::_Stp_Interfaces_Interface_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface* Stp_Interfaces_InterfaceKey::release_interface() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey.interface)
  
  ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface* temp = interface_;
  interface_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface* Stp_Interfaces_InterfaceKey::mutable_interface() {
  
  if (interface_ == NULL) {
    interface_ = new ::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey.interface)
  return interface_;
}
inline void Stp_Interfaces_InterfaceKey::set_allocated_interface(::openconfig::openconfig_spanning_tree::Stp_Interfaces_Interface* interface) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete interface_;
  }
  if (interface) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interface = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interface, submessage_arena);
    }
    
  } else {
    
  }
  interface_ = interface;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey.interface)
}

// -------------------------------------------------------------------

// Stp_Interfaces

// repeated .openconfig.openconfig_spanning_tree.Stp.Interfaces.InterfaceKey interface = 327756795 [(.yext.schemapath) = "/stp/interfaces/interface"];
inline int Stp_Interfaces::interface_size() const {
  return interface_.size();
}
inline void Stp_Interfaces::clear_interface() {
  interface_.Clear();
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Interfaces_InterfaceKey& Stp_Interfaces::interface(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Interfaces.interface)
  return interface_.Get(index);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Interfaces_InterfaceKey* Stp_Interfaces::mutable_interface(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Interfaces.interface)
  return interface_.Mutable(index);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Interfaces_InterfaceKey* Stp_Interfaces::add_interface() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_spanning_tree.Stp.Interfaces.interface)
  return interface_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Interfaces_InterfaceKey >*
Stp_Interfaces::mutable_interface() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_spanning_tree.Stp.Interfaces.interface)
  return &interface_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Interfaces_InterfaceKey >&
Stp_Interfaces::interface() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_spanning_tree.Stp.Interfaces.interface)
  return interface_;
}

// -------------------------------------------------------------------

// Stp_Mstp_Config

// .ywrapper.UintValue forwarding_delay = 18306732 [(.yext.schemapath) = "/stp/mstp/config/forwarding-delay"];
inline bool Stp_Mstp_Config::has_forwarding_delay() const {
  return this != internal_default_instance() && forwarding_delay_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_Config::forwarding_delay() const {
  const ::ywrapper::UintValue* p = forwarding_delay_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.forwarding_delay)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_Config::release_forwarding_delay() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.forwarding_delay)
  
  ::ywrapper::UintValue* temp = forwarding_delay_;
  forwarding_delay_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_Config::mutable_forwarding_delay() {
  
  if (forwarding_delay_ == NULL) {
    forwarding_delay_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.forwarding_delay)
  return forwarding_delay_;
}
inline void Stp_Mstp_Config::set_allocated_forwarding_delay(::ywrapper::UintValue* forwarding_delay) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(forwarding_delay_);
  }
  if (forwarding_delay) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      forwarding_delay = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, forwarding_delay, submessage_arena);
    }
    
  } else {
    
  }
  forwarding_delay_ = forwarding_delay;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.forwarding_delay)
}

// .ywrapper.UintValue hello_time = 156515745 [(.yext.schemapath) = "/stp/mstp/config/hello-time"];
inline bool Stp_Mstp_Config::has_hello_time() const {
  return this != internal_default_instance() && hello_time_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_Config::hello_time() const {
  const ::ywrapper::UintValue* p = hello_time_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.hello_time)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_Config::release_hello_time() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.hello_time)
  
  ::ywrapper::UintValue* temp = hello_time_;
  hello_time_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_Config::mutable_hello_time() {
  
  if (hello_time_ == NULL) {
    hello_time_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.hello_time)
  return hello_time_;
}
inline void Stp_Mstp_Config::set_allocated_hello_time(::ywrapper::UintValue* hello_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hello_time_);
  }
  if (hello_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hello_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hello_time, submessage_arena);
    }
    
  } else {
    
  }
  hello_time_ = hello_time;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.hello_time)
}

// .ywrapper.UintValue hold_count = 368495794 [(.yext.schemapath) = "/stp/mstp/config/hold-count"];
inline bool Stp_Mstp_Config::has_hold_count() const {
  return this != internal_default_instance() && hold_count_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_Config::hold_count() const {
  const ::ywrapper::UintValue* p = hold_count_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.hold_count)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_Config::release_hold_count() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.hold_count)
  
  ::ywrapper::UintValue* temp = hold_count_;
  hold_count_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_Config::mutable_hold_count() {
  
  if (hold_count_ == NULL) {
    hold_count_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.hold_count)
  return hold_count_;
}
inline void Stp_Mstp_Config::set_allocated_hold_count(::ywrapper::UintValue* hold_count) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hold_count_);
  }
  if (hold_count) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hold_count = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hold_count, submessage_arena);
    }
    
  } else {
    
  }
  hold_count_ = hold_count;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.hold_count)
}

// .ywrapper.UintValue max_age = 157271045 [(.yext.schemapath) = "/stp/mstp/config/max-age"];
inline bool Stp_Mstp_Config::has_max_age() const {
  return this != internal_default_instance() && max_age_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_Config::max_age() const {
  const ::ywrapper::UintValue* p = max_age_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.max_age)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_Config::release_max_age() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.max_age)
  
  ::ywrapper::UintValue* temp = max_age_;
  max_age_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_Config::mutable_max_age() {
  
  if (max_age_ == NULL) {
    max_age_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.max_age)
  return max_age_;
}
inline void Stp_Mstp_Config::set_allocated_max_age(::ywrapper::UintValue* max_age) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_age_);
  }
  if (max_age) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max_age = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max_age, submessage_arena);
    }
    
  } else {
    
  }
  max_age_ = max_age;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.max_age)
}

// .ywrapper.UintValue max_hop = 290078073 [(.yext.schemapath) = "/stp/mstp/config/max-hop"];
inline bool Stp_Mstp_Config::has_max_hop() const {
  return this != internal_default_instance() && max_hop_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_Config::max_hop() const {
  const ::ywrapper::UintValue* p = max_hop_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.max_hop)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_Config::release_max_hop() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.max_hop)
  
  ::ywrapper::UintValue* temp = max_hop_;
  max_hop_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_Config::mutable_max_hop() {
  
  if (max_hop_ == NULL) {
    max_hop_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.max_hop)
  return max_hop_;
}
inline void Stp_Mstp_Config::set_allocated_max_hop(::ywrapper::UintValue* max_hop) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_hop_);
  }
  if (max_hop) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max_hop = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max_hop, submessage_arena);
    }
    
  } else {
    
  }
  max_hop_ = max_hop;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.max_hop)
}

// .ywrapper.StringValue name = 205892610 [(.yext.schemapath) = "/stp/mstp/config/name"];
inline bool Stp_Mstp_Config::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& Stp_Mstp_Config::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Stp_Mstp_Config::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Stp_Mstp_Config::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.name)
  return name_;
}
inline void Stp_Mstp_Config::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.name)
}

// .ywrapper.UintValue revision = 151289928 [(.yext.schemapath) = "/stp/mstp/config/revision"];
inline bool Stp_Mstp_Config::has_revision() const {
  return this != internal_default_instance() && revision_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_Config::revision() const {
  const ::ywrapper::UintValue* p = revision_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.revision)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_Config::release_revision() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.revision)
  
  ::ywrapper::UintValue* temp = revision_;
  revision_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_Config::mutable_revision() {
  
  if (revision_ == NULL) {
    revision_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.revision)
  return revision_;
}
inline void Stp_Mstp_Config::set_allocated_revision(::ywrapper::UintValue* revision) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(revision_);
  }
  if (revision) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      revision = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, revision, submessage_arena);
    }
    
  } else {
    
  }
  revision_ = revision;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.Config.revision)
}

// -------------------------------------------------------------------

// Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion

// string vlan_string = 113239521;
inline void Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::clear_vlan_string() {
  vlan_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::vlan_string() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion.vlan_string)
  return vlan_string_.GetNoArena();
}
inline void Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::set_vlan_string(const ::std::string& value) {
  
  vlan_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion.vlan_string)
}
#if LANG_CXX11
inline void Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::set_vlan_string(::std::string&& value) {
  
  vlan_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion.vlan_string)
}
#endif
inline void Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::set_vlan_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vlan_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion.vlan_string)
}
inline void Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::set_vlan_string(const char* value, size_t size) {
  
  vlan_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion.vlan_string)
}
inline ::std::string* Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::mutable_vlan_string() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion.vlan_string)
  return vlan_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::release_vlan_string() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion.vlan_string)
  
  return vlan_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::set_allocated_vlan_string(::std::string* vlan_string) {
  if (vlan_string != NULL) {
    
  } else {
    
  }
  vlan_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vlan_string);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion.vlan_string)
}

// uint64 vlan_uint64 = 358708228;
inline void Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::clear_vlan_uint64() {
  vlan_uint64_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::vlan_uint64() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion.vlan_uint64)
  return vlan_uint64_;
}
inline void Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion::set_vlan_uint64(::google::protobuf::uint64 value) {
  
  vlan_uint64_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion.vlan_uint64)
}

// -------------------------------------------------------------------

// Stp_Mstp_MstInstances_MstInstance_Config

// .ywrapper.UintValue bridge_priority = 150170028 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/config/bridge-priority"];
inline bool Stp_Mstp_MstInstances_MstInstance_Config::has_bridge_priority() const {
  return this != internal_default_instance() && bridge_priority_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_MstInstances_MstInstance_Config::bridge_priority() const {
  const ::ywrapper::UintValue* p = bridge_priority_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.bridge_priority)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Config::release_bridge_priority() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.bridge_priority)
  
  ::ywrapper::UintValue* temp = bridge_priority_;
  bridge_priority_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Config::mutable_bridge_priority() {
  
  if (bridge_priority_ == NULL) {
    bridge_priority_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.bridge_priority)
  return bridge_priority_;
}
inline void Stp_Mstp_MstInstances_MstInstance_Config::set_allocated_bridge_priority(::ywrapper::UintValue* bridge_priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bridge_priority_);
  }
  if (bridge_priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bridge_priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bridge_priority, submessage_arena);
    }
    
  } else {
    
  }
  bridge_priority_ = bridge_priority;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.bridge_priority)
}

// .ywrapper.UintValue mst_id = 65684746 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/config/mst-id"];
inline bool Stp_Mstp_MstInstances_MstInstance_Config::has_mst_id() const {
  return this != internal_default_instance() && mst_id_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_MstInstances_MstInstance_Config::mst_id() const {
  const ::ywrapper::UintValue* p = mst_id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.mst_id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Config::release_mst_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.mst_id)
  
  ::ywrapper::UintValue* temp = mst_id_;
  mst_id_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Config::mutable_mst_id() {
  
  if (mst_id_ == NULL) {
    mst_id_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.mst_id)
  return mst_id_;
}
inline void Stp_Mstp_MstInstances_MstInstance_Config::set_allocated_mst_id(::ywrapper::UintValue* mst_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mst_id_);
  }
  if (mst_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mst_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mst_id, submessage_arena);
    }
    
  } else {
    
  }
  mst_id_ = mst_id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.mst_id)
}

// repeated .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.VlanUnion vlan = 517819675 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/config/vlan"];
inline int Stp_Mstp_MstInstances_MstInstance_Config::vlan_size() const {
  return vlan_.size();
}
inline void Stp_Mstp_MstInstances_MstInstance_Config::clear_vlan() {
  vlan_.Clear();
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion& Stp_Mstp_MstInstances_MstInstance_Config::vlan(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.vlan)
  return vlan_.Get(index);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion* Stp_Mstp_MstInstances_MstInstance_Config::mutable_vlan(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.vlan)
  return vlan_.Mutable(index);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion* Stp_Mstp_MstInstances_MstInstance_Config::add_vlan() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.vlan)
  return vlan_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion >*
Stp_Mstp_MstInstances_MstInstance_Config::mutable_vlan() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.vlan)
  return &vlan_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config_VlanUnion >&
Stp_Mstp_MstInstances_MstInstance_Config::vlan() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config.vlan)
  return vlan_;
}

// -------------------------------------------------------------------

// Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config

// .ywrapper.UintValue cost = 231951496 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/config/cost"];
inline bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::has_cost() const {
  return this != internal_default_instance() && cost_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::cost() const {
  const ::ywrapper::UintValue* p = cost_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config.cost)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::release_cost() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config.cost)
  
  ::ywrapper::UintValue* temp = cost_;
  cost_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::mutable_cost() {
  
  if (cost_ == NULL) {
    cost_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config.cost)
  return cost_;
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::set_allocated_cost(::ywrapper::UintValue* cost) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cost_);
  }
  if (cost) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cost = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cost, submessage_arena);
    }
    
  } else {
    
  }
  cost_ = cost;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config.cost)
}

// .ywrapper.StringValue name = 14028770 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/config/name"];
inline bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config.name)
  return name_;
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config.name)
}

// .ywrapper.UintValue port_priority = 140449623 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/config/port-priority"];
inline bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::has_port_priority() const {
  return this != internal_default_instance() && port_priority_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::port_priority() const {
  const ::ywrapper::UintValue* p = port_priority_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config.port_priority)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::release_port_priority() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config.port_priority)
  
  ::ywrapper::UintValue* temp = port_priority_;
  port_priority_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::mutable_port_priority() {
  
  if (port_priority_ == NULL) {
    port_priority_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config.port_priority)
  return port_priority_;
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config::set_allocated_port_priority(::ywrapper::UintValue* port_priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(port_priority_);
  }
  if (port_priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      port_priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, port_priority, submessage_arena);
    }
    
  } else {
    
  }
  port_priority_ = port_priority;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config.port_priority)
}

// -------------------------------------------------------------------

// Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters

// .ywrapper.UintValue bpdu_received = 63622203 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/counters/bpdu-received"];
inline bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::has_bpdu_received() const {
  return this != internal_default_instance() && bpdu_received_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::bpdu_received() const {
  const ::ywrapper::UintValue* p = bpdu_received_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters.bpdu_received)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::release_bpdu_received() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters.bpdu_received)
  
  ::ywrapper::UintValue* temp = bpdu_received_;
  bpdu_received_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::mutable_bpdu_received() {
  
  if (bpdu_received_ == NULL) {
    bpdu_received_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters.bpdu_received)
  return bpdu_received_;
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::set_allocated_bpdu_received(::ywrapper::UintValue* bpdu_received) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bpdu_received_);
  }
  if (bpdu_received) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bpdu_received = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bpdu_received, submessage_arena);
    }
    
  } else {
    
  }
  bpdu_received_ = bpdu_received;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters.bpdu_received)
}

// .ywrapper.UintValue bpdu_sent = 185749672 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/counters/bpdu-sent"];
inline bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::has_bpdu_sent() const {
  return this != internal_default_instance() && bpdu_sent_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::bpdu_sent() const {
  const ::ywrapper::UintValue* p = bpdu_sent_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters.bpdu_sent)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::release_bpdu_sent() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters.bpdu_sent)
  
  ::ywrapper::UintValue* temp = bpdu_sent_;
  bpdu_sent_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::mutable_bpdu_sent() {
  
  if (bpdu_sent_ == NULL) {
    bpdu_sent_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters.bpdu_sent)
  return bpdu_sent_;
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters::set_allocated_bpdu_sent(::ywrapper::UintValue* bpdu_sent) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bpdu_sent_);
  }
  if (bpdu_sent) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bpdu_sent = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bpdu_sent, submessage_arena);
    }
    
  } else {
    
  }
  bpdu_sent_ = bpdu_sent;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters.bpdu_sent)
}

// -------------------------------------------------------------------

// Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State

// .ywrapper.UintValue cost = 159865123 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/cost"];
inline bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::has_cost() const {
  return this != internal_default_instance() && cost_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::cost() const {
  const ::ywrapper::UintValue* p = cost_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.cost)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::release_cost() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.cost)
  
  ::ywrapper::UintValue* temp = cost_;
  cost_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::mutable_cost() {
  
  if (cost_ == NULL) {
    cost_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.cost)
  return cost_;
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::set_allocated_cost(::ywrapper::UintValue* cost) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cost_);
  }
  if (cost) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cost = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cost, submessage_arena);
    }
    
  } else {
    
  }
  cost_ = cost;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.cost)
}

// .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.Counters counters = 520052395 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/counters"];
inline bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::has_counters() const {
  return this != internal_default_instance() && counters_ != NULL;
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::clear_counters() {
  if (GetArenaNoVirtual() == NULL && counters_ != NULL) {
    delete counters_;
  }
  counters_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters& Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::counters() const {
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters* p = counters_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.counters)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters*>(
      &::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::release_counters() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.counters)
  
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters* temp = counters_;
  counters_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::mutable_counters() {
  
  if (counters_ == NULL) {
    counters_ = new ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.counters)
  return counters_;
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::set_allocated_counters(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_Counters* counters) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete counters_;
  }
  if (counters) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      counters = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, counters, submessage_arena);
    }
    
  } else {
    
  }
  counters_ = counters;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.counters)
}

// .ywrapper.StringValue designated_bridge_address = 175515179 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-bridge-address"];
inline bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::has_designated_bridge_address() const {
  return this != internal_default_instance() && designated_bridge_address_ != NULL;
}
inline const ::ywrapper::StringValue& Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::designated_bridge_address() const {
  const ::ywrapper::StringValue* p = designated_bridge_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_bridge_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::release_designated_bridge_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_bridge_address)
  
  ::ywrapper::StringValue* temp = designated_bridge_address_;
  designated_bridge_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::mutable_designated_bridge_address() {
  
  if (designated_bridge_address_ == NULL) {
    designated_bridge_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_bridge_address)
  return designated_bridge_address_;
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::set_allocated_designated_bridge_address(::ywrapper::StringValue* designated_bridge_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(designated_bridge_address_);
  }
  if (designated_bridge_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      designated_bridge_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, designated_bridge_address, submessage_arena);
    }
    
  } else {
    
  }
  designated_bridge_address_ = designated_bridge_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_bridge_address)
}

// .ywrapper.UintValue designated_bridge_priority = 411036809 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-bridge-priority"];
inline bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::has_designated_bridge_priority() const {
  return this != internal_default_instance() && designated_bridge_priority_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::designated_bridge_priority() const {
  const ::ywrapper::UintValue* p = designated_bridge_priority_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_bridge_priority)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::release_designated_bridge_priority() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_bridge_priority)
  
  ::ywrapper::UintValue* temp = designated_bridge_priority_;
  designated_bridge_priority_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::mutable_designated_bridge_priority() {
  
  if (designated_bridge_priority_ == NULL) {
    designated_bridge_priority_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_bridge_priority)
  return designated_bridge_priority_;
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::set_allocated_designated_bridge_priority(::ywrapper::UintValue* designated_bridge_priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(designated_bridge_priority_);
  }
  if (designated_bridge_priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      designated_bridge_priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, designated_bridge_priority, submessage_arena);
    }
    
  } else {
    
  }
  designated_bridge_priority_ = designated_bridge_priority;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_bridge_priority)
}

// .ywrapper.UintValue designated_cost = 24519636 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-cost"];
inline bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::has_designated_cost() const {
  return this != internal_default_instance() && designated_cost_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::designated_cost() const {
  const ::ywrapper::UintValue* p = designated_cost_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_cost)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::release_designated_cost() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_cost)
  
  ::ywrapper::UintValue* temp = designated_cost_;
  designated_cost_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::mutable_designated_cost() {
  
  if (designated_cost_ == NULL) {
    designated_cost_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_cost)
  return designated_cost_;
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::set_allocated_designated_cost(::ywrapper::UintValue* designated_cost) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(designated_cost_);
  }
  if (designated_cost) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      designated_cost = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, designated_cost, submessage_arena);
    }
    
  } else {
    
  }
  designated_cost_ = designated_cost;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_cost)
}

// .ywrapper.UintValue designated_port_num = 305730017 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-port-num"];
inline bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::has_designated_port_num() const {
  return this != internal_default_instance() && designated_port_num_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::designated_port_num() const {
  const ::ywrapper::UintValue* p = designated_port_num_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_port_num)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::release_designated_port_num() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_port_num)
  
  ::ywrapper::UintValue* temp = designated_port_num_;
  designated_port_num_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::mutable_designated_port_num() {
  
  if (designated_port_num_ == NULL) {
    designated_port_num_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_port_num)
  return designated_port_num_;
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::set_allocated_designated_port_num(::ywrapper::UintValue* designated_port_num) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(designated_port_num_);
  }
  if (designated_port_num) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      designated_port_num = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, designated_port_num, submessage_arena);
    }
    
  } else {
    
  }
  designated_port_num_ = designated_port_num;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_port_num)
}

// .ywrapper.UintValue designated_port_priority = 153721331 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-port-priority"];
inline bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::has_designated_port_priority() const {
  return this != internal_default_instance() && designated_port_priority_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::designated_port_priority() const {
  const ::ywrapper::UintValue* p = designated_port_priority_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_port_priority)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::release_designated_port_priority() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_port_priority)
  
  ::ywrapper::UintValue* temp = designated_port_priority_;
  designated_port_priority_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::mutable_designated_port_priority() {
  
  if (designated_port_priority_ == NULL) {
    designated_port_priority_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_port_priority)
  return designated_port_priority_;
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::set_allocated_designated_port_priority(::ywrapper::UintValue* designated_port_priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(designated_port_priority_);
  }
  if (designated_port_priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      designated_port_priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, designated_port_priority, submessage_arena);
    }
    
  } else {
    
  }
  designated_port_priority_ = designated_port_priority;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_port_priority)
}

// .ywrapper.StringValue designated_root_address = 222851020 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-root-address"];
inline bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::has_designated_root_address() const {
  return this != internal_default_instance() && designated_root_address_ != NULL;
}
inline const ::ywrapper::StringValue& Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::designated_root_address() const {
  const ::ywrapper::StringValue* p = designated_root_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_root_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::release_designated_root_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_root_address)
  
  ::ywrapper::StringValue* temp = designated_root_address_;
  designated_root_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::mutable_designated_root_address() {
  
  if (designated_root_address_ == NULL) {
    designated_root_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_root_address)
  return designated_root_address_;
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::set_allocated_designated_root_address(::ywrapper::StringValue* designated_root_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(designated_root_address_);
  }
  if (designated_root_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      designated_root_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, designated_root_address, submessage_arena);
    }
    
  } else {
    
  }
  designated_root_address_ = designated_root_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_root_address)
}

// .ywrapper.UintValue designated_root_priority = 198628868 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/designated-root-priority"];
inline bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::has_designated_root_priority() const {
  return this != internal_default_instance() && designated_root_priority_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::designated_root_priority() const {
  const ::ywrapper::UintValue* p = designated_root_priority_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_root_priority)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::release_designated_root_priority() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_root_priority)
  
  ::ywrapper::UintValue* temp = designated_root_priority_;
  designated_root_priority_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::mutable_designated_root_priority() {
  
  if (designated_root_priority_ == NULL) {
    designated_root_priority_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_root_priority)
  return designated_root_priority_;
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::set_allocated_designated_root_priority(::ywrapper::UintValue* designated_root_priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(designated_root_priority_);
  }
  if (designated_root_priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      designated_root_priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, designated_root_priority, submessage_arena);
    }
    
  } else {
    
  }
  designated_root_priority_ = designated_root_priority;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.designated_root_priority)
}

// .ywrapper.UintValue forward_transisitions = 358824040 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/forward-transisitions"];
inline bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::has_forward_transisitions() const {
  return this != internal_default_instance() && forward_transisitions_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::forward_transisitions() const {
  const ::ywrapper::UintValue* p = forward_transisitions_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.forward_transisitions)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::release_forward_transisitions() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.forward_transisitions)
  
  ::ywrapper::UintValue* temp = forward_transisitions_;
  forward_transisitions_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::mutable_forward_transisitions() {
  
  if (forward_transisitions_ == NULL) {
    forward_transisitions_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.forward_transisitions)
  return forward_transisitions_;
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::set_allocated_forward_transisitions(::ywrapper::UintValue* forward_transisitions) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(forward_transisitions_);
  }
  if (forward_transisitions) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      forward_transisitions = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, forward_transisitions, submessage_arena);
    }
    
  } else {
    
  }
  forward_transisitions_ = forward_transisitions;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.forward_transisitions)
}

// .ywrapper.StringValue name = 294895429 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/name"];
inline bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.name)
  return name_;
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.name)
}

// .ywrapper.UintValue port_num = 485847738 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/port-num"];
inline bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::has_port_num() const {
  return this != internal_default_instance() && port_num_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::port_num() const {
  const ::ywrapper::UintValue* p = port_num_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.port_num)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::release_port_num() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.port_num)
  
  ::ywrapper::UintValue* temp = port_num_;
  port_num_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::mutable_port_num() {
  
  if (port_num_ == NULL) {
    port_num_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.port_num)
  return port_num_;
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::set_allocated_port_num(::ywrapper::UintValue* port_num) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(port_num_);
  }
  if (port_num) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      port_num = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, port_num, submessage_arena);
    }
    
  } else {
    
  }
  port_num_ = port_num;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.port_num)
}

// .ywrapper.UintValue port_priority = 32672910 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/port-priority"];
inline bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::has_port_priority() const {
  return this != internal_default_instance() && port_priority_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::port_priority() const {
  const ::ywrapper::UintValue* p = port_priority_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.port_priority)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::release_port_priority() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.port_priority)
  
  ::ywrapper::UintValue* temp = port_priority_;
  port_priority_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::mutable_port_priority() {
  
  if (port_priority_ == NULL) {
    port_priority_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.port_priority)
  return port_priority_;
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::set_allocated_port_priority(::ywrapper::UintValue* port_priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(port_priority_);
  }
  if (port_priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      port_priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, port_priority, submessage_arena);
    }
    
  } else {
    
  }
  port_priority_ = port_priority;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.port_priority)
}

// .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTSTATE port_state = 253637881 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/port-state"];
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::clear_port_state() {
  port_state_ = 0;
}
inline ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTSTATE Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::port_state() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.port_state)
  return static_cast< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTSTATE >(port_state_);
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::set_port_state(::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTSTATE value) {
  
  port_state_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.port_state)
}

// .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTROLE role = 293381284 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state/role"];
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::clear_role() {
  role_ = 0;
}
inline ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTROLE Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::role() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.role)
  return static_cast< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTROLE >(role_);
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State::set_role(::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTROLE value) {
  
  role_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State.role)
}

// -------------------------------------------------------------------

// Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface

// .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.Config config = 499171864 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/config"];
inline bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config& Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::config() const {
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config*>(
      &::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.config)
  
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.config)
  return config_;
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::set_allocated_config(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.config)
}

// .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.State state = 135114417 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/state"];
inline bool Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State& Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::state() const {
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State*>(
      &::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.state)
  
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State* Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.state)
  return state_;
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface::set_allocated_state(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface.state)
}

// -------------------------------------------------------------------

// Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey

// string name = 1 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface/name"];
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::name() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey.name)
  return name_.GetNoArena();
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey.name)
}
#if LANG_CXX11
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey.name)
}
#endif
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey.name)
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey.name)
}
inline ::std::string* Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey.name)
}

// .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.Interface interface = 2;
inline bool Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::has_interface() const {
  return this != internal_default_instance() && interface_ != NULL;
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::clear_interface() {
  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface& Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::interface() const {
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface* p = interface_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey.interface)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface*>(
      &::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface* Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::release_interface() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey.interface)
  
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface* temp = interface_;
  interface_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface* Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::mutable_interface() {
  
  if (interface_ == NULL) {
    interface_ = new ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey.interface)
  return interface_;
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey::set_allocated_interface(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_Interface* interface) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete interface_;
  }
  if (interface) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interface = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interface, submessage_arena);
    }
    
  } else {
    
  }
  interface_ = interface;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey.interface)
}

// -------------------------------------------------------------------

// Stp_Mstp_MstInstances_MstInstance_Interfaces

// repeated .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.InterfaceKey interface = 83031303 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces/interface"];
inline int Stp_Mstp_MstInstances_MstInstance_Interfaces::interface_size() const {
  return interface_.size();
}
inline void Stp_Mstp_MstInstances_MstInstance_Interfaces::clear_interface() {
  interface_.Clear();
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey& Stp_Mstp_MstInstances_MstInstance_Interfaces::interface(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.interface)
  return interface_.Get(index);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey* Stp_Mstp_MstInstances_MstInstance_Interfaces::mutable_interface(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.interface)
  return interface_.Mutable(index);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey* Stp_Mstp_MstInstances_MstInstance_Interfaces::add_interface() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.interface)
  return interface_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey >*
Stp_Mstp_MstInstances_MstInstance_Interfaces::mutable_interface() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.interface)
  return &interface_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces_InterfaceKey >&
Stp_Mstp_MstInstances_MstInstance_Interfaces::interface() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces.interface)
  return interface_;
}

// -------------------------------------------------------------------

// Stp_Mstp_MstInstances_MstInstance_State_VlanUnion

// string vlan_string = 26258314;
inline void Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::clear_vlan_string() {
  vlan_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::vlan_string() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion.vlan_string)
  return vlan_string_.GetNoArena();
}
inline void Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::set_vlan_string(const ::std::string& value) {
  
  vlan_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion.vlan_string)
}
#if LANG_CXX11
inline void Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::set_vlan_string(::std::string&& value) {
  
  vlan_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion.vlan_string)
}
#endif
inline void Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::set_vlan_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  vlan_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion.vlan_string)
}
inline void Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::set_vlan_string(const char* value, size_t size) {
  
  vlan_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion.vlan_string)
}
inline ::std::string* Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::mutable_vlan_string() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion.vlan_string)
  return vlan_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::release_vlan_string() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion.vlan_string)
  
  return vlan_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::set_allocated_vlan_string(::std::string* vlan_string) {
  if (vlan_string != NULL) {
    
  } else {
    
  }
  vlan_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vlan_string);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion.vlan_string)
}

// uint64 vlan_uint64 = 405247499;
inline void Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::clear_vlan_uint64() {
  vlan_uint64_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::vlan_uint64() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion.vlan_uint64)
  return vlan_uint64_;
}
inline void Stp_Mstp_MstInstances_MstInstance_State_VlanUnion::set_vlan_uint64(::google::protobuf::uint64 value) {
  
  vlan_uint64_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion.vlan_uint64)
}

// -------------------------------------------------------------------

// Stp_Mstp_MstInstances_MstInstance_State

// .ywrapper.StringValue bridge_address = 520205789 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/bridge-address"];
inline bool Stp_Mstp_MstInstances_MstInstance_State::has_bridge_address() const {
  return this != internal_default_instance() && bridge_address_ != NULL;
}
inline const ::ywrapper::StringValue& Stp_Mstp_MstInstances_MstInstance_State::bridge_address() const {
  const ::ywrapper::StringValue* p = bridge_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.bridge_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Stp_Mstp_MstInstances_MstInstance_State::release_bridge_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.bridge_address)
  
  ::ywrapper::StringValue* temp = bridge_address_;
  bridge_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Stp_Mstp_MstInstances_MstInstance_State::mutable_bridge_address() {
  
  if (bridge_address_ == NULL) {
    bridge_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.bridge_address)
  return bridge_address_;
}
inline void Stp_Mstp_MstInstances_MstInstance_State::set_allocated_bridge_address(::ywrapper::StringValue* bridge_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bridge_address_);
  }
  if (bridge_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bridge_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bridge_address, submessage_arena);
    }
    
  } else {
    
  }
  bridge_address_ = bridge_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.bridge_address)
}

// .ywrapper.UintValue bridge_priority = 352871151 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/bridge-priority"];
inline bool Stp_Mstp_MstInstances_MstInstance_State::has_bridge_priority() const {
  return this != internal_default_instance() && bridge_priority_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_MstInstances_MstInstance_State::bridge_priority() const {
  const ::ywrapper::UintValue* p = bridge_priority_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.bridge_priority)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_State::release_bridge_priority() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.bridge_priority)
  
  ::ywrapper::UintValue* temp = bridge_priority_;
  bridge_priority_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_State::mutable_bridge_priority() {
  
  if (bridge_priority_ == NULL) {
    bridge_priority_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.bridge_priority)
  return bridge_priority_;
}
inline void Stp_Mstp_MstInstances_MstInstance_State::set_allocated_bridge_priority(::ywrapper::UintValue* bridge_priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bridge_priority_);
  }
  if (bridge_priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bridge_priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bridge_priority, submessage_arena);
    }
    
  } else {
    
  }
  bridge_priority_ = bridge_priority;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.bridge_priority)
}

// .ywrapper.StringValue designated_root_address = 57983091 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/designated-root-address"];
inline bool Stp_Mstp_MstInstances_MstInstance_State::has_designated_root_address() const {
  return this != internal_default_instance() && designated_root_address_ != NULL;
}
inline const ::ywrapper::StringValue& Stp_Mstp_MstInstances_MstInstance_State::designated_root_address() const {
  const ::ywrapper::StringValue* p = designated_root_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.designated_root_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Stp_Mstp_MstInstances_MstInstance_State::release_designated_root_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.designated_root_address)
  
  ::ywrapper::StringValue* temp = designated_root_address_;
  designated_root_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Stp_Mstp_MstInstances_MstInstance_State::mutable_designated_root_address() {
  
  if (designated_root_address_ == NULL) {
    designated_root_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.designated_root_address)
  return designated_root_address_;
}
inline void Stp_Mstp_MstInstances_MstInstance_State::set_allocated_designated_root_address(::ywrapper::StringValue* designated_root_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(designated_root_address_);
  }
  if (designated_root_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      designated_root_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, designated_root_address, submessage_arena);
    }
    
  } else {
    
  }
  designated_root_address_ = designated_root_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.designated_root_address)
}

// .ywrapper.UintValue designated_root_priority = 351428737 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/designated-root-priority"];
inline bool Stp_Mstp_MstInstances_MstInstance_State::has_designated_root_priority() const {
  return this != internal_default_instance() && designated_root_priority_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_MstInstances_MstInstance_State::designated_root_priority() const {
  const ::ywrapper::UintValue* p = designated_root_priority_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.designated_root_priority)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_State::release_designated_root_priority() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.designated_root_priority)
  
  ::ywrapper::UintValue* temp = designated_root_priority_;
  designated_root_priority_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_State::mutable_designated_root_priority() {
  
  if (designated_root_priority_ == NULL) {
    designated_root_priority_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.designated_root_priority)
  return designated_root_priority_;
}
inline void Stp_Mstp_MstInstances_MstInstance_State::set_allocated_designated_root_priority(::ywrapper::UintValue* designated_root_priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(designated_root_priority_);
  }
  if (designated_root_priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      designated_root_priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, designated_root_priority, submessage_arena);
    }
    
  } else {
    
  }
  designated_root_priority_ = designated_root_priority;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.designated_root_priority)
}

// .ywrapper.UintValue hold_time = 318764568 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/hold-time"];
inline bool Stp_Mstp_MstInstances_MstInstance_State::has_hold_time() const {
  return this != internal_default_instance() && hold_time_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_MstInstances_MstInstance_State::hold_time() const {
  const ::ywrapper::UintValue* p = hold_time_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.hold_time)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_State::release_hold_time() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.hold_time)
  
  ::ywrapper::UintValue* temp = hold_time_;
  hold_time_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_State::mutable_hold_time() {
  
  if (hold_time_ == NULL) {
    hold_time_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.hold_time)
  return hold_time_;
}
inline void Stp_Mstp_MstInstances_MstInstance_State::set_allocated_hold_time(::ywrapper::UintValue* hold_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hold_time_);
  }
  if (hold_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hold_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hold_time, submessage_arena);
    }
    
  } else {
    
  }
  hold_time_ = hold_time;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.hold_time)
}

// .ywrapper.UintValue mst_id = 408675299 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/mst-id"];
inline bool Stp_Mstp_MstInstances_MstInstance_State::has_mst_id() const {
  return this != internal_default_instance() && mst_id_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_MstInstances_MstInstance_State::mst_id() const {
  const ::ywrapper::UintValue* p = mst_id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.mst_id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_State::release_mst_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.mst_id)
  
  ::ywrapper::UintValue* temp = mst_id_;
  mst_id_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_State::mutable_mst_id() {
  
  if (mst_id_ == NULL) {
    mst_id_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.mst_id)
  return mst_id_;
}
inline void Stp_Mstp_MstInstances_MstInstance_State::set_allocated_mst_id(::ywrapper::UintValue* mst_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(mst_id_);
  }
  if (mst_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mst_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mst_id, submessage_arena);
    }
    
  } else {
    
  }
  mst_id_ = mst_id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.mst_id)
}

// .ywrapper.UintValue root_cost = 305061753 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/root-cost"];
inline bool Stp_Mstp_MstInstances_MstInstance_State::has_root_cost() const {
  return this != internal_default_instance() && root_cost_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_MstInstances_MstInstance_State::root_cost() const {
  const ::ywrapper::UintValue* p = root_cost_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.root_cost)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_State::release_root_cost() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.root_cost)
  
  ::ywrapper::UintValue* temp = root_cost_;
  root_cost_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_State::mutable_root_cost() {
  
  if (root_cost_ == NULL) {
    root_cost_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.root_cost)
  return root_cost_;
}
inline void Stp_Mstp_MstInstances_MstInstance_State::set_allocated_root_cost(::ywrapper::UintValue* root_cost) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(root_cost_);
  }
  if (root_cost) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      root_cost = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, root_cost, submessage_arena);
    }
    
  } else {
    
  }
  root_cost_ = root_cost;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.root_cost)
}

// .ywrapper.UintValue root_port = 397337255 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/root-port"];
inline bool Stp_Mstp_MstInstances_MstInstance_State::has_root_port() const {
  return this != internal_default_instance() && root_port_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_MstInstances_MstInstance_State::root_port() const {
  const ::ywrapper::UintValue* p = root_port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.root_port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_State::release_root_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.root_port)
  
  ::ywrapper::UintValue* temp = root_port_;
  root_port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_State::mutable_root_port() {
  
  if (root_port_ == NULL) {
    root_port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.root_port)
  return root_port_;
}
inline void Stp_Mstp_MstInstances_MstInstance_State::set_allocated_root_port(::ywrapper::UintValue* root_port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(root_port_);
  }
  if (root_port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      root_port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, root_port, submessage_arena);
    }
    
  } else {
    
  }
  root_port_ = root_port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.root_port)
}

// .ywrapper.UintValue time_since_topology_change = 439704716 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/time-since-topology-change"];
inline bool Stp_Mstp_MstInstances_MstInstance_State::has_time_since_topology_change() const {
  return this != internal_default_instance() && time_since_topology_change_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_MstInstances_MstInstance_State::time_since_topology_change() const {
  const ::ywrapper::UintValue* p = time_since_topology_change_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.time_since_topology_change)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_State::release_time_since_topology_change() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.time_since_topology_change)
  
  ::ywrapper::UintValue* temp = time_since_topology_change_;
  time_since_topology_change_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_State::mutable_time_since_topology_change() {
  
  if (time_since_topology_change_ == NULL) {
    time_since_topology_change_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.time_since_topology_change)
  return time_since_topology_change_;
}
inline void Stp_Mstp_MstInstances_MstInstance_State::set_allocated_time_since_topology_change(::ywrapper::UintValue* time_since_topology_change) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(time_since_topology_change_);
  }
  if (time_since_topology_change) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      time_since_topology_change = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time_since_topology_change, submessage_arena);
    }
    
  } else {
    
  }
  time_since_topology_change_ = time_since_topology_change;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.time_since_topology_change)
}

// .ywrapper.UintValue topology_changes = 318857962 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/topology-changes"];
inline bool Stp_Mstp_MstInstances_MstInstance_State::has_topology_changes() const {
  return this != internal_default_instance() && topology_changes_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_MstInstances_MstInstance_State::topology_changes() const {
  const ::ywrapper::UintValue* p = topology_changes_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.topology_changes)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_State::release_topology_changes() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.topology_changes)
  
  ::ywrapper::UintValue* temp = topology_changes_;
  topology_changes_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_MstInstances_MstInstance_State::mutable_topology_changes() {
  
  if (topology_changes_ == NULL) {
    topology_changes_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.topology_changes)
  return topology_changes_;
}
inline void Stp_Mstp_MstInstances_MstInstance_State::set_allocated_topology_changes(::ywrapper::UintValue* topology_changes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(topology_changes_);
  }
  if (topology_changes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      topology_changes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, topology_changes, submessage_arena);
    }
    
  } else {
    
  }
  topology_changes_ = topology_changes;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.topology_changes)
}

// repeated .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.VlanUnion vlan = 175421410 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state/vlan"];
inline int Stp_Mstp_MstInstances_MstInstance_State::vlan_size() const {
  return vlan_.size();
}
inline void Stp_Mstp_MstInstances_MstInstance_State::clear_vlan() {
  vlan_.Clear();
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State_VlanUnion& Stp_Mstp_MstInstances_MstInstance_State::vlan(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.vlan)
  return vlan_.Get(index);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State_VlanUnion* Stp_Mstp_MstInstances_MstInstance_State::mutable_vlan(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.vlan)
  return vlan_.Mutable(index);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State_VlanUnion* Stp_Mstp_MstInstances_MstInstance_State::add_vlan() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.vlan)
  return vlan_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State_VlanUnion >*
Stp_Mstp_MstInstances_MstInstance_State::mutable_vlan() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.vlan)
  return &vlan_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State_VlanUnion >&
Stp_Mstp_MstInstances_MstInstance_State::vlan() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State.vlan)
  return vlan_;
}

// -------------------------------------------------------------------

// Stp_Mstp_MstInstances_MstInstance

// .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Config config = 472762393 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/config"];
inline bool Stp_Mstp_MstInstances_MstInstance::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Stp_Mstp_MstInstances_MstInstance::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config& Stp_Mstp_MstInstances_MstInstance::config() const {
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config*>(
      &::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Config_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config* Stp_Mstp_MstInstances_MstInstance::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.config)
  
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config* Stp_Mstp_MstInstances_MstInstance::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.config)
  return config_;
}
inline void Stp_Mstp_MstInstances_MstInstance::set_allocated_config(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.config)
}

// .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.Interfaces interfaces = 491215479 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/interfaces"];
inline bool Stp_Mstp_MstInstances_MstInstance::has_interfaces() const {
  return this != internal_default_instance() && interfaces_ != NULL;
}
inline void Stp_Mstp_MstInstances_MstInstance::clear_interfaces() {
  if (GetArenaNoVirtual() == NULL && interfaces_ != NULL) {
    delete interfaces_;
  }
  interfaces_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces& Stp_Mstp_MstInstances_MstInstance::interfaces() const {
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces* p = interfaces_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.interfaces)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces*>(
      &::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_Interfaces_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces* Stp_Mstp_MstInstances_MstInstance::release_interfaces() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.interfaces)
  
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces* temp = interfaces_;
  interfaces_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces* Stp_Mstp_MstInstances_MstInstance::mutable_interfaces() {
  
  if (interfaces_ == NULL) {
    interfaces_ = new ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.interfaces)
  return interfaces_;
}
inline void Stp_Mstp_MstInstances_MstInstance::set_allocated_interfaces(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_Interfaces* interfaces) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete interfaces_;
  }
  if (interfaces) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interfaces = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interfaces, submessage_arena);
    }
    
  } else {
    
  }
  interfaces_ = interfaces;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.interfaces)
}

// .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.State state = 317664238 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/state"];
inline bool Stp_Mstp_MstInstances_MstInstance::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Stp_Mstp_MstInstances_MstInstance::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State& Stp_Mstp_MstInstances_MstInstance::state() const {
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State*>(
      &::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_State_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State* Stp_Mstp_MstInstances_MstInstance::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.state)
  
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State* Stp_Mstp_MstInstances_MstInstance::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.state)
  return state_;
}
inline void Stp_Mstp_MstInstances_MstInstance::set_allocated_state(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance.state)
}

// -------------------------------------------------------------------

// Stp_Mstp_MstInstances_MstInstanceKey

// uint64 mst_id = 1 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance/mst-id"];
inline void Stp_Mstp_MstInstances_MstInstanceKey::clear_mst_id() {
  mst_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Stp_Mstp_MstInstances_MstInstanceKey::mst_id() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey.mst_id)
  return mst_id_;
}
inline void Stp_Mstp_MstInstances_MstInstanceKey::set_mst_id(::google::protobuf::uint64 value) {
  
  mst_id_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey.mst_id)
}

// .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstance mst_instance = 2;
inline bool Stp_Mstp_MstInstances_MstInstanceKey::has_mst_instance() const {
  return this != internal_default_instance() && mst_instance_ != NULL;
}
inline void Stp_Mstp_MstInstances_MstInstanceKey::clear_mst_instance() {
  if (GetArenaNoVirtual() == NULL && mst_instance_ != NULL) {
    delete mst_instance_;
  }
  mst_instance_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance& Stp_Mstp_MstInstances_MstInstanceKey::mst_instance() const {
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance* p = mst_instance_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey.mst_instance)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance*>(
      &::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_MstInstance_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance* Stp_Mstp_MstInstances_MstInstanceKey::release_mst_instance() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey.mst_instance)
  
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance* temp = mst_instance_;
  mst_instance_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance* Stp_Mstp_MstInstances_MstInstanceKey::mutable_mst_instance() {
  
  if (mst_instance_ == NULL) {
    mst_instance_ = new ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey.mst_instance)
  return mst_instance_;
}
inline void Stp_Mstp_MstInstances_MstInstanceKey::set_allocated_mst_instance(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstance* mst_instance) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete mst_instance_;
  }
  if (mst_instance) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mst_instance = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mst_instance, submessage_arena);
    }
    
  } else {
    
  }
  mst_instance_ = mst_instance;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey.mst_instance)
}

// -------------------------------------------------------------------

// Stp_Mstp_MstInstances

// repeated .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.MstInstanceKey mst_instance = 497343892 [(.yext.schemapath) = "/stp/mstp/mst-instances/mst-instance"];
inline int Stp_Mstp_MstInstances::mst_instance_size() const {
  return mst_instance_.size();
}
inline void Stp_Mstp_MstInstances::clear_mst_instance() {
  mst_instance_.Clear();
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstanceKey& Stp_Mstp_MstInstances::mst_instance(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.mst_instance)
  return mst_instance_.Get(index);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstanceKey* Stp_Mstp_MstInstances::mutable_mst_instance(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.mst_instance)
  return mst_instance_.Mutable(index);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstanceKey* Stp_Mstp_MstInstances::add_mst_instance() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.mst_instance)
  return mst_instance_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstanceKey >*
Stp_Mstp_MstInstances::mutable_mst_instance() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.mst_instance)
  return &mst_instance_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances_MstInstanceKey >&
Stp_Mstp_MstInstances::mst_instance() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances.mst_instance)
  return mst_instance_;
}

// -------------------------------------------------------------------

// Stp_Mstp_State

// .ywrapper.UintValue forwarding_delay = 512660443 [(.yext.schemapath) = "/stp/mstp/state/forwarding-delay"];
inline bool Stp_Mstp_State::has_forwarding_delay() const {
  return this != internal_default_instance() && forwarding_delay_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_State::forwarding_delay() const {
  const ::ywrapper::UintValue* p = forwarding_delay_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.State.forwarding_delay)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_State::release_forwarding_delay() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.State.forwarding_delay)
  
  ::ywrapper::UintValue* temp = forwarding_delay_;
  forwarding_delay_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_State::mutable_forwarding_delay() {
  
  if (forwarding_delay_ == NULL) {
    forwarding_delay_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.State.forwarding_delay)
  return forwarding_delay_;
}
inline void Stp_Mstp_State::set_allocated_forwarding_delay(::ywrapper::UintValue* forwarding_delay) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(forwarding_delay_);
  }
  if (forwarding_delay) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      forwarding_delay = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, forwarding_delay, submessage_arena);
    }
    
  } else {
    
  }
  forwarding_delay_ = forwarding_delay;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.State.forwarding_delay)
}

// .ywrapper.UintValue hello_time = 519125574 [(.yext.schemapath) = "/stp/mstp/state/hello-time"];
inline bool Stp_Mstp_State::has_hello_time() const {
  return this != internal_default_instance() && hello_time_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_State::hello_time() const {
  const ::ywrapper::UintValue* p = hello_time_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.State.hello_time)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_State::release_hello_time() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.State.hello_time)
  
  ::ywrapper::UintValue* temp = hello_time_;
  hello_time_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_State::mutable_hello_time() {
  
  if (hello_time_ == NULL) {
    hello_time_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.State.hello_time)
  return hello_time_;
}
inline void Stp_Mstp_State::set_allocated_hello_time(::ywrapper::UintValue* hello_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hello_time_);
  }
  if (hello_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hello_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hello_time, submessage_arena);
    }
    
  } else {
    
  }
  hello_time_ = hello_time;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.State.hello_time)
}

// .ywrapper.UintValue hold_count = 109158353 [(.yext.schemapath) = "/stp/mstp/state/hold-count"];
inline bool Stp_Mstp_State::has_hold_count() const {
  return this != internal_default_instance() && hold_count_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_State::hold_count() const {
  const ::ywrapper::UintValue* p = hold_count_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.State.hold_count)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_State::release_hold_count() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.State.hold_count)
  
  ::ywrapper::UintValue* temp = hold_count_;
  hold_count_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_State::mutable_hold_count() {
  
  if (hold_count_ == NULL) {
    hold_count_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.State.hold_count)
  return hold_count_;
}
inline void Stp_Mstp_State::set_allocated_hold_count(::ywrapper::UintValue* hold_count) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hold_count_);
  }
  if (hold_count) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hold_count = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hold_count, submessage_arena);
    }
    
  } else {
    
  }
  hold_count_ = hold_count;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.State.hold_count)
}

// .ywrapper.UintValue max_age = 517220060 [(.yext.schemapath) = "/stp/mstp/state/max-age"];
inline bool Stp_Mstp_State::has_max_age() const {
  return this != internal_default_instance() && max_age_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_State::max_age() const {
  const ::ywrapper::UintValue* p = max_age_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.State.max_age)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_State::release_max_age() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.State.max_age)
  
  ::ywrapper::UintValue* temp = max_age_;
  max_age_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_State::mutable_max_age() {
  
  if (max_age_ == NULL) {
    max_age_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.State.max_age)
  return max_age_;
}
inline void Stp_Mstp_State::set_allocated_max_age(::ywrapper::UintValue* max_age) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_age_);
  }
  if (max_age) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max_age = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max_age, submessage_arena);
    }
    
  } else {
    
  }
  max_age_ = max_age;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.State.max_age)
}

// .ywrapper.UintValue max_hop = 113450208 [(.yext.schemapath) = "/stp/mstp/state/max-hop"];
inline bool Stp_Mstp_State::has_max_hop() const {
  return this != internal_default_instance() && max_hop_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_State::max_hop() const {
  const ::ywrapper::UintValue* p = max_hop_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.State.max_hop)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_State::release_max_hop() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.State.max_hop)
  
  ::ywrapper::UintValue* temp = max_hop_;
  max_hop_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_State::mutable_max_hop() {
  
  if (max_hop_ == NULL) {
    max_hop_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.State.max_hop)
  return max_hop_;
}
inline void Stp_Mstp_State::set_allocated_max_hop(::ywrapper::UintValue* max_hop) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_hop_);
  }
  if (max_hop) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max_hop = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max_hop, submessage_arena);
    }
    
  } else {
    
  }
  max_hop_ = max_hop;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.State.max_hop)
}

// .ywrapper.StringValue name = 362119781 [(.yext.schemapath) = "/stp/mstp/state/name"];
inline bool Stp_Mstp_State::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& Stp_Mstp_State::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.State.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Stp_Mstp_State::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.State.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Stp_Mstp_State::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.State.name)
  return name_;
}
inline void Stp_Mstp_State::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.State.name)
}

// .ywrapper.UintValue revision = 426296947 [(.yext.schemapath) = "/stp/mstp/state/revision"];
inline bool Stp_Mstp_State::has_revision() const {
  return this != internal_default_instance() && revision_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Mstp_State::revision() const {
  const ::ywrapper::UintValue* p = revision_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.State.revision)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Mstp_State::release_revision() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.State.revision)
  
  ::ywrapper::UintValue* temp = revision_;
  revision_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Mstp_State::mutable_revision() {
  
  if (revision_ == NULL) {
    revision_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.State.revision)
  return revision_;
}
inline void Stp_Mstp_State::set_allocated_revision(::ywrapper::UintValue* revision) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(revision_);
  }
  if (revision) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      revision = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, revision, submessage_arena);
    }
    
  } else {
    
  }
  revision_ = revision;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.State.revision)
}

// -------------------------------------------------------------------

// Stp_Mstp

// .openconfig.openconfig_spanning_tree.Stp.Mstp.Config config = 362267192 [(.yext.schemapath) = "/stp/mstp/config"];
inline bool Stp_Mstp::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Stp_Mstp::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Mstp_Config& Stp_Mstp::config() const {
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_Mstp_Config*>(
      &::openconfig::openconfig_spanning_tree::_Stp_Mstp_Config_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_Config* Stp_Mstp::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.config)
  
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_Config* Stp_Mstp::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_spanning_tree::Stp_Mstp_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.config)
  return config_;
}
inline void Stp_Mstp::set_allocated_config(::openconfig::openconfig_spanning_tree::Stp_Mstp_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.config)
}

// .openconfig.openconfig_spanning_tree.Stp.Mstp.MstInstances mst_instances = 72798773 [(.yext.schemapath) = "/stp/mstp/mst-instances"];
inline bool Stp_Mstp::has_mst_instances() const {
  return this != internal_default_instance() && mst_instances_ != NULL;
}
inline void Stp_Mstp::clear_mst_instances() {
  if (GetArenaNoVirtual() == NULL && mst_instances_ != NULL) {
    delete mst_instances_;
  }
  mst_instances_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances& Stp_Mstp::mst_instances() const {
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances* p = mst_instances_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.mst_instances)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances*>(
      &::openconfig::openconfig_spanning_tree::_Stp_Mstp_MstInstances_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances* Stp_Mstp::release_mst_instances() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.mst_instances)
  
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances* temp = mst_instances_;
  mst_instances_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances* Stp_Mstp::mutable_mst_instances() {
  
  if (mst_instances_ == NULL) {
    mst_instances_ = new ::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.mst_instances)
  return mst_instances_;
}
inline void Stp_Mstp::set_allocated_mst_instances(::openconfig::openconfig_spanning_tree::Stp_Mstp_MstInstances* mst_instances) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete mst_instances_;
  }
  if (mst_instances) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mst_instances = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mst_instances, submessage_arena);
    }
    
  } else {
    
  }
  mst_instances_ = mst_instances;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.mst_instances)
}

// .openconfig.openconfig_spanning_tree.Stp.Mstp.State state = 419352913 [(.yext.schemapath) = "/stp/mstp/state"];
inline bool Stp_Mstp::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Stp_Mstp::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Mstp_State& Stp_Mstp::state() const {
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Mstp.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_Mstp_State*>(
      &::openconfig::openconfig_spanning_tree::_Stp_Mstp_State_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_State* Stp_Mstp::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Mstp.state)
  
  ::openconfig::openconfig_spanning_tree::Stp_Mstp_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp_State* Stp_Mstp::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_spanning_tree::Stp_Mstp_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Mstp.state)
  return state_;
}
inline void Stp_Mstp::set_allocated_state(::openconfig::openconfig_spanning_tree::Stp_Mstp_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Mstp.state)
}

// -------------------------------------------------------------------

// Stp_RapidPvst_Vlan_Config

// .ywrapper.UintValue bridge_priority = 77791083 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/bridge-priority"];
inline bool Stp_RapidPvst_Vlan_Config::has_bridge_priority() const {
  return this != internal_default_instance() && bridge_priority_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_Config::bridge_priority() const {
  const ::ywrapper::UintValue* p = bridge_priority_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config.bridge_priority)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Config::release_bridge_priority() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config.bridge_priority)
  
  ::ywrapper::UintValue* temp = bridge_priority_;
  bridge_priority_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Config::mutable_bridge_priority() {
  
  if (bridge_priority_ == NULL) {
    bridge_priority_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config.bridge_priority)
  return bridge_priority_;
}
inline void Stp_RapidPvst_Vlan_Config::set_allocated_bridge_priority(::ywrapper::UintValue* bridge_priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bridge_priority_);
  }
  if (bridge_priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bridge_priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bridge_priority, submessage_arena);
    }
    
  } else {
    
  }
  bridge_priority_ = bridge_priority;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config.bridge_priority)
}

// .ywrapper.UintValue forwarding_delay = 71214714 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/forwarding-delay"];
inline bool Stp_RapidPvst_Vlan_Config::has_forwarding_delay() const {
  return this != internal_default_instance() && forwarding_delay_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_Config::forwarding_delay() const {
  const ::ywrapper::UintValue* p = forwarding_delay_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config.forwarding_delay)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Config::release_forwarding_delay() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config.forwarding_delay)
  
  ::ywrapper::UintValue* temp = forwarding_delay_;
  forwarding_delay_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Config::mutable_forwarding_delay() {
  
  if (forwarding_delay_ == NULL) {
    forwarding_delay_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config.forwarding_delay)
  return forwarding_delay_;
}
inline void Stp_RapidPvst_Vlan_Config::set_allocated_forwarding_delay(::ywrapper::UintValue* forwarding_delay) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(forwarding_delay_);
  }
  if (forwarding_delay) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      forwarding_delay = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, forwarding_delay, submessage_arena);
    }
    
  } else {
    
  }
  forwarding_delay_ = forwarding_delay;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config.forwarding_delay)
}

// .ywrapper.UintValue hello_time = 413699279 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/hello-time"];
inline bool Stp_RapidPvst_Vlan_Config::has_hello_time() const {
  return this != internal_default_instance() && hello_time_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_Config::hello_time() const {
  const ::ywrapper::UintValue* p = hello_time_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config.hello_time)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Config::release_hello_time() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config.hello_time)
  
  ::ywrapper::UintValue* temp = hello_time_;
  hello_time_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Config::mutable_hello_time() {
  
  if (hello_time_ == NULL) {
    hello_time_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config.hello_time)
  return hello_time_;
}
inline void Stp_RapidPvst_Vlan_Config::set_allocated_hello_time(::ywrapper::UintValue* hello_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hello_time_);
  }
  if (hello_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hello_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hello_time, submessage_arena);
    }
    
  } else {
    
  }
  hello_time_ = hello_time;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config.hello_time)
}

// .ywrapper.UintValue hold_count = 247466364 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/hold-count"];
inline bool Stp_RapidPvst_Vlan_Config::has_hold_count() const {
  return this != internal_default_instance() && hold_count_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_Config::hold_count() const {
  const ::ywrapper::UintValue* p = hold_count_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config.hold_count)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Config::release_hold_count() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config.hold_count)
  
  ::ywrapper::UintValue* temp = hold_count_;
  hold_count_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Config::mutable_hold_count() {
  
  if (hold_count_ == NULL) {
    hold_count_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config.hold_count)
  return hold_count_;
}
inline void Stp_RapidPvst_Vlan_Config::set_allocated_hold_count(::ywrapper::UintValue* hold_count) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hold_count_);
  }
  if (hold_count) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hold_count = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hold_count, submessage_arena);
    }
    
  } else {
    
  }
  hold_count_ = hold_count;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config.hold_count)
}

// .ywrapper.UintValue max_age = 244952871 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/max-age"];
inline bool Stp_RapidPvst_Vlan_Config::has_max_age() const {
  return this != internal_default_instance() && max_age_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_Config::max_age() const {
  const ::ywrapper::UintValue* p = max_age_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config.max_age)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Config::release_max_age() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config.max_age)
  
  ::ywrapper::UintValue* temp = max_age_;
  max_age_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Config::mutable_max_age() {
  
  if (max_age_ == NULL) {
    max_age_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config.max_age)
  return max_age_;
}
inline void Stp_RapidPvst_Vlan_Config::set_allocated_max_age(::ywrapper::UintValue* max_age) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_age_);
  }
  if (max_age) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max_age = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max_age, submessage_arena);
    }
    
  } else {
    
  }
  max_age_ = max_age;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config.max_age)
}

// .ywrapper.UintValue vlan_id = 512435536 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config/vlan-id"];
inline bool Stp_RapidPvst_Vlan_Config::has_vlan_id() const {
  return this != internal_default_instance() && vlan_id_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_Config::vlan_id() const {
  const ::ywrapper::UintValue* p = vlan_id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config.vlan_id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Config::release_vlan_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config.vlan_id)
  
  ::ywrapper::UintValue* temp = vlan_id_;
  vlan_id_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Config::mutable_vlan_id() {
  
  if (vlan_id_ == NULL) {
    vlan_id_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config.vlan_id)
  return vlan_id_;
}
inline void Stp_RapidPvst_Vlan_Config::set_allocated_vlan_id(::ywrapper::UintValue* vlan_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(vlan_id_);
  }
  if (vlan_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vlan_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vlan_id, submessage_arena);
    }
    
  } else {
    
  }
  vlan_id_ = vlan_id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config.vlan_id)
}

// -------------------------------------------------------------------

// Stp_RapidPvst_Vlan_Interfaces_Interface_Config

// .ywrapper.UintValue cost = 112934615 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/config/cost"];
inline bool Stp_RapidPvst_Vlan_Interfaces_Interface_Config::has_cost() const {
  return this != internal_default_instance() && cost_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_Interfaces_Interface_Config::cost() const {
  const ::ywrapper::UintValue* p = cost_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config.cost)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Interfaces_Interface_Config::release_cost() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config.cost)
  
  ::ywrapper::UintValue* temp = cost_;
  cost_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Interfaces_Interface_Config::mutable_cost() {
  
  if (cost_ == NULL) {
    cost_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config.cost)
  return cost_;
}
inline void Stp_RapidPvst_Vlan_Interfaces_Interface_Config::set_allocated_cost(::ywrapper::UintValue* cost) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cost_);
  }
  if (cost) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cost = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cost, submessage_arena);
    }
    
  } else {
    
  }
  cost_ = cost;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config.cost)
}

// .ywrapper.StringValue name = 215156497 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/config/name"];
inline bool Stp_RapidPvst_Vlan_Interfaces_Interface_Config::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& Stp_RapidPvst_Vlan_Interfaces_Interface_Config::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Stp_RapidPvst_Vlan_Interfaces_Interface_Config::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Stp_RapidPvst_Vlan_Interfaces_Interface_Config::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config.name)
  return name_;
}
inline void Stp_RapidPvst_Vlan_Interfaces_Interface_Config::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config.name)
}

// .ywrapper.UintValue port_priority = 225996114 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/config/port-priority"];
inline bool Stp_RapidPvst_Vlan_Interfaces_Interface_Config::has_port_priority() const {
  return this != internal_default_instance() && port_priority_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_Interfaces_Interface_Config::port_priority() const {
  const ::ywrapper::UintValue* p = port_priority_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config.port_priority)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Interfaces_Interface_Config::release_port_priority() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config.port_priority)
  
  ::ywrapper::UintValue* temp = port_priority_;
  port_priority_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Interfaces_Interface_Config::mutable_port_priority() {
  
  if (port_priority_ == NULL) {
    port_priority_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config.port_priority)
  return port_priority_;
}
inline void Stp_RapidPvst_Vlan_Interfaces_Interface_Config::set_allocated_port_priority(::ywrapper::UintValue* port_priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(port_priority_);
  }
  if (port_priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      port_priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, port_priority, submessage_arena);
    }
    
  } else {
    
  }
  port_priority_ = port_priority;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config.port_priority)
}

// -------------------------------------------------------------------

// Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters

// .ywrapper.UintValue bpdu_received = 123889350 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/counters/bpdu-received"];
inline bool Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::has_bpdu_received() const {
  return this != internal_default_instance() && bpdu_received_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::bpdu_received() const {
  const ::ywrapper::UintValue* p = bpdu_received_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters.bpdu_received)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::release_bpdu_received() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters.bpdu_received)
  
  ::ywrapper::UintValue* temp = bpdu_received_;
  bpdu_received_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::mutable_bpdu_received() {
  
  if (bpdu_received_ == NULL) {
    bpdu_received_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters.bpdu_received)
  return bpdu_received_;
}
inline void Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::set_allocated_bpdu_received(::ywrapper::UintValue* bpdu_received) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bpdu_received_);
  }
  if (bpdu_received) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bpdu_received = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bpdu_received, submessage_arena);
    }
    
  } else {
    
  }
  bpdu_received_ = bpdu_received;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters.bpdu_received)
}

// .ywrapper.UintValue bpdu_sent = 14257893 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/counters/bpdu-sent"];
inline bool Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::has_bpdu_sent() const {
  return this != internal_default_instance() && bpdu_sent_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::bpdu_sent() const {
  const ::ywrapper::UintValue* p = bpdu_sent_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters.bpdu_sent)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::release_bpdu_sent() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters.bpdu_sent)
  
  ::ywrapper::UintValue* temp = bpdu_sent_;
  bpdu_sent_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::mutable_bpdu_sent() {
  
  if (bpdu_sent_ == NULL) {
    bpdu_sent_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters.bpdu_sent)
  return bpdu_sent_;
}
inline void Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters::set_allocated_bpdu_sent(::ywrapper::UintValue* bpdu_sent) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bpdu_sent_);
  }
  if (bpdu_sent) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bpdu_sent = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bpdu_sent, submessage_arena);
    }
    
  } else {
    
  }
  bpdu_sent_ = bpdu_sent;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters.bpdu_sent)
}

// -------------------------------------------------------------------

// Stp_RapidPvst_Vlan_Interfaces_Interface_State

// .ywrapper.UintValue cost = 389203710 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/cost"];
inline bool Stp_RapidPvst_Vlan_Interfaces_Interface_State::has_cost() const {
  return this != internal_default_instance() && cost_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_Interfaces_Interface_State::cost() const {
  const ::ywrapper::UintValue* p = cost_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.cost)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State::release_cost() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.cost)
  
  ::ywrapper::UintValue* temp = cost_;
  cost_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State::mutable_cost() {
  
  if (cost_ == NULL) {
    cost_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.cost)
  return cost_;
}
inline void Stp_RapidPvst_Vlan_Interfaces_Interface_State::set_allocated_cost(::ywrapper::UintValue* cost) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cost_);
  }
  if (cost) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cost = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cost, submessage_arena);
    }
    
  } else {
    
  }
  cost_ = cost;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.cost)
}

// .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.Counters counters = 259051782 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/counters"];
inline bool Stp_RapidPvst_Vlan_Interfaces_Interface_State::has_counters() const {
  return this != internal_default_instance() && counters_ != NULL;
}
inline void Stp_RapidPvst_Vlan_Interfaces_Interface_State::clear_counters() {
  if (GetArenaNoVirtual() == NULL && counters_ != NULL) {
    delete counters_;
  }
  counters_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters& Stp_RapidPvst_Vlan_Interfaces_Interface_State::counters() const {
  const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters* p = counters_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.counters)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters*>(
      &::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters* Stp_RapidPvst_Vlan_Interfaces_Interface_State::release_counters() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.counters)
  
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters* temp = counters_;
  counters_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters* Stp_RapidPvst_Vlan_Interfaces_Interface_State::mutable_counters() {
  
  if (counters_ == NULL) {
    counters_ = new ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.counters)
  return counters_;
}
inline void Stp_RapidPvst_Vlan_Interfaces_Interface_State::set_allocated_counters(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State_Counters* counters) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete counters_;
  }
  if (counters) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      counters = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, counters, submessage_arena);
    }
    
  } else {
    
  }
  counters_ = counters;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.counters)
}

// .ywrapper.StringValue designated_bridge_address = 285199560 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-bridge-address"];
inline bool Stp_RapidPvst_Vlan_Interfaces_Interface_State::has_designated_bridge_address() const {
  return this != internal_default_instance() && designated_bridge_address_ != NULL;
}
inline const ::ywrapper::StringValue& Stp_RapidPvst_Vlan_Interfaces_Interface_State::designated_bridge_address() const {
  const ::ywrapper::StringValue* p = designated_bridge_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_bridge_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State::release_designated_bridge_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_bridge_address)
  
  ::ywrapper::StringValue* temp = designated_bridge_address_;
  designated_bridge_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State::mutable_designated_bridge_address() {
  
  if (designated_bridge_address_ == NULL) {
    designated_bridge_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_bridge_address)
  return designated_bridge_address_;
}
inline void Stp_RapidPvst_Vlan_Interfaces_Interface_State::set_allocated_designated_bridge_address(::ywrapper::StringValue* designated_bridge_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(designated_bridge_address_);
  }
  if (designated_bridge_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      designated_bridge_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, designated_bridge_address, submessage_arena);
    }
    
  } else {
    
  }
  designated_bridge_address_ = designated_bridge_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_bridge_address)
}

// .ywrapper.UintValue designated_bridge_priority = 487332160 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-bridge-priority"];
inline bool Stp_RapidPvst_Vlan_Interfaces_Interface_State::has_designated_bridge_priority() const {
  return this != internal_default_instance() && designated_bridge_priority_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_Interfaces_Interface_State::designated_bridge_priority() const {
  const ::ywrapper::UintValue* p = designated_bridge_priority_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_bridge_priority)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State::release_designated_bridge_priority() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_bridge_priority)
  
  ::ywrapper::UintValue* temp = designated_bridge_priority_;
  designated_bridge_priority_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State::mutable_designated_bridge_priority() {
  
  if (designated_bridge_priority_ == NULL) {
    designated_bridge_priority_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_bridge_priority)
  return designated_bridge_priority_;
}
inline void Stp_RapidPvst_Vlan_Interfaces_Interface_State::set_allocated_designated_bridge_priority(::ywrapper::UintValue* designated_bridge_priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(designated_bridge_priority_);
  }
  if (designated_bridge_priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      designated_bridge_priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, designated_bridge_priority, submessage_arena);
    }
    
  } else {
    
  }
  designated_bridge_priority_ = designated_bridge_priority;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_bridge_priority)
}

// .ywrapper.UintValue designated_cost = 205029575 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-cost"];
inline bool Stp_RapidPvst_Vlan_Interfaces_Interface_State::has_designated_cost() const {
  return this != internal_default_instance() && designated_cost_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_Interfaces_Interface_State::designated_cost() const {
  const ::ywrapper::UintValue* p = designated_cost_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_cost)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State::release_designated_cost() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_cost)
  
  ::ywrapper::UintValue* temp = designated_cost_;
  designated_cost_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State::mutable_designated_cost() {
  
  if (designated_cost_ == NULL) {
    designated_cost_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_cost)
  return designated_cost_;
}
inline void Stp_RapidPvst_Vlan_Interfaces_Interface_State::set_allocated_designated_cost(::ywrapper::UintValue* designated_cost) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(designated_cost_);
  }
  if (designated_cost) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      designated_cost = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, designated_cost, submessage_arena);
    }
    
  } else {
    
  }
  designated_cost_ = designated_cost;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_cost)
}

// .ywrapper.UintValue designated_port_num = 159446494 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-port-num"];
inline bool Stp_RapidPvst_Vlan_Interfaces_Interface_State::has_designated_port_num() const {
  return this != internal_default_instance() && designated_port_num_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_Interfaces_Interface_State::designated_port_num() const {
  const ::ywrapper::UintValue* p = designated_port_num_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_port_num)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State::release_designated_port_num() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_port_num)
  
  ::ywrapper::UintValue* temp = designated_port_num_;
  designated_port_num_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State::mutable_designated_port_num() {
  
  if (designated_port_num_ == NULL) {
    designated_port_num_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_port_num)
  return designated_port_num_;
}
inline void Stp_RapidPvst_Vlan_Interfaces_Interface_State::set_allocated_designated_port_num(::ywrapper::UintValue* designated_port_num) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(designated_port_num_);
  }
  if (designated_port_num) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      designated_port_num = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, designated_port_num, submessage_arena);
    }
    
  } else {
    
  }
  designated_port_num_ = designated_port_num;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_port_num)
}

// .ywrapper.UintValue designated_port_priority = 29583074 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-port-priority"];
inline bool Stp_RapidPvst_Vlan_Interfaces_Interface_State::has_designated_port_priority() const {
  return this != internal_default_instance() && designated_port_priority_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_Interfaces_Interface_State::designated_port_priority() const {
  const ::ywrapper::UintValue* p = designated_port_priority_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_port_priority)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State::release_designated_port_priority() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_port_priority)
  
  ::ywrapper::UintValue* temp = designated_port_priority_;
  designated_port_priority_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State::mutable_designated_port_priority() {
  
  if (designated_port_priority_ == NULL) {
    designated_port_priority_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_port_priority)
  return designated_port_priority_;
}
inline void Stp_RapidPvst_Vlan_Interfaces_Interface_State::set_allocated_designated_port_priority(::ywrapper::UintValue* designated_port_priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(designated_port_priority_);
  }
  if (designated_port_priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      designated_port_priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, designated_port_priority, submessage_arena);
    }
    
  } else {
    
  }
  designated_port_priority_ = designated_port_priority;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_port_priority)
}

// .ywrapper.StringValue designated_root_address = 140840559 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-root-address"];
inline bool Stp_RapidPvst_Vlan_Interfaces_Interface_State::has_designated_root_address() const {
  return this != internal_default_instance() && designated_root_address_ != NULL;
}
inline const ::ywrapper::StringValue& Stp_RapidPvst_Vlan_Interfaces_Interface_State::designated_root_address() const {
  const ::ywrapper::StringValue* p = designated_root_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_root_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State::release_designated_root_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_root_address)
  
  ::ywrapper::StringValue* temp = designated_root_address_;
  designated_root_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State::mutable_designated_root_address() {
  
  if (designated_root_address_ == NULL) {
    designated_root_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_root_address)
  return designated_root_address_;
}
inline void Stp_RapidPvst_Vlan_Interfaces_Interface_State::set_allocated_designated_root_address(::ywrapper::StringValue* designated_root_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(designated_root_address_);
  }
  if (designated_root_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      designated_root_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, designated_root_address, submessage_arena);
    }
    
  } else {
    
  }
  designated_root_address_ = designated_root_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_root_address)
}

// .ywrapper.UintValue designated_root_priority = 38925981 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/designated-root-priority"];
inline bool Stp_RapidPvst_Vlan_Interfaces_Interface_State::has_designated_root_priority() const {
  return this != internal_default_instance() && designated_root_priority_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_Interfaces_Interface_State::designated_root_priority() const {
  const ::ywrapper::UintValue* p = designated_root_priority_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_root_priority)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State::release_designated_root_priority() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_root_priority)
  
  ::ywrapper::UintValue* temp = designated_root_priority_;
  designated_root_priority_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State::mutable_designated_root_priority() {
  
  if (designated_root_priority_ == NULL) {
    designated_root_priority_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_root_priority)
  return designated_root_priority_;
}
inline void Stp_RapidPvst_Vlan_Interfaces_Interface_State::set_allocated_designated_root_priority(::ywrapper::UintValue* designated_root_priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(designated_root_priority_);
  }
  if (designated_root_priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      designated_root_priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, designated_root_priority, submessage_arena);
    }
    
  } else {
    
  }
  designated_root_priority_ = designated_root_priority;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.designated_root_priority)
}

// .ywrapper.UintValue forward_transisitions = 250621287 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/forward-transisitions"];
inline bool Stp_RapidPvst_Vlan_Interfaces_Interface_State::has_forward_transisitions() const {
  return this != internal_default_instance() && forward_transisitions_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_Interfaces_Interface_State::forward_transisitions() const {
  const ::ywrapper::UintValue* p = forward_transisitions_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.forward_transisitions)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State::release_forward_transisitions() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.forward_transisitions)
  
  ::ywrapper::UintValue* temp = forward_transisitions_;
  forward_transisitions_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State::mutable_forward_transisitions() {
  
  if (forward_transisitions_ == NULL) {
    forward_transisitions_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.forward_transisitions)
  return forward_transisitions_;
}
inline void Stp_RapidPvst_Vlan_Interfaces_Interface_State::set_allocated_forward_transisitions(::ywrapper::UintValue* forward_transisitions) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(forward_transisitions_);
  }
  if (forward_transisitions) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      forward_transisitions = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, forward_transisitions, submessage_arena);
    }
    
  } else {
    
  }
  forward_transisitions_ = forward_transisitions;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.forward_transisitions)
}

// .ywrapper.StringValue name = 90243448 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/name"];
inline bool Stp_RapidPvst_Vlan_Interfaces_Interface_State::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& Stp_RapidPvst_Vlan_Interfaces_Interface_State::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.name)
  return name_;
}
inline void Stp_RapidPvst_Vlan_Interfaces_Interface_State::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.name)
}

// .ywrapper.UintValue port_num = 258837963 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/port-num"];
inline bool Stp_RapidPvst_Vlan_Interfaces_Interface_State::has_port_num() const {
  return this != internal_default_instance() && port_num_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_Interfaces_Interface_State::port_num() const {
  const ::ywrapper::UintValue* p = port_num_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.port_num)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State::release_port_num() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.port_num)
  
  ::ywrapper::UintValue* temp = port_num_;
  port_num_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State::mutable_port_num() {
  
  if (port_num_ == NULL) {
    port_num_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.port_num)
  return port_num_;
}
inline void Stp_RapidPvst_Vlan_Interfaces_Interface_State::set_allocated_port_num(::ywrapper::UintValue* port_num) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(port_num_);
  }
  if (port_num) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      port_num = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, port_num, submessage_arena);
    }
    
  } else {
    
  }
  port_num_ = port_num;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.port_num)
}

// .ywrapper.UintValue port_priority = 195511977 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/port-priority"];
inline bool Stp_RapidPvst_Vlan_Interfaces_Interface_State::has_port_priority() const {
  return this != internal_default_instance() && port_priority_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_Interfaces_Interface_State::port_priority() const {
  const ::ywrapper::UintValue* p = port_priority_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.port_priority)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State::release_port_priority() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.port_priority)
  
  ::ywrapper::UintValue* temp = port_priority_;
  port_priority_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_Interfaces_Interface_State::mutable_port_priority() {
  
  if (port_priority_ == NULL) {
    port_priority_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.port_priority)
  return port_priority_;
}
inline void Stp_RapidPvst_Vlan_Interfaces_Interface_State::set_allocated_port_priority(::ywrapper::UintValue* port_priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(port_priority_);
  }
  if (port_priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      port_priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, port_priority, submessage_arena);
    }
    
  } else {
    
  }
  port_priority_ = port_priority;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.port_priority)
}

// .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTSTATE port_state = 363314876 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/port-state"];
inline void Stp_RapidPvst_Vlan_Interfaces_Interface_State::clear_port_state() {
  port_state_ = 0;
}
inline ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTSTATE Stp_RapidPvst_Vlan_Interfaces_Interface_State::port_state() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.port_state)
  return static_cast< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTSTATE >(port_state_);
}
inline void Stp_RapidPvst_Vlan_Interfaces_Interface_State::set_port_state(::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTSTATE value) {
  
  port_state_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.port_state)
}

// .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTROLE role = 347361501 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state/role"];
inline void Stp_RapidPvst_Vlan_Interfaces_Interface_State::clear_role() {
  role_ = 0;
}
inline ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTROLE Stp_RapidPvst_Vlan_Interfaces_Interface_State::role() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.role)
  return static_cast< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTROLE >(role_);
}
inline void Stp_RapidPvst_Vlan_Interfaces_Interface_State::set_role(::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTROLE value) {
  
  role_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State.role)
}

// -------------------------------------------------------------------

// Stp_RapidPvst_Vlan_Interfaces_Interface

// .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.Config config = 115497141 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/config"];
inline bool Stp_RapidPvst_Vlan_Interfaces_Interface::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Stp_RapidPvst_Vlan_Interfaces_Interface::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_Config& Stp_RapidPvst_Vlan_Interfaces_Interface::config() const {
  const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_Config*>(
      &::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_Config_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_Config* Stp_RapidPvst_Vlan_Interfaces_Interface::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.config)
  
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_Config* Stp_RapidPvst_Vlan_Interfaces_Interface::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.config)
  return config_;
}
inline void Stp_RapidPvst_Vlan_Interfaces_Interface::set_allocated_config(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.config)
}

// .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.State state = 204553130 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/state"];
inline bool Stp_RapidPvst_Vlan_Interfaces_Interface::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Stp_RapidPvst_Vlan_Interfaces_Interface::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State& Stp_RapidPvst_Vlan_Interfaces_Interface::state() const {
  const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State*>(
      &::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_State_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State* Stp_RapidPvst_Vlan_Interfaces_Interface::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.state)
  
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State* Stp_RapidPvst_Vlan_Interfaces_Interface::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.state)
  return state_;
}
inline void Stp_RapidPvst_Vlan_Interfaces_Interface::set_allocated_state(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface.state)
}

// -------------------------------------------------------------------

// Stp_RapidPvst_Vlan_Interfaces_InterfaceKey

// string name = 1 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface/name"];
inline void Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::name() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey.name)
  return name_.GetNoArena();
}
inline void Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey.name)
}
#if LANG_CXX11
inline void Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey.name)
}
#endif
inline void Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey.name)
}
inline void Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey.name)
}
inline ::std::string* Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey.name)
}

// .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.Interface interface = 2;
inline bool Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::has_interface() const {
  return this != internal_default_instance() && interface_ != NULL;
}
inline void Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::clear_interface() {
  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface& Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::interface() const {
  const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface* p = interface_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey.interface)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface*>(
      &::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_Interface_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface* Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::release_interface() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey.interface)
  
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface* temp = interface_;
  interface_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface* Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::mutable_interface() {
  
  if (interface_ == NULL) {
    interface_ = new ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey.interface)
  return interface_;
}
inline void Stp_RapidPvst_Vlan_Interfaces_InterfaceKey::set_allocated_interface(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_Interface* interface) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete interface_;
  }
  if (interface) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interface = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interface, submessage_arena);
    }
    
  } else {
    
  }
  interface_ = interface;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey.interface)
}

// -------------------------------------------------------------------

// Stp_RapidPvst_Vlan_Interfaces

// repeated .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.InterfaceKey interface = 453728448 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces/interface"];
inline int Stp_RapidPvst_Vlan_Interfaces::interface_size() const {
  return interface_.size();
}
inline void Stp_RapidPvst_Vlan_Interfaces::clear_interface() {
  interface_.Clear();
}
inline const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_InterfaceKey& Stp_RapidPvst_Vlan_Interfaces::interface(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.interface)
  return interface_.Get(index);
}
inline ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_InterfaceKey* Stp_RapidPvst_Vlan_Interfaces::mutable_interface(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.interface)
  return interface_.Mutable(index);
}
inline ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_InterfaceKey* Stp_RapidPvst_Vlan_Interfaces::add_interface() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.interface)
  return interface_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_InterfaceKey >*
Stp_RapidPvst_Vlan_Interfaces::mutable_interface() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.interface)
  return &interface_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces_InterfaceKey >&
Stp_RapidPvst_Vlan_Interfaces::interface() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces.interface)
  return interface_;
}

// -------------------------------------------------------------------

// Stp_RapidPvst_Vlan_State

// .ywrapper.StringValue bridge_address = 454985562 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/bridge-address"];
inline bool Stp_RapidPvst_Vlan_State::has_bridge_address() const {
  return this != internal_default_instance() && bridge_address_ != NULL;
}
inline const ::ywrapper::StringValue& Stp_RapidPvst_Vlan_State::bridge_address() const {
  const ::ywrapper::StringValue* p = bridge_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.bridge_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Stp_RapidPvst_Vlan_State::release_bridge_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.bridge_address)
  
  ::ywrapper::StringValue* temp = bridge_address_;
  bridge_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Stp_RapidPvst_Vlan_State::mutable_bridge_address() {
  
  if (bridge_address_ == NULL) {
    bridge_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.bridge_address)
  return bridge_address_;
}
inline void Stp_RapidPvst_Vlan_State::set_allocated_bridge_address(::ywrapper::StringValue* bridge_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bridge_address_);
  }
  if (bridge_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bridge_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bridge_address, submessage_arena);
    }
    
  } else {
    
  }
  bridge_address_ = bridge_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.bridge_address)
}

// .ywrapper.UintValue bridge_priority = 177157582 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/bridge-priority"];
inline bool Stp_RapidPvst_Vlan_State::has_bridge_priority() const {
  return this != internal_default_instance() && bridge_priority_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_State::bridge_priority() const {
  const ::ywrapper::UintValue* p = bridge_priority_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.bridge_priority)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_State::release_bridge_priority() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.bridge_priority)
  
  ::ywrapper::UintValue* temp = bridge_priority_;
  bridge_priority_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_State::mutable_bridge_priority() {
  
  if (bridge_priority_ == NULL) {
    bridge_priority_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.bridge_priority)
  return bridge_priority_;
}
inline void Stp_RapidPvst_Vlan_State::set_allocated_bridge_priority(::ywrapper::UintValue* bridge_priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bridge_priority_);
  }
  if (bridge_priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bridge_priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bridge_priority, submessage_arena);
    }
    
  } else {
    
  }
  bridge_priority_ = bridge_priority;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.bridge_priority)
}

// .ywrapper.StringValue designated_root_address = 97211874 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/designated-root-address"];
inline bool Stp_RapidPvst_Vlan_State::has_designated_root_address() const {
  return this != internal_default_instance() && designated_root_address_ != NULL;
}
inline const ::ywrapper::StringValue& Stp_RapidPvst_Vlan_State::designated_root_address() const {
  const ::ywrapper::StringValue* p = designated_root_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.designated_root_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Stp_RapidPvst_Vlan_State::release_designated_root_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.designated_root_address)
  
  ::ywrapper::StringValue* temp = designated_root_address_;
  designated_root_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Stp_RapidPvst_Vlan_State::mutable_designated_root_address() {
  
  if (designated_root_address_ == NULL) {
    designated_root_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.designated_root_address)
  return designated_root_address_;
}
inline void Stp_RapidPvst_Vlan_State::set_allocated_designated_root_address(::ywrapper::StringValue* designated_root_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(designated_root_address_);
  }
  if (designated_root_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      designated_root_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, designated_root_address, submessage_arena);
    }
    
  } else {
    
  }
  designated_root_address_ = designated_root_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.designated_root_address)
}

// .ywrapper.UintValue designated_root_priority = 223616870 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/designated-root-priority"];
inline bool Stp_RapidPvst_Vlan_State::has_designated_root_priority() const {
  return this != internal_default_instance() && designated_root_priority_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_State::designated_root_priority() const {
  const ::ywrapper::UintValue* p = designated_root_priority_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.designated_root_priority)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_State::release_designated_root_priority() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.designated_root_priority)
  
  ::ywrapper::UintValue* temp = designated_root_priority_;
  designated_root_priority_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_State::mutable_designated_root_priority() {
  
  if (designated_root_priority_ == NULL) {
    designated_root_priority_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.designated_root_priority)
  return designated_root_priority_;
}
inline void Stp_RapidPvst_Vlan_State::set_allocated_designated_root_priority(::ywrapper::UintValue* designated_root_priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(designated_root_priority_);
  }
  if (designated_root_priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      designated_root_priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, designated_root_priority, submessage_arena);
    }
    
  } else {
    
  }
  designated_root_priority_ = designated_root_priority;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.designated_root_priority)
}

// .ywrapper.UintValue forwarding_delay = 192510517 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/forwarding-delay"];
inline bool Stp_RapidPvst_Vlan_State::has_forwarding_delay() const {
  return this != internal_default_instance() && forwarding_delay_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_State::forwarding_delay() const {
  const ::ywrapper::UintValue* p = forwarding_delay_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.forwarding_delay)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_State::release_forwarding_delay() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.forwarding_delay)
  
  ::ywrapper::UintValue* temp = forwarding_delay_;
  forwarding_delay_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_State::mutable_forwarding_delay() {
  
  if (forwarding_delay_ == NULL) {
    forwarding_delay_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.forwarding_delay)
  return forwarding_delay_;
}
inline void Stp_RapidPvst_Vlan_State::set_allocated_forwarding_delay(::ywrapper::UintValue* forwarding_delay) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(forwarding_delay_);
  }
  if (forwarding_delay) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      forwarding_delay = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, forwarding_delay, submessage_arena);
    }
    
  } else {
    
  }
  forwarding_delay_ = forwarding_delay;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.forwarding_delay)
}

// .ywrapper.UintValue hello_time = 332690440 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/hello-time"];
inline bool Stp_RapidPvst_Vlan_State::has_hello_time() const {
  return this != internal_default_instance() && hello_time_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_State::hello_time() const {
  const ::ywrapper::UintValue* p = hello_time_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.hello_time)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_State::release_hello_time() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.hello_time)
  
  ::ywrapper::UintValue* temp = hello_time_;
  hello_time_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_State::mutable_hello_time() {
  
  if (hello_time_ == NULL) {
    hello_time_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.hello_time)
  return hello_time_;
}
inline void Stp_RapidPvst_Vlan_State::set_allocated_hello_time(::ywrapper::UintValue* hello_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hello_time_);
  }
  if (hello_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hello_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hello_time, submessage_arena);
    }
    
  } else {
    
  }
  hello_time_ = hello_time;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.hello_time)
}

// .ywrapper.UintValue hold_count = 66902911 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/hold-count"];
inline bool Stp_RapidPvst_Vlan_State::has_hold_count() const {
  return this != internal_default_instance() && hold_count_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_State::hold_count() const {
  const ::ywrapper::UintValue* p = hold_count_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.hold_count)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_State::release_hold_count() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.hold_count)
  
  ::ywrapper::UintValue* temp = hold_count_;
  hold_count_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_State::mutable_hold_count() {
  
  if (hold_count_ == NULL) {
    hold_count_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.hold_count)
  return hold_count_;
}
inline void Stp_RapidPvst_Vlan_State::set_allocated_hold_count(::ywrapper::UintValue* hold_count) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hold_count_);
  }
  if (hold_count) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hold_count = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hold_count, submessage_arena);
    }
    
  } else {
    
  }
  hold_count_ = hold_count;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.hold_count)
}

// .ywrapper.UintValue hold_time = 94235933 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/hold-time"];
inline bool Stp_RapidPvst_Vlan_State::has_hold_time() const {
  return this != internal_default_instance() && hold_time_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_State::hold_time() const {
  const ::ywrapper::UintValue* p = hold_time_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.hold_time)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_State::release_hold_time() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.hold_time)
  
  ::ywrapper::UintValue* temp = hold_time_;
  hold_time_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_State::mutable_hold_time() {
  
  if (hold_time_ == NULL) {
    hold_time_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.hold_time)
  return hold_time_;
}
inline void Stp_RapidPvst_Vlan_State::set_allocated_hold_time(::ywrapper::UintValue* hold_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hold_time_);
  }
  if (hold_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hold_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hold_time, submessage_arena);
    }
    
  } else {
    
  }
  hold_time_ = hold_time;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.hold_time)
}

// .ywrapper.UintValue max_age = 277917522 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/max-age"];
inline bool Stp_RapidPvst_Vlan_State::has_max_age() const {
  return this != internal_default_instance() && max_age_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_State::max_age() const {
  const ::ywrapper::UintValue* p = max_age_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.max_age)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_State::release_max_age() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.max_age)
  
  ::ywrapper::UintValue* temp = max_age_;
  max_age_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_State::mutable_max_age() {
  
  if (max_age_ == NULL) {
    max_age_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.max_age)
  return max_age_;
}
inline void Stp_RapidPvst_Vlan_State::set_allocated_max_age(::ywrapper::UintValue* max_age) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_age_);
  }
  if (max_age) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max_age = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max_age, submessage_arena);
    }
    
  } else {
    
  }
  max_age_ = max_age;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.max_age)
}

// .ywrapper.UintValue root_cost = 379544816 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/root-cost"];
inline bool Stp_RapidPvst_Vlan_State::has_root_cost() const {
  return this != internal_default_instance() && root_cost_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_State::root_cost() const {
  const ::ywrapper::UintValue* p = root_cost_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.root_cost)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_State::release_root_cost() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.root_cost)
  
  ::ywrapper::UintValue* temp = root_cost_;
  root_cost_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_State::mutable_root_cost() {
  
  if (root_cost_ == NULL) {
    root_cost_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.root_cost)
  return root_cost_;
}
inline void Stp_RapidPvst_Vlan_State::set_allocated_root_cost(::ywrapper::UintValue* root_cost) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(root_cost_);
  }
  if (root_cost) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      root_cost = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, root_cost, submessage_arena);
    }
    
  } else {
    
  }
  root_cost_ = root_cost;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.root_cost)
}

// .ywrapper.UintValue root_port = 244515786 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/root-port"];
inline bool Stp_RapidPvst_Vlan_State::has_root_port() const {
  return this != internal_default_instance() && root_port_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_State::root_port() const {
  const ::ywrapper::UintValue* p = root_port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.root_port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_State::release_root_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.root_port)
  
  ::ywrapper::UintValue* temp = root_port_;
  root_port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_State::mutable_root_port() {
  
  if (root_port_ == NULL) {
    root_port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.root_port)
  return root_port_;
}
inline void Stp_RapidPvst_Vlan_State::set_allocated_root_port(::ywrapper::UintValue* root_port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(root_port_);
  }
  if (root_port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      root_port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, root_port, submessage_arena);
    }
    
  } else {
    
  }
  root_port_ = root_port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.root_port)
}

// .ywrapper.UintValue time_since_topology_change = 137320635 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/time-since-topology-change"];
inline bool Stp_RapidPvst_Vlan_State::has_time_since_topology_change() const {
  return this != internal_default_instance() && time_since_topology_change_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_State::time_since_topology_change() const {
  const ::ywrapper::UintValue* p = time_since_topology_change_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.time_since_topology_change)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_State::release_time_since_topology_change() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.time_since_topology_change)
  
  ::ywrapper::UintValue* temp = time_since_topology_change_;
  time_since_topology_change_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_State::mutable_time_since_topology_change() {
  
  if (time_since_topology_change_ == NULL) {
    time_since_topology_change_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.time_since_topology_change)
  return time_since_topology_change_;
}
inline void Stp_RapidPvst_Vlan_State::set_allocated_time_since_topology_change(::ywrapper::UintValue* time_since_topology_change) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(time_since_topology_change_);
  }
  if (time_since_topology_change) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      time_since_topology_change = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time_since_topology_change, submessage_arena);
    }
    
  } else {
    
  }
  time_since_topology_change_ = time_since_topology_change;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.time_since_topology_change)
}

// .ywrapper.UintValue topology_changes = 416437749 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/topology-changes"];
inline bool Stp_RapidPvst_Vlan_State::has_topology_changes() const {
  return this != internal_default_instance() && topology_changes_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_State::topology_changes() const {
  const ::ywrapper::UintValue* p = topology_changes_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.topology_changes)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_State::release_topology_changes() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.topology_changes)
  
  ::ywrapper::UintValue* temp = topology_changes_;
  topology_changes_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_State::mutable_topology_changes() {
  
  if (topology_changes_ == NULL) {
    topology_changes_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.topology_changes)
  return topology_changes_;
}
inline void Stp_RapidPvst_Vlan_State::set_allocated_topology_changes(::ywrapper::UintValue* topology_changes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(topology_changes_);
  }
  if (topology_changes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      topology_changes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, topology_changes, submessage_arena);
    }
    
  } else {
    
  }
  topology_changes_ = topology_changes;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.topology_changes)
}

// .ywrapper.UintValue vlan_id = 166116589 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state/vlan-id"];
inline bool Stp_RapidPvst_Vlan_State::has_vlan_id() const {
  return this != internal_default_instance() && vlan_id_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_RapidPvst_Vlan_State::vlan_id() const {
  const ::ywrapper::UintValue* p = vlan_id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.vlan_id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_State::release_vlan_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.vlan_id)
  
  ::ywrapper::UintValue* temp = vlan_id_;
  vlan_id_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_RapidPvst_Vlan_State::mutable_vlan_id() {
  
  if (vlan_id_ == NULL) {
    vlan_id_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.vlan_id)
  return vlan_id_;
}
inline void Stp_RapidPvst_Vlan_State::set_allocated_vlan_id(::ywrapper::UintValue* vlan_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(vlan_id_);
  }
  if (vlan_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vlan_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vlan_id, submessage_arena);
    }
    
  } else {
    
  }
  vlan_id_ = vlan_id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State.vlan_id)
}

// -------------------------------------------------------------------

// Stp_RapidPvst_Vlan

// .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Config config = 145334722 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/config"];
inline bool Stp_RapidPvst_Vlan::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Stp_RapidPvst_Vlan::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Config& Stp_RapidPvst_Vlan::config() const {
  const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Config*>(
      &::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Config_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Config* Stp_RapidPvst_Vlan::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.config)
  
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Config* Stp_RapidPvst_Vlan::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.config)
  return config_;
}
inline void Stp_RapidPvst_Vlan::set_allocated_config(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.config)
}

// .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.Interfaces interfaces = 305066408 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/interfaces"];
inline bool Stp_RapidPvst_Vlan::has_interfaces() const {
  return this != internal_default_instance() && interfaces_ != NULL;
}
inline void Stp_RapidPvst_Vlan::clear_interfaces() {
  if (GetArenaNoVirtual() == NULL && interfaces_ != NULL) {
    delete interfaces_;
  }
  interfaces_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces& Stp_RapidPvst_Vlan::interfaces() const {
  const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces* p = interfaces_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.interfaces)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces*>(
      &::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_Interfaces_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces* Stp_RapidPvst_Vlan::release_interfaces() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.interfaces)
  
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces* temp = interfaces_;
  interfaces_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces* Stp_RapidPvst_Vlan::mutable_interfaces() {
  
  if (interfaces_ == NULL) {
    interfaces_ = new ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.interfaces)
  return interfaces_;
}
inline void Stp_RapidPvst_Vlan::set_allocated_interfaces(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_Interfaces* interfaces) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete interfaces_;
  }
  if (interfaces) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interfaces = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interfaces, submessage_arena);
    }
    
  } else {
    
  }
  interfaces_ = interfaces;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.interfaces)
}

// .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.State state = 420107135 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/state"];
inline bool Stp_RapidPvst_Vlan::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Stp_RapidPvst_Vlan::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State& Stp_RapidPvst_Vlan::state() const {
  const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State*>(
      &::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_State_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State* Stp_RapidPvst_Vlan::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.state)
  
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State* Stp_RapidPvst_Vlan::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.state)
  return state_;
}
inline void Stp_RapidPvst_Vlan::set_allocated_state(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan.state)
}

// -------------------------------------------------------------------

// Stp_RapidPvst_VlanKey

// uint64 vlan_id = 1 [(.yext.schemapath) = "/stp/rapid-pvst/vlan/vlan-id"];
inline void Stp_RapidPvst_VlanKey::clear_vlan_id() {
  vlan_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 Stp_RapidPvst_VlanKey::vlan_id() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey.vlan_id)
  return vlan_id_;
}
inline void Stp_RapidPvst_VlanKey::set_vlan_id(::google::protobuf::uint64 value) {
  
  vlan_id_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey.vlan_id)
}

// .openconfig.openconfig_spanning_tree.Stp.RapidPvst.Vlan vlan = 2;
inline bool Stp_RapidPvst_VlanKey::has_vlan() const {
  return this != internal_default_instance() && vlan_ != NULL;
}
inline void Stp_RapidPvst_VlanKey::clear_vlan() {
  if (GetArenaNoVirtual() == NULL && vlan_ != NULL) {
    delete vlan_;
  }
  vlan_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan& Stp_RapidPvst_VlanKey::vlan() const {
  const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan* p = vlan_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey.vlan)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan*>(
      &::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_Vlan_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan* Stp_RapidPvst_VlanKey::release_vlan() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey.vlan)
  
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan* temp = vlan_;
  vlan_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan* Stp_RapidPvst_VlanKey::mutable_vlan() {
  
  if (vlan_ == NULL) {
    vlan_ = new ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey.vlan)
  return vlan_;
}
inline void Stp_RapidPvst_VlanKey::set_allocated_vlan(::openconfig::openconfig_spanning_tree::Stp_RapidPvst_Vlan* vlan) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete vlan_;
  }
  if (vlan) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      vlan = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, vlan, submessage_arena);
    }
    
  } else {
    
  }
  vlan_ = vlan;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey.vlan)
}

// -------------------------------------------------------------------

// Stp_RapidPvst

// repeated .openconfig.openconfig_spanning_tree.Stp.RapidPvst.VlanKey vlan = 498125485 [(.yext.schemapath) = "/stp/rapid-pvst/vlan"];
inline int Stp_RapidPvst::vlan_size() const {
  return vlan_.size();
}
inline void Stp_RapidPvst::clear_vlan() {
  vlan_.Clear();
}
inline const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_VlanKey& Stp_RapidPvst::vlan(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.RapidPvst.vlan)
  return vlan_.Get(index);
}
inline ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_VlanKey* Stp_RapidPvst::mutable_vlan(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.RapidPvst.vlan)
  return vlan_.Mutable(index);
}
inline ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_VlanKey* Stp_RapidPvst::add_vlan() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_spanning_tree.Stp.RapidPvst.vlan)
  return vlan_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_VlanKey >*
Stp_RapidPvst::mutable_vlan() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_spanning_tree.Stp.RapidPvst.vlan)
  return &vlan_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_RapidPvst_VlanKey >&
Stp_RapidPvst::vlan() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_spanning_tree.Stp.RapidPvst.vlan)
  return vlan_;
}

// -------------------------------------------------------------------

// Stp_Rstp_Config

// .ywrapper.UintValue bridge_priority = 196251874 [(.yext.schemapath) = "/stp/rstp/config/bridge-priority"];
inline bool Stp_Rstp_Config::has_bridge_priority() const {
  return this != internal_default_instance() && bridge_priority_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_Config::bridge_priority() const {
  const ::ywrapper::UintValue* p = bridge_priority_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Config.bridge_priority)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_Config::release_bridge_priority() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.Config.bridge_priority)
  
  ::ywrapper::UintValue* temp = bridge_priority_;
  bridge_priority_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_Config::mutable_bridge_priority() {
  
  if (bridge_priority_ == NULL) {
    bridge_priority_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Config.bridge_priority)
  return bridge_priority_;
}
inline void Stp_Rstp_Config::set_allocated_bridge_priority(::ywrapper::UintValue* bridge_priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bridge_priority_);
  }
  if (bridge_priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bridge_priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bridge_priority, submessage_arena);
    }
    
  } else {
    
  }
  bridge_priority_ = bridge_priority;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.Config.bridge_priority)
}

// .ywrapper.UintValue forwarding_delay = 470783249 [(.yext.schemapath) = "/stp/rstp/config/forwarding-delay"];
inline bool Stp_Rstp_Config::has_forwarding_delay() const {
  return this != internal_default_instance() && forwarding_delay_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_Config::forwarding_delay() const {
  const ::ywrapper::UintValue* p = forwarding_delay_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Config.forwarding_delay)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_Config::release_forwarding_delay() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.Config.forwarding_delay)
  
  ::ywrapper::UintValue* temp = forwarding_delay_;
  forwarding_delay_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_Config::mutable_forwarding_delay() {
  
  if (forwarding_delay_ == NULL) {
    forwarding_delay_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Config.forwarding_delay)
  return forwarding_delay_;
}
inline void Stp_Rstp_Config::set_allocated_forwarding_delay(::ywrapper::UintValue* forwarding_delay) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(forwarding_delay_);
  }
  if (forwarding_delay) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      forwarding_delay = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, forwarding_delay, submessage_arena);
    }
    
  } else {
    
  }
  forwarding_delay_ = forwarding_delay;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.Config.forwarding_delay)
}

// .ywrapper.UintValue hello_time = 88797588 [(.yext.schemapath) = "/stp/rstp/config/hello-time"];
inline bool Stp_Rstp_Config::has_hello_time() const {
  return this != internal_default_instance() && hello_time_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_Config::hello_time() const {
  const ::ywrapper::UintValue* p = hello_time_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Config.hello_time)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_Config::release_hello_time() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.Config.hello_time)
  
  ::ywrapper::UintValue* temp = hello_time_;
  hello_time_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_Config::mutable_hello_time() {
  
  if (hello_time_ == NULL) {
    hello_time_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Config.hello_time)
  return hello_time_;
}
inline void Stp_Rstp_Config::set_allocated_hello_time(::ywrapper::UintValue* hello_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hello_time_);
  }
  if (hello_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hello_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hello_time, submessage_arena);
    }
    
  } else {
    
  }
  hello_time_ = hello_time;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.Config.hello_time)
}

// .ywrapper.UintValue hold_count = 405807659 [(.yext.schemapath) = "/stp/rstp/config/hold-count"];
inline bool Stp_Rstp_Config::has_hold_count() const {
  return this != internal_default_instance() && hold_count_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_Config::hold_count() const {
  const ::ywrapper::UintValue* p = hold_count_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Config.hold_count)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_Config::release_hold_count() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.Config.hold_count)
  
  ::ywrapper::UintValue* temp = hold_count_;
  hold_count_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_Config::mutable_hold_count() {
  
  if (hold_count_ == NULL) {
    hold_count_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Config.hold_count)
  return hold_count_;
}
inline void Stp_Rstp_Config::set_allocated_hold_count(::ywrapper::UintValue* hold_count) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hold_count_);
  }
  if (hold_count) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hold_count = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hold_count, submessage_arena);
    }
    
  } else {
    
  }
  hold_count_ = hold_count;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.Config.hold_count)
}

// .ywrapper.UintValue max_age = 60314870 [(.yext.schemapath) = "/stp/rstp/config/max-age"];
inline bool Stp_Rstp_Config::has_max_age() const {
  return this != internal_default_instance() && max_age_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_Config::max_age() const {
  const ::ywrapper::UintValue* p = max_age_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Config.max_age)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_Config::release_max_age() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.Config.max_age)
  
  ::ywrapper::UintValue* temp = max_age_;
  max_age_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_Config::mutable_max_age() {
  
  if (max_age_ == NULL) {
    max_age_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Config.max_age)
  return max_age_;
}
inline void Stp_Rstp_Config::set_allocated_max_age(::ywrapper::UintValue* max_age) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_age_);
  }
  if (max_age) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max_age = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max_age, submessage_arena);
    }
    
  } else {
    
  }
  max_age_ = max_age;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.Config.max_age)
}

// -------------------------------------------------------------------

// Stp_Rstp_Interfaces_Interface_Config

// .ywrapper.UintValue cost = 25438518 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/config/cost"];
inline bool Stp_Rstp_Interfaces_Interface_Config::has_cost() const {
  return this != internal_default_instance() && cost_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_Interfaces_Interface_Config::cost() const {
  const ::ywrapper::UintValue* p = cost_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config.cost)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_Interfaces_Interface_Config::release_cost() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config.cost)
  
  ::ywrapper::UintValue* temp = cost_;
  cost_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_Interfaces_Interface_Config::mutable_cost() {
  
  if (cost_ == NULL) {
    cost_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config.cost)
  return cost_;
}
inline void Stp_Rstp_Interfaces_Interface_Config::set_allocated_cost(::ywrapper::UintValue* cost) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cost_);
  }
  if (cost) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cost = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cost, submessage_arena);
    }
    
  } else {
    
  }
  cost_ = cost;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config.cost)
}

// .ywrapper.StringValue name = 302799488 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/config/name"];
inline bool Stp_Rstp_Interfaces_Interface_Config::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& Stp_Rstp_Interfaces_Interface_Config::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Stp_Rstp_Interfaces_Interface_Config::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Stp_Rstp_Interfaces_Interface_Config::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config.name)
  return name_;
}
inline void Stp_Rstp_Interfaces_Interface_Config::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config.name)
}

// .ywrapper.UintValue port_priority = 410079105 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/config/port-priority"];
inline bool Stp_Rstp_Interfaces_Interface_Config::has_port_priority() const {
  return this != internal_default_instance() && port_priority_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_Interfaces_Interface_Config::port_priority() const {
  const ::ywrapper::UintValue* p = port_priority_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config.port_priority)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_Interfaces_Interface_Config::release_port_priority() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config.port_priority)
  
  ::ywrapper::UintValue* temp = port_priority_;
  port_priority_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_Interfaces_Interface_Config::mutable_port_priority() {
  
  if (port_priority_ == NULL) {
    port_priority_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config.port_priority)
  return port_priority_;
}
inline void Stp_Rstp_Interfaces_Interface_Config::set_allocated_port_priority(::ywrapper::UintValue* port_priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(port_priority_);
  }
  if (port_priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      port_priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, port_priority, submessage_arena);
    }
    
  } else {
    
  }
  port_priority_ = port_priority;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config.port_priority)
}

// -------------------------------------------------------------------

// Stp_Rstp_Interfaces_Interface_State_Counters

// .ywrapper.UintValue bpdu_received = 339806433 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/counters/bpdu-received"];
inline bool Stp_Rstp_Interfaces_Interface_State_Counters::has_bpdu_received() const {
  return this != internal_default_instance() && bpdu_received_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_Interfaces_Interface_State_Counters::bpdu_received() const {
  const ::ywrapper::UintValue* p = bpdu_received_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters.bpdu_received)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_Interfaces_Interface_State_Counters::release_bpdu_received() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters.bpdu_received)
  
  ::ywrapper::UintValue* temp = bpdu_received_;
  bpdu_received_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_Interfaces_Interface_State_Counters::mutable_bpdu_received() {
  
  if (bpdu_received_ == NULL) {
    bpdu_received_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters.bpdu_received)
  return bpdu_received_;
}
inline void Stp_Rstp_Interfaces_Interface_State_Counters::set_allocated_bpdu_received(::ywrapper::UintValue* bpdu_received) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bpdu_received_);
  }
  if (bpdu_received) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bpdu_received = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bpdu_received, submessage_arena);
    }
    
  } else {
    
  }
  bpdu_received_ = bpdu_received;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters.bpdu_received)
}

// .ywrapper.UintValue bpdu_sent = 418372722 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/counters/bpdu-sent"];
inline bool Stp_Rstp_Interfaces_Interface_State_Counters::has_bpdu_sent() const {
  return this != internal_default_instance() && bpdu_sent_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_Interfaces_Interface_State_Counters::bpdu_sent() const {
  const ::ywrapper::UintValue* p = bpdu_sent_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters.bpdu_sent)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_Interfaces_Interface_State_Counters::release_bpdu_sent() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters.bpdu_sent)
  
  ::ywrapper::UintValue* temp = bpdu_sent_;
  bpdu_sent_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_Interfaces_Interface_State_Counters::mutable_bpdu_sent() {
  
  if (bpdu_sent_ == NULL) {
    bpdu_sent_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters.bpdu_sent)
  return bpdu_sent_;
}
inline void Stp_Rstp_Interfaces_Interface_State_Counters::set_allocated_bpdu_sent(::ywrapper::UintValue* bpdu_sent) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bpdu_sent_);
  }
  if (bpdu_sent) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bpdu_sent = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bpdu_sent, submessage_arena);
    }
    
  } else {
    
  }
  bpdu_sent_ = bpdu_sent;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters.bpdu_sent)
}

// -------------------------------------------------------------------

// Stp_Rstp_Interfaces_Interface_State

// .ywrapper.UintValue cost = 347107837 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/cost"];
inline bool Stp_Rstp_Interfaces_Interface_State::has_cost() const {
  return this != internal_default_instance() && cost_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_Interfaces_Interface_State::cost() const {
  const ::ywrapper::UintValue* p = cost_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.cost)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_Interfaces_Interface_State::release_cost() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.cost)
  
  ::ywrapper::UintValue* temp = cost_;
  cost_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_Interfaces_Interface_State::mutable_cost() {
  
  if (cost_ == NULL) {
    cost_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.cost)
  return cost_;
}
inline void Stp_Rstp_Interfaces_Interface_State::set_allocated_cost(::ywrapper::UintValue* cost) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cost_);
  }
  if (cost) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cost = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cost, submessage_arena);
    }
    
  } else {
    
  }
  cost_ = cost;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.cost)
}

// .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.Counters counters = 318690949 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/counters"];
inline bool Stp_Rstp_Interfaces_Interface_State::has_counters() const {
  return this != internal_default_instance() && counters_ != NULL;
}
inline void Stp_Rstp_Interfaces_Interface_State::clear_counters() {
  if (GetArenaNoVirtual() == NULL && counters_ != NULL) {
    delete counters_;
  }
  counters_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State_Counters& Stp_Rstp_Interfaces_Interface_State::counters() const {
  const ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State_Counters* p = counters_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.counters)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State_Counters*>(
      &::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_State_Counters_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State_Counters* Stp_Rstp_Interfaces_Interface_State::release_counters() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.counters)
  
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State_Counters* temp = counters_;
  counters_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State_Counters* Stp_Rstp_Interfaces_Interface_State::mutable_counters() {
  
  if (counters_ == NULL) {
    counters_ = new ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State_Counters;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.counters)
  return counters_;
}
inline void Stp_Rstp_Interfaces_Interface_State::set_allocated_counters(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State_Counters* counters) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete counters_;
  }
  if (counters) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      counters = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, counters, submessage_arena);
    }
    
  } else {
    
  }
  counters_ = counters;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.counters)
}

// .ywrapper.StringValue designated_bridge_address = 29300777 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-bridge-address"];
inline bool Stp_Rstp_Interfaces_Interface_State::has_designated_bridge_address() const {
  return this != internal_default_instance() && designated_bridge_address_ != NULL;
}
inline const ::ywrapper::StringValue& Stp_Rstp_Interfaces_Interface_State::designated_bridge_address() const {
  const ::ywrapper::StringValue* p = designated_bridge_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_bridge_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Stp_Rstp_Interfaces_Interface_State::release_designated_bridge_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_bridge_address)
  
  ::ywrapper::StringValue* temp = designated_bridge_address_;
  designated_bridge_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Stp_Rstp_Interfaces_Interface_State::mutable_designated_bridge_address() {
  
  if (designated_bridge_address_ == NULL) {
    designated_bridge_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_bridge_address)
  return designated_bridge_address_;
}
inline void Stp_Rstp_Interfaces_Interface_State::set_allocated_designated_bridge_address(::ywrapper::StringValue* designated_bridge_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(designated_bridge_address_);
  }
  if (designated_bridge_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      designated_bridge_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, designated_bridge_address, submessage_arena);
    }
    
  } else {
    
  }
  designated_bridge_address_ = designated_bridge_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_bridge_address)
}

// .ywrapper.UintValue designated_bridge_priority = 321366475 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-bridge-priority"];
inline bool Stp_Rstp_Interfaces_Interface_State::has_designated_bridge_priority() const {
  return this != internal_default_instance() && designated_bridge_priority_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_Interfaces_Interface_State::designated_bridge_priority() const {
  const ::ywrapper::UintValue* p = designated_bridge_priority_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_bridge_priority)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_Interfaces_Interface_State::release_designated_bridge_priority() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_bridge_priority)
  
  ::ywrapper::UintValue* temp = designated_bridge_priority_;
  designated_bridge_priority_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_Interfaces_Interface_State::mutable_designated_bridge_priority() {
  
  if (designated_bridge_priority_ == NULL) {
    designated_bridge_priority_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_bridge_priority)
  return designated_bridge_priority_;
}
inline void Stp_Rstp_Interfaces_Interface_State::set_allocated_designated_bridge_priority(::ywrapper::UintValue* designated_bridge_priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(designated_bridge_priority_);
  }
  if (designated_bridge_priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      designated_bridge_priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, designated_bridge_priority, submessage_arena);
    }
    
  } else {
    
  }
  designated_bridge_priority_ = designated_bridge_priority;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_bridge_priority)
}

// .ywrapper.UintValue designated_cost = 246446598 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-cost"];
inline bool Stp_Rstp_Interfaces_Interface_State::has_designated_cost() const {
  return this != internal_default_instance() && designated_cost_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_Interfaces_Interface_State::designated_cost() const {
  const ::ywrapper::UintValue* p = designated_cost_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_cost)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_Interfaces_Interface_State::release_designated_cost() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_cost)
  
  ::ywrapper::UintValue* temp = designated_cost_;
  designated_cost_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_Interfaces_Interface_State::mutable_designated_cost() {
  
  if (designated_cost_ == NULL) {
    designated_cost_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_cost)
  return designated_cost_;
}
inline void Stp_Rstp_Interfaces_Interface_State::set_allocated_designated_cost(::ywrapper::UintValue* designated_cost) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(designated_cost_);
  }
  if (designated_cost) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      designated_cost = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, designated_cost, submessage_arena);
    }
    
  } else {
    
  }
  designated_cost_ = designated_cost;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_cost)
}

// .ywrapper.UintValue designated_port_num = 328815587 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-port-num"];
inline bool Stp_Rstp_Interfaces_Interface_State::has_designated_port_num() const {
  return this != internal_default_instance() && designated_port_num_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_Interfaces_Interface_State::designated_port_num() const {
  const ::ywrapper::UintValue* p = designated_port_num_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_port_num)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_Interfaces_Interface_State::release_designated_port_num() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_port_num)
  
  ::ywrapper::UintValue* temp = designated_port_num_;
  designated_port_num_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_Interfaces_Interface_State::mutable_designated_port_num() {
  
  if (designated_port_num_ == NULL) {
    designated_port_num_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_port_num)
  return designated_port_num_;
}
inline void Stp_Rstp_Interfaces_Interface_State::set_allocated_designated_port_num(::ywrapper::UintValue* designated_port_num) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(designated_port_num_);
  }
  if (designated_port_num) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      designated_port_num = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, designated_port_num, submessage_arena);
    }
    
  } else {
    
  }
  designated_port_num_ = designated_port_num;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_port_num)
}

// .ywrapper.UintValue designated_port_priority = 514948785 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-port-priority"];
inline bool Stp_Rstp_Interfaces_Interface_State::has_designated_port_priority() const {
  return this != internal_default_instance() && designated_port_priority_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_Interfaces_Interface_State::designated_port_priority() const {
  const ::ywrapper::UintValue* p = designated_port_priority_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_port_priority)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_Interfaces_Interface_State::release_designated_port_priority() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_port_priority)
  
  ::ywrapper::UintValue* temp = designated_port_priority_;
  designated_port_priority_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_Interfaces_Interface_State::mutable_designated_port_priority() {
  
  if (designated_port_priority_ == NULL) {
    designated_port_priority_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_port_priority)
  return designated_port_priority_;
}
inline void Stp_Rstp_Interfaces_Interface_State::set_allocated_designated_port_priority(::ywrapper::UintValue* designated_port_priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(designated_port_priority_);
  }
  if (designated_port_priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      designated_port_priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, designated_port_priority, submessage_arena);
    }
    
  } else {
    
  }
  designated_port_priority_ = designated_port_priority;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_port_priority)
}

// .ywrapper.StringValue designated_root_address = 38863474 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-root-address"];
inline bool Stp_Rstp_Interfaces_Interface_State::has_designated_root_address() const {
  return this != internal_default_instance() && designated_root_address_ != NULL;
}
inline const ::ywrapper::StringValue& Stp_Rstp_Interfaces_Interface_State::designated_root_address() const {
  const ::ywrapper::StringValue* p = designated_root_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_root_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Stp_Rstp_Interfaces_Interface_State::release_designated_root_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_root_address)
  
  ::ywrapper::StringValue* temp = designated_root_address_;
  designated_root_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Stp_Rstp_Interfaces_Interface_State::mutable_designated_root_address() {
  
  if (designated_root_address_ == NULL) {
    designated_root_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_root_address)
  return designated_root_address_;
}
inline void Stp_Rstp_Interfaces_Interface_State::set_allocated_designated_root_address(::ywrapper::StringValue* designated_root_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(designated_root_address_);
  }
  if (designated_root_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      designated_root_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, designated_root_address, submessage_arena);
    }
    
  } else {
    
  }
  designated_root_address_ = designated_root_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_root_address)
}

// .ywrapper.UintValue designated_root_priority = 341500118 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/designated-root-priority"];
inline bool Stp_Rstp_Interfaces_Interface_State::has_designated_root_priority() const {
  return this != internal_default_instance() && designated_root_priority_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_Interfaces_Interface_State::designated_root_priority() const {
  const ::ywrapper::UintValue* p = designated_root_priority_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_root_priority)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_Interfaces_Interface_State::release_designated_root_priority() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_root_priority)
  
  ::ywrapper::UintValue* temp = designated_root_priority_;
  designated_root_priority_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_Interfaces_Interface_State::mutable_designated_root_priority() {
  
  if (designated_root_priority_ == NULL) {
    designated_root_priority_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_root_priority)
  return designated_root_priority_;
}
inline void Stp_Rstp_Interfaces_Interface_State::set_allocated_designated_root_priority(::ywrapper::UintValue* designated_root_priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(designated_root_priority_);
  }
  if (designated_root_priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      designated_root_priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, designated_root_priority, submessage_arena);
    }
    
  } else {
    
  }
  designated_root_priority_ = designated_root_priority;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.designated_root_priority)
}

// .ywrapper.UintValue forward_transisitions = 239692746 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/forward-transisitions"];
inline bool Stp_Rstp_Interfaces_Interface_State::has_forward_transisitions() const {
  return this != internal_default_instance() && forward_transisitions_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_Interfaces_Interface_State::forward_transisitions() const {
  const ::ywrapper::UintValue* p = forward_transisitions_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.forward_transisitions)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_Interfaces_Interface_State::release_forward_transisitions() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.forward_transisitions)
  
  ::ywrapper::UintValue* temp = forward_transisitions_;
  forward_transisitions_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_Interfaces_Interface_State::mutable_forward_transisitions() {
  
  if (forward_transisitions_ == NULL) {
    forward_transisitions_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.forward_transisitions)
  return forward_transisitions_;
}
inline void Stp_Rstp_Interfaces_Interface_State::set_allocated_forward_transisitions(::ywrapper::UintValue* forward_transisitions) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(forward_transisitions_);
  }
  if (forward_transisitions) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      forward_transisitions = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, forward_transisitions, submessage_arena);
    }
    
  } else {
    
  }
  forward_transisitions_ = forward_transisitions;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.forward_transisitions)
}

// .ywrapper.StringValue name = 449319447 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/name"];
inline bool Stp_Rstp_Interfaces_Interface_State::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& Stp_Rstp_Interfaces_Interface_State::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Stp_Rstp_Interfaces_Interface_State::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Stp_Rstp_Interfaces_Interface_State::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.name)
  return name_;
}
inline void Stp_Rstp_Interfaces_Interface_State::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.name)
}

// .ywrapper.UintValue port_num = 226492252 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/port-num"];
inline bool Stp_Rstp_Interfaces_Interface_State::has_port_num() const {
  return this != internal_default_instance() && port_num_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_Interfaces_Interface_State::port_num() const {
  const ::ywrapper::UintValue* p = port_num_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.port_num)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_Interfaces_Interface_State::release_port_num() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.port_num)
  
  ::ywrapper::UintValue* temp = port_num_;
  port_num_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_Interfaces_Interface_State::mutable_port_num() {
  
  if (port_num_ == NULL) {
    port_num_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.port_num)
  return port_num_;
}
inline void Stp_Rstp_Interfaces_Interface_State::set_allocated_port_num(::ywrapper::UintValue* port_num) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(port_num_);
  }
  if (port_num) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      port_num = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, port_num, submessage_arena);
    }
    
  } else {
    
  }
  port_num_ = port_num;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.port_num)
}

// .ywrapper.UintValue port_priority = 118646276 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/port-priority"];
inline bool Stp_Rstp_Interfaces_Interface_State::has_port_priority() const {
  return this != internal_default_instance() && port_priority_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_Interfaces_Interface_State::port_priority() const {
  const ::ywrapper::UintValue* p = port_priority_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.port_priority)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_Interfaces_Interface_State::release_port_priority() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.port_priority)
  
  ::ywrapper::UintValue* temp = port_priority_;
  port_priority_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_Interfaces_Interface_State::mutable_port_priority() {
  
  if (port_priority_ == NULL) {
    port_priority_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.port_priority)
  return port_priority_;
}
inline void Stp_Rstp_Interfaces_Interface_State::set_allocated_port_priority(::ywrapper::UintValue* port_priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(port_priority_);
  }
  if (port_priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      port_priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, port_priority, submessage_arena);
    }
    
  } else {
    
  }
  port_priority_ = port_priority;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.port_priority)
}

// .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTSTATE port_state = 99013219 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/port-state"];
inline void Stp_Rstp_Interfaces_Interface_State::clear_port_state() {
  port_state_ = 0;
}
inline ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTSTATE Stp_Rstp_Interfaces_Interface_State::port_state() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.port_state)
  return static_cast< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTSTATE >(port_state_);
}
inline void Stp_Rstp_Interfaces_Interface_State::set_port_state(::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTSTATE value) {
  
  port_state_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.port_state)
}

// .openconfig.enums.OpenconfigSpanningTreeTypesSTPPORTROLE role = 363416170 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state/role"];
inline void Stp_Rstp_Interfaces_Interface_State::clear_role() {
  role_ = 0;
}
inline ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTROLE Stp_Rstp_Interfaces_Interface_State::role() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.role)
  return static_cast< ::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTROLE >(role_);
}
inline void Stp_Rstp_Interfaces_Interface_State::set_role(::openconfig::enums::OpenconfigSpanningTreeTypesSTPPORTROLE value) {
  
  role_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State.role)
}

// -------------------------------------------------------------------

// Stp_Rstp_Interfaces_Interface

// .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.Config config = 420941170 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/config"];
inline bool Stp_Rstp_Interfaces_Interface::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Stp_Rstp_Interfaces_Interface::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_Config& Stp_Rstp_Interfaces_Interface::config() const {
  const ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_Config*>(
      &::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_Config_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_Config* Stp_Rstp_Interfaces_Interface::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.config)
  
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_Config* Stp_Rstp_Interfaces_Interface::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.config)
  return config_;
}
inline void Stp_Rstp_Interfaces_Interface::set_allocated_config(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.config)
}

// .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.State state = 463506799 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/state"];
inline bool Stp_Rstp_Interfaces_Interface::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Stp_Rstp_Interfaces_Interface::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State& Stp_Rstp_Interfaces_Interface::state() const {
  const ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State*>(
      &::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_State_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State* Stp_Rstp_Interfaces_Interface::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.state)
  
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State* Stp_Rstp_Interfaces_Interface::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.state)
  return state_;
}
inline void Stp_Rstp_Interfaces_Interface::set_allocated_state(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface.state)
}

// -------------------------------------------------------------------

// Stp_Rstp_Interfaces_InterfaceKey

// string name = 1 [(.yext.schemapath) = "/stp/rstp/interfaces/interface/name"];
inline void Stp_Rstp_Interfaces_InterfaceKey::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Stp_Rstp_Interfaces_InterfaceKey::name() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey.name)
  return name_.GetNoArena();
}
inline void Stp_Rstp_Interfaces_InterfaceKey::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey.name)
}
#if LANG_CXX11
inline void Stp_Rstp_Interfaces_InterfaceKey::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey.name)
}
#endif
inline void Stp_Rstp_Interfaces_InterfaceKey::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey.name)
}
inline void Stp_Rstp_Interfaces_InterfaceKey::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey.name)
}
inline ::std::string* Stp_Rstp_Interfaces_InterfaceKey::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Stp_Rstp_Interfaces_InterfaceKey::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Stp_Rstp_Interfaces_InterfaceKey::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey.name)
}

// .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.Interface interface = 2;
inline bool Stp_Rstp_Interfaces_InterfaceKey::has_interface() const {
  return this != internal_default_instance() && interface_ != NULL;
}
inline void Stp_Rstp_Interfaces_InterfaceKey::clear_interface() {
  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface& Stp_Rstp_Interfaces_InterfaceKey::interface() const {
  const ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface* p = interface_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey.interface)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface*>(
      &::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_Interface_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface* Stp_Rstp_Interfaces_InterfaceKey::release_interface() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey.interface)
  
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface* temp = interface_;
  interface_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface* Stp_Rstp_Interfaces_InterfaceKey::mutable_interface() {
  
  if (interface_ == NULL) {
    interface_ = new ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey.interface)
  return interface_;
}
inline void Stp_Rstp_Interfaces_InterfaceKey::set_allocated_interface(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_Interface* interface) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete interface_;
  }
  if (interface) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interface = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interface, submessage_arena);
    }
    
  } else {
    
  }
  interface_ = interface;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey.interface)
}

// -------------------------------------------------------------------

// Stp_Rstp_Interfaces

// repeated .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.InterfaceKey interface = 355189053 [(.yext.schemapath) = "/stp/rstp/interfaces/interface"];
inline int Stp_Rstp_Interfaces::interface_size() const {
  return interface_.size();
}
inline void Stp_Rstp_Interfaces::clear_interface() {
  interface_.Clear();
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_InterfaceKey& Stp_Rstp_Interfaces::interface(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.interface)
  return interface_.Get(index);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_InterfaceKey* Stp_Rstp_Interfaces::mutable_interface(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.interface)
  return interface_.Mutable(index);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_InterfaceKey* Stp_Rstp_Interfaces::add_interface() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.interface)
  return interface_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_InterfaceKey >*
Stp_Rstp_Interfaces::mutable_interface() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.interface)
  return &interface_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces_InterfaceKey >&
Stp_Rstp_Interfaces::interface() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces.interface)
  return interface_;
}

// -------------------------------------------------------------------

// Stp_Rstp_State

// .ywrapper.StringValue bridge_address = 213481315 [(.yext.schemapath) = "/stp/rstp/state/bridge-address"];
inline bool Stp_Rstp_State::has_bridge_address() const {
  return this != internal_default_instance() && bridge_address_ != NULL;
}
inline const ::ywrapper::StringValue& Stp_Rstp_State::bridge_address() const {
  const ::ywrapper::StringValue* p = bridge_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.State.bridge_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Stp_Rstp_State::release_bridge_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.State.bridge_address)
  
  ::ywrapper::StringValue* temp = bridge_address_;
  bridge_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Stp_Rstp_State::mutable_bridge_address() {
  
  if (bridge_address_ == NULL) {
    bridge_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.State.bridge_address)
  return bridge_address_;
}
inline void Stp_Rstp_State::set_allocated_bridge_address(::ywrapper::StringValue* bridge_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bridge_address_);
  }
  if (bridge_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bridge_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bridge_address, submessage_arena);
    }
    
  } else {
    
  }
  bridge_address_ = bridge_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.State.bridge_address)
}

// .ywrapper.UintValue bridge_priority = 63741073 [(.yext.schemapath) = "/stp/rstp/state/bridge-priority"];
inline bool Stp_Rstp_State::has_bridge_priority() const {
  return this != internal_default_instance() && bridge_priority_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_State::bridge_priority() const {
  const ::ywrapper::UintValue* p = bridge_priority_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.State.bridge_priority)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_State::release_bridge_priority() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.State.bridge_priority)
  
  ::ywrapper::UintValue* temp = bridge_priority_;
  bridge_priority_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_State::mutable_bridge_priority() {
  
  if (bridge_priority_ == NULL) {
    bridge_priority_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.State.bridge_priority)
  return bridge_priority_;
}
inline void Stp_Rstp_State::set_allocated_bridge_priority(::ywrapper::UintValue* bridge_priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(bridge_priority_);
  }
  if (bridge_priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      bridge_priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, bridge_priority, submessage_arena);
    }
    
  } else {
    
  }
  bridge_priority_ = bridge_priority;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.State.bridge_priority)
}

// .ywrapper.StringValue designated_root_address = 45031113 [(.yext.schemapath) = "/stp/rstp/state/designated-root-address"];
inline bool Stp_Rstp_State::has_designated_root_address() const {
  return this != internal_default_instance() && designated_root_address_ != NULL;
}
inline const ::ywrapper::StringValue& Stp_Rstp_State::designated_root_address() const {
  const ::ywrapper::StringValue* p = designated_root_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.State.designated_root_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* Stp_Rstp_State::release_designated_root_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.State.designated_root_address)
  
  ::ywrapper::StringValue* temp = designated_root_address_;
  designated_root_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* Stp_Rstp_State::mutable_designated_root_address() {
  
  if (designated_root_address_ == NULL) {
    designated_root_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.State.designated_root_address)
  return designated_root_address_;
}
inline void Stp_Rstp_State::set_allocated_designated_root_address(::ywrapper::StringValue* designated_root_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(designated_root_address_);
  }
  if (designated_root_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      designated_root_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, designated_root_address, submessage_arena);
    }
    
  } else {
    
  }
  designated_root_address_ = designated_root_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.State.designated_root_address)
}

// .ywrapper.UintValue designated_root_priority = 269547755 [(.yext.schemapath) = "/stp/rstp/state/designated-root-priority"];
inline bool Stp_Rstp_State::has_designated_root_priority() const {
  return this != internal_default_instance() && designated_root_priority_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_State::designated_root_priority() const {
  const ::ywrapper::UintValue* p = designated_root_priority_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.State.designated_root_priority)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_State::release_designated_root_priority() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.State.designated_root_priority)
  
  ::ywrapper::UintValue* temp = designated_root_priority_;
  designated_root_priority_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_State::mutable_designated_root_priority() {
  
  if (designated_root_priority_ == NULL) {
    designated_root_priority_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.State.designated_root_priority)
  return designated_root_priority_;
}
inline void Stp_Rstp_State::set_allocated_designated_root_priority(::ywrapper::UintValue* designated_root_priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(designated_root_priority_);
  }
  if (designated_root_priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      designated_root_priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, designated_root_priority, submessage_arena);
    }
    
  } else {
    
  }
  designated_root_priority_ = designated_root_priority;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.State.designated_root_priority)
}

// .ywrapper.UintValue forwarding_delay = 386063712 [(.yext.schemapath) = "/stp/rstp/state/forwarding-delay"];
inline bool Stp_Rstp_State::has_forwarding_delay() const {
  return this != internal_default_instance() && forwarding_delay_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_State::forwarding_delay() const {
  const ::ywrapper::UintValue* p = forwarding_delay_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.State.forwarding_delay)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_State::release_forwarding_delay() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.State.forwarding_delay)
  
  ::ywrapper::UintValue* temp = forwarding_delay_;
  forwarding_delay_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_State::mutable_forwarding_delay() {
  
  if (forwarding_delay_ == NULL) {
    forwarding_delay_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.State.forwarding_delay)
  return forwarding_delay_;
}
inline void Stp_Rstp_State::set_allocated_forwarding_delay(::ywrapper::UintValue* forwarding_delay) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(forwarding_delay_);
  }
  if (forwarding_delay) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      forwarding_delay = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, forwarding_delay, submessage_arena);
    }
    
  } else {
    
  }
  forwarding_delay_ = forwarding_delay;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.State.forwarding_delay)
}

// .ywrapper.UintValue hello_time = 491083589 [(.yext.schemapath) = "/stp/rstp/state/hello-time"];
inline bool Stp_Rstp_State::has_hello_time() const {
  return this != internal_default_instance() && hello_time_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_State::hello_time() const {
  const ::ywrapper::UintValue* p = hello_time_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.State.hello_time)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_State::release_hello_time() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.State.hello_time)
  
  ::ywrapper::UintValue* temp = hello_time_;
  hello_time_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_State::mutable_hello_time() {
  
  if (hello_time_ == NULL) {
    hello_time_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.State.hello_time)
  return hello_time_;
}
inline void Stp_Rstp_State::set_allocated_hello_time(::ywrapper::UintValue* hello_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hello_time_);
  }
  if (hello_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hello_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hello_time, submessage_arena);
    }
    
  } else {
    
  }
  hello_time_ = hello_time;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.State.hello_time)
}

// .ywrapper.UintValue hold_count = 17772518 [(.yext.schemapath) = "/stp/rstp/state/hold-count"];
inline bool Stp_Rstp_State::has_hold_count() const {
  return this != internal_default_instance() && hold_count_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_State::hold_count() const {
  const ::ywrapper::UintValue* p = hold_count_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.State.hold_count)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_State::release_hold_count() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.State.hold_count)
  
  ::ywrapper::UintValue* temp = hold_count_;
  hold_count_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_State::mutable_hold_count() {
  
  if (hold_count_ == NULL) {
    hold_count_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.State.hold_count)
  return hold_count_;
}
inline void Stp_Rstp_State::set_allocated_hold_count(::ywrapper::UintValue* hold_count) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hold_count_);
  }
  if (hold_count) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hold_count = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hold_count, submessage_arena);
    }
    
  } else {
    
  }
  hold_count_ = hold_count;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.State.hold_count)
}

// .ywrapper.UintValue hold_time = 406520974 [(.yext.schemapath) = "/stp/rstp/state/hold-time"];
inline bool Stp_Rstp_State::has_hold_time() const {
  return this != internal_default_instance() && hold_time_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_State::hold_time() const {
  const ::ywrapper::UintValue* p = hold_time_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.State.hold_time)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_State::release_hold_time() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.State.hold_time)
  
  ::ywrapper::UintValue* temp = hold_time_;
  hold_time_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_State::mutable_hold_time() {
  
  if (hold_time_ == NULL) {
    hold_time_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.State.hold_time)
  return hold_time_;
}
inline void Stp_Rstp_State::set_allocated_hold_time(::ywrapper::UintValue* hold_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hold_time_);
  }
  if (hold_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hold_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hold_time, submessage_arena);
    }
    
  } else {
    
  }
  hold_time_ = hold_time;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.State.hold_time)
}

// .ywrapper.UintValue max_age = 80445073 [(.yext.schemapath) = "/stp/rstp/state/max-age"];
inline bool Stp_Rstp_State::has_max_age() const {
  return this != internal_default_instance() && max_age_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_State::max_age() const {
  const ::ywrapper::UintValue* p = max_age_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.State.max_age)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_State::release_max_age() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.State.max_age)
  
  ::ywrapper::UintValue* temp = max_age_;
  max_age_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_State::mutable_max_age() {
  
  if (max_age_ == NULL) {
    max_age_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.State.max_age)
  return max_age_;
}
inline void Stp_Rstp_State::set_allocated_max_age(::ywrapper::UintValue* max_age) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_age_);
  }
  if (max_age) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max_age = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max_age, submessage_arena);
    }
    
  } else {
    
  }
  max_age_ = max_age;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.State.max_age)
}

// .ywrapper.UintValue root_cost = 495356843 [(.yext.schemapath) = "/stp/rstp/state/root-cost"];
inline bool Stp_Rstp_State::has_root_cost() const {
  return this != internal_default_instance() && root_cost_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_State::root_cost() const {
  const ::ywrapper::UintValue* p = root_cost_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.State.root_cost)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_State::release_root_cost() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.State.root_cost)
  
  ::ywrapper::UintValue* temp = root_cost_;
  root_cost_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_State::mutable_root_cost() {
  
  if (root_cost_ == NULL) {
    root_cost_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.State.root_cost)
  return root_cost_;
}
inline void Stp_Rstp_State::set_allocated_root_cost(::ywrapper::UintValue* root_cost) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(root_cost_);
  }
  if (root_cost) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      root_cost = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, root_cost, submessage_arena);
    }
    
  } else {
    
  }
  root_cost_ = root_cost;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.State.root_cost)
}

// .ywrapper.UintValue root_port = 510345949 [(.yext.schemapath) = "/stp/rstp/state/root-port"];
inline bool Stp_Rstp_State::has_root_port() const {
  return this != internal_default_instance() && root_port_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_State::root_port() const {
  const ::ywrapper::UintValue* p = root_port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.State.root_port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_State::release_root_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.State.root_port)
  
  ::ywrapper::UintValue* temp = root_port_;
  root_port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_State::mutable_root_port() {
  
  if (root_port_ == NULL) {
    root_port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.State.root_port)
  return root_port_;
}
inline void Stp_Rstp_State::set_allocated_root_port(::ywrapper::UintValue* root_port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(root_port_);
  }
  if (root_port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      root_port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, root_port, submessage_arena);
    }
    
  } else {
    
  }
  root_port_ = root_port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.State.root_port)
}

// .ywrapper.UintValue time_since_topology_change = 236457242 [(.yext.schemapath) = "/stp/rstp/state/time-since-topology-change"];
inline bool Stp_Rstp_State::has_time_since_topology_change() const {
  return this != internal_default_instance() && time_since_topology_change_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_State::time_since_topology_change() const {
  const ::ywrapper::UintValue* p = time_since_topology_change_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.State.time_since_topology_change)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_State::release_time_since_topology_change() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.State.time_since_topology_change)
  
  ::ywrapper::UintValue* temp = time_since_topology_change_;
  time_since_topology_change_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_State::mutable_time_since_topology_change() {
  
  if (time_since_topology_change_ == NULL) {
    time_since_topology_change_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.State.time_since_topology_change)
  return time_since_topology_change_;
}
inline void Stp_Rstp_State::set_allocated_time_since_topology_change(::ywrapper::UintValue* time_since_topology_change) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(time_since_topology_change_);
  }
  if (time_since_topology_change) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      time_since_topology_change = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time_since_topology_change, submessage_arena);
    }
    
  } else {
    
  }
  time_since_topology_change_ = time_since_topology_change;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.State.time_since_topology_change)
}

// .ywrapper.UintValue topology_changes = 266385392 [(.yext.schemapath) = "/stp/rstp/state/topology-changes"];
inline bool Stp_Rstp_State::has_topology_changes() const {
  return this != internal_default_instance() && topology_changes_ != NULL;
}
inline const ::ywrapper::UintValue& Stp_Rstp_State::topology_changes() const {
  const ::ywrapper::UintValue* p = topology_changes_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.State.topology_changes)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* Stp_Rstp_State::release_topology_changes() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.State.topology_changes)
  
  ::ywrapper::UintValue* temp = topology_changes_;
  topology_changes_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* Stp_Rstp_State::mutable_topology_changes() {
  
  if (topology_changes_ == NULL) {
    topology_changes_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.State.topology_changes)
  return topology_changes_;
}
inline void Stp_Rstp_State::set_allocated_topology_changes(::ywrapper::UintValue* topology_changes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(topology_changes_);
  }
  if (topology_changes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      topology_changes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, topology_changes, submessage_arena);
    }
    
  } else {
    
  }
  topology_changes_ = topology_changes;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.State.topology_changes)
}

// -------------------------------------------------------------------

// Stp_Rstp

// .openconfig.openconfig_spanning_tree.Stp.Rstp.Config config = 423209211 [(.yext.schemapath) = "/stp/rstp/config"];
inline bool Stp_Rstp::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void Stp_Rstp::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Rstp_Config& Stp_Rstp::config() const {
  const ::openconfig::openconfig_spanning_tree::Stp_Rstp_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_Rstp_Config*>(
      &::openconfig::openconfig_spanning_tree::_Stp_Rstp_Config_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Rstp_Config* Stp_Rstp::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.config)
  
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_Rstp_Config* Stp_Rstp::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_spanning_tree::Stp_Rstp_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.config)
  return config_;
}
inline void Stp_Rstp::set_allocated_config(::openconfig::openconfig_spanning_tree::Stp_Rstp_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.config)
}

// .openconfig.openconfig_spanning_tree.Stp.Rstp.Interfaces interfaces = 234621345 [(.yext.schemapath) = "/stp/rstp/interfaces"];
inline bool Stp_Rstp::has_interfaces() const {
  return this != internal_default_instance() && interfaces_ != NULL;
}
inline void Stp_Rstp::clear_interfaces() {
  if (GetArenaNoVirtual() == NULL && interfaces_ != NULL) {
    delete interfaces_;
  }
  interfaces_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces& Stp_Rstp::interfaces() const {
  const ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces* p = interfaces_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.interfaces)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces*>(
      &::openconfig::openconfig_spanning_tree::_Stp_Rstp_Interfaces_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces* Stp_Rstp::release_interfaces() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.interfaces)
  
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces* temp = interfaces_;
  interfaces_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces* Stp_Rstp::mutable_interfaces() {
  
  if (interfaces_ == NULL) {
    interfaces_ = new ::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.interfaces)
  return interfaces_;
}
inline void Stp_Rstp::set_allocated_interfaces(::openconfig::openconfig_spanning_tree::Stp_Rstp_Interfaces* interfaces) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete interfaces_;
  }
  if (interfaces) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interfaces = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interfaces, submessage_arena);
    }
    
  } else {
    
  }
  interfaces_ = interfaces;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.interfaces)
}

// .openconfig.openconfig_spanning_tree.Stp.Rstp.State state = 289330300 [(.yext.schemapath) = "/stp/rstp/state"];
inline bool Stp_Rstp::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void Stp_Rstp::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Rstp_State& Stp_Rstp::state() const {
  const ::openconfig::openconfig_spanning_tree::Stp_Rstp_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.Rstp.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_Rstp_State*>(
      &::openconfig::openconfig_spanning_tree::_Stp_Rstp_State_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Rstp_State* Stp_Rstp::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.Rstp.state)
  
  ::openconfig::openconfig_spanning_tree::Stp_Rstp_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_Rstp_State* Stp_Rstp::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_spanning_tree::Stp_Rstp_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.Rstp.state)
  return state_;
}
inline void Stp_Rstp::set_allocated_state(::openconfig::openconfig_spanning_tree::Stp_Rstp_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.Rstp.state)
}

// -------------------------------------------------------------------

// Stp

// .openconfig.openconfig_spanning_tree.Stp.Global global = 195120946 [(.yext.schemapath) = "/stp/global"];
inline bool Stp::has_global() const {
  return this != internal_default_instance() && global_ != NULL;
}
inline void Stp::clear_global() {
  if (GetArenaNoVirtual() == NULL && global_ != NULL) {
    delete global_;
  }
  global_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Global& Stp::global() const {
  const ::openconfig::openconfig_spanning_tree::Stp_Global* p = global_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.global)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_Global*>(
      &::openconfig::openconfig_spanning_tree::_Stp_Global_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Global* Stp::release_global() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.global)
  
  ::openconfig::openconfig_spanning_tree::Stp_Global* temp = global_;
  global_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_Global* Stp::mutable_global() {
  
  if (global_ == NULL) {
    global_ = new ::openconfig::openconfig_spanning_tree::Stp_Global;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.global)
  return global_;
}
inline void Stp::set_allocated_global(::openconfig::openconfig_spanning_tree::Stp_Global* global) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete global_;
  }
  if (global) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      global = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, global, submessage_arena);
    }
    
  } else {
    
  }
  global_ = global;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.global)
}

// .openconfig.openconfig_spanning_tree.Stp.Interfaces interfaces = 384420651 [(.yext.schemapath) = "/stp/interfaces"];
inline bool Stp::has_interfaces() const {
  return this != internal_default_instance() && interfaces_ != NULL;
}
inline void Stp::clear_interfaces() {
  if (GetArenaNoVirtual() == NULL && interfaces_ != NULL) {
    delete interfaces_;
  }
  interfaces_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Interfaces& Stp::interfaces() const {
  const ::openconfig::openconfig_spanning_tree::Stp_Interfaces* p = interfaces_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.interfaces)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_Interfaces*>(
      &::openconfig::openconfig_spanning_tree::_Stp_Interfaces_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Interfaces* Stp::release_interfaces() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.interfaces)
  
  ::openconfig::openconfig_spanning_tree::Stp_Interfaces* temp = interfaces_;
  interfaces_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_Interfaces* Stp::mutable_interfaces() {
  
  if (interfaces_ == NULL) {
    interfaces_ = new ::openconfig::openconfig_spanning_tree::Stp_Interfaces;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.interfaces)
  return interfaces_;
}
inline void Stp::set_allocated_interfaces(::openconfig::openconfig_spanning_tree::Stp_Interfaces* interfaces) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete interfaces_;
  }
  if (interfaces) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interfaces = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interfaces, submessage_arena);
    }
    
  } else {
    
  }
  interfaces_ = interfaces;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.interfaces)
}

// .openconfig.openconfig_spanning_tree.Stp.Mstp mstp = 306126631 [(.yext.schemapath) = "/stp/mstp"];
inline bool Stp::has_mstp() const {
  return this != internal_default_instance() && mstp_ != NULL;
}
inline void Stp::clear_mstp() {
  if (GetArenaNoVirtual() == NULL && mstp_ != NULL) {
    delete mstp_;
  }
  mstp_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Mstp& Stp::mstp() const {
  const ::openconfig::openconfig_spanning_tree::Stp_Mstp* p = mstp_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.mstp)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_Mstp*>(
      &::openconfig::openconfig_spanning_tree::_Stp_Mstp_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp* Stp::release_mstp() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.mstp)
  
  ::openconfig::openconfig_spanning_tree::Stp_Mstp* temp = mstp_;
  mstp_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_Mstp* Stp::mutable_mstp() {
  
  if (mstp_ == NULL) {
    mstp_ = new ::openconfig::openconfig_spanning_tree::Stp_Mstp;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.mstp)
  return mstp_;
}
inline void Stp::set_allocated_mstp(::openconfig::openconfig_spanning_tree::Stp_Mstp* mstp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete mstp_;
  }
  if (mstp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      mstp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, mstp, submessage_arena);
    }
    
  } else {
    
  }
  mstp_ = mstp;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.mstp)
}

// .openconfig.openconfig_spanning_tree.Stp.RapidPvst rapid_pvst = 113534595 [(.yext.schemapath) = "/stp/rapid-pvst"];
inline bool Stp::has_rapid_pvst() const {
  return this != internal_default_instance() && rapid_pvst_ != NULL;
}
inline void Stp::clear_rapid_pvst() {
  if (GetArenaNoVirtual() == NULL && rapid_pvst_ != NULL) {
    delete rapid_pvst_;
  }
  rapid_pvst_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst& Stp::rapid_pvst() const {
  const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst* p = rapid_pvst_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.rapid_pvst)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_RapidPvst*>(
      &::openconfig::openconfig_spanning_tree::_Stp_RapidPvst_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_RapidPvst* Stp::release_rapid_pvst() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.rapid_pvst)
  
  ::openconfig::openconfig_spanning_tree::Stp_RapidPvst* temp = rapid_pvst_;
  rapid_pvst_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_RapidPvst* Stp::mutable_rapid_pvst() {
  
  if (rapid_pvst_ == NULL) {
    rapid_pvst_ = new ::openconfig::openconfig_spanning_tree::Stp_RapidPvst;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.rapid_pvst)
  return rapid_pvst_;
}
inline void Stp::set_allocated_rapid_pvst(::openconfig::openconfig_spanning_tree::Stp_RapidPvst* rapid_pvst) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rapid_pvst_;
  }
  if (rapid_pvst) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rapid_pvst = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rapid_pvst, submessage_arena);
    }
    
  } else {
    
  }
  rapid_pvst_ = rapid_pvst;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.rapid_pvst)
}

// .openconfig.openconfig_spanning_tree.Stp.Rstp rstp = 91792426 [(.yext.schemapath) = "/stp/rstp"];
inline bool Stp::has_rstp() const {
  return this != internal_default_instance() && rstp_ != NULL;
}
inline void Stp::clear_rstp() {
  if (GetArenaNoVirtual() == NULL && rstp_ != NULL) {
    delete rstp_;
  }
  rstp_ = NULL;
}
inline const ::openconfig::openconfig_spanning_tree::Stp_Rstp& Stp::rstp() const {
  const ::openconfig::openconfig_spanning_tree::Stp_Rstp* p = rstp_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_spanning_tree.Stp.rstp)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_spanning_tree::Stp_Rstp*>(
      &::openconfig::openconfig_spanning_tree::_Stp_Rstp_default_instance_);
}
inline ::openconfig::openconfig_spanning_tree::Stp_Rstp* Stp::release_rstp() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_spanning_tree.Stp.rstp)
  
  ::openconfig::openconfig_spanning_tree::Stp_Rstp* temp = rstp_;
  rstp_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_spanning_tree::Stp_Rstp* Stp::mutable_rstp() {
  
  if (rstp_ == NULL) {
    rstp_ = new ::openconfig::openconfig_spanning_tree::Stp_Rstp;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_spanning_tree.Stp.rstp)
  return rstp_;
}
inline void Stp::set_allocated_rstp(::openconfig::openconfig_spanning_tree::Stp_Rstp* rstp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete rstp_;
  }
  if (rstp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rstp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rstp, submessage_arena);
    }
    
  } else {
    
  }
  rstp_ = rstp;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_spanning_tree.Stp.rstp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace openconfig_spanning_tree
}  // namespace openconfig

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_openconfig_2fopenconfig_5fspanning_5ftree_2fopenconfig_5fspanning_5ftree_2eproto__INCLUDED
