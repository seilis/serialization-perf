// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: openconfig/openconfig_acl/openconfig_acl.proto

#include "openconfig/openconfig_acl/openconfig_acl.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
namespace openconfig {
namespace openconfig_acl {
class Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config>
      _instance;
} _Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config_default_instance_;
class Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State>
      _instance;
} _Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State_default_instance_;
class Acl_AclSets_AclSet_AclEntries_AclEntry_ActionsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_AclEntries_AclEntry_Actions>
      _instance;
} _Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_default_instance_;
class Acl_AclSets_AclSet_AclEntries_AclEntry_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_AclEntries_AclEntry_Config>
      _instance;
} _Acl_AclSets_AclSet_AclEntries_AclEntry_Config_default_instance_;
class Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config>
      _instance;
} _Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config_default_instance_;
class Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config>
      _instance;
} _Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config_default_instance_;
class Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State>
      _instance;
} _Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State_default_instance_;
class Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRefDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef>
      _instance;
} _Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_default_instance_;
class Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State>
      _instance;
} _Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State_default_instance_;
class Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterfaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface>
      _instance;
} _Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_default_instance_;
class Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config>
      _instance;
  int protocol_openconfigpacketmatchtypesipprotocol_;
  ::google::protobuf::uint64 protocol_uint64_;
} _Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_default_instance_;
class Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State>
      _instance;
  int protocol_openconfigpacketmatchtypesipprotocol_;
  ::google::protobuf::uint64 protocol_uint64_;
} _Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_default_instance_;
class Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4>
      _instance;
} _Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_default_instance_;
class Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config>
      _instance;
  int protocol_openconfigpacketmatchtypesipprotocol_;
  ::google::protobuf::uint64 protocol_uint64_;
} _Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_default_instance_;
class Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State>
      _instance;
  int protocol_openconfigpacketmatchtypesipprotocol_;
  ::google::protobuf::uint64 protocol_uint64_;
} _Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_default_instance_;
class Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6>
      _instance;
} _Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_default_instance_;
class Acl_AclSets_AclSet_AclEntries_AclEntry_L2_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config>
      _instance;
  int ethertype_openconfigpacketmatchtypesethertype_;
  ::google::protobuf::uint64 ethertype_uint64_;
} _Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_default_instance_;
class Acl_AclSets_AclSet_AclEntries_AclEntry_L2_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State>
      _instance;
  int ethertype_openconfigpacketmatchtypesethertype_;
  ::google::protobuf::uint64 ethertype_uint64_;
} _Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_default_instance_;
class Acl_AclSets_AclSet_AclEntries_AclEntry_L2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_AclEntries_AclEntry_L2>
      _instance;
} _Acl_AclSets_AclSet_AclEntries_AclEntry_L2_default_instance_;
class Acl_AclSets_AclSet_AclEntries_AclEntry_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_AclEntries_AclEntry_State>
      _instance;
} _Acl_AclSets_AclSet_AclEntries_AclEntry_State_default_instance_;
class Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config>
      _instance;
  int destination_port_destinationport_;
  ::google::protobuf::internal::ArenaStringPtr destination_port_string_;
  ::google::protobuf::uint64 destination_port_uint64_;
  int source_port_sourceport_;
  ::google::protobuf::internal::ArenaStringPtr source_port_string_;
  ::google::protobuf::uint64 source_port_uint64_;
} _Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_default_instance_;
class Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State>
      _instance;
  int destination_port_destinationport_;
  ::google::protobuf::internal::ArenaStringPtr destination_port_string_;
  ::google::protobuf::uint64 destination_port_uint64_;
  int source_port_sourceport_;
  ::google::protobuf::internal::ArenaStringPtr source_port_string_;
  ::google::protobuf::uint64 source_port_uint64_;
} _Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_default_instance_;
class Acl_AclSets_AclSet_AclEntries_AclEntry_TransportDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_AclEntries_AclEntry_Transport>
      _instance;
} _Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_default_instance_;
class Acl_AclSets_AclSet_AclEntries_AclEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_AclEntries_AclEntry>
      _instance;
} _Acl_AclSets_AclSet_AclEntries_AclEntry_default_instance_;
class Acl_AclSets_AclSet_AclEntries_AclEntryKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_AclEntries_AclEntryKey>
      _instance;
} _Acl_AclSets_AclSet_AclEntries_AclEntryKey_default_instance_;
class Acl_AclSets_AclSet_AclEntriesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_AclEntries>
      _instance;
} _Acl_AclSets_AclSet_AclEntries_default_instance_;
class Acl_AclSets_AclSet_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_Config>
      _instance;
} _Acl_AclSets_AclSet_Config_default_instance_;
class Acl_AclSets_AclSet_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet_State>
      _instance;
} _Acl_AclSets_AclSet_State_default_instance_;
class Acl_AclSets_AclSetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSet>
      _instance;
} _Acl_AclSets_AclSet_default_instance_;
class Acl_AclSets_AclSetKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets_AclSetKey>
      _instance;
} _Acl_AclSets_AclSetKey_default_instance_;
class Acl_AclSetsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_AclSets>
      _instance;
} _Acl_AclSets_default_instance_;
class Acl_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_Config>
      _instance;
} _Acl_Config_default_instance_;
class Acl_Interfaces_Interface_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_Interfaces_Interface_Config>
      _instance;
} _Acl_Interfaces_Interface_Config_default_instance_;
class Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State>
      _instance;
} _Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State_default_instance_;
class Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry>
      _instance;
} _Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_default_instance_;
class Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey>
      _instance;
} _Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey_default_instance_;
class Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntriesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries>
      _instance;
} _Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_default_instance_;
class Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config>
      _instance;
} _Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config_default_instance_;
class Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State>
      _instance;
} _Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State_default_instance_;
class Acl_Interfaces_Interface_EgressAclSets_EgressAclSetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_Interfaces_Interface_EgressAclSets_EgressAclSet>
      _instance;
} _Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_default_instance_;
class Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey>
      _instance;
} _Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey_default_instance_;
class Acl_Interfaces_Interface_EgressAclSetsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_Interfaces_Interface_EgressAclSets>
      _instance;
} _Acl_Interfaces_Interface_EgressAclSets_default_instance_;
class Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State>
      _instance;
} _Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State_default_instance_;
class Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry>
      _instance;
} _Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_default_instance_;
class Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey>
      _instance;
} _Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey_default_instance_;
class Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntriesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries>
      _instance;
} _Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_default_instance_;
class Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config>
      _instance;
} _Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config_default_instance_;
class Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State>
      _instance;
} _Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State_default_instance_;
class Acl_Interfaces_Interface_IngressAclSets_IngressAclSetDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_Interfaces_Interface_IngressAclSets_IngressAclSet>
      _instance;
} _Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_default_instance_;
class Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey>
      _instance;
} _Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey_default_instance_;
class Acl_Interfaces_Interface_IngressAclSetsDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_Interfaces_Interface_IngressAclSets>
      _instance;
} _Acl_Interfaces_Interface_IngressAclSets_default_instance_;
class Acl_Interfaces_Interface_InterfaceRef_ConfigDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_Interfaces_Interface_InterfaceRef_Config>
      _instance;
} _Acl_Interfaces_Interface_InterfaceRef_Config_default_instance_;
class Acl_Interfaces_Interface_InterfaceRef_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_Interfaces_Interface_InterfaceRef_State>
      _instance;
} _Acl_Interfaces_Interface_InterfaceRef_State_default_instance_;
class Acl_Interfaces_Interface_InterfaceRefDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_Interfaces_Interface_InterfaceRef>
      _instance;
} _Acl_Interfaces_Interface_InterfaceRef_default_instance_;
class Acl_Interfaces_Interface_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_Interfaces_Interface_State>
      _instance;
} _Acl_Interfaces_Interface_State_default_instance_;
class Acl_Interfaces_InterfaceDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_Interfaces_Interface>
      _instance;
} _Acl_Interfaces_Interface_default_instance_;
class Acl_Interfaces_InterfaceKeyDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_Interfaces_InterfaceKey>
      _instance;
} _Acl_Interfaces_InterfaceKey_default_instance_;
class Acl_InterfacesDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_Interfaces>
      _instance;
} _Acl_Interfaces_default_instance_;
class Acl_StateDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl_State>
      _instance;
} _Acl_State_default_instance_;
class AclDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Acl>
      _instance;
} _Acl_default_instance_;
}  // namespace openconfig_acl
}  // namespace openconfig
namespace protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto {
void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Actions_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Actions_ConfigImpl);
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Actions_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Actions_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Actions_StateImpl);
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_ActionsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Actions_State();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Actions() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_ActionsImpl);
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Config::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_ConfigImpl);
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_ConfigImpl);
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_ConfigImpl);
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_StateImpl);
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRefImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRefImpl);
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_StateImpl);
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterfaceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterfaceImpl);
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_ConfigImpl);
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_StateImpl);
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv4Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv4() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv4Impl);
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_ConfigImpl);
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_StateImpl);
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv6Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv6() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv6Impl);
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_L2_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_L2_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_L2_ConfigImpl);
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_L2_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_L2_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_L2_StateImpl);
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_L2Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_L2_Config();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_L2_State();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_L2() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_L2Impl);
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_State_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_State::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_StateImpl);
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Transport_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Transport_ConfigImpl);
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Transport_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Transport_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Transport_StateImpl);
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_TransportImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Transport_State();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Transport() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_TransportImpl);
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Actions();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Config();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv4();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv6();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_L2();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_State();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Transport();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntryImpl);
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntryKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntryKey_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntryKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntryKey::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntryKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntryKeyImpl);
}

void InitDefaultsAcl_AclSets_AclSet_AclEntriesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntryKey();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_AclEntries() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_AclEntriesImpl);
}

void InitDefaultsAcl_AclSets_AclSet_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_Config::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_ConfigImpl);
}

void InitDefaultsAcl_AclSets_AclSet_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_State_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet_State::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSet_StateImpl);
}

void InitDefaultsAcl_AclSets_AclSetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_Config();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_State();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSet_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSet::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSetImpl);
}

void InitDefaultsAcl_AclSets_AclSetKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_AclSetKey_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets_AclSetKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets_AclSetKey::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets_AclSetKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSets_AclSetKeyImpl);
}

void InitDefaultsAcl_AclSetsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSetKey();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_AclSets_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_AclSets();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_AclSets::InitAsDefaultInstance();
}

void InitDefaultsAcl_AclSets() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_AclSetsImpl);
}

void InitDefaultsAcl_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_Config::InitAsDefaultInstance();
}

void InitDefaultsAcl_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_ConfigImpl);
}

void InitDefaultsAcl_Interfaces_Interface_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_Interfaces_Interface_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_Interfaces_Interface_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_Interfaces_Interface_Config::InitAsDefaultInstance();
}

void InitDefaultsAcl_Interfaces_Interface_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_Interfaces_Interface_ConfigImpl);
}

void InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::InitAsDefaultInstance();
}

void InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_StateImpl);
}

void InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry::InitAsDefaultInstance();
}

void InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryImpl);
}

void InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey::InitAsDefaultInstance();
}

void InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKeyImpl);
}

void InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntriesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries::InitAsDefaultInstance();
}

void InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntriesImpl);
}

void InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::InitAsDefaultInstance();
}

void InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_ConfigImpl);
}

void InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::InitAsDefaultInstance();
}

void InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_StateImpl);
}

void InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_State();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::InitAsDefaultInstance();
}

void InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSetImpl);
}

void InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSetKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey::InitAsDefaultInstance();
}

void InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSetKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSetKeyImpl);
}

void InitDefaultsAcl_Interfaces_Interface_EgressAclSetsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSetKey();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets::InitAsDefaultInstance();
}

void InitDefaultsAcl_Interfaces_Interface_EgressAclSets() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_Interfaces_Interface_EgressAclSetsImpl);
}

void InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::InitAsDefaultInstance();
}

void InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_StateImpl);
}

void InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry::InitAsDefaultInstance();
}

void InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryImpl);
}

void InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey::InitAsDefaultInstance();
}

void InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKeyImpl);
}

void InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntriesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries::InitAsDefaultInstance();
}

void InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntriesImpl);
}

void InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::InitAsDefaultInstance();
}

void InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_ConfigImpl);
}

void InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::InitAsDefaultInstance();
}

void InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_StateImpl);
}

void InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSetImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_State();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::InitAsDefaultInstance();
}

void InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSetImpl);
}

void InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSetKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey::InitAsDefaultInstance();
}

void InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSetKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSetKeyImpl);
}

void InitDefaultsAcl_Interfaces_Interface_IngressAclSetsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSetKey();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets::InitAsDefaultInstance();
}

void InitDefaultsAcl_Interfaces_Interface_IngressAclSets() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_Interfaces_Interface_IngressAclSetsImpl);
}

void InitDefaultsAcl_Interfaces_Interface_InterfaceRef_ConfigImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_Interfaces_Interface_InterfaceRef_Config_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef_Config();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef_Config::InitAsDefaultInstance();
}

void InitDefaultsAcl_Interfaces_Interface_InterfaceRef_Config() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_Interfaces_Interface_InterfaceRef_ConfigImpl);
}

void InitDefaultsAcl_Interfaces_Interface_InterfaceRef_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsUintValue();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_Interfaces_Interface_InterfaceRef_State_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef_State::InitAsDefaultInstance();
}

void InitDefaultsAcl_Interfaces_Interface_InterfaceRef_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_Interfaces_Interface_InterfaceRef_StateImpl);
}

void InitDefaultsAcl_Interfaces_Interface_InterfaceRefImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_InterfaceRef_Config();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_InterfaceRef_State();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_Interfaces_Interface_InterfaceRef_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef::InitAsDefaultInstance();
}

void InitDefaultsAcl_Interfaces_Interface_InterfaceRef() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_Interfaces_Interface_InterfaceRefImpl);
}

void InitDefaultsAcl_Interfaces_Interface_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::InitDefaultsStringValue();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_Interfaces_Interface_State_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_Interfaces_Interface_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_Interfaces_Interface_State::InitAsDefaultInstance();
}

void InitDefaultsAcl_Interfaces_Interface_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_Interfaces_Interface_StateImpl);
}

void InitDefaultsAcl_Interfaces_InterfaceImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_Config();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_EgressAclSets();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_IngressAclSets();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_InterfaceRef();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_State();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_Interfaces_Interface_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_Interfaces_Interface();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_Interfaces_Interface::InitAsDefaultInstance();
}

void InitDefaultsAcl_Interfaces_Interface() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_Interfaces_InterfaceImpl);
}

void InitDefaultsAcl_Interfaces_InterfaceKeyImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_Interfaces_InterfaceKey_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_Interfaces_InterfaceKey();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_Interfaces_InterfaceKey::InitAsDefaultInstance();
}

void InitDefaultsAcl_Interfaces_InterfaceKey() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_Interfaces_InterfaceKeyImpl);
}

void InitDefaultsAcl_InterfacesImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_InterfaceKey();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_Interfaces_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_Interfaces();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_Interfaces::InitAsDefaultInstance();
}

void InitDefaultsAcl_Interfaces() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_InterfacesImpl);
}

void InitDefaultsAcl_StateImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_State_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl_State();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl_State::InitAsDefaultInstance();
}

void InitDefaultsAcl_State() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAcl_StateImpl);
}

void InitDefaultsAclImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Config();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces();
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_State();
  {
    void* ptr = &::openconfig::openconfig_acl::_Acl_default_instance_;
    new (ptr) ::openconfig::openconfig_acl::Acl();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::openconfig::openconfig_acl::Acl::InitAsDefaultInstance();
}

void InitDefaultsAcl() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsAclImpl);
}

::google::protobuf::Metadata file_level_metadata[60];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[4];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config, forwarding_action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config, log_action_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State, forwarding_action_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State, log_action_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Config, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Config, sequence_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config, interface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config, subinterface_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State, interface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State, subinterface_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface, interface_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config, destination_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config, dscp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config, hop_limit_),
  offsetof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_ConfigDefaultTypeInternal, protocol_openconfigpacketmatchtypesipprotocol_),
  offsetof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_ConfigDefaultTypeInternal, protocol_uint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config, source_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config, protocol_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State, destination_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State, dscp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State, hop_limit_),
  offsetof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_StateDefaultTypeInternal, protocol_openconfigpacketmatchtypesipprotocol_),
  offsetof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_StateDefaultTypeInternal, protocol_uint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State, source_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State, protocol_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config, destination_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config, destination_flow_label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config, dscp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config, hop_limit_),
  offsetof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_ConfigDefaultTypeInternal, protocol_openconfigpacketmatchtypesipprotocol_),
  offsetof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_ConfigDefaultTypeInternal, protocol_uint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config, source_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config, source_flow_label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config, protocol_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State, destination_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State, destination_flow_label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State, dscp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State, hop_limit_),
  offsetof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_StateDefaultTypeInternal, protocol_openconfigpacketmatchtypesipprotocol_),
  offsetof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_StateDefaultTypeInternal, protocol_uint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State, source_address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State, source_flow_label_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State, protocol_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config, destination_mac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config, destination_mac_mask_),
  offsetof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_ConfigDefaultTypeInternal, ethertype_openconfigpacketmatchtypesethertype_),
  offsetof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_ConfigDefaultTypeInternal, ethertype_uint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config, source_mac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config, source_mac_mask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config, ethertype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State, destination_mac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State, destination_mac_mask_),
  offsetof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_StateDefaultTypeInternal, ethertype_openconfigpacketmatchtypesethertype_),
  offsetof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_StateDefaultTypeInternal, ethertype_uint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State, source_mac_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State, source_mac_mask_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State, ethertype_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_State, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_State, matched_octets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_State, matched_packets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_State, sequence_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_ConfigDefaultTypeInternal, destination_port_destinationport_),
  offsetof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_ConfigDefaultTypeInternal, destination_port_string_),
  offsetof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_ConfigDefaultTypeInternal, destination_port_uint64_),
  offsetof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_ConfigDefaultTypeInternal, source_port_sourceport_),
  offsetof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_ConfigDefaultTypeInternal, source_port_string_),
  offsetof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_ConfigDefaultTypeInternal, source_port_uint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config, tcp_flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config, destination_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config, source_port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_StateDefaultTypeInternal, destination_port_destinationport_),
  offsetof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_StateDefaultTypeInternal, destination_port_string_),
  offsetof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_StateDefaultTypeInternal, destination_port_uint64_),
  offsetof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_StateDefaultTypeInternal, source_port_sourceport_),
  offsetof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_StateDefaultTypeInternal, source_port_string_),
  offsetof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_StateDefaultTypeInternal, source_port_uint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State, tcp_flags_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State, destination_port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State, source_port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry, actions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry, input_interface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry, ipv4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry, ipv6_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry, l2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry, transport_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntryKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntryKey, sequence_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntryKey, acl_entry_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries, acl_entry_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_Config, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_Config, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_Config, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_State, description_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_State, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet_State, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet, acl_entries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSet, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSetKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSetKey, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSetKey, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets_AclSetKey, acl_set_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_AclSets, acl_set_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_Config, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State, matched_octets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State, matched_packets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State, sequence_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey, sequence_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey, acl_entry_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries, acl_entry_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config, set_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State, set_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet, acl_entries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey, set_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey, egress_acl_set_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets, egress_acl_set_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State, matched_octets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State, matched_packets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State, sequence_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey, sequence_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey, acl_entry_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries, acl_entry_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config, set_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State, set_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet, acl_entries_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey, set_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey, ingress_acl_set_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets, ingress_acl_set_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef_Config, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef_Config, interface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef_Config, subinterface_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef_State, interface_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef_State, subinterface_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface_State, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface, egress_acl_sets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface, ingress_acl_sets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface, interface_ref_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_Interface, state_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_InterfaceKey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_InterfaceKey, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces_InterfaceKey, interface_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_Interfaces, interface_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_State, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl_State, counter_capability_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl, acl_sets_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl, config_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl, interfaces_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::openconfig::openconfig_acl::Acl, state_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config)},
  { 7, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State)},
  { 14, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions)},
  { 21, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Config)},
  { 28, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config)},
  { 33, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config)},
  { 40, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State)},
  { 47, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef)},
  { 54, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State)},
  { 59, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface)},
  { 67, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config)},
  { 79, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State)},
  { 91, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4)},
  { 98, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config)},
  { 112, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State)},
  { 126, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6)},
  { 133, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config)},
  { 145, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State)},
  { 157, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2)},
  { 164, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_State)},
  { 173, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config)},
  { 187, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State)},
  { 201, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport)},
  { 208, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry)},
  { 221, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntryKey)},
  { 228, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries)},
  { 234, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_Config)},
  { 242, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet_State)},
  { 250, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSet)},
  { 258, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets_AclSetKey)},
  { 266, -1, sizeof(::openconfig::openconfig_acl::Acl_AclSets)},
  { 272, -1, sizeof(::openconfig::openconfig_acl::Acl_Config)},
  { 277, -1, sizeof(::openconfig::openconfig_acl::Acl_Interfaces_Interface_Config)},
  { 283, -1, sizeof(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State)},
  { 291, -1, sizeof(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry)},
  { 297, -1, sizeof(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey)},
  { 304, -1, sizeof(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries)},
  { 310, -1, sizeof(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config)},
  { 317, -1, sizeof(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State)},
  { 324, -1, sizeof(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet)},
  { 332, -1, sizeof(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey)},
  { 340, -1, sizeof(::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets)},
  { 346, -1, sizeof(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State)},
  { 354, -1, sizeof(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry)},
  { 360, -1, sizeof(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey)},
  { 367, -1, sizeof(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries)},
  { 373, -1, sizeof(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config)},
  { 380, -1, sizeof(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State)},
  { 387, -1, sizeof(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet)},
  { 395, -1, sizeof(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey)},
  { 403, -1, sizeof(::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets)},
  { 409, -1, sizeof(::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef_Config)},
  { 416, -1, sizeof(::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef_State)},
  { 423, -1, sizeof(::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef)},
  { 430, -1, sizeof(::openconfig::openconfig_acl::Acl_Interfaces_Interface_State)},
  { 436, -1, sizeof(::openconfig::openconfig_acl::Acl_Interfaces_Interface)},
  { 446, -1, sizeof(::openconfig::openconfig_acl::Acl_Interfaces_InterfaceKey)},
  { 453, -1, sizeof(::openconfig::openconfig_acl::Acl_Interfaces)},
  { 459, -1, sizeof(::openconfig::openconfig_acl::Acl_State)},
  { 465, -1, sizeof(::openconfig::openconfig_acl::Acl)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntryKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_AclSetKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_AclSets_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_Interfaces_Interface_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_Interfaces_Interface_InterfaceRef_Config_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_Interfaces_Interface_InterfaceRef_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_Interfaces_Interface_InterfaceRef_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_Interfaces_Interface_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_Interfaces_Interface_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_Interfaces_InterfaceKey_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_Interfaces_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_State_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::openconfig::openconfig_acl::_Acl_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "openconfig/openconfig_acl/openconfig_acl.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 60);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n.openconfig/openconfig_acl/openconfig_a"
      "cl.proto\022\031openconfig.openconfig_acl\0328git"
      "hub.com/openconfig/ygot/proto/ywrapper/y"
      "wrapper.proto\0320github.com/openconfig/ygo"
      "t/proto/yext/yext.proto\032\034openconfig/enum"
      "s/enums.proto\"\236\246\001\n\003Acl\022N\n\010acl_sets\030\255\247\213\307\001"
      " \001(\0132&.openconfig.openconfig_acl.Acl.Acl"
      "SetsB\020\202A\r/acl/acl-sets\022H\n\006config\030\261\276\255\177 \001("
      "\0132%.openconfig.openconfig_acl.Acl.Config"
      "B\016\202A\013/acl/config\022T\n\ninterfaces\030\277\217\342I \001(\0132"
      ").openconfig.openconfig_acl.Acl.Interfac"
      "esB\022\202A\017/acl/interfaces\022F\n\005state\030\246\227\376\235\001 \001("
      "\0132$.openconfig.openconfig_acl.Acl.StateB"
      "\r\202A\n/acl/state\032\274h\n\007AclSets\022^\n\007acl_set\030\273\352"
      "\253\002 \003(\01320.openconfig.openconfig_acl.Acl.A"
      "clSets.AclSetKeyB\030\202A\025/acl/acl-sets/acl-s"
      "et\032\200f\n\006AclSet\022v\n\013acl_entries\030\265\242\2465 \001(\01328."
      "openconfig.openconfig_acl.Acl.AclSets.Ac"
      "lSet.AclEntriesB$\202A!/acl/acl-sets/acl-se"
      "t/acl-entries\022h\n\006config\030\354\357\203+ \001(\01324.openc"
      "onfig.openconfig_acl.Acl.AclSets.AclSet."
      "ConfigB\037\202A\034/acl/acl-sets/acl-set/config\022"
      "f\n\005state\030\345\347\321\323\001 \001(\01323.openconfig.openconf"
      "ig_acl.Acl.AclSets.AclSet.StateB\036\202A\033/acl"
      "/acl-sets/acl-set/state\032\204_\n\nAclEntries\022\213"
      "\001\n\tacl_entry\030\347\307\353\375\001 \003(\0132D.openconfig.open"
      "config_acl.Acl.AclSets.AclSet.AclEntries"
      ".AclEntryKeyB.\202A+/acl/acl-sets/acl-set/a"
      "cl-entries/acl-entry\032\260\\\n\010AclEntry\022\225\001\n\007ac"
      "tions\030\347\203\361~ \001(\0132I.openconfig.openconfig_a"
      "cl.Acl.AclSets.AclSet.AclEntries.AclEntr"
      "y.ActionsB6\202A3/acl/acl-sets/acl-set/acl-"
      "entries/acl-entry/actions\022\222\001\n\006config\030\370\374\240"
      "` \001(\0132H.openconfig.openconfig_acl.Acl.Ac"
      "lSets.AclSet.AclEntries.AclEntry.ConfigB"
      "5\202A2/acl/acl-sets/acl-set/acl-entries/ac"
      "l-entry/config\022\255\001\n\017input_interface\030\310\327\332\344\001"
      " \001(\0132P.openconfig.openconfig_acl.Acl.Acl"
      "Sets.AclSet.AclEntries.AclEntry.InputInt"
      "erfaceB>\202A;/acl/acl-sets/acl-set/acl-ent"
      "ries/acl-entry/input-interface\022\214\001\n\004ipv4\030"
      "\277\305\242x \001(\0132F.openconfig.openconfig_acl.Acl"
      ".AclSets.AclSet.AclEntries.AclEntry.Ipv4"
      "B3\202A0/acl/acl-sets/acl-set/acl-entries/a"
      "cl-entry/ipv4\022\214\001\n\004ipv6\030\275\305\242x \001(\0132F.openco"
      "nfig.openconfig_acl.Acl.AclSets.AclSet.A"
      "clEntries.AclEntry.Ipv6B3\202A0/acl/acl-set"
      "s/acl-set/acl-entries/acl-entry/ipv6\022\207\001\n"
      "\002l2\030\244\200\212\363\001 \001(\0132D.openconfig.openconfig_ac"
      "l.Acl.AclSets.AclSet.AclEntries.AclEntry"
      ".L2B1\202A./acl/acl-sets/acl-set/acl-entrie"
      "s/acl-entry/l2\022\220\001\n\005state\030\221\277\306\351\001 \001(\0132G.ope"
      "nconfig.openconfig_acl.Acl.AclSets.AclSe"
      "t.AclEntries.AclEntry.StateB4\202A1/acl/acl"
      "-sets/acl-set/acl-entries/acl-entry/stat"
      "e\022\233\001\n\ttransport\030\251\216\304\006 \001(\0132K.openconfig.op"
      "enconfig_acl.Acl.AclSets.AclSet.AclEntri"
      "es.AclEntry.TransportB8\202A5/acl/acl-sets/"
      "acl-set/acl-entries/acl-entry/transport\032"
      "\301\007\n\007Actions\022\243\001\n\006config\030\370\320\235\204\001 \001(\0132P.openc"
      "onfig.openconfig_acl.Acl.AclSets.AclSet."
      "AclEntries.AclEntry.Actions.ConfigB=\202A:/"
      "acl/acl-sets/acl-set/acl-entries/acl-ent"
      "ry/actions/config\022\240\001\n\005state\030\221\233\340\252\001 \001(\0132O."
      "openconfig.openconfig_acl.Acl.AclSets.Ac"
      "lSet.AclEntries.AclEntry.Actions.StateB<"
      "\202A9/acl/acl-sets/acl-set/acl-entries/acl"
      "-entry/actions/state\032\266\002\n\006Config\022\237\001\n\021forw"
      "arding_action\030\361\227\344\233\001 \001(\0162/.openconfig.enu"
      "ms.OpenconfigAclFORWARDINGACTIONBO\202AL/ac"
      "l/acl-sets/acl-set/acl-entries/acl-entry"
      "/actions/config/forwarding-action\022\211\001\n\nlo"
      "g_action\030\222\213\253J \001(\0162(.openconfig.enums.Ope"
      "nconfigAclLOGACTIONBH\202AE/acl/acl-sets/ac"
      "l-set/acl-entries/acl-entry/actions/conf"
      "ig/log-action\032\263\002\n\005State\022\235\001\n\021forwarding_a"
      "ction\030\254\376\232\006 \001(\0162/.openconfig.enums.Openco"
      "nfigAclFORWARDINGACTIONBN\202AK/acl/acl-set"
      "s/acl-set/acl-entries/acl-entry/actions/"
      "state/forwarding-action\022\211\001\n\nlog_action\030\201"
      "\201\321\334\001 \001(\0162(.openconfig.enums.OpenconfigAc"
      "lLOGACTIONBG\202AD/acl/acl-sets/acl-set/acl"
      "-entries/acl-entry/actions/state/log-act"
      "ion\032\353\001\n\006Config\022q\n\013description\030\223\214\252\314\001 \001(\0132"
      "\025.ywrapper.StringValueBA\202A>/acl/acl-sets"
      "/acl-set/acl-entries/acl-entry/config/de"
      "scription\022n\n\013sequence_id\030\246\357\360F \001(\0132\023.ywra"
      "pper.UintValueBA\202A>/acl/acl-sets/acl-set"
      "/acl-entries/acl-entry/config/sequence-i"
      "d\032\324\014\n\016InputInterface\022\262\001\n\006config\030\255\332\257\377\001 \001("
      "\0132W.openconfig.openconfig_acl.Acl.AclSet"
      "s.AclSet.AclEntries.AclEntry.InputInterf"
      "ace.ConfigBE\202AB/acl/acl-sets/acl-set/acl"
      "-entries/acl-entry/input-interface/confi"
      "g\022\306\001\n\rinterface_ref\030\250\370\321\231\001 \001(\0132].openconf"
      "ig.openconfig_acl.Acl.AclSets.AclSet.Acl"
      "Entries.AclEntry.InputInterface.Interfac"
      "eRefBL\202AI/acl/acl-sets/acl-set/acl-entri"
      "es/acl-entry/input-interface/interface-r"
      "ef\022\257\001\n\005state\030\342\347\205\277\001 \001(\0132V.openconfig.open"
      "config_acl.Acl.AclSets.AclSet.AclEntries"
      ".AclEntry.InputInterface.StateBD\202AA/acl/"
      "acl-sets/acl-set/acl-entries/acl-entry/i"
      "nput-interface/state\032\010\n\006Config\032\376\007\n\014Inter"
      "faceRef\022\315\001\n\006config\030\215\276\342\211\001 \001(\0132d.openconfi"
      "g.openconfig_acl.Acl.AclSets.AclSet.AclE"
      "ntries.AclEntry.InputInterface.Interface"
      "Ref.ConfigBS\202AP/acl/acl-sets/acl-set/acl"
      "-entries/acl-entry/input-interface/inter"
      "face-ref/config\022\312\001\n\005state\030\302\364\200\341\001 \001(\0132c.op"
      "enconfig.openconfig_acl.Acl.AclSets.AclS"
      "et.AclEntries.AclEntry.InputInterface.In"
      "terfaceRef.StateBR\202AO/acl/acl-sets/acl-s"
      "et/acl-entries/acl-entry/input-interface"
      "/interface-ref/state\032\250\002\n\006Config\022\213\001\n\tinte"
      "rface\030\371\257\373\242\001 \001(\0132\025.ywrapper.StringValueB]"
      "\202AZ/acl/acl-sets/acl-set/acl-entries/acl"
      "-entry/input-interface/interface-ref/con"
      "fig/interface\022\217\001\n\014subinterface\030\273\221\245\212\001 \001(\013"
      "2\023.ywrapper.UintValueB`\202A]/acl/acl-sets/"
      "acl-set/acl-entries/acl-entry/input-inte"
      "rface/interface-ref/config/subinterface\032"
      "\245\002\n\005State\022\212\001\n\tinterface\030\356\300\331\245\001 \001(\0132\025.ywra"
      "pper.StringValueB\\\202AY/acl/acl-sets/acl-s"
      "et/acl-entries/acl-entry/input-interface"
      "/interface-ref/state/interface\022\216\001\n\014subin"
      "terface\030\212\223\351\370\001 \001(\0132\023.ywrapper.UintValueB_"
      "\202A\\/acl/acl-sets/acl-set/acl-entries/acl"
      "-entry/input-interface/interface-ref/sta"
      "te/subinterface\032\007\n\005State\032\317\014\n\004Ipv4\022\234\001\n\006co"
      "nfig\030\200\351\252\007 \001(\0132M.openconfig.openconfig_ac"
      "l.Acl.AclSets.AclSet.AclEntries.AclEntry"
      ".Ipv4.ConfigB:\202A7/acl/acl-sets/acl-set/a"
      "cl-entries/acl-entry/ipv4/config\022\232\001\n\005sta"
      "te\030\371\334\241\367\001 \001(\0132L.openconfig.openconfig_acl"
      ".Acl.AclSets.AclSet.AclEntries.AclEntry."
      "Ipv4.StateB9\202A6/acl/acl-sets/acl-set/acl"
      "-entries/acl-entry/ipv4/state\032\205\005\n\006Config"
      "\022\205\001\n\023destination_address\030\202\206\304\' \001(\0132\025.ywra"
      "pper.StringValueBN\202AK/acl/acl-sets/acl-s"
      "et/acl-entries/acl-entry/ipv4/config/des"
      "tination-address\022e\n\004dscp\030\361\246\346\006 \001(\0132\023.ywra"
      "pper.UintValueB\?\202A</acl/acl-sets/acl-set"
      "/acl-entries/acl-entry/ipv4/config/dscp\022"
      "p\n\thop_limit\030\266\341\274\353\001 \001(\0132\023.ywrapper.UintVa"
      "lueBD\202AA/acl/acl-sets/acl-set/acl-entrie"
      "s/acl-entry/ipv4/config/hop-limit\022r\n-pro"
      "tocol_openconfigpacketmatchtypesipprotoc"
      "ol\030\241\276\302\006 \001(\01626.openconfig.enums.Openconfi"
      "gPacketMatchTypesIPPROTOCOLH\000\022\034\n\017protoco"
      "l_uint64\030\200\371\242n \001(\004H\000\022|\n\016source_address\030\307\252"
      "\261\333\001 \001(\0132\025.ywrapper.StringValueBI\202AF/acl/"
      "acl-sets/acl-set/acl-entries/acl-entry/i"
      "pv4/config/source-addressB\n\n\010protocol\032\202\005"
      "\n\005State\022\204\001\n\023destination_address\030\273\215\221i \001(\013"
      "2\025.ywrapper.StringValueBM\202AJ/acl/acl-set"
      "s/acl-set/acl-entries/acl-entry/ipv4/sta"
      "te/destination-address\022d\n\004dscp\030\226\315\3479 \001(\0132"
      "\023.ywrapper.UintValueB>\202A;/acl/acl-sets/a"
      "cl-set/acl-entries/acl-entry/ipv4/state/"
      "dscp\022o\n\thop_limit\030\373\233\204\357\001 \001(\0132\023.ywrapper.U"
      "intValueBC\202A@/acl/acl-sets/acl-set/acl-e"
      "ntries/acl-entry/ipv4/state/hop-limit\022s\n"
      "-protocol_openconfigpacketmatchtypesippr"
      "otocol\030\244\216\351\237\001 \001(\01626.openconfig.enums.Open"
      "configPacketMatchTypesIPPROTOCOLH\000\022\035\n\017pr"
      "otocol_uint64\030\321\313\336\353\001 \001(\004H\000\022{\n\016source_addr"
      "ess\030\224\306\237\333\001 \001(\0132\025.ywrapper.StringValueBH\202A"
      "E/acl/acl-sets/acl-set/acl-entries/acl-e"
      "ntry/ipv4/state/source-addressB\n\n\010protoc"
      "ol\032\352\020\n\004Ipv6\022\235\001\n\006config\030\362\313\310\251\001 \001(\0132M.openc"
      "onfig.openconfig_acl.Acl.AclSets.AclSet."
      "AclEntries.AclEntry.Ipv6.ConfigB:\202A7/acl"
      "/acl-sets/acl-set/acl-entries/acl-entry/"
      "ipv6/config\022\231\001\n\005state\030\357\305\251\004 \001(\0132L.opencon"
      "fig.openconfig_acl.Acl.AclSets.AclSet.Ac"
      "lEntries.AclEntry.Ipv6.StateB9\202A6/acl/ac"
      "l-sets/acl-set/acl-entries/acl-entry/ipv"
      "6/state\032\225\007\n\006Config\022\205\001\n\023destination_addre"
      "ss\030\274\246\343\\ \001(\0132\025.ywrapper.StringValueBN\202AK/"
      "acl/acl-sets/acl-set/acl-entries/acl-ent"
      "ry/ipv6/config/destination-address\022\211\001\n\026d"
      "estination_flow_label\030\231\367\234u \001(\0132\023.ywrappe"
      "r.UintValueBQ\202AN/acl/acl-sets/acl-set/ac"
      "l-entries/acl-entry/ipv6/config/destinat"
      "ion-flow-label\022f\n\004dscp\030\353\250\271\337\001 \001(\0132\023.ywrap"
      "per.UintValueB\?\202A</acl/acl-sets/acl-set/"
      "acl-entries/acl-entry/ipv6/config/dscp\022o"
      "\n\thop_limit\030\220\371\2761 \001(\0132\023.ywrapper.UintValu"
      "eBD\202AA/acl/acl-sets/acl-set/acl-entries/"
      "acl-entry/ipv6/config/hop-limit\022s\n-proto"
      "col_openconfigpacketmatchtypesipprotocol"
      "\030\267\335\334\321\001 \001(\01626.openconfig.enums.Openconfig"
      "PacketMatchTypesIPPROTOCOLH\000\022\035\n\017protocol"
      "_uint64\030\226\371\240\337\001 \001(\004H\000\022{\n\016source_address\030\255\224"
      "\244U \001(\0132\025.ywrapper.StringValueBI\202AF/acl/a"
      "cl-sets/acl-set/acl-entries/acl-entry/ip"
      "v6/config/source-address\022\200\001\n\021source_flow"
      "_label\030\276\377\337\337\001 \001(\0132\023.ywrapper.UintValueBL\202"
      "AI/acl/acl-sets/acl-set/acl-entries/acl-"
      "entry/ipv6/config/source-flow-labelB\n\n\010p"
      "rotocol\032\215\007\n\005State\022\204\001\n\023destination_addres"
      "s\030\321\335\204l \001(\0132\025.ywrapper.StringValueBM\202AJ/a"
      "cl/acl-sets/acl-set/acl-entries/acl-entr"
      "y/ipv6/state/destination-address\022\211\001\n\026des"
      "tination_flow_label\030\202\223\263\323\001 \001(\0132\023.ywrapper"
      ".UintValueBP\202AM/acl/acl-sets/acl-set/acl"
      "-entries/acl-entry/ipv6/state/destinatio"
      "n-flow-label\022e\n\004dscp\030\304\252\242\260\001 \001(\0132\023.ywrappe"
      "r.UintValueB>\202A;/acl/acl-sets/acl-set/ac"
      "l-entries/acl-entry/ipv6/state/dscp\022o\n\th"
      "op_limit\030\361\312\350\371\001 \001(\0132\023.ywrapper.UintValueB"
      "C\202A@/acl/acl-sets/acl-set/acl-entries/ac"
      "l-entry/ipv6/state/hop-limit\022r\n-protocol"
      "_openconfigpacketmatchtypesipprotocol\030\336\250"
      "\207\035 \001(\01626.openconfig.enums.OpenconfigPack"
      "etMatchTypesIPPROTOCOLH\000\022\034\n\017protocol_uin"
      "t64\030\243\313\206\? \001(\004H\000\022{\n\016source_address\030\216\305\345\216\001 \001"
      "(\0132\025.ywrapper.StringValueBH\202AE/acl/acl-s"
      "ets/acl-set/acl-entries/acl-entry/ipv6/s"
      "tate/source-address\022~\n\021source_flow_label"
      "\030\273\215\260\026 \001(\0132\023.ywrapper.UintValueBK\202AH/acl/"
      "acl-sets/acl-set/acl-entries/acl-entry/i"
      "pv6/state/source-flow-labelB\n\n\010protocol\032"
      "\367\014\n\002L2\022\230\001\n\006config\030\311\321\322m \001(\0132K.openconfig."
      "openconfig_acl.Acl.AclSets.AclSet.AclEnt"
      "ries.AclEntry.L2.ConfigB8\202A5/acl/acl-set"
      "s/acl-set/acl-entries/acl-entry/l2/confi"
      "g\022\225\001\n\005state\030\236\210\321: \001(\0132J.openconfig.openco"
      "nfig_acl.Acl.AclSets.AclSet.AclEntries.A"
      "clEntry.L2.StateB7\202A4/acl/acl-sets/acl-s"
      "et/acl-entries/acl-entry/l2/state\032\240\005\n\006Co"
      "nfig\022{\n\017destination_mac\030\322\320\241z \001(\0132\025.ywrap"
      "per.StringValueBH\202AE/acl/acl-sets/acl-se"
      "t/acl-entries/acl-entry/l2/config/destin"
      "ation-mac\022\206\001\n\024destination_mac_mask\030\257\231\320\303\001"
      " \001(\0132\025.ywrapper.StringValueBM\202AJ/acl/acl"
      "-sets/acl-set/acl-entries/acl-entry/l2/c"
      "onfig/destination-mac-mask\022r\n-ethertype_"
      "openconfigpacketmatchtypesethertype\030\351\203\272\357"
      "\001 \001(\01625.openconfig.enums.OpenconfigPacke"
      "tMatchTypesETHERTYPEH\000\022\035\n\020ethertype_uint"
      "64\030\245\302\216B \001(\004H\000\022r\n\nsource_mac\030\305\236\317\276\001 \001(\0132\025."
      "ywrapper.StringValueBC\202A@/acl/acl-sets/a"
      "cl-set/acl-entries/acl-entry/l2/config/s"
      "ource-mac\022|\n\017source_mac_mask\030\202\267\221\201\001 \001(\0132\025"
      ".ywrapper.StringValueBH\202AE/acl/acl-sets/"
      "acl-set/acl-entries/acl-entry/l2/config/"
      "source-mac-maskB\013\n\tethertype\032\232\005\n\005State\022{"
      "\n\017destination_mac\030\211\250\317\300\001 \001(\0132\025.ywrapper.S"
      "tringValueBG\202AD/acl/acl-sets/acl-set/acl"
      "-entries/acl-entry/l2/state/destination-"
      "mac\022\205\001\n\024destination_mac_mask\030\376\316\223\202\001 \001(\0132\025"
      ".ywrapper.StringValueBL\202AI/acl/acl-sets/"
      "acl-set/acl-entries/acl-entry/l2/state/d"
      "estination-mac-mask\022q\n-ethertype_opencon"
      "figpacketmatchtypesethertype\030\272\367\367\027 \001(\01625."
      "openconfig.enums.OpenconfigPacketMatchTy"
      "pesETHERTYPEH\000\022\035\n\020ethertype_uint64\030\320\235\264  "
      "\001(\004H\000\022p\n\nsource_mac\030\330\267\327\004 \001(\0132\025.ywrapper."
      "StringValueBB\202A\?/acl/acl-sets/acl-set/ac"
      "l-entries/acl-entry/l2/state/source-mac\022"
      "{\n\017source_mac_mask\030\271\321\347\240\001 \001(\0132\025.ywrapper."
      "StringValueBG\202AD/acl/acl-sets/acl-set/ac"
      "l-entries/acl-entry/l2/state/source-mac-"
      "maskB\013\n\tethertype\032\325\003\n\005State\022p\n\013descripti"
      "on\030\372\226\263\317\001 \001(\0132\025.ywrapper.StringValueB@\202A="
      "/acl/acl-sets/acl-set/acl-entries/acl-en"
      "try/state/description\022t\n\016matched_octets\030"
      "\311\353\272\264\001 \001(\0132\023.ywrapper.UintValueBC\202A@/acl/"
      "acl-sets/acl-set/acl-entries/acl-entry/s"
      "tate/matched-octets\022u\n\017matched_packets\030\324"
      "\332\375: \001(\0132\023.ywrapper.UintValueBD\202AA/acl/ac"
      "l-sets/acl-set/acl-entries/acl-entry/sta"
      "te/matched-packets\022m\n\013sequence_id\030\213\233\234e \001"
      "(\0132\023.ywrapper.UintValueB@\202A=/acl/acl-set"
      "s/acl-set/acl-entries/acl-entry/state/se"
      "quence-id\032\323\016\n\tTransport\022\246\001\n\006config\030\236\332\337t "
      "\001(\0132R.openconfig.openconfig_acl.Acl.AclS"
      "ets.AclSet.AclEntries.AclEntry.Transport"
      ".ConfigB\?\202A</acl/acl-sets/acl-set/acl-en"
      "tries/acl-entry/transport/config\022\243\001\n\005sta"
      "te\030\213\253\373\032 \001(\0132Q.openconfig.openconfig_acl."
      "Acl.AclSets.AclSet.AclEntries.AclEntry.T"
      "ransport.StateB>\202A;/acl/acl-sets/acl-set"
      "/acl-entries/acl-entry/transport/state\032\374"
      "\005\n\006Config\022\221\001\n destination_port_destinati"
      "onport\030\365\317\201X \001(\0162b.openconfig.openconfig_"
      "acl.Acl.AclSets.AclSet.AclEntries.AclEnt"
      "ry.Transport.Config.DestinationPortH\000\022%\n"
      "\027destination_port_string\030\327\227\327\250\001 \001(\tH\000\022$\n\027"
      "destination_port_uint64\030\252\217\220a \001(\004H\000\022\203\001\n\026s"
      "ource_port_sourceport\030\243\213\205\345\001 \001(\0162].openco"
      "nfig.openconfig_acl.Acl.AclSets.AclSet.A"
      "clEntries.AclEntry.Transport.Config.Sour"
      "cePortH\001\022\037\n\022source_port_string\030\312\342\267F \001(\tH"
      "\001\022 \n\022source_port_uint64\030\313\205\263\331\001 \001(\004H\001\022\225\001\n\t"
      "tcp_flags\030\254\230\337$ \003(\01624.openconfig.enums.Op"
      "enconfigPacketMatchTypesTCPFLAGSBI\202AF/ac"
      "l/acl-sets/acl-set/acl-entries/acl-entry"
      "/transport/config/tcp-flags\"M\n\017Destinati"
      "onPort\022\031\n\025DESTINATIONPORT_UNSET\020\000\022\037\n\023DES"
      "TINATIONPORT_ANY\020\001\032\006\202A\003ANY\">\n\nSourcePort"
      "\022\024\n\020SOURCEPORT_UNSET\020\000\022\032\n\016SOURCEPORT_ANY"
      "\020\001\032\006\202A\003ANYB\022\n\020destination_portB\r\n\013source"
      "_port\032\367\005\n\005State\022\220\001\n destination_port_des"
      "tinationport\030\222\363\266h \001(\0162a.openconfig.openc"
      "onfig_acl.Acl.AclSets.AclSet.AclEntries."
      "AclEntry.Transport.State.DestinationPort"
      "H\000\022%\n\027destination_port_string\030\316\370\343\336\001 \001(\tH"
      "\000\022%\n\027destination_port_uint64\030\317\311\372\277\001 \001(\004H\000"
      "\022\201\001\n\026source_port_sourceport\030\350\364\263* \001(\0162\\.o"
      "penconfig.openconfig_acl.Acl.AclSets.Acl"
      "Set.AclEntries.AclEntry.Transport.State."
      "SourcePortH\001\022\037\n\022source_port_string\030\311\317\3566 "
      "\001(\tH\001\022\037\n\022source_port_uint64\030\254\316\264F \001(\004H\001\022\224"
      "\001\n\ttcp_flags\030\315\313\252s \003(\01624.openconfig.enums"
      ".OpenconfigPacketMatchTypesTCPFLAGSBH\202AE"
      "/acl/acl-sets/acl-set/acl-entries/acl-en"
      "try/transport/state/tcp-flags\"M\n\017Destina"
      "tionPort\022\031\n\025DESTINATIONPORT_UNSET\020\000\022\037\n\023D"
      "ESTINATIONPORT_ANY\020\001\032\006\202A\003ANY\">\n\nSourcePo"
      "rt\022\024\n\020SOURCEPORT_UNSET\020\000\022\032\n\016SOURCEPORT_A"
      "NY\020\001\032\006\202A\003ANYB\022\n\020destination_portB\r\n\013sour"
      "ce_port\032\264\001\n\013AclEntryKey\022O\n\013sequence_id\030\001"
      " \001(\004B:\202A7/acl/acl-sets/acl-set/acl-entri"
      "es/acl-entry/sequence-id\022T\n\tacl_entry\030\002 "
      "\001(\0132A.openconfig.openconfig_acl.Acl.AclS"
      "ets.AclSet.AclEntries.AclEntry\032\223\002\n\006Confi"
      "g\022[\n\013description\030\327\217\223\307\001 \001(\0132\025.ywrapper.St"
      "ringValueB+\202A(/acl/acl-sets/acl-set/conf"
      "ig/description\022L\n\004name\030\256\327\304% \001(\0132\025.ywrapp"
      "er.StringValueB$\202A!/acl/acl-sets/acl-set"
      "/config/name\022^\n\004type\030\243\266\235\340\001 \001(\0162&.opencon"
      "fig.enums.OpenconfigAclACLTYPEB$\202A!/acl/"
      "acl-sets/acl-set/config/type\032\216\002\n\005State\022Y"
      "\n\013description\030\236\305\216\021 \001(\0132\025.ywrapper.String"
      "ValueB*\202A\'/acl/acl-sets/acl-set/state/de"
      "scription\022L\n\004name\030\241\335\241\364\001 \001(\0132\025.ywrapper.S"
      "tringValueB#\202A /acl/acl-sets/acl-set/sta"
      "te/name\022\\\n\004type\030\250\252\274| \001(\0162&.openconfig.en"
      "ums.OpenconfigAclACLTYPEB#\202A /acl/acl-se"
      "ts/acl-set/state/type\032\315\001\n\tAclSetKey\022+\n\004n"
      "ame\030\001 \001(\tB\035\202A\032/acl/acl-sets/acl-set/name"
      "\022S\n\004type\030\002 \001(\0162&.openconfig.enums.Openco"
      "nfigAclACLTYPEB\035\202A\032/acl/acl-sets/acl-set"
      "/type\022>\n\007acl_set\030\003 \001(\0132-.openconfig.open"
      "config_acl.Acl.AclSets.AclSet\032\010\n\006Config\032"
      "\226:\n\nInterfaces\022k\n\tinterface\030\337\351\344\333\001 \003(\01326."
      "openconfig.openconfig_acl.Acl.Interfaces"
      ".InterfaceKeyB\034\202A\031/acl/interfaces/interf"
      "ace\032\2248\n\tInterface\022r\n\006config\030\240\212\376\022 \001(\0132:.o"
      "penconfig.openconfig_acl.Acl.Interfaces."
      "Interface.ConfigB#\202A /acl/interfaces/int"
      "erface/config\022\214\001\n\017egress_acl_sets\030\312\260\240\334\001 "
      "\001(\0132A.openconfig.openconfig_acl.Acl.Inte"
      "rfaces.Interface.EgressAclSetsB,\202A)/acl/"
      "interfaces/interface/egress-acl-sets\022\216\001\n"
      "\020ingress_acl_sets\030\272\264\211G \001(\0132B.openconfig."
      "openconfig_acl.Acl.Interfaces.Interface."
      "IngressAclSetsB-\202A*/acl/interfaces/inter"
      "face/ingress-acl-sets\022\206\001\n\rinterface_ref\030"
      "\317\323\215g \001(\0132@.openconfig.openconfig_acl.Acl"
      ".Interfaces.Interface.InterfaceRefB*\202A\'/"
      "acl/interfaces/interface/interface-ref\022o"
      "\n\005state\030\231\305\275I \001(\01329.openconfig.openconfig"
      "_acl.Acl.Interfaces.Interface.StateB\"\202A\037"
      "/acl/interfaces/interface/state\032V\n\006Confi"
      "g\022L\n\002id\030\270\375\233= \001(\0132\025.ywrapper.StringValueB"
      "&\202A#/acl/interfaces/interface/config/id\032"
      "\320\025\n\rEgressAclSets\022\251\001\n\016egress_acl_set\030\204\213\352"
      ". \003(\0132Q.openconfig.openconfig_acl.Acl.In"
      "terfaces.Interface.EgressAclSets.EgressA"
      "clSetKeyB;\202A8/acl/interfaces/interface/e"
      "gress-acl-sets/egress-acl-set\032\306\021\n\014Egress"
      "AclSet\022\273\001\n\013acl_entries\030\372\365\315\322\001 \001(\0132Y.openc"
      "onfig.openconfig_acl.Acl.Interfaces.Inte"
      "rface.EgressAclSets.EgressAclSet.AclEntr"
      "iesBG\202AD/acl/interfaces/interface/egress"
      "-acl-sets/egress-acl-set/acl-entries\022\255\001\n"
      "\006config\030\251\312\203\214\001 \001(\0132U.openconfig.openconfi"
      "g_acl.Acl.Interfaces.Interface.EgressAcl"
      "Sets.EgressAclSet.ConfigBB\202A\?/acl/interf"
      "aces/interface/egress-acl-sets/egress-ac"
      "l-set/config\022\251\001\n\005state\030\376\211\253b \001(\0132T.openco"
      "nfig.openconfig_acl.Acl.Interfaces.Inter"
      "face.EgressAclSets.EgressAclSet.StateBA\202"
      "A>/acl/interfaces/interface/egress-acl-s"
      "ets/egress-acl-set/state\032\217\t\n\nAclEntries\022"
      "\316\001\n\tacl_entry\030\360\344\260% \003(\0132e.openconfig.open"
      "config_acl.Acl.Interfaces.Interface.Egre"
      "ssAclSets.EgressAclSet.AclEntries.AclEnt"
      "ryKeyBQ\202AN/acl/interfaces/interface/egre"
      "ss-acl-sets/egress-acl-set/acl-entries/a"
      "cl-entry\032\264\005\n\010AclEntry\022\323\001\n\005state\030\372\310\374p \001(\013"
      "2h.openconfig.openconfig_acl.Acl.Interfa"
      "ces.Interface.EgressAclSets.EgressAclSet"
      ".AclEntries.AclEntry.StateBW\202AT/acl/inte"
      "rfaces/interface/egress-acl-sets/egress-"
      "acl-set/acl-entries/acl-entry/state\032\321\003\n\005"
      "State\022\227\001\n\016matched_octets\030\200\244\366\200\001 \001(\0132\023.ywr"
      "apper.UintValueBf\202Ac/acl/interfaces/inte"
      "rface/egress-acl-sets/egress-acl-set/acl"
      "-entries/acl-entry/state/matched-octets\022"
      "\231\001\n\017matched_packets\030\203\307\325\312\001 \001(\0132\023.ywrapper"
      ".UintValueBg\202Ad/acl/interfaces/interface"
      "/egress-acl-sets/egress-acl-set/acl-entr"
      "ies/acl-entry/state/matched-packets\022\221\001\n\013"
      "sequence_id\030\370\221\334\342\001 \001(\0132\023.ywrapper.UintVal"
      "ueBc\202A`/acl/interfaces/interface/egress-"
      "acl-sets/egress-acl-set/acl-entries/acl-"
      "entry/state/sequence-id\032\370\001\n\013AclEntryKey\022"
      "r\n\013sequence_id\030\001 \001(\004B]\202AZ/acl/interfaces"
      "/interface/egress-acl-sets/egress-acl-se"
      "t/acl-entries/acl-entry/sequence-id\022u\n\ta"
      "cl_entry\030\002 \001(\0132b.openconfig.openconfig_a"
      "cl.Acl.Interfaces.Interface.EgressAclSet"
      "s.EgressAclSet.AclEntries.AclEntry\032\205\002\n\006C"
      "onfig\022w\n\010set_name\030\360\267\316| \001(\0132\025.ywrapper.St"
      "ringValueBK\202AH/acl/interfaces/interface/"
      "egress-acl-sets/egress-acl-set/config/se"
      "t-name\022\201\001\n\004type\030\214\273\342\233\001 \001(\0162&.openconfig.e"
      "nums.OpenconfigAclACLTYPEBG\202AD/acl/inter"
      "faces/interface/egress-acl-sets/egress-a"
      "cl-set/config/type\032\201\002\n\005State\022w\n\010set_name"
      "\030\211\327\254\202\001 \001(\0132\025.ywrapper.StringValueBJ\202AG/a"
      "cl/interfaces/interface/egress-acl-sets/"
      "egress-acl-set/state/set-name\022\177\n\004type\030\355\352"
      "\217l \001(\0162&.openconfig.enums.OpenconfigAclA"
      "CLTYPEBF\202AC/acl/interfaces/interface/egr"
      "ess-acl-sets/egress-acl-set/state/type\032\311"
      "\002\n\017EgressAclSetKey\022V\n\010set_name\030\001 \001(\tBD\202A"
      "A/acl/interfaces/interface/egress-acl-se"
      "ts/egress-acl-set/set-name\022v\n\004type\030\002 \001(\016"
      "2&.openconfig.enums.OpenconfigAclACLTYPE"
      "B@\202A=/acl/interfaces/interface/egress-ac"
      "l-sets/egress-acl-set/type\022f\n\016egress_acl"
      "_set\030\003 \001(\0132N.openconfig.openconfig_acl.A"
      "cl.Interfaces.Interface.EgressAclSets.Eg"
      "ressAclSet\032\203\026\n\016IngressAclSets\022\256\001\n\017ingres"
      "s_acl_set\030\322\212\310M \003(\0132S.openconfig.openconf"
      "ig_acl.Acl.Interfaces.Interface.IngressA"
      "clSets.IngressAclSetKeyB=\202A:/acl/interfa"
      "ces/interface/ingress-acl-sets/ingress-a"
      "cl-set\032\353\021\n\rIngressAclSet\022\276\001\n\013acl_entries"
      "\030\224\302\321d \001(\0132[.openconfig.openconfig_acl.Ac"
      "l.Interfaces.Interface.IngressAclSets.In"
      "gressAclSet.AclEntriesBI\202AF/acl/interfac"
      "es/interface/ingress-acl-sets/ingress-ac"
      "l-set/acl-entries\022\260\001\n\006config\030\223\264\245X \001(\0132W."
      "openconfig.openconfig_acl.Acl.Interfaces"
      ".Interface.IngressAclSets.IngressAclSet."
      "ConfigBD\202AA/acl/interfaces/interface/ing"
      "ress-acl-sets/ingress-acl-set/config\022\255\001\n"
      "\005state\030\364\373\266U \001(\0132V.openconfig.openconfig_"
      "acl.Acl.Interfaces.Interface.IngressAclS"
      "ets.IngressAclSet.StateBC\202A@/acl/interfa"
      "ces/interface/ingress-acl-sets/ingress-a"
      "cl-set/state\032\237\t\n\nAclEntries\022\323\001\n\tacl_entr"
      "y\030\362\261\220\355\001 \003(\0132g.openconfig.openconfig_acl."
      "Acl.Interfaces.Interface.IngressAclSets."
      "IngressAclSet.AclEntries.AclEntryKeyBS\202A"
      "P/acl/interfaces/interface/ingress-acl-s"
      "ets/ingress-acl-set/acl-entries/acl-entr"
      "y\032\273\005\n\010AclEntry\022\327\001\n\005state\030\224\262\357\r \001(\0132j.open"
      "config.openconfig_acl.Acl.Interfaces.Int"
      "erface.IngressAclSets.IngressAclSet.AclE"
      "ntries.AclEntry.StateBY\202AV/acl/interface"
      "s/interface/ingress-acl-sets/ingress-acl"
      "-set/acl-entries/acl-entry/state\032\324\003\n\005Sta"
      "te\022\230\001\n\016matched_octets\030\302\256\353x \001(\0132\023.ywrappe"
      "r.UintValueBh\202Ae/acl/interfaces/interfac"
      "e/ingress-acl-sets/ingress-acl-set/acl-e"
      "ntries/acl-entry/state/matched-octets\022\232\001"
      "\n\017matched_packets\030\341\377\3646 \001(\0132\023.ywrapper.Ui"
      "ntValueBi\202Af/acl/interfaces/interface/in"
      "gress-acl-sets/ingress-acl-set/acl-entri"
      "es/acl-entry/state/matched-packets\022\222\001\n\013s"
      "equence_id\030\342\322\332^ \001(\0132\023.ywrapper.UintValue"
      "Be\202Ab/acl/interfaces/interface/ingress-a"
      "cl-sets/ingress-acl-set/acl-entries/acl-"
      "entry/state/sequence-id\032\374\001\n\013AclEntryKey\022"
      "t\n\013sequence_id\030\001 \001(\004B_\202A\\/acl/interfaces"
      "/interface/ingress-acl-sets/ingress-acl-"
      "set/acl-entries/acl-entry/sequence-id\022w\n"
      "\tacl_entry\030\002 \001(\0132d.openconfig.openconfig"
      "_acl.Acl.Interfaces.Interface.IngressAcl"
      "Sets.IngressAclSet.AclEntries.AclEntry\032\211"
      "\002\n\006Config\022z\n\010set_name\030\212\360\266\273\001 \001(\0132\025.ywrapp"
      "er.StringValueBM\202AJ/acl/interfaces/inter"
      "face/ingress-acl-sets/ingress-acl-set/co"
      "nfig/set-name\022\202\001\n\004type\030\326\354\336u \001(\0162&.openco"
      "nfig.enums.OpenconfigAclACLTYPEBI\202AF/acl"
      "/interfaces/interface/ingress-acl-sets/i"
      "ngress-acl-set/config/type\032\207\002\n\005State\022y\n\010"
      "set_name\030\267\203\273\317\001 \001(\0132\025.ywrapper.StringValu"
      "eBL\202AI/acl/interfaces/interface/ingress-"
      "acl-sets/ingress-acl-set/state/set-name\022"
      "\202\001\n\004type\030\373\366\210\204\001 \001(\0162&.openconfig.enums.Op"
      "enconfigAclACLTYPEBH\202AE/acl/interfaces/i"
      "nterface/ingress-acl-sets/ingress-acl-se"
      "t/state/type\032\321\002\n\020IngressAclSetKey\022X\n\010set"
      "_name\030\001 \001(\tBF\202AC/acl/interfaces/interfac"
      "e/ingress-acl-sets/ingress-acl-set/set-n"
      "ame\022x\n\004type\030\002 \001(\0162&.openconfig.enums.Ope"
      "nconfigAclACLTYPEBB\202A\?/acl/interfaces/in"
      "terface/ingress-acl-sets/ingress-acl-set"
      "/type\022i\n\017ingress_acl_set\030\003 \001(\0132P.opencon"
      "fig.openconfig_acl.Acl.Interfaces.Interf"
      "ace.IngressAclSets.IngressAclSet\032\361\005\n\014Int"
      "erfaceRef\022\216\001\n\006config\030\260\357\273\304\001 \001(\0132G.opencon"
      "fig.openconfig_acl.Acl.Interfaces.Interf"
      "ace.InterfaceRef.ConfigB1\202A./acl/interfa"
      "ces/interface/interface-ref/config\022\212\001\n\005s"
      "tate\030\251\332\221M \001(\0132F.openconfig.openconfig_ac"
      "l.Acl.Interfaces.Interface.InterfaceRef."
      "StateB0\202A-/acl/interfaces/interface/inte"
      "rface-ref/state\032\341\001\n\006Config\022i\n\tinterface\030"
      "\230\337\302\363\001 \001(\0132\025.ywrapper.StringValueB;\202A8/ac"
      "l/interfaces/interface/interface-ref/con"
      "fig/interface\022l\n\014subinterface\030\330\277\334j \001(\0132\023"
      ".ywrapper.UintValueB>\202A;/acl/interfaces/"
      "interface/interface-ref/config/subinterf"
      "ace\032\336\001\n\005State\022h\n\tinterface\030\325\311\315\316\001 \001(\0132\025.y"
      "wrapper.StringValueB:\202A7/acl/interfaces/"
      "interface/interface-ref/state/interface\022"
      "k\n\014subinterface\030\267\270\2158 \001(\0132\023.ywrapper.Uint"
      "ValueB=\202A:/acl/interfaces/interface/inte"
      "rface-ref/state/subinterface\032T\n\005State\022K\n"
      "\002id\030\313\274\235, \001(\0132\025.ywrapper.StringValueB%\202A\""
      "/acl/interfaces/interface/state/id\032\203\001\n\014I"
      "nterfaceKey\022+\n\002id\030\001 \001(\tB\037\202A\034/acl/interfa"
      "ces/interface/id\022F\n\tinterface\030\002 \001(\01323.op"
      "enconfig.openconfig_acl.Acl.Interfaces.I"
      "nterface\032}\n\005State\022t\n\022counter_capability\030"
      "\236\220\205\023 \001(\01623.openconfig.enums.OpenconfigAc"
      "lACLCOUNTERCAPABILITYB \202A\035/acl/state/cou"
      "nter-capabilityb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 21503);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "openconfig/openconfig_acl/openconfig_acl.proto", &protobuf_RegisterTypes);
  ::protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fywrapper_2fywrapper_2eproto::AddDescriptors();
  ::protobuf_github_2ecom_2fopenconfig_2fygot_2fproto_2fyext_2fyext_2eproto::AddDescriptors();
  ::protobuf_openconfig_2fenums_2fenums_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto
namespace openconfig {
namespace openconfig_acl {
const ::google::protobuf::EnumDescriptor* Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_descriptor() {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_enum_descriptors[0];
}
bool Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::DESTINATIONPORT_UNSET;
const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::DESTINATIONPORT_ANY;
const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::DestinationPort_MIN;
const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::DestinationPort_MAX;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::DestinationPort_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_descriptor() {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_enum_descriptors[1];
}
bool Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::SOURCEPORT_UNSET;
const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::SOURCEPORT_ANY;
const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::SourcePort_MIN;
const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::SourcePort_MAX;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::SourcePort_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_descriptor() {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_enum_descriptors[2];
}
bool Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::DESTINATIONPORT_UNSET;
const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::DESTINATIONPORT_ANY;
const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::DestinationPort_MIN;
const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::DestinationPort_MAX;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::DestinationPort_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_descriptor() {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_enum_descriptors[3];
}
bool Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::SOURCEPORT_UNSET;
const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::SOURCEPORT_ANY;
const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::SourcePort_MIN;
const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::SourcePort_MAX;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::SourcePort_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::kForwardingActionFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::kLogActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.Config)
}
Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config(const Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&log_action_, &from.log_action_,
    static_cast<size_t>(reinterpret_cast<char*>(&forwarding_action_) -
    reinterpret_cast<char*>(&log_action_)) + sizeof(forwarding_action_));
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.Config)
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::SharedCtor() {
  ::memset(&log_action_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&forwarding_action_) -
      reinterpret_cast<char*>(&log_action_)) + sizeof(forwarding_action_));
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::~Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.Config)
  SharedDtor();
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::SharedDtor() {
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config& Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config* Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config* n = new Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&log_action_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&forwarding_action_) -
      reinterpret_cast<char*>(&log_action_)) + sizeof(forwarding_action_));
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2613600136u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.enums.OpenconfigAclLOGACTION log_action = 155895186 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions/config/log-action"];
      case 155895186: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 1247161488 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_log_action(static_cast< ::openconfig::enums::OpenconfigAclLOGACTION >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigAclFORWARDINGACTION forwarding_action = 326700017 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions/config/forwarding-action"];
      case 326700017: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 2613600136 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_forwarding_action(static_cast< ::openconfig::enums::OpenconfigAclFORWARDINGACTION >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.Config)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigAclLOGACTION log_action = 155895186 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions/config/log-action"];
  if (this->log_action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      155895186, this->log_action(), output);
  }

  // .openconfig.enums.OpenconfigAclFORWARDINGACTION forwarding_action = 326700017 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions/config/forwarding-action"];
  if (this->forwarding_action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      326700017, this->forwarding_action(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.Config)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigAclLOGACTION log_action = 155895186 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions/config/log-action"];
  if (this->log_action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      155895186, this->log_action(), target);
  }

  // .openconfig.enums.OpenconfigAclFORWARDINGACTION forwarding_action = 326700017 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions/config/forwarding-action"];
  if (this->forwarding_action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      326700017, this->forwarding_action(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.Config)
  return target;
}

size_t Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.enums.OpenconfigAclLOGACTION log_action = 155895186 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions/config/log-action"];
  if (this->log_action() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->log_action());
  }

  // .openconfig.enums.OpenconfigAclFORWARDINGACTION forwarding_action = 326700017 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions/config/forwarding-action"];
  if (this->forwarding_action() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->forwarding_action());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.Config)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::MergeFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.log_action() != 0) {
    set_log_action(from.log_action());
  }
  if (from.forwarding_action() != 0) {
    set_forwarding_action(from.forwarding_action());
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::CopyFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::Swap(Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::InternalSwap(Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config* other) {
  using std::swap;
  swap(log_action_, other->log_action_);
  swap(forwarding_action_, other->forwarding_action_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::kForwardingActionFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::kLogActionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Actions_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.State)
}
Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State(const Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&forwarding_action_, &from.forwarding_action_,
    static_cast<size_t>(reinterpret_cast<char*>(&log_action_) -
    reinterpret_cast<char*>(&forwarding_action_)) + sizeof(log_action_));
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.State)
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::SharedCtor() {
  ::memset(&forwarding_action_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&log_action_) -
      reinterpret_cast<char*>(&forwarding_action_)) + sizeof(log_action_));
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::~Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.State)
  SharedDtor();
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::SharedDtor() {
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State& Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Actions_State();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State* Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State* n = new Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&forwarding_action_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&log_action_) -
      reinterpret_cast<char*>(&forwarding_action_)) + sizeof(log_action_));
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3701605384u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.enums.OpenconfigAclFORWARDINGACTION forwarding_action = 13025068 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions/state/forwarding-action"];
      case 13025068: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 104200544 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_forwarding_action(static_cast< ::openconfig::enums::OpenconfigAclFORWARDINGACTION >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigAclLOGACTION log_action = 462700673 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions/state/log-action"];
      case 462700673: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 3701605384 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_log_action(static_cast< ::openconfig::enums::OpenconfigAclLOGACTION >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.State)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigAclFORWARDINGACTION forwarding_action = 13025068 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions/state/forwarding-action"];
  if (this->forwarding_action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13025068, this->forwarding_action(), output);
  }

  // .openconfig.enums.OpenconfigAclLOGACTION log_action = 462700673 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions/state/log-action"];
  if (this->log_action() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      462700673, this->log_action(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.State)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigAclFORWARDINGACTION forwarding_action = 13025068 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions/state/forwarding-action"];
  if (this->forwarding_action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13025068, this->forwarding_action(), target);
  }

  // .openconfig.enums.OpenconfigAclLOGACTION log_action = 462700673 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions/state/log-action"];
  if (this->log_action() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      462700673, this->log_action(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.State)
  return target;
}

size_t Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.enums.OpenconfigAclFORWARDINGACTION forwarding_action = 13025068 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions/state/forwarding-action"];
  if (this->forwarding_action() != 0) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->forwarding_action());
  }

  // .openconfig.enums.OpenconfigAclLOGACTION log_action = 462700673 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions/state/log-action"];
  if (this->log_action() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->log_action());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.State)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::MergeFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.forwarding_action() != 0) {
    set_forwarding_action(from.forwarding_action());
  }
  if (from.log_action() != 0) {
    set_log_action(from.log_action());
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::CopyFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::Swap(Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::InternalSwap(Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State* other) {
  using std::swap;
  swap(forwarding_action_, other->forwarding_action_);
  swap(log_action_, other->log_action_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::kConfigFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Actions();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions)
}
Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions(const Acl_AclSets_AclSet_AclEntries_AclEntry_Actions& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions)
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::SharedCtor() {
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&config_)) + sizeof(state_));
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::~Acl_AclSets_AclSet_AclEntries_AclEntry_Actions() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions)
  SharedDtor();
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete state_;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_AclEntries_AclEntry_Actions& Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Actions();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_AclEntries_AclEntry_Actions* Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_AclEntries_AclEntry_Actions* n = new Acl_AclSets_AclSet_AclEntries_AclEntry_Actions;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2864737418u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.Config config = 277309560 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions/config"];
      case 277309560: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 2218476482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.State state = 358092177 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions/state"];
      case 358092177: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 2864737418 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.Config config = 277309560 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      277309560, *this->config_, output);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.State state = 358092177 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      358092177, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.Config config = 277309560 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        277309560, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.State state = 358092177 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        358092177, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions)
  return target;
}

size_t Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.Config config = 277309560 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions.State state = 358092177 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_AclEntries_AclEntry_Actions* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_AclEntries_AclEntry_Actions>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::MergeFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_Actions& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_Config::MergeFrom(from.config());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions_State::MergeFrom(from.state());
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::CopyFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_Actions& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::Swap(Acl_AclSets_AclSet_AclEntries_AclEntry_Actions* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::InternalSwap(Acl_AclSets_AclSet_AclEntries_AclEntry_Actions* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet_AclEntries_AclEntry_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Config_default_instance_._instance.get_mutable()->description_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Config_default_instance_._instance.get_mutable()->sequence_id_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Config::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Config::clear_sequence_id() {
  if (GetArenaNoVirtual() == NULL && sequence_id_ != NULL) {
    delete sequence_id_;
  }
  sequence_id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Config::kDescriptionFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Config::kSequenceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_AclEntries_AclEntry_Config::Acl_AclSets_AclSet_AclEntries_AclEntry_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Config)
}
Acl_AclSets_AclSet_AclEntries_AclEntry_Config::Acl_AclSets_AclSet_AclEntries_AclEntry_Config(const Acl_AclSets_AclSet_AclEntries_AclEntry_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_sequence_id()) {
    sequence_id_ = new ::ywrapper::UintValue(*from.sequence_id_);
  } else {
    sequence_id_ = NULL;
  }
  if (from.has_description()) {
    description_ = new ::ywrapper::StringValue(*from.description_);
  } else {
    description_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Config)
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Config::SharedCtor() {
  ::memset(&sequence_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&description_) -
      reinterpret_cast<char*>(&sequence_id_)) + sizeof(description_));
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_AclEntries_AclEntry_Config::~Acl_AclSets_AclSet_AclEntries_AclEntry_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Config)
  SharedDtor();
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Config::SharedDtor() {
  if (this != internal_default_instance()) delete sequence_id_;
  if (this != internal_default_instance()) delete description_;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_AclEntries_AclEntry_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_AclEntries_AclEntry_Config& Acl_AclSets_AclSet_AclEntries_AclEntry_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Config();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_AclEntries_AclEntry_Config* Acl_AclSets_AclSet_AclEntries_AclEntry_Config::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_AclEntries_AclEntry_Config* n = new Acl_AclSets_AclSet_AclEntries_AclEntry_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && sequence_id_ != NULL) {
    delete sequence_id_;
  }
  sequence_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3428069530u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue sequence_id = 148649894 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/config/sequence-id"];
      case 148649894: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 1189199154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sequence_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue description = 428508691 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/config/description"];
      case 428508691: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 3428069530 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Config)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue sequence_id = 148649894 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/config/sequence-id"];
  if (this->has_sequence_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      148649894, *this->sequence_id_, output);
  }

  // .ywrapper.StringValue description = 428508691 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/config/description"];
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      428508691, *this->description_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Config)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_AclEntries_AclEntry_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue sequence_id = 148649894 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/config/sequence-id"];
  if (this->has_sequence_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        148649894, *this->sequence_id_, deterministic, target);
  }

  // .ywrapper.StringValue description = 428508691 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/config/description"];
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        428508691, *this->description_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Config)
  return target;
}

size_t Acl_AclSets_AclSet_AclEntries_AclEntry_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue sequence_id = 148649894 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/config/sequence-id"];
  if (this->has_sequence_id()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->sequence_id_);
  }

  // .ywrapper.StringValue description = 428508691 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/config/description"];
  if (this->has_description()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->description_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_AclEntries_AclEntry_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_AclEntries_AclEntry_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Config)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Config::MergeFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_sequence_id()) {
    mutable_sequence_id()->::ywrapper::UintValue::MergeFrom(from.sequence_id());
  }
  if (from.has_description()) {
    mutable_description()->::ywrapper::StringValue::MergeFrom(from.description());
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Config::CopyFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_Config::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Config::Swap(Acl_AclSets_AclSet_AclEntries_AclEntry_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Config::InternalSwap(Acl_AclSets_AclSet_AclEntries_AclEntry_Config* other) {
  using std::swap;
  swap(sequence_id_, other->sequence_id_);
  swap(description_, other->description_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_AclEntries_AclEntry_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.Config)
}
Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config(const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.Config)
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config::SharedCtor() {
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config::~Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.Config)
  SharedDtor();
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config::SharedDtor() {
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config& Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config* Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config* n = new Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.Config)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.Config)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.Config)
  return target;
}

size_t Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.Config)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config::MergeFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config::CopyFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config::Swap(Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config::InternalSwap(Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config_default_instance_._instance.get_mutable()->interface_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config_default_instance_._instance.get_mutable()->subinterface_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::clear_interface() {
  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::clear_subinterface() {
  if (GetArenaNoVirtual() == NULL && subinterface_ != NULL) {
    delete subinterface_;
  }
  subinterface_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::kInterfaceFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::kSubinterfaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.Config)
}
Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config(const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_subinterface()) {
    subinterface_ = new ::ywrapper::UintValue(*from.subinterface_);
  } else {
    subinterface_ = NULL;
  }
  if (from.has_interface()) {
    interface_ = new ::ywrapper::StringValue(*from.interface_);
  } else {
    interface_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.Config)
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::SharedCtor() {
  ::memset(&subinterface_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interface_) -
      reinterpret_cast<char*>(&subinterface_)) + sizeof(interface_));
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::~Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.Config)
  SharedDtor();
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::SharedDtor() {
  if (this != internal_default_instance()) delete subinterface_;
  if (this != internal_default_instance()) delete interface_;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config& Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config* Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config* n = new Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && subinterface_ != NULL) {
    delete subinterface_;
  }
  subinterface_ = NULL;
  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2734079946u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue subinterface = 290015419 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref/config/subinterface"];
      case 290015419: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 2320123354 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_subinterface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue interface = 341759993 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref/config/interface"];
      case 341759993: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 2734079946 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.Config)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue subinterface = 290015419 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref/config/subinterface"];
  if (this->has_subinterface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      290015419, *this->subinterface_, output);
  }

  // .ywrapper.StringValue interface = 341759993 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref/config/interface"];
  if (this->has_interface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      341759993, *this->interface_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.Config)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue subinterface = 290015419 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref/config/subinterface"];
  if (this->has_subinterface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        290015419, *this->subinterface_, deterministic, target);
  }

  // .ywrapper.StringValue interface = 341759993 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref/config/interface"];
  if (this->has_interface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        341759993, *this->interface_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.Config)
  return target;
}

size_t Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue subinterface = 290015419 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref/config/subinterface"];
  if (this->has_subinterface()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->subinterface_);
  }

  // .ywrapper.StringValue interface = 341759993 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref/config/interface"];
  if (this->has_interface()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interface_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.Config)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::MergeFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_subinterface()) {
    mutable_subinterface()->::ywrapper::UintValue::MergeFrom(from.subinterface());
  }
  if (from.has_interface()) {
    mutable_interface()->::ywrapper::StringValue::MergeFrom(from.interface());
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::CopyFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::Swap(Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::InternalSwap(Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config* other) {
  using std::swap;
  swap(subinterface_, other->subinterface_);
  swap(interface_, other->interface_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State_default_instance_._instance.get_mutable()->interface_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State_default_instance_._instance.get_mutable()->subinterface_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::clear_interface() {
  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::clear_subinterface() {
  if (GetArenaNoVirtual() == NULL && subinterface_ != NULL) {
    delete subinterface_;
  }
  subinterface_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::kInterfaceFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::kSubinterfaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.State)
}
Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State(const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_interface()) {
    interface_ = new ::ywrapper::StringValue(*from.interface_);
  } else {
    interface_ = NULL;
  }
  if (from.has_subinterface()) {
    subinterface_ = new ::ywrapper::UintValue(*from.subinterface_);
  } else {
    subinterface_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.State)
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::SharedCtor() {
  ::memset(&interface_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&subinterface_) -
      reinterpret_cast<char*>(&interface_)) + sizeof(subinterface_));
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::~Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.State)
  SharedDtor();
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::SharedDtor() {
  if (this != internal_default_instance()) delete interface_;
  if (this != internal_default_instance()) delete subinterface_;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State& Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State* Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State* n = new Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
  if (GetArenaNoVirtual() == NULL && subinterface_ != NULL) {
    delete subinterface_;
  }
  subinterface_ = NULL;
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4174531666u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue interface = 347496558 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref/state/interface"];
      case 347496558: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 2779972466 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue subinterface = 521816458 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref/state/subinterface"];
      case 521816458: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 4174531666 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_subinterface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.State)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue interface = 347496558 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref/state/interface"];
  if (this->has_interface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      347496558, *this->interface_, output);
  }

  // .ywrapper.UintValue subinterface = 521816458 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref/state/subinterface"];
  if (this->has_subinterface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      521816458, *this->subinterface_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.State)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue interface = 347496558 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref/state/interface"];
  if (this->has_interface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        347496558, *this->interface_, deterministic, target);
  }

  // .ywrapper.UintValue subinterface = 521816458 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref/state/subinterface"];
  if (this->has_subinterface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        521816458, *this->subinterface_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.State)
  return target;
}

size_t Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue interface = 347496558 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref/state/interface"];
  if (this->has_interface()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interface_);
  }

  // .ywrapper.UintValue subinterface = 521816458 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref/state/subinterface"];
  if (this->has_subinterface()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->subinterface_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.State)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::MergeFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_interface()) {
    mutable_interface()->::ywrapper::StringValue::MergeFrom(from.interface());
  }
  if (from.has_subinterface()) {
    mutable_subinterface()->::ywrapper::UintValue::MergeFrom(from.subinterface());
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::CopyFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::Swap(Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::InternalSwap(Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State* other) {
  using std::swap;
  swap(interface_, other->interface_);
  swap(subinterface_, other->subinterface_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::kConfigFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef)
}
Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef(const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef)
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::SharedCtor() {
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&config_)) + sizeof(state_));
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::~Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef)
  SharedDtor();
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete state_;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef& Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef* Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef* n = new Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3774992914u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.Config config = 288923405 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref/config"];
      case 288923405: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 2311387242 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.State state = 471874114 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref/state"];
      case 471874114: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 3774992914 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.Config config = 288923405 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      288923405, *this->config_, output);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.State state = 471874114 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      471874114, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.Config config = 288923405 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        288923405, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.State state = 471874114 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        471874114, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef)
  return target;
}

size_t Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.Config config = 288923405 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef.State state = 471874114 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::MergeFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_Config::MergeFrom(from.config());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef_State::MergeFrom(from.state());
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::CopyFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::Swap(Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::InternalSwap(Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.State)
}
Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State(const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.State)
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State::SharedCtor() {
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State::~Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.State)
  SharedDtor();
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State::SharedDtor() {
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State& Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State* Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State* n = new Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.State)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.State)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.State)
  return target;
}

size_t Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.State)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State::MergeFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State::CopyFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State::Swap(Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State::InternalSwap(Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_default_instance_._instance.get_mutable()->interface_ref_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::kConfigFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::kInterfaceRefFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface)
}
Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface(const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_interface_ref()) {
    interface_ref_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef(*from.interface_ref_);
  } else {
    interface_ref_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface)
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::SharedCtor() {
  ::memset(&interface_ref_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&interface_ref_)) + sizeof(config_));
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::~Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface)
  SharedDtor();
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::SharedDtor() {
  if (this != internal_default_instance()) delete interface_ref_;
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface& Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_InputInterface();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface* Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface* n = new Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && interface_ref_ != NULL) {
    delete interface_ref_;
  }
  interface_ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4284442986u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef interface_ref = 322206760 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref"];
      case 322206760: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 2577654082 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interface_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.State state = 400651234 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/state"];
      case 400651234: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 3205209874 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.Config config = 535555373 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/config"];
      case 535555373: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 4284442986 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef interface_ref = 322206760 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref"];
  if (this->has_interface_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      322206760, *this->interface_ref_, output);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.State state = 400651234 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      400651234, *this->state_, output);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.Config config = 535555373 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      535555373, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef interface_ref = 322206760 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref"];
  if (this->has_interface_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        322206760, *this->interface_ref_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.State state = 400651234 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        400651234, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.Config config = 535555373 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        535555373, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface)
  return target;
}

size_t Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.InterfaceRef interface_ref = 322206760 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/interface-ref"];
  if (this->has_interface_ref()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interface_ref_);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.State state = 400651234 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface.Config config = 535555373 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::MergeFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_interface_ref()) {
    mutable_interface_ref()->::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_InterfaceRef::MergeFrom(from.interface_ref());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface_Config::MergeFrom(from.config());
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::CopyFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::Swap(Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::InternalSwap(Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface* other) {
  using std::swap;
  swap(interface_ref_, other->interface_ref_);
  swap(state_, other->state_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_default_instance_._instance.get_mutable()->destination_address_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_default_instance_._instance.get_mutable()->dscp_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_default_instance_._instance.get_mutable()->hop_limit_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_default_instance_.protocol_openconfigpacketmatchtypesipprotocol_ = 0;
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_default_instance_.protocol_uint64_ = GOOGLE_ULONGLONG(0);
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config_default_instance_._instance.get_mutable()->source_address_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::clear_destination_address() {
  if (GetArenaNoVirtual() == NULL && destination_address_ != NULL) {
    delete destination_address_;
  }
  destination_address_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::clear_dscp() {
  if (GetArenaNoVirtual() == NULL && dscp_ != NULL) {
    delete dscp_;
  }
  dscp_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::clear_hop_limit() {
  if (GetArenaNoVirtual() == NULL && hop_limit_ != NULL) {
    delete hop_limit_;
  }
  hop_limit_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::clear_source_address() {
  if (GetArenaNoVirtual() == NULL && source_address_ != NULL) {
    delete source_address_;
  }
  source_address_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::kDestinationAddressFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::kDscpFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::kHopLimitFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::kProtocolOpenconfigpacketmatchtypesipprotocolFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::kProtocolUint64FieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::kSourceAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.Config)
}
Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config(const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_dscp()) {
    dscp_ = new ::ywrapper::UintValue(*from.dscp_);
  } else {
    dscp_ = NULL;
  }
  if (from.has_destination_address()) {
    destination_address_ = new ::ywrapper::StringValue(*from.destination_address_);
  } else {
    destination_address_ = NULL;
  }
  if (from.has_source_address()) {
    source_address_ = new ::ywrapper::StringValue(*from.source_address_);
  } else {
    source_address_ = NULL;
  }
  if (from.has_hop_limit()) {
    hop_limit_ = new ::ywrapper::UintValue(*from.hop_limit_);
  } else {
    hop_limit_ = NULL;
  }
  clear_has_protocol();
  switch (from.protocol_case()) {
    case kProtocolOpenconfigpacketmatchtypesipprotocol: {
      set_protocol_openconfigpacketmatchtypesipprotocol(from.protocol_openconfigpacketmatchtypesipprotocol());
      break;
    }
    case kProtocolUint64: {
      set_protocol_uint64(from.protocol_uint64());
      break;
    }
    case PROTOCOL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.Config)
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::SharedCtor() {
  ::memset(&dscp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hop_limit_) -
      reinterpret_cast<char*>(&dscp_)) + sizeof(hop_limit_));
  clear_has_protocol();
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::~Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.Config)
  SharedDtor();
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::SharedDtor() {
  if (this != internal_default_instance()) delete dscp_;
  if (this != internal_default_instance()) delete destination_address_;
  if (this != internal_default_instance()) delete source_address_;
  if (this != internal_default_instance()) delete hop_limit_;
  if (has_protocol()) {
    clear_protocol();
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config& Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config* Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config* n = new Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::clear_protocol() {
// @@protoc_insertion_point(one_of_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.Config)
  switch (protocol_case()) {
    case kProtocolOpenconfigpacketmatchtypesipprotocol: {
      // No need to clear
      break;
    }
    case kProtocolUint64: {
      // No need to clear
      break;
    }
    case PROTOCOL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PROTOCOL_NOT_SET;
}


void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && dscp_ != NULL) {
    delete dscp_;
  }
  dscp_ = NULL;
  if (GetArenaNoVirtual() == NULL && destination_address_ != NULL) {
    delete destination_address_;
  }
  destination_address_ = NULL;
  if (GetArenaNoVirtual() == NULL && source_address_ != NULL) {
    delete source_address_;
  }
  source_address_ = NULL;
  if (GetArenaNoVirtual() == NULL && hop_limit_ != NULL) {
    delete hop_limit_;
  }
  hop_limit_ = NULL;
  clear_protocol();
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3950609842u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.enums.OpenconfigPacketMatchTypesIPPROTOCOL protocol_openconfigpacketmatchtypesipprotocol = 13672225;
      case 13672225: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 109377800 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_protocol_openconfigpacketmatchtypesipprotocol(static_cast< ::openconfig::enums::OpenconfigPacketMatchTypesIPPROTOCOL >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue dscp = 14259057 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/config/dscp"];
      case 14259057: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 114072458 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dscp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue destination_address = 82903810 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/config/destination-address"];
      case 82903810: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 663230482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_destination_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 protocol_uint64 = 231259264;
      case 231259264: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(0u /* 1850074112 & 0xFF */)) {
          clear_protocol();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &protocol_.protocol_uint64_)));
          set_has_protocol_uint64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue source_address = 460084551 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/config/source-address"];
      case 460084551: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 3680676410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue hop_limit = 493826230 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/config/hop-limit"];
      case 493826230: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 3950609842 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hop_limit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.Config)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigPacketMatchTypesIPPROTOCOL protocol_openconfigpacketmatchtypesipprotocol = 13672225;
  if (has_protocol_openconfigpacketmatchtypesipprotocol()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      13672225, this->protocol_openconfigpacketmatchtypesipprotocol(), output);
  }

  // .ywrapper.UintValue dscp = 14259057 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/config/dscp"];
  if (this->has_dscp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14259057, *this->dscp_, output);
  }

  // .ywrapper.StringValue destination_address = 82903810 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/config/destination-address"];
  if (this->has_destination_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      82903810, *this->destination_address_, output);
  }

  // uint64 protocol_uint64 = 231259264;
  if (has_protocol_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(231259264, this->protocol_uint64(), output);
  }

  // .ywrapper.StringValue source_address = 460084551 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/config/source-address"];
  if (this->has_source_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      460084551, *this->source_address_, output);
  }

  // .ywrapper.UintValue hop_limit = 493826230 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/config/hop-limit"];
  if (this->has_hop_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      493826230, *this->hop_limit_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.Config)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigPacketMatchTypesIPPROTOCOL protocol_openconfigpacketmatchtypesipprotocol = 13672225;
  if (has_protocol_openconfigpacketmatchtypesipprotocol()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      13672225, this->protocol_openconfigpacketmatchtypesipprotocol(), target);
  }

  // .ywrapper.UintValue dscp = 14259057 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/config/dscp"];
  if (this->has_dscp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        14259057, *this->dscp_, deterministic, target);
  }

  // .ywrapper.StringValue destination_address = 82903810 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/config/destination-address"];
  if (this->has_destination_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        82903810, *this->destination_address_, deterministic, target);
  }

  // uint64 protocol_uint64 = 231259264;
  if (has_protocol_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(231259264, this->protocol_uint64(), target);
  }

  // .ywrapper.StringValue source_address = 460084551 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/config/source-address"];
  if (this->has_source_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        460084551, *this->source_address_, deterministic, target);
  }

  // .ywrapper.UintValue hop_limit = 493826230 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/config/hop-limit"];
  if (this->has_hop_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        493826230, *this->hop_limit_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.Config)
  return target;
}

size_t Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue dscp = 14259057 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/config/dscp"];
  if (this->has_dscp()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->dscp_);
  }

  // .ywrapper.StringValue destination_address = 82903810 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/config/destination-address"];
  if (this->has_destination_address()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->destination_address_);
  }

  // .ywrapper.StringValue source_address = 460084551 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/config/source-address"];
  if (this->has_source_address()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->source_address_);
  }

  // .ywrapper.UintValue hop_limit = 493826230 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/config/hop-limit"];
  if (this->has_hop_limit()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->hop_limit_);
  }

  switch (protocol_case()) {
    // .openconfig.enums.OpenconfigPacketMatchTypesIPPROTOCOL protocol_openconfigpacketmatchtypesipprotocol = 13672225;
    case kProtocolOpenconfigpacketmatchtypesipprotocol: {
      total_size += 4 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->protocol_openconfigpacketmatchtypesipprotocol());
      break;
    }
    // uint64 protocol_uint64 = 231259264;
    case kProtocolUint64: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->protocol_uint64());
      break;
    }
    case PROTOCOL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.Config)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::MergeFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dscp()) {
    mutable_dscp()->::ywrapper::UintValue::MergeFrom(from.dscp());
  }
  if (from.has_destination_address()) {
    mutable_destination_address()->::ywrapper::StringValue::MergeFrom(from.destination_address());
  }
  if (from.has_source_address()) {
    mutable_source_address()->::ywrapper::StringValue::MergeFrom(from.source_address());
  }
  if (from.has_hop_limit()) {
    mutable_hop_limit()->::ywrapper::UintValue::MergeFrom(from.hop_limit());
  }
  switch (from.protocol_case()) {
    case kProtocolOpenconfigpacketmatchtypesipprotocol: {
      set_protocol_openconfigpacketmatchtypesipprotocol(from.protocol_openconfigpacketmatchtypesipprotocol());
      break;
    }
    case kProtocolUint64: {
      set_protocol_uint64(from.protocol_uint64());
      break;
    }
    case PROTOCOL_NOT_SET: {
      break;
    }
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::CopyFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::Swap(Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::InternalSwap(Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config* other) {
  using std::swap;
  swap(dscp_, other->dscp_);
  swap(destination_address_, other->destination_address_);
  swap(source_address_, other->source_address_);
  swap(hop_limit_, other->hop_limit_);
  swap(protocol_, other->protocol_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_default_instance_._instance.get_mutable()->destination_address_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_default_instance_._instance.get_mutable()->dscp_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_default_instance_._instance.get_mutable()->hop_limit_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_default_instance_.protocol_openconfigpacketmatchtypesipprotocol_ = 0;
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_default_instance_.protocol_uint64_ = GOOGLE_ULONGLONG(0);
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State_default_instance_._instance.get_mutable()->source_address_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::clear_destination_address() {
  if (GetArenaNoVirtual() == NULL && destination_address_ != NULL) {
    delete destination_address_;
  }
  destination_address_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::clear_dscp() {
  if (GetArenaNoVirtual() == NULL && dscp_ != NULL) {
    delete dscp_;
  }
  dscp_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::clear_hop_limit() {
  if (GetArenaNoVirtual() == NULL && hop_limit_ != NULL) {
    delete hop_limit_;
  }
  hop_limit_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::clear_source_address() {
  if (GetArenaNoVirtual() == NULL && source_address_ != NULL) {
    delete source_address_;
  }
  source_address_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::kDestinationAddressFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::kDscpFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::kHopLimitFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::kProtocolOpenconfigpacketmatchtypesipprotocolFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::kProtocolUint64FieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::kSourceAddressFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.State)
}
Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State(const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_dscp()) {
    dscp_ = new ::ywrapper::UintValue(*from.dscp_);
  } else {
    dscp_ = NULL;
  }
  if (from.has_destination_address()) {
    destination_address_ = new ::ywrapper::StringValue(*from.destination_address_);
  } else {
    destination_address_ = NULL;
  }
  if (from.has_source_address()) {
    source_address_ = new ::ywrapper::StringValue(*from.source_address_);
  } else {
    source_address_ = NULL;
  }
  if (from.has_hop_limit()) {
    hop_limit_ = new ::ywrapper::UintValue(*from.hop_limit_);
  } else {
    hop_limit_ = NULL;
  }
  clear_has_protocol();
  switch (from.protocol_case()) {
    case kProtocolOpenconfigpacketmatchtypesipprotocol: {
      set_protocol_openconfigpacketmatchtypesipprotocol(from.protocol_openconfigpacketmatchtypesipprotocol());
      break;
    }
    case kProtocolUint64: {
      set_protocol_uint64(from.protocol_uint64());
      break;
    }
    case PROTOCOL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.State)
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::SharedCtor() {
  ::memset(&dscp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hop_limit_) -
      reinterpret_cast<char*>(&dscp_)) + sizeof(hop_limit_));
  clear_has_protocol();
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::~Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.State)
  SharedDtor();
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::SharedDtor() {
  if (this != internal_default_instance()) delete dscp_;
  if (this != internal_default_instance()) delete destination_address_;
  if (this != internal_default_instance()) delete source_address_;
  if (this != internal_default_instance()) delete hop_limit_;
  if (has_protocol()) {
    clear_protocol();
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State& Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State* Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State* n = new Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::clear_protocol() {
// @@protoc_insertion_point(one_of_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.State)
  switch (protocol_case()) {
    case kProtocolOpenconfigpacketmatchtypesipprotocol: {
      // No need to clear
      break;
    }
    case kProtocolUint64: {
      // No need to clear
      break;
    }
    case PROTOCOL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PROTOCOL_NOT_SET;
}


void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && dscp_ != NULL) {
    delete dscp_;
  }
  dscp_ = NULL;
  if (GetArenaNoVirtual() == NULL && destination_address_ != NULL) {
    delete destination_address_;
  }
  destination_address_ = NULL;
  if (GetArenaNoVirtual() == NULL && source_address_ != NULL) {
    delete source_address_;
  }
  source_address_ = NULL;
  if (GetArenaNoVirtual() == NULL && hop_limit_ != NULL) {
    delete hop_limit_;
  }
  hop_limit_ = NULL;
  clear_protocol();
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4010307546u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue dscp = 121235094 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/state/dscp"];
      case 121235094: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 969880754 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dscp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue destination_address = 220481211 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/state/destination-address"];
      case 220481211: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 1763849690 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_destination_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigPacketMatchTypesIPPROTOCOL protocol_openconfigpacketmatchtypesipprotocol = 335169316;
      case 335169316: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 2681354528 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_protocol_openconfigpacketmatchtypesipprotocol(static_cast< ::openconfig::enums::OpenconfigPacketMatchTypesIPPROTOCOL >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue source_address = 459793172 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/state/source-address"];
      case 459793172: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 3678345378 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 protocol_uint64 = 494380497;
      case 494380497: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 3955043976 & 0xFF */)) {
          clear_protocol();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &protocol_.protocol_uint64_)));
          set_has_protocol_uint64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue hop_limit = 501288443 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/state/hop-limit"];
      case 501288443: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 4010307546 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hop_limit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.State)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue dscp = 121235094 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/state/dscp"];
  if (this->has_dscp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      121235094, *this->dscp_, output);
  }

  // .ywrapper.StringValue destination_address = 220481211 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/state/destination-address"];
  if (this->has_destination_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      220481211, *this->destination_address_, output);
  }

  // .openconfig.enums.OpenconfigPacketMatchTypesIPPROTOCOL protocol_openconfigpacketmatchtypesipprotocol = 335169316;
  if (has_protocol_openconfigpacketmatchtypesipprotocol()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      335169316, this->protocol_openconfigpacketmatchtypesipprotocol(), output);
  }

  // .ywrapper.StringValue source_address = 459793172 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/state/source-address"];
  if (this->has_source_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      459793172, *this->source_address_, output);
  }

  // uint64 protocol_uint64 = 494380497;
  if (has_protocol_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(494380497, this->protocol_uint64(), output);
  }

  // .ywrapper.UintValue hop_limit = 501288443 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/state/hop-limit"];
  if (this->has_hop_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      501288443, *this->hop_limit_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.State)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue dscp = 121235094 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/state/dscp"];
  if (this->has_dscp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        121235094, *this->dscp_, deterministic, target);
  }

  // .ywrapper.StringValue destination_address = 220481211 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/state/destination-address"];
  if (this->has_destination_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        220481211, *this->destination_address_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigPacketMatchTypesIPPROTOCOL protocol_openconfigpacketmatchtypesipprotocol = 335169316;
  if (has_protocol_openconfigpacketmatchtypesipprotocol()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      335169316, this->protocol_openconfigpacketmatchtypesipprotocol(), target);
  }

  // .ywrapper.StringValue source_address = 459793172 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/state/source-address"];
  if (this->has_source_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        459793172, *this->source_address_, deterministic, target);
  }

  // uint64 protocol_uint64 = 494380497;
  if (has_protocol_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(494380497, this->protocol_uint64(), target);
  }

  // .ywrapper.UintValue hop_limit = 501288443 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/state/hop-limit"];
  if (this->has_hop_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        501288443, *this->hop_limit_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.State)
  return target;
}

size_t Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue dscp = 121235094 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/state/dscp"];
  if (this->has_dscp()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->dscp_);
  }

  // .ywrapper.StringValue destination_address = 220481211 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/state/destination-address"];
  if (this->has_destination_address()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->destination_address_);
  }

  // .ywrapper.StringValue source_address = 459793172 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/state/source-address"];
  if (this->has_source_address()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->source_address_);
  }

  // .ywrapper.UintValue hop_limit = 501288443 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/state/hop-limit"];
  if (this->has_hop_limit()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->hop_limit_);
  }

  switch (protocol_case()) {
    // .openconfig.enums.OpenconfigPacketMatchTypesIPPROTOCOL protocol_openconfigpacketmatchtypesipprotocol = 335169316;
    case kProtocolOpenconfigpacketmatchtypesipprotocol: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->protocol_openconfigpacketmatchtypesipprotocol());
      break;
    }
    // uint64 protocol_uint64 = 494380497;
    case kProtocolUint64: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->protocol_uint64());
      break;
    }
    case PROTOCOL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.State)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::MergeFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dscp()) {
    mutable_dscp()->::ywrapper::UintValue::MergeFrom(from.dscp());
  }
  if (from.has_destination_address()) {
    mutable_destination_address()->::ywrapper::StringValue::MergeFrom(from.destination_address());
  }
  if (from.has_source_address()) {
    mutable_source_address()->::ywrapper::StringValue::MergeFrom(from.source_address());
  }
  if (from.has_hop_limit()) {
    mutable_hop_limit()->::ywrapper::UintValue::MergeFrom(from.hop_limit());
  }
  switch (from.protocol_case()) {
    case kProtocolOpenconfigpacketmatchtypesipprotocol: {
      set_protocol_openconfigpacketmatchtypesipprotocol(from.protocol_openconfigpacketmatchtypesipprotocol());
      break;
    }
    case kProtocolUint64: {
      set_protocol_uint64(from.protocol_uint64());
      break;
    }
    case PROTOCOL_NOT_SET: {
      break;
    }
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::CopyFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::Swap(Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::InternalSwap(Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State* other) {
  using std::swap;
  swap(dscp_, other->dscp_);
  swap(destination_address_, other->destination_address_);
  swap(source_address_, other->source_address_);
  swap(hop_limit_, other->hop_limit_);
  swap(protocol_, other->protocol_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::kConfigFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv4();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4)
}
Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4(const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4)
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::SharedCtor() {
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&config_)) + sizeof(state_));
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::~Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4)
  SharedDtor();
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete state_;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4& Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv4();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4* Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4* n = new Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4148392906u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.Config config = 15381632 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/config"];
      case 15381632: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 123053058 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.State state = 518549113 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/state"];
      case 518549113: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 4148392906 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.Config config = 15381632 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15381632, *this->config_, output);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.State state = 518549113 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      518549113, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.Config config = 15381632 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        15381632, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.State state = 518549113 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        518549113, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4)
  return target;
}

size_t Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.Config config = 15381632 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/config"];
  if (this->has_config()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4.State state = 518549113 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::MergeFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_Config::MergeFrom(from.config());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4_State::MergeFrom(from.state());
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::CopyFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::Swap(Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::InternalSwap(Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_default_instance_._instance.get_mutable()->destination_address_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_default_instance_._instance.get_mutable()->destination_flow_label_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_default_instance_._instance.get_mutable()->dscp_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_default_instance_._instance.get_mutable()->hop_limit_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_default_instance_.protocol_openconfigpacketmatchtypesipprotocol_ = 0;
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_default_instance_.protocol_uint64_ = GOOGLE_ULONGLONG(0);
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_default_instance_._instance.get_mutable()->source_address_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config_default_instance_._instance.get_mutable()->source_flow_label_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::clear_destination_address() {
  if (GetArenaNoVirtual() == NULL && destination_address_ != NULL) {
    delete destination_address_;
  }
  destination_address_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::clear_destination_flow_label() {
  if (GetArenaNoVirtual() == NULL && destination_flow_label_ != NULL) {
    delete destination_flow_label_;
  }
  destination_flow_label_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::clear_dscp() {
  if (GetArenaNoVirtual() == NULL && dscp_ != NULL) {
    delete dscp_;
  }
  dscp_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::clear_hop_limit() {
  if (GetArenaNoVirtual() == NULL && hop_limit_ != NULL) {
    delete hop_limit_;
  }
  hop_limit_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::clear_source_address() {
  if (GetArenaNoVirtual() == NULL && source_address_ != NULL) {
    delete source_address_;
  }
  source_address_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::clear_source_flow_label() {
  if (GetArenaNoVirtual() == NULL && source_flow_label_ != NULL) {
    delete source_flow_label_;
  }
  source_flow_label_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::kDestinationAddressFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::kDestinationFlowLabelFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::kDscpFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::kHopLimitFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::kProtocolOpenconfigpacketmatchtypesipprotocolFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::kProtocolUint64FieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::kSourceAddressFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::kSourceFlowLabelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.Config)
}
Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config(const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_hop_limit()) {
    hop_limit_ = new ::ywrapper::UintValue(*from.hop_limit_);
  } else {
    hop_limit_ = NULL;
  }
  if (from.has_source_address()) {
    source_address_ = new ::ywrapper::StringValue(*from.source_address_);
  } else {
    source_address_ = NULL;
  }
  if (from.has_destination_address()) {
    destination_address_ = new ::ywrapper::StringValue(*from.destination_address_);
  } else {
    destination_address_ = NULL;
  }
  if (from.has_destination_flow_label()) {
    destination_flow_label_ = new ::ywrapper::UintValue(*from.destination_flow_label_);
  } else {
    destination_flow_label_ = NULL;
  }
  if (from.has_dscp()) {
    dscp_ = new ::ywrapper::UintValue(*from.dscp_);
  } else {
    dscp_ = NULL;
  }
  if (from.has_source_flow_label()) {
    source_flow_label_ = new ::ywrapper::UintValue(*from.source_flow_label_);
  } else {
    source_flow_label_ = NULL;
  }
  clear_has_protocol();
  switch (from.protocol_case()) {
    case kProtocolOpenconfigpacketmatchtypesipprotocol: {
      set_protocol_openconfigpacketmatchtypesipprotocol(from.protocol_openconfigpacketmatchtypesipprotocol());
      break;
    }
    case kProtocolUint64: {
      set_protocol_uint64(from.protocol_uint64());
      break;
    }
    case PROTOCOL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.Config)
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::SharedCtor() {
  ::memset(&hop_limit_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&source_flow_label_) -
      reinterpret_cast<char*>(&hop_limit_)) + sizeof(source_flow_label_));
  clear_has_protocol();
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::~Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.Config)
  SharedDtor();
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::SharedDtor() {
  if (this != internal_default_instance()) delete hop_limit_;
  if (this != internal_default_instance()) delete source_address_;
  if (this != internal_default_instance()) delete destination_address_;
  if (this != internal_default_instance()) delete destination_flow_label_;
  if (this != internal_default_instance()) delete dscp_;
  if (this != internal_default_instance()) delete source_flow_label_;
  if (has_protocol()) {
    clear_protocol();
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config& Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config* Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config* n = new Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::clear_protocol() {
// @@protoc_insertion_point(one_of_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.Config)
  switch (protocol_case()) {
    case kProtocolOpenconfigpacketmatchtypesipprotocol: {
      // No need to clear
      break;
    }
    case kProtocolUint64: {
      // No need to clear
      break;
    }
    case PROTOCOL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PROTOCOL_NOT_SET;
}


void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && hop_limit_ != NULL) {
    delete hop_limit_;
  }
  hop_limit_ = NULL;
  if (GetArenaNoVirtual() == NULL && source_address_ != NULL) {
    delete source_address_;
  }
  source_address_ = NULL;
  if (GetArenaNoVirtual() == NULL && destination_address_ != NULL) {
    delete destination_address_;
  }
  destination_address_ = NULL;
  if (GetArenaNoVirtual() == NULL && destination_flow_label_ != NULL) {
    delete destination_flow_label_;
  }
  destination_flow_label_ = NULL;
  if (GetArenaNoVirtual() == NULL && dscp_ != NULL) {
    delete dscp_;
  }
  dscp_ = NULL;
  if (GetArenaNoVirtual() == NULL && source_flow_label_ != NULL) {
    delete source_flow_label_;
  }
  source_flow_label_ = NULL;
  clear_protocol();
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3753901554u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue hop_limit = 103791760 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config/hop-limit"];
      case 103791760: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 830334082 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hop_limit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue source_address = 178850349 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config/source-address"];
      case 178850349: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 1430802794 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue destination_address = 194564924 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config/destination-address"];
      case 194564924: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 1556519394 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_destination_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue destination_flow_label = 245840793 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config/destination-flow-label"];
      case 245840793: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 1966726346 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_destination_flow_label()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigPacketMatchTypesIPPROTOCOL protocol_openconfigpacketmatchtypesipprotocol = 439824055;
      case 439824055: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(184u /* 3518592440 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_protocol_openconfigpacketmatchtypesipprotocol(static_cast< ::openconfig::enums::OpenconfigPacketMatchTypesIPPROTOCOL >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 protocol_uint64 = 468204694;
      case 468204694: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 3745637552 & 0xFF */)) {
          clear_protocol();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &protocol_.protocol_uint64_)));
          set_has_protocol_uint64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue dscp = 468604011 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config/dscp"];
      case 468604011: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 3748832090 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dscp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue source_flow_label = 469237694 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config/source-flow-label"];
      case 469237694: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 3753901554 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_flow_label()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.Config)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue hop_limit = 103791760 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config/hop-limit"];
  if (this->has_hop_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      103791760, *this->hop_limit_, output);
  }

  // .ywrapper.StringValue source_address = 178850349 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config/source-address"];
  if (this->has_source_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      178850349, *this->source_address_, output);
  }

  // .ywrapper.StringValue destination_address = 194564924 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config/destination-address"];
  if (this->has_destination_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      194564924, *this->destination_address_, output);
  }

  // .ywrapper.UintValue destination_flow_label = 245840793 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config/destination-flow-label"];
  if (this->has_destination_flow_label()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      245840793, *this->destination_flow_label_, output);
  }

  // .openconfig.enums.OpenconfigPacketMatchTypesIPPROTOCOL protocol_openconfigpacketmatchtypesipprotocol = 439824055;
  if (has_protocol_openconfigpacketmatchtypesipprotocol()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      439824055, this->protocol_openconfigpacketmatchtypesipprotocol(), output);
  }

  // uint64 protocol_uint64 = 468204694;
  if (has_protocol_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(468204694, this->protocol_uint64(), output);
  }

  // .ywrapper.UintValue dscp = 468604011 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config/dscp"];
  if (this->has_dscp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      468604011, *this->dscp_, output);
  }

  // .ywrapper.UintValue source_flow_label = 469237694 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config/source-flow-label"];
  if (this->has_source_flow_label()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      469237694, *this->source_flow_label_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.Config)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue hop_limit = 103791760 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config/hop-limit"];
  if (this->has_hop_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        103791760, *this->hop_limit_, deterministic, target);
  }

  // .ywrapper.StringValue source_address = 178850349 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config/source-address"];
  if (this->has_source_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        178850349, *this->source_address_, deterministic, target);
  }

  // .ywrapper.StringValue destination_address = 194564924 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config/destination-address"];
  if (this->has_destination_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        194564924, *this->destination_address_, deterministic, target);
  }

  // .ywrapper.UintValue destination_flow_label = 245840793 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config/destination-flow-label"];
  if (this->has_destination_flow_label()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        245840793, *this->destination_flow_label_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigPacketMatchTypesIPPROTOCOL protocol_openconfigpacketmatchtypesipprotocol = 439824055;
  if (has_protocol_openconfigpacketmatchtypesipprotocol()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      439824055, this->protocol_openconfigpacketmatchtypesipprotocol(), target);
  }

  // uint64 protocol_uint64 = 468204694;
  if (has_protocol_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(468204694, this->protocol_uint64(), target);
  }

  // .ywrapper.UintValue dscp = 468604011 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config/dscp"];
  if (this->has_dscp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        468604011, *this->dscp_, deterministic, target);
  }

  // .ywrapper.UintValue source_flow_label = 469237694 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config/source-flow-label"];
  if (this->has_source_flow_label()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        469237694, *this->source_flow_label_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.Config)
  return target;
}

size_t Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue hop_limit = 103791760 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config/hop-limit"];
  if (this->has_hop_limit()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->hop_limit_);
  }

  // .ywrapper.StringValue source_address = 178850349 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config/source-address"];
  if (this->has_source_address()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->source_address_);
  }

  // .ywrapper.StringValue destination_address = 194564924 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config/destination-address"];
  if (this->has_destination_address()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->destination_address_);
  }

  // .ywrapper.UintValue destination_flow_label = 245840793 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config/destination-flow-label"];
  if (this->has_destination_flow_label()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->destination_flow_label_);
  }

  // .ywrapper.UintValue dscp = 468604011 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config/dscp"];
  if (this->has_dscp()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->dscp_);
  }

  // .ywrapper.UintValue source_flow_label = 469237694 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config/source-flow-label"];
  if (this->has_source_flow_label()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->source_flow_label_);
  }

  switch (protocol_case()) {
    // .openconfig.enums.OpenconfigPacketMatchTypesIPPROTOCOL protocol_openconfigpacketmatchtypesipprotocol = 439824055;
    case kProtocolOpenconfigpacketmatchtypesipprotocol: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->protocol_openconfigpacketmatchtypesipprotocol());
      break;
    }
    // uint64 protocol_uint64 = 468204694;
    case kProtocolUint64: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->protocol_uint64());
      break;
    }
    case PROTOCOL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.Config)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::MergeFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_hop_limit()) {
    mutable_hop_limit()->::ywrapper::UintValue::MergeFrom(from.hop_limit());
  }
  if (from.has_source_address()) {
    mutable_source_address()->::ywrapper::StringValue::MergeFrom(from.source_address());
  }
  if (from.has_destination_address()) {
    mutable_destination_address()->::ywrapper::StringValue::MergeFrom(from.destination_address());
  }
  if (from.has_destination_flow_label()) {
    mutable_destination_flow_label()->::ywrapper::UintValue::MergeFrom(from.destination_flow_label());
  }
  if (from.has_dscp()) {
    mutable_dscp()->::ywrapper::UintValue::MergeFrom(from.dscp());
  }
  if (from.has_source_flow_label()) {
    mutable_source_flow_label()->::ywrapper::UintValue::MergeFrom(from.source_flow_label());
  }
  switch (from.protocol_case()) {
    case kProtocolOpenconfigpacketmatchtypesipprotocol: {
      set_protocol_openconfigpacketmatchtypesipprotocol(from.protocol_openconfigpacketmatchtypesipprotocol());
      break;
    }
    case kProtocolUint64: {
      set_protocol_uint64(from.protocol_uint64());
      break;
    }
    case PROTOCOL_NOT_SET: {
      break;
    }
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::CopyFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::Swap(Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::InternalSwap(Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config* other) {
  using std::swap;
  swap(hop_limit_, other->hop_limit_);
  swap(source_address_, other->source_address_);
  swap(destination_address_, other->destination_address_);
  swap(destination_flow_label_, other->destination_flow_label_);
  swap(dscp_, other->dscp_);
  swap(source_flow_label_, other->source_flow_label_);
  swap(protocol_, other->protocol_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_default_instance_._instance.get_mutable()->destination_address_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_default_instance_._instance.get_mutable()->destination_flow_label_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_default_instance_._instance.get_mutable()->dscp_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_default_instance_._instance.get_mutable()->hop_limit_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_default_instance_.protocol_openconfigpacketmatchtypesipprotocol_ = 0;
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_default_instance_.protocol_uint64_ = GOOGLE_ULONGLONG(0);
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_default_instance_._instance.get_mutable()->source_address_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State_default_instance_._instance.get_mutable()->source_flow_label_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::clear_destination_address() {
  if (GetArenaNoVirtual() == NULL && destination_address_ != NULL) {
    delete destination_address_;
  }
  destination_address_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::clear_destination_flow_label() {
  if (GetArenaNoVirtual() == NULL && destination_flow_label_ != NULL) {
    delete destination_flow_label_;
  }
  destination_flow_label_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::clear_dscp() {
  if (GetArenaNoVirtual() == NULL && dscp_ != NULL) {
    delete dscp_;
  }
  dscp_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::clear_hop_limit() {
  if (GetArenaNoVirtual() == NULL && hop_limit_ != NULL) {
    delete hop_limit_;
  }
  hop_limit_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::clear_source_address() {
  if (GetArenaNoVirtual() == NULL && source_address_ != NULL) {
    delete source_address_;
  }
  source_address_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::clear_source_flow_label() {
  if (GetArenaNoVirtual() == NULL && source_flow_label_ != NULL) {
    delete source_flow_label_;
  }
  source_flow_label_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::kDestinationAddressFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::kDestinationFlowLabelFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::kDscpFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::kHopLimitFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::kProtocolOpenconfigpacketmatchtypesipprotocolFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::kProtocolUint64FieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::kSourceAddressFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::kSourceFlowLabelFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.State)
}
Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State(const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_source_flow_label()) {
    source_flow_label_ = new ::ywrapper::UintValue(*from.source_flow_label_);
  } else {
    source_flow_label_ = NULL;
  }
  if (from.has_destination_address()) {
    destination_address_ = new ::ywrapper::StringValue(*from.destination_address_);
  } else {
    destination_address_ = NULL;
  }
  if (from.has_source_address()) {
    source_address_ = new ::ywrapper::StringValue(*from.source_address_);
  } else {
    source_address_ = NULL;
  }
  if (from.has_dscp()) {
    dscp_ = new ::ywrapper::UintValue(*from.dscp_);
  } else {
    dscp_ = NULL;
  }
  if (from.has_destination_flow_label()) {
    destination_flow_label_ = new ::ywrapper::UintValue(*from.destination_flow_label_);
  } else {
    destination_flow_label_ = NULL;
  }
  if (from.has_hop_limit()) {
    hop_limit_ = new ::ywrapper::UintValue(*from.hop_limit_);
  } else {
    hop_limit_ = NULL;
  }
  clear_has_protocol();
  switch (from.protocol_case()) {
    case kProtocolOpenconfigpacketmatchtypesipprotocol: {
      set_protocol_openconfigpacketmatchtypesipprotocol(from.protocol_openconfigpacketmatchtypesipprotocol());
      break;
    }
    case kProtocolUint64: {
      set_protocol_uint64(from.protocol_uint64());
      break;
    }
    case PROTOCOL_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.State)
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::SharedCtor() {
  ::memset(&source_flow_label_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&hop_limit_) -
      reinterpret_cast<char*>(&source_flow_label_)) + sizeof(hop_limit_));
  clear_has_protocol();
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::~Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.State)
  SharedDtor();
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::SharedDtor() {
  if (this != internal_default_instance()) delete source_flow_label_;
  if (this != internal_default_instance()) delete destination_address_;
  if (this != internal_default_instance()) delete source_address_;
  if (this != internal_default_instance()) delete dscp_;
  if (this != internal_default_instance()) delete destination_flow_label_;
  if (this != internal_default_instance()) delete hop_limit_;
  if (has_protocol()) {
    clear_protocol();
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State& Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State* Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State* n = new Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::clear_protocol() {
// @@protoc_insertion_point(one_of_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.State)
  switch (protocol_case()) {
    case kProtocolOpenconfigpacketmatchtypesipprotocol: {
      // No need to clear
      break;
    }
    case kProtocolUint64: {
      // No need to clear
      break;
    }
    case PROTOCOL_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PROTOCOL_NOT_SET;
}


void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && source_flow_label_ != NULL) {
    delete source_flow_label_;
  }
  source_flow_label_ = NULL;
  if (GetArenaNoVirtual() == NULL && destination_address_ != NULL) {
    delete destination_address_;
  }
  destination_address_ = NULL;
  if (GetArenaNoVirtual() == NULL && source_address_ != NULL) {
    delete source_address_;
  }
  source_address_ = NULL;
  if (GetArenaNoVirtual() == NULL && dscp_ != NULL) {
    delete dscp_;
  }
  dscp_ = NULL;
  if (GetArenaNoVirtual() == NULL && destination_flow_label_ != NULL) {
    delete destination_flow_label_;
  }
  destination_flow_label_ = NULL;
  if (GetArenaNoVirtual() == NULL && hop_limit_ != NULL) {
    delete hop_limit_;
  }
  hop_limit_ = NULL;
  clear_protocol();
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4191234954u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue source_flow_label = 46925499 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state/source-flow-label"];
      case 46925499: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 375403994 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_flow_label()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigPacketMatchTypesIPPROTOCOL protocol_openconfigpacketmatchtypesipprotocol = 60937310;
      case 60937310: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 487498480 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_protocol_openconfigpacketmatchtypesipprotocol(static_cast< ::openconfig::enums::OpenconfigPacketMatchTypesIPPROTOCOL >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 protocol_uint64 = 132228515;
      case 132228515: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 1057828120 & 0xFF */)) {
          clear_protocol();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &protocol_.protocol_uint64_)));
          set_has_protocol_uint64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue destination_address = 226569937 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state/destination-address"];
      case 226569937: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 1812559498 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_destination_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue source_address = 299459214 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state/source-address"];
      case 299459214: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 2395673714 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue dscp = 369661252 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state/dscp"];
      case 369661252: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 2957290018 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dscp()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue destination_flow_label = 443337090 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state/destination-flow-label"];
      case 443337090: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 3546696722 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_destination_flow_label()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue hop_limit = 523904369 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state/hop-limit"];
      case 523904369: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 4191234954 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_hop_limit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.State)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue source_flow_label = 46925499 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state/source-flow-label"];
  if (this->has_source_flow_label()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      46925499, *this->source_flow_label_, output);
  }

  // .openconfig.enums.OpenconfigPacketMatchTypesIPPROTOCOL protocol_openconfigpacketmatchtypesipprotocol = 60937310;
  if (has_protocol_openconfigpacketmatchtypesipprotocol()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      60937310, this->protocol_openconfigpacketmatchtypesipprotocol(), output);
  }

  // uint64 protocol_uint64 = 132228515;
  if (has_protocol_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(132228515, this->protocol_uint64(), output);
  }

  // .ywrapper.StringValue destination_address = 226569937 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state/destination-address"];
  if (this->has_destination_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      226569937, *this->destination_address_, output);
  }

  // .ywrapper.StringValue source_address = 299459214 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state/source-address"];
  if (this->has_source_address()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      299459214, *this->source_address_, output);
  }

  // .ywrapper.UintValue dscp = 369661252 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state/dscp"];
  if (this->has_dscp()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      369661252, *this->dscp_, output);
  }

  // .ywrapper.UintValue destination_flow_label = 443337090 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state/destination-flow-label"];
  if (this->has_destination_flow_label()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      443337090, *this->destination_flow_label_, output);
  }

  // .ywrapper.UintValue hop_limit = 523904369 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state/hop-limit"];
  if (this->has_hop_limit()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      523904369, *this->hop_limit_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.State)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue source_flow_label = 46925499 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state/source-flow-label"];
  if (this->has_source_flow_label()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        46925499, *this->source_flow_label_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigPacketMatchTypesIPPROTOCOL protocol_openconfigpacketmatchtypesipprotocol = 60937310;
  if (has_protocol_openconfigpacketmatchtypesipprotocol()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      60937310, this->protocol_openconfigpacketmatchtypesipprotocol(), target);
  }

  // uint64 protocol_uint64 = 132228515;
  if (has_protocol_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(132228515, this->protocol_uint64(), target);
  }

  // .ywrapper.StringValue destination_address = 226569937 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state/destination-address"];
  if (this->has_destination_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        226569937, *this->destination_address_, deterministic, target);
  }

  // .ywrapper.StringValue source_address = 299459214 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state/source-address"];
  if (this->has_source_address()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        299459214, *this->source_address_, deterministic, target);
  }

  // .ywrapper.UintValue dscp = 369661252 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state/dscp"];
  if (this->has_dscp()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        369661252, *this->dscp_, deterministic, target);
  }

  // .ywrapper.UintValue destination_flow_label = 443337090 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state/destination-flow-label"];
  if (this->has_destination_flow_label()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        443337090, *this->destination_flow_label_, deterministic, target);
  }

  // .ywrapper.UintValue hop_limit = 523904369 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state/hop-limit"];
  if (this->has_hop_limit()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        523904369, *this->hop_limit_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.State)
  return target;
}

size_t Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue source_flow_label = 46925499 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state/source-flow-label"];
  if (this->has_source_flow_label()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->source_flow_label_);
  }

  // .ywrapper.StringValue destination_address = 226569937 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state/destination-address"];
  if (this->has_destination_address()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->destination_address_);
  }

  // .ywrapper.StringValue source_address = 299459214 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state/source-address"];
  if (this->has_source_address()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->source_address_);
  }

  // .ywrapper.UintValue dscp = 369661252 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state/dscp"];
  if (this->has_dscp()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->dscp_);
  }

  // .ywrapper.UintValue destination_flow_label = 443337090 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state/destination-flow-label"];
  if (this->has_destination_flow_label()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->destination_flow_label_);
  }

  // .ywrapper.UintValue hop_limit = 523904369 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state/hop-limit"];
  if (this->has_hop_limit()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->hop_limit_);
  }

  switch (protocol_case()) {
    // .openconfig.enums.OpenconfigPacketMatchTypesIPPROTOCOL protocol_openconfigpacketmatchtypesipprotocol = 60937310;
    case kProtocolOpenconfigpacketmatchtypesipprotocol: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->protocol_openconfigpacketmatchtypesipprotocol());
      break;
    }
    // uint64 protocol_uint64 = 132228515;
    case kProtocolUint64: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->protocol_uint64());
      break;
    }
    case PROTOCOL_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.State)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::MergeFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_source_flow_label()) {
    mutable_source_flow_label()->::ywrapper::UintValue::MergeFrom(from.source_flow_label());
  }
  if (from.has_destination_address()) {
    mutable_destination_address()->::ywrapper::StringValue::MergeFrom(from.destination_address());
  }
  if (from.has_source_address()) {
    mutable_source_address()->::ywrapper::StringValue::MergeFrom(from.source_address());
  }
  if (from.has_dscp()) {
    mutable_dscp()->::ywrapper::UintValue::MergeFrom(from.dscp());
  }
  if (from.has_destination_flow_label()) {
    mutable_destination_flow_label()->::ywrapper::UintValue::MergeFrom(from.destination_flow_label());
  }
  if (from.has_hop_limit()) {
    mutable_hop_limit()->::ywrapper::UintValue::MergeFrom(from.hop_limit());
  }
  switch (from.protocol_case()) {
    case kProtocolOpenconfigpacketmatchtypesipprotocol: {
      set_protocol_openconfigpacketmatchtypesipprotocol(from.protocol_openconfigpacketmatchtypesipprotocol());
      break;
    }
    case kProtocolUint64: {
      set_protocol_uint64(from.protocol_uint64());
      break;
    }
    case PROTOCOL_NOT_SET: {
      break;
    }
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::CopyFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::Swap(Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::InternalSwap(Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State* other) {
  using std::swap;
  swap(source_flow_label_, other->source_flow_label_);
  swap(destination_address_, other->destination_address_);
  swap(source_address_, other->source_address_);
  swap(dscp_, other->dscp_);
  swap(destination_flow_label_, other->destination_flow_label_);
  swap(hop_limit_, other->hop_limit_);
  swap(protocol_, other->protocol_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::kConfigFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv6();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6)
}
Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6(const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6)
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&state_)) + sizeof(config_));
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::~Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6)
  SharedDtor();
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6& Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Ipv6();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6* Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6* n = new Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2844864402u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.State state = 9069295 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state"];
      case 9069295: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 72554362 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.Config config = 355608050 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config"];
      case 355608050: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 2844864402 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.State state = 9069295 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9069295, *this->state_, output);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.Config config = 355608050 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      355608050, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.State state = 9069295 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9069295, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.Config config = 355608050 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        355608050, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6)
  return target;
}

size_t Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.State state = 9069295 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/state"];
  if (this->has_state()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6.Config config = 355608050 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::MergeFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6_Config::MergeFrom(from.config());
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::CopyFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::Swap(Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::InternalSwap(Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_default_instance_._instance.get_mutable()->destination_mac_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_default_instance_._instance.get_mutable()->destination_mac_mask_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_default_instance_.ethertype_openconfigpacketmatchtypesethertype_ = 0;
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_default_instance_.ethertype_uint64_ = GOOGLE_ULONGLONG(0);
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_default_instance_._instance.get_mutable()->source_mac_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config_default_instance_._instance.get_mutable()->source_mac_mask_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::clear_destination_mac() {
  if (GetArenaNoVirtual() == NULL && destination_mac_ != NULL) {
    delete destination_mac_;
  }
  destination_mac_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::clear_destination_mac_mask() {
  if (GetArenaNoVirtual() == NULL && destination_mac_mask_ != NULL) {
    delete destination_mac_mask_;
  }
  destination_mac_mask_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::clear_source_mac() {
  if (GetArenaNoVirtual() == NULL && source_mac_ != NULL) {
    delete source_mac_;
  }
  source_mac_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::clear_source_mac_mask() {
  if (GetArenaNoVirtual() == NULL && source_mac_mask_ != NULL) {
    delete source_mac_mask_;
  }
  source_mac_mask_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::kDestinationMacFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::kDestinationMacMaskFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::kEthertypeOpenconfigpacketmatchtypesethertypeFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::kEthertypeUint64FieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::kSourceMacFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::kSourceMacMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_L2_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.Config)
}
Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config(const Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_destination_mac()) {
    destination_mac_ = new ::ywrapper::StringValue(*from.destination_mac_);
  } else {
    destination_mac_ = NULL;
  }
  if (from.has_source_mac_mask()) {
    source_mac_mask_ = new ::ywrapper::StringValue(*from.source_mac_mask_);
  } else {
    source_mac_mask_ = NULL;
  }
  if (from.has_source_mac()) {
    source_mac_ = new ::ywrapper::StringValue(*from.source_mac_);
  } else {
    source_mac_ = NULL;
  }
  if (from.has_destination_mac_mask()) {
    destination_mac_mask_ = new ::ywrapper::StringValue(*from.destination_mac_mask_);
  } else {
    destination_mac_mask_ = NULL;
  }
  clear_has_ethertype();
  switch (from.ethertype_case()) {
    case kEthertypeOpenconfigpacketmatchtypesethertype: {
      set_ethertype_openconfigpacketmatchtypesethertype(from.ethertype_openconfigpacketmatchtypesethertype());
      break;
    }
    case kEthertypeUint64: {
      set_ethertype_uint64(from.ethertype_uint64());
      break;
    }
    case ETHERTYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.Config)
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::SharedCtor() {
  ::memset(&destination_mac_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&destination_mac_mask_) -
      reinterpret_cast<char*>(&destination_mac_)) + sizeof(destination_mac_mask_));
  clear_has_ethertype();
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::~Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.Config)
  SharedDtor();
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::SharedDtor() {
  if (this != internal_default_instance()) delete destination_mac_;
  if (this != internal_default_instance()) delete source_mac_mask_;
  if (this != internal_default_instance()) delete source_mac_;
  if (this != internal_default_instance()) delete destination_mac_mask_;
  if (has_ethertype()) {
    clear_ethertype();
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config& Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_L2_Config();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config* Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config* n = new Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::clear_ethertype() {
// @@protoc_insertion_point(one_of_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.Config)
  switch (ethertype_case()) {
    case kEthertypeOpenconfigpacketmatchtypesethertype: {
      // No need to clear
      break;
    }
    case kEthertypeUint64: {
      // No need to clear
      break;
    }
    case ETHERTYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ETHERTYPE_NOT_SET;
}


void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && destination_mac_ != NULL) {
    delete destination_mac_;
  }
  destination_mac_ = NULL;
  if (GetArenaNoVirtual() == NULL && source_mac_mask_ != NULL) {
    delete source_mac_mask_;
  }
  source_mac_mask_ = NULL;
  if (GetArenaNoVirtual() == NULL && source_mac_ != NULL) {
    delete source_mac_;
  }
  source_mac_ = NULL;
  if (GetArenaNoVirtual() == NULL && destination_mac_mask_ != NULL) {
    delete destination_mac_mask_;
  }
  destination_mac_mask_ = NULL;
  clear_ethertype();
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4017360712u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 ethertype_uint64 = 138649893;
      case 138649893: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 1109199144 & 0xFF */)) {
          clear_ethertype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ethertype_.ethertype_uint64_)));
          set_has_ethertype_uint64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue destination_mac = 256403538 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/config/destination-mac"];
      case 256403538: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 2051228306 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_destination_mac()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue source_mac_mask = 270818178 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/config/source-mac-mask"];
      case 270818178: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 2166545426 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_mac_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue source_mac = 399757125 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/config/source-mac"];
      case 399757125: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 3198057002 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_mac()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue destination_mac_mask = 410258607 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/config/destination-mac-mask"];
      case 410258607: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 3282068858 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_destination_mac_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigPacketMatchTypesETHERTYPE ethertype_openconfigpacketmatchtypesethertype = 502170089;
      case 502170089: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 4017360712 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ethertype_openconfigpacketmatchtypesethertype(static_cast< ::openconfig::enums::OpenconfigPacketMatchTypesETHERTYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.Config)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ethertype_uint64 = 138649893;
  if (has_ethertype_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(138649893, this->ethertype_uint64(), output);
  }

  // .ywrapper.StringValue destination_mac = 256403538 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/config/destination-mac"];
  if (this->has_destination_mac()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      256403538, *this->destination_mac_, output);
  }

  // .ywrapper.StringValue source_mac_mask = 270818178 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/config/source-mac-mask"];
  if (this->has_source_mac_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      270818178, *this->source_mac_mask_, output);
  }

  // .ywrapper.StringValue source_mac = 399757125 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/config/source-mac"];
  if (this->has_source_mac()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      399757125, *this->source_mac_, output);
  }

  // .ywrapper.StringValue destination_mac_mask = 410258607 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/config/destination-mac-mask"];
  if (this->has_destination_mac_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      410258607, *this->destination_mac_mask_, output);
  }

  // .openconfig.enums.OpenconfigPacketMatchTypesETHERTYPE ethertype_openconfigpacketmatchtypesethertype = 502170089;
  if (has_ethertype_openconfigpacketmatchtypesethertype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      502170089, this->ethertype_openconfigpacketmatchtypesethertype(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.Config)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 ethertype_uint64 = 138649893;
  if (has_ethertype_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(138649893, this->ethertype_uint64(), target);
  }

  // .ywrapper.StringValue destination_mac = 256403538 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/config/destination-mac"];
  if (this->has_destination_mac()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        256403538, *this->destination_mac_, deterministic, target);
  }

  // .ywrapper.StringValue source_mac_mask = 270818178 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/config/source-mac-mask"];
  if (this->has_source_mac_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        270818178, *this->source_mac_mask_, deterministic, target);
  }

  // .ywrapper.StringValue source_mac = 399757125 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/config/source-mac"];
  if (this->has_source_mac()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        399757125, *this->source_mac_, deterministic, target);
  }

  // .ywrapper.StringValue destination_mac_mask = 410258607 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/config/destination-mac-mask"];
  if (this->has_destination_mac_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        410258607, *this->destination_mac_mask_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigPacketMatchTypesETHERTYPE ethertype_openconfigpacketmatchtypesethertype = 502170089;
  if (has_ethertype_openconfigpacketmatchtypesethertype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      502170089, this->ethertype_openconfigpacketmatchtypesethertype(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.Config)
  return target;
}

size_t Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue destination_mac = 256403538 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/config/destination-mac"];
  if (this->has_destination_mac()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->destination_mac_);
  }

  // .ywrapper.StringValue source_mac_mask = 270818178 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/config/source-mac-mask"];
  if (this->has_source_mac_mask()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->source_mac_mask_);
  }

  // .ywrapper.StringValue source_mac = 399757125 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/config/source-mac"];
  if (this->has_source_mac()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->source_mac_);
  }

  // .ywrapper.StringValue destination_mac_mask = 410258607 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/config/destination-mac-mask"];
  if (this->has_destination_mac_mask()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->destination_mac_mask_);
  }

  switch (ethertype_case()) {
    // .openconfig.enums.OpenconfigPacketMatchTypesETHERTYPE ethertype_openconfigpacketmatchtypesethertype = 502170089;
    case kEthertypeOpenconfigpacketmatchtypesethertype: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ethertype_openconfigpacketmatchtypesethertype());
      break;
    }
    // uint64 ethertype_uint64 = 138649893;
    case kEthertypeUint64: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->ethertype_uint64());
      break;
    }
    case ETHERTYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.Config)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::MergeFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_destination_mac()) {
    mutable_destination_mac()->::ywrapper::StringValue::MergeFrom(from.destination_mac());
  }
  if (from.has_source_mac_mask()) {
    mutable_source_mac_mask()->::ywrapper::StringValue::MergeFrom(from.source_mac_mask());
  }
  if (from.has_source_mac()) {
    mutable_source_mac()->::ywrapper::StringValue::MergeFrom(from.source_mac());
  }
  if (from.has_destination_mac_mask()) {
    mutable_destination_mac_mask()->::ywrapper::StringValue::MergeFrom(from.destination_mac_mask());
  }
  switch (from.ethertype_case()) {
    case kEthertypeOpenconfigpacketmatchtypesethertype: {
      set_ethertype_openconfigpacketmatchtypesethertype(from.ethertype_openconfigpacketmatchtypesethertype());
      break;
    }
    case kEthertypeUint64: {
      set_ethertype_uint64(from.ethertype_uint64());
      break;
    }
    case ETHERTYPE_NOT_SET: {
      break;
    }
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::CopyFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::Swap(Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::InternalSwap(Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config* other) {
  using std::swap;
  swap(destination_mac_, other->destination_mac_);
  swap(source_mac_mask_, other->source_mac_mask_);
  swap(source_mac_, other->source_mac_);
  swap(destination_mac_mask_, other->destination_mac_mask_);
  swap(ethertype_, other->ethertype_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_default_instance_._instance.get_mutable()->destination_mac_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_default_instance_._instance.get_mutable()->destination_mac_mask_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_default_instance_.ethertype_openconfigpacketmatchtypesethertype_ = 0;
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_default_instance_.ethertype_uint64_ = GOOGLE_ULONGLONG(0);
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_default_instance_._instance.get_mutable()->source_mac_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State_default_instance_._instance.get_mutable()->source_mac_mask_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::clear_destination_mac() {
  if (GetArenaNoVirtual() == NULL && destination_mac_ != NULL) {
    delete destination_mac_;
  }
  destination_mac_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::clear_destination_mac_mask() {
  if (GetArenaNoVirtual() == NULL && destination_mac_mask_ != NULL) {
    delete destination_mac_mask_;
  }
  destination_mac_mask_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::clear_source_mac() {
  if (GetArenaNoVirtual() == NULL && source_mac_ != NULL) {
    delete source_mac_;
  }
  source_mac_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::clear_source_mac_mask() {
  if (GetArenaNoVirtual() == NULL && source_mac_mask_ != NULL) {
    delete source_mac_mask_;
  }
  source_mac_mask_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::kDestinationMacFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::kDestinationMacMaskFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::kEthertypeOpenconfigpacketmatchtypesethertypeFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::kEthertypeUint64FieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::kSourceMacFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::kSourceMacMaskFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_L2_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.State)
}
Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State(const Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_source_mac()) {
    source_mac_ = new ::ywrapper::StringValue(*from.source_mac_);
  } else {
    source_mac_ = NULL;
  }
  if (from.has_destination_mac_mask()) {
    destination_mac_mask_ = new ::ywrapper::StringValue(*from.destination_mac_mask_);
  } else {
    destination_mac_mask_ = NULL;
  }
  if (from.has_source_mac_mask()) {
    source_mac_mask_ = new ::ywrapper::StringValue(*from.source_mac_mask_);
  } else {
    source_mac_mask_ = NULL;
  }
  if (from.has_destination_mac()) {
    destination_mac_ = new ::ywrapper::StringValue(*from.destination_mac_);
  } else {
    destination_mac_ = NULL;
  }
  clear_has_ethertype();
  switch (from.ethertype_case()) {
    case kEthertypeOpenconfigpacketmatchtypesethertype: {
      set_ethertype_openconfigpacketmatchtypesethertype(from.ethertype_openconfigpacketmatchtypesethertype());
      break;
    }
    case kEthertypeUint64: {
      set_ethertype_uint64(from.ethertype_uint64());
      break;
    }
    case ETHERTYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.State)
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::SharedCtor() {
  ::memset(&source_mac_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&destination_mac_) -
      reinterpret_cast<char*>(&source_mac_)) + sizeof(destination_mac_));
  clear_has_ethertype();
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::~Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.State)
  SharedDtor();
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::SharedDtor() {
  if (this != internal_default_instance()) delete source_mac_;
  if (this != internal_default_instance()) delete destination_mac_mask_;
  if (this != internal_default_instance()) delete source_mac_mask_;
  if (this != internal_default_instance()) delete destination_mac_;
  if (has_ethertype()) {
    clear_ethertype();
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State& Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_L2_State();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State* Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State* n = new Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::clear_ethertype() {
// @@protoc_insertion_point(one_of_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.State)
  switch (ethertype_case()) {
    case kEthertypeOpenconfigpacketmatchtypesethertype: {
      // No need to clear
      break;
    }
    case kEthertypeUint64: {
      // No need to clear
      break;
    }
    case ETHERTYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = ETHERTYPE_NOT_SET;
}


void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && source_mac_ != NULL) {
    delete source_mac_;
  }
  source_mac_ = NULL;
  if (GetArenaNoVirtual() == NULL && destination_mac_mask_ != NULL) {
    delete destination_mac_mask_;
  }
  destination_mac_mask_ = NULL;
  if (GetArenaNoVirtual() == NULL && source_mac_mask_ != NULL) {
    delete source_mac_mask_;
  }
  source_mac_mask_ = NULL;
  if (GetArenaNoVirtual() == NULL && destination_mac_ != NULL) {
    delete destination_mac_;
  }
  destination_mac_ = NULL;
  clear_ethertype();
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3231621194u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue source_mac = 9821144 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/state/source-mac"];
      case 9821144: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 78569154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_mac()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigPacketMatchTypesETHERTYPE ethertype_openconfigpacketmatchtypesethertype = 50199482;
      case 50199482: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 401595856 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_ethertype_openconfigpacketmatchtypesethertype(static_cast< ::openconfig::enums::OpenconfigPacketMatchTypesETHERTYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 ethertype_uint64 = 67964624;
      case 67964624: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 543716992 & 0xFF */)) {
          clear_ethertype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &ethertype_.ethertype_uint64_)));
          set_has_ethertype_uint64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue destination_mac_mask = 272951166 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/state/destination-mac-mask"];
      case 272951166: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 2183609330 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_destination_mac_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue source_mac_mask = 337242297 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/state/source-mac-mask"];
      case 337242297: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 2697938378 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_source_mac_mask()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue destination_mac = 403952649 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/state/destination-mac"];
      case 403952649: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 3231621194 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_destination_mac()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.State)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue source_mac = 9821144 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/state/source-mac"];
  if (this->has_source_mac()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9821144, *this->source_mac_, output);
  }

  // .openconfig.enums.OpenconfigPacketMatchTypesETHERTYPE ethertype_openconfigpacketmatchtypesethertype = 50199482;
  if (has_ethertype_openconfigpacketmatchtypesethertype()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      50199482, this->ethertype_openconfigpacketmatchtypesethertype(), output);
  }

  // uint64 ethertype_uint64 = 67964624;
  if (has_ethertype_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(67964624, this->ethertype_uint64(), output);
  }

  // .ywrapper.StringValue destination_mac_mask = 272951166 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/state/destination-mac-mask"];
  if (this->has_destination_mac_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      272951166, *this->destination_mac_mask_, output);
  }

  // .ywrapper.StringValue source_mac_mask = 337242297 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/state/source-mac-mask"];
  if (this->has_source_mac_mask()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      337242297, *this->source_mac_mask_, output);
  }

  // .ywrapper.StringValue destination_mac = 403952649 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/state/destination-mac"];
  if (this->has_destination_mac()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      403952649, *this->destination_mac_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.State)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue source_mac = 9821144 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/state/source-mac"];
  if (this->has_source_mac()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9821144, *this->source_mac_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigPacketMatchTypesETHERTYPE ethertype_openconfigpacketmatchtypesethertype = 50199482;
  if (has_ethertype_openconfigpacketmatchtypesethertype()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      50199482, this->ethertype_openconfigpacketmatchtypesethertype(), target);
  }

  // uint64 ethertype_uint64 = 67964624;
  if (has_ethertype_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(67964624, this->ethertype_uint64(), target);
  }

  // .ywrapper.StringValue destination_mac_mask = 272951166 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/state/destination-mac-mask"];
  if (this->has_destination_mac_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        272951166, *this->destination_mac_mask_, deterministic, target);
  }

  // .ywrapper.StringValue source_mac_mask = 337242297 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/state/source-mac-mask"];
  if (this->has_source_mac_mask()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        337242297, *this->source_mac_mask_, deterministic, target);
  }

  // .ywrapper.StringValue destination_mac = 403952649 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/state/destination-mac"];
  if (this->has_destination_mac()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        403952649, *this->destination_mac_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.State)
  return target;
}

size_t Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue source_mac = 9821144 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/state/source-mac"];
  if (this->has_source_mac()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->source_mac_);
  }

  // .ywrapper.StringValue destination_mac_mask = 272951166 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/state/destination-mac-mask"];
  if (this->has_destination_mac_mask()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->destination_mac_mask_);
  }

  // .ywrapper.StringValue source_mac_mask = 337242297 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/state/source-mac-mask"];
  if (this->has_source_mac_mask()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->source_mac_mask_);
  }

  // .ywrapper.StringValue destination_mac = 403952649 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/state/destination-mac"];
  if (this->has_destination_mac()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->destination_mac_);
  }

  switch (ethertype_case()) {
    // .openconfig.enums.OpenconfigPacketMatchTypesETHERTYPE ethertype_openconfigpacketmatchtypesethertype = 50199482;
    case kEthertypeOpenconfigpacketmatchtypesethertype: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ethertype_openconfigpacketmatchtypesethertype());
      break;
    }
    // uint64 ethertype_uint64 = 67964624;
    case kEthertypeUint64: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->ethertype_uint64());
      break;
    }
    case ETHERTYPE_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.State)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::MergeFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_source_mac()) {
    mutable_source_mac()->::ywrapper::StringValue::MergeFrom(from.source_mac());
  }
  if (from.has_destination_mac_mask()) {
    mutable_destination_mac_mask()->::ywrapper::StringValue::MergeFrom(from.destination_mac_mask());
  }
  if (from.has_source_mac_mask()) {
    mutable_source_mac_mask()->::ywrapper::StringValue::MergeFrom(from.source_mac_mask());
  }
  if (from.has_destination_mac()) {
    mutable_destination_mac()->::ywrapper::StringValue::MergeFrom(from.destination_mac());
  }
  switch (from.ethertype_case()) {
    case kEthertypeOpenconfigpacketmatchtypesethertype: {
      set_ethertype_openconfigpacketmatchtypesethertype(from.ethertype_openconfigpacketmatchtypesethertype());
      break;
    }
    case kEthertypeUint64: {
      set_ethertype_uint64(from.ethertype_uint64());
      break;
    }
    case ETHERTYPE_NOT_SET: {
      break;
    }
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::CopyFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::Swap(Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::InternalSwap(Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State* other) {
  using std::swap;
  swap(source_mac_, other->source_mac_);
  swap(destination_mac_mask_, other->destination_mac_mask_);
  swap(source_mac_mask_, other->source_mac_mask_);
  swap(destination_mac_, other->destination_mac_);
  swap(ethertype_, other->ethertype_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_L2_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSet_AclEntries_AclEntry_L2::kConfigFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_L2::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_AclEntries_AclEntry_L2::Acl_AclSets_AclSet_AclEntries_AclEntry_L2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_L2();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2)
}
Acl_AclSets_AclSet_AclEntries_AclEntry_L2::Acl_AclSets_AclSet_AclEntries_AclEntry_L2(const Acl_AclSets_AclSet_AclEntries_AclEntry_L2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2)
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&state_)) + sizeof(config_));
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_AclEntries_AclEntry_L2::~Acl_AclSets_AclSet_AclEntries_AclEntry_L2() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2)
  SharedDtor();
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_AclEntries_AclEntry_L2::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_AclEntries_AclEntry_L2& Acl_AclSets_AclSet_AclEntries_AclEntry_L2::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_L2();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_AclEntries_AclEntry_L2* Acl_AclSets_AclSet_AclEntries_AclEntry_L2::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_AclEntries_AclEntry_L2* n = new Acl_AclSets_AclSet_AclEntries_AclEntry_L2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_L2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1839547978u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.State state = 122962974 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/state"];
      case 122962974: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 983703794 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.Config config = 229943497 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/config"];
      case 229943497: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 1839547978 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.State state = 122962974 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      122962974, *this->state_, output);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.Config config = 229943497 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      229943497, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_AclEntries_AclEntry_L2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.State state = 122962974 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        122962974, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.Config config = 229943497 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        229943497, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2)
  return target;
}

size_t Acl_AclSets_AclSet_AclEntries_AclEntry_L2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.State state = 122962974 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2.Config config = 229943497 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_AclEntries_AclEntry_L2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_AclEntries_AclEntry_L2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2::MergeFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_L2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2_Config::MergeFrom(from.config());
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2::CopyFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_L2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_L2::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_L2::Swap(Acl_AclSets_AclSet_AclEntries_AclEntry_L2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_L2::InternalSwap(Acl_AclSets_AclSet_AclEntries_AclEntry_L2* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_AclEntries_AclEntry_L2::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet_AclEntries_AclEntry_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_State_default_instance_._instance.get_mutable()->description_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_State_default_instance_._instance.get_mutable()->matched_octets_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_State_default_instance_._instance.get_mutable()->matched_packets_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_State_default_instance_._instance.get_mutable()->sequence_id_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_State::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_State::clear_matched_octets() {
  if (GetArenaNoVirtual() == NULL && matched_octets_ != NULL) {
    delete matched_octets_;
  }
  matched_octets_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_State::clear_matched_packets() {
  if (GetArenaNoVirtual() == NULL && matched_packets_ != NULL) {
    delete matched_packets_;
  }
  matched_packets_ = NULL;
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_State::clear_sequence_id() {
  if (GetArenaNoVirtual() == NULL && sequence_id_ != NULL) {
    delete sequence_id_;
  }
  sequence_id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSet_AclEntries_AclEntry_State::kDescriptionFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_State::kMatchedOctetsFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_State::kMatchedPacketsFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_State::kSequenceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_AclEntries_AclEntry_State::Acl_AclSets_AclSet_AclEntries_AclEntry_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.State)
}
Acl_AclSets_AclSet_AclEntries_AclEntry_State::Acl_AclSets_AclSet_AclEntries_AclEntry_State(const Acl_AclSets_AclSet_AclEntries_AclEntry_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_matched_packets()) {
    matched_packets_ = new ::ywrapper::UintValue(*from.matched_packets_);
  } else {
    matched_packets_ = NULL;
  }
  if (from.has_sequence_id()) {
    sequence_id_ = new ::ywrapper::UintValue(*from.sequence_id_);
  } else {
    sequence_id_ = NULL;
  }
  if (from.has_matched_octets()) {
    matched_octets_ = new ::ywrapper::UintValue(*from.matched_octets_);
  } else {
    matched_octets_ = NULL;
  }
  if (from.has_description()) {
    description_ = new ::ywrapper::StringValue(*from.description_);
  } else {
    description_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.State)
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_State::SharedCtor() {
  ::memset(&matched_packets_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&description_) -
      reinterpret_cast<char*>(&matched_packets_)) + sizeof(description_));
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_AclEntries_AclEntry_State::~Acl_AclSets_AclSet_AclEntries_AclEntry_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.State)
  SharedDtor();
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_State::SharedDtor() {
  if (this != internal_default_instance()) delete matched_packets_;
  if (this != internal_default_instance()) delete sequence_id_;
  if (this != internal_default_instance()) delete matched_octets_;
  if (this != internal_default_instance()) delete description_;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_AclEntries_AclEntry_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_AclEntries_AclEntry_State& Acl_AclSets_AclSet_AclEntries_AclEntry_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_State();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_AclEntries_AclEntry_State* Acl_AclSets_AclSet_AclEntries_AclEntry_State::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_AclEntries_AclEntry_State* n = new Acl_AclSets_AclSet_AclEntries_AclEntry_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && matched_packets_ != NULL) {
    delete matched_packets_;
  }
  matched_packets_ = NULL;
  if (GetArenaNoVirtual() == NULL && sequence_id_ != NULL) {
    delete sequence_id_;
  }
  sequence_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && matched_octets_ != NULL) {
    delete matched_octets_;
  }
  matched_octets_ = NULL;
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3479591890u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue matched_packets = 123694420 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/state/matched-packets"];
      case 123694420: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 989555362 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_matched_packets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue sequence_id = 212274571 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/state/sequence-id"];
      case 212274571: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 1698196570 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sequence_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue matched_octets = 378451401 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/state/matched-octets"];
      case 378451401: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 3027611210 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_matched_octets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue description = 434948986 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/state/description"];
      case 434948986: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 3479591890 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.State)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue matched_packets = 123694420 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/state/matched-packets"];
  if (this->has_matched_packets()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      123694420, *this->matched_packets_, output);
  }

  // .ywrapper.UintValue sequence_id = 212274571 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/state/sequence-id"];
  if (this->has_sequence_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      212274571, *this->sequence_id_, output);
  }

  // .ywrapper.UintValue matched_octets = 378451401 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/state/matched-octets"];
  if (this->has_matched_octets()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      378451401, *this->matched_octets_, output);
  }

  // .ywrapper.StringValue description = 434948986 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/state/description"];
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      434948986, *this->description_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.State)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_AclEntries_AclEntry_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue matched_packets = 123694420 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/state/matched-packets"];
  if (this->has_matched_packets()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        123694420, *this->matched_packets_, deterministic, target);
  }

  // .ywrapper.UintValue sequence_id = 212274571 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/state/sequence-id"];
  if (this->has_sequence_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        212274571, *this->sequence_id_, deterministic, target);
  }

  // .ywrapper.UintValue matched_octets = 378451401 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/state/matched-octets"];
  if (this->has_matched_octets()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        378451401, *this->matched_octets_, deterministic, target);
  }

  // .ywrapper.StringValue description = 434948986 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/state/description"];
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        434948986, *this->description_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.State)
  return target;
}

size_t Acl_AclSets_AclSet_AclEntries_AclEntry_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue matched_packets = 123694420 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/state/matched-packets"];
  if (this->has_matched_packets()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->matched_packets_);
  }

  // .ywrapper.UintValue sequence_id = 212274571 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/state/sequence-id"];
  if (this->has_sequence_id()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->sequence_id_);
  }

  // .ywrapper.UintValue matched_octets = 378451401 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/state/matched-octets"];
  if (this->has_matched_octets()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->matched_octets_);
  }

  // .ywrapper.StringValue description = 434948986 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/state/description"];
  if (this->has_description()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->description_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_AclEntries_AclEntry_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_AclEntries_AclEntry_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.State)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_State::MergeFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_matched_packets()) {
    mutable_matched_packets()->::ywrapper::UintValue::MergeFrom(from.matched_packets());
  }
  if (from.has_sequence_id()) {
    mutable_sequence_id()->::ywrapper::UintValue::MergeFrom(from.sequence_id());
  }
  if (from.has_matched_octets()) {
    mutable_matched_octets()->::ywrapper::UintValue::MergeFrom(from.matched_octets());
  }
  if (from.has_description()) {
    mutable_description()->::ywrapper::StringValue::MergeFrom(from.description());
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_State::CopyFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_State::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_State::Swap(Acl_AclSets_AclSet_AclEntries_AclEntry_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_State::InternalSwap(Acl_AclSets_AclSet_AclEntries_AclEntry_State* other) {
  using std::swap;
  swap(matched_packets_, other->matched_packets_);
  swap(sequence_id_, other->sequence_id_);
  swap(matched_octets_, other->matched_octets_);
  swap(description_, other->description_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_AclEntries_AclEntry_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_default_instance_.destination_port_destinationport_ = 0;
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_default_instance_.destination_port_string_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_default_instance_.destination_port_uint64_ = GOOGLE_ULONGLONG(0);
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_default_instance_.source_port_sourceport_ = 0;
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_default_instance_.source_port_string_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_default_instance_.source_port_uint64_ = GOOGLE_ULONGLONG(0);
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::kDestinationPortDestinationportFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::kDestinationPortStringFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::kDestinationPortUint64FieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::kSourcePortSourceportFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::kSourcePortStringFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::kSourcePortUint64FieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::kTcpFlagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config)
}
Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config(const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tcp_flags_(from.tcp_flags_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_destination_port();
  switch (from.destination_port_case()) {
    case kDestinationPortDestinationport: {
      set_destination_port_destinationport(from.destination_port_destinationport());
      break;
    }
    case kDestinationPortString: {
      set_destination_port_string(from.destination_port_string());
      break;
    }
    case kDestinationPortUint64: {
      set_destination_port_uint64(from.destination_port_uint64());
      break;
    }
    case DESTINATION_PORT_NOT_SET: {
      break;
    }
  }
  clear_has_source_port();
  switch (from.source_port_case()) {
    case kSourcePortSourceport: {
      set_source_port_sourceport(from.source_port_sourceport());
      break;
    }
    case kSourcePortString: {
      set_source_port_string(from.source_port_string());
      break;
    }
    case kSourcePortUint64: {
      set_source_port_uint64(from.source_port_uint64());
      break;
    }
    case SOURCE_PORT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config)
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::SharedCtor() {
  clear_has_destination_port();
  clear_has_source_port();
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::~Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config)
  SharedDtor();
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::SharedDtor() {
  if (has_destination_port()) {
    clear_destination_port();
  }
  if (has_source_port()) {
    clear_source_port();
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config& Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config* Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config* n = new Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::clear_destination_port() {
// @@protoc_insertion_point(one_of_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config)
  switch (destination_port_case()) {
    case kDestinationPortDestinationport: {
      // No need to clear
      break;
    }
    case kDestinationPortString: {
      destination_port_.destination_port_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kDestinationPortUint64: {
      // No need to clear
      break;
    }
    case DESTINATION_PORT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DESTINATION_PORT_NOT_SET;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::clear_source_port() {
// @@protoc_insertion_point(one_of_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config)
  switch (source_port_case()) {
    case kSourcePortSourceport: {
      // No need to clear
      break;
    }
    case kSourcePortString: {
      source_port_.source_port_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kSourcePortUint64: {
      // No need to clear
      break;
    }
    case SOURCE_PORT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = SOURCE_PORT_NOT_SET;
}


void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tcp_flags_.Clear();
  clear_destination_port();
  clear_source_port();
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3842649368u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.enums.OpenconfigPacketMatchTypesTCPFLAGS tcp_flags = 77057068 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/config/tcp-flags"];
      case 77057068: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 616456546 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_tcp_flags(static_cast< ::openconfig::enums::OpenconfigPacketMatchTypesTCPFLAGS >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 616456544 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_tcp_flags(static_cast< ::openconfig::enums::OpenconfigPacketMatchTypesTCPFLAGS >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string source_port_string = 147714378;
      case 147714378: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 1181715026 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_port_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source_port_string().data(), static_cast<int>(this->source_port_string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config.source_port_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config.DestinationPort destination_port_destinationport = 184575989;
      case 184575989: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(168u /* 1476607912 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_destination_port_destinationport(static_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_DestinationPort >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 destination_port_uint64 = 203687850;
      case 203687850: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 1629502800 & 0xFF */)) {
          clear_destination_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &destination_port_.destination_port_uint64_)));
          set_has_destination_port_uint64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string destination_port_string = 353749975;
      case 353749975: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 2829999802 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destination_port_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->destination_port_string().data(), static_cast<int>(this->destination_port_string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config.destination_port_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 source_port_uint64 = 455918283;
      case 455918283: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 3647346264 & 0xFF */)) {
          clear_source_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &source_port_.source_port_uint64_)));
          set_has_source_port_uint64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config.SourcePort source_port_sourceport = 480331171;
      case 480331171: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 3842649368 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_source_port_sourceport(static_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config_SourcePort >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.enums.OpenconfigPacketMatchTypesTCPFLAGS tcp_flags = 77057068 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/config/tcp-flags"];
  if (this->tcp_flags_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      77057068,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_tcp_flags_cached_byte_size_));
  }
  for (int i = 0, n = this->tcp_flags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->tcp_flags(i), output);
  }

  // string source_port_string = 147714378;
  if (has_source_port_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_port_string().data(), static_cast<int>(this->source_port_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config.source_port_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      147714378, this->source_port_string(), output);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config.DestinationPort destination_port_destinationport = 184575989;
  if (has_destination_port_destinationport()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      184575989, this->destination_port_destinationport(), output);
  }

  // uint64 destination_port_uint64 = 203687850;
  if (has_destination_port_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(203687850, this->destination_port_uint64(), output);
  }

  // string destination_port_string = 353749975;
  if (has_destination_port_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination_port_string().data(), static_cast<int>(this->destination_port_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config.destination_port_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      353749975, this->destination_port_string(), output);
  }

  // uint64 source_port_uint64 = 455918283;
  if (has_source_port_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(455918283, this->source_port_uint64(), output);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config.SourcePort source_port_sourceport = 480331171;
  if (has_source_port_sourceport()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      480331171, this->source_port_sourceport(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.enums.OpenconfigPacketMatchTypesTCPFLAGS tcp_flags = 77057068 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/config/tcp-flags"];
  if (this->tcp_flags_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      77057068,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _tcp_flags_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->tcp_flags_, target);
  }

  // string source_port_string = 147714378;
  if (has_source_port_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_port_string().data(), static_cast<int>(this->source_port_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config.source_port_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        147714378, this->source_port_string(), target);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config.DestinationPort destination_port_destinationport = 184575989;
  if (has_destination_port_destinationport()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      184575989, this->destination_port_destinationport(), target);
  }

  // uint64 destination_port_uint64 = 203687850;
  if (has_destination_port_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(203687850, this->destination_port_uint64(), target);
  }

  // string destination_port_string = 353749975;
  if (has_destination_port_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination_port_string().data(), static_cast<int>(this->destination_port_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config.destination_port_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        353749975, this->destination_port_string(), target);
  }

  // uint64 source_port_uint64 = 455918283;
  if (has_source_port_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(455918283, this->source_port_uint64(), target);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config.SourcePort source_port_sourceport = 480331171;
  if (has_source_port_sourceport()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      480331171, this->source_port_sourceport(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config)
  return target;
}

size_t Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.enums.OpenconfigPacketMatchTypesTCPFLAGS tcp_flags = 77057068 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/config/tcp-flags"];
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->tcp_flags_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->tcp_flags(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _tcp_flags_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  switch (destination_port_case()) {
    // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config.DestinationPort destination_port_destinationport = 184575989;
    case kDestinationPortDestinationport: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->destination_port_destinationport());
      break;
    }
    // string destination_port_string = 353749975;
    case kDestinationPortString: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->destination_port_string());
      break;
    }
    // uint64 destination_port_uint64 = 203687850;
    case kDestinationPortUint64: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->destination_port_uint64());
      break;
    }
    case DESTINATION_PORT_NOT_SET: {
      break;
    }
  }
  switch (source_port_case()) {
    // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config.SourcePort source_port_sourceport = 480331171;
    case kSourcePortSourceport: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->source_port_sourceport());
      break;
    }
    // string source_port_string = 147714378;
    case kSourcePortString: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_port_string());
      break;
    }
    // uint64 source_port_uint64 = 455918283;
    case kSourcePortUint64: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->source_port_uint64());
      break;
    }
    case SOURCE_PORT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::MergeFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tcp_flags_.MergeFrom(from.tcp_flags_);
  switch (from.destination_port_case()) {
    case kDestinationPortDestinationport: {
      set_destination_port_destinationport(from.destination_port_destinationport());
      break;
    }
    case kDestinationPortString: {
      set_destination_port_string(from.destination_port_string());
      break;
    }
    case kDestinationPortUint64: {
      set_destination_port_uint64(from.destination_port_uint64());
      break;
    }
    case DESTINATION_PORT_NOT_SET: {
      break;
    }
  }
  switch (from.source_port_case()) {
    case kSourcePortSourceport: {
      set_source_port_sourceport(from.source_port_sourceport());
      break;
    }
    case kSourcePortString: {
      set_source_port_string(from.source_port_string());
      break;
    }
    case kSourcePortUint64: {
      set_source_port_uint64(from.source_port_uint64());
      break;
    }
    case SOURCE_PORT_NOT_SET: {
      break;
    }
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::CopyFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::Swap(Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::InternalSwap(Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config* other) {
  using std::swap;
  tcp_flags_.InternalSwap(&other->tcp_flags_);
  swap(destination_port_, other->destination_port_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(source_port_, other->source_port_);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_default_instance_.destination_port_destinationport_ = 0;
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_default_instance_.destination_port_string_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_default_instance_.destination_port_uint64_ = GOOGLE_ULONGLONG(0);
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_default_instance_.source_port_sourceport_ = 0;
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_default_instance_.source_port_string_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_default_instance_.source_port_uint64_ = GOOGLE_ULONGLONG(0);
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::kDestinationPortDestinationportFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::kDestinationPortStringFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::kDestinationPortUint64FieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::kSourcePortSourceportFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::kSourcePortStringFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::kSourcePortUint64FieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::kTcpFlagsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Transport_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State)
}
Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State(const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      tcp_flags_(from.tcp_flags_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_destination_port();
  switch (from.destination_port_case()) {
    case kDestinationPortDestinationport: {
      set_destination_port_destinationport(from.destination_port_destinationport());
      break;
    }
    case kDestinationPortString: {
      set_destination_port_string(from.destination_port_string());
      break;
    }
    case kDestinationPortUint64: {
      set_destination_port_uint64(from.destination_port_uint64());
      break;
    }
    case DESTINATION_PORT_NOT_SET: {
      break;
    }
  }
  clear_has_source_port();
  switch (from.source_port_case()) {
    case kSourcePortSourceport: {
      set_source_port_sourceport(from.source_port_sourceport());
      break;
    }
    case kSourcePortString: {
      set_source_port_string(from.source_port_string());
      break;
    }
    case kSourcePortUint64: {
      set_source_port_uint64(from.source_port_uint64());
      break;
    }
    case SOURCE_PORT_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State)
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::SharedCtor() {
  clear_has_destination_port();
  clear_has_source_port();
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::~Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State)
  SharedDtor();
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::SharedDtor() {
  if (has_destination_port()) {
    clear_destination_port();
  }
  if (has_source_port()) {
    clear_source_port();
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State& Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Transport_State();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State* Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State* n = new Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::clear_destination_port() {
// @@protoc_insertion_point(one_of_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State)
  switch (destination_port_case()) {
    case kDestinationPortDestinationport: {
      // No need to clear
      break;
    }
    case kDestinationPortString: {
      destination_port_.destination_port_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kDestinationPortUint64: {
      // No need to clear
      break;
    }
    case DESTINATION_PORT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = DESTINATION_PORT_NOT_SET;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::clear_source_port() {
// @@protoc_insertion_point(one_of_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State)
  switch (source_port_case()) {
    case kSourcePortSourceport: {
      // No need to clear
      break;
    }
    case kSourcePortString: {
      source_port_.source_port_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kSourcePortUint64: {
      // No need to clear
      break;
    }
    case SOURCE_PORT_NOT_SET: {
      break;
    }
  }
  _oneof_case_[1] = SOURCE_PORT_NOT_SET;
}


void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tcp_flags_.Clear();
  clear_destination_port();
  clear_source_port();
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3737641586u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State.SourcePort source_port_sourceport = 88930920;
      case 88930920: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 711447360 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_source_port_sourceport(static_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_SourcePort >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string source_port_string = 115058633;
      case 115058633: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 920469066 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_port_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->source_port_string().data(), static_cast<int>(this->source_port_string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State.source_port_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 source_port_uint64 = 147662636;
      case 147662636: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 1181301088 & 0xFF */)) {
          clear_source_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &source_port_.source_port_uint64_)));
          set_has_source_port_uint64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State.DestinationPort destination_port_destinationport = 219003282;
      case 219003282: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 1752026256 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_destination_port_destinationport(static_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State_DestinationPort >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .openconfig.enums.OpenconfigPacketMatchTypesTCPFLAGS tcp_flags = 241870285 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/state/tcp-flags"];
      case 241870285: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 1934962282 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_tcp_flags(static_cast< ::openconfig::enums::OpenconfigPacketMatchTypesTCPFLAGS >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 1934962280 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_tcp_flags(static_cast< ::openconfig::enums::OpenconfigPacketMatchTypesTCPFLAGS >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 destination_port_uint64 = 402564303;
      case 402564303: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 3220514424 & 0xFF */)) {
          clear_destination_port();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &destination_port_.destination_port_uint64_)));
          set_has_destination_port_uint64();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string destination_port_string = 467205198;
      case 467205198: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 3737641586 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destination_port_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->destination_port_string().data(), static_cast<int>(this->destination_port_string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State.destination_port_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State.SourcePort source_port_sourceport = 88930920;
  if (has_source_port_sourceport()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      88930920, this->source_port_sourceport(), output);
  }

  // string source_port_string = 115058633;
  if (has_source_port_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_port_string().data(), static_cast<int>(this->source_port_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State.source_port_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      115058633, this->source_port_string(), output);
  }

  // uint64 source_port_uint64 = 147662636;
  if (has_source_port_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(147662636, this->source_port_uint64(), output);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State.DestinationPort destination_port_destinationport = 219003282;
  if (has_destination_port_destinationport()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      219003282, this->destination_port_destinationport(), output);
  }

  // repeated .openconfig.enums.OpenconfigPacketMatchTypesTCPFLAGS tcp_flags = 241870285 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/state/tcp-flags"];
  if (this->tcp_flags_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      241870285,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_tcp_flags_cached_byte_size_));
  }
  for (int i = 0, n = this->tcp_flags_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->tcp_flags(i), output);
  }

  // uint64 destination_port_uint64 = 402564303;
  if (has_destination_port_uint64()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(402564303, this->destination_port_uint64(), output);
  }

  // string destination_port_string = 467205198;
  if (has_destination_port_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination_port_string().data(), static_cast<int>(this->destination_port_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State.destination_port_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      467205198, this->destination_port_string(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State.SourcePort source_port_sourceport = 88930920;
  if (has_source_port_sourceport()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      88930920, this->source_port_sourceport(), target);
  }

  // string source_port_string = 115058633;
  if (has_source_port_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->source_port_string().data(), static_cast<int>(this->source_port_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State.source_port_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        115058633, this->source_port_string(), target);
  }

  // uint64 source_port_uint64 = 147662636;
  if (has_source_port_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(147662636, this->source_port_uint64(), target);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State.DestinationPort destination_port_destinationport = 219003282;
  if (has_destination_port_destinationport()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      219003282, this->destination_port_destinationport(), target);
  }

  // repeated .openconfig.enums.OpenconfigPacketMatchTypesTCPFLAGS tcp_flags = 241870285 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/state/tcp-flags"];
  if (this->tcp_flags_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      241870285,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _tcp_flags_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->tcp_flags_, target);
  }

  // uint64 destination_port_uint64 = 402564303;
  if (has_destination_port_uint64()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(402564303, this->destination_port_uint64(), target);
  }

  // string destination_port_string = 467205198;
  if (has_destination_port_string()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->destination_port_string().data(), static_cast<int>(this->destination_port_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State.destination_port_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        467205198, this->destination_port_string(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State)
  return target;
}

size_t Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.enums.OpenconfigPacketMatchTypesTCPFLAGS tcp_flags = 241870285 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/state/tcp-flags"];
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->tcp_flags_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->tcp_flags(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _tcp_flags_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  switch (destination_port_case()) {
    // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State.DestinationPort destination_port_destinationport = 219003282;
    case kDestinationPortDestinationport: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->destination_port_destinationport());
      break;
    }
    // string destination_port_string = 467205198;
    case kDestinationPortString: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->destination_port_string());
      break;
    }
    // uint64 destination_port_uint64 = 402564303;
    case kDestinationPortUint64: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->destination_port_uint64());
      break;
    }
    case DESTINATION_PORT_NOT_SET: {
      break;
    }
  }
  switch (source_port_case()) {
    // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State.SourcePort source_port_sourceport = 88930920;
    case kSourcePortSourceport: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->source_port_sourceport());
      break;
    }
    // string source_port_string = 115058633;
    case kSourcePortString: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_port_string());
      break;
    }
    // uint64 source_port_uint64 = 147662636;
    case kSourcePortUint64: {
      total_size += 5 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->source_port_uint64());
      break;
    }
    case SOURCE_PORT_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::MergeFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tcp_flags_.MergeFrom(from.tcp_flags_);
  switch (from.destination_port_case()) {
    case kDestinationPortDestinationport: {
      set_destination_port_destinationport(from.destination_port_destinationport());
      break;
    }
    case kDestinationPortString: {
      set_destination_port_string(from.destination_port_string());
      break;
    }
    case kDestinationPortUint64: {
      set_destination_port_uint64(from.destination_port_uint64());
      break;
    }
    case DESTINATION_PORT_NOT_SET: {
      break;
    }
  }
  switch (from.source_port_case()) {
    case kSourcePortSourceport: {
      set_source_port_sourceport(from.source_port_sourceport());
      break;
    }
    case kSourcePortString: {
      set_source_port_string(from.source_port_string());
      break;
    }
    case kSourcePortUint64: {
      set_source_port_uint64(from.source_port_uint64());
      break;
    }
    case SOURCE_PORT_NOT_SET: {
      break;
    }
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::CopyFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::Swap(Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::InternalSwap(Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State* other) {
  using std::swap;
  tcp_flags_.InternalSwap(&other->tcp_flags_);
  swap(destination_port_, other->destination_port_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  swap(source_port_, other->source_port_);
  swap(_oneof_case_[1], other->_oneof_case_[1]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::kConfigFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Transport();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport)
}
Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport(const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport)
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&state_)) + sizeof(config_));
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::~Acl_AclSets_AclSet_AclEntries_AclEntry_Transport() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport)
  SharedDtor();
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport& Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry_Transport();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_AclEntries_AclEntry_Transport* Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_AclEntries_AclEntry_Transport* n = new Acl_AclSets_AclSet_AclEntries_AclEntry_Transport;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1958701298u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State state = 56546699 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/state"];
      case 56546699: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 452373594 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config config = 244837662 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/config"];
      case 244837662: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 1958701298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State state = 56546699 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      56546699, *this->state_, output);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config config = 244837662 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      244837662, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State state = 56546699 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        56546699, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config config = 244837662 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        244837662, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport)
  return target;
}

size_t Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.State state = 56546699 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport.Config config = 244837662 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/transport/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::MergeFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport_Config::MergeFrom(from.config());
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::CopyFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry_Transport& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::Swap(Acl_AclSets_AclSet_AclEntries_AclEntry_Transport* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::InternalSwap(Acl_AclSets_AclSet_AclEntries_AclEntry_Transport* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet_AclEntries_AclEntry::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_default_instance_._instance.get_mutable()->actions_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Config*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Config::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_default_instance_._instance.get_mutable()->input_interface_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_default_instance_._instance.get_mutable()->ipv4_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_default_instance_._instance.get_mutable()->ipv6_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_default_instance_._instance.get_mutable()->l2_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_State*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_State::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntry_default_instance_._instance.get_mutable()->transport_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSet_AclEntries_AclEntry::kActionsFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry::kConfigFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry::kInputInterfaceFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry::kIpv4FieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry::kIpv6FieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry::kL2FieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry::kStateFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntry::kTransportFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_AclEntries_AclEntry::Acl_AclSets_AclSet_AclEntries_AclEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry)
}
Acl_AclSets_AclSet_AclEntries_AclEntry::Acl_AclSets_AclSet_AclEntries_AclEntry(const Acl_AclSets_AclSet_AclEntries_AclEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_transport()) {
    transport_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport(*from.transport_);
  } else {
    transport_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_ipv4()) {
    ipv4_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4(*from.ipv4_);
  } else {
    ipv4_ = NULL;
  }
  if (from.has_ipv6()) {
    ipv6_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6(*from.ipv6_);
  } else {
    ipv6_ = NULL;
  }
  if (from.has_actions()) {
    actions_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions(*from.actions_);
  } else {
    actions_ = NULL;
  }
  if (from.has_input_interface()) {
    input_interface_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface(*from.input_interface_);
  } else {
    input_interface_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_l2()) {
    l2_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2(*from.l2_);
  } else {
    l2_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry)
}

void Acl_AclSets_AclSet_AclEntries_AclEntry::SharedCtor() {
  ::memset(&transport_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&l2_) -
      reinterpret_cast<char*>(&transport_)) + sizeof(l2_));
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_AclEntries_AclEntry::~Acl_AclSets_AclSet_AclEntries_AclEntry() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry)
  SharedDtor();
}

void Acl_AclSets_AclSet_AclEntries_AclEntry::SharedDtor() {
  if (this != internal_default_instance()) delete transport_;
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete ipv4_;
  if (this != internal_default_instance()) delete ipv6_;
  if (this != internal_default_instance()) delete actions_;
  if (this != internal_default_instance()) delete input_interface_;
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete l2_;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_AclEntries_AclEntry::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_AclEntries_AclEntry& Acl_AclSets_AclSet_AclEntries_AclEntry::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntry();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_AclEntries_AclEntry* Acl_AclSets_AclSet_AclEntries_AclEntry::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_AclEntries_AclEntry* n = new Acl_AclSets_AclSet_AclEntries_AclEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && transport_ != NULL) {
    delete transport_;
  }
  transport_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && ipv4_ != NULL) {
    delete ipv4_;
  }
  ipv4_ = NULL;
  if (GetArenaNoVirtual() == NULL && ipv6_ != NULL) {
    delete ipv6_;
  }
  ipv6_ = NULL;
  if (GetArenaNoVirtual() == NULL && actions_ != NULL) {
    delete actions_;
  }
  actions_ = NULL;
  if (GetArenaNoVirtual() == NULL && input_interface_ != NULL) {
    delete input_interface_;
  }
  input_interface_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && l2_ != NULL) {
    delete l2_;
  }
  l2_ = NULL;
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4078174498u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport transport = 13698857 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/transport"];
      case 13698857: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 109590858 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_transport()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Config config = 201866872 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/config"];
      case 201866872: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 1614934978 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6 ipv6 = 252224189 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6"];
      case 252224189: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 2017793514 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ipv6()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4 ipv4 = 252224191 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4"];
      case 252224191: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 2017793530 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ipv4()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions actions = 266093031 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions"];
      case 266093031: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 2128744250 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_actions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface input_interface = 479636424 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface"];
      case 479636424: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 3837091394 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_input_interface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.State state = 489791377 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/state"];
      case 489791377: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 3918331018 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2 l2 = 509771812 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2"];
      case 509771812: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 4078174498 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_l2()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_AclEntries_AclEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport transport = 13698857 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/transport"];
  if (this->has_transport()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13698857, *this->transport_, output);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Config config = 201866872 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      201866872, *this->config_, output);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6 ipv6 = 252224189 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6"];
  if (this->has_ipv6()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      252224189, *this->ipv6_, output);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4 ipv4 = 252224191 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4"];
  if (this->has_ipv4()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      252224191, *this->ipv4_, output);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions actions = 266093031 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions"];
  if (this->has_actions()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      266093031, *this->actions_, output);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface input_interface = 479636424 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface"];
  if (this->has_input_interface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      479636424, *this->input_interface_, output);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.State state = 489791377 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      489791377, *this->state_, output);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2 l2 = 509771812 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2"];
  if (this->has_l2()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      509771812, *this->l2_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_AclEntries_AclEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport transport = 13698857 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/transport"];
  if (this->has_transport()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13698857, *this->transport_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Config config = 201866872 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        201866872, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6 ipv6 = 252224189 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6"];
  if (this->has_ipv6()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        252224189, *this->ipv6_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4 ipv4 = 252224191 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4"];
  if (this->has_ipv4()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        252224191, *this->ipv4_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions actions = 266093031 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions"];
  if (this->has_actions()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        266093031, *this->actions_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface input_interface = 479636424 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface"];
  if (this->has_input_interface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        479636424, *this->input_interface_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.State state = 489791377 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        489791377, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2 l2 = 509771812 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2"];
  if (this->has_l2()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        509771812, *this->l2_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry)
  return target;
}

size_t Acl_AclSets_AclSet_AclEntries_AclEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Transport transport = 13698857 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/transport"];
  if (this->has_transport()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->transport_);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Config config = 201866872 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv4 ipv4 = 252224191 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv4"];
  if (this->has_ipv4()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->ipv4_);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Ipv6 ipv6 = 252224189 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/ipv6"];
  if (this->has_ipv6()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->ipv6_);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.Actions actions = 266093031 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/actions"];
  if (this->has_actions()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->actions_);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.InputInterface input_interface = 479636424 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/input-interface"];
  if (this->has_input_interface()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->input_interface_);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.State state = 489791377 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry.L2 l2 = 509771812 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/l2"];
  if (this->has_l2()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->l2_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_AclEntries_AclEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_AclEntries_AclEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry::MergeFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_transport()) {
    mutable_transport()->::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Transport::MergeFrom(from.transport());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Config::MergeFrom(from.config());
  }
  if (from.has_ipv4()) {
    mutable_ipv4()->::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv4::MergeFrom(from.ipv4());
  }
  if (from.has_ipv6()) {
    mutable_ipv6()->::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Ipv6::MergeFrom(from.ipv6());
  }
  if (from.has_actions()) {
    mutable_actions()->::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_Actions::MergeFrom(from.actions());
  }
  if (from.has_input_interface()) {
    mutable_input_interface()->::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_InputInterface::MergeFrom(from.input_interface());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_State::MergeFrom(from.state());
  }
  if (from.has_l2()) {
    mutable_l2()->::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry_L2::MergeFrom(from.l2());
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_AclEntries_AclEntry::CopyFrom(const Acl_AclSets_AclSet_AclEntries_AclEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_AclEntries_AclEntry::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_AclEntries_AclEntry::Swap(Acl_AclSets_AclSet_AclEntries_AclEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_AclEntries_AclEntry::InternalSwap(Acl_AclSets_AclSet_AclEntries_AclEntry* other) {
  using std::swap;
  swap(transport_, other->transport_);
  swap(config_, other->config_);
  swap(ipv4_, other->ipv4_);
  swap(ipv6_, other->ipv6_);
  swap(actions_, other->actions_);
  swap(input_interface_, other->input_interface_);
  swap(state_, other->state_);
  swap(l2_, other->l2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_AclEntries_AclEntry::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet_AclEntries_AclEntryKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_AclEntries_AclEntryKey_default_instance_._instance.get_mutable()->acl_entry_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSet_AclEntries_AclEntryKey::kSequenceIdFieldNumber;
const int Acl_AclSets_AclSet_AclEntries_AclEntryKey::kAclEntryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_AclEntries_AclEntryKey::Acl_AclSets_AclSet_AclEntries_AclEntryKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntryKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntryKey)
}
Acl_AclSets_AclSet_AclEntries_AclEntryKey::Acl_AclSets_AclSet_AclEntries_AclEntryKey(const Acl_AclSets_AclSet_AclEntries_AclEntryKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_acl_entry()) {
    acl_entry_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry(*from.acl_entry_);
  } else {
    acl_entry_ = NULL;
  }
  sequence_id_ = from.sequence_id_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntryKey)
}

void Acl_AclSets_AclSet_AclEntries_AclEntryKey::SharedCtor() {
  ::memset(&acl_entry_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sequence_id_) -
      reinterpret_cast<char*>(&acl_entry_)) + sizeof(sequence_id_));
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_AclEntries_AclEntryKey::~Acl_AclSets_AclSet_AclEntries_AclEntryKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntryKey)
  SharedDtor();
}

void Acl_AclSets_AclSet_AclEntries_AclEntryKey::SharedDtor() {
  if (this != internal_default_instance()) delete acl_entry_;
}

void Acl_AclSets_AclSet_AclEntries_AclEntryKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_AclEntries_AclEntryKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_AclEntries_AclEntryKey& Acl_AclSets_AclSet_AclEntries_AclEntryKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries_AclEntryKey();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_AclEntries_AclEntryKey* Acl_AclSets_AclSet_AclEntries_AclEntryKey::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_AclEntries_AclEntryKey* n = new Acl_AclSets_AclSet_AclEntries_AclEntryKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_AclEntries_AclEntryKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntryKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && acl_entry_ != NULL) {
    delete acl_entry_;
  }
  acl_entry_ = NULL;
  sequence_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_AclEntries_AclEntryKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntryKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 sequence_id = 1 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/sequence-id"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sequence_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry acl_entry = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_acl_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntryKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntryKey)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_AclEntries_AclEntryKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntryKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sequence_id = 1 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/sequence-id"];
  if (this->sequence_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->sequence_id(), output);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry acl_entry = 2;
  if (this->has_acl_entry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->acl_entry_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntryKey)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_AclEntries_AclEntryKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntryKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sequence_id = 1 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/sequence-id"];
  if (this->sequence_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->sequence_id(), target);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry acl_entry = 2;
  if (this->has_acl_entry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->acl_entry_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntryKey)
  return target;
}

size_t Acl_AclSets_AclSet_AclEntries_AclEntryKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntryKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntry acl_entry = 2;
  if (this->has_acl_entry()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->acl_entry_);
  }

  // uint64 sequence_id = 1 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry/sequence-id"];
  if (this->sequence_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sequence_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_AclEntries_AclEntryKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntryKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_AclEntries_AclEntryKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_AclEntries_AclEntryKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntryKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntryKey)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntryKey::MergeFrom(const Acl_AclSets_AclSet_AclEntries_AclEntryKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntryKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_acl_entry()) {
    mutable_acl_entry()->::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries_AclEntry::MergeFrom(from.acl_entry());
  }
  if (from.sequence_id() != 0) {
    set_sequence_id(from.sequence_id());
  }
}

void Acl_AclSets_AclSet_AclEntries_AclEntryKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntryKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_AclEntries_AclEntryKey::CopyFrom(const Acl_AclSets_AclSet_AclEntries_AclEntryKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntryKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_AclEntries_AclEntryKey::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_AclEntries_AclEntryKey::Swap(Acl_AclSets_AclSet_AclEntries_AclEntryKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_AclEntries_AclEntryKey::InternalSwap(Acl_AclSets_AclSet_AclEntries_AclEntryKey* other) {
  using std::swap;
  swap(acl_entry_, other->acl_entry_);
  swap(sequence_id_, other->sequence_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_AclEntries_AclEntryKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet_AclEntries::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSet_AclEntries::kAclEntryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_AclEntries::Acl_AclSets_AclSet_AclEntries()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries)
}
Acl_AclSets_AclSet_AclEntries::Acl_AclSets_AclSet_AclEntries(const Acl_AclSets_AclSet_AclEntries& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      acl_entry_(from.acl_entry_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries)
}

void Acl_AclSets_AclSet_AclEntries::SharedCtor() {
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_AclEntries::~Acl_AclSets_AclSet_AclEntries() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries)
  SharedDtor();
}

void Acl_AclSets_AclSet_AclEntries::SharedDtor() {
}

void Acl_AclSets_AclSet_AclEntries::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_AclEntries::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_AclEntries& Acl_AclSets_AclSet_AclEntries::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_AclEntries();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_AclEntries* Acl_AclSets_AclSet_AclEntries::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_AclEntries* n = new Acl_AclSets_AclSet_AclEntries;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_AclEntries::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  acl_entry_.Clear();
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_AclEntries::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4258733882u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntryKey acl_entry = 532341735 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry"];
      case 532341735: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 4258733882 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_acl_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_AclEntries::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntryKey acl_entry = 532341735 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->acl_entry_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      532341735, this->acl_entry(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_AclEntries::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntryKey acl_entry = 532341735 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->acl_entry_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        532341735, this->acl_entry(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries)
  return target;
}

size_t Acl_AclSets_AclSet_AclEntries::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries.AclEntryKey acl_entry = 532341735 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries/acl-entry"];
  {
    unsigned int count = static_cast<unsigned int>(this->acl_entry_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->acl_entry(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_AclEntries::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_AclEntries* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_AclEntries>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_AclEntries::MergeFrom(const Acl_AclSets_AclSet_AclEntries& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  acl_entry_.MergeFrom(from.acl_entry_);
}

void Acl_AclSets_AclSet_AclEntries::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_AclEntries::CopyFrom(const Acl_AclSets_AclSet_AclEntries& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_AclEntries::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_AclEntries::Swap(Acl_AclSets_AclSet_AclEntries* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_AclEntries::InternalSwap(Acl_AclSets_AclSet_AclEntries* other) {
  using std::swap;
  acl_entry_.InternalSwap(&other->acl_entry_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_AclEntries::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_Config_default_instance_._instance.get_mutable()->description_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_Config_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void Acl_AclSets_AclSet_Config::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
void Acl_AclSets_AclSet_Config::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSet_Config::kDescriptionFieldNumber;
const int Acl_AclSets_AclSet_Config::kNameFieldNumber;
const int Acl_AclSets_AclSet_Config::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_Config::Acl_AclSets_AclSet_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.Config)
}
Acl_AclSets_AclSet_Config::Acl_AclSets_AclSet_Config(const Acl_AclSets_AclSet_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  if (from.has_description()) {
    description_ = new ::ywrapper::StringValue(*from.description_);
  } else {
    description_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.Config)
}

void Acl_AclSets_AclSet_Config::SharedCtor() {
  ::memset(&name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&name_)) + sizeof(type_));
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_Config::~Acl_AclSets_AclSet_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.Config)
  SharedDtor();
}

void Acl_AclSets_AclSet_Config::SharedDtor() {
  if (this != internal_default_instance()) delete name_;
  if (this != internal_default_instance()) delete description_;
}

void Acl_AclSets_AclSet_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_Config& Acl_AclSets_AclSet_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_Config();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_Config* Acl_AclSets_AclSet_Config::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_Config* n = new Acl_AclSets_AclSet_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3761953048u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue name = 78719918 [(.yext.schemapath) = "/acl/acl-sets/acl-set/config/name"];
      case 78719918: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 629759346 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue description = 417646551 [(.yext.schemapath) = "/acl/acl-sets/acl-set/config/description"];
      case 417646551: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 3341172410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigAclACLTYPE type = 470244131 [(.yext.schemapath) = "/acl/acl-sets/acl-set/config/type"];
      case 470244131: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 3761953048 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::openconfig::enums::OpenconfigAclACLTYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.Config)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue name = 78719918 [(.yext.schemapath) = "/acl/acl-sets/acl-set/config/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      78719918, *this->name_, output);
  }

  // .ywrapper.StringValue description = 417646551 [(.yext.schemapath) = "/acl/acl-sets/acl-set/config/description"];
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      417646551, *this->description_, output);
  }

  // .openconfig.enums.OpenconfigAclACLTYPE type = 470244131 [(.yext.schemapath) = "/acl/acl-sets/acl-set/config/type"];
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      470244131, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.Config)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue name = 78719918 [(.yext.schemapath) = "/acl/acl-sets/acl-set/config/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        78719918, *this->name_, deterministic, target);
  }

  // .ywrapper.StringValue description = 417646551 [(.yext.schemapath) = "/acl/acl-sets/acl-set/config/description"];
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        417646551, *this->description_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigAclACLTYPE type = 470244131 [(.yext.schemapath) = "/acl/acl-sets/acl-set/config/type"];
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      470244131, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.Config)
  return target;
}

size_t Acl_AclSets_AclSet_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue name = 78719918 [(.yext.schemapath) = "/acl/acl-sets/acl-set/config/name"];
  if (this->has_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  // .ywrapper.StringValue description = 417646551 [(.yext.schemapath) = "/acl/acl-sets/acl-set/config/description"];
  if (this->has_description()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->description_);
  }

  // .openconfig.enums.OpenconfigAclACLTYPE type = 470244131 [(.yext.schemapath) = "/acl/acl-sets/acl-set/config/type"];
  if (this->type() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.Config)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_Config::MergeFrom(const Acl_AclSets_AclSet_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
  if (from.has_description()) {
    mutable_description()->::ywrapper::StringValue::MergeFrom(from.description());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Acl_AclSets_AclSet_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_Config::CopyFrom(const Acl_AclSets_AclSet_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_Config::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_Config::Swap(Acl_AclSets_AclSet_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_Config::InternalSwap(Acl_AclSets_AclSet_Config* other) {
  using std::swap;
  swap(name_, other->name_);
  swap(description_, other->description_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_State_default_instance_._instance.get_mutable()->description_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_State_default_instance_._instance.get_mutable()->name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void Acl_AclSets_AclSet_State::clear_description() {
  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
}
void Acl_AclSets_AclSet_State::clear_name() {
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSet_State::kDescriptionFieldNumber;
const int Acl_AclSets_AclSet_State::kNameFieldNumber;
const int Acl_AclSets_AclSet_State::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet_State::Acl_AclSets_AclSet_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.State)
}
Acl_AclSets_AclSet_State::Acl_AclSets_AclSet_State(const Acl_AclSets_AclSet_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_description()) {
    description_ = new ::ywrapper::StringValue(*from.description_);
  } else {
    description_ = NULL;
  }
  if (from.has_name()) {
    name_ = new ::ywrapper::StringValue(*from.name_);
  } else {
    name_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.State)
}

void Acl_AclSets_AclSet_State::SharedCtor() {
  ::memset(&description_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&description_)) + sizeof(type_));
  _cached_size_ = 0;
}

Acl_AclSets_AclSet_State::~Acl_AclSets_AclSet_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet.State)
  SharedDtor();
}

void Acl_AclSets_AclSet_State::SharedDtor() {
  if (this != internal_default_instance()) delete description_;
  if (this != internal_default_instance()) delete name_;
}

void Acl_AclSets_AclSet_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet_State& Acl_AclSets_AclSet_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet_State();
  return *internal_default_instance();
}

Acl_AclSets_AclSet_State* Acl_AclSets_AclSet_State::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet_State* n = new Acl_AclSets_AclSet_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && description_ != NULL) {
    delete description_;
  }
  description_ = NULL;
  if (GetArenaNoVirtual() == NULL && name_ != NULL) {
    delete name_;
  }
  name_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4098061578u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue description = 35889822 [(.yext.schemapath) = "/acl/acl-sets/acl-set/state/description"];
      case 35889822: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 287118578 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_description()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigAclACLTYPE type = 261035304 [(.yext.schemapath) = "/acl/acl-sets/acl-set/state/type"];
      case 261035304: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 2088282432 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::openconfig::enums::OpenconfigAclACLTYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue name = 512257697 [(.yext.schemapath) = "/acl/acl-sets/acl-set/state/name"];
      case 512257697: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 4098061578 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet.State)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue description = 35889822 [(.yext.schemapath) = "/acl/acl-sets/acl-set/state/description"];
  if (this->has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      35889822, *this->description_, output);
  }

  // .openconfig.enums.OpenconfigAclACLTYPE type = 261035304 [(.yext.schemapath) = "/acl/acl-sets/acl-set/state/type"];
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      261035304, this->type(), output);
  }

  // .ywrapper.StringValue name = 512257697 [(.yext.schemapath) = "/acl/acl-sets/acl-set/state/name"];
  if (this->has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      512257697, *this->name_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.State)
}

::google::protobuf::uint8* Acl_AclSets_AclSet_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue description = 35889822 [(.yext.schemapath) = "/acl/acl-sets/acl-set/state/description"];
  if (this->has_description()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        35889822, *this->description_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigAclACLTYPE type = 261035304 [(.yext.schemapath) = "/acl/acl-sets/acl-set/state/type"];
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      261035304, this->type(), target);
  }

  // .ywrapper.StringValue name = 512257697 [(.yext.schemapath) = "/acl/acl-sets/acl-set/state/name"];
  if (this->has_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        512257697, *this->name_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet.State)
  return target;
}

size_t Acl_AclSets_AclSet_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue description = 35889822 [(.yext.schemapath) = "/acl/acl-sets/acl-set/state/description"];
  if (this->has_description()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->description_);
  }

  // .ywrapper.StringValue name = 512257697 [(.yext.schemapath) = "/acl/acl-sets/acl-set/state/name"];
  if (this->has_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->name_);
  }

  // .openconfig.enums.OpenconfigAclACLTYPE type = 261035304 [(.yext.schemapath) = "/acl/acl-sets/acl-set/state/type"];
  if (this->type() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet.State)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet_State::MergeFrom(const Acl_AclSets_AclSet_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_description()) {
    mutable_description()->::ywrapper::StringValue::MergeFrom(from.description());
  }
  if (from.has_name()) {
    mutable_name()->::ywrapper::StringValue::MergeFrom(from.name());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Acl_AclSets_AclSet_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet_State::CopyFrom(const Acl_AclSets_AclSet_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet_State::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet_State::Swap(Acl_AclSets_AclSet_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet_State::InternalSwap(Acl_AclSets_AclSet_State* other) {
  using std::swap;
  swap(description_, other->description_);
  swap(name_, other->name_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSet::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_default_instance_._instance.get_mutable()->acl_entries_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_Config*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet_Config::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSet_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet_State*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSet::kAclEntriesFieldNumber;
const int Acl_AclSets_AclSet::kConfigFieldNumber;
const int Acl_AclSets_AclSet::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSet::Acl_AclSets_AclSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet)
}
Acl_AclSets_AclSet::Acl_AclSets_AclSet(const Acl_AclSets_AclSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_acl_entries()) {
    acl_entries_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries(*from.acl_entries_);
  } else {
    acl_entries_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSet)
}

void Acl_AclSets_AclSet::SharedCtor() {
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&state_) -
      reinterpret_cast<char*>(&config_)) + sizeof(state_));
  _cached_size_ = 0;
}

Acl_AclSets_AclSet::~Acl_AclSets_AclSet() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSet)
  SharedDtor();
}

void Acl_AclSets_AclSet::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete acl_entries_;
  if (this != internal_default_instance()) delete state_;
}

void Acl_AclSets_AclSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSet::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSet& Acl_AclSets_AclSet::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSet();
  return *internal_default_instance();
}

Acl_AclSets_AclSet* Acl_AclSets_AclSet::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSet* n = new Acl_AclSets_AclSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSet::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && acl_entries_ != NULL) {
    delete acl_entries_;
  }
  acl_entries_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3550715690u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.Config config = 90241004 [(.yext.schemapath) = "/acl/acl-sets/acl-set/config"];
      case 90241004: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 721928034 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries acl_entries = 111776053 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries"];
      case 111776053: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 894208426 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_acl_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.AclSets.AclSet.State state = 443839461 [(.yext.schemapath) = "/acl/acl-sets/acl-set/state"];
      case 443839461: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 3550715690 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSet)
  return false;
#undef DO_
}

void Acl_AclSets_AclSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.Config config = 90241004 [(.yext.schemapath) = "/acl/acl-sets/acl-set/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      90241004, *this->config_, output);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries acl_entries = 111776053 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries"];
  if (this->has_acl_entries()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      111776053, *this->acl_entries_, output);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.State state = 443839461 [(.yext.schemapath) = "/acl/acl-sets/acl-set/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      443839461, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSet)
}

::google::protobuf::uint8* Acl_AclSets_AclSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.Config config = 90241004 [(.yext.schemapath) = "/acl/acl-sets/acl-set/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        90241004, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries acl_entries = 111776053 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries"];
  if (this->has_acl_entries()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        111776053, *this->acl_entries_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.State state = 443839461 [(.yext.schemapath) = "/acl/acl-sets/acl-set/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        443839461, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSet)
  return target;
}

size_t Acl_AclSets_AclSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.Config config = 90241004 [(.yext.schemapath) = "/acl/acl-sets/acl-set/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.AclEntries acl_entries = 111776053 [(.yext.schemapath) = "/acl/acl-sets/acl-set/acl-entries"];
  if (this->has_acl_entries()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->acl_entries_);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet.State state = 443839461 [(.yext.schemapath) = "/acl/acl-sets/acl-set/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSet)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSet::MergeFrom(const Acl_AclSets_AclSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_acl::Acl_AclSets_AclSet_Config::MergeFrom(from.config());
  }
  if (from.has_acl_entries()) {
    mutable_acl_entries()->::openconfig::openconfig_acl::Acl_AclSets_AclSet_AclEntries::MergeFrom(from.acl_entries());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_acl::Acl_AclSets_AclSet_State::MergeFrom(from.state());
  }
}

void Acl_AclSets_AclSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSet::CopyFrom(const Acl_AclSets_AclSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSet::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSet::Swap(Acl_AclSets_AclSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSet::InternalSwap(Acl_AclSets_AclSet* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(acl_entries_, other->acl_entries_);
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSet::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets_AclSetKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_AclSets_AclSetKey_default_instance_._instance.get_mutable()->acl_set_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets_AclSet*>(
      ::openconfig::openconfig_acl::Acl_AclSets_AclSet::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets_AclSetKey::kNameFieldNumber;
const int Acl_AclSets_AclSetKey::kTypeFieldNumber;
const int Acl_AclSets_AclSetKey::kAclSetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets_AclSetKey::Acl_AclSets_AclSetKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSetKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets.AclSetKey)
}
Acl_AclSets_AclSetKey::Acl_AclSets_AclSetKey(const Acl_AclSets_AclSetKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_acl_set()) {
    acl_set_ = new ::openconfig::openconfig_acl::Acl_AclSets_AclSet(*from.acl_set_);
  } else {
    acl_set_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets.AclSetKey)
}

void Acl_AclSets_AclSetKey::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&acl_set_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&acl_set_)) + sizeof(type_));
  _cached_size_ = 0;
}

Acl_AclSets_AclSetKey::~Acl_AclSets_AclSetKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets.AclSetKey)
  SharedDtor();
}

void Acl_AclSets_AclSetKey::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete acl_set_;
}

void Acl_AclSets_AclSetKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets_AclSetKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets_AclSetKey& Acl_AclSets_AclSetKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets_AclSetKey();
  return *internal_default_instance();
}

Acl_AclSets_AclSetKey* Acl_AclSets_AclSetKey::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets_AclSetKey* n = new Acl_AclSets_AclSetKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets_AclSetKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets.AclSetKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && acl_set_ != NULL) {
    delete acl_set_;
  }
  acl_set_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool Acl_AclSets_AclSetKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets.AclSetKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string name = 1 [(.yext.schemapath) = "/acl/acl-sets/acl-set/name"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "openconfig.openconfig_acl.Acl.AclSets.AclSetKey.name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigAclACLTYPE type = 2 [(.yext.schemapath) = "/acl/acl-sets/acl-set/type"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::openconfig::enums::OpenconfigAclACLTYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.AclSets.AclSet acl_set = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_acl_set()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets.AclSetKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets.AclSetKey)
  return false;
#undef DO_
}

void Acl_AclSets_AclSetKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets.AclSetKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.yext.schemapath) = "/acl/acl-sets/acl-set/name"];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_acl.Acl.AclSets.AclSetKey.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // .openconfig.enums.OpenconfigAclACLTYPE type = 2 [(.yext.schemapath) = "/acl/acl-sets/acl-set/type"];
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet acl_set = 3;
  if (this->has_acl_set()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->acl_set_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets.AclSetKey)
}

::google::protobuf::uint8* Acl_AclSets_AclSetKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets.AclSetKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1 [(.yext.schemapath) = "/acl/acl-sets/acl-set/name"];
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_acl.Acl.AclSets.AclSetKey.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // .openconfig.enums.OpenconfigAclACLTYPE type = 2 [(.yext.schemapath) = "/acl/acl-sets/acl-set/type"];
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet acl_set = 3;
  if (this->has_acl_set()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->acl_set_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets.AclSetKey)
  return target;
}

size_t Acl_AclSets_AclSetKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets.AclSetKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string name = 1 [(.yext.schemapath) = "/acl/acl-sets/acl-set/name"];
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // .openconfig.openconfig_acl.Acl.AclSets.AclSet acl_set = 3;
  if (this->has_acl_set()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->acl_set_);
  }

  // .openconfig.enums.OpenconfigAclACLTYPE type = 2 [(.yext.schemapath) = "/acl/acl-sets/acl-set/type"];
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets_AclSetKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSetKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets_AclSetKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets_AclSetKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets.AclSetKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets.AclSetKey)
    MergeFrom(*source);
  }
}

void Acl_AclSets_AclSetKey::MergeFrom(const Acl_AclSets_AclSetKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSetKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_acl_set()) {
    mutable_acl_set()->::openconfig::openconfig_acl::Acl_AclSets_AclSet::MergeFrom(from.acl_set());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Acl_AclSets_AclSetKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSetKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets_AclSetKey::CopyFrom(const Acl_AclSets_AclSetKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets.AclSetKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets_AclSetKey::IsInitialized() const {
  return true;
}

void Acl_AclSets_AclSetKey::Swap(Acl_AclSets_AclSetKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets_AclSetKey::InternalSwap(Acl_AclSets_AclSetKey* other) {
  using std::swap;
  name_.Swap(&other->name_);
  swap(acl_set_, other->acl_set_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets_AclSetKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_AclSets::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_AclSets::kAclSetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_AclSets::Acl_AclSets()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.AclSets)
}
Acl_AclSets::Acl_AclSets(const Acl_AclSets& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      acl_set_(from.acl_set_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.AclSets)
}

void Acl_AclSets::SharedCtor() {
  _cached_size_ = 0;
}

Acl_AclSets::~Acl_AclSets() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.AclSets)
  SharedDtor();
}

void Acl_AclSets::SharedDtor() {
}

void Acl_AclSets::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_AclSets::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_AclSets& Acl_AclSets::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_AclSets();
  return *internal_default_instance();
}

Acl_AclSets* Acl_AclSets::New(::google::protobuf::Arena* arena) const {
  Acl_AclSets* n = new Acl_AclSets;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_AclSets::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.AclSets)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  acl_set_.Clear();
  _internal_metadata_.Clear();
}

bool Acl_AclSets::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.AclSets)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(39299546u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_acl.Acl.AclSets.AclSetKey acl_set = 4912443 [(.yext.schemapath) = "/acl/acl-sets/acl-set"];
      case 4912443: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 39299546 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_acl_set()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.AclSets)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.AclSets)
  return false;
#undef DO_
}

void Acl_AclSets::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.AclSets)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_acl.Acl.AclSets.AclSetKey acl_set = 4912443 [(.yext.schemapath) = "/acl/acl-sets/acl-set"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->acl_set_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4912443, this->acl_set(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.AclSets)
}

::google::protobuf::uint8* Acl_AclSets::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.AclSets)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_acl.Acl.AclSets.AclSetKey acl_set = 4912443 [(.yext.schemapath) = "/acl/acl-sets/acl-set"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->acl_set_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4912443, this->acl_set(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.AclSets)
  return target;
}

size_t Acl_AclSets::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.AclSets)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_acl.Acl.AclSets.AclSetKey acl_set = 4912443 [(.yext.schemapath) = "/acl/acl-sets/acl-set"];
  {
    unsigned int count = static_cast<unsigned int>(this->acl_set_size());
    total_size += 4UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->acl_set(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_AclSets::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.AclSets)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_AclSets* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_AclSets>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.AclSets)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.AclSets)
    MergeFrom(*source);
  }
}

void Acl_AclSets::MergeFrom(const Acl_AclSets& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.AclSets)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  acl_set_.MergeFrom(from.acl_set_);
}

void Acl_AclSets::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.AclSets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_AclSets::CopyFrom(const Acl_AclSets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.AclSets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_AclSets::IsInitialized() const {
  return true;
}

void Acl_AclSets::Swap(Acl_AclSets* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_AclSets::InternalSwap(Acl_AclSets* other) {
  using std::swap;
  acl_set_.InternalSwap(&other->acl_set_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_AclSets::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_Config::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_Config::Acl_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.Config)
}
Acl_Config::Acl_Config(const Acl_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.Config)
}

void Acl_Config::SharedCtor() {
  _cached_size_ = 0;
}

Acl_Config::~Acl_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.Config)
  SharedDtor();
}

void Acl_Config::SharedDtor() {
}

void Acl_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_Config& Acl_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Config();
  return *internal_default_instance();
}

Acl_Config* Acl_Config::New(::google::protobuf::Arena* arena) const {
  Acl_Config* n = new Acl_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Acl_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.Config)
  return false;
#undef DO_
}

void Acl_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.Config)
}

::google::protobuf::uint8* Acl_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.Config)
  return target;
}

size_t Acl_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.Config)
    MergeFrom(*source);
  }
}

void Acl_Config::MergeFrom(const Acl_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Acl_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_Config::CopyFrom(const Acl_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_Config::IsInitialized() const {
  return true;
}

void Acl_Config::Swap(Acl_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_Config::InternalSwap(Acl_Config* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_Interfaces_Interface_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_Config_default_instance_._instance.get_mutable()->id_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void Acl_Interfaces_Interface_Config::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_Interfaces_Interface_Config::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_Interfaces_Interface_Config::Acl_Interfaces_Interface_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.Config)
}
Acl_Interfaces_Interface_Config::Acl_Interfaces_Interface_Config(const Acl_Interfaces_Interface_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::ywrapper::StringValue(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.Config)
}

void Acl_Interfaces_Interface_Config::SharedCtor() {
  id_ = NULL;
  _cached_size_ = 0;
}

Acl_Interfaces_Interface_Config::~Acl_Interfaces_Interface_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.Config)
  SharedDtor();
}

void Acl_Interfaces_Interface_Config::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void Acl_Interfaces_Interface_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_Interfaces_Interface_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_Interfaces_Interface_Config& Acl_Interfaces_Interface_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_Config();
  return *internal_default_instance();
}

Acl_Interfaces_Interface_Config* Acl_Interfaces_Interface_Config::New(::google::protobuf::Arena* arena) const {
  Acl_Interfaces_Interface_Config* n = new Acl_Interfaces_Interface_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_Interfaces_Interface_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  _internal_metadata_.Clear();
}

bool Acl_Interfaces_Interface_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1027077570u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue id = 128384696 [(.yext.schemapath) = "/acl/interfaces/interface/config/id"];
      case 128384696: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 1027077570 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.Interfaces.Interface.Config)
  return false;
#undef DO_
}

void Acl_Interfaces_Interface_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue id = 128384696 [(.yext.schemapath) = "/acl/interfaces/interface/config/id"];
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      128384696, *this->id_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.Config)
}

::google::protobuf::uint8* Acl_Interfaces_Interface_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue id = 128384696 [(.yext.schemapath) = "/acl/interfaces/interface/config/id"];
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        128384696, *this->id_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.Config)
  return target;
}

size_t Acl_Interfaces_Interface_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue id = 128384696 [(.yext.schemapath) = "/acl/interfaces/interface/config/id"];
  if (this->has_id()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_Interfaces_Interface_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_Interfaces_Interface_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_Interfaces_Interface_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.Interfaces.Interface.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.Config)
    MergeFrom(*source);
  }
}

void Acl_Interfaces_Interface_Config::MergeFrom(const Acl_Interfaces_Interface_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    mutable_id()->::ywrapper::StringValue::MergeFrom(from.id());
  }
}

void Acl_Interfaces_Interface_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_Interfaces_Interface_Config::CopyFrom(const Acl_Interfaces_Interface_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_Interfaces_Interface_Config::IsInitialized() const {
  return true;
}

void Acl_Interfaces_Interface_Config::Swap(Acl_Interfaces_Interface_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_Interfaces_Interface_Config::InternalSwap(Acl_Interfaces_Interface_Config* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_Interfaces_Interface_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State_default_instance_._instance.get_mutable()->matched_octets_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State_default_instance_._instance.get_mutable()->matched_packets_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State_default_instance_._instance.get_mutable()->sequence_id_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::clear_matched_octets() {
  if (GetArenaNoVirtual() == NULL && matched_octets_ != NULL) {
    delete matched_octets_;
  }
  matched_octets_ = NULL;
}
void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::clear_matched_packets() {
  if (GetArenaNoVirtual() == NULL && matched_packets_ != NULL) {
    delete matched_packets_;
  }
  matched_packets_ = NULL;
}
void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::clear_sequence_id() {
  if (GetArenaNoVirtual() == NULL && sequence_id_ != NULL) {
    delete sequence_id_;
  }
  sequence_id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::kMatchedOctetsFieldNumber;
const int Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::kMatchedPacketsFieldNumber;
const int Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::kSequenceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry.State)
}
Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State(const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_matched_octets()) {
    matched_octets_ = new ::ywrapper::UintValue(*from.matched_octets_);
  } else {
    matched_octets_ = NULL;
  }
  if (from.has_matched_packets()) {
    matched_packets_ = new ::ywrapper::UintValue(*from.matched_packets_);
  } else {
    matched_packets_ = NULL;
  }
  if (from.has_sequence_id()) {
    sequence_id_ = new ::ywrapper::UintValue(*from.sequence_id_);
  } else {
    sequence_id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry.State)
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::SharedCtor() {
  ::memset(&matched_octets_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sequence_id_) -
      reinterpret_cast<char*>(&matched_octets_)) + sizeof(sequence_id_));
  _cached_size_ = 0;
}

Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::~Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry.State)
  SharedDtor();
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::SharedDtor() {
  if (this != internal_default_instance()) delete matched_octets_;
  if (this != internal_default_instance()) delete matched_packets_;
  if (this != internal_default_instance()) delete sequence_id_;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State& Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State();
  return *internal_default_instance();
}

Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State* Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::New(::google::protobuf::Arena* arena) const {
  Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State* n = new Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && matched_octets_ != NULL) {
    delete matched_octets_;
  }
  matched_octets_ = NULL;
  if (GetArenaNoVirtual() == NULL && matched_packets_ != NULL) {
    delete matched_packets_;
  }
  matched_packets_ = NULL;
  if (GetArenaNoVirtual() == NULL && sequence_id_ != NULL) {
    delete sequence_id_;
  }
  sequence_id_ = NULL;
  _internal_metadata_.Clear();
}

bool Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3803727810u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue matched_octets = 270373376 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries/acl-entry/state/matched-octets"];
      case 270373376: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 2162987010 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_matched_octets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue matched_packets = 425026435 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries/acl-entry/state/matched-packets"];
      case 425026435: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 3400211482 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_matched_packets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue sequence_id = 475465976 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries/acl-entry/state/sequence-id"];
      case 475465976: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 3803727810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sequence_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry.State)
  return false;
#undef DO_
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue matched_octets = 270373376 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries/acl-entry/state/matched-octets"];
  if (this->has_matched_octets()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      270373376, *this->matched_octets_, output);
  }

  // .ywrapper.UintValue matched_packets = 425026435 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries/acl-entry/state/matched-packets"];
  if (this->has_matched_packets()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      425026435, *this->matched_packets_, output);
  }

  // .ywrapper.UintValue sequence_id = 475465976 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries/acl-entry/state/sequence-id"];
  if (this->has_sequence_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      475465976, *this->sequence_id_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry.State)
}

::google::protobuf::uint8* Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue matched_octets = 270373376 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries/acl-entry/state/matched-octets"];
  if (this->has_matched_octets()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        270373376, *this->matched_octets_, deterministic, target);
  }

  // .ywrapper.UintValue matched_packets = 425026435 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries/acl-entry/state/matched-packets"];
  if (this->has_matched_packets()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        425026435, *this->matched_packets_, deterministic, target);
  }

  // .ywrapper.UintValue sequence_id = 475465976 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries/acl-entry/state/sequence-id"];
  if (this->has_sequence_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        475465976, *this->sequence_id_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry.State)
  return target;
}

size_t Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue matched_octets = 270373376 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries/acl-entry/state/matched-octets"];
  if (this->has_matched_octets()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->matched_octets_);
  }

  // .ywrapper.UintValue matched_packets = 425026435 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries/acl-entry/state/matched-packets"];
  if (this->has_matched_packets()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->matched_packets_);
  }

  // .ywrapper.UintValue sequence_id = 475465976 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries/acl-entry/state/sequence-id"];
  if (this->has_sequence_id()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->sequence_id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry.State)
    MergeFrom(*source);
  }
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::MergeFrom(const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_matched_octets()) {
    mutable_matched_octets()->::ywrapper::UintValue::MergeFrom(from.matched_octets());
  }
  if (from.has_matched_packets()) {
    mutable_matched_packets()->::ywrapper::UintValue::MergeFrom(from.matched_packets());
  }
  if (from.has_sequence_id()) {
    mutable_sequence_id()->::ywrapper::UintValue::MergeFrom(from.sequence_id());
  }
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::CopyFrom(const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::IsInitialized() const {
  return true;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::Swap(Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::InternalSwap(Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State* other) {
  using std::swap;
  swap(matched_octets_, other->matched_octets_);
  swap(matched_packets_, other->matched_packets_);
  swap(sequence_id_, other->sequence_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State*>(
      ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry)
}
Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry(const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry)
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry::SharedCtor() {
  state_ = NULL;
  _cached_size_ = 0;
}

Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry::~Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry)
  SharedDtor();
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry& Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry();
  return *internal_default_instance();
}

Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry* Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry::New(::google::protobuf::Arena* arena) const {
  Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry* n = new Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1895375826u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry.State state = 236921978 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries/acl-entry/state"];
      case 236921978: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 1895375826 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry)
  return false;
#undef DO_
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry.State state = 236921978 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries/acl-entry/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      236921978, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry)
}

::google::protobuf::uint8* Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry.State state = 236921978 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries/acl-entry/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        236921978, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry)
  return target;
}

size_t Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry.State state = 236921978 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries/acl-entry/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry)
    MergeFrom(*source);
  }
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry::MergeFrom(const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry_State::MergeFrom(from.state());
  }
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry::CopyFrom(const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry::IsInitialized() const {
  return true;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry::Swap(Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry::InternalSwap(Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry* other) {
  using std::swap;
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey_default_instance_._instance.get_mutable()->acl_entry_ = const_cast< ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry*>(
      ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey::kSequenceIdFieldNumber;
const int Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey::kAclEntryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntryKey)
}
Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey(const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_acl_entry()) {
    acl_entry_ = new ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry(*from.acl_entry_);
  } else {
    acl_entry_ = NULL;
  }
  sequence_id_ = from.sequence_id_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntryKey)
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey::SharedCtor() {
  ::memset(&acl_entry_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sequence_id_) -
      reinterpret_cast<char*>(&acl_entry_)) + sizeof(sequence_id_));
  _cached_size_ = 0;
}

Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey::~Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntryKey)
  SharedDtor();
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey::SharedDtor() {
  if (this != internal_default_instance()) delete acl_entry_;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey& Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey();
  return *internal_default_instance();
}

Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey* Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey::New(::google::protobuf::Arena* arena) const {
  Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey* n = new Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntryKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && acl_entry_ != NULL) {
    delete acl_entry_;
  }
  acl_entry_ = NULL;
  sequence_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntryKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 sequence_id = 1 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries/acl-entry/sequence-id"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sequence_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry acl_entry = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_acl_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntryKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntryKey)
  return false;
#undef DO_
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntryKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sequence_id = 1 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries/acl-entry/sequence-id"];
  if (this->sequence_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->sequence_id(), output);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry acl_entry = 2;
  if (this->has_acl_entry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->acl_entry_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntryKey)
}

::google::protobuf::uint8* Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntryKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sequence_id = 1 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries/acl-entry/sequence-id"];
  if (this->sequence_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->sequence_id(), target);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry acl_entry = 2;
  if (this->has_acl_entry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->acl_entry_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntryKey)
  return target;
}

size_t Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntryKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntry acl_entry = 2;
  if (this->has_acl_entry()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->acl_entry_);
  }

  // uint64 sequence_id = 1 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries/acl-entry/sequence-id"];
  if (this->sequence_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sequence_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntryKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntryKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntryKey)
    MergeFrom(*source);
  }
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey::MergeFrom(const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntryKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_acl_entry()) {
    mutable_acl_entry()->::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntry::MergeFrom(from.acl_entry());
  }
  if (from.sequence_id() != 0) {
    set_sequence_id(from.sequence_id());
  }
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntryKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey::CopyFrom(const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntryKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey::IsInitialized() const {
  return true;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey::Swap(Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey::InternalSwap(Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey* other) {
  using std::swap;
  swap(acl_entry_, other->acl_entry_);
  swap(sequence_id_, other->sequence_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries_AclEntryKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries::kAclEntryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries)
}
Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries(const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      acl_entry_(from.acl_entry_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries)
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries::SharedCtor() {
  _cached_size_ = 0;
}

Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries::~Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries)
  SharedDtor();
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries::SharedDtor() {
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries& Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries();
  return *internal_default_instance();
}

Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries* Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries::New(::google::protobuf::Arena* arena) const {
  Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries* n = new Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  acl_entry_.Clear();
  _internal_metadata_.Clear();
}

bool Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(627151746u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntryKey acl_entry = 78393968 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries/acl-entry"];
      case 78393968: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 627151746 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_acl_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries)
  return false;
#undef DO_
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntryKey acl_entry = 78393968 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries/acl-entry"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->acl_entry_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      78393968, this->acl_entry(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries)
}

::google::protobuf::uint8* Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntryKey acl_entry = 78393968 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries/acl-entry"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->acl_entry_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        78393968, this->acl_entry(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries)
  return target;
}

size_t Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries.AclEntryKey acl_entry = 78393968 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries/acl-entry"];
  {
    unsigned int count = static_cast<unsigned int>(this->acl_entry_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->acl_entry(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries)
    MergeFrom(*source);
  }
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries::MergeFrom(const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  acl_entry_.MergeFrom(from.acl_entry_);
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries::CopyFrom(const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries::IsInitialized() const {
  return true;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries::Swap(Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries::InternalSwap(Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries* other) {
  using std::swap;
  acl_entry_.InternalSwap(&other->acl_entry_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config_default_instance_._instance.get_mutable()->set_name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::clear_set_name() {
  if (GetArenaNoVirtual() == NULL && set_name_ != NULL) {
    delete set_name_;
  }
  set_name_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::kSetNameFieldNumber;
const int Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.Config)
}
Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config(const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_set_name()) {
    set_name_ = new ::ywrapper::StringValue(*from.set_name_);
  } else {
    set_name_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.Config)
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::SharedCtor() {
  ::memset(&set_name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&set_name_)) + sizeof(type_));
  _cached_size_ = 0;
}

Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::~Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.Config)
  SharedDtor();
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::SharedDtor() {
  if (this != internal_default_instance()) delete set_name_;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config& Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config();
  return *internal_default_instance();
}

Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config* Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::New(::google::protobuf::Arena* arena) const {
  Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config* n = new Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && set_name_ != NULL) {
    delete set_name_;
  }
  set_name_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2613374048u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue set_name = 261331952 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/config/set-name"];
      case 261331952: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 2090655618 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_set_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigAclACLTYPE type = 326671756 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/config/type"];
      case 326671756: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 2613374048 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::openconfig::enums::OpenconfigAclACLTYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.Config)
  return false;
#undef DO_
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue set_name = 261331952 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/config/set-name"];
  if (this->has_set_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      261331952, *this->set_name_, output);
  }

  // .openconfig.enums.OpenconfigAclACLTYPE type = 326671756 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/config/type"];
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      326671756, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.Config)
}

::google::protobuf::uint8* Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue set_name = 261331952 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/config/set-name"];
  if (this->has_set_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        261331952, *this->set_name_, deterministic, target);
  }

  // .openconfig.enums.OpenconfigAclACLTYPE type = 326671756 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/config/type"];
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      326671756, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.Config)
  return target;
}

size_t Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue set_name = 261331952 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/config/set-name"];
  if (this->has_set_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->set_name_);
  }

  // .openconfig.enums.OpenconfigAclACLTYPE type = 326671756 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/config/type"];
  if (this->type() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.Config)
    MergeFrom(*source);
  }
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::MergeFrom(const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_set_name()) {
    mutable_set_name()->::ywrapper::StringValue::MergeFrom(from.set_name());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::CopyFrom(const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::IsInitialized() const {
  return true;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::Swap(Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::InternalSwap(Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config* other) {
  using std::swap;
  swap(set_name_, other->set_name_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State_default_instance_._instance.get_mutable()->set_name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::clear_set_name() {
  if (GetArenaNoVirtual() == NULL && set_name_ != NULL) {
    delete set_name_;
  }
  set_name_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::kSetNameFieldNumber;
const int Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.State)
}
Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State(const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_set_name()) {
    set_name_ = new ::ywrapper::StringValue(*from.set_name_);
  } else {
    set_name_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.State)
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::SharedCtor() {
  ::memset(&set_name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&set_name_)) + sizeof(type_));
  _cached_size_ = 0;
}

Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::~Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.State)
  SharedDtor();
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::SharedDtor() {
  if (this != internal_default_instance()) delete set_name_;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State& Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet_State();
  return *internal_default_instance();
}

Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State* Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::New(::google::protobuf::Arena* arena) const {
  Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State* n = new Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && set_name_ != NULL) {
    delete set_name_;
  }
  set_name_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2186894410u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.enums.OpenconfigAclACLTYPE type = 226751853 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/state/type"];
      case 226751853: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 1814014824 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::openconfig::enums::OpenconfigAclACLTYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue set_name = 273361801 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/state/set-name"];
      case 273361801: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 2186894410 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_set_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.State)
  return false;
#undef DO_
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigAclACLTYPE type = 226751853 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/state/type"];
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      226751853, this->type(), output);
  }

  // .ywrapper.StringValue set_name = 273361801 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/state/set-name"];
  if (this->has_set_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      273361801, *this->set_name_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.State)
}

::google::protobuf::uint8* Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigAclACLTYPE type = 226751853 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/state/type"];
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      226751853, this->type(), target);
  }

  // .ywrapper.StringValue set_name = 273361801 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/state/set-name"];
  if (this->has_set_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        273361801, *this->set_name_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.State)
  return target;
}

size_t Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue set_name = 273361801 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/state/set-name"];
  if (this->has_set_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->set_name_);
  }

  // .openconfig.enums.OpenconfigAclACLTYPE type = 226751853 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/state/type"];
  if (this->type() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.State)
    MergeFrom(*source);
  }
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::MergeFrom(const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_set_name()) {
    mutable_set_name()->::ywrapper::StringValue::MergeFrom(from.set_name());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::CopyFrom(const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::IsInitialized() const {
  return true;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::Swap(Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::InternalSwap(Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State* other) {
  using std::swap;
  swap(set_name_, other->set_name_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_default_instance_._instance.get_mutable()->acl_entries_ = const_cast< ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries*>(
      ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config*>(
      ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State*>(
      ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::kAclEntriesFieldNumber;
const int Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::kConfigFieldNumber;
const int Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet)
}
Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet(const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_acl_entries()) {
    acl_entries_ = new ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries(*from.acl_entries_);
  } else {
    acl_entries_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet)
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&acl_entries_) -
      reinterpret_cast<char*>(&state_)) + sizeof(acl_entries_));
  _cached_size_ = 0;
}

Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::~Acl_Interfaces_Interface_EgressAclSets_EgressAclSet() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet)
  SharedDtor();
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete acl_entries_;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet& Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSet();
  return *internal_default_instance();
}

Acl_Interfaces_Interface_EgressAclSets_EgressAclSet* Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::New(::google::protobuf::Arena* arena) const {
  Acl_Interfaces_Interface_EgressAclSets_EgressAclSet* n = new Acl_Interfaces_Interface_EgressAclSets_EgressAclSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && acl_entries_ != NULL) {
    delete acl_entries_;
  }
  acl_entries_ = NULL;
  _internal_metadata_.Clear();
}

bool Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3533428690u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.State state = 206226686 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/state"];
      case 206226686: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 1649813490 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.Config config = 293659945 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/config"];
      case 293659945: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 2349279562 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries acl_entries = 441678586 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries"];
      case 441678586: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 3533428690 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_acl_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet)
  return false;
#undef DO_
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.State state = 206226686 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      206226686, *this->state_, output);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.Config config = 293659945 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      293659945, *this->config_, output);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries acl_entries = 441678586 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries"];
  if (this->has_acl_entries()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      441678586, *this->acl_entries_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet)
}

::google::protobuf::uint8* Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.State state = 206226686 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        206226686, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.Config config = 293659945 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        293659945, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries acl_entries = 441678586 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries"];
  if (this->has_acl_entries()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        441678586, *this->acl_entries_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet)
  return target;
}

size_t Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.State state = 206226686 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.Config config = 293659945 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet.AclEntries acl_entries = 441678586 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/acl-entries"];
  if (this->has_acl_entries()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->acl_entries_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet)
    MergeFrom(*source);
  }
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::MergeFrom(const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_Config::MergeFrom(from.config());
  }
  if (from.has_acl_entries()) {
    mutable_acl_entries()->::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet_AclEntries::MergeFrom(from.acl_entries());
  }
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::CopyFrom(const Acl_Interfaces_Interface_EgressAclSets_EgressAclSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::IsInitialized() const {
  return true;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::Swap(Acl_Interfaces_Interface_EgressAclSets_EgressAclSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::InternalSwap(Acl_Interfaces_Interface_EgressAclSets_EgressAclSet* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(config_, other->config_);
  swap(acl_entries_, other->acl_entries_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey_default_instance_._instance.get_mutable()->egress_acl_set_ = const_cast< ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet*>(
      ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey::kSetNameFieldNumber;
const int Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey::kTypeFieldNumber;
const int Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey::kEgressAclSetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey::Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSetKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSetKey)
}
Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey::Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey(const Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  set_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.set_name().size() > 0) {
    set_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.set_name_);
  }
  if (from.has_egress_acl_set()) {
    egress_acl_set_ = new ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet(*from.egress_acl_set_);
  } else {
    egress_acl_set_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSetKey)
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey::SharedCtor() {
  set_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&egress_acl_set_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&egress_acl_set_)) + sizeof(type_));
  _cached_size_ = 0;
}

Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey::~Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSetKey)
  SharedDtor();
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey::SharedDtor() {
  set_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete egress_acl_set_;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey& Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_EgressAclSets_EgressAclSetKey();
  return *internal_default_instance();
}

Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey* Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey::New(::google::protobuf::Arena* arena) const {
  Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey* n = new Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSetKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && egress_acl_set_ != NULL) {
    delete egress_acl_set_;
  }
  egress_acl_set_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSetKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string set_name = 1 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/set-name"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_set_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->set_name().data(), static_cast<int>(this->set_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSetKey.set_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigAclACLTYPE type = 2 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/type"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::openconfig::enums::OpenconfigAclACLTYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet egress_acl_set = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_egress_acl_set()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSetKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSetKey)
  return false;
#undef DO_
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSetKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string set_name = 1 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/set-name"];
  if (this->set_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->set_name().data(), static_cast<int>(this->set_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSetKey.set_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->set_name(), output);
  }

  // .openconfig.enums.OpenconfigAclACLTYPE type = 2 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/type"];
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet egress_acl_set = 3;
  if (this->has_egress_acl_set()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->egress_acl_set_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSetKey)
}

::google::protobuf::uint8* Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSetKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string set_name = 1 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/set-name"];
  if (this->set_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->set_name().data(), static_cast<int>(this->set_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSetKey.set_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->set_name(), target);
  }

  // .openconfig.enums.OpenconfigAclACLTYPE type = 2 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/type"];
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet egress_acl_set = 3;
  if (this->has_egress_acl_set()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->egress_acl_set_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSetKey)
  return target;
}

size_t Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSetKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string set_name = 1 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/set-name"];
  if (this->set_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->set_name());
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSet egress_acl_set = 3;
  if (this->has_egress_acl_set()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->egress_acl_set_);
  }

  // .openconfig.enums.OpenconfigAclACLTYPE type = 2 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set/type"];
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSetKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSetKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSetKey)
    MergeFrom(*source);
  }
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey::MergeFrom(const Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSetKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.set_name().size() > 0) {

    set_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.set_name_);
  }
  if (from.has_egress_acl_set()) {
    mutable_egress_acl_set()->::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets_EgressAclSet::MergeFrom(from.egress_acl_set());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSetKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey::CopyFrom(const Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSetKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey::IsInitialized() const {
  return true;
}

void Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey::Swap(Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey::InternalSwap(Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey* other) {
  using std::swap;
  set_name_.Swap(&other->set_name_);
  swap(egress_acl_set_, other->egress_acl_set_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_Interfaces_Interface_EgressAclSets_EgressAclSetKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_Interfaces_Interface_EgressAclSets::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_Interfaces_Interface_EgressAclSets::kEgressAclSetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_Interfaces_Interface_EgressAclSets::Acl_Interfaces_Interface_EgressAclSets()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_EgressAclSets();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets)
}
Acl_Interfaces_Interface_EgressAclSets::Acl_Interfaces_Interface_EgressAclSets(const Acl_Interfaces_Interface_EgressAclSets& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      egress_acl_set_(from.egress_acl_set_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets)
}

void Acl_Interfaces_Interface_EgressAclSets::SharedCtor() {
  _cached_size_ = 0;
}

Acl_Interfaces_Interface_EgressAclSets::~Acl_Interfaces_Interface_EgressAclSets() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets)
  SharedDtor();
}

void Acl_Interfaces_Interface_EgressAclSets::SharedDtor() {
}

void Acl_Interfaces_Interface_EgressAclSets::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_Interfaces_Interface_EgressAclSets::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_Interfaces_Interface_EgressAclSets& Acl_Interfaces_Interface_EgressAclSets::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_EgressAclSets();
  return *internal_default_instance();
}

Acl_Interfaces_Interface_EgressAclSets* Acl_Interfaces_Interface_EgressAclSets::New(::google::protobuf::Arena* arena) const {
  Acl_Interfaces_Interface_EgressAclSets* n = new Acl_Interfaces_Interface_EgressAclSets;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_Interfaces_Interface_EgressAclSets::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  egress_acl_set_.Clear();
  _internal_metadata_.Clear();
}

bool Acl_Interfaces_Interface_EgressAclSets::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(785656866u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSetKey egress_acl_set = 98207108 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set"];
      case 98207108: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 785656866 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_egress_acl_set()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets)
  return false;
#undef DO_
}

void Acl_Interfaces_Interface_EgressAclSets::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSetKey egress_acl_set = 98207108 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->egress_acl_set_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      98207108, this->egress_acl_set(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets)
}

::google::protobuf::uint8* Acl_Interfaces_Interface_EgressAclSets::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSetKey egress_acl_set = 98207108 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->egress_acl_set_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        98207108, this->egress_acl_set(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets)
  return target;
}

size_t Acl_Interfaces_Interface_EgressAclSets::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets.EgressAclSetKey egress_acl_set = 98207108 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets/egress-acl-set"];
  {
    unsigned int count = static_cast<unsigned int>(this->egress_acl_set_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->egress_acl_set(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_Interfaces_Interface_EgressAclSets::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_Interfaces_Interface_EgressAclSets* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_Interfaces_Interface_EgressAclSets>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets)
    MergeFrom(*source);
  }
}

void Acl_Interfaces_Interface_EgressAclSets::MergeFrom(const Acl_Interfaces_Interface_EgressAclSets& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  egress_acl_set_.MergeFrom(from.egress_acl_set_);
}

void Acl_Interfaces_Interface_EgressAclSets::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_Interfaces_Interface_EgressAclSets::CopyFrom(const Acl_Interfaces_Interface_EgressAclSets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_Interfaces_Interface_EgressAclSets::IsInitialized() const {
  return true;
}

void Acl_Interfaces_Interface_EgressAclSets::Swap(Acl_Interfaces_Interface_EgressAclSets* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_Interfaces_Interface_EgressAclSets::InternalSwap(Acl_Interfaces_Interface_EgressAclSets* other) {
  using std::swap;
  egress_acl_set_.InternalSwap(&other->egress_acl_set_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_Interfaces_Interface_EgressAclSets::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State_default_instance_._instance.get_mutable()->matched_octets_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State_default_instance_._instance.get_mutable()->matched_packets_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State_default_instance_._instance.get_mutable()->sequence_id_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::clear_matched_octets() {
  if (GetArenaNoVirtual() == NULL && matched_octets_ != NULL) {
    delete matched_octets_;
  }
  matched_octets_ = NULL;
}
void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::clear_matched_packets() {
  if (GetArenaNoVirtual() == NULL && matched_packets_ != NULL) {
    delete matched_packets_;
  }
  matched_packets_ = NULL;
}
void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::clear_sequence_id() {
  if (GetArenaNoVirtual() == NULL && sequence_id_ != NULL) {
    delete sequence_id_;
  }
  sequence_id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::kMatchedOctetsFieldNumber;
const int Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::kMatchedPacketsFieldNumber;
const int Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::kSequenceIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry.State)
}
Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State(const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_matched_packets()) {
    matched_packets_ = new ::ywrapper::UintValue(*from.matched_packets_);
  } else {
    matched_packets_ = NULL;
  }
  if (from.has_sequence_id()) {
    sequence_id_ = new ::ywrapper::UintValue(*from.sequence_id_);
  } else {
    sequence_id_ = NULL;
  }
  if (from.has_matched_octets()) {
    matched_octets_ = new ::ywrapper::UintValue(*from.matched_octets_);
  } else {
    matched_octets_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry.State)
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::SharedCtor() {
  ::memset(&matched_packets_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&matched_octets_) -
      reinterpret_cast<char*>(&matched_packets_)) + sizeof(matched_octets_));
  _cached_size_ = 0;
}

Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::~Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry.State)
  SharedDtor();
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::SharedDtor() {
  if (this != internal_default_instance()) delete matched_packets_;
  if (this != internal_default_instance()) delete sequence_id_;
  if (this != internal_default_instance()) delete matched_octets_;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State& Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State();
  return *internal_default_instance();
}

Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State* Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::New(::google::protobuf::Arena* arena) const {
  Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State* n = new Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && matched_packets_ != NULL) {
    delete matched_packets_;
  }
  matched_packets_ = NULL;
  if (GetArenaNoVirtual() == NULL && sequence_id_ != NULL) {
    delete sequence_id_;
  }
  sequence_id_ = NULL;
  if (GetArenaNoVirtual() == NULL && matched_octets_ != NULL) {
    delete matched_octets_;
  }
  matched_octets_ = NULL;
  _internal_metadata_.Clear();
}

bool Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(2027338258u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue matched_packets = 115163105 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries/acl-entry/state/matched-packets"];
      case 115163105: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 921304842 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_matched_packets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue sequence_id = 198617442 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries/acl-entry/state/sequence-id"];
      case 198617442: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 1588939538 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_sequence_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.UintValue matched_octets = 253417282 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries/acl-entry/state/matched-octets"];
      case 253417282: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 2027338258 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_matched_octets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry.State)
  return false;
#undef DO_
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue matched_packets = 115163105 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries/acl-entry/state/matched-packets"];
  if (this->has_matched_packets()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      115163105, *this->matched_packets_, output);
  }

  // .ywrapper.UintValue sequence_id = 198617442 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries/acl-entry/state/sequence-id"];
  if (this->has_sequence_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      198617442, *this->sequence_id_, output);
  }

  // .ywrapper.UintValue matched_octets = 253417282 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries/acl-entry/state/matched-octets"];
  if (this->has_matched_octets()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      253417282, *this->matched_octets_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry.State)
}

::google::protobuf::uint8* Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue matched_packets = 115163105 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries/acl-entry/state/matched-packets"];
  if (this->has_matched_packets()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        115163105, *this->matched_packets_, deterministic, target);
  }

  // .ywrapper.UintValue sequence_id = 198617442 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries/acl-entry/state/sequence-id"];
  if (this->has_sequence_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        198617442, *this->sequence_id_, deterministic, target);
  }

  // .ywrapper.UintValue matched_octets = 253417282 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries/acl-entry/state/matched-octets"];
  if (this->has_matched_octets()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        253417282, *this->matched_octets_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry.State)
  return target;
}

size_t Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue matched_packets = 115163105 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries/acl-entry/state/matched-packets"];
  if (this->has_matched_packets()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->matched_packets_);
  }

  // .ywrapper.UintValue sequence_id = 198617442 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries/acl-entry/state/sequence-id"];
  if (this->has_sequence_id()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->sequence_id_);
  }

  // .ywrapper.UintValue matched_octets = 253417282 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries/acl-entry/state/matched-octets"];
  if (this->has_matched_octets()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->matched_octets_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry.State)
    MergeFrom(*source);
  }
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::MergeFrom(const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_matched_packets()) {
    mutable_matched_packets()->::ywrapper::UintValue::MergeFrom(from.matched_packets());
  }
  if (from.has_sequence_id()) {
    mutable_sequence_id()->::ywrapper::UintValue::MergeFrom(from.sequence_id());
  }
  if (from.has_matched_octets()) {
    mutable_matched_octets()->::ywrapper::UintValue::MergeFrom(from.matched_octets());
  }
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::CopyFrom(const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::IsInitialized() const {
  return true;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::Swap(Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::InternalSwap(Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State* other) {
  using std::swap;
  swap(matched_packets_, other->matched_packets_);
  swap(sequence_id_, other->sequence_id_);
  swap(matched_octets_, other->matched_octets_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State*>(
      ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry)
}
Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry(const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State(*from.state_);
  } else {
    state_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry)
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry::SharedCtor() {
  state_ = NULL;
  _cached_size_ = 0;
}

Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry::~Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry)
  SharedDtor();
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry& Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry();
  return *internal_default_instance();
}

Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry* Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry::New(::google::protobuf::Arena* arena) const {
  Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry* n = new Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  _internal_metadata_.Clear();
}

bool Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(232704162u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry.State state = 29088020 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries/acl-entry/state"];
      case 29088020: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 232704162 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry)
  return false;
#undef DO_
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry.State state = 29088020 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries/acl-entry/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      29088020, *this->state_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry)
}

::google::protobuf::uint8* Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry.State state = 29088020 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries/acl-entry/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        29088020, *this->state_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry)
  return target;
}

size_t Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry.State state = 29088020 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries/acl-entry/state"];
  if (this->has_state()) {
    total_size += 4 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry)
    MergeFrom(*source);
  }
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry::MergeFrom(const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry_State::MergeFrom(from.state());
  }
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry::CopyFrom(const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry::IsInitialized() const {
  return true;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry::Swap(Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry::InternalSwap(Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry* other) {
  using std::swap;
  swap(state_, other->state_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey_default_instance_._instance.get_mutable()->acl_entry_ = const_cast< ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry*>(
      ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey::kSequenceIdFieldNumber;
const int Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey::kAclEntryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntryKey)
}
Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey(const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_acl_entry()) {
    acl_entry_ = new ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry(*from.acl_entry_);
  } else {
    acl_entry_ = NULL;
  }
  sequence_id_ = from.sequence_id_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntryKey)
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey::SharedCtor() {
  ::memset(&acl_entry_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sequence_id_) -
      reinterpret_cast<char*>(&acl_entry_)) + sizeof(sequence_id_));
  _cached_size_ = 0;
}

Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey::~Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntryKey)
  SharedDtor();
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey::SharedDtor() {
  if (this != internal_default_instance()) delete acl_entry_;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey& Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey();
  return *internal_default_instance();
}

Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey* Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey::New(::google::protobuf::Arena* arena) const {
  Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey* n = new Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntryKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && acl_entry_ != NULL) {
    delete acl_entry_;
  }
  acl_entry_ = NULL;
  sequence_id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntryKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 sequence_id = 1 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries/acl-entry/sequence-id"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sequence_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry acl_entry = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_acl_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntryKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntryKey)
  return false;
#undef DO_
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntryKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sequence_id = 1 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries/acl-entry/sequence-id"];
  if (this->sequence_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->sequence_id(), output);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry acl_entry = 2;
  if (this->has_acl_entry()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->acl_entry_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntryKey)
}

::google::protobuf::uint8* Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntryKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 sequence_id = 1 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries/acl-entry/sequence-id"];
  if (this->sequence_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->sequence_id(), target);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry acl_entry = 2;
  if (this->has_acl_entry()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->acl_entry_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntryKey)
  return target;
}

size_t Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntryKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntry acl_entry = 2;
  if (this->has_acl_entry()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->acl_entry_);
  }

  // uint64 sequence_id = 1 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries/acl-entry/sequence-id"];
  if (this->sequence_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sequence_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntryKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntryKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntryKey)
    MergeFrom(*source);
  }
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey::MergeFrom(const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntryKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_acl_entry()) {
    mutable_acl_entry()->::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntry::MergeFrom(from.acl_entry());
  }
  if (from.sequence_id() != 0) {
    set_sequence_id(from.sequence_id());
  }
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntryKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey::CopyFrom(const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntryKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey::IsInitialized() const {
  return true;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey::Swap(Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey::InternalSwap(Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey* other) {
  using std::swap;
  swap(acl_entry_, other->acl_entry_);
  swap(sequence_id_, other->sequence_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries_AclEntryKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries::kAclEntryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries)
}
Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries(const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      acl_entry_(from.acl_entry_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries)
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries::SharedCtor() {
  _cached_size_ = 0;
}

Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries::~Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries)
  SharedDtor();
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries::SharedDtor() {
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries& Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries();
  return *internal_default_instance();
}

Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries* Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries::New(::google::protobuf::Arena* arena) const {
  Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries* n = new Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  acl_entry_.Clear();
  _internal_metadata_.Clear();
}

bool Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3978348434u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntryKey acl_entry = 497293554 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries/acl-entry"];
      case 497293554: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 3978348434 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_acl_entry()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries)
  return false;
#undef DO_
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntryKey acl_entry = 497293554 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries/acl-entry"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->acl_entry_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      497293554, this->acl_entry(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries)
}

::google::protobuf::uint8* Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntryKey acl_entry = 497293554 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries/acl-entry"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->acl_entry_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        497293554, this->acl_entry(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries)
  return target;
}

size_t Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries.AclEntryKey acl_entry = 497293554 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries/acl-entry"];
  {
    unsigned int count = static_cast<unsigned int>(this->acl_entry_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->acl_entry(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries)
    MergeFrom(*source);
  }
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries::MergeFrom(const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  acl_entry_.MergeFrom(from.acl_entry_);
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries::CopyFrom(const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries::IsInitialized() const {
  return true;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries::Swap(Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries::InternalSwap(Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries* other) {
  using std::swap;
  acl_entry_.InternalSwap(&other->acl_entry_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config_default_instance_._instance.get_mutable()->set_name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::clear_set_name() {
  if (GetArenaNoVirtual() == NULL && set_name_ != NULL) {
    delete set_name_;
  }
  set_name_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::kSetNameFieldNumber;
const int Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.Config)
}
Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config(const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_set_name()) {
    set_name_ = new ::ywrapper::StringValue(*from.set_name_);
  } else {
    set_name_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.Config)
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::SharedCtor() {
  ::memset(&set_name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&set_name_)) + sizeof(type_));
  _cached_size_ = 0;
}

Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::~Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.Config)
  SharedDtor();
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::SharedDtor() {
  if (this != internal_default_instance()) delete set_name_;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config& Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config();
  return *internal_default_instance();
}

Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config* Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::New(::google::protobuf::Arena* arena) const {
  Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config* n = new Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && set_name_ != NULL) {
    delete set_name_;
  }
  set_name_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3144532050u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.enums.OpenconfigAclACLTYPE type = 246920790 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/config/type"];
      case 246920790: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 1975366320 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::openconfig::enums::OpenconfigAclACLTYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue set_name = 393066506 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/config/set-name"];
      case 393066506: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 3144532050 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_set_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.Config)
  return false;
#undef DO_
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigAclACLTYPE type = 246920790 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/config/type"];
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      246920790, this->type(), output);
  }

  // .ywrapper.StringValue set_name = 393066506 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/config/set-name"];
  if (this->has_set_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      393066506, *this->set_name_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.Config)
}

::google::protobuf::uint8* Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigAclACLTYPE type = 246920790 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/config/type"];
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      246920790, this->type(), target);
  }

  // .ywrapper.StringValue set_name = 393066506 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/config/set-name"];
  if (this->has_set_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        393066506, *this->set_name_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.Config)
  return target;
}

size_t Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue set_name = 393066506 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/config/set-name"];
  if (this->has_set_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->set_name_);
  }

  // .openconfig.enums.OpenconfigAclACLTYPE type = 246920790 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/config/type"];
  if (this->type() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.Config)
    MergeFrom(*source);
  }
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::MergeFrom(const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_set_name()) {
    mutable_set_name()->::ywrapper::StringValue::MergeFrom(from.set_name());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::CopyFrom(const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::IsInitialized() const {
  return true;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::Swap(Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::InternalSwap(Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config* other) {
  using std::swap;
  swap(set_name_, other->set_name_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State_default_instance_._instance.get_mutable()->set_name_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::clear_set_name() {
  if (GetArenaNoVirtual() == NULL && set_name_ != NULL) {
    delete set_name_;
  }
  set_name_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::kSetNameFieldNumber;
const int Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.State)
}
Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State(const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_set_name()) {
    set_name_ = new ::ywrapper::StringValue(*from.set_name_);
  } else {
    set_name_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.State)
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::SharedCtor() {
  ::memset(&set_name_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&set_name_)) + sizeof(type_));
  _cached_size_ = 0;
}

Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::~Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.State)
  SharedDtor();
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::SharedDtor() {
  if (this != internal_default_instance()) delete set_name_;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State& Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet_State();
  return *internal_default_instance();
}

Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State* Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::New(::google::protobuf::Arena* arena) const {
  Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State* n = new Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && set_name_ != NULL) {
    delete set_name_;
  }
  set_name_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3480620474u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.enums.OpenconfigAclACLTYPE type = 276970363 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/state/type"];
      case 276970363: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 2215762904 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::openconfig::enums::OpenconfigAclACLTYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue set_name = 435077559 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/state/set-name"];
      case 435077559: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 3480620474 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_set_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.State)
  return false;
#undef DO_
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigAclACLTYPE type = 276970363 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/state/type"];
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      276970363, this->type(), output);
  }

  // .ywrapper.StringValue set_name = 435077559 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/state/set-name"];
  if (this->has_set_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      435077559, *this->set_name_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.State)
}

::google::protobuf::uint8* Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigAclACLTYPE type = 276970363 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/state/type"];
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      276970363, this->type(), target);
  }

  // .ywrapper.StringValue set_name = 435077559 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/state/set-name"];
  if (this->has_set_name()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        435077559, *this->set_name_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.State)
  return target;
}

size_t Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue set_name = 435077559 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/state/set-name"];
  if (this->has_set_name()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->set_name_);
  }

  // .openconfig.enums.OpenconfigAclACLTYPE type = 276970363 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/state/type"];
  if (this->type() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.State)
    MergeFrom(*source);
  }
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::MergeFrom(const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_set_name()) {
    mutable_set_name()->::ywrapper::StringValue::MergeFrom(from.set_name());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::CopyFrom(const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::IsInitialized() const {
  return true;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::Swap(Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::InternalSwap(Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State* other) {
  using std::swap;
  swap(set_name_, other->set_name_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_default_instance_._instance.get_mutable()->acl_entries_ = const_cast< ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries*>(
      ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config*>(
      ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State*>(
      ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::kAclEntriesFieldNumber;
const int Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::kConfigFieldNumber;
const int Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet)
}
Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet(const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_acl_entries()) {
    acl_entries_ = new ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries(*from.acl_entries_);
  } else {
    acl_entries_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet)
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&acl_entries_) -
      reinterpret_cast<char*>(&state_)) + sizeof(acl_entries_));
  _cached_size_ = 0;
}

Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::~Acl_Interfaces_Interface_IngressAclSets_IngressAclSet() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet)
  SharedDtor();
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete acl_entries_;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet& Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSet();
  return *internal_default_instance();
}

Acl_Interfaces_Interface_IngressAclSets_IngressAclSet* Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::New(::google::protobuf::Arena* arena) const {
  Acl_Interfaces_Interface_IngressAclSets_IngressAclSet* n = new Acl_Interfaces_Interface_IngressAclSets_IngressAclSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && acl_entries_ != NULL) {
    delete acl_entries_;
  }
  acl_entries_ = NULL;
  _internal_metadata_.Clear();
}

bool Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1688406178u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.State state = 179158516 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/state"];
      case 179158516: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 1433268130 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.Config config = 185162259 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/config"];
      case 185162259: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 1481298074 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries acl_entries = 211050772 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries"];
      case 211050772: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 1688406178 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_acl_entries()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet)
  return false;
#undef DO_
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.State state = 179158516 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      179158516, *this->state_, output);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.Config config = 185162259 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      185162259, *this->config_, output);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries acl_entries = 211050772 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries"];
  if (this->has_acl_entries()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      211050772, *this->acl_entries_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet)
}

::google::protobuf::uint8* Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.State state = 179158516 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        179158516, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.Config config = 185162259 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        185162259, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries acl_entries = 211050772 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries"];
  if (this->has_acl_entries()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        211050772, *this->acl_entries_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet)
  return target;
}

size_t Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.State state = 179158516 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.Config config = 185162259 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet.AclEntries acl_entries = 211050772 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/acl-entries"];
  if (this->has_acl_entries()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->acl_entries_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet)
    MergeFrom(*source);
  }
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::MergeFrom(const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_Config::MergeFrom(from.config());
  }
  if (from.has_acl_entries()) {
    mutable_acl_entries()->::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet_AclEntries::MergeFrom(from.acl_entries());
  }
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::CopyFrom(const Acl_Interfaces_Interface_IngressAclSets_IngressAclSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::IsInitialized() const {
  return true;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::Swap(Acl_Interfaces_Interface_IngressAclSets_IngressAclSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::InternalSwap(Acl_Interfaces_Interface_IngressAclSets_IngressAclSet* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(config_, other->config_);
  swap(acl_entries_, other->acl_entries_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey_default_instance_._instance.get_mutable()->ingress_acl_set_ = const_cast< ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet*>(
      ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey::kSetNameFieldNumber;
const int Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey::kTypeFieldNumber;
const int Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey::kIngressAclSetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey::Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSetKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSetKey)
}
Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey::Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey(const Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  set_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.set_name().size() > 0) {
    set_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.set_name_);
  }
  if (from.has_ingress_acl_set()) {
    ingress_acl_set_ = new ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet(*from.ingress_acl_set_);
  } else {
    ingress_acl_set_ = NULL;
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSetKey)
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey::SharedCtor() {
  set_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&ingress_acl_set_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&ingress_acl_set_)) + sizeof(type_));
  _cached_size_ = 0;
}

Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey::~Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSetKey)
  SharedDtor();
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey::SharedDtor() {
  set_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete ingress_acl_set_;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey& Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_IngressAclSets_IngressAclSetKey();
  return *internal_default_instance();
}

Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey* Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey::New(::google::protobuf::Arena* arena) const {
  Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey* n = new Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSetKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  set_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && ingress_acl_set_ != NULL) {
    delete ingress_acl_set_;
  }
  ingress_acl_set_ = NULL;
  type_ = 0;
  _internal_metadata_.Clear();
}

bool Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSetKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string set_name = 1 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/set-name"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_set_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->set_name().data(), static_cast<int>(this->set_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSetKey.set_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.enums.OpenconfigAclACLTYPE type = 2 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/type"];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::openconfig::enums::OpenconfigAclACLTYPE >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet ingress_acl_set = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ingress_acl_set()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSetKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSetKey)
  return false;
#undef DO_
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSetKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string set_name = 1 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/set-name"];
  if (this->set_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->set_name().data(), static_cast<int>(this->set_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSetKey.set_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->set_name(), output);
  }

  // .openconfig.enums.OpenconfigAclACLTYPE type = 2 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/type"];
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->type(), output);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet ingress_acl_set = 3;
  if (this->has_ingress_acl_set()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->ingress_acl_set_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSetKey)
}

::google::protobuf::uint8* Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSetKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string set_name = 1 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/set-name"];
  if (this->set_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->set_name().data(), static_cast<int>(this->set_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSetKey.set_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->set_name(), target);
  }

  // .openconfig.enums.OpenconfigAclACLTYPE type = 2 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/type"];
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->type(), target);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet ingress_acl_set = 3;
  if (this->has_ingress_acl_set()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *this->ingress_acl_set_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSetKey)
  return target;
}

size_t Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSetKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string set_name = 1 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/set-name"];
  if (this->set_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->set_name());
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSet ingress_acl_set = 3;
  if (this->has_ingress_acl_set()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->ingress_acl_set_);
  }

  // .openconfig.enums.OpenconfigAclACLTYPE type = 2 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set/type"];
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSetKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSetKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSetKey)
    MergeFrom(*source);
  }
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey::MergeFrom(const Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSetKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.set_name().size() > 0) {

    set_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.set_name_);
  }
  if (from.has_ingress_acl_set()) {
    mutable_ingress_acl_set()->::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets_IngressAclSet::MergeFrom(from.ingress_acl_set());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSetKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey::CopyFrom(const Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSetKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey::IsInitialized() const {
  return true;
}

void Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey::Swap(Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey::InternalSwap(Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey* other) {
  using std::swap;
  set_name_.Swap(&other->set_name_);
  swap(ingress_acl_set_, other->ingress_acl_set_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_Interfaces_Interface_IngressAclSets_IngressAclSetKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_Interfaces_Interface_IngressAclSets::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_Interfaces_Interface_IngressAclSets::kIngressAclSetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_Interfaces_Interface_IngressAclSets::Acl_Interfaces_Interface_IngressAclSets()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_IngressAclSets();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets)
}
Acl_Interfaces_Interface_IngressAclSets::Acl_Interfaces_Interface_IngressAclSets(const Acl_Interfaces_Interface_IngressAclSets& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      ingress_acl_set_(from.ingress_acl_set_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets)
}

void Acl_Interfaces_Interface_IngressAclSets::SharedCtor() {
  _cached_size_ = 0;
}

Acl_Interfaces_Interface_IngressAclSets::~Acl_Interfaces_Interface_IngressAclSets() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets)
  SharedDtor();
}

void Acl_Interfaces_Interface_IngressAclSets::SharedDtor() {
}

void Acl_Interfaces_Interface_IngressAclSets::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_Interfaces_Interface_IngressAclSets::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_Interfaces_Interface_IngressAclSets& Acl_Interfaces_Interface_IngressAclSets::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_IngressAclSets();
  return *internal_default_instance();
}

Acl_Interfaces_Interface_IngressAclSets* Acl_Interfaces_Interface_IngressAclSets::New(::google::protobuf::Arena* arena) const {
  Acl_Interfaces_Interface_IngressAclSets* n = new Acl_Interfaces_Interface_IngressAclSets;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_Interfaces_Interface_IngressAclSets::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ingress_acl_set_.Clear();
  _internal_metadata_.Clear();
}

bool Acl_Interfaces_Interface_IngressAclSets::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(1301293714u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSetKey ingress_acl_set = 162661714 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set"];
      case 162661714: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 1301293714 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_ingress_acl_set()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets)
  return false;
#undef DO_
}

void Acl_Interfaces_Interface_IngressAclSets::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSetKey ingress_acl_set = 162661714 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ingress_acl_set_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      162661714, this->ingress_acl_set(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets)
}

::google::protobuf::uint8* Acl_Interfaces_Interface_IngressAclSets::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSetKey ingress_acl_set = 162661714 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->ingress_acl_set_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        162661714, this->ingress_acl_set(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets)
  return target;
}

size_t Acl_Interfaces_Interface_IngressAclSets::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets.IngressAclSetKey ingress_acl_set = 162661714 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets/ingress-acl-set"];
  {
    unsigned int count = static_cast<unsigned int>(this->ingress_acl_set_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->ingress_acl_set(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_Interfaces_Interface_IngressAclSets::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_Interfaces_Interface_IngressAclSets* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_Interfaces_Interface_IngressAclSets>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets)
    MergeFrom(*source);
  }
}

void Acl_Interfaces_Interface_IngressAclSets::MergeFrom(const Acl_Interfaces_Interface_IngressAclSets& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  ingress_acl_set_.MergeFrom(from.ingress_acl_set_);
}

void Acl_Interfaces_Interface_IngressAclSets::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_Interfaces_Interface_IngressAclSets::CopyFrom(const Acl_Interfaces_Interface_IngressAclSets& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_Interfaces_Interface_IngressAclSets::IsInitialized() const {
  return true;
}

void Acl_Interfaces_Interface_IngressAclSets::Swap(Acl_Interfaces_Interface_IngressAclSets* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_Interfaces_Interface_IngressAclSets::InternalSwap(Acl_Interfaces_Interface_IngressAclSets* other) {
  using std::swap;
  ingress_acl_set_.InternalSwap(&other->ingress_acl_set_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_Interfaces_Interface_IngressAclSets::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_Interfaces_Interface_InterfaceRef_Config::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_InterfaceRef_Config_default_instance_._instance.get_mutable()->interface_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_InterfaceRef_Config_default_instance_._instance.get_mutable()->subinterface_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Acl_Interfaces_Interface_InterfaceRef_Config::clear_interface() {
  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
}
void Acl_Interfaces_Interface_InterfaceRef_Config::clear_subinterface() {
  if (GetArenaNoVirtual() == NULL && subinterface_ != NULL) {
    delete subinterface_;
  }
  subinterface_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_Interfaces_Interface_InterfaceRef_Config::kInterfaceFieldNumber;
const int Acl_Interfaces_Interface_InterfaceRef_Config::kSubinterfaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_Interfaces_Interface_InterfaceRef_Config::Acl_Interfaces_Interface_InterfaceRef_Config()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_InterfaceRef_Config();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.Config)
}
Acl_Interfaces_Interface_InterfaceRef_Config::Acl_Interfaces_Interface_InterfaceRef_Config(const Acl_Interfaces_Interface_InterfaceRef_Config& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_subinterface()) {
    subinterface_ = new ::ywrapper::UintValue(*from.subinterface_);
  } else {
    subinterface_ = NULL;
  }
  if (from.has_interface()) {
    interface_ = new ::ywrapper::StringValue(*from.interface_);
  } else {
    interface_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.Config)
}

void Acl_Interfaces_Interface_InterfaceRef_Config::SharedCtor() {
  ::memset(&subinterface_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interface_) -
      reinterpret_cast<char*>(&subinterface_)) + sizeof(interface_));
  _cached_size_ = 0;
}

Acl_Interfaces_Interface_InterfaceRef_Config::~Acl_Interfaces_Interface_InterfaceRef_Config() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.Config)
  SharedDtor();
}

void Acl_Interfaces_Interface_InterfaceRef_Config::SharedDtor() {
  if (this != internal_default_instance()) delete subinterface_;
  if (this != internal_default_instance()) delete interface_;
}

void Acl_Interfaces_Interface_InterfaceRef_Config::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_Interfaces_Interface_InterfaceRef_Config::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_Interfaces_Interface_InterfaceRef_Config& Acl_Interfaces_Interface_InterfaceRef_Config::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_InterfaceRef_Config();
  return *internal_default_instance();
}

Acl_Interfaces_Interface_InterfaceRef_Config* Acl_Interfaces_Interface_InterfaceRef_Config::New(::google::protobuf::Arena* arena) const {
  Acl_Interfaces_Interface_InterfaceRef_Config* n = new Acl_Interfaces_Interface_InterfaceRef_Config;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_Interfaces_Interface_InterfaceRef_Config::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && subinterface_ != NULL) {
    delete subinterface_;
  }
  subinterface_ = NULL;
  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
  _internal_metadata_.Clear();
}

bool Acl_Interfaces_Interface_InterfaceRef_Config::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.Config)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(4085611714u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue subinterface = 223813592 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref/config/subinterface"];
      case 223813592: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 1790508738 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_subinterface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue interface = 510701464 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref/config/interface"];
      case 510701464: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 4085611714 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.Config)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.Config)
  return false;
#undef DO_
}

void Acl_Interfaces_Interface_InterfaceRef_Config::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue subinterface = 223813592 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref/config/subinterface"];
  if (this->has_subinterface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      223813592, *this->subinterface_, output);
  }

  // .ywrapper.StringValue interface = 510701464 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref/config/interface"];
  if (this->has_interface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      510701464, *this->interface_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.Config)
}

::google::protobuf::uint8* Acl_Interfaces_Interface_InterfaceRef_Config::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.Config)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue subinterface = 223813592 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref/config/subinterface"];
  if (this->has_subinterface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        223813592, *this->subinterface_, deterministic, target);
  }

  // .ywrapper.StringValue interface = 510701464 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref/config/interface"];
  if (this->has_interface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        510701464, *this->interface_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.Config)
  return target;
}

size_t Acl_Interfaces_Interface_InterfaceRef_Config::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.Config)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue subinterface = 223813592 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref/config/subinterface"];
  if (this->has_subinterface()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->subinterface_);
  }

  // .ywrapper.StringValue interface = 510701464 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref/config/interface"];
  if (this->has_interface()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interface_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_Interfaces_Interface_InterfaceRef_Config::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.Config)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_Interfaces_Interface_InterfaceRef_Config* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_Interfaces_Interface_InterfaceRef_Config>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.Config)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.Config)
    MergeFrom(*source);
  }
}

void Acl_Interfaces_Interface_InterfaceRef_Config::MergeFrom(const Acl_Interfaces_Interface_InterfaceRef_Config& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.Config)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_subinterface()) {
    mutable_subinterface()->::ywrapper::UintValue::MergeFrom(from.subinterface());
  }
  if (from.has_interface()) {
    mutable_interface()->::ywrapper::StringValue::MergeFrom(from.interface());
  }
}

void Acl_Interfaces_Interface_InterfaceRef_Config::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_Interfaces_Interface_InterfaceRef_Config::CopyFrom(const Acl_Interfaces_Interface_InterfaceRef_Config& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.Config)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_Interfaces_Interface_InterfaceRef_Config::IsInitialized() const {
  return true;
}

void Acl_Interfaces_Interface_InterfaceRef_Config::Swap(Acl_Interfaces_Interface_InterfaceRef_Config* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_Interfaces_Interface_InterfaceRef_Config::InternalSwap(Acl_Interfaces_Interface_InterfaceRef_Config* other) {
  using std::swap;
  swap(subinterface_, other->subinterface_);
  swap(interface_, other->interface_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_Interfaces_Interface_InterfaceRef_Config::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_Interfaces_Interface_InterfaceRef_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_InterfaceRef_State_default_instance_._instance.get_mutable()->interface_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_InterfaceRef_State_default_instance_._instance.get_mutable()->subinterface_ = const_cast< ::ywrapper::UintValue*>(
      ::ywrapper::UintValue::internal_default_instance());
}
void Acl_Interfaces_Interface_InterfaceRef_State::clear_interface() {
  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
}
void Acl_Interfaces_Interface_InterfaceRef_State::clear_subinterface() {
  if (GetArenaNoVirtual() == NULL && subinterface_ != NULL) {
    delete subinterface_;
  }
  subinterface_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_Interfaces_Interface_InterfaceRef_State::kInterfaceFieldNumber;
const int Acl_Interfaces_Interface_InterfaceRef_State::kSubinterfaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_Interfaces_Interface_InterfaceRef_State::Acl_Interfaces_Interface_InterfaceRef_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_InterfaceRef_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.State)
}
Acl_Interfaces_Interface_InterfaceRef_State::Acl_Interfaces_Interface_InterfaceRef_State(const Acl_Interfaces_Interface_InterfaceRef_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_subinterface()) {
    subinterface_ = new ::ywrapper::UintValue(*from.subinterface_);
  } else {
    subinterface_ = NULL;
  }
  if (from.has_interface()) {
    interface_ = new ::ywrapper::StringValue(*from.interface_);
  } else {
    interface_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.State)
}

void Acl_Interfaces_Interface_InterfaceRef_State::SharedCtor() {
  ::memset(&subinterface_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&interface_) -
      reinterpret_cast<char*>(&subinterface_)) + sizeof(interface_));
  _cached_size_ = 0;
}

Acl_Interfaces_Interface_InterfaceRef_State::~Acl_Interfaces_Interface_InterfaceRef_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.State)
  SharedDtor();
}

void Acl_Interfaces_Interface_InterfaceRef_State::SharedDtor() {
  if (this != internal_default_instance()) delete subinterface_;
  if (this != internal_default_instance()) delete interface_;
}

void Acl_Interfaces_Interface_InterfaceRef_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_Interfaces_Interface_InterfaceRef_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_Interfaces_Interface_InterfaceRef_State& Acl_Interfaces_Interface_InterfaceRef_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_InterfaceRef_State();
  return *internal_default_instance();
}

Acl_Interfaces_Interface_InterfaceRef_State* Acl_Interfaces_Interface_InterfaceRef_State::New(::google::protobuf::Arena* arena) const {
  Acl_Interfaces_Interface_InterfaceRef_State* n = new Acl_Interfaces_Interface_InterfaceRef_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_Interfaces_Interface_InterfaceRef_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && subinterface_ != NULL) {
    delete subinterface_;
  }
  subinterface_ = NULL;
  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
  _internal_metadata_.Clear();
}

bool Acl_Interfaces_Interface_InterfaceRef_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3466274474u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.UintValue subinterface = 117660727 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref/state/subinterface"];
      case 117660727: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 941285818 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_subinterface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ywrapper.StringValue interface = 433284309 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref/state/interface"];
      case 433284309: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 3466274474 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.State)
  return false;
#undef DO_
}

void Acl_Interfaces_Interface_InterfaceRef_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue subinterface = 117660727 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref/state/subinterface"];
  if (this->has_subinterface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      117660727, *this->subinterface_, output);
  }

  // .ywrapper.StringValue interface = 433284309 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref/state/interface"];
  if (this->has_interface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      433284309, *this->interface_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.State)
}

::google::protobuf::uint8* Acl_Interfaces_Interface_InterfaceRef_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.UintValue subinterface = 117660727 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref/state/subinterface"];
  if (this->has_subinterface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        117660727, *this->subinterface_, deterministic, target);
  }

  // .ywrapper.StringValue interface = 433284309 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref/state/interface"];
  if (this->has_interface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        433284309, *this->interface_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.State)
  return target;
}

size_t Acl_Interfaces_Interface_InterfaceRef_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.UintValue subinterface = 117660727 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref/state/subinterface"];
  if (this->has_subinterface()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->subinterface_);
  }

  // .ywrapper.StringValue interface = 433284309 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref/state/interface"];
  if (this->has_interface()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interface_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_Interfaces_Interface_InterfaceRef_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_Interfaces_Interface_InterfaceRef_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_Interfaces_Interface_InterfaceRef_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.State)
    MergeFrom(*source);
  }
}

void Acl_Interfaces_Interface_InterfaceRef_State::MergeFrom(const Acl_Interfaces_Interface_InterfaceRef_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_subinterface()) {
    mutable_subinterface()->::ywrapper::UintValue::MergeFrom(from.subinterface());
  }
  if (from.has_interface()) {
    mutable_interface()->::ywrapper::StringValue::MergeFrom(from.interface());
  }
}

void Acl_Interfaces_Interface_InterfaceRef_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_Interfaces_Interface_InterfaceRef_State::CopyFrom(const Acl_Interfaces_Interface_InterfaceRef_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_Interfaces_Interface_InterfaceRef_State::IsInitialized() const {
  return true;
}

void Acl_Interfaces_Interface_InterfaceRef_State::Swap(Acl_Interfaces_Interface_InterfaceRef_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_Interfaces_Interface_InterfaceRef_State::InternalSwap(Acl_Interfaces_Interface_InterfaceRef_State* other) {
  using std::swap;
  swap(subinterface_, other->subinterface_);
  swap(interface_, other->interface_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_Interfaces_Interface_InterfaceRef_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_Interfaces_Interface_InterfaceRef::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_InterfaceRef_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef_Config*>(
      ::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef_Config::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_InterfaceRef_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef_State*>(
      ::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_Interfaces_Interface_InterfaceRef::kConfigFieldNumber;
const int Acl_Interfaces_Interface_InterfaceRef::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_Interfaces_Interface_InterfaceRef::Acl_Interfaces_Interface_InterfaceRef()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_InterfaceRef();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef)
}
Acl_Interfaces_Interface_InterfaceRef::Acl_Interfaces_Interface_InterfaceRef(const Acl_Interfaces_Interface_InterfaceRef& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef)
}

void Acl_Interfaces_Interface_InterfaceRef::SharedCtor() {
  ::memset(&state_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&config_) -
      reinterpret_cast<char*>(&state_)) + sizeof(config_));
  _cached_size_ = 0;
}

Acl_Interfaces_Interface_InterfaceRef::~Acl_Interfaces_Interface_InterfaceRef() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef)
  SharedDtor();
}

void Acl_Interfaces_Interface_InterfaceRef::SharedDtor() {
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete config_;
}

void Acl_Interfaces_Interface_InterfaceRef::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_Interfaces_Interface_InterfaceRef::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_Interfaces_Interface_InterfaceRef& Acl_Interfaces_Interface_InterfaceRef::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_InterfaceRef();
  return *internal_default_instance();
}

Acl_Interfaces_Interface_InterfaceRef* Acl_Interfaces_Interface_InterfaceRef::New(::google::protobuf::Arena* arena) const {
  Acl_Interfaces_Interface_InterfaceRef* n = new Acl_Interfaces_Interface_InterfaceRef;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_Interfaces_Interface_InterfaceRef::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  _internal_metadata_.Clear();
}

bool Acl_Interfaces_Interface_InterfaceRef::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3296181634u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.State state = 161770793 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref/state"];
      case 161770793: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 1294166346 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.Config config = 412022704 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref/config"];
      case 412022704: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 3296181634 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef)
  return false;
#undef DO_
}

void Acl_Interfaces_Interface_InterfaceRef::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.State state = 161770793 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      161770793, *this->state_, output);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.Config config = 412022704 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      412022704, *this->config_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef)
}

::google::protobuf::uint8* Acl_Interfaces_Interface_InterfaceRef::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.State state = 161770793 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        161770793, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.Config config = 412022704 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        412022704, *this->config_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef)
  return target;
}

size_t Acl_Interfaces_Interface_InterfaceRef::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.State state = 161770793 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef.Config config = 412022704 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_Interfaces_Interface_InterfaceRef::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_Interfaces_Interface_InterfaceRef* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_Interfaces_Interface_InterfaceRef>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef)
    MergeFrom(*source);
  }
}

void Acl_Interfaces_Interface_InterfaceRef::MergeFrom(const Acl_Interfaces_Interface_InterfaceRef& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef_State::MergeFrom(from.state());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef_Config::MergeFrom(from.config());
  }
}

void Acl_Interfaces_Interface_InterfaceRef::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_Interfaces_Interface_InterfaceRef::CopyFrom(const Acl_Interfaces_Interface_InterfaceRef& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_Interfaces_Interface_InterfaceRef::IsInitialized() const {
  return true;
}

void Acl_Interfaces_Interface_InterfaceRef::Swap(Acl_Interfaces_Interface_InterfaceRef* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_Interfaces_Interface_InterfaceRef::InternalSwap(Acl_Interfaces_Interface_InterfaceRef* other) {
  using std::swap;
  swap(state_, other->state_);
  swap(config_, other->config_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_Interfaces_Interface_InterfaceRef::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_Interfaces_Interface_State::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_State_default_instance_._instance.get_mutable()->id_ = const_cast< ::ywrapper::StringValue*>(
      ::ywrapper::StringValue::internal_default_instance());
}
void Acl_Interfaces_Interface_State::clear_id() {
  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_Interfaces_Interface_State::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_Interfaces_Interface_State::Acl_Interfaces_Interface_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.State)
}
Acl_Interfaces_Interface_State::Acl_Interfaces_Interface_State(const Acl_Interfaces_Interface_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_id()) {
    id_ = new ::ywrapper::StringValue(*from.id_);
  } else {
    id_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.State)
}

void Acl_Interfaces_Interface_State::SharedCtor() {
  id_ = NULL;
  _cached_size_ = 0;
}

Acl_Interfaces_Interface_State::~Acl_Interfaces_Interface_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.Interfaces.Interface.State)
  SharedDtor();
}

void Acl_Interfaces_Interface_State::SharedDtor() {
  if (this != internal_default_instance()) delete id_;
}

void Acl_Interfaces_Interface_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_Interfaces_Interface_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_Interfaces_Interface_State& Acl_Interfaces_Interface_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface_State();
  return *internal_default_instance();
}

Acl_Interfaces_Interface_State* Acl_Interfaces_Interface_State::New(::google::protobuf::Arena* arena) const {
  Acl_Interfaces_Interface_State* n = new Acl_Interfaces_Interface_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_Interfaces_Interface_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && id_ != NULL) {
    delete id_;
  }
  id_ = NULL;
  _internal_metadata_.Clear();
}

bool Acl_Interfaces_Interface_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(742060634u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ywrapper.StringValue id = 92757579 [(.yext.schemapath) = "/acl/interfaces/interface/state/id"];
      case 92757579: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 742060634 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_id()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.Interfaces.Interface.State)
  return false;
#undef DO_
}

void Acl_Interfaces_Interface_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue id = 92757579 [(.yext.schemapath) = "/acl/interfaces/interface/state/id"];
  if (this->has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      92757579, *this->id_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.State)
}

::google::protobuf::uint8* Acl_Interfaces_Interface_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ywrapper.StringValue id = 92757579 [(.yext.schemapath) = "/acl/interfaces/interface/state/id"];
  if (this->has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        92757579, *this->id_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.Interfaces.Interface.State)
  return target;
}

size_t Acl_Interfaces_Interface_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .ywrapper.StringValue id = 92757579 [(.yext.schemapath) = "/acl/interfaces/interface/state/id"];
  if (this->has_id()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->id_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_Interfaces_Interface_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_Interfaces_Interface_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_Interfaces_Interface_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.Interfaces.Interface.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.Interfaces.Interface.State)
    MergeFrom(*source);
  }
}

void Acl_Interfaces_Interface_State::MergeFrom(const Acl_Interfaces_Interface_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_id()) {
    mutable_id()->::ywrapper::StringValue::MergeFrom(from.id());
  }
}

void Acl_Interfaces_Interface_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_Interfaces_Interface_State::CopyFrom(const Acl_Interfaces_Interface_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_Interfaces_Interface_State::IsInitialized() const {
  return true;
}

void Acl_Interfaces_Interface_State::Swap(Acl_Interfaces_Interface_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_Interfaces_Interface_State::InternalSwap(Acl_Interfaces_Interface_State* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_Interfaces_Interface_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_Interfaces_Interface::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_acl::Acl_Interfaces_Interface_Config*>(
      ::openconfig::openconfig_acl::Acl_Interfaces_Interface_Config::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_default_instance_._instance.get_mutable()->egress_acl_sets_ = const_cast< ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets*>(
      ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_default_instance_._instance.get_mutable()->ingress_acl_sets_ = const_cast< ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets*>(
      ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_default_instance_._instance.get_mutable()->interface_ref_ = const_cast< ::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef*>(
      ::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_Interfaces_Interface_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_acl::Acl_Interfaces_Interface_State*>(
      ::openconfig::openconfig_acl::Acl_Interfaces_Interface_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_Interfaces_Interface::kConfigFieldNumber;
const int Acl_Interfaces_Interface::kEgressAclSetsFieldNumber;
const int Acl_Interfaces_Interface::kIngressAclSetsFieldNumber;
const int Acl_Interfaces_Interface::kInterfaceRefFieldNumber;
const int Acl_Interfaces_Interface::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_Interfaces_Interface::Acl_Interfaces_Interface()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface)
}
Acl_Interfaces_Interface::Acl_Interfaces_Interface(const Acl_Interfaces_Interface& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_acl::Acl_Interfaces_Interface_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_ingress_acl_sets()) {
    ingress_acl_sets_ = new ::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets(*from.ingress_acl_sets_);
  } else {
    ingress_acl_sets_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_acl::Acl_Interfaces_Interface_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_interface_ref()) {
    interface_ref_ = new ::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef(*from.interface_ref_);
  } else {
    interface_ref_ = NULL;
  }
  if (from.has_egress_acl_sets()) {
    egress_acl_sets_ = new ::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets(*from.egress_acl_sets_);
  } else {
    egress_acl_sets_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.Interfaces.Interface)
}

void Acl_Interfaces_Interface::SharedCtor() {
  ::memset(&config_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&egress_acl_sets_) -
      reinterpret_cast<char*>(&config_)) + sizeof(egress_acl_sets_));
  _cached_size_ = 0;
}

Acl_Interfaces_Interface::~Acl_Interfaces_Interface() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.Interfaces.Interface)
  SharedDtor();
}

void Acl_Interfaces_Interface::SharedDtor() {
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete ingress_acl_sets_;
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete interface_ref_;
  if (this != internal_default_instance()) delete egress_acl_sets_;
}

void Acl_Interfaces_Interface::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_Interfaces_Interface::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_Interfaces_Interface& Acl_Interfaces_Interface::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_Interface();
  return *internal_default_instance();
}

Acl_Interfaces_Interface* Acl_Interfaces_Interface::New(::google::protobuf::Arena* arena) const {
  Acl_Interfaces_Interface* n = new Acl_Interfaces_Interface;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_Interfaces_Interface::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.Interfaces.Interface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && ingress_acl_sets_ != NULL) {
    delete ingress_acl_sets_;
  }
  ingress_acl_sets_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && interface_ref_ != NULL) {
    delete interface_ref_;
  }
  interface_ref_ = NULL;
  if (GetArenaNoVirtual() == NULL && egress_acl_sets_ != NULL) {
    delete egress_acl_sets_;
  }
  egress_acl_sets_ = NULL;
  _internal_metadata_.Clear();
}

bool Acl_Interfaces_Interface::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.Interfaces.Interface)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3695231570u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_acl.Acl.Interfaces.Interface.Config config = 39814432 [(.yext.schemapath) = "/acl/interfaces/interface/config"];
      case 39814432: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 318515458 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets ingress_acl_sets = 149051962 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets"];
      case 149051962: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 1192415698 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_ingress_acl_sets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.Interfaces.Interface.State state = 154100377 [(.yext.schemapath) = "/acl/interfaces/interface/state"];
      case 154100377: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 1232803018 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef interface_ref = 216230351 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref"];
      case 216230351: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 1729842810 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interface_ref()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets egress_acl_sets = 461903946 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets"];
      case 461903946: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 3695231570 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_egress_acl_sets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.Interfaces.Interface)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.Interfaces.Interface)
  return false;
#undef DO_
}

void Acl_Interfaces_Interface::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.Interfaces.Interface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.Config config = 39814432 [(.yext.schemapath) = "/acl/interfaces/interface/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      39814432, *this->config_, output);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets ingress_acl_sets = 149051962 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets"];
  if (this->has_ingress_acl_sets()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      149051962, *this->ingress_acl_sets_, output);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.State state = 154100377 [(.yext.schemapath) = "/acl/interfaces/interface/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      154100377, *this->state_, output);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef interface_ref = 216230351 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref"];
  if (this->has_interface_ref()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      216230351, *this->interface_ref_, output);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets egress_acl_sets = 461903946 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets"];
  if (this->has_egress_acl_sets()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      461903946, *this->egress_acl_sets_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.Interfaces.Interface)
}

::google::protobuf::uint8* Acl_Interfaces_Interface::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.Interfaces.Interface)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.Config config = 39814432 [(.yext.schemapath) = "/acl/interfaces/interface/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        39814432, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets ingress_acl_sets = 149051962 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets"];
  if (this->has_ingress_acl_sets()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        149051962, *this->ingress_acl_sets_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.State state = 154100377 [(.yext.schemapath) = "/acl/interfaces/interface/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        154100377, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef interface_ref = 216230351 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref"];
  if (this->has_interface_ref()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        216230351, *this->interface_ref_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets egress_acl_sets = 461903946 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets"];
  if (this->has_egress_acl_sets()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        461903946, *this->egress_acl_sets_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.Interfaces.Interface)
  return target;
}

size_t Acl_Interfaces_Interface::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.Interfaces.Interface)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.Config config = 39814432 [(.yext.schemapath) = "/acl/interfaces/interface/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.IngressAclSets ingress_acl_sets = 149051962 [(.yext.schemapath) = "/acl/interfaces/interface/ingress-acl-sets"];
  if (this->has_ingress_acl_sets()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->ingress_acl_sets_);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.State state = 154100377 [(.yext.schemapath) = "/acl/interfaces/interface/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.InterfaceRef interface_ref = 216230351 [(.yext.schemapath) = "/acl/interfaces/interface/interface-ref"];
  if (this->has_interface_ref()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interface_ref_);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface.EgressAclSets egress_acl_sets = 461903946 [(.yext.schemapath) = "/acl/interfaces/interface/egress-acl-sets"];
  if (this->has_egress_acl_sets()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->egress_acl_sets_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_Interfaces_Interface::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_Interfaces_Interface* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_Interfaces_Interface>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.Interfaces.Interface)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.Interfaces.Interface)
    MergeFrom(*source);
  }
}

void Acl_Interfaces_Interface::MergeFrom(const Acl_Interfaces_Interface& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_acl::Acl_Interfaces_Interface_Config::MergeFrom(from.config());
  }
  if (from.has_ingress_acl_sets()) {
    mutable_ingress_acl_sets()->::openconfig::openconfig_acl::Acl_Interfaces_Interface_IngressAclSets::MergeFrom(from.ingress_acl_sets());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_acl::Acl_Interfaces_Interface_State::MergeFrom(from.state());
  }
  if (from.has_interface_ref()) {
    mutable_interface_ref()->::openconfig::openconfig_acl::Acl_Interfaces_Interface_InterfaceRef::MergeFrom(from.interface_ref());
  }
  if (from.has_egress_acl_sets()) {
    mutable_egress_acl_sets()->::openconfig::openconfig_acl::Acl_Interfaces_Interface_EgressAclSets::MergeFrom(from.egress_acl_sets());
  }
}

void Acl_Interfaces_Interface::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_Interfaces_Interface::CopyFrom(const Acl_Interfaces_Interface& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.Interface)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_Interfaces_Interface::IsInitialized() const {
  return true;
}

void Acl_Interfaces_Interface::Swap(Acl_Interfaces_Interface* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_Interfaces_Interface::InternalSwap(Acl_Interfaces_Interface* other) {
  using std::swap;
  swap(config_, other->config_);
  swap(ingress_acl_sets_, other->ingress_acl_sets_);
  swap(state_, other->state_);
  swap(interface_ref_, other->interface_ref_);
  swap(egress_acl_sets_, other->egress_acl_sets_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_Interfaces_Interface::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_Interfaces_InterfaceKey::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_Interfaces_InterfaceKey_default_instance_._instance.get_mutable()->interface_ = const_cast< ::openconfig::openconfig_acl::Acl_Interfaces_Interface*>(
      ::openconfig::openconfig_acl::Acl_Interfaces_Interface::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_Interfaces_InterfaceKey::kIdFieldNumber;
const int Acl_Interfaces_InterfaceKey::kInterfaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_Interfaces_InterfaceKey::Acl_Interfaces_InterfaceKey()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_InterfaceKey();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.Interfaces.InterfaceKey)
}
Acl_Interfaces_InterfaceKey::Acl_Interfaces_InterfaceKey(const Acl_Interfaces_InterfaceKey& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.id().size() > 0) {
    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_interface()) {
    interface_ = new ::openconfig::openconfig_acl::Acl_Interfaces_Interface(*from.interface_);
  } else {
    interface_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.Interfaces.InterfaceKey)
}

void Acl_Interfaces_InterfaceKey::SharedCtor() {
  id_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  interface_ = NULL;
  _cached_size_ = 0;
}

Acl_Interfaces_InterfaceKey::~Acl_Interfaces_InterfaceKey() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.Interfaces.InterfaceKey)
  SharedDtor();
}

void Acl_Interfaces_InterfaceKey::SharedDtor() {
  id_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete interface_;
}

void Acl_Interfaces_InterfaceKey::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_Interfaces_InterfaceKey::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_Interfaces_InterfaceKey& Acl_Interfaces_InterfaceKey::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces_InterfaceKey();
  return *internal_default_instance();
}

Acl_Interfaces_InterfaceKey* Acl_Interfaces_InterfaceKey::New(::google::protobuf::Arena* arena) const {
  Acl_Interfaces_InterfaceKey* n = new Acl_Interfaces_InterfaceKey;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_Interfaces_InterfaceKey::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.Interfaces.InterfaceKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && interface_ != NULL) {
    delete interface_;
  }
  interface_ = NULL;
  _internal_metadata_.Clear();
}

bool Acl_Interfaces_InterfaceKey::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.Interfaces.InterfaceKey)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string id = 1 [(.yext.schemapath) = "/acl/interfaces/interface/id"];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_id()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->id().data(), static_cast<int>(this->id().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "openconfig.openconfig_acl.Acl.Interfaces.InterfaceKey.id"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.Interfaces.Interface interface = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.Interfaces.InterfaceKey)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.Interfaces.InterfaceKey)
  return false;
#undef DO_
}

void Acl_Interfaces_InterfaceKey::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.Interfaces.InterfaceKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.yext.schemapath) = "/acl/interfaces/interface/id"];
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_acl.Acl.Interfaces.InterfaceKey.id");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->id(), output);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface interface = 2;
  if (this->has_interface()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->interface_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.Interfaces.InterfaceKey)
}

::google::protobuf::uint8* Acl_Interfaces_InterfaceKey::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.Interfaces.InterfaceKey)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1 [(.yext.schemapath) = "/acl/interfaces/interface/id"];
  if (this->id().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->id().data(), static_cast<int>(this->id().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "openconfig.openconfig_acl.Acl.Interfaces.InterfaceKey.id");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->id(), target);
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface interface = 2;
  if (this->has_interface()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, *this->interface_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.Interfaces.InterfaceKey)
  return target;
}

size_t Acl_Interfaces_InterfaceKey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.Interfaces.InterfaceKey)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string id = 1 [(.yext.schemapath) = "/acl/interfaces/interface/id"];
  if (this->id().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->id());
  }

  // .openconfig.openconfig_acl.Acl.Interfaces.Interface interface = 2;
  if (this->has_interface()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interface_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_Interfaces_InterfaceKey::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.InterfaceKey)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_Interfaces_InterfaceKey* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_Interfaces_InterfaceKey>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.Interfaces.InterfaceKey)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.Interfaces.InterfaceKey)
    MergeFrom(*source);
  }
}

void Acl_Interfaces_InterfaceKey::MergeFrom(const Acl_Interfaces_InterfaceKey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces.InterfaceKey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {

    id_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.id_);
  }
  if (from.has_interface()) {
    mutable_interface()->::openconfig::openconfig_acl::Acl_Interfaces_Interface::MergeFrom(from.interface());
  }
}

void Acl_Interfaces_InterfaceKey::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.InterfaceKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_Interfaces_InterfaceKey::CopyFrom(const Acl_Interfaces_InterfaceKey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces.InterfaceKey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_Interfaces_InterfaceKey::IsInitialized() const {
  return true;
}

void Acl_Interfaces_InterfaceKey::Swap(Acl_Interfaces_InterfaceKey* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_Interfaces_InterfaceKey::InternalSwap(Acl_Interfaces_InterfaceKey* other) {
  using std::swap;
  id_.Swap(&other->id_);
  swap(interface_, other->interface_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_Interfaces_InterfaceKey::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_Interfaces::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_Interfaces::kInterfaceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_Interfaces::Acl_Interfaces()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.Interfaces)
}
Acl_Interfaces::Acl_Interfaces(const Acl_Interfaces& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      interface_(from.interface_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.Interfaces)
}

void Acl_Interfaces::SharedCtor() {
  _cached_size_ = 0;
}

Acl_Interfaces::~Acl_Interfaces() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.Interfaces)
  SharedDtor();
}

void Acl_Interfaces::SharedDtor() {
}

void Acl_Interfaces::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_Interfaces::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_Interfaces& Acl_Interfaces::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_Interfaces();
  return *internal_default_instance();
}

Acl_Interfaces* Acl_Interfaces::New(::google::protobuf::Arena* arena) const {
  Acl_Interfaces* n = new Acl_Interfaces;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_Interfaces::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.Interfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  interface_.Clear();
  _internal_metadata_.Clear();
}

bool Acl_Interfaces::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.Interfaces)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3687425786u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .openconfig.openconfig_acl.Acl.Interfaces.InterfaceKey interface = 460928223 [(.yext.schemapath) = "/acl/interfaces/interface"];
      case 460928223: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 3687425786 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_interface()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.Interfaces)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.Interfaces)
  return false;
#undef DO_
}

void Acl_Interfaces::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.Interfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_acl.Acl.Interfaces.InterfaceKey interface = 460928223 [(.yext.schemapath) = "/acl/interfaces/interface"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interface_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      460928223, this->interface(static_cast<int>(i)), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.Interfaces)
}

::google::protobuf::uint8* Acl_Interfaces::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.Interfaces)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .openconfig.openconfig_acl.Acl.Interfaces.InterfaceKey interface = 460928223 [(.yext.schemapath) = "/acl/interfaces/interface"];
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->interface_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        460928223, this->interface(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.Interfaces)
  return target;
}

size_t Acl_Interfaces::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.Interfaces)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .openconfig.openconfig_acl.Acl.Interfaces.InterfaceKey interface = 460928223 [(.yext.schemapath) = "/acl/interfaces/interface"];
  {
    unsigned int count = static_cast<unsigned int>(this->interface_size());
    total_size += 5UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->interface(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_Interfaces::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_Interfaces* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_Interfaces>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.Interfaces)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.Interfaces)
    MergeFrom(*source);
  }
}

void Acl_Interfaces::MergeFrom(const Acl_Interfaces& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.Interfaces)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  interface_.MergeFrom(from.interface_);
}

void Acl_Interfaces::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_Interfaces::CopyFrom(const Acl_Interfaces& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.Interfaces)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_Interfaces::IsInitialized() const {
  return true;
}

void Acl_Interfaces::Swap(Acl_Interfaces* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_Interfaces::InternalSwap(Acl_Interfaces* other) {
  using std::swap;
  interface_.InternalSwap(&other->interface_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_Interfaces::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl_State::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl_State::kCounterCapabilityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl_State::Acl_State()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_State();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl.State)
}
Acl_State::Acl_State(const Acl_State& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  counter_capability_ = from.counter_capability_;
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl.State)
}

void Acl_State::SharedCtor() {
  counter_capability_ = 0;
  _cached_size_ = 0;
}

Acl_State::~Acl_State() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl.State)
  SharedDtor();
}

void Acl_State::SharedDtor() {
}

void Acl_State::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl_State::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl_State& Acl_State::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl_State();
  return *internal_default_instance();
}

Acl_State* Acl_State::New(::google::protobuf::Arena* arena) const {
  Acl_State* n = new Acl_State;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl_State::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  counter_capability_ = 0;
  _internal_metadata_.Clear();
}

bool Acl_State::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl.State)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(319439088u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.enums.OpenconfigAclACLCOUNTERCAPABILITY counter_capability = 39929886 [(.yext.schemapath) = "/acl/state/counter-capability"];
      case 39929886: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 319439088 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_counter_capability(static_cast< ::openconfig::enums::OpenconfigAclACLCOUNTERCAPABILITY >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl.State)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl.State)
  return false;
#undef DO_
}

void Acl_State::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigAclACLCOUNTERCAPABILITY counter_capability = 39929886 [(.yext.schemapath) = "/acl/state/counter-capability"];
  if (this->counter_capability() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      39929886, this->counter_capability(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl.State)
}

::google::protobuf::uint8* Acl_State::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl.State)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.enums.OpenconfigAclACLCOUNTERCAPABILITY counter_capability = 39929886 [(.yext.schemapath) = "/acl/state/counter-capability"];
  if (this->counter_capability() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      39929886, this->counter_capability(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl.State)
  return target;
}

size_t Acl_State::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl.State)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.enums.OpenconfigAclACLCOUNTERCAPABILITY counter_capability = 39929886 [(.yext.schemapath) = "/acl/state/counter-capability"];
  if (this->counter_capability() != 0) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->counter_capability());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl_State::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl.State)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl_State* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl_State>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl.State)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl.State)
    MergeFrom(*source);
  }
}

void Acl_State::MergeFrom(const Acl_State& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl.State)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.counter_capability() != 0) {
    set_counter_capability(from.counter_capability());
  }
}

void Acl_State::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl_State::CopyFrom(const Acl_State& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl.State)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl_State::IsInitialized() const {
  return true;
}

void Acl_State::Swap(Acl_State* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl_State::InternalSwap(Acl_State* other) {
  using std::swap;
  swap(counter_capability_, other->counter_capability_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl_State::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Acl::InitAsDefaultInstance() {
  ::openconfig::openconfig_acl::_Acl_default_instance_._instance.get_mutable()->acl_sets_ = const_cast< ::openconfig::openconfig_acl::Acl_AclSets*>(
      ::openconfig::openconfig_acl::Acl_AclSets::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_default_instance_._instance.get_mutable()->config_ = const_cast< ::openconfig::openconfig_acl::Acl_Config*>(
      ::openconfig::openconfig_acl::Acl_Config::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_default_instance_._instance.get_mutable()->interfaces_ = const_cast< ::openconfig::openconfig_acl::Acl_Interfaces*>(
      ::openconfig::openconfig_acl::Acl_Interfaces::internal_default_instance());
  ::openconfig::openconfig_acl::_Acl_default_instance_._instance.get_mutable()->state_ = const_cast< ::openconfig::openconfig_acl::Acl_State*>(
      ::openconfig::openconfig_acl::Acl_State::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Acl::kAclSetsFieldNumber;
const int Acl::kConfigFieldNumber;
const int Acl::kInterfacesFieldNumber;
const int Acl::kStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Acl::Acl()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:openconfig.openconfig_acl.Acl)
}
Acl::Acl(const Acl& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_interfaces()) {
    interfaces_ = new ::openconfig::openconfig_acl::Acl_Interfaces(*from.interfaces_);
  } else {
    interfaces_ = NULL;
  }
  if (from.has_config()) {
    config_ = new ::openconfig::openconfig_acl::Acl_Config(*from.config_);
  } else {
    config_ = NULL;
  }
  if (from.has_state()) {
    state_ = new ::openconfig::openconfig_acl::Acl_State(*from.state_);
  } else {
    state_ = NULL;
  }
  if (from.has_acl_sets()) {
    acl_sets_ = new ::openconfig::openconfig_acl::Acl_AclSets(*from.acl_sets_);
  } else {
    acl_sets_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:openconfig.openconfig_acl.Acl)
}

void Acl::SharedCtor() {
  ::memset(&interfaces_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&acl_sets_) -
      reinterpret_cast<char*>(&interfaces_)) + sizeof(acl_sets_));
  _cached_size_ = 0;
}

Acl::~Acl() {
  // @@protoc_insertion_point(destructor:openconfig.openconfig_acl.Acl)
  SharedDtor();
}

void Acl::SharedDtor() {
  if (this != internal_default_instance()) delete interfaces_;
  if (this != internal_default_instance()) delete config_;
  if (this != internal_default_instance()) delete state_;
  if (this != internal_default_instance()) delete acl_sets_;
}

void Acl::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Acl::descriptor() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Acl& Acl::default_instance() {
  ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::InitDefaultsAcl();
  return *internal_default_instance();
}

Acl* Acl::New(::google::protobuf::Arena* arena) const {
  Acl* n = new Acl;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Acl::Clear() {
// @@protoc_insertion_point(message_clear_start:openconfig.openconfig_acl.Acl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && interfaces_ != NULL) {
    delete interfaces_;
  }
  interfaces_ = NULL;
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
  if (GetArenaNoVirtual() == NULL && acl_sets_ != NULL) {
    delete acl_sets_;
  }
  acl_sets_ = NULL;
  _internal_metadata_.Clear();
}

bool Acl::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:openconfig.openconfig_acl.Acl)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(3340148074u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .openconfig.openconfig_acl.Acl.Interfaces interfaces = 154699711 [(.yext.schemapath) = "/acl/interfaces"];
      case 154699711: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 1237597690 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_interfaces()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.Config config = 267083569 [(.yext.schemapath) = "/acl/config"];
      case 267083569: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 2136668554 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.State state = 331320230 [(.yext.schemapath) = "/acl/state"];
      case 331320230: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 2650561842 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_state()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .openconfig.openconfig_acl.Acl.AclSets acl_sets = 417518509 [(.yext.schemapath) = "/acl/acl-sets"];
      case 417518509: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 3340148074 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_acl_sets()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:openconfig.openconfig_acl.Acl)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:openconfig.openconfig_acl.Acl)
  return false;
#undef DO_
}

void Acl::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:openconfig.openconfig_acl.Acl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.Interfaces interfaces = 154699711 [(.yext.schemapath) = "/acl/interfaces"];
  if (this->has_interfaces()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      154699711, *this->interfaces_, output);
  }

  // .openconfig.openconfig_acl.Acl.Config config = 267083569 [(.yext.schemapath) = "/acl/config"];
  if (this->has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      267083569, *this->config_, output);
  }

  // .openconfig.openconfig_acl.Acl.State state = 331320230 [(.yext.schemapath) = "/acl/state"];
  if (this->has_state()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      331320230, *this->state_, output);
  }

  // .openconfig.openconfig_acl.Acl.AclSets acl_sets = 417518509 [(.yext.schemapath) = "/acl/acl-sets"];
  if (this->has_acl_sets()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      417518509, *this->acl_sets_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:openconfig.openconfig_acl.Acl)
}

::google::protobuf::uint8* Acl::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:openconfig.openconfig_acl.Acl)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .openconfig.openconfig_acl.Acl.Interfaces interfaces = 154699711 [(.yext.schemapath) = "/acl/interfaces"];
  if (this->has_interfaces()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        154699711, *this->interfaces_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.Config config = 267083569 [(.yext.schemapath) = "/acl/config"];
  if (this->has_config()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        267083569, *this->config_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.State state = 331320230 [(.yext.schemapath) = "/acl/state"];
  if (this->has_state()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        331320230, *this->state_, deterministic, target);
  }

  // .openconfig.openconfig_acl.Acl.AclSets acl_sets = 417518509 [(.yext.schemapath) = "/acl/acl-sets"];
  if (this->has_acl_sets()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        417518509, *this->acl_sets_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:openconfig.openconfig_acl.Acl)
  return target;
}

size_t Acl::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:openconfig.openconfig_acl.Acl)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .openconfig.openconfig_acl.Acl.Interfaces interfaces = 154699711 [(.yext.schemapath) = "/acl/interfaces"];
  if (this->has_interfaces()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->interfaces_);
  }

  // .openconfig.openconfig_acl.Acl.Config config = 267083569 [(.yext.schemapath) = "/acl/config"];
  if (this->has_config()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->config_);
  }

  // .openconfig.openconfig_acl.Acl.State state = 331320230 [(.yext.schemapath) = "/acl/state"];
  if (this->has_state()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->state_);
  }

  // .openconfig.openconfig_acl.Acl.AclSets acl_sets = 417518509 [(.yext.schemapath) = "/acl/acl-sets"];
  if (this->has_acl_sets()) {
    total_size += 5 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *this->acl_sets_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Acl::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:openconfig.openconfig_acl.Acl)
  GOOGLE_DCHECK_NE(&from, this);
  const Acl* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Acl>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:openconfig.openconfig_acl.Acl)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:openconfig.openconfig_acl.Acl)
    MergeFrom(*source);
  }
}

void Acl::MergeFrom(const Acl& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:openconfig.openconfig_acl.Acl)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_interfaces()) {
    mutable_interfaces()->::openconfig::openconfig_acl::Acl_Interfaces::MergeFrom(from.interfaces());
  }
  if (from.has_config()) {
    mutable_config()->::openconfig::openconfig_acl::Acl_Config::MergeFrom(from.config());
  }
  if (from.has_state()) {
    mutable_state()->::openconfig::openconfig_acl::Acl_State::MergeFrom(from.state());
  }
  if (from.has_acl_sets()) {
    mutable_acl_sets()->::openconfig::openconfig_acl::Acl_AclSets::MergeFrom(from.acl_sets());
  }
}

void Acl::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:openconfig.openconfig_acl.Acl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Acl::CopyFrom(const Acl& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:openconfig.openconfig_acl.Acl)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Acl::IsInitialized() const {
  return true;
}

void Acl::Swap(Acl* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Acl::InternalSwap(Acl* other) {
  using std::swap;
  swap(interfaces_, other->interfaces_);
  swap(config_, other->config_);
  swap(state_, other->state_);
  swap(acl_sets_, other->acl_sets_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Acl::GetMetadata() const {
  protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_openconfig_2fopenconfig_5facl_2fopenconfig_5facl_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace openconfig_acl
}  // namespace openconfig

// @@protoc_insertion_point(global_scope)
