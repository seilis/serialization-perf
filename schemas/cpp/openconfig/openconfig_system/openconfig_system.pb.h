// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: openconfig/openconfig_system/openconfig_system.proto

#ifndef PROTOBUF_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto__INCLUDED
#define PROTOBUF_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "github.com/openconfig/ygot/proto/ywrapper/ywrapper.pb.h"
#include "github.com/openconfig/ygot/proto/yext/yext.pb.h"
#include "openconfig/enums/enums.pb.h"
// @@protoc_insertion_point(includes)

namespace protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[148];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsSystem_Aaa_Accounting_Config_AccountingMethodUnionImpl();
void InitDefaultsSystem_Aaa_Accounting_Config_AccountingMethodUnion();
void InitDefaultsSystem_Aaa_Accounting_ConfigImpl();
void InitDefaultsSystem_Aaa_Accounting_Config();
void InitDefaultsSystem_Aaa_Accounting_Events_Event_ConfigImpl();
void InitDefaultsSystem_Aaa_Accounting_Events_Event_Config();
void InitDefaultsSystem_Aaa_Accounting_Events_Event_StateImpl();
void InitDefaultsSystem_Aaa_Accounting_Events_Event_State();
void InitDefaultsSystem_Aaa_Accounting_Events_EventImpl();
void InitDefaultsSystem_Aaa_Accounting_Events_Event();
void InitDefaultsSystem_Aaa_Accounting_Events_EventKeyImpl();
void InitDefaultsSystem_Aaa_Accounting_Events_EventKey();
void InitDefaultsSystem_Aaa_Accounting_EventsImpl();
void InitDefaultsSystem_Aaa_Accounting_Events();
void InitDefaultsSystem_Aaa_Accounting_State_AccountingMethodUnionImpl();
void InitDefaultsSystem_Aaa_Accounting_State_AccountingMethodUnion();
void InitDefaultsSystem_Aaa_Accounting_StateImpl();
void InitDefaultsSystem_Aaa_Accounting_State();
void InitDefaultsSystem_Aaa_AccountingImpl();
void InitDefaultsSystem_Aaa_Accounting();
void InitDefaultsSystem_Aaa_Authentication_AdminUser_ConfigImpl();
void InitDefaultsSystem_Aaa_Authentication_AdminUser_Config();
void InitDefaultsSystem_Aaa_Authentication_AdminUser_StateImpl();
void InitDefaultsSystem_Aaa_Authentication_AdminUser_State();
void InitDefaultsSystem_Aaa_Authentication_AdminUserImpl();
void InitDefaultsSystem_Aaa_Authentication_AdminUser();
void InitDefaultsSystem_Aaa_Authentication_Config_AuthenticationMethodUnionImpl();
void InitDefaultsSystem_Aaa_Authentication_Config_AuthenticationMethodUnion();
void InitDefaultsSystem_Aaa_Authentication_ConfigImpl();
void InitDefaultsSystem_Aaa_Authentication_Config();
void InitDefaultsSystem_Aaa_Authentication_State_AuthenticationMethodUnionImpl();
void InitDefaultsSystem_Aaa_Authentication_State_AuthenticationMethodUnion();
void InitDefaultsSystem_Aaa_Authentication_StateImpl();
void InitDefaultsSystem_Aaa_Authentication_State();
void InitDefaultsSystem_Aaa_Authentication_Users_User_ConfigImpl();
void InitDefaultsSystem_Aaa_Authentication_Users_User_Config();
void InitDefaultsSystem_Aaa_Authentication_Users_User_StateImpl();
void InitDefaultsSystem_Aaa_Authentication_Users_User_State();
void InitDefaultsSystem_Aaa_Authentication_Users_UserImpl();
void InitDefaultsSystem_Aaa_Authentication_Users_User();
void InitDefaultsSystem_Aaa_Authentication_Users_UserKeyImpl();
void InitDefaultsSystem_Aaa_Authentication_Users_UserKey();
void InitDefaultsSystem_Aaa_Authentication_UsersImpl();
void InitDefaultsSystem_Aaa_Authentication_Users();
void InitDefaultsSystem_Aaa_AuthenticationImpl();
void InitDefaultsSystem_Aaa_Authentication();
void InitDefaultsSystem_Aaa_Authorization_Config_AuthorizationMethodUnionImpl();
void InitDefaultsSystem_Aaa_Authorization_Config_AuthorizationMethodUnion();
void InitDefaultsSystem_Aaa_Authorization_ConfigImpl();
void InitDefaultsSystem_Aaa_Authorization_Config();
void InitDefaultsSystem_Aaa_Authorization_Events_Event_ConfigImpl();
void InitDefaultsSystem_Aaa_Authorization_Events_Event_Config();
void InitDefaultsSystem_Aaa_Authorization_Events_Event_StateImpl();
void InitDefaultsSystem_Aaa_Authorization_Events_Event_State();
void InitDefaultsSystem_Aaa_Authorization_Events_EventImpl();
void InitDefaultsSystem_Aaa_Authorization_Events_Event();
void InitDefaultsSystem_Aaa_Authorization_Events_EventKeyImpl();
void InitDefaultsSystem_Aaa_Authorization_Events_EventKey();
void InitDefaultsSystem_Aaa_Authorization_EventsImpl();
void InitDefaultsSystem_Aaa_Authorization_Events();
void InitDefaultsSystem_Aaa_Authorization_State_AuthorizationMethodUnionImpl();
void InitDefaultsSystem_Aaa_Authorization_State_AuthorizationMethodUnion();
void InitDefaultsSystem_Aaa_Authorization_StateImpl();
void InitDefaultsSystem_Aaa_Authorization_State();
void InitDefaultsSystem_Aaa_AuthorizationImpl();
void InitDefaultsSystem_Aaa_Authorization();
void InitDefaultsSystem_Aaa_ConfigImpl();
void InitDefaultsSystem_Aaa_Config();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_ConfigImpl();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Config();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_ConfigImpl();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_Config();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_ConfigImpl();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_CountersImpl();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_StateImpl();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_RadiusImpl();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_StateImpl();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_State();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_ConfigImpl();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_StateImpl();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_TacacsImpl();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_ServerImpl();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_ServerKeyImpl();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_ServerKey();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_ServersImpl();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_StateImpl();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_State();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroupImpl();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroup();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroupKeyImpl();
void InitDefaultsSystem_Aaa_ServerGroups_ServerGroupKey();
void InitDefaultsSystem_Aaa_ServerGroupsImpl();
void InitDefaultsSystem_Aaa_ServerGroups();
void InitDefaultsSystem_Aaa_StateImpl();
void InitDefaultsSystem_Aaa_State();
void InitDefaultsSystem_AaaImpl();
void InitDefaultsSystem_Aaa();
void InitDefaultsSystem_Alarms_Alarm_ConfigImpl();
void InitDefaultsSystem_Alarms_Alarm_Config();
void InitDefaultsSystem_Alarms_Alarm_StateImpl();
void InitDefaultsSystem_Alarms_Alarm_State();
void InitDefaultsSystem_Alarms_AlarmImpl();
void InitDefaultsSystem_Alarms_Alarm();
void InitDefaultsSystem_Alarms_AlarmKeyImpl();
void InitDefaultsSystem_Alarms_AlarmKey();
void InitDefaultsSystem_AlarmsImpl();
void InitDefaultsSystem_Alarms();
void InitDefaultsSystem_Clock_ConfigImpl();
void InitDefaultsSystem_Clock_Config();
void InitDefaultsSystem_Clock_StateImpl();
void InitDefaultsSystem_Clock_State();
void InitDefaultsSystem_ClockImpl();
void InitDefaultsSystem_Clock();
void InitDefaultsSystem_ConfigImpl();
void InitDefaultsSystem_Config();
void InitDefaultsSystem_Cpus_Cpu_State_HardwareInterruptImpl();
void InitDefaultsSystem_Cpus_Cpu_State_HardwareInterrupt();
void InitDefaultsSystem_Cpus_Cpu_State_IdleImpl();
void InitDefaultsSystem_Cpus_Cpu_State_Idle();
void InitDefaultsSystem_Cpus_Cpu_State_KernelImpl();
void InitDefaultsSystem_Cpus_Cpu_State_Kernel();
void InitDefaultsSystem_Cpus_Cpu_State_NiceImpl();
void InitDefaultsSystem_Cpus_Cpu_State_Nice();
void InitDefaultsSystem_Cpus_Cpu_State_SoftwareInterruptImpl();
void InitDefaultsSystem_Cpus_Cpu_State_SoftwareInterrupt();
void InitDefaultsSystem_Cpus_Cpu_State_TotalImpl();
void InitDefaultsSystem_Cpus_Cpu_State_Total();
void InitDefaultsSystem_Cpus_Cpu_State_UserImpl();
void InitDefaultsSystem_Cpus_Cpu_State_User();
void InitDefaultsSystem_Cpus_Cpu_State_WaitImpl();
void InitDefaultsSystem_Cpus_Cpu_State_Wait();
void InitDefaultsSystem_Cpus_Cpu_StateImpl();
void InitDefaultsSystem_Cpus_Cpu_State();
void InitDefaultsSystem_Cpus_CpuImpl();
void InitDefaultsSystem_Cpus_Cpu();
void InitDefaultsSystem_Cpus_CpuKeyImpl();
void InitDefaultsSystem_Cpus_CpuKey();
void InitDefaultsSystem_CpusImpl();
void InitDefaultsSystem_Cpus();
void InitDefaultsSystem_Dns_ConfigImpl();
void InitDefaultsSystem_Dns_Config();
void InitDefaultsSystem_Dns_HostEntries_HostEntry_ConfigImpl();
void InitDefaultsSystem_Dns_HostEntries_HostEntry_Config();
void InitDefaultsSystem_Dns_HostEntries_HostEntry_StateImpl();
void InitDefaultsSystem_Dns_HostEntries_HostEntry_State();
void InitDefaultsSystem_Dns_HostEntries_HostEntryImpl();
void InitDefaultsSystem_Dns_HostEntries_HostEntry();
void InitDefaultsSystem_Dns_HostEntries_HostEntryKeyImpl();
void InitDefaultsSystem_Dns_HostEntries_HostEntryKey();
void InitDefaultsSystem_Dns_HostEntriesImpl();
void InitDefaultsSystem_Dns_HostEntries();
void InitDefaultsSystem_Dns_Servers_Server_ConfigImpl();
void InitDefaultsSystem_Dns_Servers_Server_Config();
void InitDefaultsSystem_Dns_Servers_Server_StateImpl();
void InitDefaultsSystem_Dns_Servers_Server_State();
void InitDefaultsSystem_Dns_Servers_ServerImpl();
void InitDefaultsSystem_Dns_Servers_Server();
void InitDefaultsSystem_Dns_Servers_ServerKeyImpl();
void InitDefaultsSystem_Dns_Servers_ServerKey();
void InitDefaultsSystem_Dns_ServersImpl();
void InitDefaultsSystem_Dns_Servers();
void InitDefaultsSystem_Dns_StateImpl();
void InitDefaultsSystem_Dns_State();
void InitDefaultsSystem_DnsImpl();
void InitDefaultsSystem_Dns();
void InitDefaultsSystem_Logging_Console_ConfigImpl();
void InitDefaultsSystem_Logging_Console_Config();
void InitDefaultsSystem_Logging_Console_Selectors_Selector_ConfigImpl();
void InitDefaultsSystem_Logging_Console_Selectors_Selector_Config();
void InitDefaultsSystem_Logging_Console_Selectors_Selector_StateImpl();
void InitDefaultsSystem_Logging_Console_Selectors_Selector_State();
void InitDefaultsSystem_Logging_Console_Selectors_SelectorImpl();
void InitDefaultsSystem_Logging_Console_Selectors_Selector();
void InitDefaultsSystem_Logging_Console_Selectors_SelectorKeyImpl();
void InitDefaultsSystem_Logging_Console_Selectors_SelectorKey();
void InitDefaultsSystem_Logging_Console_SelectorsImpl();
void InitDefaultsSystem_Logging_Console_Selectors();
void InitDefaultsSystem_Logging_Console_StateImpl();
void InitDefaultsSystem_Logging_Console_State();
void InitDefaultsSystem_Logging_ConsoleImpl();
void InitDefaultsSystem_Logging_Console();
void InitDefaultsSystem_Logging_RemoteServers_RemoteServer_ConfigImpl();
void InitDefaultsSystem_Logging_RemoteServers_RemoteServer_Config();
void InitDefaultsSystem_Logging_RemoteServers_RemoteServer_Selectors_Selector_ConfigImpl();
void InitDefaultsSystem_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config();
void InitDefaultsSystem_Logging_RemoteServers_RemoteServer_Selectors_Selector_StateImpl();
void InitDefaultsSystem_Logging_RemoteServers_RemoteServer_Selectors_Selector_State();
void InitDefaultsSystem_Logging_RemoteServers_RemoteServer_Selectors_SelectorImpl();
void InitDefaultsSystem_Logging_RemoteServers_RemoteServer_Selectors_Selector();
void InitDefaultsSystem_Logging_RemoteServers_RemoteServer_Selectors_SelectorKeyImpl();
void InitDefaultsSystem_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey();
void InitDefaultsSystem_Logging_RemoteServers_RemoteServer_SelectorsImpl();
void InitDefaultsSystem_Logging_RemoteServers_RemoteServer_Selectors();
void InitDefaultsSystem_Logging_RemoteServers_RemoteServer_StateImpl();
void InitDefaultsSystem_Logging_RemoteServers_RemoteServer_State();
void InitDefaultsSystem_Logging_RemoteServers_RemoteServerImpl();
void InitDefaultsSystem_Logging_RemoteServers_RemoteServer();
void InitDefaultsSystem_Logging_RemoteServers_RemoteServerKeyImpl();
void InitDefaultsSystem_Logging_RemoteServers_RemoteServerKey();
void InitDefaultsSystem_Logging_RemoteServersImpl();
void InitDefaultsSystem_Logging_RemoteServers();
void InitDefaultsSystem_LoggingImpl();
void InitDefaultsSystem_Logging();
void InitDefaultsSystem_Memory_ConfigImpl();
void InitDefaultsSystem_Memory_Config();
void InitDefaultsSystem_Memory_StateImpl();
void InitDefaultsSystem_Memory_State();
void InitDefaultsSystem_MemoryImpl();
void InitDefaultsSystem_Memory();
void InitDefaultsSystem_Ntp_ConfigImpl();
void InitDefaultsSystem_Ntp_Config();
void InitDefaultsSystem_Ntp_NtpKeys_NtpKey_ConfigImpl();
void InitDefaultsSystem_Ntp_NtpKeys_NtpKey_Config();
void InitDefaultsSystem_Ntp_NtpKeys_NtpKey_StateImpl();
void InitDefaultsSystem_Ntp_NtpKeys_NtpKey_State();
void InitDefaultsSystem_Ntp_NtpKeys_NtpKeyImpl();
void InitDefaultsSystem_Ntp_NtpKeys_NtpKey();
void InitDefaultsSystem_Ntp_NtpKeys_NtpKeyKeyImpl();
void InitDefaultsSystem_Ntp_NtpKeys_NtpKeyKey();
void InitDefaultsSystem_Ntp_NtpKeysImpl();
void InitDefaultsSystem_Ntp_NtpKeys();
void InitDefaultsSystem_Ntp_Servers_Server_ConfigImpl();
void InitDefaultsSystem_Ntp_Servers_Server_Config();
void InitDefaultsSystem_Ntp_Servers_Server_StateImpl();
void InitDefaultsSystem_Ntp_Servers_Server_State();
void InitDefaultsSystem_Ntp_Servers_ServerImpl();
void InitDefaultsSystem_Ntp_Servers_Server();
void InitDefaultsSystem_Ntp_Servers_ServerKeyImpl();
void InitDefaultsSystem_Ntp_Servers_ServerKey();
void InitDefaultsSystem_Ntp_ServersImpl();
void InitDefaultsSystem_Ntp_Servers();
void InitDefaultsSystem_Ntp_StateImpl();
void InitDefaultsSystem_Ntp_State();
void InitDefaultsSystem_NtpImpl();
void InitDefaultsSystem_Ntp();
void InitDefaultsSystem_Openflow_Agent_ConfigImpl();
void InitDefaultsSystem_Openflow_Agent_Config();
void InitDefaultsSystem_Openflow_Agent_StateImpl();
void InitDefaultsSystem_Openflow_Agent_State();
void InitDefaultsSystem_Openflow_AgentImpl();
void InitDefaultsSystem_Openflow_Agent();
void InitDefaultsSystem_Openflow_Controllers_Controller_ConfigImpl();
void InitDefaultsSystem_Openflow_Controllers_Controller_Config();
void InitDefaultsSystem_Openflow_Controllers_Controller_Connections_Connection_ConfigImpl();
void InitDefaultsSystem_Openflow_Controllers_Controller_Connections_Connection_Config();
void InitDefaultsSystem_Openflow_Controllers_Controller_Connections_Connection_StateImpl();
void InitDefaultsSystem_Openflow_Controllers_Controller_Connections_Connection_State();
void InitDefaultsSystem_Openflow_Controllers_Controller_Connections_ConnectionImpl();
void InitDefaultsSystem_Openflow_Controllers_Controller_Connections_Connection();
void InitDefaultsSystem_Openflow_Controllers_Controller_Connections_ConnectionKeyImpl();
void InitDefaultsSystem_Openflow_Controllers_Controller_Connections_ConnectionKey();
void InitDefaultsSystem_Openflow_Controllers_Controller_ConnectionsImpl();
void InitDefaultsSystem_Openflow_Controllers_Controller_Connections();
void InitDefaultsSystem_Openflow_Controllers_Controller_StateImpl();
void InitDefaultsSystem_Openflow_Controllers_Controller_State();
void InitDefaultsSystem_Openflow_Controllers_ControllerImpl();
void InitDefaultsSystem_Openflow_Controllers_Controller();
void InitDefaultsSystem_Openflow_Controllers_ControllerKeyImpl();
void InitDefaultsSystem_Openflow_Controllers_ControllerKey();
void InitDefaultsSystem_Openflow_ControllersImpl();
void InitDefaultsSystem_Openflow_Controllers();
void InitDefaultsSystem_OpenflowImpl();
void InitDefaultsSystem_Openflow();
void InitDefaultsSystem_Processes_Process_StateImpl();
void InitDefaultsSystem_Processes_Process_State();
void InitDefaultsSystem_Processes_ProcessImpl();
void InitDefaultsSystem_Processes_Process();
void InitDefaultsSystem_Processes_ProcessKeyImpl();
void InitDefaultsSystem_Processes_ProcessKey();
void InitDefaultsSystem_ProcessesImpl();
void InitDefaultsSystem_Processes();
void InitDefaultsSystem_SshServer_ConfigImpl();
void InitDefaultsSystem_SshServer_Config();
void InitDefaultsSystem_SshServer_StateImpl();
void InitDefaultsSystem_SshServer_State();
void InitDefaultsSystem_SshServerImpl();
void InitDefaultsSystem_SshServer();
void InitDefaultsSystem_StateImpl();
void InitDefaultsSystem_State();
void InitDefaultsSystem_TelnetServer_ConfigImpl();
void InitDefaultsSystem_TelnetServer_Config();
void InitDefaultsSystem_TelnetServer_StateImpl();
void InitDefaultsSystem_TelnetServer_State();
void InitDefaultsSystem_TelnetServerImpl();
void InitDefaultsSystem_TelnetServer();
void InitDefaultsSystemImpl();
void InitDefaultsSystem();
inline void InitDefaults() {
  InitDefaultsSystem_Aaa_Accounting_Config_AccountingMethodUnion();
  InitDefaultsSystem_Aaa_Accounting_Config();
  InitDefaultsSystem_Aaa_Accounting_Events_Event_Config();
  InitDefaultsSystem_Aaa_Accounting_Events_Event_State();
  InitDefaultsSystem_Aaa_Accounting_Events_Event();
  InitDefaultsSystem_Aaa_Accounting_Events_EventKey();
  InitDefaultsSystem_Aaa_Accounting_Events();
  InitDefaultsSystem_Aaa_Accounting_State_AccountingMethodUnion();
  InitDefaultsSystem_Aaa_Accounting_State();
  InitDefaultsSystem_Aaa_Accounting();
  InitDefaultsSystem_Aaa_Authentication_AdminUser_Config();
  InitDefaultsSystem_Aaa_Authentication_AdminUser_State();
  InitDefaultsSystem_Aaa_Authentication_AdminUser();
  InitDefaultsSystem_Aaa_Authentication_Config_AuthenticationMethodUnion();
  InitDefaultsSystem_Aaa_Authentication_Config();
  InitDefaultsSystem_Aaa_Authentication_State_AuthenticationMethodUnion();
  InitDefaultsSystem_Aaa_Authentication_State();
  InitDefaultsSystem_Aaa_Authentication_Users_User_Config();
  InitDefaultsSystem_Aaa_Authentication_Users_User_State();
  InitDefaultsSystem_Aaa_Authentication_Users_User();
  InitDefaultsSystem_Aaa_Authentication_Users_UserKey();
  InitDefaultsSystem_Aaa_Authentication_Users();
  InitDefaultsSystem_Aaa_Authentication();
  InitDefaultsSystem_Aaa_Authorization_Config_AuthorizationMethodUnion();
  InitDefaultsSystem_Aaa_Authorization_Config();
  InitDefaultsSystem_Aaa_Authorization_Events_Event_Config();
  InitDefaultsSystem_Aaa_Authorization_Events_Event_State();
  InitDefaultsSystem_Aaa_Authorization_Events_Event();
  InitDefaultsSystem_Aaa_Authorization_Events_EventKey();
  InitDefaultsSystem_Aaa_Authorization_Events();
  InitDefaultsSystem_Aaa_Authorization_State_AuthorizationMethodUnion();
  InitDefaultsSystem_Aaa_Authorization_State();
  InitDefaultsSystem_Aaa_Authorization();
  InitDefaultsSystem_Aaa_Config();
  InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Config();
  InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_Config();
  InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config();
  InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters();
  InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State();
  InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius();
  InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_State();
  InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config();
  InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State();
  InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs();
  InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server();
  InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_ServerKey();
  InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers();
  InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_State();
  InitDefaultsSystem_Aaa_ServerGroups_ServerGroup();
  InitDefaultsSystem_Aaa_ServerGroups_ServerGroupKey();
  InitDefaultsSystem_Aaa_ServerGroups();
  InitDefaultsSystem_Aaa_State();
  InitDefaultsSystem_Aaa();
  InitDefaultsSystem_Alarms_Alarm_Config();
  InitDefaultsSystem_Alarms_Alarm_State();
  InitDefaultsSystem_Alarms_Alarm();
  InitDefaultsSystem_Alarms_AlarmKey();
  InitDefaultsSystem_Alarms();
  InitDefaultsSystem_Clock_Config();
  InitDefaultsSystem_Clock_State();
  InitDefaultsSystem_Clock();
  InitDefaultsSystem_Config();
  InitDefaultsSystem_Cpus_Cpu_State_HardwareInterrupt();
  InitDefaultsSystem_Cpus_Cpu_State_Idle();
  InitDefaultsSystem_Cpus_Cpu_State_Kernel();
  InitDefaultsSystem_Cpus_Cpu_State_Nice();
  InitDefaultsSystem_Cpus_Cpu_State_SoftwareInterrupt();
  InitDefaultsSystem_Cpus_Cpu_State_Total();
  InitDefaultsSystem_Cpus_Cpu_State_User();
  InitDefaultsSystem_Cpus_Cpu_State_Wait();
  InitDefaultsSystem_Cpus_Cpu_State();
  InitDefaultsSystem_Cpus_Cpu();
  InitDefaultsSystem_Cpus_CpuKey();
  InitDefaultsSystem_Cpus();
  InitDefaultsSystem_Dns_Config();
  InitDefaultsSystem_Dns_HostEntries_HostEntry_Config();
  InitDefaultsSystem_Dns_HostEntries_HostEntry_State();
  InitDefaultsSystem_Dns_HostEntries_HostEntry();
  InitDefaultsSystem_Dns_HostEntries_HostEntryKey();
  InitDefaultsSystem_Dns_HostEntries();
  InitDefaultsSystem_Dns_Servers_Server_Config();
  InitDefaultsSystem_Dns_Servers_Server_State();
  InitDefaultsSystem_Dns_Servers_Server();
  InitDefaultsSystem_Dns_Servers_ServerKey();
  InitDefaultsSystem_Dns_Servers();
  InitDefaultsSystem_Dns_State();
  InitDefaultsSystem_Dns();
  InitDefaultsSystem_Logging_Console_Config();
  InitDefaultsSystem_Logging_Console_Selectors_Selector_Config();
  InitDefaultsSystem_Logging_Console_Selectors_Selector_State();
  InitDefaultsSystem_Logging_Console_Selectors_Selector();
  InitDefaultsSystem_Logging_Console_Selectors_SelectorKey();
  InitDefaultsSystem_Logging_Console_Selectors();
  InitDefaultsSystem_Logging_Console_State();
  InitDefaultsSystem_Logging_Console();
  InitDefaultsSystem_Logging_RemoteServers_RemoteServer_Config();
  InitDefaultsSystem_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config();
  InitDefaultsSystem_Logging_RemoteServers_RemoteServer_Selectors_Selector_State();
  InitDefaultsSystem_Logging_RemoteServers_RemoteServer_Selectors_Selector();
  InitDefaultsSystem_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey();
  InitDefaultsSystem_Logging_RemoteServers_RemoteServer_Selectors();
  InitDefaultsSystem_Logging_RemoteServers_RemoteServer_State();
  InitDefaultsSystem_Logging_RemoteServers_RemoteServer();
  InitDefaultsSystem_Logging_RemoteServers_RemoteServerKey();
  InitDefaultsSystem_Logging_RemoteServers();
  InitDefaultsSystem_Logging();
  InitDefaultsSystem_Memory_Config();
  InitDefaultsSystem_Memory_State();
  InitDefaultsSystem_Memory();
  InitDefaultsSystem_Ntp_Config();
  InitDefaultsSystem_Ntp_NtpKeys_NtpKey_Config();
  InitDefaultsSystem_Ntp_NtpKeys_NtpKey_State();
  InitDefaultsSystem_Ntp_NtpKeys_NtpKey();
  InitDefaultsSystem_Ntp_NtpKeys_NtpKeyKey();
  InitDefaultsSystem_Ntp_NtpKeys();
  InitDefaultsSystem_Ntp_Servers_Server_Config();
  InitDefaultsSystem_Ntp_Servers_Server_State();
  InitDefaultsSystem_Ntp_Servers_Server();
  InitDefaultsSystem_Ntp_Servers_ServerKey();
  InitDefaultsSystem_Ntp_Servers();
  InitDefaultsSystem_Ntp_State();
  InitDefaultsSystem_Ntp();
  InitDefaultsSystem_Openflow_Agent_Config();
  InitDefaultsSystem_Openflow_Agent_State();
  InitDefaultsSystem_Openflow_Agent();
  InitDefaultsSystem_Openflow_Controllers_Controller_Config();
  InitDefaultsSystem_Openflow_Controllers_Controller_Connections_Connection_Config();
  InitDefaultsSystem_Openflow_Controllers_Controller_Connections_Connection_State();
  InitDefaultsSystem_Openflow_Controllers_Controller_Connections_Connection();
  InitDefaultsSystem_Openflow_Controllers_Controller_Connections_ConnectionKey();
  InitDefaultsSystem_Openflow_Controllers_Controller_Connections();
  InitDefaultsSystem_Openflow_Controllers_Controller_State();
  InitDefaultsSystem_Openflow_Controllers_Controller();
  InitDefaultsSystem_Openflow_Controllers_ControllerKey();
  InitDefaultsSystem_Openflow_Controllers();
  InitDefaultsSystem_Openflow();
  InitDefaultsSystem_Processes_Process_State();
  InitDefaultsSystem_Processes_Process();
  InitDefaultsSystem_Processes_ProcessKey();
  InitDefaultsSystem_Processes();
  InitDefaultsSystem_SshServer_Config();
  InitDefaultsSystem_SshServer_State();
  InitDefaultsSystem_SshServer();
  InitDefaultsSystem_State();
  InitDefaultsSystem_TelnetServer_Config();
  InitDefaultsSystem_TelnetServer_State();
  InitDefaultsSystem_TelnetServer();
  InitDefaultsSystem();
}
}  // namespace protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto
namespace openconfig {
namespace openconfig_system {
class System;
class SystemDefaultTypeInternal;
extern SystemDefaultTypeInternal _System_default_instance_;
class System_Aaa;
class System_AaaDefaultTypeInternal;
extern System_AaaDefaultTypeInternal _System_Aaa_default_instance_;
class System_Aaa_Accounting;
class System_Aaa_AccountingDefaultTypeInternal;
extern System_Aaa_AccountingDefaultTypeInternal _System_Aaa_Accounting_default_instance_;
class System_Aaa_Accounting_Config;
class System_Aaa_Accounting_ConfigDefaultTypeInternal;
extern System_Aaa_Accounting_ConfigDefaultTypeInternal _System_Aaa_Accounting_Config_default_instance_;
class System_Aaa_Accounting_Config_AccountingMethodUnion;
class System_Aaa_Accounting_Config_AccountingMethodUnionDefaultTypeInternal;
extern System_Aaa_Accounting_Config_AccountingMethodUnionDefaultTypeInternal _System_Aaa_Accounting_Config_AccountingMethodUnion_default_instance_;
class System_Aaa_Accounting_Events;
class System_Aaa_Accounting_EventsDefaultTypeInternal;
extern System_Aaa_Accounting_EventsDefaultTypeInternal _System_Aaa_Accounting_Events_default_instance_;
class System_Aaa_Accounting_Events_Event;
class System_Aaa_Accounting_Events_EventDefaultTypeInternal;
extern System_Aaa_Accounting_Events_EventDefaultTypeInternal _System_Aaa_Accounting_Events_Event_default_instance_;
class System_Aaa_Accounting_Events_EventKey;
class System_Aaa_Accounting_Events_EventKeyDefaultTypeInternal;
extern System_Aaa_Accounting_Events_EventKeyDefaultTypeInternal _System_Aaa_Accounting_Events_EventKey_default_instance_;
class System_Aaa_Accounting_Events_Event_Config;
class System_Aaa_Accounting_Events_Event_ConfigDefaultTypeInternal;
extern System_Aaa_Accounting_Events_Event_ConfigDefaultTypeInternal _System_Aaa_Accounting_Events_Event_Config_default_instance_;
class System_Aaa_Accounting_Events_Event_State;
class System_Aaa_Accounting_Events_Event_StateDefaultTypeInternal;
extern System_Aaa_Accounting_Events_Event_StateDefaultTypeInternal _System_Aaa_Accounting_Events_Event_State_default_instance_;
class System_Aaa_Accounting_State;
class System_Aaa_Accounting_StateDefaultTypeInternal;
extern System_Aaa_Accounting_StateDefaultTypeInternal _System_Aaa_Accounting_State_default_instance_;
class System_Aaa_Accounting_State_AccountingMethodUnion;
class System_Aaa_Accounting_State_AccountingMethodUnionDefaultTypeInternal;
extern System_Aaa_Accounting_State_AccountingMethodUnionDefaultTypeInternal _System_Aaa_Accounting_State_AccountingMethodUnion_default_instance_;
class System_Aaa_Authentication;
class System_Aaa_AuthenticationDefaultTypeInternal;
extern System_Aaa_AuthenticationDefaultTypeInternal _System_Aaa_Authentication_default_instance_;
class System_Aaa_Authentication_AdminUser;
class System_Aaa_Authentication_AdminUserDefaultTypeInternal;
extern System_Aaa_Authentication_AdminUserDefaultTypeInternal _System_Aaa_Authentication_AdminUser_default_instance_;
class System_Aaa_Authentication_AdminUser_Config;
class System_Aaa_Authentication_AdminUser_ConfigDefaultTypeInternal;
extern System_Aaa_Authentication_AdminUser_ConfigDefaultTypeInternal _System_Aaa_Authentication_AdminUser_Config_default_instance_;
class System_Aaa_Authentication_AdminUser_State;
class System_Aaa_Authentication_AdminUser_StateDefaultTypeInternal;
extern System_Aaa_Authentication_AdminUser_StateDefaultTypeInternal _System_Aaa_Authentication_AdminUser_State_default_instance_;
class System_Aaa_Authentication_Config;
class System_Aaa_Authentication_ConfigDefaultTypeInternal;
extern System_Aaa_Authentication_ConfigDefaultTypeInternal _System_Aaa_Authentication_Config_default_instance_;
class System_Aaa_Authentication_Config_AuthenticationMethodUnion;
class System_Aaa_Authentication_Config_AuthenticationMethodUnionDefaultTypeInternal;
extern System_Aaa_Authentication_Config_AuthenticationMethodUnionDefaultTypeInternal _System_Aaa_Authentication_Config_AuthenticationMethodUnion_default_instance_;
class System_Aaa_Authentication_State;
class System_Aaa_Authentication_StateDefaultTypeInternal;
extern System_Aaa_Authentication_StateDefaultTypeInternal _System_Aaa_Authentication_State_default_instance_;
class System_Aaa_Authentication_State_AuthenticationMethodUnion;
class System_Aaa_Authentication_State_AuthenticationMethodUnionDefaultTypeInternal;
extern System_Aaa_Authentication_State_AuthenticationMethodUnionDefaultTypeInternal _System_Aaa_Authentication_State_AuthenticationMethodUnion_default_instance_;
class System_Aaa_Authentication_Users;
class System_Aaa_Authentication_UsersDefaultTypeInternal;
extern System_Aaa_Authentication_UsersDefaultTypeInternal _System_Aaa_Authentication_Users_default_instance_;
class System_Aaa_Authentication_Users_User;
class System_Aaa_Authentication_Users_UserDefaultTypeInternal;
extern System_Aaa_Authentication_Users_UserDefaultTypeInternal _System_Aaa_Authentication_Users_User_default_instance_;
class System_Aaa_Authentication_Users_UserKey;
class System_Aaa_Authentication_Users_UserKeyDefaultTypeInternal;
extern System_Aaa_Authentication_Users_UserKeyDefaultTypeInternal _System_Aaa_Authentication_Users_UserKey_default_instance_;
class System_Aaa_Authentication_Users_User_Config;
class System_Aaa_Authentication_Users_User_ConfigDefaultTypeInternal;
extern System_Aaa_Authentication_Users_User_ConfigDefaultTypeInternal _System_Aaa_Authentication_Users_User_Config_default_instance_;
class System_Aaa_Authentication_Users_User_State;
class System_Aaa_Authentication_Users_User_StateDefaultTypeInternal;
extern System_Aaa_Authentication_Users_User_StateDefaultTypeInternal _System_Aaa_Authentication_Users_User_State_default_instance_;
class System_Aaa_Authorization;
class System_Aaa_AuthorizationDefaultTypeInternal;
extern System_Aaa_AuthorizationDefaultTypeInternal _System_Aaa_Authorization_default_instance_;
class System_Aaa_Authorization_Config;
class System_Aaa_Authorization_ConfigDefaultTypeInternal;
extern System_Aaa_Authorization_ConfigDefaultTypeInternal _System_Aaa_Authorization_Config_default_instance_;
class System_Aaa_Authorization_Config_AuthorizationMethodUnion;
class System_Aaa_Authorization_Config_AuthorizationMethodUnionDefaultTypeInternal;
extern System_Aaa_Authorization_Config_AuthorizationMethodUnionDefaultTypeInternal _System_Aaa_Authorization_Config_AuthorizationMethodUnion_default_instance_;
class System_Aaa_Authorization_Events;
class System_Aaa_Authorization_EventsDefaultTypeInternal;
extern System_Aaa_Authorization_EventsDefaultTypeInternal _System_Aaa_Authorization_Events_default_instance_;
class System_Aaa_Authorization_Events_Event;
class System_Aaa_Authorization_Events_EventDefaultTypeInternal;
extern System_Aaa_Authorization_Events_EventDefaultTypeInternal _System_Aaa_Authorization_Events_Event_default_instance_;
class System_Aaa_Authorization_Events_EventKey;
class System_Aaa_Authorization_Events_EventKeyDefaultTypeInternal;
extern System_Aaa_Authorization_Events_EventKeyDefaultTypeInternal _System_Aaa_Authorization_Events_EventKey_default_instance_;
class System_Aaa_Authorization_Events_Event_Config;
class System_Aaa_Authorization_Events_Event_ConfigDefaultTypeInternal;
extern System_Aaa_Authorization_Events_Event_ConfigDefaultTypeInternal _System_Aaa_Authorization_Events_Event_Config_default_instance_;
class System_Aaa_Authorization_Events_Event_State;
class System_Aaa_Authorization_Events_Event_StateDefaultTypeInternal;
extern System_Aaa_Authorization_Events_Event_StateDefaultTypeInternal _System_Aaa_Authorization_Events_Event_State_default_instance_;
class System_Aaa_Authorization_State;
class System_Aaa_Authorization_StateDefaultTypeInternal;
extern System_Aaa_Authorization_StateDefaultTypeInternal _System_Aaa_Authorization_State_default_instance_;
class System_Aaa_Authorization_State_AuthorizationMethodUnion;
class System_Aaa_Authorization_State_AuthorizationMethodUnionDefaultTypeInternal;
extern System_Aaa_Authorization_State_AuthorizationMethodUnionDefaultTypeInternal _System_Aaa_Authorization_State_AuthorizationMethodUnion_default_instance_;
class System_Aaa_Config;
class System_Aaa_ConfigDefaultTypeInternal;
extern System_Aaa_ConfigDefaultTypeInternal _System_Aaa_Config_default_instance_;
class System_Aaa_ServerGroups;
class System_Aaa_ServerGroupsDefaultTypeInternal;
extern System_Aaa_ServerGroupsDefaultTypeInternal _System_Aaa_ServerGroups_default_instance_;
class System_Aaa_ServerGroups_ServerGroup;
class System_Aaa_ServerGroups_ServerGroupDefaultTypeInternal;
extern System_Aaa_ServerGroups_ServerGroupDefaultTypeInternal _System_Aaa_ServerGroups_ServerGroup_default_instance_;
class System_Aaa_ServerGroups_ServerGroupKey;
class System_Aaa_ServerGroups_ServerGroupKeyDefaultTypeInternal;
extern System_Aaa_ServerGroups_ServerGroupKeyDefaultTypeInternal _System_Aaa_ServerGroups_ServerGroupKey_default_instance_;
class System_Aaa_ServerGroups_ServerGroup_Config;
class System_Aaa_ServerGroups_ServerGroup_ConfigDefaultTypeInternal;
extern System_Aaa_ServerGroups_ServerGroup_ConfigDefaultTypeInternal _System_Aaa_ServerGroups_ServerGroup_Config_default_instance_;
class System_Aaa_ServerGroups_ServerGroup_Servers;
class System_Aaa_ServerGroups_ServerGroup_ServersDefaultTypeInternal;
extern System_Aaa_ServerGroups_ServerGroup_ServersDefaultTypeInternal _System_Aaa_ServerGroups_ServerGroup_Servers_default_instance_;
class System_Aaa_ServerGroups_ServerGroup_Servers_Server;
class System_Aaa_ServerGroups_ServerGroup_Servers_ServerDefaultTypeInternal;
extern System_Aaa_ServerGroups_ServerGroup_Servers_ServerDefaultTypeInternal _System_Aaa_ServerGroups_ServerGroup_Servers_Server_default_instance_;
class System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey;
class System_Aaa_ServerGroups_ServerGroup_Servers_ServerKeyDefaultTypeInternal;
extern System_Aaa_ServerGroups_ServerGroup_Servers_ServerKeyDefaultTypeInternal _System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey_default_instance_;
class System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config;
class System_Aaa_ServerGroups_ServerGroup_Servers_Server_ConfigDefaultTypeInternal;
extern System_Aaa_ServerGroups_ServerGroup_Servers_Server_ConfigDefaultTypeInternal _System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config_default_instance_;
class System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius;
class System_Aaa_ServerGroups_ServerGroup_Servers_Server_RadiusDefaultTypeInternal;
extern System_Aaa_ServerGroups_ServerGroup_Servers_Server_RadiusDefaultTypeInternal _System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_default_instance_;
class System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config;
class System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_ConfigDefaultTypeInternal;
extern System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_ConfigDefaultTypeInternal _System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config_default_instance_;
class System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State;
class System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_StateDefaultTypeInternal;
extern System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_StateDefaultTypeInternal _System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_default_instance_;
class System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters;
class System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_CountersDefaultTypeInternal;
extern System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_CountersDefaultTypeInternal _System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters_default_instance_;
class System_Aaa_ServerGroups_ServerGroup_Servers_Server_State;
class System_Aaa_ServerGroups_ServerGroup_Servers_Server_StateDefaultTypeInternal;
extern System_Aaa_ServerGroups_ServerGroup_Servers_Server_StateDefaultTypeInternal _System_Aaa_ServerGroups_ServerGroup_Servers_Server_State_default_instance_;
class System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs;
class System_Aaa_ServerGroups_ServerGroup_Servers_Server_TacacsDefaultTypeInternal;
extern System_Aaa_ServerGroups_ServerGroup_Servers_Server_TacacsDefaultTypeInternal _System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_default_instance_;
class System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config;
class System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_ConfigDefaultTypeInternal;
extern System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_ConfigDefaultTypeInternal _System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config_default_instance_;
class System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State;
class System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_StateDefaultTypeInternal;
extern System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_StateDefaultTypeInternal _System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State_default_instance_;
class System_Aaa_ServerGroups_ServerGroup_State;
class System_Aaa_ServerGroups_ServerGroup_StateDefaultTypeInternal;
extern System_Aaa_ServerGroups_ServerGroup_StateDefaultTypeInternal _System_Aaa_ServerGroups_ServerGroup_State_default_instance_;
class System_Aaa_State;
class System_Aaa_StateDefaultTypeInternal;
extern System_Aaa_StateDefaultTypeInternal _System_Aaa_State_default_instance_;
class System_Alarms;
class System_AlarmsDefaultTypeInternal;
extern System_AlarmsDefaultTypeInternal _System_Alarms_default_instance_;
class System_Alarms_Alarm;
class System_Alarms_AlarmDefaultTypeInternal;
extern System_Alarms_AlarmDefaultTypeInternal _System_Alarms_Alarm_default_instance_;
class System_Alarms_AlarmKey;
class System_Alarms_AlarmKeyDefaultTypeInternal;
extern System_Alarms_AlarmKeyDefaultTypeInternal _System_Alarms_AlarmKey_default_instance_;
class System_Alarms_Alarm_Config;
class System_Alarms_Alarm_ConfigDefaultTypeInternal;
extern System_Alarms_Alarm_ConfigDefaultTypeInternal _System_Alarms_Alarm_Config_default_instance_;
class System_Alarms_Alarm_State;
class System_Alarms_Alarm_StateDefaultTypeInternal;
extern System_Alarms_Alarm_StateDefaultTypeInternal _System_Alarms_Alarm_State_default_instance_;
class System_Clock;
class System_ClockDefaultTypeInternal;
extern System_ClockDefaultTypeInternal _System_Clock_default_instance_;
class System_Clock_Config;
class System_Clock_ConfigDefaultTypeInternal;
extern System_Clock_ConfigDefaultTypeInternal _System_Clock_Config_default_instance_;
class System_Clock_State;
class System_Clock_StateDefaultTypeInternal;
extern System_Clock_StateDefaultTypeInternal _System_Clock_State_default_instance_;
class System_Config;
class System_ConfigDefaultTypeInternal;
extern System_ConfigDefaultTypeInternal _System_Config_default_instance_;
class System_Cpus;
class System_CpusDefaultTypeInternal;
extern System_CpusDefaultTypeInternal _System_Cpus_default_instance_;
class System_Cpus_Cpu;
class System_Cpus_CpuDefaultTypeInternal;
extern System_Cpus_CpuDefaultTypeInternal _System_Cpus_Cpu_default_instance_;
class System_Cpus_CpuKey;
class System_Cpus_CpuKeyDefaultTypeInternal;
extern System_Cpus_CpuKeyDefaultTypeInternal _System_Cpus_CpuKey_default_instance_;
class System_Cpus_Cpu_State;
class System_Cpus_Cpu_StateDefaultTypeInternal;
extern System_Cpus_Cpu_StateDefaultTypeInternal _System_Cpus_Cpu_State_default_instance_;
class System_Cpus_Cpu_State_HardwareInterrupt;
class System_Cpus_Cpu_State_HardwareInterruptDefaultTypeInternal;
extern System_Cpus_Cpu_State_HardwareInterruptDefaultTypeInternal _System_Cpus_Cpu_State_HardwareInterrupt_default_instance_;
class System_Cpus_Cpu_State_Idle;
class System_Cpus_Cpu_State_IdleDefaultTypeInternal;
extern System_Cpus_Cpu_State_IdleDefaultTypeInternal _System_Cpus_Cpu_State_Idle_default_instance_;
class System_Cpus_Cpu_State_Kernel;
class System_Cpus_Cpu_State_KernelDefaultTypeInternal;
extern System_Cpus_Cpu_State_KernelDefaultTypeInternal _System_Cpus_Cpu_State_Kernel_default_instance_;
class System_Cpus_Cpu_State_Nice;
class System_Cpus_Cpu_State_NiceDefaultTypeInternal;
extern System_Cpus_Cpu_State_NiceDefaultTypeInternal _System_Cpus_Cpu_State_Nice_default_instance_;
class System_Cpus_Cpu_State_SoftwareInterrupt;
class System_Cpus_Cpu_State_SoftwareInterruptDefaultTypeInternal;
extern System_Cpus_Cpu_State_SoftwareInterruptDefaultTypeInternal _System_Cpus_Cpu_State_SoftwareInterrupt_default_instance_;
class System_Cpus_Cpu_State_Total;
class System_Cpus_Cpu_State_TotalDefaultTypeInternal;
extern System_Cpus_Cpu_State_TotalDefaultTypeInternal _System_Cpus_Cpu_State_Total_default_instance_;
class System_Cpus_Cpu_State_User;
class System_Cpus_Cpu_State_UserDefaultTypeInternal;
extern System_Cpus_Cpu_State_UserDefaultTypeInternal _System_Cpus_Cpu_State_User_default_instance_;
class System_Cpus_Cpu_State_Wait;
class System_Cpus_Cpu_State_WaitDefaultTypeInternal;
extern System_Cpus_Cpu_State_WaitDefaultTypeInternal _System_Cpus_Cpu_State_Wait_default_instance_;
class System_Dns;
class System_DnsDefaultTypeInternal;
extern System_DnsDefaultTypeInternal _System_Dns_default_instance_;
class System_Dns_Config;
class System_Dns_ConfigDefaultTypeInternal;
extern System_Dns_ConfigDefaultTypeInternal _System_Dns_Config_default_instance_;
class System_Dns_HostEntries;
class System_Dns_HostEntriesDefaultTypeInternal;
extern System_Dns_HostEntriesDefaultTypeInternal _System_Dns_HostEntries_default_instance_;
class System_Dns_HostEntries_HostEntry;
class System_Dns_HostEntries_HostEntryDefaultTypeInternal;
extern System_Dns_HostEntries_HostEntryDefaultTypeInternal _System_Dns_HostEntries_HostEntry_default_instance_;
class System_Dns_HostEntries_HostEntryKey;
class System_Dns_HostEntries_HostEntryKeyDefaultTypeInternal;
extern System_Dns_HostEntries_HostEntryKeyDefaultTypeInternal _System_Dns_HostEntries_HostEntryKey_default_instance_;
class System_Dns_HostEntries_HostEntry_Config;
class System_Dns_HostEntries_HostEntry_ConfigDefaultTypeInternal;
extern System_Dns_HostEntries_HostEntry_ConfigDefaultTypeInternal _System_Dns_HostEntries_HostEntry_Config_default_instance_;
class System_Dns_HostEntries_HostEntry_State;
class System_Dns_HostEntries_HostEntry_StateDefaultTypeInternal;
extern System_Dns_HostEntries_HostEntry_StateDefaultTypeInternal _System_Dns_HostEntries_HostEntry_State_default_instance_;
class System_Dns_Servers;
class System_Dns_ServersDefaultTypeInternal;
extern System_Dns_ServersDefaultTypeInternal _System_Dns_Servers_default_instance_;
class System_Dns_Servers_Server;
class System_Dns_Servers_ServerDefaultTypeInternal;
extern System_Dns_Servers_ServerDefaultTypeInternal _System_Dns_Servers_Server_default_instance_;
class System_Dns_Servers_ServerKey;
class System_Dns_Servers_ServerKeyDefaultTypeInternal;
extern System_Dns_Servers_ServerKeyDefaultTypeInternal _System_Dns_Servers_ServerKey_default_instance_;
class System_Dns_Servers_Server_Config;
class System_Dns_Servers_Server_ConfigDefaultTypeInternal;
extern System_Dns_Servers_Server_ConfigDefaultTypeInternal _System_Dns_Servers_Server_Config_default_instance_;
class System_Dns_Servers_Server_State;
class System_Dns_Servers_Server_StateDefaultTypeInternal;
extern System_Dns_Servers_Server_StateDefaultTypeInternal _System_Dns_Servers_Server_State_default_instance_;
class System_Dns_State;
class System_Dns_StateDefaultTypeInternal;
extern System_Dns_StateDefaultTypeInternal _System_Dns_State_default_instance_;
class System_Logging;
class System_LoggingDefaultTypeInternal;
extern System_LoggingDefaultTypeInternal _System_Logging_default_instance_;
class System_Logging_Console;
class System_Logging_ConsoleDefaultTypeInternal;
extern System_Logging_ConsoleDefaultTypeInternal _System_Logging_Console_default_instance_;
class System_Logging_Console_Config;
class System_Logging_Console_ConfigDefaultTypeInternal;
extern System_Logging_Console_ConfigDefaultTypeInternal _System_Logging_Console_Config_default_instance_;
class System_Logging_Console_Selectors;
class System_Logging_Console_SelectorsDefaultTypeInternal;
extern System_Logging_Console_SelectorsDefaultTypeInternal _System_Logging_Console_Selectors_default_instance_;
class System_Logging_Console_Selectors_Selector;
class System_Logging_Console_Selectors_SelectorDefaultTypeInternal;
extern System_Logging_Console_Selectors_SelectorDefaultTypeInternal _System_Logging_Console_Selectors_Selector_default_instance_;
class System_Logging_Console_Selectors_SelectorKey;
class System_Logging_Console_Selectors_SelectorKeyDefaultTypeInternal;
extern System_Logging_Console_Selectors_SelectorKeyDefaultTypeInternal _System_Logging_Console_Selectors_SelectorKey_default_instance_;
class System_Logging_Console_Selectors_Selector_Config;
class System_Logging_Console_Selectors_Selector_ConfigDefaultTypeInternal;
extern System_Logging_Console_Selectors_Selector_ConfigDefaultTypeInternal _System_Logging_Console_Selectors_Selector_Config_default_instance_;
class System_Logging_Console_Selectors_Selector_State;
class System_Logging_Console_Selectors_Selector_StateDefaultTypeInternal;
extern System_Logging_Console_Selectors_Selector_StateDefaultTypeInternal _System_Logging_Console_Selectors_Selector_State_default_instance_;
class System_Logging_Console_State;
class System_Logging_Console_StateDefaultTypeInternal;
extern System_Logging_Console_StateDefaultTypeInternal _System_Logging_Console_State_default_instance_;
class System_Logging_RemoteServers;
class System_Logging_RemoteServersDefaultTypeInternal;
extern System_Logging_RemoteServersDefaultTypeInternal _System_Logging_RemoteServers_default_instance_;
class System_Logging_RemoteServers_RemoteServer;
class System_Logging_RemoteServers_RemoteServerDefaultTypeInternal;
extern System_Logging_RemoteServers_RemoteServerDefaultTypeInternal _System_Logging_RemoteServers_RemoteServer_default_instance_;
class System_Logging_RemoteServers_RemoteServerKey;
class System_Logging_RemoteServers_RemoteServerKeyDefaultTypeInternal;
extern System_Logging_RemoteServers_RemoteServerKeyDefaultTypeInternal _System_Logging_RemoteServers_RemoteServerKey_default_instance_;
class System_Logging_RemoteServers_RemoteServer_Config;
class System_Logging_RemoteServers_RemoteServer_ConfigDefaultTypeInternal;
extern System_Logging_RemoteServers_RemoteServer_ConfigDefaultTypeInternal _System_Logging_RemoteServers_RemoteServer_Config_default_instance_;
class System_Logging_RemoteServers_RemoteServer_Selectors;
class System_Logging_RemoteServers_RemoteServer_SelectorsDefaultTypeInternal;
extern System_Logging_RemoteServers_RemoteServer_SelectorsDefaultTypeInternal _System_Logging_RemoteServers_RemoteServer_Selectors_default_instance_;
class System_Logging_RemoteServers_RemoteServer_Selectors_Selector;
class System_Logging_RemoteServers_RemoteServer_Selectors_SelectorDefaultTypeInternal;
extern System_Logging_RemoteServers_RemoteServer_Selectors_SelectorDefaultTypeInternal _System_Logging_RemoteServers_RemoteServer_Selectors_Selector_default_instance_;
class System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey;
class System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKeyDefaultTypeInternal;
extern System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKeyDefaultTypeInternal _System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey_default_instance_;
class System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config;
class System_Logging_RemoteServers_RemoteServer_Selectors_Selector_ConfigDefaultTypeInternal;
extern System_Logging_RemoteServers_RemoteServer_Selectors_Selector_ConfigDefaultTypeInternal _System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config_default_instance_;
class System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State;
class System_Logging_RemoteServers_RemoteServer_Selectors_Selector_StateDefaultTypeInternal;
extern System_Logging_RemoteServers_RemoteServer_Selectors_Selector_StateDefaultTypeInternal _System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State_default_instance_;
class System_Logging_RemoteServers_RemoteServer_State;
class System_Logging_RemoteServers_RemoteServer_StateDefaultTypeInternal;
extern System_Logging_RemoteServers_RemoteServer_StateDefaultTypeInternal _System_Logging_RemoteServers_RemoteServer_State_default_instance_;
class System_Memory;
class System_MemoryDefaultTypeInternal;
extern System_MemoryDefaultTypeInternal _System_Memory_default_instance_;
class System_Memory_Config;
class System_Memory_ConfigDefaultTypeInternal;
extern System_Memory_ConfigDefaultTypeInternal _System_Memory_Config_default_instance_;
class System_Memory_State;
class System_Memory_StateDefaultTypeInternal;
extern System_Memory_StateDefaultTypeInternal _System_Memory_State_default_instance_;
class System_Ntp;
class System_NtpDefaultTypeInternal;
extern System_NtpDefaultTypeInternal _System_Ntp_default_instance_;
class System_Ntp_Config;
class System_Ntp_ConfigDefaultTypeInternal;
extern System_Ntp_ConfigDefaultTypeInternal _System_Ntp_Config_default_instance_;
class System_Ntp_NtpKeys;
class System_Ntp_NtpKeysDefaultTypeInternal;
extern System_Ntp_NtpKeysDefaultTypeInternal _System_Ntp_NtpKeys_default_instance_;
class System_Ntp_NtpKeys_NtpKey;
class System_Ntp_NtpKeys_NtpKeyDefaultTypeInternal;
extern System_Ntp_NtpKeys_NtpKeyDefaultTypeInternal _System_Ntp_NtpKeys_NtpKey_default_instance_;
class System_Ntp_NtpKeys_NtpKeyKey;
class System_Ntp_NtpKeys_NtpKeyKeyDefaultTypeInternal;
extern System_Ntp_NtpKeys_NtpKeyKeyDefaultTypeInternal _System_Ntp_NtpKeys_NtpKeyKey_default_instance_;
class System_Ntp_NtpKeys_NtpKey_Config;
class System_Ntp_NtpKeys_NtpKey_ConfigDefaultTypeInternal;
extern System_Ntp_NtpKeys_NtpKey_ConfigDefaultTypeInternal _System_Ntp_NtpKeys_NtpKey_Config_default_instance_;
class System_Ntp_NtpKeys_NtpKey_State;
class System_Ntp_NtpKeys_NtpKey_StateDefaultTypeInternal;
extern System_Ntp_NtpKeys_NtpKey_StateDefaultTypeInternal _System_Ntp_NtpKeys_NtpKey_State_default_instance_;
class System_Ntp_Servers;
class System_Ntp_ServersDefaultTypeInternal;
extern System_Ntp_ServersDefaultTypeInternal _System_Ntp_Servers_default_instance_;
class System_Ntp_Servers_Server;
class System_Ntp_Servers_ServerDefaultTypeInternal;
extern System_Ntp_Servers_ServerDefaultTypeInternal _System_Ntp_Servers_Server_default_instance_;
class System_Ntp_Servers_ServerKey;
class System_Ntp_Servers_ServerKeyDefaultTypeInternal;
extern System_Ntp_Servers_ServerKeyDefaultTypeInternal _System_Ntp_Servers_ServerKey_default_instance_;
class System_Ntp_Servers_Server_Config;
class System_Ntp_Servers_Server_ConfigDefaultTypeInternal;
extern System_Ntp_Servers_Server_ConfigDefaultTypeInternal _System_Ntp_Servers_Server_Config_default_instance_;
class System_Ntp_Servers_Server_State;
class System_Ntp_Servers_Server_StateDefaultTypeInternal;
extern System_Ntp_Servers_Server_StateDefaultTypeInternal _System_Ntp_Servers_Server_State_default_instance_;
class System_Ntp_State;
class System_Ntp_StateDefaultTypeInternal;
extern System_Ntp_StateDefaultTypeInternal _System_Ntp_State_default_instance_;
class System_Openflow;
class System_OpenflowDefaultTypeInternal;
extern System_OpenflowDefaultTypeInternal _System_Openflow_default_instance_;
class System_Openflow_Agent;
class System_Openflow_AgentDefaultTypeInternal;
extern System_Openflow_AgentDefaultTypeInternal _System_Openflow_Agent_default_instance_;
class System_Openflow_Agent_Config;
class System_Openflow_Agent_ConfigDefaultTypeInternal;
extern System_Openflow_Agent_ConfigDefaultTypeInternal _System_Openflow_Agent_Config_default_instance_;
class System_Openflow_Agent_State;
class System_Openflow_Agent_StateDefaultTypeInternal;
extern System_Openflow_Agent_StateDefaultTypeInternal _System_Openflow_Agent_State_default_instance_;
class System_Openflow_Controllers;
class System_Openflow_ControllersDefaultTypeInternal;
extern System_Openflow_ControllersDefaultTypeInternal _System_Openflow_Controllers_default_instance_;
class System_Openflow_Controllers_Controller;
class System_Openflow_Controllers_ControllerDefaultTypeInternal;
extern System_Openflow_Controllers_ControllerDefaultTypeInternal _System_Openflow_Controllers_Controller_default_instance_;
class System_Openflow_Controllers_ControllerKey;
class System_Openflow_Controllers_ControllerKeyDefaultTypeInternal;
extern System_Openflow_Controllers_ControllerKeyDefaultTypeInternal _System_Openflow_Controllers_ControllerKey_default_instance_;
class System_Openflow_Controllers_Controller_Config;
class System_Openflow_Controllers_Controller_ConfigDefaultTypeInternal;
extern System_Openflow_Controllers_Controller_ConfigDefaultTypeInternal _System_Openflow_Controllers_Controller_Config_default_instance_;
class System_Openflow_Controllers_Controller_Connections;
class System_Openflow_Controllers_Controller_ConnectionsDefaultTypeInternal;
extern System_Openflow_Controllers_Controller_ConnectionsDefaultTypeInternal _System_Openflow_Controllers_Controller_Connections_default_instance_;
class System_Openflow_Controllers_Controller_Connections_Connection;
class System_Openflow_Controllers_Controller_Connections_ConnectionDefaultTypeInternal;
extern System_Openflow_Controllers_Controller_Connections_ConnectionDefaultTypeInternal _System_Openflow_Controllers_Controller_Connections_Connection_default_instance_;
class System_Openflow_Controllers_Controller_Connections_ConnectionKey;
class System_Openflow_Controllers_Controller_Connections_ConnectionKeyDefaultTypeInternal;
extern System_Openflow_Controllers_Controller_Connections_ConnectionKeyDefaultTypeInternal _System_Openflow_Controllers_Controller_Connections_ConnectionKey_default_instance_;
class System_Openflow_Controllers_Controller_Connections_Connection_Config;
class System_Openflow_Controllers_Controller_Connections_Connection_ConfigDefaultTypeInternal;
extern System_Openflow_Controllers_Controller_Connections_Connection_ConfigDefaultTypeInternal _System_Openflow_Controllers_Controller_Connections_Connection_Config_default_instance_;
class System_Openflow_Controllers_Controller_Connections_Connection_State;
class System_Openflow_Controllers_Controller_Connections_Connection_StateDefaultTypeInternal;
extern System_Openflow_Controllers_Controller_Connections_Connection_StateDefaultTypeInternal _System_Openflow_Controllers_Controller_Connections_Connection_State_default_instance_;
class System_Openflow_Controllers_Controller_State;
class System_Openflow_Controllers_Controller_StateDefaultTypeInternal;
extern System_Openflow_Controllers_Controller_StateDefaultTypeInternal _System_Openflow_Controllers_Controller_State_default_instance_;
class System_Processes;
class System_ProcessesDefaultTypeInternal;
extern System_ProcessesDefaultTypeInternal _System_Processes_default_instance_;
class System_Processes_Process;
class System_Processes_ProcessDefaultTypeInternal;
extern System_Processes_ProcessDefaultTypeInternal _System_Processes_Process_default_instance_;
class System_Processes_ProcessKey;
class System_Processes_ProcessKeyDefaultTypeInternal;
extern System_Processes_ProcessKeyDefaultTypeInternal _System_Processes_ProcessKey_default_instance_;
class System_Processes_Process_State;
class System_Processes_Process_StateDefaultTypeInternal;
extern System_Processes_Process_StateDefaultTypeInternal _System_Processes_Process_State_default_instance_;
class System_SshServer;
class System_SshServerDefaultTypeInternal;
extern System_SshServerDefaultTypeInternal _System_SshServer_default_instance_;
class System_SshServer_Config;
class System_SshServer_ConfigDefaultTypeInternal;
extern System_SshServer_ConfigDefaultTypeInternal _System_SshServer_Config_default_instance_;
class System_SshServer_State;
class System_SshServer_StateDefaultTypeInternal;
extern System_SshServer_StateDefaultTypeInternal _System_SshServer_State_default_instance_;
class System_State;
class System_StateDefaultTypeInternal;
extern System_StateDefaultTypeInternal _System_State_default_instance_;
class System_TelnetServer;
class System_TelnetServerDefaultTypeInternal;
extern System_TelnetServerDefaultTypeInternal _System_TelnetServer_default_instance_;
class System_TelnetServer_Config;
class System_TelnetServer_ConfigDefaultTypeInternal;
extern System_TelnetServer_ConfigDefaultTypeInternal _System_TelnetServer_Config_default_instance_;
class System_TelnetServer_State;
class System_TelnetServer_StateDefaultTypeInternal;
extern System_TelnetServer_StateDefaultTypeInternal _System_TelnetServer_State_default_instance_;
}  // namespace openconfig_system
}  // namespace openconfig
namespace openconfig {
namespace openconfig_system {

enum System_Aaa_Accounting_Events_Event_Config_Record {
  System_Aaa_Accounting_Events_Event_Config_Record_RECORD_UNSET = 0,
  System_Aaa_Accounting_Events_Event_Config_Record_RECORD_START_STOP = 1,
  System_Aaa_Accounting_Events_Event_Config_Record_RECORD_STOP = 2,
  System_Aaa_Accounting_Events_Event_Config_Record_System_Aaa_Accounting_Events_Event_Config_Record_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  System_Aaa_Accounting_Events_Event_Config_Record_System_Aaa_Accounting_Events_Event_Config_Record_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool System_Aaa_Accounting_Events_Event_Config_Record_IsValid(int value);
const System_Aaa_Accounting_Events_Event_Config_Record System_Aaa_Accounting_Events_Event_Config_Record_Record_MIN = System_Aaa_Accounting_Events_Event_Config_Record_RECORD_UNSET;
const System_Aaa_Accounting_Events_Event_Config_Record System_Aaa_Accounting_Events_Event_Config_Record_Record_MAX = System_Aaa_Accounting_Events_Event_Config_Record_RECORD_STOP;
const int System_Aaa_Accounting_Events_Event_Config_Record_Record_ARRAYSIZE = System_Aaa_Accounting_Events_Event_Config_Record_Record_MAX + 1;

const ::google::protobuf::EnumDescriptor* System_Aaa_Accounting_Events_Event_Config_Record_descriptor();
inline const ::std::string& System_Aaa_Accounting_Events_Event_Config_Record_Name(System_Aaa_Accounting_Events_Event_Config_Record value) {
  return ::google::protobuf::internal::NameOfEnum(
    System_Aaa_Accounting_Events_Event_Config_Record_descriptor(), value);
}
inline bool System_Aaa_Accounting_Events_Event_Config_Record_Parse(
    const ::std::string& name, System_Aaa_Accounting_Events_Event_Config_Record* value) {
  return ::google::protobuf::internal::ParseNamedEnum<System_Aaa_Accounting_Events_Event_Config_Record>(
    System_Aaa_Accounting_Events_Event_Config_Record_descriptor(), name, value);
}
enum System_Aaa_Accounting_Events_Event_State_Record {
  System_Aaa_Accounting_Events_Event_State_Record_RECORD_UNSET = 0,
  System_Aaa_Accounting_Events_Event_State_Record_RECORD_START_STOP = 1,
  System_Aaa_Accounting_Events_Event_State_Record_RECORD_STOP = 2,
  System_Aaa_Accounting_Events_Event_State_Record_System_Aaa_Accounting_Events_Event_State_Record_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  System_Aaa_Accounting_Events_Event_State_Record_System_Aaa_Accounting_Events_Event_State_Record_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool System_Aaa_Accounting_Events_Event_State_Record_IsValid(int value);
const System_Aaa_Accounting_Events_Event_State_Record System_Aaa_Accounting_Events_Event_State_Record_Record_MIN = System_Aaa_Accounting_Events_Event_State_Record_RECORD_UNSET;
const System_Aaa_Accounting_Events_Event_State_Record System_Aaa_Accounting_Events_Event_State_Record_Record_MAX = System_Aaa_Accounting_Events_Event_State_Record_RECORD_STOP;
const int System_Aaa_Accounting_Events_Event_State_Record_Record_ARRAYSIZE = System_Aaa_Accounting_Events_Event_State_Record_Record_MAX + 1;

const ::google::protobuf::EnumDescriptor* System_Aaa_Accounting_Events_Event_State_Record_descriptor();
inline const ::std::string& System_Aaa_Accounting_Events_Event_State_Record_Name(System_Aaa_Accounting_Events_Event_State_Record value) {
  return ::google::protobuf::internal::NameOfEnum(
    System_Aaa_Accounting_Events_Event_State_Record_descriptor(), value);
}
inline bool System_Aaa_Accounting_Events_Event_State_Record_Parse(
    const ::std::string& name, System_Aaa_Accounting_Events_Event_State_Record* value) {
  return ::google::protobuf::internal::ParseNamedEnum<System_Aaa_Accounting_Events_Event_State_Record>(
    System_Aaa_Accounting_Events_Event_State_Record_descriptor(), name, value);
}
enum System_Cpus_Cpu_State_Index {
  System_Cpus_Cpu_State_Index_INDEX_UNSET = 0,
  System_Cpus_Cpu_State_Index_INDEX_ALL = 1,
  System_Cpus_Cpu_State_Index_System_Cpus_Cpu_State_Index_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  System_Cpus_Cpu_State_Index_System_Cpus_Cpu_State_Index_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool System_Cpus_Cpu_State_Index_IsValid(int value);
const System_Cpus_Cpu_State_Index System_Cpus_Cpu_State_Index_Index_MIN = System_Cpus_Cpu_State_Index_INDEX_UNSET;
const System_Cpus_Cpu_State_Index System_Cpus_Cpu_State_Index_Index_MAX = System_Cpus_Cpu_State_Index_INDEX_ALL;
const int System_Cpus_Cpu_State_Index_Index_ARRAYSIZE = System_Cpus_Cpu_State_Index_Index_MAX + 1;

const ::google::protobuf::EnumDescriptor* System_Cpus_Cpu_State_Index_descriptor();
inline const ::std::string& System_Cpus_Cpu_State_Index_Name(System_Cpus_Cpu_State_Index value) {
  return ::google::protobuf::internal::NameOfEnum(
    System_Cpus_Cpu_State_Index_descriptor(), value);
}
inline bool System_Cpus_Cpu_State_Index_Parse(
    const ::std::string& name, System_Cpus_Cpu_State_Index* value) {
  return ::google::protobuf::internal::ParseNamedEnum<System_Cpus_Cpu_State_Index>(
    System_Cpus_Cpu_State_Index_descriptor(), name, value);
}
enum System_Cpus_CpuKey_Index {
  System_Cpus_CpuKey_Index_INDEX_UNSET = 0,
  System_Cpus_CpuKey_Index_INDEX_ALL = 1,
  System_Cpus_CpuKey_Index_System_Cpus_CpuKey_Index_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  System_Cpus_CpuKey_Index_System_Cpus_CpuKey_Index_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool System_Cpus_CpuKey_Index_IsValid(int value);
const System_Cpus_CpuKey_Index System_Cpus_CpuKey_Index_Index_MIN = System_Cpus_CpuKey_Index_INDEX_UNSET;
const System_Cpus_CpuKey_Index System_Cpus_CpuKey_Index_Index_MAX = System_Cpus_CpuKey_Index_INDEX_ALL;
const int System_Cpus_CpuKey_Index_Index_ARRAYSIZE = System_Cpus_CpuKey_Index_Index_MAX + 1;

const ::google::protobuf::EnumDescriptor* System_Cpus_CpuKey_Index_descriptor();
inline const ::std::string& System_Cpus_CpuKey_Index_Name(System_Cpus_CpuKey_Index value) {
  return ::google::protobuf::internal::NameOfEnum(
    System_Cpus_CpuKey_Index_descriptor(), value);
}
inline bool System_Cpus_CpuKey_Index_Parse(
    const ::std::string& name, System_Cpus_CpuKey_Index* value) {
  return ::google::protobuf::internal::ParseNamedEnum<System_Cpus_CpuKey_Index>(
    System_Cpus_CpuKey_Index_descriptor(), name, value);
}
enum System_Ntp_Servers_Server_Config_AssociationType {
  System_Ntp_Servers_Server_Config_AssociationType_ASSOCIATIONTYPE_SERVER = 0,
  System_Ntp_Servers_Server_Config_AssociationType_ASSOCIATIONTYPE_PEER = 2,
  System_Ntp_Servers_Server_Config_AssociationType_ASSOCIATIONTYPE_POOL = 3,
  System_Ntp_Servers_Server_Config_AssociationType_System_Ntp_Servers_Server_Config_AssociationType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  System_Ntp_Servers_Server_Config_AssociationType_System_Ntp_Servers_Server_Config_AssociationType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool System_Ntp_Servers_Server_Config_AssociationType_IsValid(int value);
const System_Ntp_Servers_Server_Config_AssociationType System_Ntp_Servers_Server_Config_AssociationType_AssociationType_MIN = System_Ntp_Servers_Server_Config_AssociationType_ASSOCIATIONTYPE_SERVER;
const System_Ntp_Servers_Server_Config_AssociationType System_Ntp_Servers_Server_Config_AssociationType_AssociationType_MAX = System_Ntp_Servers_Server_Config_AssociationType_ASSOCIATIONTYPE_POOL;
const int System_Ntp_Servers_Server_Config_AssociationType_AssociationType_ARRAYSIZE = System_Ntp_Servers_Server_Config_AssociationType_AssociationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* System_Ntp_Servers_Server_Config_AssociationType_descriptor();
inline const ::std::string& System_Ntp_Servers_Server_Config_AssociationType_Name(System_Ntp_Servers_Server_Config_AssociationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    System_Ntp_Servers_Server_Config_AssociationType_descriptor(), value);
}
inline bool System_Ntp_Servers_Server_Config_AssociationType_Parse(
    const ::std::string& name, System_Ntp_Servers_Server_Config_AssociationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<System_Ntp_Servers_Server_Config_AssociationType>(
    System_Ntp_Servers_Server_Config_AssociationType_descriptor(), name, value);
}
enum System_Ntp_Servers_Server_State_AssociationType {
  System_Ntp_Servers_Server_State_AssociationType_ASSOCIATIONTYPE_SERVER = 0,
  System_Ntp_Servers_Server_State_AssociationType_ASSOCIATIONTYPE_PEER = 2,
  System_Ntp_Servers_Server_State_AssociationType_ASSOCIATIONTYPE_POOL = 3,
  System_Ntp_Servers_Server_State_AssociationType_System_Ntp_Servers_Server_State_AssociationType_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  System_Ntp_Servers_Server_State_AssociationType_System_Ntp_Servers_Server_State_AssociationType_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool System_Ntp_Servers_Server_State_AssociationType_IsValid(int value);
const System_Ntp_Servers_Server_State_AssociationType System_Ntp_Servers_Server_State_AssociationType_AssociationType_MIN = System_Ntp_Servers_Server_State_AssociationType_ASSOCIATIONTYPE_SERVER;
const System_Ntp_Servers_Server_State_AssociationType System_Ntp_Servers_Server_State_AssociationType_AssociationType_MAX = System_Ntp_Servers_Server_State_AssociationType_ASSOCIATIONTYPE_POOL;
const int System_Ntp_Servers_Server_State_AssociationType_AssociationType_ARRAYSIZE = System_Ntp_Servers_Server_State_AssociationType_AssociationType_MAX + 1;

const ::google::protobuf::EnumDescriptor* System_Ntp_Servers_Server_State_AssociationType_descriptor();
inline const ::std::string& System_Ntp_Servers_Server_State_AssociationType_Name(System_Ntp_Servers_Server_State_AssociationType value) {
  return ::google::protobuf::internal::NameOfEnum(
    System_Ntp_Servers_Server_State_AssociationType_descriptor(), value);
}
inline bool System_Ntp_Servers_Server_State_AssociationType_Parse(
    const ::std::string& name, System_Ntp_Servers_Server_State_AssociationType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<System_Ntp_Servers_Server_State_AssociationType>(
    System_Ntp_Servers_Server_State_AssociationType_descriptor(), name, value);
}
enum System_SshServer_Config_ProtocolVersion {
  System_SshServer_Config_ProtocolVersion_PROTOCOLVERSION_V2 = 0,
  System_SshServer_Config_ProtocolVersion_PROTOCOLVERSION_V1 = 2,
  System_SshServer_Config_ProtocolVersion_PROTOCOLVERSION_V1_V2 = 3,
  System_SshServer_Config_ProtocolVersion_System_SshServer_Config_ProtocolVersion_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  System_SshServer_Config_ProtocolVersion_System_SshServer_Config_ProtocolVersion_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool System_SshServer_Config_ProtocolVersion_IsValid(int value);
const System_SshServer_Config_ProtocolVersion System_SshServer_Config_ProtocolVersion_ProtocolVersion_MIN = System_SshServer_Config_ProtocolVersion_PROTOCOLVERSION_V2;
const System_SshServer_Config_ProtocolVersion System_SshServer_Config_ProtocolVersion_ProtocolVersion_MAX = System_SshServer_Config_ProtocolVersion_PROTOCOLVERSION_V1_V2;
const int System_SshServer_Config_ProtocolVersion_ProtocolVersion_ARRAYSIZE = System_SshServer_Config_ProtocolVersion_ProtocolVersion_MAX + 1;

const ::google::protobuf::EnumDescriptor* System_SshServer_Config_ProtocolVersion_descriptor();
inline const ::std::string& System_SshServer_Config_ProtocolVersion_Name(System_SshServer_Config_ProtocolVersion value) {
  return ::google::protobuf::internal::NameOfEnum(
    System_SshServer_Config_ProtocolVersion_descriptor(), value);
}
inline bool System_SshServer_Config_ProtocolVersion_Parse(
    const ::std::string& name, System_SshServer_Config_ProtocolVersion* value) {
  return ::google::protobuf::internal::ParseNamedEnum<System_SshServer_Config_ProtocolVersion>(
    System_SshServer_Config_ProtocolVersion_descriptor(), name, value);
}
enum System_SshServer_State_ProtocolVersion {
  System_SshServer_State_ProtocolVersion_PROTOCOLVERSION_V2 = 0,
  System_SshServer_State_ProtocolVersion_PROTOCOLVERSION_V1 = 2,
  System_SshServer_State_ProtocolVersion_PROTOCOLVERSION_V1_V2 = 3,
  System_SshServer_State_ProtocolVersion_System_SshServer_State_ProtocolVersion_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  System_SshServer_State_ProtocolVersion_System_SshServer_State_ProtocolVersion_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
bool System_SshServer_State_ProtocolVersion_IsValid(int value);
const System_SshServer_State_ProtocolVersion System_SshServer_State_ProtocolVersion_ProtocolVersion_MIN = System_SshServer_State_ProtocolVersion_PROTOCOLVERSION_V2;
const System_SshServer_State_ProtocolVersion System_SshServer_State_ProtocolVersion_ProtocolVersion_MAX = System_SshServer_State_ProtocolVersion_PROTOCOLVERSION_V1_V2;
const int System_SshServer_State_ProtocolVersion_ProtocolVersion_ARRAYSIZE = System_SshServer_State_ProtocolVersion_ProtocolVersion_MAX + 1;

const ::google::protobuf::EnumDescriptor* System_SshServer_State_ProtocolVersion_descriptor();
inline const ::std::string& System_SshServer_State_ProtocolVersion_Name(System_SshServer_State_ProtocolVersion value) {
  return ::google::protobuf::internal::NameOfEnum(
    System_SshServer_State_ProtocolVersion_descriptor(), value);
}
inline bool System_SshServer_State_ProtocolVersion_Parse(
    const ::std::string& name, System_SshServer_State_ProtocolVersion* value) {
  return ::google::protobuf::internal::ParseNamedEnum<System_SshServer_State_ProtocolVersion>(
    System_SshServer_State_ProtocolVersion_descriptor(), name, value);
}
// ===================================================================

class System_Aaa_Accounting_Config_AccountingMethodUnion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Accounting.Config.AccountingMethodUnion) */ {
 public:
  System_Aaa_Accounting_Config_AccountingMethodUnion();
  virtual ~System_Aaa_Accounting_Config_AccountingMethodUnion();

  System_Aaa_Accounting_Config_AccountingMethodUnion(const System_Aaa_Accounting_Config_AccountingMethodUnion& from);

  inline System_Aaa_Accounting_Config_AccountingMethodUnion& operator=(const System_Aaa_Accounting_Config_AccountingMethodUnion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Accounting_Config_AccountingMethodUnion(System_Aaa_Accounting_Config_AccountingMethodUnion&& from) noexcept
    : System_Aaa_Accounting_Config_AccountingMethodUnion() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Accounting_Config_AccountingMethodUnion& operator=(System_Aaa_Accounting_Config_AccountingMethodUnion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Accounting_Config_AccountingMethodUnion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Accounting_Config_AccountingMethodUnion* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Accounting_Config_AccountingMethodUnion*>(
               &_System_Aaa_Accounting_Config_AccountingMethodUnion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(System_Aaa_Accounting_Config_AccountingMethodUnion* other);
  friend void swap(System_Aaa_Accounting_Config_AccountingMethodUnion& a, System_Aaa_Accounting_Config_AccountingMethodUnion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Accounting_Config_AccountingMethodUnion* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Accounting_Config_AccountingMethodUnion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Accounting_Config_AccountingMethodUnion& from);
  void MergeFrom(const System_Aaa_Accounting_Config_AccountingMethodUnion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Accounting_Config_AccountingMethodUnion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string accounting_method_string = 308208143;
  void clear_accounting_method_string();
  static const int kAccountingMethodStringFieldNumber = 308208143;
  const ::std::string& accounting_method_string() const;
  void set_accounting_method_string(const ::std::string& value);
  #if LANG_CXX11
  void set_accounting_method_string(::std::string&& value);
  #endif
  void set_accounting_method_string(const char* value);
  void set_accounting_method_string(const char* value, size_t size);
  ::std::string* mutable_accounting_method_string();
  ::std::string* release_accounting_method_string();
  void set_allocated_accounting_method_string(::std::string* accounting_method_string);

  // .openconfig.enums.OpenconfigAaaTypesAAAMETHODTYPE accounting_method_openconfigaaatypesaaamethodtype = 520228688;
  void clear_accounting_method_openconfigaaatypesaaamethodtype();
  static const int kAccountingMethodOpenconfigaaatypesaaamethodtypeFieldNumber = 520228688;
  ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE accounting_method_openconfigaaatypesaaamethodtype() const;
  void set_accounting_method_openconfigaaatypesaaamethodtype(::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Accounting.Config.AccountingMethodUnion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr accounting_method_string_;
  int accounting_method_openconfigaaatypesaaamethodtype_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Accounting_Config_AccountingMethodUnionImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Accounting_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Accounting.Config) */ {
 public:
  System_Aaa_Accounting_Config();
  virtual ~System_Aaa_Accounting_Config();

  System_Aaa_Accounting_Config(const System_Aaa_Accounting_Config& from);

  inline System_Aaa_Accounting_Config& operator=(const System_Aaa_Accounting_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Accounting_Config(System_Aaa_Accounting_Config&& from) noexcept
    : System_Aaa_Accounting_Config() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Accounting_Config& operator=(System_Aaa_Accounting_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Accounting_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Accounting_Config* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Accounting_Config*>(
               &_System_Aaa_Accounting_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(System_Aaa_Accounting_Config* other);
  friend void swap(System_Aaa_Accounting_Config& a, System_Aaa_Accounting_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Accounting_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Accounting_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Accounting_Config& from);
  void MergeFrom(const System_Aaa_Accounting_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Accounting_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Aaa_Accounting_Config_AccountingMethodUnion AccountingMethodUnion;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_system.System.Aaa.Accounting.Config.AccountingMethodUnion accounting_method = 29748713 [(.yext.schemapath) = "/system/aaa/accounting/config/accounting-method"];
  int accounting_method_size() const;
  void clear_accounting_method();
  static const int kAccountingMethodFieldNumber = 29748713;
  const ::openconfig::openconfig_system::System_Aaa_Accounting_Config_AccountingMethodUnion& accounting_method(int index) const;
  ::openconfig::openconfig_system::System_Aaa_Accounting_Config_AccountingMethodUnion* mutable_accounting_method(int index);
  ::openconfig::openconfig_system::System_Aaa_Accounting_Config_AccountingMethodUnion* add_accounting_method();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Accounting_Config_AccountingMethodUnion >*
      mutable_accounting_method();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Accounting_Config_AccountingMethodUnion >&
      accounting_method() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Accounting.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Accounting_Config_AccountingMethodUnion > accounting_method_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Accounting_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Accounting_Events_Event_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.Config) */ {
 public:
  System_Aaa_Accounting_Events_Event_Config();
  virtual ~System_Aaa_Accounting_Events_Event_Config();

  System_Aaa_Accounting_Events_Event_Config(const System_Aaa_Accounting_Events_Event_Config& from);

  inline System_Aaa_Accounting_Events_Event_Config& operator=(const System_Aaa_Accounting_Events_Event_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Accounting_Events_Event_Config(System_Aaa_Accounting_Events_Event_Config&& from) noexcept
    : System_Aaa_Accounting_Events_Event_Config() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Accounting_Events_Event_Config& operator=(System_Aaa_Accounting_Events_Event_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Accounting_Events_Event_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Accounting_Events_Event_Config* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Accounting_Events_Event_Config*>(
               &_System_Aaa_Accounting_Events_Event_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(System_Aaa_Accounting_Events_Event_Config* other);
  friend void swap(System_Aaa_Accounting_Events_Event_Config& a, System_Aaa_Accounting_Events_Event_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Accounting_Events_Event_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Accounting_Events_Event_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Accounting_Events_Event_Config& from);
  void MergeFrom(const System_Aaa_Accounting_Events_Event_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Accounting_Events_Event_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Aaa_Accounting_Events_Event_Config_Record Record;
  static const Record RECORD_UNSET =
    System_Aaa_Accounting_Events_Event_Config_Record_RECORD_UNSET;
  static const Record RECORD_START_STOP =
    System_Aaa_Accounting_Events_Event_Config_Record_RECORD_START_STOP;
  static const Record RECORD_STOP =
    System_Aaa_Accounting_Events_Event_Config_Record_RECORD_STOP;
  static inline bool Record_IsValid(int value) {
    return System_Aaa_Accounting_Events_Event_Config_Record_IsValid(value);
  }
  static const Record Record_MIN =
    System_Aaa_Accounting_Events_Event_Config_Record_Record_MIN;
  static const Record Record_MAX =
    System_Aaa_Accounting_Events_Event_Config_Record_Record_MAX;
  static const int Record_ARRAYSIZE =
    System_Aaa_Accounting_Events_Event_Config_Record_Record_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Record_descriptor() {
    return System_Aaa_Accounting_Events_Event_Config_Record_descriptor();
  }
  static inline const ::std::string& Record_Name(Record value) {
    return System_Aaa_Accounting_Events_Event_Config_Record_Name(value);
  }
  static inline bool Record_Parse(const ::std::string& name,
      Record* value) {
    return System_Aaa_Accounting_Events_Event_Config_Record_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .openconfig.enums.OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE event_type = 31080482 [(.yext.schemapath) = "/system/aaa/accounting/events/event/config/event-type"];
  void clear_event_type();
  static const int kEventTypeFieldNumber = 31080482;
  ::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE event_type() const;
  void set_event_type(::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE value);

  // .openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.Config.Record record = 140048324 [(.yext.schemapath) = "/system/aaa/accounting/events/event/config/record"];
  void clear_record();
  static const int kRecordFieldNumber = 140048324;
  ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_Config_Record record() const;
  void set_record(::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_Config_Record value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int event_type_;
  int record_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Accounting_Events_Event_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Accounting_Events_Event_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.State) */ {
 public:
  System_Aaa_Accounting_Events_Event_State();
  virtual ~System_Aaa_Accounting_Events_Event_State();

  System_Aaa_Accounting_Events_Event_State(const System_Aaa_Accounting_Events_Event_State& from);

  inline System_Aaa_Accounting_Events_Event_State& operator=(const System_Aaa_Accounting_Events_Event_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Accounting_Events_Event_State(System_Aaa_Accounting_Events_Event_State&& from) noexcept
    : System_Aaa_Accounting_Events_Event_State() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Accounting_Events_Event_State& operator=(System_Aaa_Accounting_Events_Event_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Accounting_Events_Event_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Accounting_Events_Event_State* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Accounting_Events_Event_State*>(
               &_System_Aaa_Accounting_Events_Event_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(System_Aaa_Accounting_Events_Event_State* other);
  friend void swap(System_Aaa_Accounting_Events_Event_State& a, System_Aaa_Accounting_Events_Event_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Accounting_Events_Event_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Accounting_Events_Event_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Accounting_Events_Event_State& from);
  void MergeFrom(const System_Aaa_Accounting_Events_Event_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Accounting_Events_Event_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Aaa_Accounting_Events_Event_State_Record Record;
  static const Record RECORD_UNSET =
    System_Aaa_Accounting_Events_Event_State_Record_RECORD_UNSET;
  static const Record RECORD_START_STOP =
    System_Aaa_Accounting_Events_Event_State_Record_RECORD_START_STOP;
  static const Record RECORD_STOP =
    System_Aaa_Accounting_Events_Event_State_Record_RECORD_STOP;
  static inline bool Record_IsValid(int value) {
    return System_Aaa_Accounting_Events_Event_State_Record_IsValid(value);
  }
  static const Record Record_MIN =
    System_Aaa_Accounting_Events_Event_State_Record_Record_MIN;
  static const Record Record_MAX =
    System_Aaa_Accounting_Events_Event_State_Record_Record_MAX;
  static const int Record_ARRAYSIZE =
    System_Aaa_Accounting_Events_Event_State_Record_Record_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Record_descriptor() {
    return System_Aaa_Accounting_Events_Event_State_Record_descriptor();
  }
  static inline const ::std::string& Record_Name(Record value) {
    return System_Aaa_Accounting_Events_Event_State_Record_Name(value);
  }
  static inline bool Record_Parse(const ::std::string& name,
      Record* value) {
    return System_Aaa_Accounting_Events_Event_State_Record_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .openconfig.enums.OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE event_type = 35039801 [(.yext.schemapath) = "/system/aaa/accounting/events/event/state/event-type"];
  void clear_event_type();
  static const int kEventTypeFieldNumber = 35039801;
  ::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE event_type() const;
  void set_event_type(::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE value);

  // .openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.State.Record record = 502978155 [(.yext.schemapath) = "/system/aaa/accounting/events/event/state/record"];
  void clear_record();
  static const int kRecordFieldNumber = 502978155;
  ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_State_Record record() const;
  void set_record(::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_State_Record value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int event_type_;
  int record_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Accounting_Events_Event_StateImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Accounting_Events_Event : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Accounting.Events.Event) */ {
 public:
  System_Aaa_Accounting_Events_Event();
  virtual ~System_Aaa_Accounting_Events_Event();

  System_Aaa_Accounting_Events_Event(const System_Aaa_Accounting_Events_Event& from);

  inline System_Aaa_Accounting_Events_Event& operator=(const System_Aaa_Accounting_Events_Event& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Accounting_Events_Event(System_Aaa_Accounting_Events_Event&& from) noexcept
    : System_Aaa_Accounting_Events_Event() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Accounting_Events_Event& operator=(System_Aaa_Accounting_Events_Event&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Accounting_Events_Event& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Accounting_Events_Event* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Accounting_Events_Event*>(
               &_System_Aaa_Accounting_Events_Event_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(System_Aaa_Accounting_Events_Event* other);
  friend void swap(System_Aaa_Accounting_Events_Event& a, System_Aaa_Accounting_Events_Event& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Accounting_Events_Event* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Accounting_Events_Event* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Accounting_Events_Event& from);
  void MergeFrom(const System_Aaa_Accounting_Events_Event& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Accounting_Events_Event* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Aaa_Accounting_Events_Event_Config Config;
  typedef System_Aaa_Accounting_Events_Event_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.State state = 229991121 [(.yext.schemapath) = "/system/aaa/accounting/events/event/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 229991121;
  const ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_State& state() const;
  ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_State* release_state();
  ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_State* state);

  // .openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.Config config = 285134520 [(.yext.schemapath) = "/system/aaa/accounting/events/event/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 285134520;
  const ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_Config& config() const;
  ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_Config* release_config();
  ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Accounting.Events.Event)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_State* state_;
  ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Accounting_Events_EventImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Accounting_Events_EventKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Accounting.Events.EventKey) */ {
 public:
  System_Aaa_Accounting_Events_EventKey();
  virtual ~System_Aaa_Accounting_Events_EventKey();

  System_Aaa_Accounting_Events_EventKey(const System_Aaa_Accounting_Events_EventKey& from);

  inline System_Aaa_Accounting_Events_EventKey& operator=(const System_Aaa_Accounting_Events_EventKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Accounting_Events_EventKey(System_Aaa_Accounting_Events_EventKey&& from) noexcept
    : System_Aaa_Accounting_Events_EventKey() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Accounting_Events_EventKey& operator=(System_Aaa_Accounting_Events_EventKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Accounting_Events_EventKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Accounting_Events_EventKey* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Accounting_Events_EventKey*>(
               &_System_Aaa_Accounting_Events_EventKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(System_Aaa_Accounting_Events_EventKey* other);
  friend void swap(System_Aaa_Accounting_Events_EventKey& a, System_Aaa_Accounting_Events_EventKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Accounting_Events_EventKey* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Accounting_Events_EventKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Accounting_Events_EventKey& from);
  void MergeFrom(const System_Aaa_Accounting_Events_EventKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Accounting_Events_EventKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Aaa.Accounting.Events.Event event = 2;
  bool has_event() const;
  void clear_event();
  static const int kEventFieldNumber = 2;
  const ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event& event() const;
  ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event* release_event();
  ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event* mutable_event();
  void set_allocated_event(::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event* event);

  // .openconfig.enums.OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE event_type = 1 [(.yext.schemapath) = "/system/aaa/accounting/events/event/event-type"];
  void clear_event_type();
  static const int kEventTypeFieldNumber = 1;
  ::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE event_type() const;
  void set_event_type(::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Accounting.Events.EventKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event* event_;
  int event_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Accounting_Events_EventKeyImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Accounting_Events : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Accounting.Events) */ {
 public:
  System_Aaa_Accounting_Events();
  virtual ~System_Aaa_Accounting_Events();

  System_Aaa_Accounting_Events(const System_Aaa_Accounting_Events& from);

  inline System_Aaa_Accounting_Events& operator=(const System_Aaa_Accounting_Events& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Accounting_Events(System_Aaa_Accounting_Events&& from) noexcept
    : System_Aaa_Accounting_Events() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Accounting_Events& operator=(System_Aaa_Accounting_Events&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Accounting_Events& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Accounting_Events* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Accounting_Events*>(
               &_System_Aaa_Accounting_Events_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    6;

  void Swap(System_Aaa_Accounting_Events* other);
  friend void swap(System_Aaa_Accounting_Events& a, System_Aaa_Accounting_Events& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Accounting_Events* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Accounting_Events* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Accounting_Events& from);
  void MergeFrom(const System_Aaa_Accounting_Events& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Accounting_Events* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Aaa_Accounting_Events_Event Event;
  typedef System_Aaa_Accounting_Events_EventKey EventKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_system.System.Aaa.Accounting.Events.EventKey event = 76913831 [(.yext.schemapath) = "/system/aaa/accounting/events/event"];
  int event_size() const;
  void clear_event();
  static const int kEventFieldNumber = 76913831;
  const ::openconfig::openconfig_system::System_Aaa_Accounting_Events_EventKey& event(int index) const;
  ::openconfig::openconfig_system::System_Aaa_Accounting_Events_EventKey* mutable_event(int index);
  ::openconfig::openconfig_system::System_Aaa_Accounting_Events_EventKey* add_event();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Accounting_Events_EventKey >*
      mutable_event();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Accounting_Events_EventKey >&
      event() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Accounting.Events)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Accounting_Events_EventKey > event_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Accounting_EventsImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Accounting_State_AccountingMethodUnion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Accounting.State.AccountingMethodUnion) */ {
 public:
  System_Aaa_Accounting_State_AccountingMethodUnion();
  virtual ~System_Aaa_Accounting_State_AccountingMethodUnion();

  System_Aaa_Accounting_State_AccountingMethodUnion(const System_Aaa_Accounting_State_AccountingMethodUnion& from);

  inline System_Aaa_Accounting_State_AccountingMethodUnion& operator=(const System_Aaa_Accounting_State_AccountingMethodUnion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Accounting_State_AccountingMethodUnion(System_Aaa_Accounting_State_AccountingMethodUnion&& from) noexcept
    : System_Aaa_Accounting_State_AccountingMethodUnion() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Accounting_State_AccountingMethodUnion& operator=(System_Aaa_Accounting_State_AccountingMethodUnion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Accounting_State_AccountingMethodUnion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Accounting_State_AccountingMethodUnion* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Accounting_State_AccountingMethodUnion*>(
               &_System_Aaa_Accounting_State_AccountingMethodUnion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    7;

  void Swap(System_Aaa_Accounting_State_AccountingMethodUnion* other);
  friend void swap(System_Aaa_Accounting_State_AccountingMethodUnion& a, System_Aaa_Accounting_State_AccountingMethodUnion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Accounting_State_AccountingMethodUnion* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Accounting_State_AccountingMethodUnion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Accounting_State_AccountingMethodUnion& from);
  void MergeFrom(const System_Aaa_Accounting_State_AccountingMethodUnion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Accounting_State_AccountingMethodUnion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string accounting_method_string = 398060102;
  void clear_accounting_method_string();
  static const int kAccountingMethodStringFieldNumber = 398060102;
  const ::std::string& accounting_method_string() const;
  void set_accounting_method_string(const ::std::string& value);
  #if LANG_CXX11
  void set_accounting_method_string(::std::string&& value);
  #endif
  void set_accounting_method_string(const char* value);
  void set_accounting_method_string(const char* value, size_t size);
  ::std::string* mutable_accounting_method_string();
  ::std::string* release_accounting_method_string();
  void set_allocated_accounting_method_string(::std::string* accounting_method_string);

  // .openconfig.enums.OpenconfigAaaTypesAAAMETHODTYPE accounting_method_openconfigaaatypesaaamethodtype = 397538795;
  void clear_accounting_method_openconfigaaatypesaaamethodtype();
  static const int kAccountingMethodOpenconfigaaatypesaaamethodtypeFieldNumber = 397538795;
  ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE accounting_method_openconfigaaatypesaaamethodtype() const;
  void set_accounting_method_openconfigaaatypesaaamethodtype(::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Accounting.State.AccountingMethodUnion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr accounting_method_string_;
  int accounting_method_openconfigaaatypesaaamethodtype_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Accounting_State_AccountingMethodUnionImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Accounting_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Accounting.State) */ {
 public:
  System_Aaa_Accounting_State();
  virtual ~System_Aaa_Accounting_State();

  System_Aaa_Accounting_State(const System_Aaa_Accounting_State& from);

  inline System_Aaa_Accounting_State& operator=(const System_Aaa_Accounting_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Accounting_State(System_Aaa_Accounting_State&& from) noexcept
    : System_Aaa_Accounting_State() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Accounting_State& operator=(System_Aaa_Accounting_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Accounting_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Accounting_State* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Accounting_State*>(
               &_System_Aaa_Accounting_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(System_Aaa_Accounting_State* other);
  friend void swap(System_Aaa_Accounting_State& a, System_Aaa_Accounting_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Accounting_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Accounting_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Accounting_State& from);
  void MergeFrom(const System_Aaa_Accounting_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Accounting_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Aaa_Accounting_State_AccountingMethodUnion AccountingMethodUnion;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_system.System.Aaa.Accounting.State.AccountingMethodUnion accounting_method = 103028022 [(.yext.schemapath) = "/system/aaa/accounting/state/accounting-method"];
  int accounting_method_size() const;
  void clear_accounting_method();
  static const int kAccountingMethodFieldNumber = 103028022;
  const ::openconfig::openconfig_system::System_Aaa_Accounting_State_AccountingMethodUnion& accounting_method(int index) const;
  ::openconfig::openconfig_system::System_Aaa_Accounting_State_AccountingMethodUnion* mutable_accounting_method(int index);
  ::openconfig::openconfig_system::System_Aaa_Accounting_State_AccountingMethodUnion* add_accounting_method();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Accounting_State_AccountingMethodUnion >*
      mutable_accounting_method();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Accounting_State_AccountingMethodUnion >&
      accounting_method() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Accounting.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Accounting_State_AccountingMethodUnion > accounting_method_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Accounting_StateImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Accounting : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Accounting) */ {
 public:
  System_Aaa_Accounting();
  virtual ~System_Aaa_Accounting();

  System_Aaa_Accounting(const System_Aaa_Accounting& from);

  inline System_Aaa_Accounting& operator=(const System_Aaa_Accounting& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Accounting(System_Aaa_Accounting&& from) noexcept
    : System_Aaa_Accounting() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Accounting& operator=(System_Aaa_Accounting&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Accounting& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Accounting* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Accounting*>(
               &_System_Aaa_Accounting_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(System_Aaa_Accounting* other);
  friend void swap(System_Aaa_Accounting& a, System_Aaa_Accounting& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Accounting* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Accounting* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Accounting& from);
  void MergeFrom(const System_Aaa_Accounting& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Accounting* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Aaa_Accounting_Config Config;
  typedef System_Aaa_Accounting_Events Events;
  typedef System_Aaa_Accounting_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Aaa.Accounting.Config config = 65960919 [(.yext.schemapath) = "/system/aaa/accounting/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 65960919;
  const ::openconfig::openconfig_system::System_Aaa_Accounting_Config& config() const;
  ::openconfig::openconfig_system::System_Aaa_Accounting_Config* release_config();
  ::openconfig::openconfig_system::System_Aaa_Accounting_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Aaa_Accounting_Config* config);

  // .openconfig.openconfig_system.System.Aaa.Accounting.State state = 158118280 [(.yext.schemapath) = "/system/aaa/accounting/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 158118280;
  const ::openconfig::openconfig_system::System_Aaa_Accounting_State& state() const;
  ::openconfig::openconfig_system::System_Aaa_Accounting_State* release_state();
  ::openconfig::openconfig_system::System_Aaa_Accounting_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Aaa_Accounting_State* state);

  // .openconfig.openconfig_system.System.Aaa.Accounting.Events events = 254145510 [(.yext.schemapath) = "/system/aaa/accounting/events"];
  bool has_events() const;
  void clear_events();
  static const int kEventsFieldNumber = 254145510;
  const ::openconfig::openconfig_system::System_Aaa_Accounting_Events& events() const;
  ::openconfig::openconfig_system::System_Aaa_Accounting_Events* release_events();
  ::openconfig::openconfig_system::System_Aaa_Accounting_Events* mutable_events();
  void set_allocated_events(::openconfig::openconfig_system::System_Aaa_Accounting_Events* events);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Accounting)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Aaa_Accounting_Config* config_;
  ::openconfig::openconfig_system::System_Aaa_Accounting_State* state_;
  ::openconfig::openconfig_system::System_Aaa_Accounting_Events* events_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_AccountingImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Authentication_AdminUser_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.Config) */ {
 public:
  System_Aaa_Authentication_AdminUser_Config();
  virtual ~System_Aaa_Authentication_AdminUser_Config();

  System_Aaa_Authentication_AdminUser_Config(const System_Aaa_Authentication_AdminUser_Config& from);

  inline System_Aaa_Authentication_AdminUser_Config& operator=(const System_Aaa_Authentication_AdminUser_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Authentication_AdminUser_Config(System_Aaa_Authentication_AdminUser_Config&& from) noexcept
    : System_Aaa_Authentication_AdminUser_Config() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Authentication_AdminUser_Config& operator=(System_Aaa_Authentication_AdminUser_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Authentication_AdminUser_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Authentication_AdminUser_Config* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Authentication_AdminUser_Config*>(
               &_System_Aaa_Authentication_AdminUser_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    10;

  void Swap(System_Aaa_Authentication_AdminUser_Config* other);
  friend void swap(System_Aaa_Authentication_AdminUser_Config& a, System_Aaa_Authentication_AdminUser_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Authentication_AdminUser_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Authentication_AdminUser_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Authentication_AdminUser_Config& from);
  void MergeFrom(const System_Aaa_Authentication_AdminUser_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Authentication_AdminUser_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue admin_password = 17433386 [(.yext.schemapath) = "/system/aaa/authentication/admin-user/config/admin-password"];
  bool has_admin_password() const;
  void clear_admin_password();
  static const int kAdminPasswordFieldNumber = 17433386;
  const ::ywrapper::StringValue& admin_password() const;
  ::ywrapper::StringValue* release_admin_password();
  ::ywrapper::StringValue* mutable_admin_password();
  void set_allocated_admin_password(::ywrapper::StringValue* admin_password);

  // .ywrapper.StringValue admin_password_hashed = 471791444 [(.yext.schemapath) = "/system/aaa/authentication/admin-user/config/admin-password-hashed"];
  bool has_admin_password_hashed() const;
  void clear_admin_password_hashed();
  static const int kAdminPasswordHashedFieldNumber = 471791444;
  const ::ywrapper::StringValue& admin_password_hashed() const;
  ::ywrapper::StringValue* release_admin_password_hashed();
  ::ywrapper::StringValue* mutable_admin_password_hashed();
  void set_allocated_admin_password_hashed(::ywrapper::StringValue* admin_password_hashed);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* admin_password_;
  ::ywrapper::StringValue* admin_password_hashed_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Authentication_AdminUser_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Authentication_AdminUser_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.State) */ {
 public:
  System_Aaa_Authentication_AdminUser_State();
  virtual ~System_Aaa_Authentication_AdminUser_State();

  System_Aaa_Authentication_AdminUser_State(const System_Aaa_Authentication_AdminUser_State& from);

  inline System_Aaa_Authentication_AdminUser_State& operator=(const System_Aaa_Authentication_AdminUser_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Authentication_AdminUser_State(System_Aaa_Authentication_AdminUser_State&& from) noexcept
    : System_Aaa_Authentication_AdminUser_State() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Authentication_AdminUser_State& operator=(System_Aaa_Authentication_AdminUser_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Authentication_AdminUser_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Authentication_AdminUser_State* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Authentication_AdminUser_State*>(
               &_System_Aaa_Authentication_AdminUser_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    11;

  void Swap(System_Aaa_Authentication_AdminUser_State* other);
  friend void swap(System_Aaa_Authentication_AdminUser_State& a, System_Aaa_Authentication_AdminUser_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Authentication_AdminUser_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Authentication_AdminUser_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Authentication_AdminUser_State& from);
  void MergeFrom(const System_Aaa_Authentication_AdminUser_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Authentication_AdminUser_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue admin_username = 58771374 [(.yext.schemapath) = "/system/aaa/authentication/admin-user/state/admin-username"];
  bool has_admin_username() const;
  void clear_admin_username();
  static const int kAdminUsernameFieldNumber = 58771374;
  const ::ywrapper::StringValue& admin_username() const;
  ::ywrapper::StringValue* release_admin_username();
  ::ywrapper::StringValue* mutable_admin_username();
  void set_allocated_admin_username(::ywrapper::StringValue* admin_username);

  // .ywrapper.StringValue admin_password_hashed = 265524005 [(.yext.schemapath) = "/system/aaa/authentication/admin-user/state/admin-password-hashed"];
  bool has_admin_password_hashed() const;
  void clear_admin_password_hashed();
  static const int kAdminPasswordHashedFieldNumber = 265524005;
  const ::ywrapper::StringValue& admin_password_hashed() const;
  ::ywrapper::StringValue* release_admin_password_hashed();
  ::ywrapper::StringValue* mutable_admin_password_hashed();
  void set_allocated_admin_password_hashed(::ywrapper::StringValue* admin_password_hashed);

  // .ywrapper.StringValue admin_password = 466907761 [(.yext.schemapath) = "/system/aaa/authentication/admin-user/state/admin-password"];
  bool has_admin_password() const;
  void clear_admin_password();
  static const int kAdminPasswordFieldNumber = 466907761;
  const ::ywrapper::StringValue& admin_password() const;
  ::ywrapper::StringValue* release_admin_password();
  ::ywrapper::StringValue* mutable_admin_password();
  void set_allocated_admin_password(::ywrapper::StringValue* admin_password);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* admin_username_;
  ::ywrapper::StringValue* admin_password_hashed_;
  ::ywrapper::StringValue* admin_password_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Authentication_AdminUser_StateImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Authentication_AdminUser : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser) */ {
 public:
  System_Aaa_Authentication_AdminUser();
  virtual ~System_Aaa_Authentication_AdminUser();

  System_Aaa_Authentication_AdminUser(const System_Aaa_Authentication_AdminUser& from);

  inline System_Aaa_Authentication_AdminUser& operator=(const System_Aaa_Authentication_AdminUser& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Authentication_AdminUser(System_Aaa_Authentication_AdminUser&& from) noexcept
    : System_Aaa_Authentication_AdminUser() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Authentication_AdminUser& operator=(System_Aaa_Authentication_AdminUser&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Authentication_AdminUser& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Authentication_AdminUser* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Authentication_AdminUser*>(
               &_System_Aaa_Authentication_AdminUser_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    12;

  void Swap(System_Aaa_Authentication_AdminUser* other);
  friend void swap(System_Aaa_Authentication_AdminUser& a, System_Aaa_Authentication_AdminUser& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Authentication_AdminUser* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Authentication_AdminUser* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Authentication_AdminUser& from);
  void MergeFrom(const System_Aaa_Authentication_AdminUser& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Authentication_AdminUser* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Aaa_Authentication_AdminUser_Config Config;
  typedef System_Aaa_Authentication_AdminUser_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.Config config = 37403324 [(.yext.schemapath) = "/system/aaa/authentication/admin-user/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 37403324;
  const ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser_Config& config() const;
  ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser_Config* release_config();
  ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser_Config* config);

  // .openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.State state = 171383989 [(.yext.schemapath) = "/system/aaa/authentication/admin-user/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 171383989;
  const ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser_State& state() const;
  ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser_State* release_state();
  ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser_Config* config_;
  ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Authentication_AdminUserImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Authentication_Config_AuthenticationMethodUnion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Authentication.Config.AuthenticationMethodUnion) */ {
 public:
  System_Aaa_Authentication_Config_AuthenticationMethodUnion();
  virtual ~System_Aaa_Authentication_Config_AuthenticationMethodUnion();

  System_Aaa_Authentication_Config_AuthenticationMethodUnion(const System_Aaa_Authentication_Config_AuthenticationMethodUnion& from);

  inline System_Aaa_Authentication_Config_AuthenticationMethodUnion& operator=(const System_Aaa_Authentication_Config_AuthenticationMethodUnion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Authentication_Config_AuthenticationMethodUnion(System_Aaa_Authentication_Config_AuthenticationMethodUnion&& from) noexcept
    : System_Aaa_Authentication_Config_AuthenticationMethodUnion() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Authentication_Config_AuthenticationMethodUnion& operator=(System_Aaa_Authentication_Config_AuthenticationMethodUnion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Authentication_Config_AuthenticationMethodUnion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Authentication_Config_AuthenticationMethodUnion* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Authentication_Config_AuthenticationMethodUnion*>(
               &_System_Aaa_Authentication_Config_AuthenticationMethodUnion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    13;

  void Swap(System_Aaa_Authentication_Config_AuthenticationMethodUnion* other);
  friend void swap(System_Aaa_Authentication_Config_AuthenticationMethodUnion& a, System_Aaa_Authentication_Config_AuthenticationMethodUnion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Authentication_Config_AuthenticationMethodUnion* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Authentication_Config_AuthenticationMethodUnion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Authentication_Config_AuthenticationMethodUnion& from);
  void MergeFrom(const System_Aaa_Authentication_Config_AuthenticationMethodUnion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Authentication_Config_AuthenticationMethodUnion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string authentication_method_string = 438459495;
  void clear_authentication_method_string();
  static const int kAuthenticationMethodStringFieldNumber = 438459495;
  const ::std::string& authentication_method_string() const;
  void set_authentication_method_string(const ::std::string& value);
  #if LANG_CXX11
  void set_authentication_method_string(::std::string&& value);
  #endif
  void set_authentication_method_string(const char* value);
  void set_authentication_method_string(const char* value, size_t size);
  ::std::string* mutable_authentication_method_string();
  ::std::string* release_authentication_method_string();
  void set_allocated_authentication_method_string(::std::string* authentication_method_string);

  // .openconfig.enums.OpenconfigAaaTypesAAAMETHODTYPE authentication_method_openconfigaaatypesaaamethodtype = 512247800;
  void clear_authentication_method_openconfigaaatypesaaamethodtype();
  static const int kAuthenticationMethodOpenconfigaaatypesaaamethodtypeFieldNumber = 512247800;
  ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE authentication_method_openconfigaaatypesaaamethodtype() const;
  void set_authentication_method_openconfigaaatypesaaamethodtype(::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Authentication.Config.AuthenticationMethodUnion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr authentication_method_string_;
  int authentication_method_openconfigaaatypesaaamethodtype_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Authentication_Config_AuthenticationMethodUnionImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Authentication_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Authentication.Config) */ {
 public:
  System_Aaa_Authentication_Config();
  virtual ~System_Aaa_Authentication_Config();

  System_Aaa_Authentication_Config(const System_Aaa_Authentication_Config& from);

  inline System_Aaa_Authentication_Config& operator=(const System_Aaa_Authentication_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Authentication_Config(System_Aaa_Authentication_Config&& from) noexcept
    : System_Aaa_Authentication_Config() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Authentication_Config& operator=(System_Aaa_Authentication_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Authentication_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Authentication_Config* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Authentication_Config*>(
               &_System_Aaa_Authentication_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    14;

  void Swap(System_Aaa_Authentication_Config* other);
  friend void swap(System_Aaa_Authentication_Config& a, System_Aaa_Authentication_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Authentication_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Authentication_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Authentication_Config& from);
  void MergeFrom(const System_Aaa_Authentication_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Authentication_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Aaa_Authentication_Config_AuthenticationMethodUnion AuthenticationMethodUnion;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_system.System.Aaa.Authentication.Config.AuthenticationMethodUnion authentication_method = 38969025 [(.yext.schemapath) = "/system/aaa/authentication/config/authentication-method"];
  int authentication_method_size() const;
  void clear_authentication_method();
  static const int kAuthenticationMethodFieldNumber = 38969025;
  const ::openconfig::openconfig_system::System_Aaa_Authentication_Config_AuthenticationMethodUnion& authentication_method(int index) const;
  ::openconfig::openconfig_system::System_Aaa_Authentication_Config_AuthenticationMethodUnion* mutable_authentication_method(int index);
  ::openconfig::openconfig_system::System_Aaa_Authentication_Config_AuthenticationMethodUnion* add_authentication_method();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authentication_Config_AuthenticationMethodUnion >*
      mutable_authentication_method();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authentication_Config_AuthenticationMethodUnion >&
      authentication_method() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Authentication.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authentication_Config_AuthenticationMethodUnion > authentication_method_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Authentication_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Authentication_State_AuthenticationMethodUnion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Authentication.State.AuthenticationMethodUnion) */ {
 public:
  System_Aaa_Authentication_State_AuthenticationMethodUnion();
  virtual ~System_Aaa_Authentication_State_AuthenticationMethodUnion();

  System_Aaa_Authentication_State_AuthenticationMethodUnion(const System_Aaa_Authentication_State_AuthenticationMethodUnion& from);

  inline System_Aaa_Authentication_State_AuthenticationMethodUnion& operator=(const System_Aaa_Authentication_State_AuthenticationMethodUnion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Authentication_State_AuthenticationMethodUnion(System_Aaa_Authentication_State_AuthenticationMethodUnion&& from) noexcept
    : System_Aaa_Authentication_State_AuthenticationMethodUnion() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Authentication_State_AuthenticationMethodUnion& operator=(System_Aaa_Authentication_State_AuthenticationMethodUnion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Authentication_State_AuthenticationMethodUnion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Authentication_State_AuthenticationMethodUnion* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Authentication_State_AuthenticationMethodUnion*>(
               &_System_Aaa_Authentication_State_AuthenticationMethodUnion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    15;

  void Swap(System_Aaa_Authentication_State_AuthenticationMethodUnion* other);
  friend void swap(System_Aaa_Authentication_State_AuthenticationMethodUnion& a, System_Aaa_Authentication_State_AuthenticationMethodUnion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Authentication_State_AuthenticationMethodUnion* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Authentication_State_AuthenticationMethodUnion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Authentication_State_AuthenticationMethodUnion& from);
  void MergeFrom(const System_Aaa_Authentication_State_AuthenticationMethodUnion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Authentication_State_AuthenticationMethodUnion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string authentication_method_string = 398759016;
  void clear_authentication_method_string();
  static const int kAuthenticationMethodStringFieldNumber = 398759016;
  const ::std::string& authentication_method_string() const;
  void set_authentication_method_string(const ::std::string& value);
  #if LANG_CXX11
  void set_authentication_method_string(::std::string&& value);
  #endif
  void set_authentication_method_string(const char* value);
  void set_authentication_method_string(const char* value, size_t size);
  ::std::string* mutable_authentication_method_string();
  ::std::string* release_authentication_method_string();
  void set_allocated_authentication_method_string(::std::string* authentication_method_string);

  // .openconfig.enums.OpenconfigAaaTypesAAAMETHODTYPE authentication_method_openconfigaaatypesaaamethodtype = 300892437;
  void clear_authentication_method_openconfigaaatypesaaamethodtype();
  static const int kAuthenticationMethodOpenconfigaaatypesaaamethodtypeFieldNumber = 300892437;
  ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE authentication_method_openconfigaaatypesaaamethodtype() const;
  void set_authentication_method_openconfigaaatypesaaamethodtype(::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Authentication.State.AuthenticationMethodUnion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr authentication_method_string_;
  int authentication_method_openconfigaaatypesaaamethodtype_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Authentication_State_AuthenticationMethodUnionImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Authentication_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Authentication.State) */ {
 public:
  System_Aaa_Authentication_State();
  virtual ~System_Aaa_Authentication_State();

  System_Aaa_Authentication_State(const System_Aaa_Authentication_State& from);

  inline System_Aaa_Authentication_State& operator=(const System_Aaa_Authentication_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Authentication_State(System_Aaa_Authentication_State&& from) noexcept
    : System_Aaa_Authentication_State() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Authentication_State& operator=(System_Aaa_Authentication_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Authentication_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Authentication_State* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Authentication_State*>(
               &_System_Aaa_Authentication_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    16;

  void Swap(System_Aaa_Authentication_State* other);
  friend void swap(System_Aaa_Authentication_State& a, System_Aaa_Authentication_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Authentication_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Authentication_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Authentication_State& from);
  void MergeFrom(const System_Aaa_Authentication_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Authentication_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Aaa_Authentication_State_AuthenticationMethodUnion AuthenticationMethodUnion;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_system.System.Aaa.Authentication.State.AuthenticationMethodUnion authentication_method = 177264392 [(.yext.schemapath) = "/system/aaa/authentication/state/authentication-method"];
  int authentication_method_size() const;
  void clear_authentication_method();
  static const int kAuthenticationMethodFieldNumber = 177264392;
  const ::openconfig::openconfig_system::System_Aaa_Authentication_State_AuthenticationMethodUnion& authentication_method(int index) const;
  ::openconfig::openconfig_system::System_Aaa_Authentication_State_AuthenticationMethodUnion* mutable_authentication_method(int index);
  ::openconfig::openconfig_system::System_Aaa_Authentication_State_AuthenticationMethodUnion* add_authentication_method();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authentication_State_AuthenticationMethodUnion >*
      mutable_authentication_method();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authentication_State_AuthenticationMethodUnion >&
      authentication_method() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Authentication.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authentication_State_AuthenticationMethodUnion > authentication_method_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Authentication_StateImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Authentication_Users_User_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config) */ {
 public:
  System_Aaa_Authentication_Users_User_Config();
  virtual ~System_Aaa_Authentication_Users_User_Config();

  System_Aaa_Authentication_Users_User_Config(const System_Aaa_Authentication_Users_User_Config& from);

  inline System_Aaa_Authentication_Users_User_Config& operator=(const System_Aaa_Authentication_Users_User_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Authentication_Users_User_Config(System_Aaa_Authentication_Users_User_Config&& from) noexcept
    : System_Aaa_Authentication_Users_User_Config() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Authentication_Users_User_Config& operator=(System_Aaa_Authentication_Users_User_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Authentication_Users_User_Config& default_instance();

  enum RoleCase {
    kRoleOpenconfigaaatypessystemdefinedroles = 398783100,
    kRoleString = 284966162,
    ROLE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Authentication_Users_User_Config* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Authentication_Users_User_Config*>(
               &_System_Aaa_Authentication_Users_User_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    17;

  void Swap(System_Aaa_Authentication_Users_User_Config* other);
  friend void swap(System_Aaa_Authentication_Users_User_Config& a, System_Aaa_Authentication_Users_User_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Authentication_Users_User_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Authentication_Users_User_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Authentication_Users_User_Config& from);
  void MergeFrom(const System_Aaa_Authentication_Users_User_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Authentication_Users_User_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue username = 46155670 [(.yext.schemapath) = "/system/aaa/authentication/users/user/config/username"];
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 46155670;
  const ::ywrapper::StringValue& username() const;
  ::ywrapper::StringValue* release_username();
  ::ywrapper::StringValue* mutable_username();
  void set_allocated_username(::ywrapper::StringValue* username);

  // .ywrapper.StringValue password = 140193929 [(.yext.schemapath) = "/system/aaa/authentication/users/user/config/password"];
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 140193929;
  const ::ywrapper::StringValue& password() const;
  ::ywrapper::StringValue* release_password();
  ::ywrapper::StringValue* mutable_password();
  void set_allocated_password(::ywrapper::StringValue* password);

  // .ywrapper.StringValue ssh_key = 372550502 [(.yext.schemapath) = "/system/aaa/authentication/users/user/config/ssh-key"];
  bool has_ssh_key() const;
  void clear_ssh_key();
  static const int kSshKeyFieldNumber = 372550502;
  const ::ywrapper::StringValue& ssh_key() const;
  ::ywrapper::StringValue* release_ssh_key();
  ::ywrapper::StringValue* mutable_ssh_key();
  void set_allocated_ssh_key(::ywrapper::StringValue* ssh_key);

  // .ywrapper.StringValue password_hashed = 439845341 [(.yext.schemapath) = "/system/aaa/authentication/users/user/config/password-hashed"];
  bool has_password_hashed() const;
  void clear_password_hashed();
  static const int kPasswordHashedFieldNumber = 439845341;
  const ::ywrapper::StringValue& password_hashed() const;
  ::ywrapper::StringValue* release_password_hashed();
  ::ywrapper::StringValue* mutable_password_hashed();
  void set_allocated_password_hashed(::ywrapper::StringValue* password_hashed);

  // .openconfig.enums.OpenconfigAaaTypesSYSTEMDEFINEDROLES role_openconfigaaatypessystemdefinedroles = 398783100;
  private:
  bool has_role_openconfigaaatypessystemdefinedroles() const;
  public:
  void clear_role_openconfigaaatypessystemdefinedroles();
  static const int kRoleOpenconfigaaatypessystemdefinedrolesFieldNumber = 398783100;
  ::openconfig::enums::OpenconfigAaaTypesSYSTEMDEFINEDROLES role_openconfigaaatypessystemdefinedroles() const;
  void set_role_openconfigaaatypessystemdefinedroles(::openconfig::enums::OpenconfigAaaTypesSYSTEMDEFINEDROLES value);

  // string role_string = 284966162;
  private:
  bool has_role_string() const;
  public:
  void clear_role_string();
  static const int kRoleStringFieldNumber = 284966162;
  const ::std::string& role_string() const;
  void set_role_string(const ::std::string& value);
  #if LANG_CXX11
  void set_role_string(::std::string&& value);
  #endif
  void set_role_string(const char* value);
  void set_role_string(const char* value, size_t size);
  ::std::string* mutable_role_string();
  ::std::string* release_role_string();
  void set_allocated_role_string(::std::string* role_string);

  RoleCase role_case() const;
  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config)
 private:
  void set_has_role_openconfigaaatypessystemdefinedroles();
  void set_has_role_string();

  inline bool has_role() const;
  void clear_role();
  inline void clear_has_role();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* username_;
  ::ywrapper::StringValue* password_;
  ::ywrapper::StringValue* ssh_key_;
  ::ywrapper::StringValue* password_hashed_;
  union RoleUnion {
    RoleUnion() {}
    int role_openconfigaaatypessystemdefinedroles_;
    ::google::protobuf::internal::ArenaStringPtr role_string_;
  } role_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Authentication_Users_User_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Authentication_Users_User_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State) */ {
 public:
  System_Aaa_Authentication_Users_User_State();
  virtual ~System_Aaa_Authentication_Users_User_State();

  System_Aaa_Authentication_Users_User_State(const System_Aaa_Authentication_Users_User_State& from);

  inline System_Aaa_Authentication_Users_User_State& operator=(const System_Aaa_Authentication_Users_User_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Authentication_Users_User_State(System_Aaa_Authentication_Users_User_State&& from) noexcept
    : System_Aaa_Authentication_Users_User_State() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Authentication_Users_User_State& operator=(System_Aaa_Authentication_Users_User_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Authentication_Users_User_State& default_instance();

  enum RoleCase {
    kRoleOpenconfigaaatypessystemdefinedroles = 530122979,
    kRoleString = 161472625,
    ROLE_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Authentication_Users_User_State* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Authentication_Users_User_State*>(
               &_System_Aaa_Authentication_Users_User_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    18;

  void Swap(System_Aaa_Authentication_Users_User_State* other);
  friend void swap(System_Aaa_Authentication_Users_User_State& a, System_Aaa_Authentication_Users_User_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Authentication_Users_User_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Authentication_Users_User_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Authentication_Users_User_State& from);
  void MergeFrom(const System_Aaa_Authentication_Users_User_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Authentication_Users_User_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue password = 85246016 [(.yext.schemapath) = "/system/aaa/authentication/users/user/state/password"];
  bool has_password() const;
  void clear_password();
  static const int kPasswordFieldNumber = 85246016;
  const ::ywrapper::StringValue& password() const;
  ::ywrapper::StringValue* release_password();
  ::ywrapper::StringValue* mutable_password();
  void set_allocated_password(::ywrapper::StringValue* password);

  // .ywrapper.StringValue ssh_key = 174493753 [(.yext.schemapath) = "/system/aaa/authentication/users/user/state/ssh-key"];
  bool has_ssh_key() const;
  void clear_ssh_key();
  static const int kSshKeyFieldNumber = 174493753;
  const ::ywrapper::StringValue& ssh_key() const;
  ::ywrapper::StringValue* release_ssh_key();
  ::ywrapper::StringValue* mutable_ssh_key();
  void set_allocated_ssh_key(::ywrapper::StringValue* ssh_key);

  // .ywrapper.StringValue password_hashed = 335276866 [(.yext.schemapath) = "/system/aaa/authentication/users/user/state/password-hashed"];
  bool has_password_hashed() const;
  void clear_password_hashed();
  static const int kPasswordHashedFieldNumber = 335276866;
  const ::ywrapper::StringValue& password_hashed() const;
  ::ywrapper::StringValue* release_password_hashed();
  ::ywrapper::StringValue* mutable_password_hashed();
  void set_allocated_password_hashed(::ywrapper::StringValue* password_hashed);

  // .ywrapper.StringValue username = 529155339 [(.yext.schemapath) = "/system/aaa/authentication/users/user/state/username"];
  bool has_username() const;
  void clear_username();
  static const int kUsernameFieldNumber = 529155339;
  const ::ywrapper::StringValue& username() const;
  ::ywrapper::StringValue* release_username();
  ::ywrapper::StringValue* mutable_username();
  void set_allocated_username(::ywrapper::StringValue* username);

  // .openconfig.enums.OpenconfigAaaTypesSYSTEMDEFINEDROLES role_openconfigaaatypessystemdefinedroles = 530122979;
  private:
  bool has_role_openconfigaaatypessystemdefinedroles() const;
  public:
  void clear_role_openconfigaaatypessystemdefinedroles();
  static const int kRoleOpenconfigaaatypessystemdefinedrolesFieldNumber = 530122979;
  ::openconfig::enums::OpenconfigAaaTypesSYSTEMDEFINEDROLES role_openconfigaaatypessystemdefinedroles() const;
  void set_role_openconfigaaatypessystemdefinedroles(::openconfig::enums::OpenconfigAaaTypesSYSTEMDEFINEDROLES value);

  // string role_string = 161472625;
  private:
  bool has_role_string() const;
  public:
  void clear_role_string();
  static const int kRoleStringFieldNumber = 161472625;
  const ::std::string& role_string() const;
  void set_role_string(const ::std::string& value);
  #if LANG_CXX11
  void set_role_string(::std::string&& value);
  #endif
  void set_role_string(const char* value);
  void set_role_string(const char* value, size_t size);
  ::std::string* mutable_role_string();
  ::std::string* release_role_string();
  void set_allocated_role_string(::std::string* role_string);

  RoleCase role_case() const;
  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State)
 private:
  void set_has_role_openconfigaaatypessystemdefinedroles();
  void set_has_role_string();

  inline bool has_role() const;
  void clear_role();
  inline void clear_has_role();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* password_;
  ::ywrapper::StringValue* ssh_key_;
  ::ywrapper::StringValue* password_hashed_;
  ::ywrapper::StringValue* username_;
  union RoleUnion {
    RoleUnion() {}
    int role_openconfigaaatypessystemdefinedroles_;
    ::google::protobuf::internal::ArenaStringPtr role_string_;
  } role_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Authentication_Users_User_StateImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Authentication_Users_User : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Authentication.Users.User) */ {
 public:
  System_Aaa_Authentication_Users_User();
  virtual ~System_Aaa_Authentication_Users_User();

  System_Aaa_Authentication_Users_User(const System_Aaa_Authentication_Users_User& from);

  inline System_Aaa_Authentication_Users_User& operator=(const System_Aaa_Authentication_Users_User& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Authentication_Users_User(System_Aaa_Authentication_Users_User&& from) noexcept
    : System_Aaa_Authentication_Users_User() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Authentication_Users_User& operator=(System_Aaa_Authentication_Users_User&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Authentication_Users_User& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Authentication_Users_User* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Authentication_Users_User*>(
               &_System_Aaa_Authentication_Users_User_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    19;

  void Swap(System_Aaa_Authentication_Users_User* other);
  friend void swap(System_Aaa_Authentication_Users_User& a, System_Aaa_Authentication_Users_User& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Authentication_Users_User* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Authentication_Users_User* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Authentication_Users_User& from);
  void MergeFrom(const System_Aaa_Authentication_Users_User& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Authentication_Users_User* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Aaa_Authentication_Users_User_Config Config;
  typedef System_Aaa_Authentication_Users_User_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State state = 285421696 [(.yext.schemapath) = "/system/aaa/authentication/users/user/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 285421696;
  const ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User_State& state() const;
  ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User_State* release_state();
  ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Aaa_Authentication_Users_User_State* state);

  // .openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config config = 298787471 [(.yext.schemapath) = "/system/aaa/authentication/users/user/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 298787471;
  const ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User_Config& config() const;
  ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User_Config* release_config();
  ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Aaa_Authentication_Users_User_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Authentication.Users.User)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User_State* state_;
  ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Authentication_Users_UserImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Authentication_Users_UserKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Authentication.Users.UserKey) */ {
 public:
  System_Aaa_Authentication_Users_UserKey();
  virtual ~System_Aaa_Authentication_Users_UserKey();

  System_Aaa_Authentication_Users_UserKey(const System_Aaa_Authentication_Users_UserKey& from);

  inline System_Aaa_Authentication_Users_UserKey& operator=(const System_Aaa_Authentication_Users_UserKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Authentication_Users_UserKey(System_Aaa_Authentication_Users_UserKey&& from) noexcept
    : System_Aaa_Authentication_Users_UserKey() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Authentication_Users_UserKey& operator=(System_Aaa_Authentication_Users_UserKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Authentication_Users_UserKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Authentication_Users_UserKey* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Authentication_Users_UserKey*>(
               &_System_Aaa_Authentication_Users_UserKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    20;

  void Swap(System_Aaa_Authentication_Users_UserKey* other);
  friend void swap(System_Aaa_Authentication_Users_UserKey& a, System_Aaa_Authentication_Users_UserKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Authentication_Users_UserKey* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Authentication_Users_UserKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Authentication_Users_UserKey& from);
  void MergeFrom(const System_Aaa_Authentication_Users_UserKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Authentication_Users_UserKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string username = 1 [(.yext.schemapath) = "/system/aaa/authentication/users/user/username"];
  void clear_username();
  static const int kUsernameFieldNumber = 1;
  const ::std::string& username() const;
  void set_username(const ::std::string& value);
  #if LANG_CXX11
  void set_username(::std::string&& value);
  #endif
  void set_username(const char* value);
  void set_username(const char* value, size_t size);
  ::std::string* mutable_username();
  ::std::string* release_username();
  void set_allocated_username(::std::string* username);

  // .openconfig.openconfig_system.System.Aaa.Authentication.Users.User user = 2;
  bool has_user() const;
  void clear_user();
  static const int kUserFieldNumber = 2;
  const ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User& user() const;
  ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User* release_user();
  ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User* mutable_user();
  void set_allocated_user(::openconfig::openconfig_system::System_Aaa_Authentication_Users_User* user);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Authentication.Users.UserKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr username_;
  ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User* user_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Authentication_Users_UserKeyImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Authentication_Users : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Authentication.Users) */ {
 public:
  System_Aaa_Authentication_Users();
  virtual ~System_Aaa_Authentication_Users();

  System_Aaa_Authentication_Users(const System_Aaa_Authentication_Users& from);

  inline System_Aaa_Authentication_Users& operator=(const System_Aaa_Authentication_Users& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Authentication_Users(System_Aaa_Authentication_Users&& from) noexcept
    : System_Aaa_Authentication_Users() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Authentication_Users& operator=(System_Aaa_Authentication_Users&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Authentication_Users& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Authentication_Users* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Authentication_Users*>(
               &_System_Aaa_Authentication_Users_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    21;

  void Swap(System_Aaa_Authentication_Users* other);
  friend void swap(System_Aaa_Authentication_Users& a, System_Aaa_Authentication_Users& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Authentication_Users* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Authentication_Users* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Authentication_Users& from);
  void MergeFrom(const System_Aaa_Authentication_Users& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Authentication_Users* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Aaa_Authentication_Users_User User;
  typedef System_Aaa_Authentication_Users_UserKey UserKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_system.System.Aaa.Authentication.Users.UserKey user = 344997694 [(.yext.schemapath) = "/system/aaa/authentication/users/user"];
  int user_size() const;
  void clear_user();
  static const int kUserFieldNumber = 344997694;
  const ::openconfig::openconfig_system::System_Aaa_Authentication_Users_UserKey& user(int index) const;
  ::openconfig::openconfig_system::System_Aaa_Authentication_Users_UserKey* mutable_user(int index);
  ::openconfig::openconfig_system::System_Aaa_Authentication_Users_UserKey* add_user();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authentication_Users_UserKey >*
      mutable_user();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authentication_Users_UserKey >&
      user() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Authentication.Users)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authentication_Users_UserKey > user_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Authentication_UsersImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Authentication : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Authentication) */ {
 public:
  System_Aaa_Authentication();
  virtual ~System_Aaa_Authentication();

  System_Aaa_Authentication(const System_Aaa_Authentication& from);

  inline System_Aaa_Authentication& operator=(const System_Aaa_Authentication& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Authentication(System_Aaa_Authentication&& from) noexcept
    : System_Aaa_Authentication() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Authentication& operator=(System_Aaa_Authentication&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Authentication& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Authentication* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Authentication*>(
               &_System_Aaa_Authentication_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    22;

  void Swap(System_Aaa_Authentication* other);
  friend void swap(System_Aaa_Authentication& a, System_Aaa_Authentication& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Authentication* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Authentication* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Authentication& from);
  void MergeFrom(const System_Aaa_Authentication& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Authentication* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Aaa_Authentication_AdminUser AdminUser;
  typedef System_Aaa_Authentication_Config Config;
  typedef System_Aaa_Authentication_State State;
  typedef System_Aaa_Authentication_Users Users;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Aaa.Authentication.Config config = 161084058 [(.yext.schemapath) = "/system/aaa/authentication/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 161084058;
  const ::openconfig::openconfig_system::System_Aaa_Authentication_Config& config() const;
  ::openconfig::openconfig_system::System_Aaa_Authentication_Config* release_config();
  ::openconfig::openconfig_system::System_Aaa_Authentication_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Aaa_Authentication_Config* config);

  // .openconfig.openconfig_system.System.Aaa.Authentication.AdminUser admin_user = 322829291 [(.yext.schemapath) = "/system/aaa/authentication/admin-user"];
  bool has_admin_user() const;
  void clear_admin_user();
  static const int kAdminUserFieldNumber = 322829291;
  const ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser& admin_user() const;
  ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser* release_admin_user();
  ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser* mutable_admin_user();
  void set_allocated_admin_user(::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser* admin_user);

  // .openconfig.openconfig_system.System.Aaa.Authentication.Users users = 331617008 [(.yext.schemapath) = "/system/aaa/authentication/users"];
  bool has_users() const;
  void clear_users();
  static const int kUsersFieldNumber = 331617008;
  const ::openconfig::openconfig_system::System_Aaa_Authentication_Users& users() const;
  ::openconfig::openconfig_system::System_Aaa_Authentication_Users* release_users();
  ::openconfig::openconfig_system::System_Aaa_Authentication_Users* mutable_users();
  void set_allocated_users(::openconfig::openconfig_system::System_Aaa_Authentication_Users* users);

  // .openconfig.openconfig_system.System.Aaa.Authentication.State state = 392934711 [(.yext.schemapath) = "/system/aaa/authentication/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 392934711;
  const ::openconfig::openconfig_system::System_Aaa_Authentication_State& state() const;
  ::openconfig::openconfig_system::System_Aaa_Authentication_State* release_state();
  ::openconfig::openconfig_system::System_Aaa_Authentication_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Aaa_Authentication_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Authentication)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Aaa_Authentication_Config* config_;
  ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser* admin_user_;
  ::openconfig::openconfig_system::System_Aaa_Authentication_Users* users_;
  ::openconfig::openconfig_system::System_Aaa_Authentication_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_AuthenticationImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Authorization_Config_AuthorizationMethodUnion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Authorization.Config.AuthorizationMethodUnion) */ {
 public:
  System_Aaa_Authorization_Config_AuthorizationMethodUnion();
  virtual ~System_Aaa_Authorization_Config_AuthorizationMethodUnion();

  System_Aaa_Authorization_Config_AuthorizationMethodUnion(const System_Aaa_Authorization_Config_AuthorizationMethodUnion& from);

  inline System_Aaa_Authorization_Config_AuthorizationMethodUnion& operator=(const System_Aaa_Authorization_Config_AuthorizationMethodUnion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Authorization_Config_AuthorizationMethodUnion(System_Aaa_Authorization_Config_AuthorizationMethodUnion&& from) noexcept
    : System_Aaa_Authorization_Config_AuthorizationMethodUnion() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Authorization_Config_AuthorizationMethodUnion& operator=(System_Aaa_Authorization_Config_AuthorizationMethodUnion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Authorization_Config_AuthorizationMethodUnion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Authorization_Config_AuthorizationMethodUnion* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Authorization_Config_AuthorizationMethodUnion*>(
               &_System_Aaa_Authorization_Config_AuthorizationMethodUnion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    23;

  void Swap(System_Aaa_Authorization_Config_AuthorizationMethodUnion* other);
  friend void swap(System_Aaa_Authorization_Config_AuthorizationMethodUnion& a, System_Aaa_Authorization_Config_AuthorizationMethodUnion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Authorization_Config_AuthorizationMethodUnion* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Authorization_Config_AuthorizationMethodUnion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Authorization_Config_AuthorizationMethodUnion& from);
  void MergeFrom(const System_Aaa_Authorization_Config_AuthorizationMethodUnion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Authorization_Config_AuthorizationMethodUnion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string authorization_method_string = 508375681;
  void clear_authorization_method_string();
  static const int kAuthorizationMethodStringFieldNumber = 508375681;
  const ::std::string& authorization_method_string() const;
  void set_authorization_method_string(const ::std::string& value);
  #if LANG_CXX11
  void set_authorization_method_string(::std::string&& value);
  #endif
  void set_authorization_method_string(const char* value);
  void set_authorization_method_string(const char* value, size_t size);
  ::std::string* mutable_authorization_method_string();
  ::std::string* release_authorization_method_string();
  void set_allocated_authorization_method_string(::std::string* authorization_method_string);

  // .openconfig.enums.OpenconfigAaaTypesAAAMETHODTYPE authorization_method_openconfigaaatypesaaamethodtype = 261320746;
  void clear_authorization_method_openconfigaaatypesaaamethodtype();
  static const int kAuthorizationMethodOpenconfigaaatypesaaamethodtypeFieldNumber = 261320746;
  ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE authorization_method_openconfigaaatypesaaamethodtype() const;
  void set_authorization_method_openconfigaaatypesaaamethodtype(::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Authorization.Config.AuthorizationMethodUnion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr authorization_method_string_;
  int authorization_method_openconfigaaatypesaaamethodtype_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Authorization_Config_AuthorizationMethodUnionImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Authorization_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Authorization.Config) */ {
 public:
  System_Aaa_Authorization_Config();
  virtual ~System_Aaa_Authorization_Config();

  System_Aaa_Authorization_Config(const System_Aaa_Authorization_Config& from);

  inline System_Aaa_Authorization_Config& operator=(const System_Aaa_Authorization_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Authorization_Config(System_Aaa_Authorization_Config&& from) noexcept
    : System_Aaa_Authorization_Config() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Authorization_Config& operator=(System_Aaa_Authorization_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Authorization_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Authorization_Config* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Authorization_Config*>(
               &_System_Aaa_Authorization_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    24;

  void Swap(System_Aaa_Authorization_Config* other);
  friend void swap(System_Aaa_Authorization_Config& a, System_Aaa_Authorization_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Authorization_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Authorization_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Authorization_Config& from);
  void MergeFrom(const System_Aaa_Authorization_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Authorization_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Aaa_Authorization_Config_AuthorizationMethodUnion AuthorizationMethodUnion;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_system.System.Aaa.Authorization.Config.AuthorizationMethodUnion authorization_method = 399020027 [(.yext.schemapath) = "/system/aaa/authorization/config/authorization-method"];
  int authorization_method_size() const;
  void clear_authorization_method();
  static const int kAuthorizationMethodFieldNumber = 399020027;
  const ::openconfig::openconfig_system::System_Aaa_Authorization_Config_AuthorizationMethodUnion& authorization_method(int index) const;
  ::openconfig::openconfig_system::System_Aaa_Authorization_Config_AuthorizationMethodUnion* mutable_authorization_method(int index);
  ::openconfig::openconfig_system::System_Aaa_Authorization_Config_AuthorizationMethodUnion* add_authorization_method();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authorization_Config_AuthorizationMethodUnion >*
      mutable_authorization_method();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authorization_Config_AuthorizationMethodUnion >&
      authorization_method() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Authorization.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authorization_Config_AuthorizationMethodUnion > authorization_method_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Authorization_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Authorization_Events_Event_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Authorization.Events.Event.Config) */ {
 public:
  System_Aaa_Authorization_Events_Event_Config();
  virtual ~System_Aaa_Authorization_Events_Event_Config();

  System_Aaa_Authorization_Events_Event_Config(const System_Aaa_Authorization_Events_Event_Config& from);

  inline System_Aaa_Authorization_Events_Event_Config& operator=(const System_Aaa_Authorization_Events_Event_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Authorization_Events_Event_Config(System_Aaa_Authorization_Events_Event_Config&& from) noexcept
    : System_Aaa_Authorization_Events_Event_Config() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Authorization_Events_Event_Config& operator=(System_Aaa_Authorization_Events_Event_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Authorization_Events_Event_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Authorization_Events_Event_Config* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Authorization_Events_Event_Config*>(
               &_System_Aaa_Authorization_Events_Event_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    25;

  void Swap(System_Aaa_Authorization_Events_Event_Config* other);
  friend void swap(System_Aaa_Authorization_Events_Event_Config& a, System_Aaa_Authorization_Events_Event_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Authorization_Events_Event_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Authorization_Events_Event_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Authorization_Events_Event_Config& from);
  void MergeFrom(const System_Aaa_Authorization_Events_Event_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Authorization_Events_Event_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.enums.OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE event_type = 449780140 [(.yext.schemapath) = "/system/aaa/authorization/events/event/config/event-type"];
  void clear_event_type();
  static const int kEventTypeFieldNumber = 449780140;
  ::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE event_type() const;
  void set_event_type(::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Authorization.Events.Event.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int event_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Authorization_Events_Event_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Authorization_Events_Event_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Authorization.Events.Event.State) */ {
 public:
  System_Aaa_Authorization_Events_Event_State();
  virtual ~System_Aaa_Authorization_Events_Event_State();

  System_Aaa_Authorization_Events_Event_State(const System_Aaa_Authorization_Events_Event_State& from);

  inline System_Aaa_Authorization_Events_Event_State& operator=(const System_Aaa_Authorization_Events_Event_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Authorization_Events_Event_State(System_Aaa_Authorization_Events_Event_State&& from) noexcept
    : System_Aaa_Authorization_Events_Event_State() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Authorization_Events_Event_State& operator=(System_Aaa_Authorization_Events_Event_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Authorization_Events_Event_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Authorization_Events_Event_State* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Authorization_Events_Event_State*>(
               &_System_Aaa_Authorization_Events_Event_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    26;

  void Swap(System_Aaa_Authorization_Events_Event_State* other);
  friend void swap(System_Aaa_Authorization_Events_Event_State& a, System_Aaa_Authorization_Events_Event_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Authorization_Events_Event_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Authorization_Events_Event_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Authorization_Events_Event_State& from);
  void MergeFrom(const System_Aaa_Authorization_Events_Event_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Authorization_Events_Event_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.enums.OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE event_type = 301693687 [(.yext.schemapath) = "/system/aaa/authorization/events/event/state/event-type"];
  void clear_event_type();
  static const int kEventTypeFieldNumber = 301693687;
  ::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE event_type() const;
  void set_event_type(::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Authorization.Events.Event.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int event_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Authorization_Events_Event_StateImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Authorization_Events_Event : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Authorization.Events.Event) */ {
 public:
  System_Aaa_Authorization_Events_Event();
  virtual ~System_Aaa_Authorization_Events_Event();

  System_Aaa_Authorization_Events_Event(const System_Aaa_Authorization_Events_Event& from);

  inline System_Aaa_Authorization_Events_Event& operator=(const System_Aaa_Authorization_Events_Event& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Authorization_Events_Event(System_Aaa_Authorization_Events_Event&& from) noexcept
    : System_Aaa_Authorization_Events_Event() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Authorization_Events_Event& operator=(System_Aaa_Authorization_Events_Event&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Authorization_Events_Event& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Authorization_Events_Event* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Authorization_Events_Event*>(
               &_System_Aaa_Authorization_Events_Event_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    27;

  void Swap(System_Aaa_Authorization_Events_Event* other);
  friend void swap(System_Aaa_Authorization_Events_Event& a, System_Aaa_Authorization_Events_Event& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Authorization_Events_Event* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Authorization_Events_Event* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Authorization_Events_Event& from);
  void MergeFrom(const System_Aaa_Authorization_Events_Event& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Authorization_Events_Event* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Aaa_Authorization_Events_Event_Config Config;
  typedef System_Aaa_Authorization_Events_Event_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Aaa.Authorization.Events.Event.State state = 241306543 [(.yext.schemapath) = "/system/aaa/authorization/events/event/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 241306543;
  const ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event_State& state() const;
  ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event_State* release_state();
  ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event_State* state);

  // .openconfig.openconfig_system.System.Aaa.Authorization.Events.Event.Config config = 284746930 [(.yext.schemapath) = "/system/aaa/authorization/events/event/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 284746930;
  const ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event_Config& config() const;
  ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event_Config* release_config();
  ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Authorization.Events.Event)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event_State* state_;
  ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Authorization_Events_EventImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Authorization_Events_EventKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Authorization.Events.EventKey) */ {
 public:
  System_Aaa_Authorization_Events_EventKey();
  virtual ~System_Aaa_Authorization_Events_EventKey();

  System_Aaa_Authorization_Events_EventKey(const System_Aaa_Authorization_Events_EventKey& from);

  inline System_Aaa_Authorization_Events_EventKey& operator=(const System_Aaa_Authorization_Events_EventKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Authorization_Events_EventKey(System_Aaa_Authorization_Events_EventKey&& from) noexcept
    : System_Aaa_Authorization_Events_EventKey() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Authorization_Events_EventKey& operator=(System_Aaa_Authorization_Events_EventKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Authorization_Events_EventKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Authorization_Events_EventKey* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Authorization_Events_EventKey*>(
               &_System_Aaa_Authorization_Events_EventKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    28;

  void Swap(System_Aaa_Authorization_Events_EventKey* other);
  friend void swap(System_Aaa_Authorization_Events_EventKey& a, System_Aaa_Authorization_Events_EventKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Authorization_Events_EventKey* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Authorization_Events_EventKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Authorization_Events_EventKey& from);
  void MergeFrom(const System_Aaa_Authorization_Events_EventKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Authorization_Events_EventKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Aaa.Authorization.Events.Event event = 2;
  bool has_event() const;
  void clear_event();
  static const int kEventFieldNumber = 2;
  const ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event& event() const;
  ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event* release_event();
  ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event* mutable_event();
  void set_allocated_event(::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event* event);

  // .openconfig.enums.OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE event_type = 1 [(.yext.schemapath) = "/system/aaa/authorization/events/event/event-type"];
  void clear_event_type();
  static const int kEventTypeFieldNumber = 1;
  ::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE event_type() const;
  void set_event_type(::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Authorization.Events.EventKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event* event_;
  int event_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Authorization_Events_EventKeyImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Authorization_Events : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Authorization.Events) */ {
 public:
  System_Aaa_Authorization_Events();
  virtual ~System_Aaa_Authorization_Events();

  System_Aaa_Authorization_Events(const System_Aaa_Authorization_Events& from);

  inline System_Aaa_Authorization_Events& operator=(const System_Aaa_Authorization_Events& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Authorization_Events(System_Aaa_Authorization_Events&& from) noexcept
    : System_Aaa_Authorization_Events() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Authorization_Events& operator=(System_Aaa_Authorization_Events&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Authorization_Events& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Authorization_Events* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Authorization_Events*>(
               &_System_Aaa_Authorization_Events_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    29;

  void Swap(System_Aaa_Authorization_Events* other);
  friend void swap(System_Aaa_Authorization_Events& a, System_Aaa_Authorization_Events& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Authorization_Events* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Authorization_Events* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Authorization_Events& from);
  void MergeFrom(const System_Aaa_Authorization_Events& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Authorization_Events* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Aaa_Authorization_Events_Event Event;
  typedef System_Aaa_Authorization_Events_EventKey EventKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_system.System.Aaa.Authorization.Events.EventKey event = 517393149 [(.yext.schemapath) = "/system/aaa/authorization/events/event"];
  int event_size() const;
  void clear_event();
  static const int kEventFieldNumber = 517393149;
  const ::openconfig::openconfig_system::System_Aaa_Authorization_Events_EventKey& event(int index) const;
  ::openconfig::openconfig_system::System_Aaa_Authorization_Events_EventKey* mutable_event(int index);
  ::openconfig::openconfig_system::System_Aaa_Authorization_Events_EventKey* add_event();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authorization_Events_EventKey >*
      mutable_event();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authorization_Events_EventKey >&
      event() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Authorization.Events)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authorization_Events_EventKey > event_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Authorization_EventsImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Authorization_State_AuthorizationMethodUnion : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Authorization.State.AuthorizationMethodUnion) */ {
 public:
  System_Aaa_Authorization_State_AuthorizationMethodUnion();
  virtual ~System_Aaa_Authorization_State_AuthorizationMethodUnion();

  System_Aaa_Authorization_State_AuthorizationMethodUnion(const System_Aaa_Authorization_State_AuthorizationMethodUnion& from);

  inline System_Aaa_Authorization_State_AuthorizationMethodUnion& operator=(const System_Aaa_Authorization_State_AuthorizationMethodUnion& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Authorization_State_AuthorizationMethodUnion(System_Aaa_Authorization_State_AuthorizationMethodUnion&& from) noexcept
    : System_Aaa_Authorization_State_AuthorizationMethodUnion() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Authorization_State_AuthorizationMethodUnion& operator=(System_Aaa_Authorization_State_AuthorizationMethodUnion&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Authorization_State_AuthorizationMethodUnion& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Authorization_State_AuthorizationMethodUnion* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Authorization_State_AuthorizationMethodUnion*>(
               &_System_Aaa_Authorization_State_AuthorizationMethodUnion_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    30;

  void Swap(System_Aaa_Authorization_State_AuthorizationMethodUnion* other);
  friend void swap(System_Aaa_Authorization_State_AuthorizationMethodUnion& a, System_Aaa_Authorization_State_AuthorizationMethodUnion& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Authorization_State_AuthorizationMethodUnion* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Authorization_State_AuthorizationMethodUnion* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Authorization_State_AuthorizationMethodUnion& from);
  void MergeFrom(const System_Aaa_Authorization_State_AuthorizationMethodUnion& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Authorization_State_AuthorizationMethodUnion* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string authorization_method_string = 123095898;
  void clear_authorization_method_string();
  static const int kAuthorizationMethodStringFieldNumber = 123095898;
  const ::std::string& authorization_method_string() const;
  void set_authorization_method_string(const ::std::string& value);
  #if LANG_CXX11
  void set_authorization_method_string(::std::string&& value);
  #endif
  void set_authorization_method_string(const char* value);
  void set_authorization_method_string(const char* value, size_t size);
  ::std::string* mutable_authorization_method_string();
  ::std::string* release_authorization_method_string();
  void set_allocated_authorization_method_string(::std::string* authorization_method_string);

  // .openconfig.enums.OpenconfigAaaTypesAAAMETHODTYPE authorization_method_openconfigaaatypesaaamethodtype = 531382335;
  void clear_authorization_method_openconfigaaatypesaaamethodtype();
  static const int kAuthorizationMethodOpenconfigaaatypesaaamethodtypeFieldNumber = 531382335;
  ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE authorization_method_openconfigaaatypesaaamethodtype() const;
  void set_authorization_method_openconfigaaatypesaaamethodtype(::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Authorization.State.AuthorizationMethodUnion)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr authorization_method_string_;
  int authorization_method_openconfigaaatypesaaamethodtype_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Authorization_State_AuthorizationMethodUnionImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Authorization_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Authorization.State) */ {
 public:
  System_Aaa_Authorization_State();
  virtual ~System_Aaa_Authorization_State();

  System_Aaa_Authorization_State(const System_Aaa_Authorization_State& from);

  inline System_Aaa_Authorization_State& operator=(const System_Aaa_Authorization_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Authorization_State(System_Aaa_Authorization_State&& from) noexcept
    : System_Aaa_Authorization_State() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Authorization_State& operator=(System_Aaa_Authorization_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Authorization_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Authorization_State* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Authorization_State*>(
               &_System_Aaa_Authorization_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    31;

  void Swap(System_Aaa_Authorization_State* other);
  friend void swap(System_Aaa_Authorization_State& a, System_Aaa_Authorization_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Authorization_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Authorization_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Authorization_State& from);
  void MergeFrom(const System_Aaa_Authorization_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Authorization_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Aaa_Authorization_State_AuthorizationMethodUnion AuthorizationMethodUnion;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_system.System.Aaa.Authorization.State.AuthorizationMethodUnion authorization_method = 60171346 [(.yext.schemapath) = "/system/aaa/authorization/state/authorization-method"];
  int authorization_method_size() const;
  void clear_authorization_method();
  static const int kAuthorizationMethodFieldNumber = 60171346;
  const ::openconfig::openconfig_system::System_Aaa_Authorization_State_AuthorizationMethodUnion& authorization_method(int index) const;
  ::openconfig::openconfig_system::System_Aaa_Authorization_State_AuthorizationMethodUnion* mutable_authorization_method(int index);
  ::openconfig::openconfig_system::System_Aaa_Authorization_State_AuthorizationMethodUnion* add_authorization_method();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authorization_State_AuthorizationMethodUnion >*
      mutable_authorization_method();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authorization_State_AuthorizationMethodUnion >&
      authorization_method() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Authorization.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authorization_State_AuthorizationMethodUnion > authorization_method_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_Authorization_StateImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Authorization : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Authorization) */ {
 public:
  System_Aaa_Authorization();
  virtual ~System_Aaa_Authorization();

  System_Aaa_Authorization(const System_Aaa_Authorization& from);

  inline System_Aaa_Authorization& operator=(const System_Aaa_Authorization& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Authorization(System_Aaa_Authorization&& from) noexcept
    : System_Aaa_Authorization() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Authorization& operator=(System_Aaa_Authorization&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Authorization& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Authorization* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Authorization*>(
               &_System_Aaa_Authorization_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    32;

  void Swap(System_Aaa_Authorization* other);
  friend void swap(System_Aaa_Authorization& a, System_Aaa_Authorization& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Authorization* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Authorization* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Authorization& from);
  void MergeFrom(const System_Aaa_Authorization& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Authorization* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Aaa_Authorization_Config Config;
  typedef System_Aaa_Authorization_Events Events;
  typedef System_Aaa_Authorization_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Aaa.Authorization.Config config = 60541017 [(.yext.schemapath) = "/system/aaa/authorization/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 60541017;
  const ::openconfig::openconfig_system::System_Aaa_Authorization_Config& config() const;
  ::openconfig::openconfig_system::System_Aaa_Authorization_Config* release_config();
  ::openconfig::openconfig_system::System_Aaa_Authorization_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Aaa_Authorization_Config* config);

  // .openconfig.openconfig_system.System.Aaa.Authorization.Events events = 103903920 [(.yext.schemapath) = "/system/aaa/authorization/events"];
  bool has_events() const;
  void clear_events();
  static const int kEventsFieldNumber = 103903920;
  const ::openconfig::openconfig_system::System_Aaa_Authorization_Events& events() const;
  ::openconfig::openconfig_system::System_Aaa_Authorization_Events* release_events();
  ::openconfig::openconfig_system::System_Aaa_Authorization_Events* mutable_events();
  void set_allocated_events(::openconfig::openconfig_system::System_Aaa_Authorization_Events* events);

  // .openconfig.openconfig_system.System.Aaa.Authorization.State state = 441078062 [(.yext.schemapath) = "/system/aaa/authorization/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 441078062;
  const ::openconfig::openconfig_system::System_Aaa_Authorization_State& state() const;
  ::openconfig::openconfig_system::System_Aaa_Authorization_State* release_state();
  ::openconfig::openconfig_system::System_Aaa_Authorization_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Aaa_Authorization_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Authorization)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Aaa_Authorization_Config* config_;
  ::openconfig::openconfig_system::System_Aaa_Authorization_Events* events_;
  ::openconfig::openconfig_system::System_Aaa_Authorization_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_AuthorizationImpl();
};
// -------------------------------------------------------------------

class System_Aaa_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.Config) */ {
 public:
  System_Aaa_Config();
  virtual ~System_Aaa_Config();

  System_Aaa_Config(const System_Aaa_Config& from);

  inline System_Aaa_Config& operator=(const System_Aaa_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_Config(System_Aaa_Config&& from) noexcept
    : System_Aaa_Config() {
    *this = ::std::move(from);
  }

  inline System_Aaa_Config& operator=(System_Aaa_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_Config* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_Config*>(
               &_System_Aaa_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    33;

  void Swap(System_Aaa_Config* other);
  friend void swap(System_Aaa_Config& a, System_Aaa_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_Config& from);
  void MergeFrom(const System_Aaa_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Aaa_ServerGroups_ServerGroup_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Config) */ {
 public:
  System_Aaa_ServerGroups_ServerGroup_Config();
  virtual ~System_Aaa_ServerGroups_ServerGroup_Config();

  System_Aaa_ServerGroups_ServerGroup_Config(const System_Aaa_ServerGroups_ServerGroup_Config& from);

  inline System_Aaa_ServerGroups_ServerGroup_Config& operator=(const System_Aaa_ServerGroups_ServerGroup_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_ServerGroups_ServerGroup_Config(System_Aaa_ServerGroups_ServerGroup_Config&& from) noexcept
    : System_Aaa_ServerGroups_ServerGroup_Config() {
    *this = ::std::move(from);
  }

  inline System_Aaa_ServerGroups_ServerGroup_Config& operator=(System_Aaa_ServerGroups_ServerGroup_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_ServerGroups_ServerGroup_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_ServerGroups_ServerGroup_Config* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_ServerGroups_ServerGroup_Config*>(
               &_System_Aaa_ServerGroups_ServerGroup_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    34;

  void Swap(System_Aaa_ServerGroups_ServerGroup_Config* other);
  friend void swap(System_Aaa_ServerGroups_ServerGroup_Config& a, System_Aaa_ServerGroups_ServerGroup_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_ServerGroups_ServerGroup_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_ServerGroups_ServerGroup_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_ServerGroups_ServerGroup_Config& from);
  void MergeFrom(const System_Aaa_ServerGroups_ServerGroup_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_ServerGroups_ServerGroup_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue name = 347729010 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/config/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 347729010;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .openconfig.enums.OpenconfigAaaTypesAAASERVERTYPE type = 70733999 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/config/type"];
  void clear_type();
  static const int kTypeFieldNumber = 70733999;
  ::openconfig::enums::OpenconfigAaaTypesAAASERVERTYPE type() const;
  void set_type(::openconfig::enums::OpenconfigAaaTypesAAASERVERTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* name_;
  int type_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config) */ {
 public:
  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config();
  virtual ~System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config();

  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config& from);

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config& operator=(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config&& from) noexcept
    : System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config() {
    *this = ::std::move(from);
  }

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config& operator=(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config*>(
               &_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    35;

  void Swap(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* other);
  friend void swap(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config& a, System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config& from);
  void MergeFrom(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue address = 25514256 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/config/address"];
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 25514256;
  const ::ywrapper::StringValue& address() const;
  ::ywrapper::StringValue* release_address();
  ::ywrapper::StringValue* mutable_address();
  void set_allocated_address(::ywrapper::StringValue* address);

  // .ywrapper.StringValue name = 197201537 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/config/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 197201537;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .ywrapper.UintValue timeout = 308122545 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/config/timeout"];
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 308122545;
  const ::ywrapper::UintValue& timeout() const;
  ::ywrapper::UintValue* release_timeout();
  ::ywrapper::UintValue* mutable_timeout();
  void set_allocated_timeout(::ywrapper::UintValue* timeout);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* address_;
  ::ywrapper::StringValue* name_;
  ::ywrapper::UintValue* timeout_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config) */ {
 public:
  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config();
  virtual ~System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config();

  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config& from);

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config& operator=(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config&& from) noexcept
    : System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config() {
    *this = ::std::move(from);
  }

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config& operator=(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config*>(
               &_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    36;

  void Swap(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* other);
  friend void swap(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config& a, System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config& from);
  void MergeFrom(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue secret_key = 91269351 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/config/secret-key"];
  bool has_secret_key() const;
  void clear_secret_key();
  static const int kSecretKeyFieldNumber = 91269351;
  const ::ywrapper::StringValue& secret_key() const;
  ::ywrapper::StringValue* release_secret_key();
  ::ywrapper::StringValue* mutable_secret_key();
  void set_allocated_secret_key(::ywrapper::StringValue* secret_key);

  // .ywrapper.UintValue acct_port = 289040892 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/config/acct-port"];
  bool has_acct_port() const;
  void clear_acct_port();
  static const int kAcctPortFieldNumber = 289040892;
  const ::ywrapper::UintValue& acct_port() const;
  ::ywrapper::UintValue* release_acct_port();
  ::ywrapper::UintValue* mutable_acct_port();
  void set_allocated_acct_port(::ywrapper::UintValue* acct_port);

  // .ywrapper.UintValue auth_port = 298939869 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/config/auth-port"];
  bool has_auth_port() const;
  void clear_auth_port();
  static const int kAuthPortFieldNumber = 298939869;
  const ::ywrapper::UintValue& auth_port() const;
  ::ywrapper::UintValue* release_auth_port();
  ::ywrapper::UintValue* mutable_auth_port();
  void set_allocated_auth_port(::ywrapper::UintValue* auth_port);

  // .ywrapper.UintValue retransmit_attempts = 418545541 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/config/retransmit-attempts"];
  bool has_retransmit_attempts() const;
  void clear_retransmit_attempts();
  static const int kRetransmitAttemptsFieldNumber = 418545541;
  const ::ywrapper::UintValue& retransmit_attempts() const;
  ::ywrapper::UintValue* release_retransmit_attempts();
  ::ywrapper::UintValue* mutable_retransmit_attempts();
  void set_allocated_retransmit_attempts(::ywrapper::UintValue* retransmit_attempts);

  // .ywrapper.StringValue source_address = 529894017 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/config/source-address"];
  bool has_source_address() const;
  void clear_source_address();
  static const int kSourceAddressFieldNumber = 529894017;
  const ::ywrapper::StringValue& source_address() const;
  ::ywrapper::StringValue* release_source_address();
  ::ywrapper::StringValue* mutable_source_address();
  void set_allocated_source_address(::ywrapper::StringValue* source_address);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* secret_key_;
  ::ywrapper::UintValue* acct_port_;
  ::ywrapper::UintValue* auth_port_;
  ::ywrapper::UintValue* retransmit_attempts_;
  ::ywrapper::StringValue* source_address_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters) */ {
 public:
  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters();
  virtual ~System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters();

  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters& from);

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters& operator=(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters&& from) noexcept
    : System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters() {
    *this = ::std::move(from);
  }

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters& operator=(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters*>(
               &_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    37;

  void Swap(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* other);
  friend void swap(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters& a, System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters& from);
  void MergeFrom(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue timeout_access_requests = 24602675 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/timeout-access-requests"];
  bool has_timeout_access_requests() const;
  void clear_timeout_access_requests();
  static const int kTimeoutAccessRequestsFieldNumber = 24602675;
  const ::ywrapper::UintValue& timeout_access_requests() const;
  ::ywrapper::UintValue* release_timeout_access_requests();
  ::ywrapper::UintValue* mutable_timeout_access_requests();
  void set_allocated_timeout_access_requests(::ywrapper::UintValue* timeout_access_requests);

  // .ywrapper.UintValue access_rejects = 25892249 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-rejects"];
  bool has_access_rejects() const;
  void clear_access_rejects();
  static const int kAccessRejectsFieldNumber = 25892249;
  const ::ywrapper::UintValue& access_rejects() const;
  ::ywrapper::UintValue* release_access_rejects();
  ::ywrapper::UintValue* mutable_access_rejects();
  void set_allocated_access_rejects(::ywrapper::UintValue* access_rejects);

  // .ywrapper.UintValue access_accepts = 215193910 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-accepts"];
  bool has_access_accepts() const;
  void clear_access_accepts();
  static const int kAccessAcceptsFieldNumber = 215193910;
  const ::ywrapper::UintValue& access_accepts() const;
  ::ywrapper::UintValue* release_access_accepts();
  ::ywrapper::UintValue* mutable_access_accepts();
  void set_allocated_access_accepts(::ywrapper::UintValue* access_accepts);

  // .ywrapper.UintValue retried_access_requests = 400682451 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/retried-access-requests"];
  bool has_retried_access_requests() const;
  void clear_retried_access_requests();
  static const int kRetriedAccessRequestsFieldNumber = 400682451;
  const ::ywrapper::UintValue& retried_access_requests() const;
  ::ywrapper::UintValue* release_retried_access_requests();
  ::ywrapper::UintValue* mutable_retried_access_requests();
  void set_allocated_retried_access_requests(::ywrapper::UintValue* retried_access_requests);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* timeout_access_requests_;
  ::ywrapper::UintValue* access_rejects_;
  ::ywrapper::UintValue* access_accepts_;
  ::ywrapper::UintValue* retried_access_requests_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_CountersImpl();
};
// -------------------------------------------------------------------

class System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State) */ {
 public:
  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State();
  virtual ~System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State();

  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State& from);

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State& operator=(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State&& from) noexcept
    : System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State() {
    *this = ::std::move(from);
  }

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State& operator=(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State*>(
               &_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    38;

  void Swap(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* other);
  friend void swap(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State& a, System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State& from);
  void MergeFrom(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters Counters;

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue retransmit_attempts = 30010608 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/state/retransmit-attempts"];
  bool has_retransmit_attempts() const;
  void clear_retransmit_attempts();
  static const int kRetransmitAttemptsFieldNumber = 30010608;
  const ::ywrapper::UintValue& retransmit_attempts() const;
  ::ywrapper::UintValue* release_retransmit_attempts();
  ::ywrapper::UintValue* mutable_retransmit_attempts();
  void set_allocated_retransmit_attempts(::ywrapper::UintValue* retransmit_attempts);

  // .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters counters = 38611033 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/state/counters"];
  bool has_counters() const;
  void clear_counters();
  static const int kCountersFieldNumber = 38611033;
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters& counters() const;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* release_counters();
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* mutable_counters();
  void set_allocated_counters(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* counters);

  // .ywrapper.StringValue source_address = 50916050 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/state/source-address"];
  bool has_source_address() const;
  void clear_source_address();
  static const int kSourceAddressFieldNumber = 50916050;
  const ::ywrapper::StringValue& source_address() const;
  ::ywrapper::StringValue* release_source_address();
  ::ywrapper::StringValue* mutable_source_address();
  void set_allocated_source_address(::ywrapper::StringValue* source_address);

  // .ywrapper.StringValue secret_key = 162926660 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/state/secret-key"];
  bool has_secret_key() const;
  void clear_secret_key();
  static const int kSecretKeyFieldNumber = 162926660;
  const ::ywrapper::StringValue& secret_key() const;
  ::ywrapper::StringValue* release_secret_key();
  ::ywrapper::StringValue* mutable_secret_key();
  void set_allocated_secret_key(::ywrapper::StringValue* secret_key);

  // .ywrapper.UintValue auth_port = 214229728 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/state/auth-port"];
  bool has_auth_port() const;
  void clear_auth_port();
  static const int kAuthPortFieldNumber = 214229728;
  const ::ywrapper::UintValue& auth_port() const;
  ::ywrapper::UintValue* release_auth_port();
  ::ywrapper::UintValue* mutable_auth_port();
  void set_allocated_auth_port(::ywrapper::UintValue* auth_port);

  // .ywrapper.UintValue acct_port = 333746757 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/state/acct-port"];
  bool has_acct_port() const;
  void clear_acct_port();
  static const int kAcctPortFieldNumber = 333746757;
  const ::ywrapper::UintValue& acct_port() const;
  ::ywrapper::UintValue* release_acct_port();
  ::ywrapper::UintValue* mutable_acct_port();
  void set_allocated_acct_port(::ywrapper::UintValue* acct_port);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* retransmit_attempts_;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* counters_;
  ::ywrapper::StringValue* source_address_;
  ::ywrapper::StringValue* secret_key_;
  ::ywrapper::UintValue* auth_port_;
  ::ywrapper::UintValue* acct_port_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_StateImpl();
};
// -------------------------------------------------------------------

class System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius) */ {
 public:
  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius();
  virtual ~System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius();

  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius& from);

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius& operator=(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius&& from) noexcept
    : System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius() {
    *this = ::std::move(from);
  }

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius& operator=(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius*>(
               &_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    39;

  void Swap(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* other);
  friend void swap(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius& a, System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius& from);
  void MergeFrom(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config Config;
  typedef System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State state = 245647275 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 245647275;
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State& state() const;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* release_state();
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* state);

  // .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config config = 380583358 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 380583358;
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config& config() const;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* release_config();
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* state_;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_RadiusImpl();
};
// -------------------------------------------------------------------

class System_Aaa_ServerGroups_ServerGroup_Servers_Server_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State) */ {
 public:
  System_Aaa_ServerGroups_ServerGroup_Servers_Server_State();
  virtual ~System_Aaa_ServerGroups_ServerGroup_Servers_Server_State();

  System_Aaa_ServerGroups_ServerGroup_Servers_Server_State(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_State& from);

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server_State& operator=(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_ServerGroups_ServerGroup_Servers_Server_State(System_Aaa_ServerGroups_ServerGroup_Servers_Server_State&& from) noexcept
    : System_Aaa_ServerGroups_ServerGroup_Servers_Server_State() {
    *this = ::std::move(from);
  }

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server_State& operator=(System_Aaa_ServerGroups_ServerGroup_Servers_Server_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_ServerGroups_ServerGroup_Servers_Server_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_ServerGroups_ServerGroup_Servers_Server_State*>(
               &_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    40;

  void Swap(System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* other);
  friend void swap(System_Aaa_ServerGroups_ServerGroup_Servers_Server_State& a, System_Aaa_ServerGroups_ServerGroup_Servers_Server_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_State& from);
  void MergeFrom(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue connection_opens = 74843905 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/state/connection-opens"];
  bool has_connection_opens() const;
  void clear_connection_opens();
  static const int kConnectionOpensFieldNumber = 74843905;
  const ::ywrapper::UintValue& connection_opens() const;
  ::ywrapper::UintValue* release_connection_opens();
  ::ywrapper::UintValue* mutable_connection_opens();
  void set_allocated_connection_opens(::ywrapper::UintValue* connection_opens);

  // .ywrapper.StringValue address = 108601531 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/state/address"];
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 108601531;
  const ::ywrapper::StringValue& address() const;
  ::ywrapper::StringValue* release_address();
  ::ywrapper::StringValue* mutable_address();
  void set_allocated_address(::ywrapper::StringValue* address);

  // .ywrapper.UintValue connection_failures = 113553227 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/state/connection-failures"];
  bool has_connection_failures() const;
  void clear_connection_failures();
  static const int kConnectionFailuresFieldNumber = 113553227;
  const ::ywrapper::UintValue& connection_failures() const;
  ::ywrapper::UintValue* release_connection_failures();
  ::ywrapper::UintValue* mutable_connection_failures();
  void set_allocated_connection_failures(::ywrapper::UintValue* connection_failures);

  // .ywrapper.UintValue connection_aborts = 125162735 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/state/connection-aborts"];
  bool has_connection_aborts() const;
  void clear_connection_aborts();
  static const int kConnectionAbortsFieldNumber = 125162735;
  const ::ywrapper::UintValue& connection_aborts() const;
  ::ywrapper::UintValue* release_connection_aborts();
  ::ywrapper::UintValue* mutable_connection_aborts();
  void set_allocated_connection_aborts(::ywrapper::UintValue* connection_aborts);

  // .ywrapper.UintValue connection_closes = 161631333 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/state/connection-closes"];
  bool has_connection_closes() const;
  void clear_connection_closes();
  static const int kConnectionClosesFieldNumber = 161631333;
  const ::ywrapper::UintValue& connection_closes() const;
  ::ywrapper::UintValue* release_connection_closes();
  ::ywrapper::UintValue* mutable_connection_closes();
  void set_allocated_connection_closes(::ywrapper::UintValue* connection_closes);

  // .ywrapper.StringValue name = 179223720 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/state/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 179223720;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .ywrapper.UintValue messages_received = 183175971 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/state/messages-received"];
  bool has_messages_received() const;
  void clear_messages_received();
  static const int kMessagesReceivedFieldNumber = 183175971;
  const ::ywrapper::UintValue& messages_received() const;
  ::ywrapper::UintValue* release_messages_received();
  ::ywrapper::UintValue* mutable_messages_received();
  void set_allocated_messages_received(::ywrapper::UintValue* messages_received);

  // .ywrapper.UintValue timeout = 255067946 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/state/timeout"];
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 255067946;
  const ::ywrapper::UintValue& timeout() const;
  ::ywrapper::UintValue* release_timeout();
  ::ywrapper::UintValue* mutable_timeout();
  void set_allocated_timeout(::ywrapper::UintValue* timeout);

  // .ywrapper.UintValue connection_timeouts = 408747310 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/state/connection-timeouts"];
  bool has_connection_timeouts() const;
  void clear_connection_timeouts();
  static const int kConnectionTimeoutsFieldNumber = 408747310;
  const ::ywrapper::UintValue& connection_timeouts() const;
  ::ywrapper::UintValue* release_connection_timeouts();
  ::ywrapper::UintValue* mutable_connection_timeouts();
  void set_allocated_connection_timeouts(::ywrapper::UintValue* connection_timeouts);

  // .ywrapper.UintValue messages_sent = 461917808 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/state/messages-sent"];
  bool has_messages_sent() const;
  void clear_messages_sent();
  static const int kMessagesSentFieldNumber = 461917808;
  const ::ywrapper::UintValue& messages_sent() const;
  ::ywrapper::UintValue* release_messages_sent();
  ::ywrapper::UintValue* mutable_messages_sent();
  void set_allocated_messages_sent(::ywrapper::UintValue* messages_sent);

  // .ywrapper.UintValue errors_received = 531130208 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/state/errors-received"];
  bool has_errors_received() const;
  void clear_errors_received();
  static const int kErrorsReceivedFieldNumber = 531130208;
  const ::ywrapper::UintValue& errors_received() const;
  ::ywrapper::UintValue* release_errors_received();
  ::ywrapper::UintValue* mutable_errors_received();
  void set_allocated_errors_received(::ywrapper::UintValue* errors_received);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* connection_opens_;
  ::ywrapper::StringValue* address_;
  ::ywrapper::UintValue* connection_failures_;
  ::ywrapper::UintValue* connection_aborts_;
  ::ywrapper::UintValue* connection_closes_;
  ::ywrapper::StringValue* name_;
  ::ywrapper::UintValue* messages_received_;
  ::ywrapper::UintValue* timeout_;
  ::ywrapper::UintValue* connection_timeouts_;
  ::ywrapper::UintValue* messages_sent_;
  ::ywrapper::UintValue* errors_received_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_StateImpl();
};
// -------------------------------------------------------------------

class System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config) */ {
 public:
  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config();
  virtual ~System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config();

  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config& from);

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config& operator=(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config&& from) noexcept
    : System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config() {
    *this = ::std::move(from);
  }

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config& operator=(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config*>(
               &_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    41;

  void Swap(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* other);
  friend void swap(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config& a, System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config& from);
  void MergeFrom(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue port = 52133369 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/tacacs/config/port"];
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 52133369;
  const ::ywrapper::UintValue& port() const;
  ::ywrapper::UintValue* release_port();
  ::ywrapper::UintValue* mutable_port();
  void set_allocated_port(::ywrapper::UintValue* port);

  // .ywrapper.StringValue source_address = 165060088 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/tacacs/config/source-address"];
  bool has_source_address() const;
  void clear_source_address();
  static const int kSourceAddressFieldNumber = 165060088;
  const ::ywrapper::StringValue& source_address() const;
  ::ywrapper::StringValue* release_source_address();
  ::ywrapper::StringValue* mutable_source_address();
  void set_allocated_source_address(::ywrapper::StringValue* source_address);

  // .ywrapper.StringValue secret_key = 390882862 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/tacacs/config/secret-key"];
  bool has_secret_key() const;
  void clear_secret_key();
  static const int kSecretKeyFieldNumber = 390882862;
  const ::ywrapper::StringValue& secret_key() const;
  ::ywrapper::StringValue* release_secret_key();
  ::ywrapper::StringValue* mutable_secret_key();
  void set_allocated_secret_key(::ywrapper::StringValue* secret_key);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* port_;
  ::ywrapper::StringValue* source_address_;
  ::ywrapper::StringValue* secret_key_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State) */ {
 public:
  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State();
  virtual ~System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State();

  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State& from);

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State& operator=(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State&& from) noexcept
    : System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State() {
    *this = ::std::move(from);
  }

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State& operator=(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State*>(
               &_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    42;

  void Swap(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* other);
  friend void swap(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State& a, System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State& from);
  void MergeFrom(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue secret_key = 176870715 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key"];
  bool has_secret_key() const;
  void clear_secret_key();
  static const int kSecretKeyFieldNumber = 176870715;
  const ::ywrapper::StringValue& secret_key() const;
  ::ywrapper::StringValue* release_secret_key();
  ::ywrapper::StringValue* mutable_secret_key();
  void set_allocated_secret_key(::ywrapper::StringValue* secret_key);

  // .ywrapper.UintValue port = 256191988 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/tacacs/state/port"];
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 256191988;
  const ::ywrapper::UintValue& port() const;
  ::ywrapper::UintValue* release_port();
  ::ywrapper::UintValue* mutable_port();
  void set_allocated_port(::ywrapper::UintValue* port);

  // .ywrapper.StringValue source_address = 407535333 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/tacacs/state/source-address"];
  bool has_source_address() const;
  void clear_source_address();
  static const int kSourceAddressFieldNumber = 407535333;
  const ::ywrapper::StringValue& source_address() const;
  ::ywrapper::StringValue* release_source_address();
  ::ywrapper::StringValue* mutable_source_address();
  void set_allocated_source_address(::ywrapper::StringValue* source_address);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* secret_key_;
  ::ywrapper::UintValue* port_;
  ::ywrapper::StringValue* source_address_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_StateImpl();
};
// -------------------------------------------------------------------

class System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs) */ {
 public:
  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs();
  virtual ~System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs();

  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs& from);

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs& operator=(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs&& from) noexcept
    : System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs() {
    *this = ::std::move(from);
  }

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs& operator=(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs*>(
               &_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    43;

  void Swap(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* other);
  friend void swap(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs& a, System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs& from);
  void MergeFrom(const System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config Config;
  typedef System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State state = 88743530 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/tacacs/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 88743530;
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State& state() const;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* release_state();
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* state);

  // .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config config = 151997813 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/tacacs/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 151997813;
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config& config() const;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* release_config();
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* state_;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_Server_TacacsImpl();
};
// -------------------------------------------------------------------

class System_Aaa_ServerGroups_ServerGroup_Servers_Server : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server) */ {
 public:
  System_Aaa_ServerGroups_ServerGroup_Servers_Server();
  virtual ~System_Aaa_ServerGroups_ServerGroup_Servers_Server();

  System_Aaa_ServerGroups_ServerGroup_Servers_Server(const System_Aaa_ServerGroups_ServerGroup_Servers_Server& from);

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server& operator=(const System_Aaa_ServerGroups_ServerGroup_Servers_Server& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_ServerGroups_ServerGroup_Servers_Server(System_Aaa_ServerGroups_ServerGroup_Servers_Server&& from) noexcept
    : System_Aaa_ServerGroups_ServerGroup_Servers_Server() {
    *this = ::std::move(from);
  }

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server& operator=(System_Aaa_ServerGroups_ServerGroup_Servers_Server&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_ServerGroups_ServerGroup_Servers_Server& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_ServerGroups_ServerGroup_Servers_Server* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_ServerGroups_ServerGroup_Servers_Server*>(
               &_System_Aaa_ServerGroups_ServerGroup_Servers_Server_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    44;

  void Swap(System_Aaa_ServerGroups_ServerGroup_Servers_Server* other);
  friend void swap(System_Aaa_ServerGroups_ServerGroup_Servers_Server& a, System_Aaa_ServerGroups_ServerGroup_Servers_Server& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_ServerGroups_ServerGroup_Servers_Server* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_ServerGroups_ServerGroup_Servers_Server* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_ServerGroups_ServerGroup_Servers_Server& from);
  void MergeFrom(const System_Aaa_ServerGroups_ServerGroup_Servers_Server& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_ServerGroups_ServerGroup_Servers_Server* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config Config;
  typedef System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius Radius;
  typedef System_Aaa_ServerGroups_ServerGroup_Servers_Server_State State;
  typedef System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs Tacacs;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State state = 5093306 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 5093306;
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_State& state() const;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* release_state();
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* state);

  // .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius radius = 184878025 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius"];
  bool has_radius() const;
  void clear_radius();
  static const int kRadiusFieldNumber = 184878025;
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius& radius() const;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* release_radius();
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* mutable_radius();
  void set_allocated_radius(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* radius);

  // .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config config = 251002053 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 251002053;
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config& config() const;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* release_config();
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* config);

  // .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs tacacs = 273909248 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/tacacs"];
  bool has_tacacs() const;
  void clear_tacacs();
  static const int kTacacsFieldNumber = 273909248;
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs& tacacs() const;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* release_tacacs();
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* mutable_tacacs();
  void set_allocated_tacacs(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* tacacs);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* state_;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* radius_;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* config_;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* tacacs_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_ServerImpl();
};
// -------------------------------------------------------------------

class System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey) */ {
 public:
  System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey();
  virtual ~System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey();

  System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey(const System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey& from);

  inline System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey& operator=(const System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey(System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey&& from) noexcept
    : System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey() {
    *this = ::std::move(from);
  }

  inline System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey& operator=(System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey*>(
               &_System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    45;

  void Swap(System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey* other);
  friend void swap(System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey& a, System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey& from);
  void MergeFrom(const System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string address = 1 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/address"];
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  #if LANG_CXX11
  void set_address(::std::string&& value);
  #endif
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server server = 2;
  bool has_server() const;
  void clear_server();
  static const int kServerFieldNumber = 2;
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server& server() const;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server* release_server();
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server* mutable_server();
  void set_allocated_server(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server* server);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server* server_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_Servers_ServerKeyImpl();
};
// -------------------------------------------------------------------

class System_Aaa_ServerGroups_ServerGroup_Servers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers) */ {
 public:
  System_Aaa_ServerGroups_ServerGroup_Servers();
  virtual ~System_Aaa_ServerGroups_ServerGroup_Servers();

  System_Aaa_ServerGroups_ServerGroup_Servers(const System_Aaa_ServerGroups_ServerGroup_Servers& from);

  inline System_Aaa_ServerGroups_ServerGroup_Servers& operator=(const System_Aaa_ServerGroups_ServerGroup_Servers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_ServerGroups_ServerGroup_Servers(System_Aaa_ServerGroups_ServerGroup_Servers&& from) noexcept
    : System_Aaa_ServerGroups_ServerGroup_Servers() {
    *this = ::std::move(from);
  }

  inline System_Aaa_ServerGroups_ServerGroup_Servers& operator=(System_Aaa_ServerGroups_ServerGroup_Servers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_ServerGroups_ServerGroup_Servers& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_ServerGroups_ServerGroup_Servers* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_ServerGroups_ServerGroup_Servers*>(
               &_System_Aaa_ServerGroups_ServerGroup_Servers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    46;

  void Swap(System_Aaa_ServerGroups_ServerGroup_Servers* other);
  friend void swap(System_Aaa_ServerGroups_ServerGroup_Servers& a, System_Aaa_ServerGroups_ServerGroup_Servers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_ServerGroups_ServerGroup_Servers* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_ServerGroups_ServerGroup_Servers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_ServerGroups_ServerGroup_Servers& from);
  void MergeFrom(const System_Aaa_ServerGroups_ServerGroup_Servers& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_ServerGroups_ServerGroup_Servers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Aaa_ServerGroups_ServerGroup_Servers_Server Server;
  typedef System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey ServerKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey server = 253859376 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server"];
  int server_size() const;
  void clear_server();
  static const int kServerFieldNumber = 253859376;
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey& server(int index) const;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey* mutable_server(int index);
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey* add_server();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey >*
      mutable_server();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey >&
      server() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey > server_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_ServersImpl();
};
// -------------------------------------------------------------------

class System_Aaa_ServerGroups_ServerGroup_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.State) */ {
 public:
  System_Aaa_ServerGroups_ServerGroup_State();
  virtual ~System_Aaa_ServerGroups_ServerGroup_State();

  System_Aaa_ServerGroups_ServerGroup_State(const System_Aaa_ServerGroups_ServerGroup_State& from);

  inline System_Aaa_ServerGroups_ServerGroup_State& operator=(const System_Aaa_ServerGroups_ServerGroup_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_ServerGroups_ServerGroup_State(System_Aaa_ServerGroups_ServerGroup_State&& from) noexcept
    : System_Aaa_ServerGroups_ServerGroup_State() {
    *this = ::std::move(from);
  }

  inline System_Aaa_ServerGroups_ServerGroup_State& operator=(System_Aaa_ServerGroups_ServerGroup_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_ServerGroups_ServerGroup_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_ServerGroups_ServerGroup_State* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_ServerGroups_ServerGroup_State*>(
               &_System_Aaa_ServerGroups_ServerGroup_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    47;

  void Swap(System_Aaa_ServerGroups_ServerGroup_State* other);
  friend void swap(System_Aaa_ServerGroups_ServerGroup_State& a, System_Aaa_ServerGroups_ServerGroup_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_ServerGroups_ServerGroup_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_ServerGroups_ServerGroup_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_ServerGroups_ServerGroup_State& from);
  void MergeFrom(const System_Aaa_ServerGroups_ServerGroup_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_ServerGroups_ServerGroup_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue name = 443695125 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/state/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 443695125;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .openconfig.enums.OpenconfigAaaTypesAAASERVERTYPE type = 60901908 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/state/type"];
  void clear_type();
  static const int kTypeFieldNumber = 60901908;
  ::openconfig::enums::OpenconfigAaaTypesAAASERVERTYPE type() const;
  void set_type(::openconfig::enums::OpenconfigAaaTypesAAASERVERTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* name_;
  int type_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_ServerGroups_ServerGroup_StateImpl();
};
// -------------------------------------------------------------------

class System_Aaa_ServerGroups_ServerGroup : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup) */ {
 public:
  System_Aaa_ServerGroups_ServerGroup();
  virtual ~System_Aaa_ServerGroups_ServerGroup();

  System_Aaa_ServerGroups_ServerGroup(const System_Aaa_ServerGroups_ServerGroup& from);

  inline System_Aaa_ServerGroups_ServerGroup& operator=(const System_Aaa_ServerGroups_ServerGroup& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_ServerGroups_ServerGroup(System_Aaa_ServerGroups_ServerGroup&& from) noexcept
    : System_Aaa_ServerGroups_ServerGroup() {
    *this = ::std::move(from);
  }

  inline System_Aaa_ServerGroups_ServerGroup& operator=(System_Aaa_ServerGroups_ServerGroup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_ServerGroups_ServerGroup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_ServerGroups_ServerGroup* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_ServerGroups_ServerGroup*>(
               &_System_Aaa_ServerGroups_ServerGroup_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    48;

  void Swap(System_Aaa_ServerGroups_ServerGroup* other);
  friend void swap(System_Aaa_ServerGroups_ServerGroup& a, System_Aaa_ServerGroups_ServerGroup& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_ServerGroups_ServerGroup* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_ServerGroups_ServerGroup* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_ServerGroups_ServerGroup& from);
  void MergeFrom(const System_Aaa_ServerGroups_ServerGroup& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_ServerGroups_ServerGroup* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Aaa_ServerGroups_ServerGroup_Config Config;
  typedef System_Aaa_ServerGroups_ServerGroup_Servers Servers;
  typedef System_Aaa_ServerGroups_ServerGroup_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.State state = 116974561 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 116974561;
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_State& state() const;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_State* release_state();
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_State* state);

  // .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Config config = 315982408 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 315982408;
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Config& config() const;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Config* release_config();
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Config* config);

  // .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers servers = 454821498 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers"];
  bool has_servers() const;
  void clear_servers();
  static const int kServersFieldNumber = 454821498;
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers& servers() const;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers* release_servers();
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers* mutable_servers();
  void set_allocated_servers(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers* servers);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_State* state_;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Config* config_;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers* servers_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_ServerGroups_ServerGroupImpl();
};
// -------------------------------------------------------------------

class System_Aaa_ServerGroups_ServerGroupKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroupKey) */ {
 public:
  System_Aaa_ServerGroups_ServerGroupKey();
  virtual ~System_Aaa_ServerGroups_ServerGroupKey();

  System_Aaa_ServerGroups_ServerGroupKey(const System_Aaa_ServerGroups_ServerGroupKey& from);

  inline System_Aaa_ServerGroups_ServerGroupKey& operator=(const System_Aaa_ServerGroups_ServerGroupKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_ServerGroups_ServerGroupKey(System_Aaa_ServerGroups_ServerGroupKey&& from) noexcept
    : System_Aaa_ServerGroups_ServerGroupKey() {
    *this = ::std::move(from);
  }

  inline System_Aaa_ServerGroups_ServerGroupKey& operator=(System_Aaa_ServerGroups_ServerGroupKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_ServerGroups_ServerGroupKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_ServerGroups_ServerGroupKey* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_ServerGroups_ServerGroupKey*>(
               &_System_Aaa_ServerGroups_ServerGroupKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    49;

  void Swap(System_Aaa_ServerGroups_ServerGroupKey* other);
  friend void swap(System_Aaa_ServerGroups_ServerGroupKey& a, System_Aaa_ServerGroups_ServerGroupKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_ServerGroups_ServerGroupKey* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_ServerGroups_ServerGroupKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_ServerGroups_ServerGroupKey& from);
  void MergeFrom(const System_Aaa_ServerGroups_ServerGroupKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_ServerGroups_ServerGroupKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/name"];
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup server_group = 2;
  bool has_server_group() const;
  void clear_server_group();
  static const int kServerGroupFieldNumber = 2;
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup& server_group() const;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup* release_server_group();
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup* mutable_server_group();
  void set_allocated_server_group(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup* server_group);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroupKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup* server_group_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_ServerGroups_ServerGroupKeyImpl();
};
// -------------------------------------------------------------------

class System_Aaa_ServerGroups : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.ServerGroups) */ {
 public:
  System_Aaa_ServerGroups();
  virtual ~System_Aaa_ServerGroups();

  System_Aaa_ServerGroups(const System_Aaa_ServerGroups& from);

  inline System_Aaa_ServerGroups& operator=(const System_Aaa_ServerGroups& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_ServerGroups(System_Aaa_ServerGroups&& from) noexcept
    : System_Aaa_ServerGroups() {
    *this = ::std::move(from);
  }

  inline System_Aaa_ServerGroups& operator=(System_Aaa_ServerGroups&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_ServerGroups& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_ServerGroups* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_ServerGroups*>(
               &_System_Aaa_ServerGroups_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    50;

  void Swap(System_Aaa_ServerGroups* other);
  friend void swap(System_Aaa_ServerGroups& a, System_Aaa_ServerGroups& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_ServerGroups* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_ServerGroups* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_ServerGroups& from);
  void MergeFrom(const System_Aaa_ServerGroups& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_ServerGroups* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Aaa_ServerGroups_ServerGroup ServerGroup;
  typedef System_Aaa_ServerGroups_ServerGroupKey ServerGroupKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroupKey server_group = 249960919 [(.yext.schemapath) = "/system/aaa/server-groups/server-group"];
  int server_group_size() const;
  void clear_server_group();
  static const int kServerGroupFieldNumber = 249960919;
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroupKey& server_group(int index) const;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroupKey* mutable_server_group(int index);
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroupKey* add_server_group();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroupKey >*
      mutable_server_group();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroupKey >&
      server_group() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.ServerGroups)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroupKey > server_group_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_ServerGroupsImpl();
};
// -------------------------------------------------------------------

class System_Aaa_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa.State) */ {
 public:
  System_Aaa_State();
  virtual ~System_Aaa_State();

  System_Aaa_State(const System_Aaa_State& from);

  inline System_Aaa_State& operator=(const System_Aaa_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa_State(System_Aaa_State&& from) noexcept
    : System_Aaa_State() {
    *this = ::std::move(from);
  }

  inline System_Aaa_State& operator=(System_Aaa_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa_State* internal_default_instance() {
    return reinterpret_cast<const System_Aaa_State*>(
               &_System_Aaa_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    51;

  void Swap(System_Aaa_State* other);
  friend void swap(System_Aaa_State& a, System_Aaa_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa_State& from);
  void MergeFrom(const System_Aaa_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Aaa_StateImpl();
};
// -------------------------------------------------------------------

class System_Aaa : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Aaa) */ {
 public:
  System_Aaa();
  virtual ~System_Aaa();

  System_Aaa(const System_Aaa& from);

  inline System_Aaa& operator=(const System_Aaa& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Aaa(System_Aaa&& from) noexcept
    : System_Aaa() {
    *this = ::std::move(from);
  }

  inline System_Aaa& operator=(System_Aaa&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Aaa& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Aaa* internal_default_instance() {
    return reinterpret_cast<const System_Aaa*>(
               &_System_Aaa_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    52;

  void Swap(System_Aaa* other);
  friend void swap(System_Aaa& a, System_Aaa& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Aaa* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Aaa* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Aaa& from);
  void MergeFrom(const System_Aaa& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Aaa* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Aaa_Accounting Accounting;
  typedef System_Aaa_Authentication Authentication;
  typedef System_Aaa_Authorization Authorization;
  typedef System_Aaa_Config Config;
  typedef System_Aaa_ServerGroups ServerGroups;
  typedef System_Aaa_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Aaa.State state = 23163956 [(.yext.schemapath) = "/system/aaa/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 23163956;
  const ::openconfig::openconfig_system::System_Aaa_State& state() const;
  ::openconfig::openconfig_system::System_Aaa_State* release_state();
  ::openconfig::openconfig_system::System_Aaa_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Aaa_State* state);

  // .openconfig.openconfig_system.System.Aaa.Authorization authorization = 92979796 [(.yext.schemapath) = "/system/aaa/authorization"];
  bool has_authorization() const;
  void clear_authorization();
  static const int kAuthorizationFieldNumber = 92979796;
  const ::openconfig::openconfig_system::System_Aaa_Authorization& authorization() const;
  ::openconfig::openconfig_system::System_Aaa_Authorization* release_authorization();
  ::openconfig::openconfig_system::System_Aaa_Authorization* mutable_authorization();
  void set_allocated_authorization(::openconfig::openconfig_system::System_Aaa_Authorization* authorization);

  // .openconfig.openconfig_system.System.Aaa.Accounting accounting = 175231094 [(.yext.schemapath) = "/system/aaa/accounting"];
  bool has_accounting() const;
  void clear_accounting();
  static const int kAccountingFieldNumber = 175231094;
  const ::openconfig::openconfig_system::System_Aaa_Accounting& accounting() const;
  ::openconfig::openconfig_system::System_Aaa_Accounting* release_accounting();
  ::openconfig::openconfig_system::System_Aaa_Accounting* mutable_accounting();
  void set_allocated_accounting(::openconfig::openconfig_system::System_Aaa_Accounting* accounting);

  // .openconfig.openconfig_system.System.Aaa.Config config = 352352339 [(.yext.schemapath) = "/system/aaa/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 352352339;
  const ::openconfig::openconfig_system::System_Aaa_Config& config() const;
  ::openconfig::openconfig_system::System_Aaa_Config* release_config();
  ::openconfig::openconfig_system::System_Aaa_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Aaa_Config* config);

  // .openconfig.openconfig_system.System.Aaa.ServerGroups server_groups = 366692613 [(.yext.schemapath) = "/system/aaa/server-groups"];
  bool has_server_groups() const;
  void clear_server_groups();
  static const int kServerGroupsFieldNumber = 366692613;
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups& server_groups() const;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups* release_server_groups();
  ::openconfig::openconfig_system::System_Aaa_ServerGroups* mutable_server_groups();
  void set_allocated_server_groups(::openconfig::openconfig_system::System_Aaa_ServerGroups* server_groups);

  // .openconfig.openconfig_system.System.Aaa.Authentication authentication = 520430581 [(.yext.schemapath) = "/system/aaa/authentication"];
  bool has_authentication() const;
  void clear_authentication();
  static const int kAuthenticationFieldNumber = 520430581;
  const ::openconfig::openconfig_system::System_Aaa_Authentication& authentication() const;
  ::openconfig::openconfig_system::System_Aaa_Authentication* release_authentication();
  ::openconfig::openconfig_system::System_Aaa_Authentication* mutable_authentication();
  void set_allocated_authentication(::openconfig::openconfig_system::System_Aaa_Authentication* authentication);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Aaa)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Aaa_State* state_;
  ::openconfig::openconfig_system::System_Aaa_Authorization* authorization_;
  ::openconfig::openconfig_system::System_Aaa_Accounting* accounting_;
  ::openconfig::openconfig_system::System_Aaa_Config* config_;
  ::openconfig::openconfig_system::System_Aaa_ServerGroups* server_groups_;
  ::openconfig::openconfig_system::System_Aaa_Authentication* authentication_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_AaaImpl();
};
// -------------------------------------------------------------------

class System_Alarms_Alarm_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Alarms.Alarm.Config) */ {
 public:
  System_Alarms_Alarm_Config();
  virtual ~System_Alarms_Alarm_Config();

  System_Alarms_Alarm_Config(const System_Alarms_Alarm_Config& from);

  inline System_Alarms_Alarm_Config& operator=(const System_Alarms_Alarm_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Alarms_Alarm_Config(System_Alarms_Alarm_Config&& from) noexcept
    : System_Alarms_Alarm_Config() {
    *this = ::std::move(from);
  }

  inline System_Alarms_Alarm_Config& operator=(System_Alarms_Alarm_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Alarms_Alarm_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Alarms_Alarm_Config* internal_default_instance() {
    return reinterpret_cast<const System_Alarms_Alarm_Config*>(
               &_System_Alarms_Alarm_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    53;

  void Swap(System_Alarms_Alarm_Config* other);
  friend void swap(System_Alarms_Alarm_Config& a, System_Alarms_Alarm_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Alarms_Alarm_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Alarms_Alarm_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Alarms_Alarm_Config& from);
  void MergeFrom(const System_Alarms_Alarm_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Alarms_Alarm_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Alarms.Alarm.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Alarms_Alarm_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Alarms_Alarm_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Alarms.Alarm.State) */ {
 public:
  System_Alarms_Alarm_State();
  virtual ~System_Alarms_Alarm_State();

  System_Alarms_Alarm_State(const System_Alarms_Alarm_State& from);

  inline System_Alarms_Alarm_State& operator=(const System_Alarms_Alarm_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Alarms_Alarm_State(System_Alarms_Alarm_State&& from) noexcept
    : System_Alarms_Alarm_State() {
    *this = ::std::move(from);
  }

  inline System_Alarms_Alarm_State& operator=(System_Alarms_Alarm_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Alarms_Alarm_State& default_instance();

  enum TypeIdCase {
    kTypeIdOpenconfigalarmtypesopenconfigalarmtypeid = 375918181,
    kTypeIdString = 387256722,
    TYPE_ID_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Alarms_Alarm_State* internal_default_instance() {
    return reinterpret_cast<const System_Alarms_Alarm_State*>(
               &_System_Alarms_Alarm_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    54;

  void Swap(System_Alarms_Alarm_State* other);
  friend void swap(System_Alarms_Alarm_State& a, System_Alarms_Alarm_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Alarms_Alarm_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Alarms_Alarm_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Alarms_Alarm_State& from);
  void MergeFrom(const System_Alarms_Alarm_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Alarms_Alarm_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue text = 19701185 [(.yext.schemapath) = "/system/alarms/alarm/state/text"];
  bool has_text() const;
  void clear_text();
  static const int kTextFieldNumber = 19701185;
  const ::ywrapper::StringValue& text() const;
  ::ywrapper::StringValue* release_text();
  ::ywrapper::StringValue* mutable_text();
  void set_allocated_text(::ywrapper::StringValue* text);

  // .ywrapper.StringValue id = 207370355 [(.yext.schemapath) = "/system/alarms/alarm/state/id"];
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 207370355;
  const ::ywrapper::StringValue& id() const;
  ::ywrapper::StringValue* release_id();
  ::ywrapper::StringValue* mutable_id();
  void set_allocated_id(::ywrapper::StringValue* id);

  // .ywrapper.UintValue time_created = 258054456 [(.yext.schemapath) = "/system/alarms/alarm/state/time-created"];
  bool has_time_created() const;
  void clear_time_created();
  static const int kTimeCreatedFieldNumber = 258054456;
  const ::ywrapper::UintValue& time_created() const;
  ::ywrapper::UintValue* release_time_created();
  ::ywrapper::UintValue* mutable_time_created();
  void set_allocated_time_created(::ywrapper::UintValue* time_created);

  // .ywrapper.StringValue resource = 290470824 [(.yext.schemapath) = "/system/alarms/alarm/state/resource"];
  bool has_resource() const;
  void clear_resource();
  static const int kResourceFieldNumber = 290470824;
  const ::ywrapper::StringValue& resource() const;
  ::ywrapper::StringValue* release_resource();
  ::ywrapper::StringValue* mutable_resource();
  void set_allocated_resource(::ywrapper::StringValue* resource);

  // .openconfig.enums.OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY severity = 464665929 [(.yext.schemapath) = "/system/alarms/alarm/state/severity"];
  void clear_severity();
  static const int kSeverityFieldNumber = 464665929;
  ::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY severity() const;
  void set_severity(::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY value);

  // .openconfig.enums.OpenconfigAlarmTypesOPENCONFIGALARMTYPEID type_id_openconfigalarmtypesopenconfigalarmtypeid = 375918181;
  private:
  bool has_type_id_openconfigalarmtypesopenconfigalarmtypeid() const;
  public:
  void clear_type_id_openconfigalarmtypesopenconfigalarmtypeid();
  static const int kTypeIdOpenconfigalarmtypesopenconfigalarmtypeidFieldNumber = 375918181;
  ::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMTYPEID type_id_openconfigalarmtypesopenconfigalarmtypeid() const;
  void set_type_id_openconfigalarmtypesopenconfigalarmtypeid(::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMTYPEID value);

  // string type_id_string = 387256722;
  private:
  bool has_type_id_string() const;
  public:
  void clear_type_id_string();
  static const int kTypeIdStringFieldNumber = 387256722;
  const ::std::string& type_id_string() const;
  void set_type_id_string(const ::std::string& value);
  #if LANG_CXX11
  void set_type_id_string(::std::string&& value);
  #endif
  void set_type_id_string(const char* value);
  void set_type_id_string(const char* value, size_t size);
  ::std::string* mutable_type_id_string();
  ::std::string* release_type_id_string();
  void set_allocated_type_id_string(::std::string* type_id_string);

  TypeIdCase type_id_case() const;
  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Alarms.Alarm.State)
 private:
  void set_has_type_id_openconfigalarmtypesopenconfigalarmtypeid();
  void set_has_type_id_string();

  inline bool has_type_id() const;
  void clear_type_id();
  inline void clear_has_type_id();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* text_;
  ::ywrapper::StringValue* id_;
  ::ywrapper::UintValue* time_created_;
  ::ywrapper::StringValue* resource_;
  int severity_;
  union TypeIdUnion {
    TypeIdUnion() {}
    int type_id_openconfigalarmtypesopenconfigalarmtypeid_;
    ::google::protobuf::internal::ArenaStringPtr type_id_string_;
  } type_id_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Alarms_Alarm_StateImpl();
};
// -------------------------------------------------------------------

class System_Alarms_Alarm : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Alarms.Alarm) */ {
 public:
  System_Alarms_Alarm();
  virtual ~System_Alarms_Alarm();

  System_Alarms_Alarm(const System_Alarms_Alarm& from);

  inline System_Alarms_Alarm& operator=(const System_Alarms_Alarm& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Alarms_Alarm(System_Alarms_Alarm&& from) noexcept
    : System_Alarms_Alarm() {
    *this = ::std::move(from);
  }

  inline System_Alarms_Alarm& operator=(System_Alarms_Alarm&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Alarms_Alarm& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Alarms_Alarm* internal_default_instance() {
    return reinterpret_cast<const System_Alarms_Alarm*>(
               &_System_Alarms_Alarm_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    55;

  void Swap(System_Alarms_Alarm* other);
  friend void swap(System_Alarms_Alarm& a, System_Alarms_Alarm& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Alarms_Alarm* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Alarms_Alarm* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Alarms_Alarm& from);
  void MergeFrom(const System_Alarms_Alarm& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Alarms_Alarm* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Alarms_Alarm_Config Config;
  typedef System_Alarms_Alarm_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Alarms.Alarm.Config config = 139180024 [(.yext.schemapath) = "/system/alarms/alarm/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 139180024;
  const ::openconfig::openconfig_system::System_Alarms_Alarm_Config& config() const;
  ::openconfig::openconfig_system::System_Alarms_Alarm_Config* release_config();
  ::openconfig::openconfig_system::System_Alarms_Alarm_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Alarms_Alarm_Config* config);

  // .openconfig.openconfig_system.System.Alarms.Alarm.State state = 273821713 [(.yext.schemapath) = "/system/alarms/alarm/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 273821713;
  const ::openconfig::openconfig_system::System_Alarms_Alarm_State& state() const;
  ::openconfig::openconfig_system::System_Alarms_Alarm_State* release_state();
  ::openconfig::openconfig_system::System_Alarms_Alarm_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Alarms_Alarm_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Alarms.Alarm)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Alarms_Alarm_Config* config_;
  ::openconfig::openconfig_system::System_Alarms_Alarm_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Alarms_AlarmImpl();
};
// -------------------------------------------------------------------

class System_Alarms_AlarmKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Alarms.AlarmKey) */ {
 public:
  System_Alarms_AlarmKey();
  virtual ~System_Alarms_AlarmKey();

  System_Alarms_AlarmKey(const System_Alarms_AlarmKey& from);

  inline System_Alarms_AlarmKey& operator=(const System_Alarms_AlarmKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Alarms_AlarmKey(System_Alarms_AlarmKey&& from) noexcept
    : System_Alarms_AlarmKey() {
    *this = ::std::move(from);
  }

  inline System_Alarms_AlarmKey& operator=(System_Alarms_AlarmKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Alarms_AlarmKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Alarms_AlarmKey* internal_default_instance() {
    return reinterpret_cast<const System_Alarms_AlarmKey*>(
               &_System_Alarms_AlarmKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    56;

  void Swap(System_Alarms_AlarmKey* other);
  friend void swap(System_Alarms_AlarmKey& a, System_Alarms_AlarmKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Alarms_AlarmKey* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Alarms_AlarmKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Alarms_AlarmKey& from);
  void MergeFrom(const System_Alarms_AlarmKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Alarms_AlarmKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1 [(.yext.schemapath) = "/system/alarms/alarm/id"];
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // .openconfig.openconfig_system.System.Alarms.Alarm alarm = 2;
  bool has_alarm() const;
  void clear_alarm();
  static const int kAlarmFieldNumber = 2;
  const ::openconfig::openconfig_system::System_Alarms_Alarm& alarm() const;
  ::openconfig::openconfig_system::System_Alarms_Alarm* release_alarm();
  ::openconfig::openconfig_system::System_Alarms_Alarm* mutable_alarm();
  void set_allocated_alarm(::openconfig::openconfig_system::System_Alarms_Alarm* alarm);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Alarms.AlarmKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  ::openconfig::openconfig_system::System_Alarms_Alarm* alarm_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Alarms_AlarmKeyImpl();
};
// -------------------------------------------------------------------

class System_Alarms : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Alarms) */ {
 public:
  System_Alarms();
  virtual ~System_Alarms();

  System_Alarms(const System_Alarms& from);

  inline System_Alarms& operator=(const System_Alarms& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Alarms(System_Alarms&& from) noexcept
    : System_Alarms() {
    *this = ::std::move(from);
  }

  inline System_Alarms& operator=(System_Alarms&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Alarms& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Alarms* internal_default_instance() {
    return reinterpret_cast<const System_Alarms*>(
               &_System_Alarms_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    57;

  void Swap(System_Alarms* other);
  friend void swap(System_Alarms& a, System_Alarms& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Alarms* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Alarms* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Alarms& from);
  void MergeFrom(const System_Alarms& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Alarms* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Alarms_Alarm Alarm;
  typedef System_Alarms_AlarmKey AlarmKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_system.System.Alarms.AlarmKey alarm = 221321319 [(.yext.schemapath) = "/system/alarms/alarm"];
  int alarm_size() const;
  void clear_alarm();
  static const int kAlarmFieldNumber = 221321319;
  const ::openconfig::openconfig_system::System_Alarms_AlarmKey& alarm(int index) const;
  ::openconfig::openconfig_system::System_Alarms_AlarmKey* mutable_alarm(int index);
  ::openconfig::openconfig_system::System_Alarms_AlarmKey* add_alarm();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Alarms_AlarmKey >*
      mutable_alarm();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Alarms_AlarmKey >&
      alarm() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Alarms)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Alarms_AlarmKey > alarm_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_AlarmsImpl();
};
// -------------------------------------------------------------------

class System_Clock_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Clock.Config) */ {
 public:
  System_Clock_Config();
  virtual ~System_Clock_Config();

  System_Clock_Config(const System_Clock_Config& from);

  inline System_Clock_Config& operator=(const System_Clock_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Clock_Config(System_Clock_Config&& from) noexcept
    : System_Clock_Config() {
    *this = ::std::move(from);
  }

  inline System_Clock_Config& operator=(System_Clock_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Clock_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Clock_Config* internal_default_instance() {
    return reinterpret_cast<const System_Clock_Config*>(
               &_System_Clock_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    58;

  void Swap(System_Clock_Config* other);
  friend void swap(System_Clock_Config& a, System_Clock_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Clock_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Clock_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Clock_Config& from);
  void MergeFrom(const System_Clock_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Clock_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue timezone_name = 100228070 [(.yext.schemapath) = "/system/clock/config/timezone-name"];
  bool has_timezone_name() const;
  void clear_timezone_name();
  static const int kTimezoneNameFieldNumber = 100228070;
  const ::ywrapper::StringValue& timezone_name() const;
  ::ywrapper::StringValue* release_timezone_name();
  ::ywrapper::StringValue* mutable_timezone_name();
  void set_allocated_timezone_name(::ywrapper::StringValue* timezone_name);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Clock.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* timezone_name_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Clock_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Clock_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Clock.State) */ {
 public:
  System_Clock_State();
  virtual ~System_Clock_State();

  System_Clock_State(const System_Clock_State& from);

  inline System_Clock_State& operator=(const System_Clock_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Clock_State(System_Clock_State&& from) noexcept
    : System_Clock_State() {
    *this = ::std::move(from);
  }

  inline System_Clock_State& operator=(System_Clock_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Clock_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Clock_State* internal_default_instance() {
    return reinterpret_cast<const System_Clock_State*>(
               &_System_Clock_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    59;

  void Swap(System_Clock_State* other);
  friend void swap(System_Clock_State& a, System_Clock_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Clock_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Clock_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Clock_State& from);
  void MergeFrom(const System_Clock_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Clock_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue timezone_name = 390124251 [(.yext.schemapath) = "/system/clock/state/timezone-name"];
  bool has_timezone_name() const;
  void clear_timezone_name();
  static const int kTimezoneNameFieldNumber = 390124251;
  const ::ywrapper::StringValue& timezone_name() const;
  ::ywrapper::StringValue* release_timezone_name();
  ::ywrapper::StringValue* mutable_timezone_name();
  void set_allocated_timezone_name(::ywrapper::StringValue* timezone_name);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Clock.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* timezone_name_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Clock_StateImpl();
};
// -------------------------------------------------------------------

class System_Clock : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Clock) */ {
 public:
  System_Clock();
  virtual ~System_Clock();

  System_Clock(const System_Clock& from);

  inline System_Clock& operator=(const System_Clock& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Clock(System_Clock&& from) noexcept
    : System_Clock() {
    *this = ::std::move(from);
  }

  inline System_Clock& operator=(System_Clock&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Clock& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Clock* internal_default_instance() {
    return reinterpret_cast<const System_Clock*>(
               &_System_Clock_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    60;

  void Swap(System_Clock* other);
  friend void swap(System_Clock& a, System_Clock& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Clock* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Clock* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Clock& from);
  void MergeFrom(const System_Clock& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Clock* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Clock_Config Config;
  typedef System_Clock_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Clock.State state = 162896405 [(.yext.schemapath) = "/system/clock/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 162896405;
  const ::openconfig::openconfig_system::System_Clock_State& state() const;
  ::openconfig::openconfig_system::System_Clock_State* release_state();
  ::openconfig::openconfig_system::System_Clock_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Clock_State* state);

  // .openconfig.openconfig_system.System.Clock.Config config = 375106460 [(.yext.schemapath) = "/system/clock/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 375106460;
  const ::openconfig::openconfig_system::System_Clock_Config& config() const;
  ::openconfig::openconfig_system::System_Clock_Config* release_config();
  ::openconfig::openconfig_system::System_Clock_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Clock_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Clock)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Clock_State* state_;
  ::openconfig::openconfig_system::System_Clock_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_ClockImpl();
};
// -------------------------------------------------------------------

class System_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Config) */ {
 public:
  System_Config();
  virtual ~System_Config();

  System_Config(const System_Config& from);

  inline System_Config& operator=(const System_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Config(System_Config&& from) noexcept
    : System_Config() {
    *this = ::std::move(from);
  }

  inline System_Config& operator=(System_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Config* internal_default_instance() {
    return reinterpret_cast<const System_Config*>(
               &_System_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    61;

  void Swap(System_Config* other);
  friend void swap(System_Config& a, System_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Config& from);
  void MergeFrom(const System_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue login_banner = 161971574 [(.yext.schemapath) = "/system/config/login-banner"];
  bool has_login_banner() const;
  void clear_login_banner();
  static const int kLoginBannerFieldNumber = 161971574;
  const ::ywrapper::StringValue& login_banner() const;
  ::ywrapper::StringValue* release_login_banner();
  ::ywrapper::StringValue* mutable_login_banner();
  void set_allocated_login_banner(::ywrapper::StringValue* login_banner);

  // .ywrapper.StringValue motd_banner = 428956479 [(.yext.schemapath) = "/system/config/motd-banner"];
  bool has_motd_banner() const;
  void clear_motd_banner();
  static const int kMotdBannerFieldNumber = 428956479;
  const ::ywrapper::StringValue& motd_banner() const;
  ::ywrapper::StringValue* release_motd_banner();
  ::ywrapper::StringValue* mutable_motd_banner();
  void set_allocated_motd_banner(::ywrapper::StringValue* motd_banner);

  // .ywrapper.StringValue hostname = 502971767 [(.yext.schemapath) = "/system/config/hostname"];
  bool has_hostname() const;
  void clear_hostname();
  static const int kHostnameFieldNumber = 502971767;
  const ::ywrapper::StringValue& hostname() const;
  ::ywrapper::StringValue* release_hostname();
  ::ywrapper::StringValue* mutable_hostname();
  void set_allocated_hostname(::ywrapper::StringValue* hostname);

  // .ywrapper.StringValue domain_name = 514451884 [(.yext.schemapath) = "/system/config/domain-name"];
  bool has_domain_name() const;
  void clear_domain_name();
  static const int kDomainNameFieldNumber = 514451884;
  const ::ywrapper::StringValue& domain_name() const;
  ::ywrapper::StringValue* release_domain_name();
  ::ywrapper::StringValue* mutable_domain_name();
  void set_allocated_domain_name(::ywrapper::StringValue* domain_name);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* login_banner_;
  ::ywrapper::StringValue* motd_banner_;
  ::ywrapper::StringValue* hostname_;
  ::ywrapper::StringValue* domain_name_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Cpus_Cpu_State_HardwareInterrupt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Cpus.Cpu.State.HardwareInterrupt) */ {
 public:
  System_Cpus_Cpu_State_HardwareInterrupt();
  virtual ~System_Cpus_Cpu_State_HardwareInterrupt();

  System_Cpus_Cpu_State_HardwareInterrupt(const System_Cpus_Cpu_State_HardwareInterrupt& from);

  inline System_Cpus_Cpu_State_HardwareInterrupt& operator=(const System_Cpus_Cpu_State_HardwareInterrupt& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Cpus_Cpu_State_HardwareInterrupt(System_Cpus_Cpu_State_HardwareInterrupt&& from) noexcept
    : System_Cpus_Cpu_State_HardwareInterrupt() {
    *this = ::std::move(from);
  }

  inline System_Cpus_Cpu_State_HardwareInterrupt& operator=(System_Cpus_Cpu_State_HardwareInterrupt&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Cpus_Cpu_State_HardwareInterrupt& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Cpus_Cpu_State_HardwareInterrupt* internal_default_instance() {
    return reinterpret_cast<const System_Cpus_Cpu_State_HardwareInterrupt*>(
               &_System_Cpus_Cpu_State_HardwareInterrupt_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    62;

  void Swap(System_Cpus_Cpu_State_HardwareInterrupt* other);
  friend void swap(System_Cpus_Cpu_State_HardwareInterrupt& a, System_Cpus_Cpu_State_HardwareInterrupt& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Cpus_Cpu_State_HardwareInterrupt* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Cpus_Cpu_State_HardwareInterrupt* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Cpus_Cpu_State_HardwareInterrupt& from);
  void MergeFrom(const System_Cpus_Cpu_State_HardwareInterrupt& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Cpus_Cpu_State_HardwareInterrupt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue min = 69535217 [(.yext.schemapath) = "/system/cpus/cpu/state/hardware-interrupt/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 69535217;
  const ::ywrapper::UintValue& min() const;
  ::ywrapper::UintValue* release_min();
  ::ywrapper::UintValue* mutable_min();
  void set_allocated_min(::ywrapper::UintValue* min);

  // .ywrapper.UintValue instant = 196083674 [(.yext.schemapath) = "/system/cpus/cpu/state/hardware-interrupt/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 196083674;
  const ::ywrapper::UintValue& instant() const;
  ::ywrapper::UintValue* release_instant();
  ::ywrapper::UintValue* mutable_instant();
  void set_allocated_instant(::ywrapper::UintValue* instant);

  // .ywrapper.UintValue max = 203756111 [(.yext.schemapath) = "/system/cpus/cpu/state/hardware-interrupt/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 203756111;
  const ::ywrapper::UintValue& max() const;
  ::ywrapper::UintValue* release_max();
  ::ywrapper::UintValue* mutable_max();
  void set_allocated_max(::ywrapper::UintValue* max);

  // .ywrapper.UintValue interval = 343471148 [(.yext.schemapath) = "/system/cpus/cpu/state/hardware-interrupt/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 343471148;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.UintValue avg = 422453613 [(.yext.schemapath) = "/system/cpus/cpu/state/hardware-interrupt/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 422453613;
  const ::ywrapper::UintValue& avg() const;
  ::ywrapper::UintValue* release_avg();
  ::ywrapper::UintValue* mutable_avg();
  void set_allocated_avg(::ywrapper::UintValue* avg);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Cpus.Cpu.State.HardwareInterrupt)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* min_;
  ::ywrapper::UintValue* instant_;
  ::ywrapper::UintValue* max_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::UintValue* avg_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Cpus_Cpu_State_HardwareInterruptImpl();
};
// -------------------------------------------------------------------

class System_Cpus_Cpu_State_Idle : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Cpus.Cpu.State.Idle) */ {
 public:
  System_Cpus_Cpu_State_Idle();
  virtual ~System_Cpus_Cpu_State_Idle();

  System_Cpus_Cpu_State_Idle(const System_Cpus_Cpu_State_Idle& from);

  inline System_Cpus_Cpu_State_Idle& operator=(const System_Cpus_Cpu_State_Idle& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Cpus_Cpu_State_Idle(System_Cpus_Cpu_State_Idle&& from) noexcept
    : System_Cpus_Cpu_State_Idle() {
    *this = ::std::move(from);
  }

  inline System_Cpus_Cpu_State_Idle& operator=(System_Cpus_Cpu_State_Idle&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Cpus_Cpu_State_Idle& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Cpus_Cpu_State_Idle* internal_default_instance() {
    return reinterpret_cast<const System_Cpus_Cpu_State_Idle*>(
               &_System_Cpus_Cpu_State_Idle_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    63;

  void Swap(System_Cpus_Cpu_State_Idle* other);
  friend void swap(System_Cpus_Cpu_State_Idle& a, System_Cpus_Cpu_State_Idle& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Cpus_Cpu_State_Idle* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Cpus_Cpu_State_Idle* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Cpus_Cpu_State_Idle& from);
  void MergeFrom(const System_Cpus_Cpu_State_Idle& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Cpus_Cpu_State_Idle* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue min = 42811817 [(.yext.schemapath) = "/system/cpus/cpu/state/idle/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 42811817;
  const ::ywrapper::UintValue& min() const;
  ::ywrapper::UintValue* release_min();
  ::ywrapper::UintValue* mutable_min();
  void set_allocated_min(::ywrapper::UintValue* min);

  // .ywrapper.UintValue avg = 124715605 [(.yext.schemapath) = "/system/cpus/cpu/state/idle/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 124715605;
  const ::ywrapper::UintValue& avg() const;
  ::ywrapper::UintValue* release_avg();
  ::ywrapper::UintValue* mutable_avg();
  void set_allocated_avg(::ywrapper::UintValue* avg);

  // .ywrapper.UintValue instant = 230199506 [(.yext.schemapath) = "/system/cpus/cpu/state/idle/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 230199506;
  const ::ywrapper::UintValue& instant() const;
  ::ywrapper::UintValue* release_instant();
  ::ywrapper::UintValue* mutable_instant();
  void set_allocated_instant(::ywrapper::UintValue* instant);

  // .ywrapper.UintValue max = 445461847 [(.yext.schemapath) = "/system/cpus/cpu/state/idle/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 445461847;
  const ::ywrapper::UintValue& max() const;
  ::ywrapper::UintValue* release_max();
  ::ywrapper::UintValue* mutable_max();
  void set_allocated_max(::ywrapper::UintValue* max);

  // .ywrapper.UintValue interval = 496096436 [(.yext.schemapath) = "/system/cpus/cpu/state/idle/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 496096436;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Cpus.Cpu.State.Idle)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* min_;
  ::ywrapper::UintValue* avg_;
  ::ywrapper::UintValue* instant_;
  ::ywrapper::UintValue* max_;
  ::ywrapper::UintValue* interval_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Cpus_Cpu_State_IdleImpl();
};
// -------------------------------------------------------------------

class System_Cpus_Cpu_State_Kernel : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Cpus.Cpu.State.Kernel) */ {
 public:
  System_Cpus_Cpu_State_Kernel();
  virtual ~System_Cpus_Cpu_State_Kernel();

  System_Cpus_Cpu_State_Kernel(const System_Cpus_Cpu_State_Kernel& from);

  inline System_Cpus_Cpu_State_Kernel& operator=(const System_Cpus_Cpu_State_Kernel& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Cpus_Cpu_State_Kernel(System_Cpus_Cpu_State_Kernel&& from) noexcept
    : System_Cpus_Cpu_State_Kernel() {
    *this = ::std::move(from);
  }

  inline System_Cpus_Cpu_State_Kernel& operator=(System_Cpus_Cpu_State_Kernel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Cpus_Cpu_State_Kernel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Cpus_Cpu_State_Kernel* internal_default_instance() {
    return reinterpret_cast<const System_Cpus_Cpu_State_Kernel*>(
               &_System_Cpus_Cpu_State_Kernel_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    64;

  void Swap(System_Cpus_Cpu_State_Kernel* other);
  friend void swap(System_Cpus_Cpu_State_Kernel& a, System_Cpus_Cpu_State_Kernel& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Cpus_Cpu_State_Kernel* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Cpus_Cpu_State_Kernel* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Cpus_Cpu_State_Kernel& from);
  void MergeFrom(const System_Cpus_Cpu_State_Kernel& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Cpus_Cpu_State_Kernel* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue min = 67373056 [(.yext.schemapath) = "/system/cpus/cpu/state/kernel/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 67373056;
  const ::ywrapper::UintValue& min() const;
  ::ywrapper::UintValue* release_min();
  ::ywrapper::UintValue* mutable_min();
  void set_allocated_min(::ywrapper::UintValue* min);

  // .ywrapper.UintValue instant = 168068719 [(.yext.schemapath) = "/system/cpus/cpu/state/kernel/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 168068719;
  const ::ywrapper::UintValue& instant() const;
  ::ywrapper::UintValue* release_instant();
  ::ywrapper::UintValue* mutable_instant();
  void set_allocated_instant(::ywrapper::UintValue* instant);

  // .ywrapper.UintValue avg = 253885460 [(.yext.schemapath) = "/system/cpus/cpu/state/kernel/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 253885460;
  const ::ywrapper::UintValue& avg() const;
  ::ywrapper::UintValue* release_avg();
  ::ywrapper::UintValue* mutable_avg();
  void set_allocated_avg(::ywrapper::UintValue* avg);

  // .ywrapper.UintValue interval = 444985103 [(.yext.schemapath) = "/system/cpus/cpu/state/kernel/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 444985103;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.UintValue max = 470023086 [(.yext.schemapath) = "/system/cpus/cpu/state/kernel/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 470023086;
  const ::ywrapper::UintValue& max() const;
  ::ywrapper::UintValue* release_max();
  ::ywrapper::UintValue* mutable_max();
  void set_allocated_max(::ywrapper::UintValue* max);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Cpus.Cpu.State.Kernel)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* min_;
  ::ywrapper::UintValue* instant_;
  ::ywrapper::UintValue* avg_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::UintValue* max_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Cpus_Cpu_State_KernelImpl();
};
// -------------------------------------------------------------------

class System_Cpus_Cpu_State_Nice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Cpus.Cpu.State.Nice) */ {
 public:
  System_Cpus_Cpu_State_Nice();
  virtual ~System_Cpus_Cpu_State_Nice();

  System_Cpus_Cpu_State_Nice(const System_Cpus_Cpu_State_Nice& from);

  inline System_Cpus_Cpu_State_Nice& operator=(const System_Cpus_Cpu_State_Nice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Cpus_Cpu_State_Nice(System_Cpus_Cpu_State_Nice&& from) noexcept
    : System_Cpus_Cpu_State_Nice() {
    *this = ::std::move(from);
  }

  inline System_Cpus_Cpu_State_Nice& operator=(System_Cpus_Cpu_State_Nice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Cpus_Cpu_State_Nice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Cpus_Cpu_State_Nice* internal_default_instance() {
    return reinterpret_cast<const System_Cpus_Cpu_State_Nice*>(
               &_System_Cpus_Cpu_State_Nice_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    65;

  void Swap(System_Cpus_Cpu_State_Nice* other);
  friend void swap(System_Cpus_Cpu_State_Nice& a, System_Cpus_Cpu_State_Nice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Cpus_Cpu_State_Nice* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Cpus_Cpu_State_Nice* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Cpus_Cpu_State_Nice& from);
  void MergeFrom(const System_Cpus_Cpu_State_Nice& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Cpus_Cpu_State_Nice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue max = 8755214 [(.yext.schemapath) = "/system/cpus/cpu/state/nice/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 8755214;
  const ::ywrapper::UintValue& max() const;
  ::ywrapper::UintValue* release_max();
  ::ywrapper::UintValue* mutable_max();
  void set_allocated_max(::ywrapper::UintValue* max);

  // .ywrapper.UintValue interval = 48963055 [(.yext.schemapath) = "/system/cpus/cpu/state/nice/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 48963055;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.UintValue min = 142976352 [(.yext.schemapath) = "/system/cpus/cpu/state/nice/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 142976352;
  const ::ywrapper::UintValue& min() const;
  ::ywrapper::UintValue* release_min();
  ::ywrapper::UintValue* mutable_min();
  void set_allocated_min(::ywrapper::UintValue* min);

  // .ywrapper.UintValue avg = 329385588 [(.yext.schemapath) = "/system/cpus/cpu/state/nice/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 329385588;
  const ::ywrapper::UintValue& avg() const;
  ::ywrapper::UintValue* release_avg();
  ::ywrapper::UintValue* mutable_avg();
  void set_allocated_avg(::ywrapper::UintValue* avg);

  // .ywrapper.UintValue instant = 453505999 [(.yext.schemapath) = "/system/cpus/cpu/state/nice/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 453505999;
  const ::ywrapper::UintValue& instant() const;
  ::ywrapper::UintValue* release_instant();
  ::ywrapper::UintValue* mutable_instant();
  void set_allocated_instant(::ywrapper::UintValue* instant);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Cpus.Cpu.State.Nice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* max_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::UintValue* min_;
  ::ywrapper::UintValue* avg_;
  ::ywrapper::UintValue* instant_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Cpus_Cpu_State_NiceImpl();
};
// -------------------------------------------------------------------

class System_Cpus_Cpu_State_SoftwareInterrupt : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Cpus.Cpu.State.SoftwareInterrupt) */ {
 public:
  System_Cpus_Cpu_State_SoftwareInterrupt();
  virtual ~System_Cpus_Cpu_State_SoftwareInterrupt();

  System_Cpus_Cpu_State_SoftwareInterrupt(const System_Cpus_Cpu_State_SoftwareInterrupt& from);

  inline System_Cpus_Cpu_State_SoftwareInterrupt& operator=(const System_Cpus_Cpu_State_SoftwareInterrupt& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Cpus_Cpu_State_SoftwareInterrupt(System_Cpus_Cpu_State_SoftwareInterrupt&& from) noexcept
    : System_Cpus_Cpu_State_SoftwareInterrupt() {
    *this = ::std::move(from);
  }

  inline System_Cpus_Cpu_State_SoftwareInterrupt& operator=(System_Cpus_Cpu_State_SoftwareInterrupt&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Cpus_Cpu_State_SoftwareInterrupt& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Cpus_Cpu_State_SoftwareInterrupt* internal_default_instance() {
    return reinterpret_cast<const System_Cpus_Cpu_State_SoftwareInterrupt*>(
               &_System_Cpus_Cpu_State_SoftwareInterrupt_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    66;

  void Swap(System_Cpus_Cpu_State_SoftwareInterrupt* other);
  friend void swap(System_Cpus_Cpu_State_SoftwareInterrupt& a, System_Cpus_Cpu_State_SoftwareInterrupt& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Cpus_Cpu_State_SoftwareInterrupt* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Cpus_Cpu_State_SoftwareInterrupt* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Cpus_Cpu_State_SoftwareInterrupt& from);
  void MergeFrom(const System_Cpus_Cpu_State_SoftwareInterrupt& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Cpus_Cpu_State_SoftwareInterrupt* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue max = 71002944 [(.yext.schemapath) = "/system/cpus/cpu/state/software-interrupt/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 71002944;
  const ::ywrapper::UintValue& max() const;
  ::ywrapper::UintValue* release_max();
  ::ywrapper::UintValue* mutable_max();
  void set_allocated_max(::ywrapper::UintValue* max);

  // .ywrapper.UintValue instant = 162043877 [(.yext.schemapath) = "/system/cpus/cpu/state/software-interrupt/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 162043877;
  const ::ywrapper::UintValue& instant() const;
  ::ywrapper::UintValue* release_instant();
  ::ywrapper::UintValue* mutable_instant();
  void set_allocated_instant(::ywrapper::UintValue* instant);

  // .ywrapper.UintValue interval = 336602009 [(.yext.schemapath) = "/system/cpus/cpu/state/software-interrupt/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 336602009;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.UintValue avg = 458756582 [(.yext.schemapath) = "/system/cpus/cpu/state/software-interrupt/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 458756582;
  const ::ywrapper::UintValue& avg() const;
  ::ywrapper::UintValue* release_avg();
  ::ywrapper::UintValue* mutable_avg();
  void set_allocated_avg(::ywrapper::UintValue* avg);

  // .ywrapper.UintValue min = 473652942 [(.yext.schemapath) = "/system/cpus/cpu/state/software-interrupt/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 473652942;
  const ::ywrapper::UintValue& min() const;
  ::ywrapper::UintValue* release_min();
  ::ywrapper::UintValue* mutable_min();
  void set_allocated_min(::ywrapper::UintValue* min);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Cpus.Cpu.State.SoftwareInterrupt)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* max_;
  ::ywrapper::UintValue* instant_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::UintValue* avg_;
  ::ywrapper::UintValue* min_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Cpus_Cpu_State_SoftwareInterruptImpl();
};
// -------------------------------------------------------------------

class System_Cpus_Cpu_State_Total : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Cpus.Cpu.State.Total) */ {
 public:
  System_Cpus_Cpu_State_Total();
  virtual ~System_Cpus_Cpu_State_Total();

  System_Cpus_Cpu_State_Total(const System_Cpus_Cpu_State_Total& from);

  inline System_Cpus_Cpu_State_Total& operator=(const System_Cpus_Cpu_State_Total& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Cpus_Cpu_State_Total(System_Cpus_Cpu_State_Total&& from) noexcept
    : System_Cpus_Cpu_State_Total() {
    *this = ::std::move(from);
  }

  inline System_Cpus_Cpu_State_Total& operator=(System_Cpus_Cpu_State_Total&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Cpus_Cpu_State_Total& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Cpus_Cpu_State_Total* internal_default_instance() {
    return reinterpret_cast<const System_Cpus_Cpu_State_Total*>(
               &_System_Cpus_Cpu_State_Total_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    67;

  void Swap(System_Cpus_Cpu_State_Total* other);
  friend void swap(System_Cpus_Cpu_State_Total& a, System_Cpus_Cpu_State_Total& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Cpus_Cpu_State_Total* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Cpus_Cpu_State_Total* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Cpus_Cpu_State_Total& from);
  void MergeFrom(const System_Cpus_Cpu_State_Total& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Cpus_Cpu_State_Total* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue avg = 132944461 [(.yext.schemapath) = "/system/cpus/cpu/state/total/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 132944461;
  const ::ywrapper::UintValue& avg() const;
  ::ywrapper::UintValue* release_avg();
  ::ywrapper::UintValue* mutable_avg();
  void set_allocated_avg(::ywrapper::UintValue* avg);

  // .ywrapper.UintValue min = 316793809 [(.yext.schemapath) = "/system/cpus/cpu/state/total/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 316793809;
  const ::ywrapper::UintValue& min() const;
  ::ywrapper::UintValue* release_min();
  ::ywrapper::UintValue* mutable_min();
  void set_allocated_min(::ywrapper::UintValue* min);

  // .ywrapper.UintValue instant = 386144186 [(.yext.schemapath) = "/system/cpus/cpu/state/total/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 386144186;
  const ::ywrapper::UintValue& instant() const;
  ::ywrapper::UintValue* release_instant();
  ::ywrapper::UintValue* mutable_instant();
  void set_allocated_instant(::ywrapper::UintValue* instant);

  // .ywrapper.UintValue max = 451014703 [(.yext.schemapath) = "/system/cpus/cpu/state/total/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 451014703;
  const ::ywrapper::UintValue& max() const;
  ::ywrapper::UintValue* release_max();
  ::ywrapper::UintValue* mutable_max();
  void set_allocated_max(::ywrapper::UintValue* max);

  // .ywrapper.UintValue interval = 496728204 [(.yext.schemapath) = "/system/cpus/cpu/state/total/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 496728204;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Cpus.Cpu.State.Total)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* avg_;
  ::ywrapper::UintValue* min_;
  ::ywrapper::UintValue* instant_;
  ::ywrapper::UintValue* max_;
  ::ywrapper::UintValue* interval_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Cpus_Cpu_State_TotalImpl();
};
// -------------------------------------------------------------------

class System_Cpus_Cpu_State_User : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Cpus.Cpu.State.User) */ {
 public:
  System_Cpus_Cpu_State_User();
  virtual ~System_Cpus_Cpu_State_User();

  System_Cpus_Cpu_State_User(const System_Cpus_Cpu_State_User& from);

  inline System_Cpus_Cpu_State_User& operator=(const System_Cpus_Cpu_State_User& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Cpus_Cpu_State_User(System_Cpus_Cpu_State_User&& from) noexcept
    : System_Cpus_Cpu_State_User() {
    *this = ::std::move(from);
  }

  inline System_Cpus_Cpu_State_User& operator=(System_Cpus_Cpu_State_User&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Cpus_Cpu_State_User& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Cpus_Cpu_State_User* internal_default_instance() {
    return reinterpret_cast<const System_Cpus_Cpu_State_User*>(
               &_System_Cpus_Cpu_State_User_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    68;

  void Swap(System_Cpus_Cpu_State_User* other);
  friend void swap(System_Cpus_Cpu_State_User& a, System_Cpus_Cpu_State_User& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Cpus_Cpu_State_User* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Cpus_Cpu_State_User* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Cpus_Cpu_State_User& from);
  void MergeFrom(const System_Cpus_Cpu_State_User& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Cpus_Cpu_State_User* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue instant = 3525685 [(.yext.schemapath) = "/system/cpus/cpu/state/user/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 3525685;
  const ::ywrapper::UintValue& instant() const;
  ::ywrapper::UintValue* release_instant();
  ::ywrapper::UintValue* mutable_instant();
  void set_allocated_instant(::ywrapper::UintValue* instant);

  // .ywrapper.UintValue interval = 14529097 [(.yext.schemapath) = "/system/cpus/cpu/state/user/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 14529097;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.UintValue avg = 360451894 [(.yext.schemapath) = "/system/cpus/cpu/state/user/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 360451894;
  const ::ywrapper::UintValue& avg() const;
  ::ywrapper::UintValue* release_avg();
  ::ywrapper::UintValue* mutable_avg();
  void set_allocated_avg(::ywrapper::UintValue* avg);

  // .ywrapper.UintValue min = 375361214 [(.yext.schemapath) = "/system/cpus/cpu/state/user/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 375361214;
  const ::ywrapper::UintValue& min() const;
  ::ywrapper::UintValue* release_min();
  ::ywrapper::UintValue* mutable_min();
  void set_allocated_min(::ywrapper::UintValue* min);

  // .ywrapper.UintValue max = 509582096 [(.yext.schemapath) = "/system/cpus/cpu/state/user/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 509582096;
  const ::ywrapper::UintValue& max() const;
  ::ywrapper::UintValue* release_max();
  ::ywrapper::UintValue* mutable_max();
  void set_allocated_max(::ywrapper::UintValue* max);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Cpus.Cpu.State.User)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* instant_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::UintValue* avg_;
  ::ywrapper::UintValue* min_;
  ::ywrapper::UintValue* max_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Cpus_Cpu_State_UserImpl();
};
// -------------------------------------------------------------------

class System_Cpus_Cpu_State_Wait : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Cpus.Cpu.State.Wait) */ {
 public:
  System_Cpus_Cpu_State_Wait();
  virtual ~System_Cpus_Cpu_State_Wait();

  System_Cpus_Cpu_State_Wait(const System_Cpus_Cpu_State_Wait& from);

  inline System_Cpus_Cpu_State_Wait& operator=(const System_Cpus_Cpu_State_Wait& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Cpus_Cpu_State_Wait(System_Cpus_Cpu_State_Wait&& from) noexcept
    : System_Cpus_Cpu_State_Wait() {
    *this = ::std::move(from);
  }

  inline System_Cpus_Cpu_State_Wait& operator=(System_Cpus_Cpu_State_Wait&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Cpus_Cpu_State_Wait& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Cpus_Cpu_State_Wait* internal_default_instance() {
    return reinterpret_cast<const System_Cpus_Cpu_State_Wait*>(
               &_System_Cpus_Cpu_State_Wait_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    69;

  void Swap(System_Cpus_Cpu_State_Wait* other);
  friend void swap(System_Cpus_Cpu_State_Wait& a, System_Cpus_Cpu_State_Wait& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Cpus_Cpu_State_Wait* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Cpus_Cpu_State_Wait* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Cpus_Cpu_State_Wait& from);
  void MergeFrom(const System_Cpus_Cpu_State_Wait& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Cpus_Cpu_State_Wait* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue instant = 14128043 [(.yext.schemapath) = "/system/cpus/cpu/state/wait/instant"];
  bool has_instant() const;
  void clear_instant();
  static const int kInstantFieldNumber = 14128043;
  const ::ywrapper::UintValue& instant() const;
  ::ywrapper::UintValue* release_instant();
  ::ywrapper::UintValue* mutable_instant();
  void set_allocated_instant(::ywrapper::UintValue* instant);

  // .ywrapper.UintValue min = 142336092 [(.yext.schemapath) = "/system/cpus/cpu/state/wait/min"];
  bool has_min() const;
  void clear_min();
  static const int kMinFieldNumber = 142336092;
  const ::ywrapper::UintValue& min() const;
  ::ywrapper::UintValue* release_min();
  ::ywrapper::UintValue* mutable_min();
  void set_allocated_min(::ywrapper::UintValue* min);

  // .ywrapper.UintValue interval = 227652571 [(.yext.schemapath) = "/system/cpus/cpu/state/wait/interval"];
  bool has_interval() const;
  void clear_interval();
  static const int kIntervalFieldNumber = 227652571;
  const ::ywrapper::UintValue& interval() const;
  ::ywrapper::UintValue* release_interval();
  ::ywrapper::UintValue* mutable_interval();
  void set_allocated_interval(::ywrapper::UintValue* interval);

  // .ywrapper.UintValue max = 276556978 [(.yext.schemapath) = "/system/cpus/cpu/state/wait/max"];
  bool has_max() const;
  void clear_max();
  static const int kMaxFieldNumber = 276556978;
  const ::ywrapper::UintValue& max() const;
  ::ywrapper::UintValue* release_max();
  ::ywrapper::UintValue* mutable_max();
  void set_allocated_max(::ywrapper::UintValue* max);

  // .ywrapper.UintValue avg = 461699088 [(.yext.schemapath) = "/system/cpus/cpu/state/wait/avg"];
  bool has_avg() const;
  void clear_avg();
  static const int kAvgFieldNumber = 461699088;
  const ::ywrapper::UintValue& avg() const;
  ::ywrapper::UintValue* release_avg();
  ::ywrapper::UintValue* mutable_avg();
  void set_allocated_avg(::ywrapper::UintValue* avg);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Cpus.Cpu.State.Wait)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* instant_;
  ::ywrapper::UintValue* min_;
  ::ywrapper::UintValue* interval_;
  ::ywrapper::UintValue* max_;
  ::ywrapper::UintValue* avg_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Cpus_Cpu_State_WaitImpl();
};
// -------------------------------------------------------------------

class System_Cpus_Cpu_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Cpus.Cpu.State) */ {
 public:
  System_Cpus_Cpu_State();
  virtual ~System_Cpus_Cpu_State();

  System_Cpus_Cpu_State(const System_Cpus_Cpu_State& from);

  inline System_Cpus_Cpu_State& operator=(const System_Cpus_Cpu_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Cpus_Cpu_State(System_Cpus_Cpu_State&& from) noexcept
    : System_Cpus_Cpu_State() {
    *this = ::std::move(from);
  }

  inline System_Cpus_Cpu_State& operator=(System_Cpus_Cpu_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Cpus_Cpu_State& default_instance();

  enum IndexCase {
    kIndexIndex = 408896491,
    kIndexUint64 = 247396011,
    INDEX_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Cpus_Cpu_State* internal_default_instance() {
    return reinterpret_cast<const System_Cpus_Cpu_State*>(
               &_System_Cpus_Cpu_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    70;

  void Swap(System_Cpus_Cpu_State* other);
  friend void swap(System_Cpus_Cpu_State& a, System_Cpus_Cpu_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Cpus_Cpu_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Cpus_Cpu_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Cpus_Cpu_State& from);
  void MergeFrom(const System_Cpus_Cpu_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Cpus_Cpu_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Cpus_Cpu_State_HardwareInterrupt HardwareInterrupt;
  typedef System_Cpus_Cpu_State_Idle Idle;
  typedef System_Cpus_Cpu_State_Kernel Kernel;
  typedef System_Cpus_Cpu_State_Nice Nice;
  typedef System_Cpus_Cpu_State_SoftwareInterrupt SoftwareInterrupt;
  typedef System_Cpus_Cpu_State_Total Total;
  typedef System_Cpus_Cpu_State_User User;
  typedef System_Cpus_Cpu_State_Wait Wait;

  typedef System_Cpus_Cpu_State_Index Index;
  static const Index INDEX_UNSET =
    System_Cpus_Cpu_State_Index_INDEX_UNSET;
  static const Index INDEX_ALL =
    System_Cpus_Cpu_State_Index_INDEX_ALL;
  static inline bool Index_IsValid(int value) {
    return System_Cpus_Cpu_State_Index_IsValid(value);
  }
  static const Index Index_MIN =
    System_Cpus_Cpu_State_Index_Index_MIN;
  static const Index Index_MAX =
    System_Cpus_Cpu_State_Index_Index_MAX;
  static const int Index_ARRAYSIZE =
    System_Cpus_Cpu_State_Index_Index_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Index_descriptor() {
    return System_Cpus_Cpu_State_Index_descriptor();
  }
  static inline const ::std::string& Index_Name(Index value) {
    return System_Cpus_Cpu_State_Index_Name(value);
  }
  static inline bool Index_Parse(const ::std::string& name,
      Index* value) {
    return System_Cpus_Cpu_State_Index_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Cpus.Cpu.State.Kernel kernel = 23883017 [(.yext.schemapath) = "/system/cpus/cpu/state/kernel"];
  bool has_kernel() const;
  void clear_kernel();
  static const int kKernelFieldNumber = 23883017;
  const ::openconfig::openconfig_system::System_Cpus_Cpu_State_Kernel& kernel() const;
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_Kernel* release_kernel();
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_Kernel* mutable_kernel();
  void set_allocated_kernel(::openconfig::openconfig_system::System_Cpus_Cpu_State_Kernel* kernel);

  // .openconfig.openconfig_system.System.Cpus.Cpu.State.Nice nice = 74777833 [(.yext.schemapath) = "/system/cpus/cpu/state/nice"];
  bool has_nice() const;
  void clear_nice();
  static const int kNiceFieldNumber = 74777833;
  const ::openconfig::openconfig_system::System_Cpus_Cpu_State_Nice& nice() const;
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_Nice* release_nice();
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_Nice* mutable_nice();
  void set_allocated_nice(::openconfig::openconfig_system::System_Cpus_Cpu_State_Nice* nice);

  // .openconfig.openconfig_system.System.Cpus.Cpu.State.HardwareInterrupt hardware_interrupt = 81518708 [(.yext.schemapath) = "/system/cpus/cpu/state/hardware-interrupt"];
  bool has_hardware_interrupt() const;
  void clear_hardware_interrupt();
  static const int kHardwareInterruptFieldNumber = 81518708;
  const ::openconfig::openconfig_system::System_Cpus_Cpu_State_HardwareInterrupt& hardware_interrupt() const;
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_HardwareInterrupt* release_hardware_interrupt();
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_HardwareInterrupt* mutable_hardware_interrupt();
  void set_allocated_hardware_interrupt(::openconfig::openconfig_system::System_Cpus_Cpu_State_HardwareInterrupt* hardware_interrupt);

  // .openconfig.openconfig_system.System.Cpus.Cpu.State.User user = 329002807 [(.yext.schemapath) = "/system/cpus/cpu/state/user"];
  bool has_user() const;
  void clear_user();
  static const int kUserFieldNumber = 329002807;
  const ::openconfig::openconfig_system::System_Cpus_Cpu_State_User& user() const;
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_User* release_user();
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_User* mutable_user();
  void set_allocated_user(::openconfig::openconfig_system::System_Cpus_Cpu_State_User* user);

  // .openconfig.openconfig_system.System.Cpus.Cpu.State.SoftwareInterrupt software_interrupt = 350532999 [(.yext.schemapath) = "/system/cpus/cpu/state/software-interrupt"];
  bool has_software_interrupt() const;
  void clear_software_interrupt();
  static const int kSoftwareInterruptFieldNumber = 350532999;
  const ::openconfig::openconfig_system::System_Cpus_Cpu_State_SoftwareInterrupt& software_interrupt() const;
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_SoftwareInterrupt* release_software_interrupt();
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_SoftwareInterrupt* mutable_software_interrupt();
  void set_allocated_software_interrupt(::openconfig::openconfig_system::System_Cpus_Cpu_State_SoftwareInterrupt* software_interrupt);

  // .openconfig.openconfig_system.System.Cpus.Cpu.State.Total total = 497504852 [(.yext.schemapath) = "/system/cpus/cpu/state/total"];
  bool has_total() const;
  void clear_total();
  static const int kTotalFieldNumber = 497504852;
  const ::openconfig::openconfig_system::System_Cpus_Cpu_State_Total& total() const;
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_Total* release_total();
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_Total* mutable_total();
  void set_allocated_total(::openconfig::openconfig_system::System_Cpus_Cpu_State_Total* total);

  // .openconfig.openconfig_system.System.Cpus.Cpu.State.Idle idle = 511801900 [(.yext.schemapath) = "/system/cpus/cpu/state/idle"];
  bool has_idle() const;
  void clear_idle();
  static const int kIdleFieldNumber = 511801900;
  const ::openconfig::openconfig_system::System_Cpus_Cpu_State_Idle& idle() const;
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_Idle* release_idle();
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_Idle* mutable_idle();
  void set_allocated_idle(::openconfig::openconfig_system::System_Cpus_Cpu_State_Idle* idle);

  // .openconfig.openconfig_system.System.Cpus.Cpu.State.Wait wait = 517899549 [(.yext.schemapath) = "/system/cpus/cpu/state/wait"];
  bool has_wait() const;
  void clear_wait();
  static const int kWaitFieldNumber = 517899549;
  const ::openconfig::openconfig_system::System_Cpus_Cpu_State_Wait& wait() const;
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_Wait* release_wait();
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_Wait* mutable_wait();
  void set_allocated_wait(::openconfig::openconfig_system::System_Cpus_Cpu_State_Wait* wait);

  // .openconfig.openconfig_system.System.Cpus.Cpu.State.Index index_index = 408896491;
  private:
  bool has_index_index() const;
  public:
  void clear_index_index();
  static const int kIndexIndexFieldNumber = 408896491;
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_Index index_index() const;
  void set_index_index(::openconfig::openconfig_system::System_Cpus_Cpu_State_Index value);

  // uint64 index_uint64 = 247396011;
  private:
  bool has_index_uint64() const;
  public:
  void clear_index_uint64();
  static const int kIndexUint64FieldNumber = 247396011;
  ::google::protobuf::uint64 index_uint64() const;
  void set_index_uint64(::google::protobuf::uint64 value);

  IndexCase index_case() const;
  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Cpus.Cpu.State)
 private:
  void set_has_index_index();
  void set_has_index_uint64();

  inline bool has_index() const;
  void clear_index();
  inline void clear_has_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_Kernel* kernel_;
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_Nice* nice_;
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_HardwareInterrupt* hardware_interrupt_;
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_User* user_;
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_SoftwareInterrupt* software_interrupt_;
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_Total* total_;
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_Idle* idle_;
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_Wait* wait_;
  union IndexUnion {
    IndexUnion() {}
    int index_index_;
    ::google::protobuf::uint64 index_uint64_;
  } index_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Cpus_Cpu_StateImpl();
};
// -------------------------------------------------------------------

class System_Cpus_Cpu : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Cpus.Cpu) */ {
 public:
  System_Cpus_Cpu();
  virtual ~System_Cpus_Cpu();

  System_Cpus_Cpu(const System_Cpus_Cpu& from);

  inline System_Cpus_Cpu& operator=(const System_Cpus_Cpu& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Cpus_Cpu(System_Cpus_Cpu&& from) noexcept
    : System_Cpus_Cpu() {
    *this = ::std::move(from);
  }

  inline System_Cpus_Cpu& operator=(System_Cpus_Cpu&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Cpus_Cpu& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Cpus_Cpu* internal_default_instance() {
    return reinterpret_cast<const System_Cpus_Cpu*>(
               &_System_Cpus_Cpu_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    71;

  void Swap(System_Cpus_Cpu* other);
  friend void swap(System_Cpus_Cpu& a, System_Cpus_Cpu& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Cpus_Cpu* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Cpus_Cpu* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Cpus_Cpu& from);
  void MergeFrom(const System_Cpus_Cpu& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Cpus_Cpu* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Cpus_Cpu_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Cpus.Cpu.State state = 284865267 [(.yext.schemapath) = "/system/cpus/cpu/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 284865267;
  const ::openconfig::openconfig_system::System_Cpus_Cpu_State& state() const;
  ::openconfig::openconfig_system::System_Cpus_Cpu_State* release_state();
  ::openconfig::openconfig_system::System_Cpus_Cpu_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Cpus_Cpu_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Cpus.Cpu)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Cpus_Cpu_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Cpus_CpuImpl();
};
// -------------------------------------------------------------------

class System_Cpus_CpuKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Cpus.CpuKey) */ {
 public:
  System_Cpus_CpuKey();
  virtual ~System_Cpus_CpuKey();

  System_Cpus_CpuKey(const System_Cpus_CpuKey& from);

  inline System_Cpus_CpuKey& operator=(const System_Cpus_CpuKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Cpus_CpuKey(System_Cpus_CpuKey&& from) noexcept
    : System_Cpus_CpuKey() {
    *this = ::std::move(from);
  }

  inline System_Cpus_CpuKey& operator=(System_Cpus_CpuKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Cpus_CpuKey& default_instance();

  enum IndexCase {
    kIndexIndex = 408896491,
    kIndexUint64 = 247396011,
    INDEX_NOT_SET = 0,
  };

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Cpus_CpuKey* internal_default_instance() {
    return reinterpret_cast<const System_Cpus_CpuKey*>(
               &_System_Cpus_CpuKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    72;

  void Swap(System_Cpus_CpuKey* other);
  friend void swap(System_Cpus_CpuKey& a, System_Cpus_CpuKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Cpus_CpuKey* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Cpus_CpuKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Cpus_CpuKey& from);
  void MergeFrom(const System_Cpus_CpuKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Cpus_CpuKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Cpus_CpuKey_Index Index;
  static const Index INDEX_UNSET =
    System_Cpus_CpuKey_Index_INDEX_UNSET;
  static const Index INDEX_ALL =
    System_Cpus_CpuKey_Index_INDEX_ALL;
  static inline bool Index_IsValid(int value) {
    return System_Cpus_CpuKey_Index_IsValid(value);
  }
  static const Index Index_MIN =
    System_Cpus_CpuKey_Index_Index_MIN;
  static const Index Index_MAX =
    System_Cpus_CpuKey_Index_Index_MAX;
  static const int Index_ARRAYSIZE =
    System_Cpus_CpuKey_Index_Index_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Index_descriptor() {
    return System_Cpus_CpuKey_Index_descriptor();
  }
  static inline const ::std::string& Index_Name(Index value) {
    return System_Cpus_CpuKey_Index_Name(value);
  }
  static inline bool Index_Parse(const ::std::string& name,
      Index* value) {
    return System_Cpus_CpuKey_Index_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Cpus.Cpu cpu = 2;
  bool has_cpu() const;
  void clear_cpu();
  static const int kCpuFieldNumber = 2;
  const ::openconfig::openconfig_system::System_Cpus_Cpu& cpu() const;
  ::openconfig::openconfig_system::System_Cpus_Cpu* release_cpu();
  ::openconfig::openconfig_system::System_Cpus_Cpu* mutable_cpu();
  void set_allocated_cpu(::openconfig::openconfig_system::System_Cpus_Cpu* cpu);

  // .openconfig.openconfig_system.System.Cpus.CpuKey.Index index_index = 408896491;
  private:
  bool has_index_index() const;
  public:
  void clear_index_index();
  static const int kIndexIndexFieldNumber = 408896491;
  ::openconfig::openconfig_system::System_Cpus_CpuKey_Index index_index() const;
  void set_index_index(::openconfig::openconfig_system::System_Cpus_CpuKey_Index value);

  // uint64 index_uint64 = 247396011;
  private:
  bool has_index_uint64() const;
  public:
  void clear_index_uint64();
  static const int kIndexUint64FieldNumber = 247396011;
  ::google::protobuf::uint64 index_uint64() const;
  void set_index_uint64(::google::protobuf::uint64 value);

  IndexCase index_case() const;
  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Cpus.CpuKey)
 private:
  void set_has_index_index();
  void set_has_index_uint64();

  inline bool has_index() const;
  void clear_index();
  inline void clear_has_index();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Cpus_Cpu* cpu_;
  union IndexUnion {
    IndexUnion() {}
    int index_index_;
    ::google::protobuf::uint64 index_uint64_;
  } index_;
  mutable int _cached_size_;
  ::google::protobuf::uint32 _oneof_case_[1];

  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Cpus_CpuKeyImpl();
};
// -------------------------------------------------------------------

class System_Cpus : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Cpus) */ {
 public:
  System_Cpus();
  virtual ~System_Cpus();

  System_Cpus(const System_Cpus& from);

  inline System_Cpus& operator=(const System_Cpus& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Cpus(System_Cpus&& from) noexcept
    : System_Cpus() {
    *this = ::std::move(from);
  }

  inline System_Cpus& operator=(System_Cpus&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Cpus& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Cpus* internal_default_instance() {
    return reinterpret_cast<const System_Cpus*>(
               &_System_Cpus_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    73;

  void Swap(System_Cpus* other);
  friend void swap(System_Cpus& a, System_Cpus& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Cpus* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Cpus* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Cpus& from);
  void MergeFrom(const System_Cpus& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Cpus* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Cpus_Cpu Cpu;
  typedef System_Cpus_CpuKey CpuKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_system.System.Cpus.CpuKey cpu = 70314881 [(.yext.schemapath) = "/system/cpus/cpu"];
  int cpu_size() const;
  void clear_cpu();
  static const int kCpuFieldNumber = 70314881;
  const ::openconfig::openconfig_system::System_Cpus_CpuKey& cpu(int index) const;
  ::openconfig::openconfig_system::System_Cpus_CpuKey* mutable_cpu(int index);
  ::openconfig::openconfig_system::System_Cpus_CpuKey* add_cpu();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Cpus_CpuKey >*
      mutable_cpu();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Cpus_CpuKey >&
      cpu() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Cpus)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Cpus_CpuKey > cpu_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_CpusImpl();
};
// -------------------------------------------------------------------

class System_Dns_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Dns.Config) */ {
 public:
  System_Dns_Config();
  virtual ~System_Dns_Config();

  System_Dns_Config(const System_Dns_Config& from);

  inline System_Dns_Config& operator=(const System_Dns_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Dns_Config(System_Dns_Config&& from) noexcept
    : System_Dns_Config() {
    *this = ::std::move(from);
  }

  inline System_Dns_Config& operator=(System_Dns_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Dns_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Dns_Config* internal_default_instance() {
    return reinterpret_cast<const System_Dns_Config*>(
               &_System_Dns_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    74;

  void Swap(System_Dns_Config* other);
  friend void swap(System_Dns_Config& a, System_Dns_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Dns_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Dns_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Dns_Config& from);
  void MergeFrom(const System_Dns_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Dns_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ywrapper.StringValue search = 529094948 [(.yext.schemapath) = "/system/dns/config/search"];
  int search_size() const;
  void clear_search();
  static const int kSearchFieldNumber = 529094948;
  const ::ywrapper::StringValue& search(int index) const;
  ::ywrapper::StringValue* mutable_search(int index);
  ::ywrapper::StringValue* add_search();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
      mutable_search();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
      search() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Dns.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue > search_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Dns_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Dns_HostEntries_HostEntry_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.Config) */ {
 public:
  System_Dns_HostEntries_HostEntry_Config();
  virtual ~System_Dns_HostEntries_HostEntry_Config();

  System_Dns_HostEntries_HostEntry_Config(const System_Dns_HostEntries_HostEntry_Config& from);

  inline System_Dns_HostEntries_HostEntry_Config& operator=(const System_Dns_HostEntries_HostEntry_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Dns_HostEntries_HostEntry_Config(System_Dns_HostEntries_HostEntry_Config&& from) noexcept
    : System_Dns_HostEntries_HostEntry_Config() {
    *this = ::std::move(from);
  }

  inline System_Dns_HostEntries_HostEntry_Config& operator=(System_Dns_HostEntries_HostEntry_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Dns_HostEntries_HostEntry_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Dns_HostEntries_HostEntry_Config* internal_default_instance() {
    return reinterpret_cast<const System_Dns_HostEntries_HostEntry_Config*>(
               &_System_Dns_HostEntries_HostEntry_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    75;

  void Swap(System_Dns_HostEntries_HostEntry_Config* other);
  friend void swap(System_Dns_HostEntries_HostEntry_Config& a, System_Dns_HostEntries_HostEntry_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Dns_HostEntries_HostEntry_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Dns_HostEntries_HostEntry_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Dns_HostEntries_HostEntry_Config& from);
  void MergeFrom(const System_Dns_HostEntries_HostEntry_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Dns_HostEntries_HostEntry_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ywrapper.StringValue ipv4_address = 47682642 [(.yext.schemapath) = "/system/dns/host-entries/host-entry/config/ipv4-address"];
  int ipv4_address_size() const;
  void clear_ipv4_address();
  static const int kIpv4AddressFieldNumber = 47682642;
  const ::ywrapper::StringValue& ipv4_address(int index) const;
  ::ywrapper::StringValue* mutable_ipv4_address(int index);
  ::ywrapper::StringValue* add_ipv4_address();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
      mutable_ipv4_address();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
      ipv4_address() const;

  // repeated .ywrapper.StringValue ipv6_address = 89261280 [(.yext.schemapath) = "/system/dns/host-entries/host-entry/config/ipv6-address"];
  int ipv6_address_size() const;
  void clear_ipv6_address();
  static const int kIpv6AddressFieldNumber = 89261280;
  const ::ywrapper::StringValue& ipv6_address(int index) const;
  ::ywrapper::StringValue* mutable_ipv6_address(int index);
  ::ywrapper::StringValue* add_ipv6_address();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
      mutable_ipv6_address();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
      ipv6_address() const;

  // repeated .ywrapper.StringValue alias = 202464928 [(.yext.schemapath) = "/system/dns/host-entries/host-entry/config/alias"];
  int alias_size() const;
  void clear_alias();
  static const int kAliasFieldNumber = 202464928;
  const ::ywrapper::StringValue& alias(int index) const;
  ::ywrapper::StringValue* mutable_alias(int index);
  ::ywrapper::StringValue* add_alias();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
      mutable_alias();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
      alias() const;

  // .ywrapper.StringValue hostname = 145653559 [(.yext.schemapath) = "/system/dns/host-entries/host-entry/config/hostname"];
  bool has_hostname() const;
  void clear_hostname();
  static const int kHostnameFieldNumber = 145653559;
  const ::ywrapper::StringValue& hostname() const;
  ::ywrapper::StringValue* release_hostname();
  ::ywrapper::StringValue* mutable_hostname();
  void set_allocated_hostname(::ywrapper::StringValue* hostname);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue > ipv4_address_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue > ipv6_address_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue > alias_;
  ::ywrapper::StringValue* hostname_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Dns_HostEntries_HostEntry_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Dns_HostEntries_HostEntry_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.State) */ {
 public:
  System_Dns_HostEntries_HostEntry_State();
  virtual ~System_Dns_HostEntries_HostEntry_State();

  System_Dns_HostEntries_HostEntry_State(const System_Dns_HostEntries_HostEntry_State& from);

  inline System_Dns_HostEntries_HostEntry_State& operator=(const System_Dns_HostEntries_HostEntry_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Dns_HostEntries_HostEntry_State(System_Dns_HostEntries_HostEntry_State&& from) noexcept
    : System_Dns_HostEntries_HostEntry_State() {
    *this = ::std::move(from);
  }

  inline System_Dns_HostEntries_HostEntry_State& operator=(System_Dns_HostEntries_HostEntry_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Dns_HostEntries_HostEntry_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Dns_HostEntries_HostEntry_State* internal_default_instance() {
    return reinterpret_cast<const System_Dns_HostEntries_HostEntry_State*>(
               &_System_Dns_HostEntries_HostEntry_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    76;

  void Swap(System_Dns_HostEntries_HostEntry_State* other);
  friend void swap(System_Dns_HostEntries_HostEntry_State& a, System_Dns_HostEntries_HostEntry_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Dns_HostEntries_HostEntry_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Dns_HostEntries_HostEntry_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Dns_HostEntries_HostEntry_State& from);
  void MergeFrom(const System_Dns_HostEntries_HostEntry_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Dns_HostEntries_HostEntry_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ywrapper.StringValue alias = 117816075 [(.yext.schemapath) = "/system/dns/host-entries/host-entry/state/alias"];
  int alias_size() const;
  void clear_alias();
  static const int kAliasFieldNumber = 117816075;
  const ::ywrapper::StringValue& alias(int index) const;
  ::ywrapper::StringValue* mutable_alias(int index);
  ::ywrapper::StringValue* add_alias();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
      mutable_alias();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
      alias() const;

  // repeated .ywrapper.StringValue ipv6_address = 360963057 [(.yext.schemapath) = "/system/dns/host-entries/host-entry/state/ipv6-address"];
  int ipv6_address_size() const;
  void clear_ipv6_address();
  static const int kIpv6AddressFieldNumber = 360963057;
  const ::ywrapper::StringValue& ipv6_address(int index) const;
  ::ywrapper::StringValue* mutable_ipv6_address(int index);
  ::ywrapper::StringValue* add_ipv6_address();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
      mutable_ipv6_address();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
      ipv6_address() const;

  // repeated .ywrapper.StringValue ipv4_address = 444828131 [(.yext.schemapath) = "/system/dns/host-entries/host-entry/state/ipv4-address"];
  int ipv4_address_size() const;
  void clear_ipv4_address();
  static const int kIpv4AddressFieldNumber = 444828131;
  const ::ywrapper::StringValue& ipv4_address(int index) const;
  ::ywrapper::StringValue* mutable_ipv4_address(int index);
  ::ywrapper::StringValue* add_ipv4_address();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
      mutable_ipv4_address();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
      ipv4_address() const;

  // .ywrapper.StringValue hostname = 171107854 [(.yext.schemapath) = "/system/dns/host-entries/host-entry/state/hostname"];
  bool has_hostname() const;
  void clear_hostname();
  static const int kHostnameFieldNumber = 171107854;
  const ::ywrapper::StringValue& hostname() const;
  ::ywrapper::StringValue* release_hostname();
  ::ywrapper::StringValue* mutable_hostname();
  void set_allocated_hostname(::ywrapper::StringValue* hostname);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue > alias_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue > ipv6_address_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue > ipv4_address_;
  ::ywrapper::StringValue* hostname_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Dns_HostEntries_HostEntry_StateImpl();
};
// -------------------------------------------------------------------

class System_Dns_HostEntries_HostEntry : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry) */ {
 public:
  System_Dns_HostEntries_HostEntry();
  virtual ~System_Dns_HostEntries_HostEntry();

  System_Dns_HostEntries_HostEntry(const System_Dns_HostEntries_HostEntry& from);

  inline System_Dns_HostEntries_HostEntry& operator=(const System_Dns_HostEntries_HostEntry& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Dns_HostEntries_HostEntry(System_Dns_HostEntries_HostEntry&& from) noexcept
    : System_Dns_HostEntries_HostEntry() {
    *this = ::std::move(from);
  }

  inline System_Dns_HostEntries_HostEntry& operator=(System_Dns_HostEntries_HostEntry&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Dns_HostEntries_HostEntry& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Dns_HostEntries_HostEntry* internal_default_instance() {
    return reinterpret_cast<const System_Dns_HostEntries_HostEntry*>(
               &_System_Dns_HostEntries_HostEntry_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    77;

  void Swap(System_Dns_HostEntries_HostEntry* other);
  friend void swap(System_Dns_HostEntries_HostEntry& a, System_Dns_HostEntries_HostEntry& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Dns_HostEntries_HostEntry* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Dns_HostEntries_HostEntry* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Dns_HostEntries_HostEntry& from);
  void MergeFrom(const System_Dns_HostEntries_HostEntry& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Dns_HostEntries_HostEntry* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Dns_HostEntries_HostEntry_Config Config;
  typedef System_Dns_HostEntries_HostEntry_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.State state = 259656678 [(.yext.schemapath) = "/system/dns/host-entries/host-entry/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 259656678;
  const ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry_State& state() const;
  ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry_State* release_state();
  ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry_State* state);

  // .openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.Config config = 429171057 [(.yext.schemapath) = "/system/dns/host-entries/host-entry/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 429171057;
  const ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry_Config& config() const;
  ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry_Config* release_config();
  ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry_State* state_;
  ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Dns_HostEntries_HostEntryImpl();
};
// -------------------------------------------------------------------

class System_Dns_HostEntries_HostEntryKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Dns.HostEntries.HostEntryKey) */ {
 public:
  System_Dns_HostEntries_HostEntryKey();
  virtual ~System_Dns_HostEntries_HostEntryKey();

  System_Dns_HostEntries_HostEntryKey(const System_Dns_HostEntries_HostEntryKey& from);

  inline System_Dns_HostEntries_HostEntryKey& operator=(const System_Dns_HostEntries_HostEntryKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Dns_HostEntries_HostEntryKey(System_Dns_HostEntries_HostEntryKey&& from) noexcept
    : System_Dns_HostEntries_HostEntryKey() {
    *this = ::std::move(from);
  }

  inline System_Dns_HostEntries_HostEntryKey& operator=(System_Dns_HostEntries_HostEntryKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Dns_HostEntries_HostEntryKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Dns_HostEntries_HostEntryKey* internal_default_instance() {
    return reinterpret_cast<const System_Dns_HostEntries_HostEntryKey*>(
               &_System_Dns_HostEntries_HostEntryKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    78;

  void Swap(System_Dns_HostEntries_HostEntryKey* other);
  friend void swap(System_Dns_HostEntries_HostEntryKey& a, System_Dns_HostEntries_HostEntryKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Dns_HostEntries_HostEntryKey* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Dns_HostEntries_HostEntryKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Dns_HostEntries_HostEntryKey& from);
  void MergeFrom(const System_Dns_HostEntries_HostEntryKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Dns_HostEntries_HostEntryKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string hostname = 1 [(.yext.schemapath) = "/system/dns/host-entries/host-entry/hostname"];
  void clear_hostname();
  static const int kHostnameFieldNumber = 1;
  const ::std::string& hostname() const;
  void set_hostname(const ::std::string& value);
  #if LANG_CXX11
  void set_hostname(::std::string&& value);
  #endif
  void set_hostname(const char* value);
  void set_hostname(const char* value, size_t size);
  ::std::string* mutable_hostname();
  ::std::string* release_hostname();
  void set_allocated_hostname(::std::string* hostname);

  // .openconfig.openconfig_system.System.Dns.HostEntries.HostEntry host_entry = 2;
  bool has_host_entry() const;
  void clear_host_entry();
  static const int kHostEntryFieldNumber = 2;
  const ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry& host_entry() const;
  ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry* release_host_entry();
  ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry* mutable_host_entry();
  void set_allocated_host_entry(::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry* host_entry);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Dns.HostEntries.HostEntryKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr hostname_;
  ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry* host_entry_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Dns_HostEntries_HostEntryKeyImpl();
};
// -------------------------------------------------------------------

class System_Dns_HostEntries : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Dns.HostEntries) */ {
 public:
  System_Dns_HostEntries();
  virtual ~System_Dns_HostEntries();

  System_Dns_HostEntries(const System_Dns_HostEntries& from);

  inline System_Dns_HostEntries& operator=(const System_Dns_HostEntries& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Dns_HostEntries(System_Dns_HostEntries&& from) noexcept
    : System_Dns_HostEntries() {
    *this = ::std::move(from);
  }

  inline System_Dns_HostEntries& operator=(System_Dns_HostEntries&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Dns_HostEntries& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Dns_HostEntries* internal_default_instance() {
    return reinterpret_cast<const System_Dns_HostEntries*>(
               &_System_Dns_HostEntries_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    79;

  void Swap(System_Dns_HostEntries* other);
  friend void swap(System_Dns_HostEntries& a, System_Dns_HostEntries& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Dns_HostEntries* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Dns_HostEntries* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Dns_HostEntries& from);
  void MergeFrom(const System_Dns_HostEntries& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Dns_HostEntries* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Dns_HostEntries_HostEntry HostEntry;
  typedef System_Dns_HostEntries_HostEntryKey HostEntryKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_system.System.Dns.HostEntries.HostEntryKey host_entry = 297400348 [(.yext.schemapath) = "/system/dns/host-entries/host-entry"];
  int host_entry_size() const;
  void clear_host_entry();
  static const int kHostEntryFieldNumber = 297400348;
  const ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntryKey& host_entry(int index) const;
  ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntryKey* mutable_host_entry(int index);
  ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntryKey* add_host_entry();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntryKey >*
      mutable_host_entry();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntryKey >&
      host_entry() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Dns.HostEntries)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntryKey > host_entry_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Dns_HostEntriesImpl();
};
// -------------------------------------------------------------------

class System_Dns_Servers_Server_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Dns.Servers.Server.Config) */ {
 public:
  System_Dns_Servers_Server_Config();
  virtual ~System_Dns_Servers_Server_Config();

  System_Dns_Servers_Server_Config(const System_Dns_Servers_Server_Config& from);

  inline System_Dns_Servers_Server_Config& operator=(const System_Dns_Servers_Server_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Dns_Servers_Server_Config(System_Dns_Servers_Server_Config&& from) noexcept
    : System_Dns_Servers_Server_Config() {
    *this = ::std::move(from);
  }

  inline System_Dns_Servers_Server_Config& operator=(System_Dns_Servers_Server_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Dns_Servers_Server_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Dns_Servers_Server_Config* internal_default_instance() {
    return reinterpret_cast<const System_Dns_Servers_Server_Config*>(
               &_System_Dns_Servers_Server_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    80;

  void Swap(System_Dns_Servers_Server_Config* other);
  friend void swap(System_Dns_Servers_Server_Config& a, System_Dns_Servers_Server_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Dns_Servers_Server_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Dns_Servers_Server_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Dns_Servers_Server_Config& from);
  void MergeFrom(const System_Dns_Servers_Server_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Dns_Servers_Server_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue address = 141908379 [(.yext.schemapath) = "/system/dns/servers/server/config/address"];
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 141908379;
  const ::ywrapper::StringValue& address() const;
  ::ywrapper::StringValue* release_address();
  ::ywrapper::StringValue* mutable_address();
  void set_allocated_address(::ywrapper::StringValue* address);

  // .ywrapper.UintValue port = 441306980 [(.yext.schemapath) = "/system/dns/servers/server/config/port"];
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 441306980;
  const ::ywrapper::UintValue& port() const;
  ::ywrapper::UintValue* release_port();
  ::ywrapper::UintValue* mutable_port();
  void set_allocated_port(::ywrapper::UintValue* port);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Dns.Servers.Server.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* address_;
  ::ywrapper::UintValue* port_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Dns_Servers_Server_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Dns_Servers_Server_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Dns.Servers.Server.State) */ {
 public:
  System_Dns_Servers_Server_State();
  virtual ~System_Dns_Servers_Server_State();

  System_Dns_Servers_Server_State(const System_Dns_Servers_Server_State& from);

  inline System_Dns_Servers_Server_State& operator=(const System_Dns_Servers_Server_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Dns_Servers_Server_State(System_Dns_Servers_Server_State&& from) noexcept
    : System_Dns_Servers_Server_State() {
    *this = ::std::move(from);
  }

  inline System_Dns_Servers_Server_State& operator=(System_Dns_Servers_Server_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Dns_Servers_Server_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Dns_Servers_Server_State* internal_default_instance() {
    return reinterpret_cast<const System_Dns_Servers_Server_State*>(
               &_System_Dns_Servers_Server_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    81;

  void Swap(System_Dns_Servers_Server_State* other);
  friend void swap(System_Dns_Servers_Server_State& a, System_Dns_Servers_Server_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Dns_Servers_Server_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Dns_Servers_Server_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Dns_Servers_Server_State& from);
  void MergeFrom(const System_Dns_Servers_Server_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Dns_Servers_Server_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue address = 364706914 [(.yext.schemapath) = "/system/dns/servers/server/state/address"];
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 364706914;
  const ::ywrapper::StringValue& address() const;
  ::ywrapper::StringValue* release_address();
  ::ywrapper::StringValue* mutable_address();
  void set_allocated_address(::ywrapper::StringValue* address);

  // .ywrapper.UintValue port = 528842771 [(.yext.schemapath) = "/system/dns/servers/server/state/port"];
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 528842771;
  const ::ywrapper::UintValue& port() const;
  ::ywrapper::UintValue* release_port();
  ::ywrapper::UintValue* mutable_port();
  void set_allocated_port(::ywrapper::UintValue* port);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Dns.Servers.Server.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* address_;
  ::ywrapper::UintValue* port_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Dns_Servers_Server_StateImpl();
};
// -------------------------------------------------------------------

class System_Dns_Servers_Server : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Dns.Servers.Server) */ {
 public:
  System_Dns_Servers_Server();
  virtual ~System_Dns_Servers_Server();

  System_Dns_Servers_Server(const System_Dns_Servers_Server& from);

  inline System_Dns_Servers_Server& operator=(const System_Dns_Servers_Server& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Dns_Servers_Server(System_Dns_Servers_Server&& from) noexcept
    : System_Dns_Servers_Server() {
    *this = ::std::move(from);
  }

  inline System_Dns_Servers_Server& operator=(System_Dns_Servers_Server&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Dns_Servers_Server& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Dns_Servers_Server* internal_default_instance() {
    return reinterpret_cast<const System_Dns_Servers_Server*>(
               &_System_Dns_Servers_Server_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    82;

  void Swap(System_Dns_Servers_Server* other);
  friend void swap(System_Dns_Servers_Server& a, System_Dns_Servers_Server& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Dns_Servers_Server* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Dns_Servers_Server* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Dns_Servers_Server& from);
  void MergeFrom(const System_Dns_Servers_Server& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Dns_Servers_Server* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Dns_Servers_Server_Config Config;
  typedef System_Dns_Servers_Server_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Dns.Servers.Server.State state = 244058935 [(.yext.schemapath) = "/system/dns/servers/server/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 244058935;
  const ::openconfig::openconfig_system::System_Dns_Servers_Server_State& state() const;
  ::openconfig::openconfig_system::System_Dns_Servers_Server_State* release_state();
  ::openconfig::openconfig_system::System_Dns_Servers_Server_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Dns_Servers_Server_State* state);

  // .openconfig.openconfig_system.System.Dns.Servers.Server.Config config = 293688474 [(.yext.schemapath) = "/system/dns/servers/server/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 293688474;
  const ::openconfig::openconfig_system::System_Dns_Servers_Server_Config& config() const;
  ::openconfig::openconfig_system::System_Dns_Servers_Server_Config* release_config();
  ::openconfig::openconfig_system::System_Dns_Servers_Server_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Dns_Servers_Server_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Dns.Servers.Server)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Dns_Servers_Server_State* state_;
  ::openconfig::openconfig_system::System_Dns_Servers_Server_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Dns_Servers_ServerImpl();
};
// -------------------------------------------------------------------

class System_Dns_Servers_ServerKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Dns.Servers.ServerKey) */ {
 public:
  System_Dns_Servers_ServerKey();
  virtual ~System_Dns_Servers_ServerKey();

  System_Dns_Servers_ServerKey(const System_Dns_Servers_ServerKey& from);

  inline System_Dns_Servers_ServerKey& operator=(const System_Dns_Servers_ServerKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Dns_Servers_ServerKey(System_Dns_Servers_ServerKey&& from) noexcept
    : System_Dns_Servers_ServerKey() {
    *this = ::std::move(from);
  }

  inline System_Dns_Servers_ServerKey& operator=(System_Dns_Servers_ServerKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Dns_Servers_ServerKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Dns_Servers_ServerKey* internal_default_instance() {
    return reinterpret_cast<const System_Dns_Servers_ServerKey*>(
               &_System_Dns_Servers_ServerKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    83;

  void Swap(System_Dns_Servers_ServerKey* other);
  friend void swap(System_Dns_Servers_ServerKey& a, System_Dns_Servers_ServerKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Dns_Servers_ServerKey* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Dns_Servers_ServerKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Dns_Servers_ServerKey& from);
  void MergeFrom(const System_Dns_Servers_ServerKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Dns_Servers_ServerKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string address = 1 [(.yext.schemapath) = "/system/dns/servers/server/address"];
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  #if LANG_CXX11
  void set_address(::std::string&& value);
  #endif
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // .openconfig.openconfig_system.System.Dns.Servers.Server server = 2;
  bool has_server() const;
  void clear_server();
  static const int kServerFieldNumber = 2;
  const ::openconfig::openconfig_system::System_Dns_Servers_Server& server() const;
  ::openconfig::openconfig_system::System_Dns_Servers_Server* release_server();
  ::openconfig::openconfig_system::System_Dns_Servers_Server* mutable_server();
  void set_allocated_server(::openconfig::openconfig_system::System_Dns_Servers_Server* server);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Dns.Servers.ServerKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::openconfig::openconfig_system::System_Dns_Servers_Server* server_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Dns_Servers_ServerKeyImpl();
};
// -------------------------------------------------------------------

class System_Dns_Servers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Dns.Servers) */ {
 public:
  System_Dns_Servers();
  virtual ~System_Dns_Servers();

  System_Dns_Servers(const System_Dns_Servers& from);

  inline System_Dns_Servers& operator=(const System_Dns_Servers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Dns_Servers(System_Dns_Servers&& from) noexcept
    : System_Dns_Servers() {
    *this = ::std::move(from);
  }

  inline System_Dns_Servers& operator=(System_Dns_Servers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Dns_Servers& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Dns_Servers* internal_default_instance() {
    return reinterpret_cast<const System_Dns_Servers*>(
               &_System_Dns_Servers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    84;

  void Swap(System_Dns_Servers* other);
  friend void swap(System_Dns_Servers& a, System_Dns_Servers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Dns_Servers* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Dns_Servers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Dns_Servers& from);
  void MergeFrom(const System_Dns_Servers& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Dns_Servers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Dns_Servers_Server Server;
  typedef System_Dns_Servers_ServerKey ServerKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_system.System.Dns.Servers.ServerKey server = 234465781 [(.yext.schemapath) = "/system/dns/servers/server"];
  int server_size() const;
  void clear_server();
  static const int kServerFieldNumber = 234465781;
  const ::openconfig::openconfig_system::System_Dns_Servers_ServerKey& server(int index) const;
  ::openconfig::openconfig_system::System_Dns_Servers_ServerKey* mutable_server(int index);
  ::openconfig::openconfig_system::System_Dns_Servers_ServerKey* add_server();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Dns_Servers_ServerKey >*
      mutable_server();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Dns_Servers_ServerKey >&
      server() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Dns.Servers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Dns_Servers_ServerKey > server_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Dns_ServersImpl();
};
// -------------------------------------------------------------------

class System_Dns_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Dns.State) */ {
 public:
  System_Dns_State();
  virtual ~System_Dns_State();

  System_Dns_State(const System_Dns_State& from);

  inline System_Dns_State& operator=(const System_Dns_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Dns_State(System_Dns_State&& from) noexcept
    : System_Dns_State() {
    *this = ::std::move(from);
  }

  inline System_Dns_State& operator=(System_Dns_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Dns_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Dns_State* internal_default_instance() {
    return reinterpret_cast<const System_Dns_State*>(
               &_System_Dns_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    85;

  void Swap(System_Dns_State* other);
  friend void swap(System_Dns_State& a, System_Dns_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Dns_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Dns_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Dns_State& from);
  void MergeFrom(const System_Dns_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Dns_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ywrapper.StringValue search = 17042089 [(.yext.schemapath) = "/system/dns/state/search"];
  int search_size() const;
  void clear_search();
  static const int kSearchFieldNumber = 17042089;
  const ::ywrapper::StringValue& search(int index) const;
  ::ywrapper::StringValue* mutable_search(int index);
  ::ywrapper::StringValue* add_search();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
      mutable_search();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
      search() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Dns.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue > search_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Dns_StateImpl();
};
// -------------------------------------------------------------------

class System_Dns : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Dns) */ {
 public:
  System_Dns();
  virtual ~System_Dns();

  System_Dns(const System_Dns& from);

  inline System_Dns& operator=(const System_Dns& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Dns(System_Dns&& from) noexcept
    : System_Dns() {
    *this = ::std::move(from);
  }

  inline System_Dns& operator=(System_Dns&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Dns& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Dns* internal_default_instance() {
    return reinterpret_cast<const System_Dns*>(
               &_System_Dns_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    86;

  void Swap(System_Dns* other);
  friend void swap(System_Dns& a, System_Dns& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Dns* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Dns* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Dns& from);
  void MergeFrom(const System_Dns& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Dns* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Dns_Config Config;
  typedef System_Dns_HostEntries HostEntries;
  typedef System_Dns_Servers Servers;
  typedef System_Dns_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Dns.Servers servers = 44375401 [(.yext.schemapath) = "/system/dns/servers"];
  bool has_servers() const;
  void clear_servers();
  static const int kServersFieldNumber = 44375401;
  const ::openconfig::openconfig_system::System_Dns_Servers& servers() const;
  ::openconfig::openconfig_system::System_Dns_Servers* release_servers();
  ::openconfig::openconfig_system::System_Dns_Servers* mutable_servers();
  void set_allocated_servers(::openconfig::openconfig_system::System_Dns_Servers* servers);

  // .openconfig.openconfig_system.System.Dns.Config config = 260417829 [(.yext.schemapath) = "/system/dns/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 260417829;
  const ::openconfig::openconfig_system::System_Dns_Config& config() const;
  ::openconfig::openconfig_system::System_Dns_Config* release_config();
  ::openconfig::openconfig_system::System_Dns_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Dns_Config* config);

  // .openconfig.openconfig_system.System.Dns.HostEntries host_entries = 355029034 [(.yext.schemapath) = "/system/dns/host-entries"];
  bool has_host_entries() const;
  void clear_host_entries();
  static const int kHostEntriesFieldNumber = 355029034;
  const ::openconfig::openconfig_system::System_Dns_HostEntries& host_entries() const;
  ::openconfig::openconfig_system::System_Dns_HostEntries* release_host_entries();
  ::openconfig::openconfig_system::System_Dns_HostEntries* mutable_host_entries();
  void set_allocated_host_entries(::openconfig::openconfig_system::System_Dns_HostEntries* host_entries);

  // .openconfig.openconfig_system.System.Dns.State state = 425367962 [(.yext.schemapath) = "/system/dns/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 425367962;
  const ::openconfig::openconfig_system::System_Dns_State& state() const;
  ::openconfig::openconfig_system::System_Dns_State* release_state();
  ::openconfig::openconfig_system::System_Dns_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Dns_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Dns)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Dns_Servers* servers_;
  ::openconfig::openconfig_system::System_Dns_Config* config_;
  ::openconfig::openconfig_system::System_Dns_HostEntries* host_entries_;
  ::openconfig::openconfig_system::System_Dns_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_DnsImpl();
};
// -------------------------------------------------------------------

class System_Logging_Console_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Logging.Console.Config) */ {
 public:
  System_Logging_Console_Config();
  virtual ~System_Logging_Console_Config();

  System_Logging_Console_Config(const System_Logging_Console_Config& from);

  inline System_Logging_Console_Config& operator=(const System_Logging_Console_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Logging_Console_Config(System_Logging_Console_Config&& from) noexcept
    : System_Logging_Console_Config() {
    *this = ::std::move(from);
  }

  inline System_Logging_Console_Config& operator=(System_Logging_Console_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Logging_Console_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Logging_Console_Config* internal_default_instance() {
    return reinterpret_cast<const System_Logging_Console_Config*>(
               &_System_Logging_Console_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    87;

  void Swap(System_Logging_Console_Config* other);
  friend void swap(System_Logging_Console_Config& a, System_Logging_Console_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Logging_Console_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Logging_Console_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Logging_Console_Config& from);
  void MergeFrom(const System_Logging_Console_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Logging_Console_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Logging.Console.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Logging_Console_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Logging_Console_Selectors_Selector_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Logging.Console.Selectors.Selector.Config) */ {
 public:
  System_Logging_Console_Selectors_Selector_Config();
  virtual ~System_Logging_Console_Selectors_Selector_Config();

  System_Logging_Console_Selectors_Selector_Config(const System_Logging_Console_Selectors_Selector_Config& from);

  inline System_Logging_Console_Selectors_Selector_Config& operator=(const System_Logging_Console_Selectors_Selector_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Logging_Console_Selectors_Selector_Config(System_Logging_Console_Selectors_Selector_Config&& from) noexcept
    : System_Logging_Console_Selectors_Selector_Config() {
    *this = ::std::move(from);
  }

  inline System_Logging_Console_Selectors_Selector_Config& operator=(System_Logging_Console_Selectors_Selector_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Logging_Console_Selectors_Selector_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Logging_Console_Selectors_Selector_Config* internal_default_instance() {
    return reinterpret_cast<const System_Logging_Console_Selectors_Selector_Config*>(
               &_System_Logging_Console_Selectors_Selector_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    88;

  void Swap(System_Logging_Console_Selectors_Selector_Config* other);
  friend void swap(System_Logging_Console_Selectors_Selector_Config& a, System_Logging_Console_Selectors_Selector_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Logging_Console_Selectors_Selector_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Logging_Console_Selectors_Selector_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Logging_Console_Selectors_Selector_Config& from);
  void MergeFrom(const System_Logging_Console_Selectors_Selector_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Logging_Console_Selectors_Selector_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.enums.OpenconfigSystemLoggingSyslogSeverity severity = 205508476 [(.yext.schemapath) = "/system/logging/console/selectors/selector/config/severity"];
  void clear_severity();
  static const int kSeverityFieldNumber = 205508476;
  ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity severity() const;
  void set_severity(::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity value);

  // .openconfig.enums.OpenconfigSystemLoggingSYSLOGFACILITY facility = 390435594 [(.yext.schemapath) = "/system/logging/console/selectors/selector/config/facility"];
  void clear_facility();
  static const int kFacilityFieldNumber = 390435594;
  ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY facility() const;
  void set_facility(::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Logging.Console.Selectors.Selector.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int severity_;
  int facility_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Logging_Console_Selectors_Selector_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Logging_Console_Selectors_Selector_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Logging.Console.Selectors.Selector.State) */ {
 public:
  System_Logging_Console_Selectors_Selector_State();
  virtual ~System_Logging_Console_Selectors_Selector_State();

  System_Logging_Console_Selectors_Selector_State(const System_Logging_Console_Selectors_Selector_State& from);

  inline System_Logging_Console_Selectors_Selector_State& operator=(const System_Logging_Console_Selectors_Selector_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Logging_Console_Selectors_Selector_State(System_Logging_Console_Selectors_Selector_State&& from) noexcept
    : System_Logging_Console_Selectors_Selector_State() {
    *this = ::std::move(from);
  }

  inline System_Logging_Console_Selectors_Selector_State& operator=(System_Logging_Console_Selectors_Selector_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Logging_Console_Selectors_Selector_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Logging_Console_Selectors_Selector_State* internal_default_instance() {
    return reinterpret_cast<const System_Logging_Console_Selectors_Selector_State*>(
               &_System_Logging_Console_Selectors_Selector_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    89;

  void Swap(System_Logging_Console_Selectors_Selector_State* other);
  friend void swap(System_Logging_Console_Selectors_Selector_State& a, System_Logging_Console_Selectors_Selector_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Logging_Console_Selectors_Selector_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Logging_Console_Selectors_Selector_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Logging_Console_Selectors_Selector_State& from);
  void MergeFrom(const System_Logging_Console_Selectors_Selector_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Logging_Console_Selectors_Selector_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.enums.OpenconfigSystemLoggingSYSLOGFACILITY facility = 271468881 [(.yext.schemapath) = "/system/logging/console/selectors/selector/state/facility"];
  void clear_facility();
  static const int kFacilityFieldNumber = 271468881;
  ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY facility() const;
  void set_facility(::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY value);

  // .openconfig.enums.OpenconfigSystemLoggingSyslogSeverity severity = 427446243 [(.yext.schemapath) = "/system/logging/console/selectors/selector/state/severity"];
  void clear_severity();
  static const int kSeverityFieldNumber = 427446243;
  ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity severity() const;
  void set_severity(::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Logging.Console.Selectors.Selector.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int facility_;
  int severity_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Logging_Console_Selectors_Selector_StateImpl();
};
// -------------------------------------------------------------------

class System_Logging_Console_Selectors_Selector : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Logging.Console.Selectors.Selector) */ {
 public:
  System_Logging_Console_Selectors_Selector();
  virtual ~System_Logging_Console_Selectors_Selector();

  System_Logging_Console_Selectors_Selector(const System_Logging_Console_Selectors_Selector& from);

  inline System_Logging_Console_Selectors_Selector& operator=(const System_Logging_Console_Selectors_Selector& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Logging_Console_Selectors_Selector(System_Logging_Console_Selectors_Selector&& from) noexcept
    : System_Logging_Console_Selectors_Selector() {
    *this = ::std::move(from);
  }

  inline System_Logging_Console_Selectors_Selector& operator=(System_Logging_Console_Selectors_Selector&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Logging_Console_Selectors_Selector& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Logging_Console_Selectors_Selector* internal_default_instance() {
    return reinterpret_cast<const System_Logging_Console_Selectors_Selector*>(
               &_System_Logging_Console_Selectors_Selector_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    90;

  void Swap(System_Logging_Console_Selectors_Selector* other);
  friend void swap(System_Logging_Console_Selectors_Selector& a, System_Logging_Console_Selectors_Selector& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Logging_Console_Selectors_Selector* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Logging_Console_Selectors_Selector* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Logging_Console_Selectors_Selector& from);
  void MergeFrom(const System_Logging_Console_Selectors_Selector& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Logging_Console_Selectors_Selector* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Logging_Console_Selectors_Selector_Config Config;
  typedef System_Logging_Console_Selectors_Selector_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Logging.Console.Selectors.Selector.Config config = 378729946 [(.yext.schemapath) = "/system/logging/console/selectors/selector/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 378729946;
  const ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector_Config& config() const;
  ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector_Config* release_config();
  ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector_Config* config);

  // .openconfig.openconfig_system.System.Logging.Console.Selectors.Selector.State state = 531894391 [(.yext.schemapath) = "/system/logging/console/selectors/selector/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 531894391;
  const ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector_State& state() const;
  ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector_State* release_state();
  ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Logging.Console.Selectors.Selector)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector_Config* config_;
  ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Logging_Console_Selectors_SelectorImpl();
};
// -------------------------------------------------------------------

class System_Logging_Console_Selectors_SelectorKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Logging.Console.Selectors.SelectorKey) */ {
 public:
  System_Logging_Console_Selectors_SelectorKey();
  virtual ~System_Logging_Console_Selectors_SelectorKey();

  System_Logging_Console_Selectors_SelectorKey(const System_Logging_Console_Selectors_SelectorKey& from);

  inline System_Logging_Console_Selectors_SelectorKey& operator=(const System_Logging_Console_Selectors_SelectorKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Logging_Console_Selectors_SelectorKey(System_Logging_Console_Selectors_SelectorKey&& from) noexcept
    : System_Logging_Console_Selectors_SelectorKey() {
    *this = ::std::move(from);
  }

  inline System_Logging_Console_Selectors_SelectorKey& operator=(System_Logging_Console_Selectors_SelectorKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Logging_Console_Selectors_SelectorKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Logging_Console_Selectors_SelectorKey* internal_default_instance() {
    return reinterpret_cast<const System_Logging_Console_Selectors_SelectorKey*>(
               &_System_Logging_Console_Selectors_SelectorKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    91;

  void Swap(System_Logging_Console_Selectors_SelectorKey* other);
  friend void swap(System_Logging_Console_Selectors_SelectorKey& a, System_Logging_Console_Selectors_SelectorKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Logging_Console_Selectors_SelectorKey* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Logging_Console_Selectors_SelectorKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Logging_Console_Selectors_SelectorKey& from);
  void MergeFrom(const System_Logging_Console_Selectors_SelectorKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Logging_Console_Selectors_SelectorKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Logging.Console.Selectors.Selector selector = 3;
  bool has_selector() const;
  void clear_selector();
  static const int kSelectorFieldNumber = 3;
  const ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector& selector() const;
  ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector* release_selector();
  ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector* mutable_selector();
  void set_allocated_selector(::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector* selector);

  // .openconfig.enums.OpenconfigSystemLoggingSYSLOGFACILITY facility = 1 [(.yext.schemapath) = "/system/logging/console/selectors/selector/facility"];
  void clear_facility();
  static const int kFacilityFieldNumber = 1;
  ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY facility() const;
  void set_facility(::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY value);

  // .openconfig.enums.OpenconfigSystemLoggingSyslogSeverity severity = 2 [(.yext.schemapath) = "/system/logging/console/selectors/selector/severity"];
  void clear_severity();
  static const int kSeverityFieldNumber = 2;
  ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity severity() const;
  void set_severity(::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Logging.Console.Selectors.SelectorKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector* selector_;
  int facility_;
  int severity_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Logging_Console_Selectors_SelectorKeyImpl();
};
// -------------------------------------------------------------------

class System_Logging_Console_Selectors : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Logging.Console.Selectors) */ {
 public:
  System_Logging_Console_Selectors();
  virtual ~System_Logging_Console_Selectors();

  System_Logging_Console_Selectors(const System_Logging_Console_Selectors& from);

  inline System_Logging_Console_Selectors& operator=(const System_Logging_Console_Selectors& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Logging_Console_Selectors(System_Logging_Console_Selectors&& from) noexcept
    : System_Logging_Console_Selectors() {
    *this = ::std::move(from);
  }

  inline System_Logging_Console_Selectors& operator=(System_Logging_Console_Selectors&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Logging_Console_Selectors& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Logging_Console_Selectors* internal_default_instance() {
    return reinterpret_cast<const System_Logging_Console_Selectors*>(
               &_System_Logging_Console_Selectors_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    92;

  void Swap(System_Logging_Console_Selectors* other);
  friend void swap(System_Logging_Console_Selectors& a, System_Logging_Console_Selectors& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Logging_Console_Selectors* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Logging_Console_Selectors* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Logging_Console_Selectors& from);
  void MergeFrom(const System_Logging_Console_Selectors& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Logging_Console_Selectors* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Logging_Console_Selectors_Selector Selector;
  typedef System_Logging_Console_Selectors_SelectorKey SelectorKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_system.System.Logging.Console.Selectors.SelectorKey selector = 442447029 [(.yext.schemapath) = "/system/logging/console/selectors/selector"];
  int selector_size() const;
  void clear_selector();
  static const int kSelectorFieldNumber = 442447029;
  const ::openconfig::openconfig_system::System_Logging_Console_Selectors_SelectorKey& selector(int index) const;
  ::openconfig::openconfig_system::System_Logging_Console_Selectors_SelectorKey* mutable_selector(int index);
  ::openconfig::openconfig_system::System_Logging_Console_Selectors_SelectorKey* add_selector();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Logging_Console_Selectors_SelectorKey >*
      mutable_selector();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Logging_Console_Selectors_SelectorKey >&
      selector() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Logging.Console.Selectors)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Logging_Console_Selectors_SelectorKey > selector_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Logging_Console_SelectorsImpl();
};
// -------------------------------------------------------------------

class System_Logging_Console_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Logging.Console.State) */ {
 public:
  System_Logging_Console_State();
  virtual ~System_Logging_Console_State();

  System_Logging_Console_State(const System_Logging_Console_State& from);

  inline System_Logging_Console_State& operator=(const System_Logging_Console_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Logging_Console_State(System_Logging_Console_State&& from) noexcept
    : System_Logging_Console_State() {
    *this = ::std::move(from);
  }

  inline System_Logging_Console_State& operator=(System_Logging_Console_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Logging_Console_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Logging_Console_State* internal_default_instance() {
    return reinterpret_cast<const System_Logging_Console_State*>(
               &_System_Logging_Console_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    93;

  void Swap(System_Logging_Console_State* other);
  friend void swap(System_Logging_Console_State& a, System_Logging_Console_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Logging_Console_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Logging_Console_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Logging_Console_State& from);
  void MergeFrom(const System_Logging_Console_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Logging_Console_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Logging.Console.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Logging_Console_StateImpl();
};
// -------------------------------------------------------------------

class System_Logging_Console : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Logging.Console) */ {
 public:
  System_Logging_Console();
  virtual ~System_Logging_Console();

  System_Logging_Console(const System_Logging_Console& from);

  inline System_Logging_Console& operator=(const System_Logging_Console& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Logging_Console(System_Logging_Console&& from) noexcept
    : System_Logging_Console() {
    *this = ::std::move(from);
  }

  inline System_Logging_Console& operator=(System_Logging_Console&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Logging_Console& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Logging_Console* internal_default_instance() {
    return reinterpret_cast<const System_Logging_Console*>(
               &_System_Logging_Console_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    94;

  void Swap(System_Logging_Console* other);
  friend void swap(System_Logging_Console& a, System_Logging_Console& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Logging_Console* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Logging_Console* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Logging_Console& from);
  void MergeFrom(const System_Logging_Console& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Logging_Console* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Logging_Console_Config Config;
  typedef System_Logging_Console_Selectors Selectors;
  typedef System_Logging_Console_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Logging.Console.State state = 135296190 [(.yext.schemapath) = "/system/logging/console/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 135296190;
  const ::openconfig::openconfig_system::System_Logging_Console_State& state() const;
  ::openconfig::openconfig_system::System_Logging_Console_State* release_state();
  ::openconfig::openconfig_system::System_Logging_Console_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Logging_Console_State* state);

  // .openconfig.openconfig_system.System.Logging.Console.Config config = 368391401 [(.yext.schemapath) = "/system/logging/console/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 368391401;
  const ::openconfig::openconfig_system::System_Logging_Console_Config& config() const;
  ::openconfig::openconfig_system::System_Logging_Console_Config* release_config();
  ::openconfig::openconfig_system::System_Logging_Console_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Logging_Console_Config* config);

  // .openconfig.openconfig_system.System.Logging.Console.Selectors selectors = 518795003 [(.yext.schemapath) = "/system/logging/console/selectors"];
  bool has_selectors() const;
  void clear_selectors();
  static const int kSelectorsFieldNumber = 518795003;
  const ::openconfig::openconfig_system::System_Logging_Console_Selectors& selectors() const;
  ::openconfig::openconfig_system::System_Logging_Console_Selectors* release_selectors();
  ::openconfig::openconfig_system::System_Logging_Console_Selectors* mutable_selectors();
  void set_allocated_selectors(::openconfig::openconfig_system::System_Logging_Console_Selectors* selectors);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Logging.Console)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Logging_Console_State* state_;
  ::openconfig::openconfig_system::System_Logging_Console_Config* config_;
  ::openconfig::openconfig_system::System_Logging_Console_Selectors* selectors_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Logging_ConsoleImpl();
};
// -------------------------------------------------------------------

class System_Logging_RemoteServers_RemoteServer_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Config) */ {
 public:
  System_Logging_RemoteServers_RemoteServer_Config();
  virtual ~System_Logging_RemoteServers_RemoteServer_Config();

  System_Logging_RemoteServers_RemoteServer_Config(const System_Logging_RemoteServers_RemoteServer_Config& from);

  inline System_Logging_RemoteServers_RemoteServer_Config& operator=(const System_Logging_RemoteServers_RemoteServer_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Logging_RemoteServers_RemoteServer_Config(System_Logging_RemoteServers_RemoteServer_Config&& from) noexcept
    : System_Logging_RemoteServers_RemoteServer_Config() {
    *this = ::std::move(from);
  }

  inline System_Logging_RemoteServers_RemoteServer_Config& operator=(System_Logging_RemoteServers_RemoteServer_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Logging_RemoteServers_RemoteServer_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Logging_RemoteServers_RemoteServer_Config* internal_default_instance() {
    return reinterpret_cast<const System_Logging_RemoteServers_RemoteServer_Config*>(
               &_System_Logging_RemoteServers_RemoteServer_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    95;

  void Swap(System_Logging_RemoteServers_RemoteServer_Config* other);
  friend void swap(System_Logging_RemoteServers_RemoteServer_Config& a, System_Logging_RemoteServers_RemoteServer_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Logging_RemoteServers_RemoteServer_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Logging_RemoteServers_RemoteServer_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Logging_RemoteServers_RemoteServer_Config& from);
  void MergeFrom(const System_Logging_RemoteServers_RemoteServer_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Logging_RemoteServers_RemoteServer_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue source_address = 4922255 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/config/source-address"];
  bool has_source_address() const;
  void clear_source_address();
  static const int kSourceAddressFieldNumber = 4922255;
  const ::ywrapper::StringValue& source_address() const;
  ::ywrapper::StringValue* release_source_address();
  ::ywrapper::StringValue* mutable_source_address();
  void set_allocated_source_address(::ywrapper::StringValue* source_address);

  // .ywrapper.UintValue remote_port = 22145415 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/config/remote-port"];
  bool has_remote_port() const;
  void clear_remote_port();
  static const int kRemotePortFieldNumber = 22145415;
  const ::ywrapper::UintValue& remote_port() const;
  ::ywrapper::UintValue* release_remote_port();
  ::ywrapper::UintValue* mutable_remote_port();
  void set_allocated_remote_port(::ywrapper::UintValue* remote_port);

  // .ywrapper.StringValue host = 525171333 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/config/host"];
  bool has_host() const;
  void clear_host();
  static const int kHostFieldNumber = 525171333;
  const ::ywrapper::StringValue& host() const;
  ::ywrapper::StringValue* release_host();
  ::ywrapper::StringValue* mutable_host();
  void set_allocated_host(::ywrapper::StringValue* host);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* source_address_;
  ::ywrapper::UintValue* remote_port_;
  ::ywrapper::StringValue* host_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Logging_RemoteServers_RemoteServer_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.Config) */ {
 public:
  System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config();
  virtual ~System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config();

  System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config(const System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config& from);

  inline System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config& operator=(const System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config(System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config&& from) noexcept
    : System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config() {
    *this = ::std::move(from);
  }

  inline System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config& operator=(System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* internal_default_instance() {
    return reinterpret_cast<const System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config*>(
               &_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    96;

  void Swap(System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* other);
  friend void swap(System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config& a, System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config& from);
  void MergeFrom(const System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.enums.OpenconfigSystemLoggingSYSLOGFACILITY facility = 164191643 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/selectors/selector/config/facility"];
  void clear_facility();
  static const int kFacilityFieldNumber = 164191643;
  ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY facility() const;
  void set_facility(::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY value);

  // .openconfig.enums.OpenconfigSystemLoggingSyslogSeverity severity = 247618577 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/selectors/selector/config/severity"];
  void clear_severity();
  static const int kSeverityFieldNumber = 247618577;
  ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity severity() const;
  void set_severity(::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int facility_;
  int severity_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Logging_RemoteServers_RemoteServer_Selectors_Selector_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.State) */ {
 public:
  System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State();
  virtual ~System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State();

  System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State(const System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State& from);

  inline System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State& operator=(const System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State(System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State&& from) noexcept
    : System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State() {
    *this = ::std::move(from);
  }

  inline System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State& operator=(System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* internal_default_instance() {
    return reinterpret_cast<const System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State*>(
               &_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    97;

  void Swap(System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* other);
  friend void swap(System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State& a, System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State& from);
  void MergeFrom(const System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.enums.OpenconfigSystemLoggingSYSLOGFACILITY facility = 16806630 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/selectors/selector/state/facility"];
  void clear_facility();
  static const int kFacilityFieldNumber = 16806630;
  ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY facility() const;
  void set_facility(::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY value);

  // .openconfig.enums.OpenconfigSystemLoggingSyslogSeverity severity = 317876144 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/selectors/selector/state/severity"];
  void clear_severity();
  static const int kSeverityFieldNumber = 317876144;
  ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity severity() const;
  void set_severity(::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  int facility_;
  int severity_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Logging_RemoteServers_RemoteServer_Selectors_Selector_StateImpl();
};
// -------------------------------------------------------------------

class System_Logging_RemoteServers_RemoteServer_Selectors_Selector : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector) */ {
 public:
  System_Logging_RemoteServers_RemoteServer_Selectors_Selector();
  virtual ~System_Logging_RemoteServers_RemoteServer_Selectors_Selector();

  System_Logging_RemoteServers_RemoteServer_Selectors_Selector(const System_Logging_RemoteServers_RemoteServer_Selectors_Selector& from);

  inline System_Logging_RemoteServers_RemoteServer_Selectors_Selector& operator=(const System_Logging_RemoteServers_RemoteServer_Selectors_Selector& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Logging_RemoteServers_RemoteServer_Selectors_Selector(System_Logging_RemoteServers_RemoteServer_Selectors_Selector&& from) noexcept
    : System_Logging_RemoteServers_RemoteServer_Selectors_Selector() {
    *this = ::std::move(from);
  }

  inline System_Logging_RemoteServers_RemoteServer_Selectors_Selector& operator=(System_Logging_RemoteServers_RemoteServer_Selectors_Selector&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Logging_RemoteServers_RemoteServer_Selectors_Selector& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Logging_RemoteServers_RemoteServer_Selectors_Selector* internal_default_instance() {
    return reinterpret_cast<const System_Logging_RemoteServers_RemoteServer_Selectors_Selector*>(
               &_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    98;

  void Swap(System_Logging_RemoteServers_RemoteServer_Selectors_Selector* other);
  friend void swap(System_Logging_RemoteServers_RemoteServer_Selectors_Selector& a, System_Logging_RemoteServers_RemoteServer_Selectors_Selector& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Logging_RemoteServers_RemoteServer_Selectors_Selector* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Logging_RemoteServers_RemoteServer_Selectors_Selector* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Logging_RemoteServers_RemoteServer_Selectors_Selector& from);
  void MergeFrom(const System_Logging_RemoteServers_RemoteServer_Selectors_Selector& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Logging_RemoteServers_RemoteServer_Selectors_Selector* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config Config;
  typedef System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.Config config = 254282233 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/selectors/selector/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 254282233;
  const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config& config() const;
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* release_config();
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* config);

  // .openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.State state = 311283534 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/selectors/selector/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 311283534;
  const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State& state() const;
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* release_state();
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* config_;
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Logging_RemoteServers_RemoteServer_Selectors_SelectorImpl();
};
// -------------------------------------------------------------------

class System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.SelectorKey) */ {
 public:
  System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey();
  virtual ~System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey();

  System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey(const System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey& from);

  inline System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey& operator=(const System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey(System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey&& from) noexcept
    : System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey() {
    *this = ::std::move(from);
  }

  inline System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey& operator=(System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey* internal_default_instance() {
    return reinterpret_cast<const System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey*>(
               &_System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    99;

  void Swap(System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey* other);
  friend void swap(System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey& a, System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey& from);
  void MergeFrom(const System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector selector = 3;
  bool has_selector() const;
  void clear_selector();
  static const int kSelectorFieldNumber = 3;
  const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector& selector() const;
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector* release_selector();
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector* mutable_selector();
  void set_allocated_selector(::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector* selector);

  // .openconfig.enums.OpenconfigSystemLoggingSYSLOGFACILITY facility = 1 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/selectors/selector/facility"];
  void clear_facility();
  static const int kFacilityFieldNumber = 1;
  ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY facility() const;
  void set_facility(::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY value);

  // .openconfig.enums.OpenconfigSystemLoggingSyslogSeverity severity = 2 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/selectors/selector/severity"];
  void clear_severity();
  static const int kSeverityFieldNumber = 2;
  ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity severity() const;
  void set_severity(::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.SelectorKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector* selector_;
  int facility_;
  int severity_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Logging_RemoteServers_RemoteServer_Selectors_SelectorKeyImpl();
};
// -------------------------------------------------------------------

class System_Logging_RemoteServers_RemoteServer_Selectors : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors) */ {
 public:
  System_Logging_RemoteServers_RemoteServer_Selectors();
  virtual ~System_Logging_RemoteServers_RemoteServer_Selectors();

  System_Logging_RemoteServers_RemoteServer_Selectors(const System_Logging_RemoteServers_RemoteServer_Selectors& from);

  inline System_Logging_RemoteServers_RemoteServer_Selectors& operator=(const System_Logging_RemoteServers_RemoteServer_Selectors& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Logging_RemoteServers_RemoteServer_Selectors(System_Logging_RemoteServers_RemoteServer_Selectors&& from) noexcept
    : System_Logging_RemoteServers_RemoteServer_Selectors() {
    *this = ::std::move(from);
  }

  inline System_Logging_RemoteServers_RemoteServer_Selectors& operator=(System_Logging_RemoteServers_RemoteServer_Selectors&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Logging_RemoteServers_RemoteServer_Selectors& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Logging_RemoteServers_RemoteServer_Selectors* internal_default_instance() {
    return reinterpret_cast<const System_Logging_RemoteServers_RemoteServer_Selectors*>(
               &_System_Logging_RemoteServers_RemoteServer_Selectors_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    100;

  void Swap(System_Logging_RemoteServers_RemoteServer_Selectors* other);
  friend void swap(System_Logging_RemoteServers_RemoteServer_Selectors& a, System_Logging_RemoteServers_RemoteServer_Selectors& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Logging_RemoteServers_RemoteServer_Selectors* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Logging_RemoteServers_RemoteServer_Selectors* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Logging_RemoteServers_RemoteServer_Selectors& from);
  void MergeFrom(const System_Logging_RemoteServers_RemoteServer_Selectors& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Logging_RemoteServers_RemoteServer_Selectors* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Logging_RemoteServers_RemoteServer_Selectors_Selector Selector;
  typedef System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey SelectorKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.SelectorKey selector = 300442996 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/selectors/selector"];
  int selector_size() const;
  void clear_selector();
  static const int kSelectorFieldNumber = 300442996;
  const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey& selector(int index) const;
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey* mutable_selector(int index);
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey* add_selector();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey >*
      mutable_selector();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey >&
      selector() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey > selector_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Logging_RemoteServers_RemoteServer_SelectorsImpl();
};
// -------------------------------------------------------------------

class System_Logging_RemoteServers_RemoteServer_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.State) */ {
 public:
  System_Logging_RemoteServers_RemoteServer_State();
  virtual ~System_Logging_RemoteServers_RemoteServer_State();

  System_Logging_RemoteServers_RemoteServer_State(const System_Logging_RemoteServers_RemoteServer_State& from);

  inline System_Logging_RemoteServers_RemoteServer_State& operator=(const System_Logging_RemoteServers_RemoteServer_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Logging_RemoteServers_RemoteServer_State(System_Logging_RemoteServers_RemoteServer_State&& from) noexcept
    : System_Logging_RemoteServers_RemoteServer_State() {
    *this = ::std::move(from);
  }

  inline System_Logging_RemoteServers_RemoteServer_State& operator=(System_Logging_RemoteServers_RemoteServer_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Logging_RemoteServers_RemoteServer_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Logging_RemoteServers_RemoteServer_State* internal_default_instance() {
    return reinterpret_cast<const System_Logging_RemoteServers_RemoteServer_State*>(
               &_System_Logging_RemoteServers_RemoteServer_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    101;

  void Swap(System_Logging_RemoteServers_RemoteServer_State* other);
  friend void swap(System_Logging_RemoteServers_RemoteServer_State& a, System_Logging_RemoteServers_RemoteServer_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Logging_RemoteServers_RemoteServer_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Logging_RemoteServers_RemoteServer_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Logging_RemoteServers_RemoteServer_State& from);
  void MergeFrom(const System_Logging_RemoteServers_RemoteServer_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Logging_RemoteServers_RemoteServer_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue source_address = 141503900 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/state/source-address"];
  bool has_source_address() const;
  void clear_source_address();
  static const int kSourceAddressFieldNumber = 141503900;
  const ::ywrapper::StringValue& source_address() const;
  ::ywrapper::StringValue* release_source_address();
  ::ywrapper::StringValue* mutable_source_address();
  void set_allocated_source_address(::ywrapper::StringValue* source_address);

  // .ywrapper.UintValue remote_port = 319783978 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/state/remote-port"];
  bool has_remote_port() const;
  void clear_remote_port();
  static const int kRemotePortFieldNumber = 319783978;
  const ::ywrapper::UintValue& remote_port() const;
  ::ywrapper::UintValue* release_remote_port();
  ::ywrapper::UintValue* mutable_remote_port();
  void set_allocated_remote_port(::ywrapper::UintValue* remote_port);

  // .ywrapper.StringValue host = 365944418 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/state/host"];
  bool has_host() const;
  void clear_host();
  static const int kHostFieldNumber = 365944418;
  const ::ywrapper::StringValue& host() const;
  ::ywrapper::StringValue* release_host();
  ::ywrapper::StringValue* mutable_host();
  void set_allocated_host(::ywrapper::StringValue* host);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* source_address_;
  ::ywrapper::UintValue* remote_port_;
  ::ywrapper::StringValue* host_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Logging_RemoteServers_RemoteServer_StateImpl();
};
// -------------------------------------------------------------------

class System_Logging_RemoteServers_RemoteServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer) */ {
 public:
  System_Logging_RemoteServers_RemoteServer();
  virtual ~System_Logging_RemoteServers_RemoteServer();

  System_Logging_RemoteServers_RemoteServer(const System_Logging_RemoteServers_RemoteServer& from);

  inline System_Logging_RemoteServers_RemoteServer& operator=(const System_Logging_RemoteServers_RemoteServer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Logging_RemoteServers_RemoteServer(System_Logging_RemoteServers_RemoteServer&& from) noexcept
    : System_Logging_RemoteServers_RemoteServer() {
    *this = ::std::move(from);
  }

  inline System_Logging_RemoteServers_RemoteServer& operator=(System_Logging_RemoteServers_RemoteServer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Logging_RemoteServers_RemoteServer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Logging_RemoteServers_RemoteServer* internal_default_instance() {
    return reinterpret_cast<const System_Logging_RemoteServers_RemoteServer*>(
               &_System_Logging_RemoteServers_RemoteServer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    102;

  void Swap(System_Logging_RemoteServers_RemoteServer* other);
  friend void swap(System_Logging_RemoteServers_RemoteServer& a, System_Logging_RemoteServers_RemoteServer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Logging_RemoteServers_RemoteServer* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Logging_RemoteServers_RemoteServer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Logging_RemoteServers_RemoteServer& from);
  void MergeFrom(const System_Logging_RemoteServers_RemoteServer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Logging_RemoteServers_RemoteServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Logging_RemoteServers_RemoteServer_Config Config;
  typedef System_Logging_RemoteServers_RemoteServer_Selectors Selectors;
  typedef System_Logging_RemoteServers_RemoteServer_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Config config = 173866728 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 173866728;
  const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Config& config() const;
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Config* release_config();
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Config* config);

  // .openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.State state = 268770049 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 268770049;
  const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_State& state() const;
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_State* release_state();
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_State* state);

  // .openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors selectors = 472291544 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/selectors"];
  bool has_selectors() const;
  void clear_selectors();
  static const int kSelectorsFieldNumber = 472291544;
  const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors& selectors() const;
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors* release_selectors();
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors* mutable_selectors();
  void set_allocated_selectors(::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors* selectors);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Config* config_;
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_State* state_;
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors* selectors_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Logging_RemoteServers_RemoteServerImpl();
};
// -------------------------------------------------------------------

class System_Logging_RemoteServers_RemoteServerKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServerKey) */ {
 public:
  System_Logging_RemoteServers_RemoteServerKey();
  virtual ~System_Logging_RemoteServers_RemoteServerKey();

  System_Logging_RemoteServers_RemoteServerKey(const System_Logging_RemoteServers_RemoteServerKey& from);

  inline System_Logging_RemoteServers_RemoteServerKey& operator=(const System_Logging_RemoteServers_RemoteServerKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Logging_RemoteServers_RemoteServerKey(System_Logging_RemoteServers_RemoteServerKey&& from) noexcept
    : System_Logging_RemoteServers_RemoteServerKey() {
    *this = ::std::move(from);
  }

  inline System_Logging_RemoteServers_RemoteServerKey& operator=(System_Logging_RemoteServers_RemoteServerKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Logging_RemoteServers_RemoteServerKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Logging_RemoteServers_RemoteServerKey* internal_default_instance() {
    return reinterpret_cast<const System_Logging_RemoteServers_RemoteServerKey*>(
               &_System_Logging_RemoteServers_RemoteServerKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    103;

  void Swap(System_Logging_RemoteServers_RemoteServerKey* other);
  friend void swap(System_Logging_RemoteServers_RemoteServerKey& a, System_Logging_RemoteServers_RemoteServerKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Logging_RemoteServers_RemoteServerKey* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Logging_RemoteServers_RemoteServerKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Logging_RemoteServers_RemoteServerKey& from);
  void MergeFrom(const System_Logging_RemoteServers_RemoteServerKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Logging_RemoteServers_RemoteServerKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string host = 1 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/host"];
  void clear_host();
  static const int kHostFieldNumber = 1;
  const ::std::string& host() const;
  void set_host(const ::std::string& value);
  #if LANG_CXX11
  void set_host(::std::string&& value);
  #endif
  void set_host(const char* value);
  void set_host(const char* value, size_t size);
  ::std::string* mutable_host();
  ::std::string* release_host();
  void set_allocated_host(::std::string* host);

  // .openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer remote_server = 2;
  bool has_remote_server() const;
  void clear_remote_server();
  static const int kRemoteServerFieldNumber = 2;
  const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer& remote_server() const;
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer* release_remote_server();
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer* mutable_remote_server();
  void set_allocated_remote_server(::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer* remote_server);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServerKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr host_;
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer* remote_server_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Logging_RemoteServers_RemoteServerKeyImpl();
};
// -------------------------------------------------------------------

class System_Logging_RemoteServers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Logging.RemoteServers) */ {
 public:
  System_Logging_RemoteServers();
  virtual ~System_Logging_RemoteServers();

  System_Logging_RemoteServers(const System_Logging_RemoteServers& from);

  inline System_Logging_RemoteServers& operator=(const System_Logging_RemoteServers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Logging_RemoteServers(System_Logging_RemoteServers&& from) noexcept
    : System_Logging_RemoteServers() {
    *this = ::std::move(from);
  }

  inline System_Logging_RemoteServers& operator=(System_Logging_RemoteServers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Logging_RemoteServers& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Logging_RemoteServers* internal_default_instance() {
    return reinterpret_cast<const System_Logging_RemoteServers*>(
               &_System_Logging_RemoteServers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    104;

  void Swap(System_Logging_RemoteServers* other);
  friend void swap(System_Logging_RemoteServers& a, System_Logging_RemoteServers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Logging_RemoteServers* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Logging_RemoteServers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Logging_RemoteServers& from);
  void MergeFrom(const System_Logging_RemoteServers& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Logging_RemoteServers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Logging_RemoteServers_RemoteServer RemoteServer;
  typedef System_Logging_RemoteServers_RemoteServerKey RemoteServerKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServerKey remote_server = 157599479 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server"];
  int remote_server_size() const;
  void clear_remote_server();
  static const int kRemoteServerFieldNumber = 157599479;
  const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServerKey& remote_server(int index) const;
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServerKey* mutable_remote_server(int index);
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServerKey* add_remote_server();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServerKey >*
      mutable_remote_server();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServerKey >&
      remote_server() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Logging.RemoteServers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServerKey > remote_server_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Logging_RemoteServersImpl();
};
// -------------------------------------------------------------------

class System_Logging : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Logging) */ {
 public:
  System_Logging();
  virtual ~System_Logging();

  System_Logging(const System_Logging& from);

  inline System_Logging& operator=(const System_Logging& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Logging(System_Logging&& from) noexcept
    : System_Logging() {
    *this = ::std::move(from);
  }

  inline System_Logging& operator=(System_Logging&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Logging& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Logging* internal_default_instance() {
    return reinterpret_cast<const System_Logging*>(
               &_System_Logging_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    105;

  void Swap(System_Logging* other);
  friend void swap(System_Logging& a, System_Logging& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Logging* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Logging* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Logging& from);
  void MergeFrom(const System_Logging& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Logging* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Logging_Console Console;
  typedef System_Logging_RemoteServers RemoteServers;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Logging.Console console = 197921220 [(.yext.schemapath) = "/system/logging/console"];
  bool has_console() const;
  void clear_console();
  static const int kConsoleFieldNumber = 197921220;
  const ::openconfig::openconfig_system::System_Logging_Console& console() const;
  ::openconfig::openconfig_system::System_Logging_Console* release_console();
  ::openconfig::openconfig_system::System_Logging_Console* mutable_console();
  void set_allocated_console(::openconfig::openconfig_system::System_Logging_Console* console);

  // .openconfig.openconfig_system.System.Logging.RemoteServers remote_servers = 224027600 [(.yext.schemapath) = "/system/logging/remote-servers"];
  bool has_remote_servers() const;
  void clear_remote_servers();
  static const int kRemoteServersFieldNumber = 224027600;
  const ::openconfig::openconfig_system::System_Logging_RemoteServers& remote_servers() const;
  ::openconfig::openconfig_system::System_Logging_RemoteServers* release_remote_servers();
  ::openconfig::openconfig_system::System_Logging_RemoteServers* mutable_remote_servers();
  void set_allocated_remote_servers(::openconfig::openconfig_system::System_Logging_RemoteServers* remote_servers);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Logging)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Logging_Console* console_;
  ::openconfig::openconfig_system::System_Logging_RemoteServers* remote_servers_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_LoggingImpl();
};
// -------------------------------------------------------------------

class System_Memory_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Memory.Config) */ {
 public:
  System_Memory_Config();
  virtual ~System_Memory_Config();

  System_Memory_Config(const System_Memory_Config& from);

  inline System_Memory_Config& operator=(const System_Memory_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Memory_Config(System_Memory_Config&& from) noexcept
    : System_Memory_Config() {
    *this = ::std::move(from);
  }

  inline System_Memory_Config& operator=(System_Memory_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Memory_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Memory_Config* internal_default_instance() {
    return reinterpret_cast<const System_Memory_Config*>(
               &_System_Memory_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    106;

  void Swap(System_Memory_Config* other);
  friend void swap(System_Memory_Config& a, System_Memory_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Memory_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Memory_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Memory_Config& from);
  void MergeFrom(const System_Memory_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Memory_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Memory.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Memory_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Memory_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Memory.State) */ {
 public:
  System_Memory_State();
  virtual ~System_Memory_State();

  System_Memory_State(const System_Memory_State& from);

  inline System_Memory_State& operator=(const System_Memory_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Memory_State(System_Memory_State&& from) noexcept
    : System_Memory_State() {
    *this = ::std::move(from);
  }

  inline System_Memory_State& operator=(System_Memory_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Memory_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Memory_State* internal_default_instance() {
    return reinterpret_cast<const System_Memory_State*>(
               &_System_Memory_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    107;

  void Swap(System_Memory_State* other);
  friend void swap(System_Memory_State& a, System_Memory_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Memory_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Memory_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Memory_State& from);
  void MergeFrom(const System_Memory_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Memory_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue physical = 108400520 [(.yext.schemapath) = "/system/memory/state/physical"];
  bool has_physical() const;
  void clear_physical();
  static const int kPhysicalFieldNumber = 108400520;
  const ::ywrapper::UintValue& physical() const;
  ::ywrapper::UintValue* release_physical();
  ::ywrapper::UintValue* mutable_physical();
  void set_allocated_physical(::ywrapper::UintValue* physical);

  // .ywrapper.UintValue reserved = 140759447 [(.yext.schemapath) = "/system/memory/state/reserved"];
  bool has_reserved() const;
  void clear_reserved();
  static const int kReservedFieldNumber = 140759447;
  const ::ywrapper::UintValue& reserved() const;
  ::ywrapper::UintValue* release_reserved();
  ::ywrapper::UintValue* mutable_reserved();
  void set_allocated_reserved(::ywrapper::UintValue* reserved);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Memory.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* physical_;
  ::ywrapper::UintValue* reserved_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Memory_StateImpl();
};
// -------------------------------------------------------------------

class System_Memory : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Memory) */ {
 public:
  System_Memory();
  virtual ~System_Memory();

  System_Memory(const System_Memory& from);

  inline System_Memory& operator=(const System_Memory& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Memory(System_Memory&& from) noexcept
    : System_Memory() {
    *this = ::std::move(from);
  }

  inline System_Memory& operator=(System_Memory&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Memory& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Memory* internal_default_instance() {
    return reinterpret_cast<const System_Memory*>(
               &_System_Memory_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    108;

  void Swap(System_Memory* other);
  friend void swap(System_Memory& a, System_Memory& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Memory* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Memory* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Memory& from);
  void MergeFrom(const System_Memory& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Memory* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Memory_Config Config;
  typedef System_Memory_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Memory.State state = 444004704 [(.yext.schemapath) = "/system/memory/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 444004704;
  const ::openconfig::openconfig_system::System_Memory_State& state() const;
  ::openconfig::openconfig_system::System_Memory_State* release_state();
  ::openconfig::openconfig_system::System_Memory_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Memory_State* state);

  // .openconfig.openconfig_system.System.Memory.Config config = 525457903 [(.yext.schemapath) = "/system/memory/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 525457903;
  const ::openconfig::openconfig_system::System_Memory_Config& config() const;
  ::openconfig::openconfig_system::System_Memory_Config* release_config();
  ::openconfig::openconfig_system::System_Memory_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Memory_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Memory)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Memory_State* state_;
  ::openconfig::openconfig_system::System_Memory_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_MemoryImpl();
};
// -------------------------------------------------------------------

class System_Ntp_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Ntp.Config) */ {
 public:
  System_Ntp_Config();
  virtual ~System_Ntp_Config();

  System_Ntp_Config(const System_Ntp_Config& from);

  inline System_Ntp_Config& operator=(const System_Ntp_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Ntp_Config(System_Ntp_Config&& from) noexcept
    : System_Ntp_Config() {
    *this = ::std::move(from);
  }

  inline System_Ntp_Config& operator=(System_Ntp_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Ntp_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Ntp_Config* internal_default_instance() {
    return reinterpret_cast<const System_Ntp_Config*>(
               &_System_Ntp_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    109;

  void Swap(System_Ntp_Config* other);
  friend void swap(System_Ntp_Config& a, System_Ntp_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Ntp_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Ntp_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Ntp_Config& from);
  void MergeFrom(const System_Ntp_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Ntp_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.BoolValue enable_ntp_auth = 345800954 [(.yext.schemapath) = "/system/ntp/config/enable-ntp-auth"];
  bool has_enable_ntp_auth() const;
  void clear_enable_ntp_auth();
  static const int kEnableNtpAuthFieldNumber = 345800954;
  const ::ywrapper::BoolValue& enable_ntp_auth() const;
  ::ywrapper::BoolValue* release_enable_ntp_auth();
  ::ywrapper::BoolValue* mutable_enable_ntp_auth();
  void set_allocated_enable_ntp_auth(::ywrapper::BoolValue* enable_ntp_auth);

  // .ywrapper.StringValue ntp_source_address = 418322460 [(.yext.schemapath) = "/system/ntp/config/ntp-source-address"];
  bool has_ntp_source_address() const;
  void clear_ntp_source_address();
  static const int kNtpSourceAddressFieldNumber = 418322460;
  const ::ywrapper::StringValue& ntp_source_address() const;
  ::ywrapper::StringValue* release_ntp_source_address();
  ::ywrapper::StringValue* mutable_ntp_source_address();
  void set_allocated_ntp_source_address(::ywrapper::StringValue* ntp_source_address);

  // .ywrapper.BoolValue enabled = 520946078 [(.yext.schemapath) = "/system/ntp/config/enabled"];
  bool has_enabled() const;
  void clear_enabled();
  static const int kEnabledFieldNumber = 520946078;
  const ::ywrapper::BoolValue& enabled() const;
  ::ywrapper::BoolValue* release_enabled();
  ::ywrapper::BoolValue* mutable_enabled();
  void set_allocated_enabled(::ywrapper::BoolValue* enabled);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Ntp.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::BoolValue* enable_ntp_auth_;
  ::ywrapper::StringValue* ntp_source_address_;
  ::ywrapper::BoolValue* enabled_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Ntp_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Ntp_NtpKeys_NtpKey_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.Config) */ {
 public:
  System_Ntp_NtpKeys_NtpKey_Config();
  virtual ~System_Ntp_NtpKeys_NtpKey_Config();

  System_Ntp_NtpKeys_NtpKey_Config(const System_Ntp_NtpKeys_NtpKey_Config& from);

  inline System_Ntp_NtpKeys_NtpKey_Config& operator=(const System_Ntp_NtpKeys_NtpKey_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Ntp_NtpKeys_NtpKey_Config(System_Ntp_NtpKeys_NtpKey_Config&& from) noexcept
    : System_Ntp_NtpKeys_NtpKey_Config() {
    *this = ::std::move(from);
  }

  inline System_Ntp_NtpKeys_NtpKey_Config& operator=(System_Ntp_NtpKeys_NtpKey_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Ntp_NtpKeys_NtpKey_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Ntp_NtpKeys_NtpKey_Config* internal_default_instance() {
    return reinterpret_cast<const System_Ntp_NtpKeys_NtpKey_Config*>(
               &_System_Ntp_NtpKeys_NtpKey_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    110;

  void Swap(System_Ntp_NtpKeys_NtpKey_Config* other);
  friend void swap(System_Ntp_NtpKeys_NtpKey_Config& a, System_Ntp_NtpKeys_NtpKey_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Ntp_NtpKeys_NtpKey_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Ntp_NtpKeys_NtpKey_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Ntp_NtpKeys_NtpKey_Config& from);
  void MergeFrom(const System_Ntp_NtpKeys_NtpKey_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Ntp_NtpKeys_NtpKey_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue key_id = 222155977 [(.yext.schemapath) = "/system/ntp/ntp-keys/ntp-key/config/key-id"];
  bool has_key_id() const;
  void clear_key_id();
  static const int kKeyIdFieldNumber = 222155977;
  const ::ywrapper::UintValue& key_id() const;
  ::ywrapper::UintValue* release_key_id();
  ::ywrapper::UintValue* mutable_key_id();
  void set_allocated_key_id(::ywrapper::UintValue* key_id);

  // .ywrapper.StringValue key_value = 491993133 [(.yext.schemapath) = "/system/ntp/ntp-keys/ntp-key/config/key-value"];
  bool has_key_value() const;
  void clear_key_value();
  static const int kKeyValueFieldNumber = 491993133;
  const ::ywrapper::StringValue& key_value() const;
  ::ywrapper::StringValue* release_key_value();
  ::ywrapper::StringValue* mutable_key_value();
  void set_allocated_key_value(::ywrapper::StringValue* key_value);

  // .openconfig.enums.OpenconfigSystemNTPAUTHTYPE key_type = 68795202 [(.yext.schemapath) = "/system/ntp/ntp-keys/ntp-key/config/key-type"];
  void clear_key_type();
  static const int kKeyTypeFieldNumber = 68795202;
  ::openconfig::enums::OpenconfigSystemNTPAUTHTYPE key_type() const;
  void set_key_type(::openconfig::enums::OpenconfigSystemNTPAUTHTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* key_id_;
  ::ywrapper::StringValue* key_value_;
  int key_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Ntp_NtpKeys_NtpKey_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Ntp_NtpKeys_NtpKey_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.State) */ {
 public:
  System_Ntp_NtpKeys_NtpKey_State();
  virtual ~System_Ntp_NtpKeys_NtpKey_State();

  System_Ntp_NtpKeys_NtpKey_State(const System_Ntp_NtpKeys_NtpKey_State& from);

  inline System_Ntp_NtpKeys_NtpKey_State& operator=(const System_Ntp_NtpKeys_NtpKey_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Ntp_NtpKeys_NtpKey_State(System_Ntp_NtpKeys_NtpKey_State&& from) noexcept
    : System_Ntp_NtpKeys_NtpKey_State() {
    *this = ::std::move(from);
  }

  inline System_Ntp_NtpKeys_NtpKey_State& operator=(System_Ntp_NtpKeys_NtpKey_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Ntp_NtpKeys_NtpKey_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Ntp_NtpKeys_NtpKey_State* internal_default_instance() {
    return reinterpret_cast<const System_Ntp_NtpKeys_NtpKey_State*>(
               &_System_Ntp_NtpKeys_NtpKey_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    111;

  void Swap(System_Ntp_NtpKeys_NtpKey_State* other);
  friend void swap(System_Ntp_NtpKeys_NtpKey_State& a, System_Ntp_NtpKeys_NtpKey_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Ntp_NtpKeys_NtpKey_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Ntp_NtpKeys_NtpKey_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Ntp_NtpKeys_NtpKey_State& from);
  void MergeFrom(const System_Ntp_NtpKeys_NtpKey_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Ntp_NtpKeys_NtpKey_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue key_value = 234995902 [(.yext.schemapath) = "/system/ntp/ntp-keys/ntp-key/state/key-value"];
  bool has_key_value() const;
  void clear_key_value();
  static const int kKeyValueFieldNumber = 234995902;
  const ::ywrapper::StringValue& key_value() const;
  ::ywrapper::StringValue* release_key_value();
  ::ywrapper::StringValue* mutable_key_value();
  void set_allocated_key_value(::ywrapper::StringValue* key_value);

  // .ywrapper.UintValue key_id = 526881776 [(.yext.schemapath) = "/system/ntp/ntp-keys/ntp-key/state/key-id"];
  bool has_key_id() const;
  void clear_key_id();
  static const int kKeyIdFieldNumber = 526881776;
  const ::ywrapper::UintValue& key_id() const;
  ::ywrapper::UintValue* release_key_id();
  ::ywrapper::UintValue* mutable_key_id();
  void set_allocated_key_id(::ywrapper::UintValue* key_id);

  // .openconfig.enums.OpenconfigSystemNTPAUTHTYPE key_type = 360346767 [(.yext.schemapath) = "/system/ntp/ntp-keys/ntp-key/state/key-type"];
  void clear_key_type();
  static const int kKeyTypeFieldNumber = 360346767;
  ::openconfig::enums::OpenconfigSystemNTPAUTHTYPE key_type() const;
  void set_key_type(::openconfig::enums::OpenconfigSystemNTPAUTHTYPE value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* key_value_;
  ::ywrapper::UintValue* key_id_;
  int key_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Ntp_NtpKeys_NtpKey_StateImpl();
};
// -------------------------------------------------------------------

class System_Ntp_NtpKeys_NtpKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey) */ {
 public:
  System_Ntp_NtpKeys_NtpKey();
  virtual ~System_Ntp_NtpKeys_NtpKey();

  System_Ntp_NtpKeys_NtpKey(const System_Ntp_NtpKeys_NtpKey& from);

  inline System_Ntp_NtpKeys_NtpKey& operator=(const System_Ntp_NtpKeys_NtpKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Ntp_NtpKeys_NtpKey(System_Ntp_NtpKeys_NtpKey&& from) noexcept
    : System_Ntp_NtpKeys_NtpKey() {
    *this = ::std::move(from);
  }

  inline System_Ntp_NtpKeys_NtpKey& operator=(System_Ntp_NtpKeys_NtpKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Ntp_NtpKeys_NtpKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Ntp_NtpKeys_NtpKey* internal_default_instance() {
    return reinterpret_cast<const System_Ntp_NtpKeys_NtpKey*>(
               &_System_Ntp_NtpKeys_NtpKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    112;

  void Swap(System_Ntp_NtpKeys_NtpKey* other);
  friend void swap(System_Ntp_NtpKeys_NtpKey& a, System_Ntp_NtpKeys_NtpKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Ntp_NtpKeys_NtpKey* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Ntp_NtpKeys_NtpKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Ntp_NtpKeys_NtpKey& from);
  void MergeFrom(const System_Ntp_NtpKeys_NtpKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Ntp_NtpKeys_NtpKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Ntp_NtpKeys_NtpKey_Config Config;
  typedef System_Ntp_NtpKeys_NtpKey_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.Config config = 92682517 [(.yext.schemapath) = "/system/ntp/ntp-keys/ntp-key/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 92682517;
  const ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey_Config& config() const;
  ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey_Config* release_config();
  ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey_Config* config);

  // .openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.State state = 467759498 [(.yext.schemapath) = "/system/ntp/ntp-keys/ntp-key/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 467759498;
  const ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey_State& state() const;
  ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey_State* release_state();
  ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey_Config* config_;
  ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Ntp_NtpKeys_NtpKeyImpl();
};
// -------------------------------------------------------------------

class System_Ntp_NtpKeys_NtpKeyKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKeyKey) */ {
 public:
  System_Ntp_NtpKeys_NtpKeyKey();
  virtual ~System_Ntp_NtpKeys_NtpKeyKey();

  System_Ntp_NtpKeys_NtpKeyKey(const System_Ntp_NtpKeys_NtpKeyKey& from);

  inline System_Ntp_NtpKeys_NtpKeyKey& operator=(const System_Ntp_NtpKeys_NtpKeyKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Ntp_NtpKeys_NtpKeyKey(System_Ntp_NtpKeys_NtpKeyKey&& from) noexcept
    : System_Ntp_NtpKeys_NtpKeyKey() {
    *this = ::std::move(from);
  }

  inline System_Ntp_NtpKeys_NtpKeyKey& operator=(System_Ntp_NtpKeys_NtpKeyKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Ntp_NtpKeys_NtpKeyKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Ntp_NtpKeys_NtpKeyKey* internal_default_instance() {
    return reinterpret_cast<const System_Ntp_NtpKeys_NtpKeyKey*>(
               &_System_Ntp_NtpKeys_NtpKeyKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    113;

  void Swap(System_Ntp_NtpKeys_NtpKeyKey* other);
  friend void swap(System_Ntp_NtpKeys_NtpKeyKey& a, System_Ntp_NtpKeys_NtpKeyKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Ntp_NtpKeys_NtpKeyKey* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Ntp_NtpKeys_NtpKeyKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Ntp_NtpKeys_NtpKeyKey& from);
  void MergeFrom(const System_Ntp_NtpKeys_NtpKeyKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Ntp_NtpKeys_NtpKeyKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey ntp_key = 2;
  bool has_ntp_key() const;
  void clear_ntp_key();
  static const int kNtpKeyFieldNumber = 2;
  const ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey& ntp_key() const;
  ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey* release_ntp_key();
  ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey* mutable_ntp_key();
  void set_allocated_ntp_key(::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey* ntp_key);

  // uint64 key_id = 1 [(.yext.schemapath) = "/system/ntp/ntp-keys/ntp-key/key-id"];
  void clear_key_id();
  static const int kKeyIdFieldNumber = 1;
  ::google::protobuf::uint64 key_id() const;
  void set_key_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKeyKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey* ntp_key_;
  ::google::protobuf::uint64 key_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Ntp_NtpKeys_NtpKeyKeyImpl();
};
// -------------------------------------------------------------------

class System_Ntp_NtpKeys : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Ntp.NtpKeys) */ {
 public:
  System_Ntp_NtpKeys();
  virtual ~System_Ntp_NtpKeys();

  System_Ntp_NtpKeys(const System_Ntp_NtpKeys& from);

  inline System_Ntp_NtpKeys& operator=(const System_Ntp_NtpKeys& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Ntp_NtpKeys(System_Ntp_NtpKeys&& from) noexcept
    : System_Ntp_NtpKeys() {
    *this = ::std::move(from);
  }

  inline System_Ntp_NtpKeys& operator=(System_Ntp_NtpKeys&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Ntp_NtpKeys& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Ntp_NtpKeys* internal_default_instance() {
    return reinterpret_cast<const System_Ntp_NtpKeys*>(
               &_System_Ntp_NtpKeys_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    114;

  void Swap(System_Ntp_NtpKeys* other);
  friend void swap(System_Ntp_NtpKeys& a, System_Ntp_NtpKeys& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Ntp_NtpKeys* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Ntp_NtpKeys* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Ntp_NtpKeys& from);
  void MergeFrom(const System_Ntp_NtpKeys& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Ntp_NtpKeys* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Ntp_NtpKeys_NtpKey NtpKey;
  typedef System_Ntp_NtpKeys_NtpKeyKey NtpKeyKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKeyKey ntp_key = 265614496 [(.yext.schemapath) = "/system/ntp/ntp-keys/ntp-key"];
  int ntp_key_size() const;
  void clear_ntp_key();
  static const int kNtpKeyFieldNumber = 265614496;
  const ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKeyKey& ntp_key(int index) const;
  ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKeyKey* mutable_ntp_key(int index);
  ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKeyKey* add_ntp_key();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKeyKey >*
      mutable_ntp_key();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKeyKey >&
      ntp_key() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Ntp.NtpKeys)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKeyKey > ntp_key_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Ntp_NtpKeysImpl();
};
// -------------------------------------------------------------------

class System_Ntp_Servers_Server_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Ntp.Servers.Server.Config) */ {
 public:
  System_Ntp_Servers_Server_Config();
  virtual ~System_Ntp_Servers_Server_Config();

  System_Ntp_Servers_Server_Config(const System_Ntp_Servers_Server_Config& from);

  inline System_Ntp_Servers_Server_Config& operator=(const System_Ntp_Servers_Server_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Ntp_Servers_Server_Config(System_Ntp_Servers_Server_Config&& from) noexcept
    : System_Ntp_Servers_Server_Config() {
    *this = ::std::move(from);
  }

  inline System_Ntp_Servers_Server_Config& operator=(System_Ntp_Servers_Server_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Ntp_Servers_Server_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Ntp_Servers_Server_Config* internal_default_instance() {
    return reinterpret_cast<const System_Ntp_Servers_Server_Config*>(
               &_System_Ntp_Servers_Server_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    115;

  void Swap(System_Ntp_Servers_Server_Config* other);
  friend void swap(System_Ntp_Servers_Server_Config& a, System_Ntp_Servers_Server_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Ntp_Servers_Server_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Ntp_Servers_Server_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Ntp_Servers_Server_Config& from);
  void MergeFrom(const System_Ntp_Servers_Server_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Ntp_Servers_Server_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Ntp_Servers_Server_Config_AssociationType AssociationType;
  static const AssociationType ASSOCIATIONTYPE_SERVER =
    System_Ntp_Servers_Server_Config_AssociationType_ASSOCIATIONTYPE_SERVER;
  static const AssociationType ASSOCIATIONTYPE_PEER =
    System_Ntp_Servers_Server_Config_AssociationType_ASSOCIATIONTYPE_PEER;
  static const AssociationType ASSOCIATIONTYPE_POOL =
    System_Ntp_Servers_Server_Config_AssociationType_ASSOCIATIONTYPE_POOL;
  static inline bool AssociationType_IsValid(int value) {
    return System_Ntp_Servers_Server_Config_AssociationType_IsValid(value);
  }
  static const AssociationType AssociationType_MIN =
    System_Ntp_Servers_Server_Config_AssociationType_AssociationType_MIN;
  static const AssociationType AssociationType_MAX =
    System_Ntp_Servers_Server_Config_AssociationType_AssociationType_MAX;
  static const int AssociationType_ARRAYSIZE =
    System_Ntp_Servers_Server_Config_AssociationType_AssociationType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AssociationType_descriptor() {
    return System_Ntp_Servers_Server_Config_AssociationType_descriptor();
  }
  static inline const ::std::string& AssociationType_Name(AssociationType value) {
    return System_Ntp_Servers_Server_Config_AssociationType_Name(value);
  }
  static inline bool AssociationType_Parse(const ::std::string& name,
      AssociationType* value) {
    return System_Ntp_Servers_Server_Config_AssociationType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue port = 23953045 [(.yext.schemapath) = "/system/ntp/servers/server/config/port"];
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 23953045;
  const ::ywrapper::UintValue& port() const;
  ::ywrapper::UintValue* release_port();
  ::ywrapper::UintValue* mutable_port();
  void set_allocated_port(::ywrapper::UintValue* port);

  // .ywrapper.BoolValue prefer = 63587710 [(.yext.schemapath) = "/system/ntp/servers/server/config/prefer"];
  bool has_prefer() const;
  void clear_prefer();
  static const int kPreferFieldNumber = 63587710;
  const ::ywrapper::BoolValue& prefer() const;
  ::ywrapper::BoolValue* release_prefer();
  ::ywrapper::BoolValue* mutable_prefer();
  void set_allocated_prefer(::ywrapper::BoolValue* prefer);

  // .ywrapper.UintValue version = 385126824 [(.yext.schemapath) = "/system/ntp/servers/server/config/version"];
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 385126824;
  const ::ywrapper::UintValue& version() const;
  ::ywrapper::UintValue* release_version();
  ::ywrapper::UintValue* mutable_version();
  void set_allocated_version(::ywrapper::UintValue* version);

  // .ywrapper.StringValue address = 410259212 [(.yext.schemapath) = "/system/ntp/servers/server/config/address"];
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 410259212;
  const ::ywrapper::StringValue& address() const;
  ::ywrapper::StringValue* release_address();
  ::ywrapper::StringValue* mutable_address();
  void set_allocated_address(::ywrapper::StringValue* address);

  // .ywrapper.BoolValue iburst = 520002257 [(.yext.schemapath) = "/system/ntp/servers/server/config/iburst"];
  bool has_iburst() const;
  void clear_iburst();
  static const int kIburstFieldNumber = 520002257;
  const ::ywrapper::BoolValue& iburst() const;
  ::ywrapper::BoolValue* release_iburst();
  ::ywrapper::BoolValue* mutable_iburst();
  void set_allocated_iburst(::ywrapper::BoolValue* iburst);

  // .openconfig.openconfig_system.System.Ntp.Servers.Server.Config.AssociationType association_type = 403743446 [(.yext.schemapath) = "/system/ntp/servers/server/config/association-type"];
  void clear_association_type();
  static const int kAssociationTypeFieldNumber = 403743446;
  ::openconfig::openconfig_system::System_Ntp_Servers_Server_Config_AssociationType association_type() const;
  void set_association_type(::openconfig::openconfig_system::System_Ntp_Servers_Server_Config_AssociationType value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Ntp.Servers.Server.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* port_;
  ::ywrapper::BoolValue* prefer_;
  ::ywrapper::UintValue* version_;
  ::ywrapper::StringValue* address_;
  ::ywrapper::BoolValue* iburst_;
  int association_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Ntp_Servers_Server_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Ntp_Servers_Server_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Ntp.Servers.Server.State) */ {
 public:
  System_Ntp_Servers_Server_State();
  virtual ~System_Ntp_Servers_Server_State();

  System_Ntp_Servers_Server_State(const System_Ntp_Servers_Server_State& from);

  inline System_Ntp_Servers_Server_State& operator=(const System_Ntp_Servers_Server_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Ntp_Servers_Server_State(System_Ntp_Servers_Server_State&& from) noexcept
    : System_Ntp_Servers_Server_State() {
    *this = ::std::move(from);
  }

  inline System_Ntp_Servers_Server_State& operator=(System_Ntp_Servers_Server_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Ntp_Servers_Server_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Ntp_Servers_Server_State* internal_default_instance() {
    return reinterpret_cast<const System_Ntp_Servers_Server_State*>(
               &_System_Ntp_Servers_Server_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    116;

  void Swap(System_Ntp_Servers_Server_State* other);
  friend void swap(System_Ntp_Servers_Server_State& a, System_Ntp_Servers_Server_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Ntp_Servers_Server_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Ntp_Servers_Server_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Ntp_Servers_Server_State& from);
  void MergeFrom(const System_Ntp_Servers_Server_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Ntp_Servers_Server_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Ntp_Servers_Server_State_AssociationType AssociationType;
  static const AssociationType ASSOCIATIONTYPE_SERVER =
    System_Ntp_Servers_Server_State_AssociationType_ASSOCIATIONTYPE_SERVER;
  static const AssociationType ASSOCIATIONTYPE_PEER =
    System_Ntp_Servers_Server_State_AssociationType_ASSOCIATIONTYPE_PEER;
  static const AssociationType ASSOCIATIONTYPE_POOL =
    System_Ntp_Servers_Server_State_AssociationType_ASSOCIATIONTYPE_POOL;
  static inline bool AssociationType_IsValid(int value) {
    return System_Ntp_Servers_Server_State_AssociationType_IsValid(value);
  }
  static const AssociationType AssociationType_MIN =
    System_Ntp_Servers_Server_State_AssociationType_AssociationType_MIN;
  static const AssociationType AssociationType_MAX =
    System_Ntp_Servers_Server_State_AssociationType_AssociationType_MAX;
  static const int AssociationType_ARRAYSIZE =
    System_Ntp_Servers_Server_State_AssociationType_AssociationType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AssociationType_descriptor() {
    return System_Ntp_Servers_Server_State_AssociationType_descriptor();
  }
  static inline const ::std::string& AssociationType_Name(AssociationType value) {
    return System_Ntp_Servers_Server_State_AssociationType_Name(value);
  }
  static inline bool AssociationType_Parse(const ::std::string& name,
      AssociationType* value) {
    return System_Ntp_Servers_Server_State_AssociationType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue offset = 2287252 [(.yext.schemapath) = "/system/ntp/servers/server/state/offset"];
  bool has_offset() const;
  void clear_offset();
  static const int kOffsetFieldNumber = 2287252;
  const ::ywrapper::UintValue& offset() const;
  ::ywrapper::UintValue* release_offset();
  ::ywrapper::UintValue* mutable_offset();
  void set_allocated_offset(::ywrapper::UintValue* offset);

  // .ywrapper.UintValue root_dispersion = 81112484 [(.yext.schemapath) = "/system/ntp/servers/server/state/root-dispersion"];
  bool has_root_dispersion() const;
  void clear_root_dispersion();
  static const int kRootDispersionFieldNumber = 81112484;
  const ::ywrapper::UintValue& root_dispersion() const;
  ::ywrapper::UintValue* release_root_dispersion();
  ::ywrapper::UintValue* mutable_root_dispersion();
  void set_allocated_root_dispersion(::ywrapper::UintValue* root_dispersion);

  // .ywrapper.UintValue version = 110839315 [(.yext.schemapath) = "/system/ntp/servers/server/state/version"];
  bool has_version() const;
  void clear_version();
  static const int kVersionFieldNumber = 110839315;
  const ::ywrapper::UintValue& version() const;
  ::ywrapper::UintValue* release_version();
  ::ywrapper::UintValue* mutable_version();
  void set_allocated_version(::ywrapper::UintValue* version);

  // .ywrapper.UintValue stratum = 297803783 [(.yext.schemapath) = "/system/ntp/servers/server/state/stratum"];
  bool has_stratum() const;
  void clear_stratum();
  static const int kStratumFieldNumber = 297803783;
  const ::ywrapper::UintValue& stratum() const;
  ::ywrapper::UintValue* release_stratum();
  ::ywrapper::UintValue* mutable_stratum();
  void set_allocated_stratum(::ywrapper::UintValue* stratum);

  // .ywrapper.UintValue root_delay = 363692935 [(.yext.schemapath) = "/system/ntp/servers/server/state/root-delay"];
  bool has_root_delay() const;
  void clear_root_delay();
  static const int kRootDelayFieldNumber = 363692935;
  const ::ywrapper::UintValue& root_delay() const;
  ::ywrapper::UintValue* release_root_delay();
  ::ywrapper::UintValue* mutable_root_delay();
  void set_allocated_root_delay(::ywrapper::UintValue* root_delay);

  // .ywrapper.StringValue address = 376190615 [(.yext.schemapath) = "/system/ntp/servers/server/state/address"];
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 376190615;
  const ::ywrapper::StringValue& address() const;
  ::ywrapper::StringValue* release_address();
  ::ywrapper::StringValue* mutable_address();
  void set_allocated_address(::ywrapper::StringValue* address);

  // .ywrapper.UintValue poll_interval = 394021196 [(.yext.schemapath) = "/system/ntp/servers/server/state/poll-interval"];
  bool has_poll_interval() const;
  void clear_poll_interval();
  static const int kPollIntervalFieldNumber = 394021196;
  const ::ywrapper::UintValue& poll_interval() const;
  ::ywrapper::UintValue* release_poll_interval();
  ::ywrapper::UintValue* mutable_poll_interval();
  void set_allocated_poll_interval(::ywrapper::UintValue* poll_interval);

  // .ywrapper.BoolValue prefer = 424414343 [(.yext.schemapath) = "/system/ntp/servers/server/state/prefer"];
  bool has_prefer() const;
  void clear_prefer();
  static const int kPreferFieldNumber = 424414343;
  const ::ywrapper::BoolValue& prefer() const;
  ::ywrapper::BoolValue* release_prefer();
  ::ywrapper::BoolValue* mutable_prefer();
  void set_allocated_prefer(::ywrapper::BoolValue* prefer);

  // .ywrapper.BoolValue iburst = 447044400 [(.yext.schemapath) = "/system/ntp/servers/server/state/iburst"];
  bool has_iburst() const;
  void clear_iburst();
  static const int kIburstFieldNumber = 447044400;
  const ::ywrapper::BoolValue& iburst() const;
  ::ywrapper::BoolValue* release_iburst();
  ::ywrapper::BoolValue* mutable_iburst();
  void set_allocated_iburst(::ywrapper::BoolValue* iburst);

  // .ywrapper.UintValue port = 470437856 [(.yext.schemapath) = "/system/ntp/servers/server/state/port"];
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 470437856;
  const ::ywrapper::UintValue& port() const;
  ::ywrapper::UintValue* release_port();
  ::ywrapper::UintValue* mutable_port();
  void set_allocated_port(::ywrapper::UintValue* port);

  // .openconfig.openconfig_system.System.Ntp.Servers.Server.State.AssociationType association_type = 409884071 [(.yext.schemapath) = "/system/ntp/servers/server/state/association-type"];
  void clear_association_type();
  static const int kAssociationTypeFieldNumber = 409884071;
  ::openconfig::openconfig_system::System_Ntp_Servers_Server_State_AssociationType association_type() const;
  void set_association_type(::openconfig::openconfig_system::System_Ntp_Servers_Server_State_AssociationType value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Ntp.Servers.Server.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* offset_;
  ::ywrapper::UintValue* root_dispersion_;
  ::ywrapper::UintValue* version_;
  ::ywrapper::UintValue* stratum_;
  ::ywrapper::UintValue* root_delay_;
  ::ywrapper::StringValue* address_;
  ::ywrapper::UintValue* poll_interval_;
  ::ywrapper::BoolValue* prefer_;
  ::ywrapper::BoolValue* iburst_;
  ::ywrapper::UintValue* port_;
  int association_type_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Ntp_Servers_Server_StateImpl();
};
// -------------------------------------------------------------------

class System_Ntp_Servers_Server : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Ntp.Servers.Server) */ {
 public:
  System_Ntp_Servers_Server();
  virtual ~System_Ntp_Servers_Server();

  System_Ntp_Servers_Server(const System_Ntp_Servers_Server& from);

  inline System_Ntp_Servers_Server& operator=(const System_Ntp_Servers_Server& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Ntp_Servers_Server(System_Ntp_Servers_Server&& from) noexcept
    : System_Ntp_Servers_Server() {
    *this = ::std::move(from);
  }

  inline System_Ntp_Servers_Server& operator=(System_Ntp_Servers_Server&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Ntp_Servers_Server& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Ntp_Servers_Server* internal_default_instance() {
    return reinterpret_cast<const System_Ntp_Servers_Server*>(
               &_System_Ntp_Servers_Server_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    117;

  void Swap(System_Ntp_Servers_Server* other);
  friend void swap(System_Ntp_Servers_Server& a, System_Ntp_Servers_Server& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Ntp_Servers_Server* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Ntp_Servers_Server* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Ntp_Servers_Server& from);
  void MergeFrom(const System_Ntp_Servers_Server& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Ntp_Servers_Server* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Ntp_Servers_Server_Config Config;
  typedef System_Ntp_Servers_Server_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Ntp.Servers.Server.State state = 280461638 [(.yext.schemapath) = "/system/ntp/servers/server/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 280461638;
  const ::openconfig::openconfig_system::System_Ntp_Servers_Server_State& state() const;
  ::openconfig::openconfig_system::System_Ntp_Servers_Server_State* release_state();
  ::openconfig::openconfig_system::System_Ntp_Servers_Server_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Ntp_Servers_Server_State* state);

  // .openconfig.openconfig_system.System.Ntp.Servers.Server.Config config = 336048721 [(.yext.schemapath) = "/system/ntp/servers/server/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 336048721;
  const ::openconfig::openconfig_system::System_Ntp_Servers_Server_Config& config() const;
  ::openconfig::openconfig_system::System_Ntp_Servers_Server_Config* release_config();
  ::openconfig::openconfig_system::System_Ntp_Servers_Server_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Ntp_Servers_Server_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Ntp.Servers.Server)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Ntp_Servers_Server_State* state_;
  ::openconfig::openconfig_system::System_Ntp_Servers_Server_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Ntp_Servers_ServerImpl();
};
// -------------------------------------------------------------------

class System_Ntp_Servers_ServerKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Ntp.Servers.ServerKey) */ {
 public:
  System_Ntp_Servers_ServerKey();
  virtual ~System_Ntp_Servers_ServerKey();

  System_Ntp_Servers_ServerKey(const System_Ntp_Servers_ServerKey& from);

  inline System_Ntp_Servers_ServerKey& operator=(const System_Ntp_Servers_ServerKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Ntp_Servers_ServerKey(System_Ntp_Servers_ServerKey&& from) noexcept
    : System_Ntp_Servers_ServerKey() {
    *this = ::std::move(from);
  }

  inline System_Ntp_Servers_ServerKey& operator=(System_Ntp_Servers_ServerKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Ntp_Servers_ServerKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Ntp_Servers_ServerKey* internal_default_instance() {
    return reinterpret_cast<const System_Ntp_Servers_ServerKey*>(
               &_System_Ntp_Servers_ServerKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    118;

  void Swap(System_Ntp_Servers_ServerKey* other);
  friend void swap(System_Ntp_Servers_ServerKey& a, System_Ntp_Servers_ServerKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Ntp_Servers_ServerKey* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Ntp_Servers_ServerKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Ntp_Servers_ServerKey& from);
  void MergeFrom(const System_Ntp_Servers_ServerKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Ntp_Servers_ServerKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string address = 1 [(.yext.schemapath) = "/system/ntp/servers/server/address"];
  void clear_address();
  static const int kAddressFieldNumber = 1;
  const ::std::string& address() const;
  void set_address(const ::std::string& value);
  #if LANG_CXX11
  void set_address(::std::string&& value);
  #endif
  void set_address(const char* value);
  void set_address(const char* value, size_t size);
  ::std::string* mutable_address();
  ::std::string* release_address();
  void set_allocated_address(::std::string* address);

  // .openconfig.openconfig_system.System.Ntp.Servers.Server server = 2;
  bool has_server() const;
  void clear_server();
  static const int kServerFieldNumber = 2;
  const ::openconfig::openconfig_system::System_Ntp_Servers_Server& server() const;
  ::openconfig::openconfig_system::System_Ntp_Servers_Server* release_server();
  ::openconfig::openconfig_system::System_Ntp_Servers_Server* mutable_server();
  void set_allocated_server(::openconfig::openconfig_system::System_Ntp_Servers_Server* server);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Ntp.Servers.ServerKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr address_;
  ::openconfig::openconfig_system::System_Ntp_Servers_Server* server_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Ntp_Servers_ServerKeyImpl();
};
// -------------------------------------------------------------------

class System_Ntp_Servers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Ntp.Servers) */ {
 public:
  System_Ntp_Servers();
  virtual ~System_Ntp_Servers();

  System_Ntp_Servers(const System_Ntp_Servers& from);

  inline System_Ntp_Servers& operator=(const System_Ntp_Servers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Ntp_Servers(System_Ntp_Servers&& from) noexcept
    : System_Ntp_Servers() {
    *this = ::std::move(from);
  }

  inline System_Ntp_Servers& operator=(System_Ntp_Servers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Ntp_Servers& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Ntp_Servers* internal_default_instance() {
    return reinterpret_cast<const System_Ntp_Servers*>(
               &_System_Ntp_Servers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    119;

  void Swap(System_Ntp_Servers* other);
  friend void swap(System_Ntp_Servers& a, System_Ntp_Servers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Ntp_Servers* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Ntp_Servers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Ntp_Servers& from);
  void MergeFrom(const System_Ntp_Servers& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Ntp_Servers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Ntp_Servers_Server Server;
  typedef System_Ntp_Servers_ServerKey ServerKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_system.System.Ntp.Servers.ServerKey server = 453498492 [(.yext.schemapath) = "/system/ntp/servers/server"];
  int server_size() const;
  void clear_server();
  static const int kServerFieldNumber = 453498492;
  const ::openconfig::openconfig_system::System_Ntp_Servers_ServerKey& server(int index) const;
  ::openconfig::openconfig_system::System_Ntp_Servers_ServerKey* mutable_server(int index);
  ::openconfig::openconfig_system::System_Ntp_Servers_ServerKey* add_server();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Ntp_Servers_ServerKey >*
      mutable_server();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Ntp_Servers_ServerKey >&
      server() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Ntp.Servers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Ntp_Servers_ServerKey > server_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Ntp_ServersImpl();
};
// -------------------------------------------------------------------

class System_Ntp_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Ntp.State) */ {
 public:
  System_Ntp_State();
  virtual ~System_Ntp_State();

  System_Ntp_State(const System_Ntp_State& from);

  inline System_Ntp_State& operator=(const System_Ntp_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Ntp_State(System_Ntp_State&& from) noexcept
    : System_Ntp_State() {
    *this = ::std::move(from);
  }

  inline System_Ntp_State& operator=(System_Ntp_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Ntp_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Ntp_State* internal_default_instance() {
    return reinterpret_cast<const System_Ntp_State*>(
               &_System_Ntp_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    120;

  void Swap(System_Ntp_State* other);
  friend void swap(System_Ntp_State& a, System_Ntp_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Ntp_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Ntp_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Ntp_State& from);
  void MergeFrom(const System_Ntp_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Ntp_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue ntp_source_address = 137356691 [(.yext.schemapath) = "/system/ntp/state/ntp-source-address"];
  bool has_ntp_source_address() const;
  void clear_ntp_source_address();
  static const int kNtpSourceAddressFieldNumber = 137356691;
  const ::ywrapper::StringValue& ntp_source_address() const;
  ::ywrapper::StringValue* release_ntp_source_address();
  ::ywrapper::StringValue* mutable_ntp_source_address();
  void set_allocated_ntp_source_address(::ywrapper::StringValue* ntp_source_address);

  // .ywrapper.BoolValue enabled = 149560907 [(.yext.schemapath) = "/system/ntp/state/enabled"];
  bool has_enabled() const;
  void clear_enabled();
  static const int kEnabledFieldNumber = 149560907;
  const ::ywrapper::BoolValue& enabled() const;
  ::ywrapper::BoolValue* release_enabled();
  ::ywrapper::BoolValue* mutable_enabled();
  void set_allocated_enabled(::ywrapper::BoolValue* enabled);

  // .ywrapper.BoolValue enable_ntp_auth = 181726607 [(.yext.schemapath) = "/system/ntp/state/enable-ntp-auth"];
  bool has_enable_ntp_auth() const;
  void clear_enable_ntp_auth();
  static const int kEnableNtpAuthFieldNumber = 181726607;
  const ::ywrapper::BoolValue& enable_ntp_auth() const;
  ::ywrapper::BoolValue* release_enable_ntp_auth();
  ::ywrapper::BoolValue* mutable_enable_ntp_auth();
  void set_allocated_enable_ntp_auth(::ywrapper::BoolValue* enable_ntp_auth);

  // .ywrapper.UintValue auth_mismatch = 264062383 [(.yext.schemapath) = "/system/ntp/state/auth-mismatch"];
  bool has_auth_mismatch() const;
  void clear_auth_mismatch();
  static const int kAuthMismatchFieldNumber = 264062383;
  const ::ywrapper::UintValue& auth_mismatch() const;
  ::ywrapper::UintValue* release_auth_mismatch();
  ::ywrapper::UintValue* mutable_auth_mismatch();
  void set_allocated_auth_mismatch(::ywrapper::UintValue* auth_mismatch);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Ntp.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* ntp_source_address_;
  ::ywrapper::BoolValue* enabled_;
  ::ywrapper::BoolValue* enable_ntp_auth_;
  ::ywrapper::UintValue* auth_mismatch_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Ntp_StateImpl();
};
// -------------------------------------------------------------------

class System_Ntp : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Ntp) */ {
 public:
  System_Ntp();
  virtual ~System_Ntp();

  System_Ntp(const System_Ntp& from);

  inline System_Ntp& operator=(const System_Ntp& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Ntp(System_Ntp&& from) noexcept
    : System_Ntp() {
    *this = ::std::move(from);
  }

  inline System_Ntp& operator=(System_Ntp&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Ntp& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Ntp* internal_default_instance() {
    return reinterpret_cast<const System_Ntp*>(
               &_System_Ntp_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    121;

  void Swap(System_Ntp* other);
  friend void swap(System_Ntp& a, System_Ntp& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Ntp* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Ntp* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Ntp& from);
  void MergeFrom(const System_Ntp& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Ntp* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Ntp_Config Config;
  typedef System_Ntp_NtpKeys NtpKeys;
  typedef System_Ntp_Servers Servers;
  typedef System_Ntp_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Ntp.Servers servers = 37051726 [(.yext.schemapath) = "/system/ntp/servers"];
  bool has_servers() const;
  void clear_servers();
  static const int kServersFieldNumber = 37051726;
  const ::openconfig::openconfig_system::System_Ntp_Servers& servers() const;
  ::openconfig::openconfig_system::System_Ntp_Servers* release_servers();
  ::openconfig::openconfig_system::System_Ntp_Servers* mutable_servers();
  void set_allocated_servers(::openconfig::openconfig_system::System_Ntp_Servers* servers);

  // .openconfig.openconfig_system.System.Ntp.Config config = 113415980 [(.yext.schemapath) = "/system/ntp/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 113415980;
  const ::openconfig::openconfig_system::System_Ntp_Config& config() const;
  ::openconfig::openconfig_system::System_Ntp_Config* release_config();
  ::openconfig::openconfig_system::System_Ntp_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Ntp_Config* config);

  // .openconfig.openconfig_system.System.Ntp.NtpKeys ntp_keys = 130147733 [(.yext.schemapath) = "/system/ntp/ntp-keys"];
  bool has_ntp_keys() const;
  void clear_ntp_keys();
  static const int kNtpKeysFieldNumber = 130147733;
  const ::openconfig::openconfig_system::System_Ntp_NtpKeys& ntp_keys() const;
  ::openconfig::openconfig_system::System_Ntp_NtpKeys* release_ntp_keys();
  ::openconfig::openconfig_system::System_Ntp_NtpKeys* mutable_ntp_keys();
  void set_allocated_ntp_keys(::openconfig::openconfig_system::System_Ntp_NtpKeys* ntp_keys);

  // .openconfig.openconfig_system.System.Ntp.State state = 402702117 [(.yext.schemapath) = "/system/ntp/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 402702117;
  const ::openconfig::openconfig_system::System_Ntp_State& state() const;
  ::openconfig::openconfig_system::System_Ntp_State* release_state();
  ::openconfig::openconfig_system::System_Ntp_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Ntp_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Ntp)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Ntp_Servers* servers_;
  ::openconfig::openconfig_system::System_Ntp_Config* config_;
  ::openconfig::openconfig_system::System_Ntp_NtpKeys* ntp_keys_;
  ::openconfig::openconfig_system::System_Ntp_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_NtpImpl();
};
// -------------------------------------------------------------------

class System_Openflow_Agent_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Openflow.Agent.Config) */ {
 public:
  System_Openflow_Agent_Config();
  virtual ~System_Openflow_Agent_Config();

  System_Openflow_Agent_Config(const System_Openflow_Agent_Config& from);

  inline System_Openflow_Agent_Config& operator=(const System_Openflow_Agent_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Openflow_Agent_Config(System_Openflow_Agent_Config&& from) noexcept
    : System_Openflow_Agent_Config() {
    *this = ::std::move(from);
  }

  inline System_Openflow_Agent_Config& operator=(System_Openflow_Agent_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Openflow_Agent_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Openflow_Agent_Config* internal_default_instance() {
    return reinterpret_cast<const System_Openflow_Agent_Config*>(
               &_System_Openflow_Agent_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    122;

  void Swap(System_Openflow_Agent_Config* other);
  friend void swap(System_Openflow_Agent_Config& a, System_Openflow_Agent_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Openflow_Agent_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Openflow_Agent_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Openflow_Agent_Config& from);
  void MergeFrom(const System_Openflow_Agent_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Openflow_Agent_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue backoff_interval = 169425115 [(.yext.schemapath) = "/system/openflow/agent/config/backoff-interval"];
  bool has_backoff_interval() const;
  void clear_backoff_interval();
  static const int kBackoffIntervalFieldNumber = 169425115;
  const ::ywrapper::UintValue& backoff_interval() const;
  ::ywrapper::UintValue* release_backoff_interval();
  ::ywrapper::UintValue* mutable_backoff_interval();
  void set_allocated_backoff_interval(::ywrapper::UintValue* backoff_interval);

  // .ywrapper.UintValue inactivity_probe = 343613026 [(.yext.schemapath) = "/system/openflow/agent/config/inactivity-probe"];
  bool has_inactivity_probe() const;
  void clear_inactivity_probe();
  static const int kInactivityProbeFieldNumber = 343613026;
  const ::ywrapper::UintValue& inactivity_probe() const;
  ::ywrapper::UintValue* release_inactivity_probe();
  ::ywrapper::UintValue* mutable_inactivity_probe();
  void set_allocated_inactivity_probe(::ywrapper::UintValue* inactivity_probe);

  // .ywrapper.UintValue max_backoff = 360108366 [(.yext.schemapath) = "/system/openflow/agent/config/max-backoff"];
  bool has_max_backoff() const;
  void clear_max_backoff();
  static const int kMaxBackoffFieldNumber = 360108366;
  const ::ywrapper::UintValue& max_backoff() const;
  ::ywrapper::UintValue* release_max_backoff();
  ::ywrapper::UintValue* mutable_max_backoff();
  void set_allocated_max_backoff(::ywrapper::UintValue* max_backoff);

  // .ywrapper.StringValue datapath_id = 372529014 [(.yext.schemapath) = "/system/openflow/agent/config/datapath-id"];
  bool has_datapath_id() const;
  void clear_datapath_id();
  static const int kDatapathIdFieldNumber = 372529014;
  const ::ywrapper::StringValue& datapath_id() const;
  ::ywrapper::StringValue* release_datapath_id();
  ::ywrapper::StringValue* mutable_datapath_id();
  void set_allocated_datapath_id(::ywrapper::StringValue* datapath_id);

  // .openconfig.enums.OpenconfigOpenflowFailureMode failure_mode = 283440703 [(.yext.schemapath) = "/system/openflow/agent/config/failure-mode"];
  void clear_failure_mode();
  static const int kFailureModeFieldNumber = 283440703;
  ::openconfig::enums::OpenconfigOpenflowFailureMode failure_mode() const;
  void set_failure_mode(::openconfig::enums::OpenconfigOpenflowFailureMode value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Openflow.Agent.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* backoff_interval_;
  ::ywrapper::UintValue* inactivity_probe_;
  ::ywrapper::UintValue* max_backoff_;
  ::ywrapper::StringValue* datapath_id_;
  int failure_mode_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Openflow_Agent_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Openflow_Agent_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Openflow.Agent.State) */ {
 public:
  System_Openflow_Agent_State();
  virtual ~System_Openflow_Agent_State();

  System_Openflow_Agent_State(const System_Openflow_Agent_State& from);

  inline System_Openflow_Agent_State& operator=(const System_Openflow_Agent_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Openflow_Agent_State(System_Openflow_Agent_State&& from) noexcept
    : System_Openflow_Agent_State() {
    *this = ::std::move(from);
  }

  inline System_Openflow_Agent_State& operator=(System_Openflow_Agent_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Openflow_Agent_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Openflow_Agent_State* internal_default_instance() {
    return reinterpret_cast<const System_Openflow_Agent_State*>(
               &_System_Openflow_Agent_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    123;

  void Swap(System_Openflow_Agent_State* other);
  friend void swap(System_Openflow_Agent_State& a, System_Openflow_Agent_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Openflow_Agent_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Openflow_Agent_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Openflow_Agent_State& from);
  void MergeFrom(const System_Openflow_Agent_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Openflow_Agent_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue inactivity_probe = 72940597 [(.yext.schemapath) = "/system/openflow/agent/state/inactivity-probe"];
  bool has_inactivity_probe() const;
  void clear_inactivity_probe();
  static const int kInactivityProbeFieldNumber = 72940597;
  const ::ywrapper::UintValue& inactivity_probe() const;
  ::ywrapper::UintValue* release_inactivity_probe();
  ::ywrapper::UintValue* mutable_inactivity_probe();
  void set_allocated_inactivity_probe(::ywrapper::UintValue* inactivity_probe);

  // .ywrapper.UintValue max_backoff = 75622835 [(.yext.schemapath) = "/system/openflow/agent/state/max-backoff"];
  bool has_max_backoff() const;
  void clear_max_backoff();
  static const int kMaxBackoffFieldNumber = 75622835;
  const ::ywrapper::UintValue& max_backoff() const;
  ::ywrapper::UintValue* release_max_backoff();
  ::ywrapper::UintValue* mutable_max_backoff();
  void set_allocated_max_backoff(::ywrapper::UintValue* max_backoff);

  // .ywrapper.StringValue datapath_id = 170087235 [(.yext.schemapath) = "/system/openflow/agent/state/datapath-id"];
  bool has_datapath_id() const;
  void clear_datapath_id();
  static const int kDatapathIdFieldNumber = 170087235;
  const ::ywrapper::StringValue& datapath_id() const;
  ::ywrapper::StringValue* release_datapath_id();
  ::ywrapper::StringValue* mutable_datapath_id();
  void set_allocated_datapath_id(::ywrapper::StringValue* datapath_id);

  // .ywrapper.UintValue backoff_interval = 534092116 [(.yext.schemapath) = "/system/openflow/agent/state/backoff-interval"];
  bool has_backoff_interval() const;
  void clear_backoff_interval();
  static const int kBackoffIntervalFieldNumber = 534092116;
  const ::ywrapper::UintValue& backoff_interval() const;
  ::ywrapper::UintValue* release_backoff_interval();
  ::ywrapper::UintValue* mutable_backoff_interval();
  void set_allocated_backoff_interval(::ywrapper::UintValue* backoff_interval);

  // .openconfig.enums.OpenconfigOpenflowFailureMode failure_mode = 170198352 [(.yext.schemapath) = "/system/openflow/agent/state/failure-mode"];
  void clear_failure_mode();
  static const int kFailureModeFieldNumber = 170198352;
  ::openconfig::enums::OpenconfigOpenflowFailureMode failure_mode() const;
  void set_failure_mode(::openconfig::enums::OpenconfigOpenflowFailureMode value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Openflow.Agent.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* inactivity_probe_;
  ::ywrapper::UintValue* max_backoff_;
  ::ywrapper::StringValue* datapath_id_;
  ::ywrapper::UintValue* backoff_interval_;
  int failure_mode_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Openflow_Agent_StateImpl();
};
// -------------------------------------------------------------------

class System_Openflow_Agent : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Openflow.Agent) */ {
 public:
  System_Openflow_Agent();
  virtual ~System_Openflow_Agent();

  System_Openflow_Agent(const System_Openflow_Agent& from);

  inline System_Openflow_Agent& operator=(const System_Openflow_Agent& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Openflow_Agent(System_Openflow_Agent&& from) noexcept
    : System_Openflow_Agent() {
    *this = ::std::move(from);
  }

  inline System_Openflow_Agent& operator=(System_Openflow_Agent&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Openflow_Agent& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Openflow_Agent* internal_default_instance() {
    return reinterpret_cast<const System_Openflow_Agent*>(
               &_System_Openflow_Agent_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    124;

  void Swap(System_Openflow_Agent* other);
  friend void swap(System_Openflow_Agent& a, System_Openflow_Agent& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Openflow_Agent* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Openflow_Agent* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Openflow_Agent& from);
  void MergeFrom(const System_Openflow_Agent& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Openflow_Agent* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Openflow_Agent_Config Config;
  typedef System_Openflow_Agent_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Openflow.Agent.State state = 421393027 [(.yext.schemapath) = "/system/openflow/agent/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 421393027;
  const ::openconfig::openconfig_system::System_Openflow_Agent_State& state() const;
  ::openconfig::openconfig_system::System_Openflow_Agent_State* release_state();
  ::openconfig::openconfig_system::System_Openflow_Agent_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Openflow_Agent_State* state);

  // .openconfig.openconfig_system.System.Openflow.Agent.Config config = 423271126 [(.yext.schemapath) = "/system/openflow/agent/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 423271126;
  const ::openconfig::openconfig_system::System_Openflow_Agent_Config& config() const;
  ::openconfig::openconfig_system::System_Openflow_Agent_Config* release_config();
  ::openconfig::openconfig_system::System_Openflow_Agent_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Openflow_Agent_Config* config);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Openflow.Agent)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Openflow_Agent_State* state_;
  ::openconfig::openconfig_system::System_Openflow_Agent_Config* config_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Openflow_AgentImpl();
};
// -------------------------------------------------------------------

class System_Openflow_Controllers_Controller_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Config) */ {
 public:
  System_Openflow_Controllers_Controller_Config();
  virtual ~System_Openflow_Controllers_Controller_Config();

  System_Openflow_Controllers_Controller_Config(const System_Openflow_Controllers_Controller_Config& from);

  inline System_Openflow_Controllers_Controller_Config& operator=(const System_Openflow_Controllers_Controller_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Openflow_Controllers_Controller_Config(System_Openflow_Controllers_Controller_Config&& from) noexcept
    : System_Openflow_Controllers_Controller_Config() {
    *this = ::std::move(from);
  }

  inline System_Openflow_Controllers_Controller_Config& operator=(System_Openflow_Controllers_Controller_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Openflow_Controllers_Controller_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Openflow_Controllers_Controller_Config* internal_default_instance() {
    return reinterpret_cast<const System_Openflow_Controllers_Controller_Config*>(
               &_System_Openflow_Controllers_Controller_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    125;

  void Swap(System_Openflow_Controllers_Controller_Config* other);
  friend void swap(System_Openflow_Controllers_Controller_Config& a, System_Openflow_Controllers_Controller_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Openflow_Controllers_Controller_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Openflow_Controllers_Controller_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Openflow_Controllers_Controller_Config& from);
  void MergeFrom(const System_Openflow_Controllers_Controller_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Openflow_Controllers_Controller_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue name = 68148217 [(.yext.schemapath) = "/system/openflow/controllers/controller/config/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 68148217;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* name_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Openflow_Controllers_Controller_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Openflow_Controllers_Controller_Connections_Connection_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config) */ {
 public:
  System_Openflow_Controllers_Controller_Connections_Connection_Config();
  virtual ~System_Openflow_Controllers_Controller_Connections_Connection_Config();

  System_Openflow_Controllers_Controller_Connections_Connection_Config(const System_Openflow_Controllers_Controller_Connections_Connection_Config& from);

  inline System_Openflow_Controllers_Controller_Connections_Connection_Config& operator=(const System_Openflow_Controllers_Controller_Connections_Connection_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Openflow_Controllers_Controller_Connections_Connection_Config(System_Openflow_Controllers_Controller_Connections_Connection_Config&& from) noexcept
    : System_Openflow_Controllers_Controller_Connections_Connection_Config() {
    *this = ::std::move(from);
  }

  inline System_Openflow_Controllers_Controller_Connections_Connection_Config& operator=(System_Openflow_Controllers_Controller_Connections_Connection_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Openflow_Controllers_Controller_Connections_Connection_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Openflow_Controllers_Controller_Connections_Connection_Config* internal_default_instance() {
    return reinterpret_cast<const System_Openflow_Controllers_Controller_Connections_Connection_Config*>(
               &_System_Openflow_Controllers_Controller_Connections_Connection_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    126;

  void Swap(System_Openflow_Controllers_Controller_Connections_Connection_Config* other);
  friend void swap(System_Openflow_Controllers_Controller_Connections_Connection_Config& a, System_Openflow_Controllers_Controller_Connections_Connection_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Openflow_Controllers_Controller_Connections_Connection_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Openflow_Controllers_Controller_Connections_Connection_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Openflow_Controllers_Controller_Connections_Connection_Config& from);
  void MergeFrom(const System_Openflow_Controllers_Controller_Connections_Connection_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Openflow_Controllers_Controller_Connections_Connection_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue aux_id = 120533297 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/config/aux-id"];
  bool has_aux_id() const;
  void clear_aux_id();
  static const int kAuxIdFieldNumber = 120533297;
  const ::ywrapper::UintValue& aux_id() const;
  ::ywrapper::UintValue* release_aux_id();
  ::ywrapper::UintValue* mutable_aux_id();
  void set_allocated_aux_id(::ywrapper::UintValue* aux_id);

  // .ywrapper.StringValue source_interface = 275006968 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/config/source-interface"];
  bool has_source_interface() const;
  void clear_source_interface();
  static const int kSourceInterfaceFieldNumber = 275006968;
  const ::ywrapper::StringValue& source_interface() const;
  ::ywrapper::StringValue* release_source_interface();
  ::ywrapper::StringValue* mutable_source_interface();
  void set_allocated_source_interface(::ywrapper::StringValue* source_interface);

  // .ywrapper.UintValue priority = 291559989 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/config/priority"];
  bool has_priority() const;
  void clear_priority();
  static const int kPriorityFieldNumber = 291559989;
  const ::ywrapper::UintValue& priority() const;
  ::ywrapper::UintValue* release_priority();
  ::ywrapper::UintValue* mutable_priority();
  void set_allocated_priority(::ywrapper::UintValue* priority);

  // .ywrapper.StringValue address = 308926615 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/config/address"];
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 308926615;
  const ::ywrapper::StringValue& address() const;
  ::ywrapper::StringValue* release_address();
  ::ywrapper::StringValue* mutable_address();
  void set_allocated_address(::ywrapper::StringValue* address);

  // .ywrapper.UintValue port = 391902688 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/config/port"];
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 391902688;
  const ::ywrapper::UintValue& port() const;
  ::ywrapper::UintValue* release_port();
  ::ywrapper::UintValue* mutable_port();
  void set_allocated_port(::ywrapper::UintValue* port);

  // .ywrapper.StringValue certificate_id = 405084556 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/config/certificate-id"];
  bool has_certificate_id() const;
  void clear_certificate_id();
  static const int kCertificateIdFieldNumber = 405084556;
  const ::ywrapper::StringValue& certificate_id() const;
  ::ywrapper::StringValue* release_certificate_id();
  ::ywrapper::StringValue* mutable_certificate_id();
  void set_allocated_certificate_id(::ywrapper::StringValue* certificate_id);

  // .openconfig.enums.OpenconfigOpenflowTransport transport = 438606924 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/config/transport"];
  void clear_transport();
  static const int kTransportFieldNumber = 438606924;
  ::openconfig::enums::OpenconfigOpenflowTransport transport() const;
  void set_transport(::openconfig::enums::OpenconfigOpenflowTransport value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* aux_id_;
  ::ywrapper::StringValue* source_interface_;
  ::ywrapper::UintValue* priority_;
  ::ywrapper::StringValue* address_;
  ::ywrapper::UintValue* port_;
  ::ywrapper::StringValue* certificate_id_;
  int transport_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Openflow_Controllers_Controller_Connections_Connection_ConfigImpl();
};
// -------------------------------------------------------------------

class System_Openflow_Controllers_Controller_Connections_Connection_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State) */ {
 public:
  System_Openflow_Controllers_Controller_Connections_Connection_State();
  virtual ~System_Openflow_Controllers_Controller_Connections_Connection_State();

  System_Openflow_Controllers_Controller_Connections_Connection_State(const System_Openflow_Controllers_Controller_Connections_Connection_State& from);

  inline System_Openflow_Controllers_Controller_Connections_Connection_State& operator=(const System_Openflow_Controllers_Controller_Connections_Connection_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Openflow_Controllers_Controller_Connections_Connection_State(System_Openflow_Controllers_Controller_Connections_Connection_State&& from) noexcept
    : System_Openflow_Controllers_Controller_Connections_Connection_State() {
    *this = ::std::move(from);
  }

  inline System_Openflow_Controllers_Controller_Connections_Connection_State& operator=(System_Openflow_Controllers_Controller_Connections_Connection_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Openflow_Controllers_Controller_Connections_Connection_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Openflow_Controllers_Controller_Connections_Connection_State* internal_default_instance() {
    return reinterpret_cast<const System_Openflow_Controllers_Controller_Connections_Connection_State*>(
               &_System_Openflow_Controllers_Controller_Connections_Connection_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    127;

  void Swap(System_Openflow_Controllers_Controller_Connections_Connection_State* other);
  friend void swap(System_Openflow_Controllers_Controller_Connections_Connection_State& a, System_Openflow_Controllers_Controller_Connections_Connection_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Openflow_Controllers_Controller_Connections_Connection_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Openflow_Controllers_Controller_Connections_Connection_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Openflow_Controllers_Controller_Connections_Connection_State& from);
  void MergeFrom(const System_Openflow_Controllers_Controller_Connections_Connection_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Openflow_Controllers_Controller_Connections_Connection_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue aux_id = 120157314 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/state/aux-id"];
  bool has_aux_id() const;
  void clear_aux_id();
  static const int kAuxIdFieldNumber = 120157314;
  const ::ywrapper::UintValue& aux_id() const;
  ::ywrapper::UintValue* release_aux_id();
  ::ywrapper::UintValue* mutable_aux_id();
  void set_allocated_aux_id(::ywrapper::UintValue* aux_id);

  // .ywrapper.StringValue certificate_id = 129910687 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/state/certificate-id"];
  bool has_certificate_id() const;
  void clear_certificate_id();
  static const int kCertificateIdFieldNumber = 129910687;
  const ::ywrapper::StringValue& certificate_id() const;
  ::ywrapper::StringValue* release_certificate_id();
  ::ywrapper::StringValue* mutable_certificate_id();
  void set_allocated_certificate_id(::ywrapper::StringValue* certificate_id);

  // .ywrapper.BoolValue connected = 195931019 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/state/connected"];
  bool has_connected() const;
  void clear_connected();
  static const int kConnectedFieldNumber = 195931019;
  const ::ywrapper::BoolValue& connected() const;
  ::ywrapper::BoolValue* release_connected();
  ::ywrapper::BoolValue* mutable_connected();
  void set_allocated_connected(::ywrapper::BoolValue* connected);

  // .ywrapper.StringValue source_interface = 274729247 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/state/source-interface"];
  bool has_source_interface() const;
  void clear_source_interface();
  static const int kSourceInterfaceFieldNumber = 274729247;
  const ::ywrapper::StringValue& source_interface() const;
  ::ywrapper::StringValue* release_source_interface();
  ::ywrapper::StringValue* mutable_source_interface();
  void set_allocated_source_interface(::ywrapper::StringValue* source_interface);

  // .ywrapper.UintValue port = 277237519 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/state/port"];
  bool has_port() const;
  void clear_port();
  static const int kPortFieldNumber = 277237519;
  const ::ywrapper::UintValue& port() const;
  ::ywrapper::UintValue* release_port();
  ::ywrapper::UintValue* mutable_port();
  void set_allocated_port(::ywrapper::UintValue* port);

  // .ywrapper.StringValue address = 342213662 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/state/address"];
  bool has_address() const;
  void clear_address();
  static const int kAddressFieldNumber = 342213662;
  const ::ywrapper::StringValue& address() const;
  ::ywrapper::StringValue* release_address();
  ::ywrapper::StringValue* mutable_address();
  void set_allocated_address(::ywrapper::StringValue* address);

  // .ywrapper.UintValue priority = 413676866 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/state/priority"];
  bool has_priority() const;
  void clear_priority();
  static const int kPriorityFieldNumber = 413676866;
  const ::ywrapper::UintValue& priority() const;
  ::ywrapper::UintValue* release_priority();
  ::ywrapper::UintValue* mutable_priority();
  void set_allocated_priority(::ywrapper::UintValue* priority);

  // .openconfig.enums.OpenconfigOpenflowTransport transport = 377206093 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/state/transport"];
  void clear_transport();
  static const int kTransportFieldNumber = 377206093;
  ::openconfig::enums::OpenconfigOpenflowTransport transport() const;
  void set_transport(::openconfig::enums::OpenconfigOpenflowTransport value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* aux_id_;
  ::ywrapper::StringValue* certificate_id_;
  ::ywrapper::BoolValue* connected_;
  ::ywrapper::StringValue* source_interface_;
  ::ywrapper::UintValue* port_;
  ::ywrapper::StringValue* address_;
  ::ywrapper::UintValue* priority_;
  int transport_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Openflow_Controllers_Controller_Connections_Connection_StateImpl();
};
// -------------------------------------------------------------------

class System_Openflow_Controllers_Controller_Connections_Connection : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection) */ {
 public:
  System_Openflow_Controllers_Controller_Connections_Connection();
  virtual ~System_Openflow_Controllers_Controller_Connections_Connection();

  System_Openflow_Controllers_Controller_Connections_Connection(const System_Openflow_Controllers_Controller_Connections_Connection& from);

  inline System_Openflow_Controllers_Controller_Connections_Connection& operator=(const System_Openflow_Controllers_Controller_Connections_Connection& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Openflow_Controllers_Controller_Connections_Connection(System_Openflow_Controllers_Controller_Connections_Connection&& from) noexcept
    : System_Openflow_Controllers_Controller_Connections_Connection() {
    *this = ::std::move(from);
  }

  inline System_Openflow_Controllers_Controller_Connections_Connection& operator=(System_Openflow_Controllers_Controller_Connections_Connection&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Openflow_Controllers_Controller_Connections_Connection& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Openflow_Controllers_Controller_Connections_Connection* internal_default_instance() {
    return reinterpret_cast<const System_Openflow_Controllers_Controller_Connections_Connection*>(
               &_System_Openflow_Controllers_Controller_Connections_Connection_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    128;

  void Swap(System_Openflow_Controllers_Controller_Connections_Connection* other);
  friend void swap(System_Openflow_Controllers_Controller_Connections_Connection& a, System_Openflow_Controllers_Controller_Connections_Connection& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Openflow_Controllers_Controller_Connections_Connection* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Openflow_Controllers_Controller_Connections_Connection* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Openflow_Controllers_Controller_Connections_Connection& from);
  void MergeFrom(const System_Openflow_Controllers_Controller_Connections_Connection& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Openflow_Controllers_Controller_Connections_Connection* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Openflow_Controllers_Controller_Connections_Connection_Config Config;
  typedef System_Openflow_Controllers_Controller_Connections_Connection_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config config = 317383494 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 317383494;
  const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection_Config& config() const;
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection_Config* release_config();
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection_Config* config);

  // .openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State state = 440162355 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 440162355;
  const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection_State& state() const;
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection_State* release_state();
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection_Config* config_;
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Openflow_Controllers_Controller_Connections_ConnectionImpl();
};
// -------------------------------------------------------------------

class System_Openflow_Controllers_Controller_Connections_ConnectionKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.ConnectionKey) */ {
 public:
  System_Openflow_Controllers_Controller_Connections_ConnectionKey();
  virtual ~System_Openflow_Controllers_Controller_Connections_ConnectionKey();

  System_Openflow_Controllers_Controller_Connections_ConnectionKey(const System_Openflow_Controllers_Controller_Connections_ConnectionKey& from);

  inline System_Openflow_Controllers_Controller_Connections_ConnectionKey& operator=(const System_Openflow_Controllers_Controller_Connections_ConnectionKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Openflow_Controllers_Controller_Connections_ConnectionKey(System_Openflow_Controllers_Controller_Connections_ConnectionKey&& from) noexcept
    : System_Openflow_Controllers_Controller_Connections_ConnectionKey() {
    *this = ::std::move(from);
  }

  inline System_Openflow_Controllers_Controller_Connections_ConnectionKey& operator=(System_Openflow_Controllers_Controller_Connections_ConnectionKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Openflow_Controllers_Controller_Connections_ConnectionKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Openflow_Controllers_Controller_Connections_ConnectionKey* internal_default_instance() {
    return reinterpret_cast<const System_Openflow_Controllers_Controller_Connections_ConnectionKey*>(
               &_System_Openflow_Controllers_Controller_Connections_ConnectionKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    129;

  void Swap(System_Openflow_Controllers_Controller_Connections_ConnectionKey* other);
  friend void swap(System_Openflow_Controllers_Controller_Connections_ConnectionKey& a, System_Openflow_Controllers_Controller_Connections_ConnectionKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Openflow_Controllers_Controller_Connections_ConnectionKey* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Openflow_Controllers_Controller_Connections_ConnectionKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Openflow_Controllers_Controller_Connections_ConnectionKey& from);
  void MergeFrom(const System_Openflow_Controllers_Controller_Connections_ConnectionKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Openflow_Controllers_Controller_Connections_ConnectionKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection connection = 2;
  bool has_connection() const;
  void clear_connection();
  static const int kConnectionFieldNumber = 2;
  const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection& connection() const;
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection* release_connection();
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection* mutable_connection();
  void set_allocated_connection(::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection* connection);

  // uint64 aux_id = 1 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/aux-id"];
  void clear_aux_id();
  static const int kAuxIdFieldNumber = 1;
  ::google::protobuf::uint64 aux_id() const;
  void set_aux_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.ConnectionKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection* connection_;
  ::google::protobuf::uint64 aux_id_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Openflow_Controllers_Controller_Connections_ConnectionKeyImpl();
};
// -------------------------------------------------------------------

class System_Openflow_Controllers_Controller_Connections : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections) */ {
 public:
  System_Openflow_Controllers_Controller_Connections();
  virtual ~System_Openflow_Controllers_Controller_Connections();

  System_Openflow_Controllers_Controller_Connections(const System_Openflow_Controllers_Controller_Connections& from);

  inline System_Openflow_Controllers_Controller_Connections& operator=(const System_Openflow_Controllers_Controller_Connections& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Openflow_Controllers_Controller_Connections(System_Openflow_Controllers_Controller_Connections&& from) noexcept
    : System_Openflow_Controllers_Controller_Connections() {
    *this = ::std::move(from);
  }

  inline System_Openflow_Controllers_Controller_Connections& operator=(System_Openflow_Controllers_Controller_Connections&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Openflow_Controllers_Controller_Connections& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Openflow_Controllers_Controller_Connections* internal_default_instance() {
    return reinterpret_cast<const System_Openflow_Controllers_Controller_Connections*>(
               &_System_Openflow_Controllers_Controller_Connections_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    130;

  void Swap(System_Openflow_Controllers_Controller_Connections* other);
  friend void swap(System_Openflow_Controllers_Controller_Connections& a, System_Openflow_Controllers_Controller_Connections& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Openflow_Controllers_Controller_Connections* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Openflow_Controllers_Controller_Connections* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Openflow_Controllers_Controller_Connections& from);
  void MergeFrom(const System_Openflow_Controllers_Controller_Connections& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Openflow_Controllers_Controller_Connections* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Openflow_Controllers_Controller_Connections_Connection Connection;
  typedef System_Openflow_Controllers_Controller_Connections_ConnectionKey ConnectionKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.ConnectionKey connection = 216691009 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection"];
  int connection_size() const;
  void clear_connection();
  static const int kConnectionFieldNumber = 216691009;
  const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_ConnectionKey& connection(int index) const;
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_ConnectionKey* mutable_connection(int index);
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_ConnectionKey* add_connection();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_ConnectionKey >*
      mutable_connection();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_ConnectionKey >&
      connection() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_ConnectionKey > connection_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Openflow_Controllers_Controller_ConnectionsImpl();
};
// -------------------------------------------------------------------

class System_Openflow_Controllers_Controller_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Openflow.Controllers.Controller.State) */ {
 public:
  System_Openflow_Controllers_Controller_State();
  virtual ~System_Openflow_Controllers_Controller_State();

  System_Openflow_Controllers_Controller_State(const System_Openflow_Controllers_Controller_State& from);

  inline System_Openflow_Controllers_Controller_State& operator=(const System_Openflow_Controllers_Controller_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Openflow_Controllers_Controller_State(System_Openflow_Controllers_Controller_State&& from) noexcept
    : System_Openflow_Controllers_Controller_State() {
    *this = ::std::move(from);
  }

  inline System_Openflow_Controllers_Controller_State& operator=(System_Openflow_Controllers_Controller_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Openflow_Controllers_Controller_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Openflow_Controllers_Controller_State* internal_default_instance() {
    return reinterpret_cast<const System_Openflow_Controllers_Controller_State*>(
               &_System_Openflow_Controllers_Controller_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    131;

  void Swap(System_Openflow_Controllers_Controller_State* other);
  friend void swap(System_Openflow_Controllers_Controller_State& a, System_Openflow_Controllers_Controller_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Openflow_Controllers_Controller_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Openflow_Controllers_Controller_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Openflow_Controllers_Controller_State& from);
  void MergeFrom(const System_Openflow_Controllers_Controller_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Openflow_Controllers_Controller_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue name = 412957472 [(.yext.schemapath) = "/system/openflow/controllers/controller/state/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 412957472;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Openflow.Controllers.Controller.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* name_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Openflow_Controllers_Controller_StateImpl();
};
// -------------------------------------------------------------------

class System_Openflow_Controllers_Controller : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Openflow.Controllers.Controller) */ {
 public:
  System_Openflow_Controllers_Controller();
  virtual ~System_Openflow_Controllers_Controller();

  System_Openflow_Controllers_Controller(const System_Openflow_Controllers_Controller& from);

  inline System_Openflow_Controllers_Controller& operator=(const System_Openflow_Controllers_Controller& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Openflow_Controllers_Controller(System_Openflow_Controllers_Controller&& from) noexcept
    : System_Openflow_Controllers_Controller() {
    *this = ::std::move(from);
  }

  inline System_Openflow_Controllers_Controller& operator=(System_Openflow_Controllers_Controller&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Openflow_Controllers_Controller& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Openflow_Controllers_Controller* internal_default_instance() {
    return reinterpret_cast<const System_Openflow_Controllers_Controller*>(
               &_System_Openflow_Controllers_Controller_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    132;

  void Swap(System_Openflow_Controllers_Controller* other);
  friend void swap(System_Openflow_Controllers_Controller& a, System_Openflow_Controllers_Controller& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Openflow_Controllers_Controller* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Openflow_Controllers_Controller* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Openflow_Controllers_Controller& from);
  void MergeFrom(const System_Openflow_Controllers_Controller& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Openflow_Controllers_Controller* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Openflow_Controllers_Controller_Config Config;
  typedef System_Openflow_Controllers_Controller_Connections Connections;
  typedef System_Openflow_Controllers_Controller_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Openflow.Controllers.Controller.Config config = 48549533 [(.yext.schemapath) = "/system/openflow/controllers/controller/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 48549533;
  const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Config& config() const;
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Config* release_config();
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Config* config);

  // .openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections connections = 216565066 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections"];
  bool has_connections() const;
  void clear_connections();
  static const int kConnectionsFieldNumber = 216565066;
  const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections& connections() const;
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections* release_connections();
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections* mutable_connections();
  void set_allocated_connections(::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections* connections);

  // .openconfig.openconfig_system.System.Openflow.Controllers.Controller.State state = 479997074 [(.yext.schemapath) = "/system/openflow/controllers/controller/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 479997074;
  const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_State& state() const;
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_State* release_state();
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Openflow_Controllers_Controller_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Openflow.Controllers.Controller)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Config* config_;
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections* connections_;
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Openflow_Controllers_ControllerImpl();
};
// -------------------------------------------------------------------

class System_Openflow_Controllers_ControllerKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Openflow.Controllers.ControllerKey) */ {
 public:
  System_Openflow_Controllers_ControllerKey();
  virtual ~System_Openflow_Controllers_ControllerKey();

  System_Openflow_Controllers_ControllerKey(const System_Openflow_Controllers_ControllerKey& from);

  inline System_Openflow_Controllers_ControllerKey& operator=(const System_Openflow_Controllers_ControllerKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Openflow_Controllers_ControllerKey(System_Openflow_Controllers_ControllerKey&& from) noexcept
    : System_Openflow_Controllers_ControllerKey() {
    *this = ::std::move(from);
  }

  inline System_Openflow_Controllers_ControllerKey& operator=(System_Openflow_Controllers_ControllerKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Openflow_Controllers_ControllerKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Openflow_Controllers_ControllerKey* internal_default_instance() {
    return reinterpret_cast<const System_Openflow_Controllers_ControllerKey*>(
               &_System_Openflow_Controllers_ControllerKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    133;

  void Swap(System_Openflow_Controllers_ControllerKey* other);
  friend void swap(System_Openflow_Controllers_ControllerKey& a, System_Openflow_Controllers_ControllerKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Openflow_Controllers_ControllerKey* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Openflow_Controllers_ControllerKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Openflow_Controllers_ControllerKey& from);
  void MergeFrom(const System_Openflow_Controllers_ControllerKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Openflow_Controllers_ControllerKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1 [(.yext.schemapath) = "/system/openflow/controllers/controller/name"];
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .openconfig.openconfig_system.System.Openflow.Controllers.Controller controller = 2;
  bool has_controller() const;
  void clear_controller();
  static const int kControllerFieldNumber = 2;
  const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller& controller() const;
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller* release_controller();
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller* mutable_controller();
  void set_allocated_controller(::openconfig::openconfig_system::System_Openflow_Controllers_Controller* controller);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Openflow.Controllers.ControllerKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller* controller_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Openflow_Controllers_ControllerKeyImpl();
};
// -------------------------------------------------------------------

class System_Openflow_Controllers : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Openflow.Controllers) */ {
 public:
  System_Openflow_Controllers();
  virtual ~System_Openflow_Controllers();

  System_Openflow_Controllers(const System_Openflow_Controllers& from);

  inline System_Openflow_Controllers& operator=(const System_Openflow_Controllers& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Openflow_Controllers(System_Openflow_Controllers&& from) noexcept
    : System_Openflow_Controllers() {
    *this = ::std::move(from);
  }

  inline System_Openflow_Controllers& operator=(System_Openflow_Controllers&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Openflow_Controllers& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Openflow_Controllers* internal_default_instance() {
    return reinterpret_cast<const System_Openflow_Controllers*>(
               &_System_Openflow_Controllers_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    134;

  void Swap(System_Openflow_Controllers* other);
  friend void swap(System_Openflow_Controllers& a, System_Openflow_Controllers& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Openflow_Controllers* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Openflow_Controllers* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Openflow_Controllers& from);
  void MergeFrom(const System_Openflow_Controllers& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Openflow_Controllers* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Openflow_Controllers_Controller Controller;
  typedef System_Openflow_Controllers_ControllerKey ControllerKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_system.System.Openflow.Controllers.ControllerKey controller = 445539224 [(.yext.schemapath) = "/system/openflow/controllers/controller"];
  int controller_size() const;
  void clear_controller();
  static const int kControllerFieldNumber = 445539224;
  const ::openconfig::openconfig_system::System_Openflow_Controllers_ControllerKey& controller(int index) const;
  ::openconfig::openconfig_system::System_Openflow_Controllers_ControllerKey* mutable_controller(int index);
  ::openconfig::openconfig_system::System_Openflow_Controllers_ControllerKey* add_controller();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Openflow_Controllers_ControllerKey >*
      mutable_controller();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Openflow_Controllers_ControllerKey >&
      controller() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Openflow.Controllers)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Openflow_Controllers_ControllerKey > controller_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Openflow_ControllersImpl();
};
// -------------------------------------------------------------------

class System_Openflow : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Openflow) */ {
 public:
  System_Openflow();
  virtual ~System_Openflow();

  System_Openflow(const System_Openflow& from);

  inline System_Openflow& operator=(const System_Openflow& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Openflow(System_Openflow&& from) noexcept
    : System_Openflow() {
    *this = ::std::move(from);
  }

  inline System_Openflow& operator=(System_Openflow&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Openflow& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Openflow* internal_default_instance() {
    return reinterpret_cast<const System_Openflow*>(
               &_System_Openflow_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    135;

  void Swap(System_Openflow* other);
  friend void swap(System_Openflow& a, System_Openflow& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Openflow* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Openflow* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Openflow& from);
  void MergeFrom(const System_Openflow& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Openflow* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Openflow_Agent Agent;
  typedef System_Openflow_Controllers Controllers;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Openflow.Agent agent = 35640369 [(.yext.schemapath) = "/system/openflow/agent"];
  bool has_agent() const;
  void clear_agent();
  static const int kAgentFieldNumber = 35640369;
  const ::openconfig::openconfig_system::System_Openflow_Agent& agent() const;
  ::openconfig::openconfig_system::System_Openflow_Agent* release_agent();
  ::openconfig::openconfig_system::System_Openflow_Agent* mutable_agent();
  void set_allocated_agent(::openconfig::openconfig_system::System_Openflow_Agent* agent);

  // .openconfig.openconfig_system.System.Openflow.Controllers controllers = 331082837 [(.yext.schemapath) = "/system/openflow/controllers"];
  bool has_controllers() const;
  void clear_controllers();
  static const int kControllersFieldNumber = 331082837;
  const ::openconfig::openconfig_system::System_Openflow_Controllers& controllers() const;
  ::openconfig::openconfig_system::System_Openflow_Controllers* release_controllers();
  ::openconfig::openconfig_system::System_Openflow_Controllers* mutable_controllers();
  void set_allocated_controllers(::openconfig::openconfig_system::System_Openflow_Controllers* controllers);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Openflow)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Openflow_Agent* agent_;
  ::openconfig::openconfig_system::System_Openflow_Controllers* controllers_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_OpenflowImpl();
};
// -------------------------------------------------------------------

class System_Processes_Process_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Processes.Process.State) */ {
 public:
  System_Processes_Process_State();
  virtual ~System_Processes_Process_State();

  System_Processes_Process_State(const System_Processes_Process_State& from);

  inline System_Processes_Process_State& operator=(const System_Processes_Process_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Processes_Process_State(System_Processes_Process_State&& from) noexcept
    : System_Processes_Process_State() {
    *this = ::std::move(from);
  }

  inline System_Processes_Process_State& operator=(System_Processes_Process_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Processes_Process_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Processes_Process_State* internal_default_instance() {
    return reinterpret_cast<const System_Processes_Process_State*>(
               &_System_Processes_Process_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    136;

  void Swap(System_Processes_Process_State* other);
  friend void swap(System_Processes_Process_State& a, System_Processes_Process_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Processes_Process_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Processes_Process_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Processes_Process_State& from);
  void MergeFrom(const System_Processes_Process_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Processes_Process_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ywrapper.StringValue args = 136113714 [(.yext.schemapath) = "/system/processes/process/state/args"];
  int args_size() const;
  void clear_args();
  static const int kArgsFieldNumber = 136113714;
  const ::ywrapper::StringValue& args(int index) const;
  ::ywrapper::StringValue* mutable_args(int index);
  ::ywrapper::StringValue* add_args();
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
      mutable_args();
  const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
      args() const;

  // .ywrapper.UintValue cpu_usage_user = 6624253 [(.yext.schemapath) = "/system/processes/process/state/cpu-usage-user"];
  bool has_cpu_usage_user() const;
  void clear_cpu_usage_user();
  static const int kCpuUsageUserFieldNumber = 6624253;
  const ::ywrapper::UintValue& cpu_usage_user() const;
  ::ywrapper::UintValue* release_cpu_usage_user();
  ::ywrapper::UintValue* mutable_cpu_usage_user();
  void set_allocated_cpu_usage_user(::ywrapper::UintValue* cpu_usage_user);

  // .ywrapper.UintValue memory_usage = 70248886 [(.yext.schemapath) = "/system/processes/process/state/memory-usage"];
  bool has_memory_usage() const;
  void clear_memory_usage();
  static const int kMemoryUsageFieldNumber = 70248886;
  const ::ywrapper::UintValue& memory_usage() const;
  ::ywrapper::UintValue* release_memory_usage();
  ::ywrapper::UintValue* mutable_memory_usage();
  void set_allocated_memory_usage(::ywrapper::UintValue* memory_usage);

  // .ywrapper.UintValue pid = 210942180 [(.yext.schemapath) = "/system/processes/process/state/pid"];
  bool has_pid() const;
  void clear_pid();
  static const int kPidFieldNumber = 210942180;
  const ::ywrapper::UintValue& pid() const;
  ::ywrapper::UintValue* release_pid();
  ::ywrapper::UintValue* mutable_pid();
  void set_allocated_pid(::ywrapper::UintValue* pid);

  // .ywrapper.UintValue cpu_usage_system = 221645263 [(.yext.schemapath) = "/system/processes/process/state/cpu-usage-system"];
  bool has_cpu_usage_system() const;
  void clear_cpu_usage_system();
  static const int kCpuUsageSystemFieldNumber = 221645263;
  const ::ywrapper::UintValue& cpu_usage_system() const;
  ::ywrapper::UintValue* release_cpu_usage_system();
  ::ywrapper::UintValue* mutable_cpu_usage_system();
  void set_allocated_cpu_usage_system(::ywrapper::UintValue* cpu_usage_system);

  // .ywrapper.StringValue name = 245651384 [(.yext.schemapath) = "/system/processes/process/state/name"];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 245651384;
  const ::ywrapper::StringValue& name() const;
  ::ywrapper::StringValue* release_name();
  ::ywrapper::StringValue* mutable_name();
  void set_allocated_name(::ywrapper::StringValue* name);

  // .ywrapper.UintValue memory_utilization = 283685455 [(.yext.schemapath) = "/system/processes/process/state/memory-utilization"];
  bool has_memory_utilization() const;
  void clear_memory_utilization();
  static const int kMemoryUtilizationFieldNumber = 283685455;
  const ::ywrapper::UintValue& memory_utilization() const;
  ::ywrapper::UintValue* release_memory_utilization();
  ::ywrapper::UintValue* mutable_memory_utilization();
  void set_allocated_memory_utilization(::ywrapper::UintValue* memory_utilization);

  // .ywrapper.UintValue start_time = 320727543 [(.yext.schemapath) = "/system/processes/process/state/start-time"];
  bool has_start_time() const;
  void clear_start_time();
  static const int kStartTimeFieldNumber = 320727543;
  const ::ywrapper::UintValue& start_time() const;
  ::ywrapper::UintValue* release_start_time();
  ::ywrapper::UintValue* mutable_start_time();
  void set_allocated_start_time(::ywrapper::UintValue* start_time);

  // .ywrapper.UintValue cpu_utilization = 346097790 [(.yext.schemapath) = "/system/processes/process/state/cpu-utilization"];
  bool has_cpu_utilization() const;
  void clear_cpu_utilization();
  static const int kCpuUtilizationFieldNumber = 346097790;
  const ::ywrapper::UintValue& cpu_utilization() const;
  ::ywrapper::UintValue* release_cpu_utilization();
  ::ywrapper::UintValue* mutable_cpu_utilization();
  void set_allocated_cpu_utilization(::ywrapper::UintValue* cpu_utilization);

  // .ywrapper.UintValue uptime = 480814421 [(.yext.schemapath) = "/system/processes/process/state/uptime"];
  bool has_uptime() const;
  void clear_uptime();
  static const int kUptimeFieldNumber = 480814421;
  const ::ywrapper::UintValue& uptime() const;
  ::ywrapper::UintValue* release_uptime();
  ::ywrapper::UintValue* mutable_uptime();
  void set_allocated_uptime(::ywrapper::UintValue* uptime);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Processes.Process.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue > args_;
  ::ywrapper::UintValue* cpu_usage_user_;
  ::ywrapper::UintValue* memory_usage_;
  ::ywrapper::UintValue* pid_;
  ::ywrapper::UintValue* cpu_usage_system_;
  ::ywrapper::StringValue* name_;
  ::ywrapper::UintValue* memory_utilization_;
  ::ywrapper::UintValue* start_time_;
  ::ywrapper::UintValue* cpu_utilization_;
  ::ywrapper::UintValue* uptime_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Processes_Process_StateImpl();
};
// -------------------------------------------------------------------

class System_Processes_Process : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Processes.Process) */ {
 public:
  System_Processes_Process();
  virtual ~System_Processes_Process();

  System_Processes_Process(const System_Processes_Process& from);

  inline System_Processes_Process& operator=(const System_Processes_Process& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Processes_Process(System_Processes_Process&& from) noexcept
    : System_Processes_Process() {
    *this = ::std::move(from);
  }

  inline System_Processes_Process& operator=(System_Processes_Process&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Processes_Process& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Processes_Process* internal_default_instance() {
    return reinterpret_cast<const System_Processes_Process*>(
               &_System_Processes_Process_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    137;

  void Swap(System_Processes_Process* other);
  friend void swap(System_Processes_Process& a, System_Processes_Process& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Processes_Process* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Processes_Process* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Processes_Process& from);
  void MergeFrom(const System_Processes_Process& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Processes_Process* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Processes_Process_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Processes.Process.State state = 393937770 [(.yext.schemapath) = "/system/processes/process/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 393937770;
  const ::openconfig::openconfig_system::System_Processes_Process_State& state() const;
  ::openconfig::openconfig_system::System_Processes_Process_State* release_state();
  ::openconfig::openconfig_system::System_Processes_Process_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_Processes_Process_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Processes.Process)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Processes_Process_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Processes_ProcessImpl();
};
// -------------------------------------------------------------------

class System_Processes_ProcessKey : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Processes.ProcessKey) */ {
 public:
  System_Processes_ProcessKey();
  virtual ~System_Processes_ProcessKey();

  System_Processes_ProcessKey(const System_Processes_ProcessKey& from);

  inline System_Processes_ProcessKey& operator=(const System_Processes_ProcessKey& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Processes_ProcessKey(System_Processes_ProcessKey&& from) noexcept
    : System_Processes_ProcessKey() {
    *this = ::std::move(from);
  }

  inline System_Processes_ProcessKey& operator=(System_Processes_ProcessKey&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Processes_ProcessKey& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Processes_ProcessKey* internal_default_instance() {
    return reinterpret_cast<const System_Processes_ProcessKey*>(
               &_System_Processes_ProcessKey_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    138;

  void Swap(System_Processes_ProcessKey* other);
  friend void swap(System_Processes_ProcessKey& a, System_Processes_ProcessKey& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Processes_ProcessKey* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Processes_ProcessKey* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Processes_ProcessKey& from);
  void MergeFrom(const System_Processes_ProcessKey& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Processes_ProcessKey* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.Processes.Process process = 2;
  bool has_process() const;
  void clear_process();
  static const int kProcessFieldNumber = 2;
  const ::openconfig::openconfig_system::System_Processes_Process& process() const;
  ::openconfig::openconfig_system::System_Processes_Process* release_process();
  ::openconfig::openconfig_system::System_Processes_Process* mutable_process();
  void set_allocated_process(::openconfig::openconfig_system::System_Processes_Process* process);

  // uint64 pid = 1 [(.yext.schemapath) = "/system/processes/process/pid"];
  void clear_pid();
  static const int kPidFieldNumber = 1;
  ::google::protobuf::uint64 pid() const;
  void set_pid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Processes.ProcessKey)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_Processes_Process* process_;
  ::google::protobuf::uint64 pid_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_Processes_ProcessKeyImpl();
};
// -------------------------------------------------------------------

class System_Processes : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.Processes) */ {
 public:
  System_Processes();
  virtual ~System_Processes();

  System_Processes(const System_Processes& from);

  inline System_Processes& operator=(const System_Processes& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_Processes(System_Processes&& from) noexcept
    : System_Processes() {
    *this = ::std::move(from);
  }

  inline System_Processes& operator=(System_Processes&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_Processes& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_Processes* internal_default_instance() {
    return reinterpret_cast<const System_Processes*>(
               &_System_Processes_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    139;

  void Swap(System_Processes* other);
  friend void swap(System_Processes& a, System_Processes& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_Processes* New() const PROTOBUF_FINAL { return New(NULL); }

  System_Processes* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_Processes& from);
  void MergeFrom(const System_Processes& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_Processes* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Processes_Process Process;
  typedef System_Processes_ProcessKey ProcessKey;

  // accessors -------------------------------------------------------

  // repeated .openconfig.openconfig_system.System.Processes.ProcessKey process = 8835840 [(.yext.schemapath) = "/system/processes/process"];
  int process_size() const;
  void clear_process();
  static const int kProcessFieldNumber = 8835840;
  const ::openconfig::openconfig_system::System_Processes_ProcessKey& process(int index) const;
  ::openconfig::openconfig_system::System_Processes_ProcessKey* mutable_process(int index);
  ::openconfig::openconfig_system::System_Processes_ProcessKey* add_process();
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Processes_ProcessKey >*
      mutable_process();
  const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Processes_ProcessKey >&
      process() const;

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.Processes)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Processes_ProcessKey > process_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_ProcessesImpl();
};
// -------------------------------------------------------------------

class System_SshServer_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.SshServer.Config) */ {
 public:
  System_SshServer_Config();
  virtual ~System_SshServer_Config();

  System_SshServer_Config(const System_SshServer_Config& from);

  inline System_SshServer_Config& operator=(const System_SshServer_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_SshServer_Config(System_SshServer_Config&& from) noexcept
    : System_SshServer_Config() {
    *this = ::std::move(from);
  }

  inline System_SshServer_Config& operator=(System_SshServer_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_SshServer_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_SshServer_Config* internal_default_instance() {
    return reinterpret_cast<const System_SshServer_Config*>(
               &_System_SshServer_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    140;

  void Swap(System_SshServer_Config* other);
  friend void swap(System_SshServer_Config& a, System_SshServer_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_SshServer_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_SshServer_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_SshServer_Config& from);
  void MergeFrom(const System_SshServer_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_SshServer_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_SshServer_Config_ProtocolVersion ProtocolVersion;
  static const ProtocolVersion PROTOCOLVERSION_V2 =
    System_SshServer_Config_ProtocolVersion_PROTOCOLVERSION_V2;
  static const ProtocolVersion PROTOCOLVERSION_V1 =
    System_SshServer_Config_ProtocolVersion_PROTOCOLVERSION_V1;
  static const ProtocolVersion PROTOCOLVERSION_V1_V2 =
    System_SshServer_Config_ProtocolVersion_PROTOCOLVERSION_V1_V2;
  static inline bool ProtocolVersion_IsValid(int value) {
    return System_SshServer_Config_ProtocolVersion_IsValid(value);
  }
  static const ProtocolVersion ProtocolVersion_MIN =
    System_SshServer_Config_ProtocolVersion_ProtocolVersion_MIN;
  static const ProtocolVersion ProtocolVersion_MAX =
    System_SshServer_Config_ProtocolVersion_ProtocolVersion_MAX;
  static const int ProtocolVersion_ARRAYSIZE =
    System_SshServer_Config_ProtocolVersion_ProtocolVersion_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ProtocolVersion_descriptor() {
    return System_SshServer_Config_ProtocolVersion_descriptor();
  }
  static inline const ::std::string& ProtocolVersion_Name(ProtocolVersion value) {
    return System_SshServer_Config_ProtocolVersion_Name(value);
  }
  static inline bool ProtocolVersion_Parse(const ::std::string& name,
      ProtocolVersion* value) {
    return System_SshServer_Config_ProtocolVersion_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue rate_limit = 194633841 [(.yext.schemapath) = "/system/ssh-server/config/rate-limit"];
  bool has_rate_limit() const;
  void clear_rate_limit();
  static const int kRateLimitFieldNumber = 194633841;
  const ::ywrapper::UintValue& rate_limit() const;
  ::ywrapper::UintValue* release_rate_limit();
  ::ywrapper::UintValue* mutable_rate_limit();
  void set_allocated_rate_limit(::ywrapper::UintValue* rate_limit);

  // .ywrapper.UintValue session_limit = 401851517 [(.yext.schemapath) = "/system/ssh-server/config/session-limit"];
  bool has_session_limit() const;
  void clear_session_limit();
  static const int kSessionLimitFieldNumber = 401851517;
  const ::ywrapper::UintValue& session_limit() const;
  ::ywrapper::UintValue* release_session_limit();
  ::ywrapper::UintValue* mutable_session_limit();
  void set_allocated_session_limit(::ywrapper::UintValue* session_limit);

  // .ywrapper.UintValue timeout = 447813214 [(.yext.schemapath) = "/system/ssh-server/config/timeout"];
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 447813214;
  const ::ywrapper::UintValue& timeout() const;
  ::ywrapper::UintValue* release_timeout();
  ::ywrapper::UintValue* mutable_timeout();
  void set_allocated_timeout(::ywrapper::UintValue* timeout);

  // .ywrapper.BoolValue enable = 475045872 [(.yext.schemapath) = "/system/ssh-server/config/enable"];
  bool has_enable() const;
  void clear_enable();
  static const int kEnableFieldNumber = 475045872;
  const ::ywrapper::BoolValue& enable() const;
  ::ywrapper::BoolValue* release_enable();
  ::ywrapper::BoolValue* mutable_enable();
  void set_allocated_enable(::ywrapper::BoolValue* enable);

  // .openconfig.openconfig_system.System.SshServer.Config.ProtocolVersion protocol_version = 334522130 [(.yext.schemapath) = "/system/ssh-server/config/protocol-version"];
  void clear_protocol_version();
  static const int kProtocolVersionFieldNumber = 334522130;
  ::openconfig::openconfig_system::System_SshServer_Config_ProtocolVersion protocol_version() const;
  void set_protocol_version(::openconfig::openconfig_system::System_SshServer_Config_ProtocolVersion value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.SshServer.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* rate_limit_;
  ::ywrapper::UintValue* session_limit_;
  ::ywrapper::UintValue* timeout_;
  ::ywrapper::BoolValue* enable_;
  int protocol_version_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_SshServer_ConfigImpl();
};
// -------------------------------------------------------------------

class System_SshServer_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.SshServer.State) */ {
 public:
  System_SshServer_State();
  virtual ~System_SshServer_State();

  System_SshServer_State(const System_SshServer_State& from);

  inline System_SshServer_State& operator=(const System_SshServer_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_SshServer_State(System_SshServer_State&& from) noexcept
    : System_SshServer_State() {
    *this = ::std::move(from);
  }

  inline System_SshServer_State& operator=(System_SshServer_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_SshServer_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_SshServer_State* internal_default_instance() {
    return reinterpret_cast<const System_SshServer_State*>(
               &_System_SshServer_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    141;

  void Swap(System_SshServer_State* other);
  friend void swap(System_SshServer_State& a, System_SshServer_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_SshServer_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_SshServer_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_SshServer_State& from);
  void MergeFrom(const System_SshServer_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_SshServer_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_SshServer_State_ProtocolVersion ProtocolVersion;
  static const ProtocolVersion PROTOCOLVERSION_V2 =
    System_SshServer_State_ProtocolVersion_PROTOCOLVERSION_V2;
  static const ProtocolVersion PROTOCOLVERSION_V1 =
    System_SshServer_State_ProtocolVersion_PROTOCOLVERSION_V1;
  static const ProtocolVersion PROTOCOLVERSION_V1_V2 =
    System_SshServer_State_ProtocolVersion_PROTOCOLVERSION_V1_V2;
  static inline bool ProtocolVersion_IsValid(int value) {
    return System_SshServer_State_ProtocolVersion_IsValid(value);
  }
  static const ProtocolVersion ProtocolVersion_MIN =
    System_SshServer_State_ProtocolVersion_ProtocolVersion_MIN;
  static const ProtocolVersion ProtocolVersion_MAX =
    System_SshServer_State_ProtocolVersion_ProtocolVersion_MAX;
  static const int ProtocolVersion_ARRAYSIZE =
    System_SshServer_State_ProtocolVersion_ProtocolVersion_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  ProtocolVersion_descriptor() {
    return System_SshServer_State_ProtocolVersion_descriptor();
  }
  static inline const ::std::string& ProtocolVersion_Name(ProtocolVersion value) {
    return System_SshServer_State_ProtocolVersion_Name(value);
  }
  static inline bool ProtocolVersion_Parse(const ::std::string& name,
      ProtocolVersion* value) {
    return System_SshServer_State_ProtocolVersion_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .ywrapper.BoolValue enable = 107574011 [(.yext.schemapath) = "/system/ssh-server/state/enable"];
  bool has_enable() const;
  void clear_enable();
  static const int kEnableFieldNumber = 107574011;
  const ::ywrapper::BoolValue& enable() const;
  ::ywrapper::BoolValue* release_enable();
  ::ywrapper::BoolValue* mutable_enable();
  void set_allocated_enable(::ywrapper::BoolValue* enable);

  // .ywrapper.UintValue timeout = 183732583 [(.yext.schemapath) = "/system/ssh-server/state/timeout"];
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 183732583;
  const ::ywrapper::UintValue& timeout() const;
  ::ywrapper::UintValue* release_timeout();
  ::ywrapper::UintValue* mutable_timeout();
  void set_allocated_timeout(::ywrapper::UintValue* timeout);

  // .ywrapper.UintValue session_limit = 301700896 [(.yext.schemapath) = "/system/ssh-server/state/session-limit"];
  bool has_session_limit() const;
  void clear_session_limit();
  static const int kSessionLimitFieldNumber = 301700896;
  const ::ywrapper::UintValue& session_limit() const;
  ::ywrapper::UintValue* release_session_limit();
  ::ywrapper::UintValue* mutable_session_limit();
  void set_allocated_session_limit(::ywrapper::UintValue* session_limit);

  // .ywrapper.UintValue rate_limit = 313289414 [(.yext.schemapath) = "/system/ssh-server/state/rate-limit"];
  bool has_rate_limit() const;
  void clear_rate_limit();
  static const int kRateLimitFieldNumber = 313289414;
  const ::ywrapper::UintValue& rate_limit() const;
  ::ywrapper::UintValue* release_rate_limit();
  ::ywrapper::UintValue* mutable_rate_limit();
  void set_allocated_rate_limit(::ywrapper::UintValue* rate_limit);

  // .openconfig.openconfig_system.System.SshServer.State.ProtocolVersion protocol_version = 420819557 [(.yext.schemapath) = "/system/ssh-server/state/protocol-version"];
  void clear_protocol_version();
  static const int kProtocolVersionFieldNumber = 420819557;
  ::openconfig::openconfig_system::System_SshServer_State_ProtocolVersion protocol_version() const;
  void set_protocol_version(::openconfig::openconfig_system::System_SshServer_State_ProtocolVersion value);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.SshServer.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::BoolValue* enable_;
  ::ywrapper::UintValue* timeout_;
  ::ywrapper::UintValue* session_limit_;
  ::ywrapper::UintValue* rate_limit_;
  int protocol_version_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_SshServer_StateImpl();
};
// -------------------------------------------------------------------

class System_SshServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.SshServer) */ {
 public:
  System_SshServer();
  virtual ~System_SshServer();

  System_SshServer(const System_SshServer& from);

  inline System_SshServer& operator=(const System_SshServer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_SshServer(System_SshServer&& from) noexcept
    : System_SshServer() {
    *this = ::std::move(from);
  }

  inline System_SshServer& operator=(System_SshServer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_SshServer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_SshServer* internal_default_instance() {
    return reinterpret_cast<const System_SshServer*>(
               &_System_SshServer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    142;

  void Swap(System_SshServer* other);
  friend void swap(System_SshServer& a, System_SshServer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_SshServer* New() const PROTOBUF_FINAL { return New(NULL); }

  System_SshServer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_SshServer& from);
  void MergeFrom(const System_SshServer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_SshServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_SshServer_Config Config;
  typedef System_SshServer_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.SshServer.Config config = 350686150 [(.yext.schemapath) = "/system/ssh-server/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 350686150;
  const ::openconfig::openconfig_system::System_SshServer_Config& config() const;
  ::openconfig::openconfig_system::System_SshServer_Config* release_config();
  ::openconfig::openconfig_system::System_SshServer_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_SshServer_Config* config);

  // .openconfig.openconfig_system.System.SshServer.State state = 380296627 [(.yext.schemapath) = "/system/ssh-server/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 380296627;
  const ::openconfig::openconfig_system::System_SshServer_State& state() const;
  ::openconfig::openconfig_system::System_SshServer_State* release_state();
  ::openconfig::openconfig_system::System_SshServer_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_SshServer_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.SshServer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_SshServer_Config* config_;
  ::openconfig::openconfig_system::System_SshServer_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_SshServerImpl();
};
// -------------------------------------------------------------------

class System_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.State) */ {
 public:
  System_State();
  virtual ~System_State();

  System_State(const System_State& from);

  inline System_State& operator=(const System_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_State(System_State&& from) noexcept
    : System_State() {
    *this = ::std::move(from);
  }

  inline System_State& operator=(System_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_State* internal_default_instance() {
    return reinterpret_cast<const System_State*>(
               &_System_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    143;

  void Swap(System_State* other);
  friend void swap(System_State& a, System_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_State& from);
  void MergeFrom(const System_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.StringValue current_datetime = 14846070 [(.yext.schemapath) = "/system/state/current-datetime"];
  bool has_current_datetime() const;
  void clear_current_datetime();
  static const int kCurrentDatetimeFieldNumber = 14846070;
  const ::ywrapper::StringValue& current_datetime() const;
  ::ywrapper::StringValue* release_current_datetime();
  ::ywrapper::StringValue* mutable_current_datetime();
  void set_allocated_current_datetime(::ywrapper::StringValue* current_datetime);

  // .ywrapper.UintValue boot_time = 174811281 [(.yext.schemapath) = "/system/state/boot-time"];
  bool has_boot_time() const;
  void clear_boot_time();
  static const int kBootTimeFieldNumber = 174811281;
  const ::ywrapper::UintValue& boot_time() const;
  ::ywrapper::UintValue* release_boot_time();
  ::ywrapper::UintValue* mutable_boot_time();
  void set_allocated_boot_time(::ywrapper::UintValue* boot_time);

  // .ywrapper.StringValue motd_banner = 264146320 [(.yext.schemapath) = "/system/state/motd-banner"];
  bool has_motd_banner() const;
  void clear_motd_banner();
  static const int kMotdBannerFieldNumber = 264146320;
  const ::ywrapper::StringValue& motd_banner() const;
  ::ywrapper::StringValue* release_motd_banner();
  ::ywrapper::StringValue* mutable_motd_banner();
  void set_allocated_motd_banner(::ywrapper::StringValue* motd_banner);

  // .ywrapper.StringValue domain_name = 325663011 [(.yext.schemapath) = "/system/state/domain-name"];
  bool has_domain_name() const;
  void clear_domain_name();
  static const int kDomainNameFieldNumber = 325663011;
  const ::ywrapper::StringValue& domain_name() const;
  ::ywrapper::StringValue* release_domain_name();
  ::ywrapper::StringValue* mutable_domain_name();
  void set_allocated_domain_name(::ywrapper::StringValue* domain_name);

  // .ywrapper.StringValue hostname = 381905486 [(.yext.schemapath) = "/system/state/hostname"];
  bool has_hostname() const;
  void clear_hostname();
  static const int kHostnameFieldNumber = 381905486;
  const ::ywrapper::StringValue& hostname() const;
  ::ywrapper::StringValue* release_hostname();
  ::ywrapper::StringValue* mutable_hostname();
  void set_allocated_hostname(::ywrapper::StringValue* hostname);

  // .ywrapper.StringValue login_banner = 441420887 [(.yext.schemapath) = "/system/state/login-banner"];
  bool has_login_banner() const;
  void clear_login_banner();
  static const int kLoginBannerFieldNumber = 441420887;
  const ::ywrapper::StringValue& login_banner() const;
  ::ywrapper::StringValue* release_login_banner();
  ::ywrapper::StringValue* mutable_login_banner();
  void set_allocated_login_banner(::ywrapper::StringValue* login_banner);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::StringValue* current_datetime_;
  ::ywrapper::UintValue* boot_time_;
  ::ywrapper::StringValue* motd_banner_;
  ::ywrapper::StringValue* domain_name_;
  ::ywrapper::StringValue* hostname_;
  ::ywrapper::StringValue* login_banner_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_StateImpl();
};
// -------------------------------------------------------------------

class System_TelnetServer_Config : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.TelnetServer.Config) */ {
 public:
  System_TelnetServer_Config();
  virtual ~System_TelnetServer_Config();

  System_TelnetServer_Config(const System_TelnetServer_Config& from);

  inline System_TelnetServer_Config& operator=(const System_TelnetServer_Config& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_TelnetServer_Config(System_TelnetServer_Config&& from) noexcept
    : System_TelnetServer_Config() {
    *this = ::std::move(from);
  }

  inline System_TelnetServer_Config& operator=(System_TelnetServer_Config&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_TelnetServer_Config& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_TelnetServer_Config* internal_default_instance() {
    return reinterpret_cast<const System_TelnetServer_Config*>(
               &_System_TelnetServer_Config_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    144;

  void Swap(System_TelnetServer_Config* other);
  friend void swap(System_TelnetServer_Config& a, System_TelnetServer_Config& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_TelnetServer_Config* New() const PROTOBUF_FINAL { return New(NULL); }

  System_TelnetServer_Config* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_TelnetServer_Config& from);
  void MergeFrom(const System_TelnetServer_Config& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_TelnetServer_Config* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.BoolValue enable = 131142084 [(.yext.schemapath) = "/system/telnet-server/config/enable"];
  bool has_enable() const;
  void clear_enable();
  static const int kEnableFieldNumber = 131142084;
  const ::ywrapper::BoolValue& enable() const;
  ::ywrapper::BoolValue* release_enable();
  ::ywrapper::BoolValue* mutable_enable();
  void set_allocated_enable(::ywrapper::BoolValue* enable);

  // .ywrapper.UintValue rate_limit = 174879637 [(.yext.schemapath) = "/system/telnet-server/config/rate-limit"];
  bool has_rate_limit() const;
  void clear_rate_limit();
  static const int kRateLimitFieldNumber = 174879637;
  const ::ywrapper::UintValue& rate_limit() const;
  ::ywrapper::UintValue* release_rate_limit();
  ::ywrapper::UintValue* mutable_rate_limit();
  void set_allocated_rate_limit(::ywrapper::UintValue* rate_limit);

  // .ywrapper.UintValue session_limit = 205487953 [(.yext.schemapath) = "/system/telnet-server/config/session-limit"];
  bool has_session_limit() const;
  void clear_session_limit();
  static const int kSessionLimitFieldNumber = 205487953;
  const ::ywrapper::UintValue& session_limit() const;
  ::ywrapper::UintValue* release_session_limit();
  ::ywrapper::UintValue* mutable_session_limit();
  void set_allocated_session_limit(::ywrapper::UintValue* session_limit);

  // .ywrapper.UintValue timeout = 360726298 [(.yext.schemapath) = "/system/telnet-server/config/timeout"];
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 360726298;
  const ::ywrapper::UintValue& timeout() const;
  ::ywrapper::UintValue* release_timeout();
  ::ywrapper::UintValue* mutable_timeout();
  void set_allocated_timeout(::ywrapper::UintValue* timeout);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.TelnetServer.Config)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::BoolValue* enable_;
  ::ywrapper::UintValue* rate_limit_;
  ::ywrapper::UintValue* session_limit_;
  ::ywrapper::UintValue* timeout_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_TelnetServer_ConfigImpl();
};
// -------------------------------------------------------------------

class System_TelnetServer_State : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.TelnetServer.State) */ {
 public:
  System_TelnetServer_State();
  virtual ~System_TelnetServer_State();

  System_TelnetServer_State(const System_TelnetServer_State& from);

  inline System_TelnetServer_State& operator=(const System_TelnetServer_State& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_TelnetServer_State(System_TelnetServer_State&& from) noexcept
    : System_TelnetServer_State() {
    *this = ::std::move(from);
  }

  inline System_TelnetServer_State& operator=(System_TelnetServer_State&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_TelnetServer_State& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_TelnetServer_State* internal_default_instance() {
    return reinterpret_cast<const System_TelnetServer_State*>(
               &_System_TelnetServer_State_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    145;

  void Swap(System_TelnetServer_State* other);
  friend void swap(System_TelnetServer_State& a, System_TelnetServer_State& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_TelnetServer_State* New() const PROTOBUF_FINAL { return New(NULL); }

  System_TelnetServer_State* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_TelnetServer_State& from);
  void MergeFrom(const System_TelnetServer_State& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_TelnetServer_State* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .ywrapper.UintValue timeout = 253730963 [(.yext.schemapath) = "/system/telnet-server/state/timeout"];
  bool has_timeout() const;
  void clear_timeout();
  static const int kTimeoutFieldNumber = 253730963;
  const ::ywrapper::UintValue& timeout() const;
  ::ywrapper::UintValue* release_timeout();
  ::ywrapper::UintValue* mutable_timeout();
  void set_allocated_timeout(::ywrapper::UintValue* timeout);

  // .ywrapper.BoolValue enable = 254591055 [(.yext.schemapath) = "/system/telnet-server/state/enable"];
  bool has_enable() const;
  void clear_enable();
  static const int kEnableFieldNumber = 254591055;
  const ::ywrapper::BoolValue& enable() const;
  ::ywrapper::BoolValue* release_enable();
  ::ywrapper::BoolValue* mutable_enable();
  void set_allocated_enable(::ywrapper::BoolValue* enable);

  // .ywrapper.UintValue rate_limit = 329011690 [(.yext.schemapath) = "/system/telnet-server/state/rate-limit"];
  bool has_rate_limit() const;
  void clear_rate_limit();
  static const int kRateLimitFieldNumber = 329011690;
  const ::ywrapper::UintValue& rate_limit() const;
  ::ywrapper::UintValue* release_rate_limit();
  ::ywrapper::UintValue* mutable_rate_limit();
  void set_allocated_rate_limit(::ywrapper::UintValue* rate_limit);

  // .ywrapper.UintValue session_limit = 405418532 [(.yext.schemapath) = "/system/telnet-server/state/session-limit"];
  bool has_session_limit() const;
  void clear_session_limit();
  static const int kSessionLimitFieldNumber = 405418532;
  const ::ywrapper::UintValue& session_limit() const;
  ::ywrapper::UintValue* release_session_limit();
  ::ywrapper::UintValue* mutable_session_limit();
  void set_allocated_session_limit(::ywrapper::UintValue* session_limit);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.TelnetServer.State)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::ywrapper::UintValue* timeout_;
  ::ywrapper::BoolValue* enable_;
  ::ywrapper::UintValue* rate_limit_;
  ::ywrapper::UintValue* session_limit_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_TelnetServer_StateImpl();
};
// -------------------------------------------------------------------

class System_TelnetServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System.TelnetServer) */ {
 public:
  System_TelnetServer();
  virtual ~System_TelnetServer();

  System_TelnetServer(const System_TelnetServer& from);

  inline System_TelnetServer& operator=(const System_TelnetServer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System_TelnetServer(System_TelnetServer&& from) noexcept
    : System_TelnetServer() {
    *this = ::std::move(from);
  }

  inline System_TelnetServer& operator=(System_TelnetServer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System_TelnetServer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System_TelnetServer* internal_default_instance() {
    return reinterpret_cast<const System_TelnetServer*>(
               &_System_TelnetServer_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    146;

  void Swap(System_TelnetServer* other);
  friend void swap(System_TelnetServer& a, System_TelnetServer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System_TelnetServer* New() const PROTOBUF_FINAL { return New(NULL); }

  System_TelnetServer* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System_TelnetServer& from);
  void MergeFrom(const System_TelnetServer& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System_TelnetServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_TelnetServer_Config Config;
  typedef System_TelnetServer_State State;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.TelnetServer.Config config = 267707402 [(.yext.schemapath) = "/system/telnet-server/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 267707402;
  const ::openconfig::openconfig_system::System_TelnetServer_Config& config() const;
  ::openconfig::openconfig_system::System_TelnetServer_Config* release_config();
  ::openconfig::openconfig_system::System_TelnetServer_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_TelnetServer_Config* config);

  // .openconfig.openconfig_system.System.TelnetServer.State state = 533556647 [(.yext.schemapath) = "/system/telnet-server/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 533556647;
  const ::openconfig::openconfig_system::System_TelnetServer_State& state() const;
  ::openconfig::openconfig_system::System_TelnetServer_State* release_state();
  ::openconfig::openconfig_system::System_TelnetServer_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_TelnetServer_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System.TelnetServer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_TelnetServer_Config* config_;
  ::openconfig::openconfig_system::System_TelnetServer_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystem_TelnetServerImpl();
};
// -------------------------------------------------------------------

class System : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:openconfig.openconfig_system.System) */ {
 public:
  System();
  virtual ~System();

  System(const System& from);

  inline System& operator=(const System& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  System(System&& from) noexcept
    : System() {
    *this = ::std::move(from);
  }

  inline System& operator=(System&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const System& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const System* internal_default_instance() {
    return reinterpret_cast<const System*>(
               &_System_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    147;

  void Swap(System* other);
  friend void swap(System& a, System& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline System* New() const PROTOBUF_FINAL { return New(NULL); }

  System* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const System& from);
  void MergeFrom(const System& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(System* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef System_Aaa Aaa;
  typedef System_Alarms Alarms;
  typedef System_Clock Clock;
  typedef System_Config Config;
  typedef System_Cpus Cpus;
  typedef System_Dns Dns;
  typedef System_Logging Logging;
  typedef System_Memory Memory;
  typedef System_Ntp Ntp;
  typedef System_Openflow Openflow;
  typedef System_Processes Processes;
  typedef System_SshServer SshServer;
  typedef System_State State;
  typedef System_TelnetServer TelnetServer;

  // accessors -------------------------------------------------------

  // .openconfig.openconfig_system.System.SshServer ssh_server = 92111553 [(.yext.schemapath) = "/system/ssh-server"];
  bool has_ssh_server() const;
  void clear_ssh_server();
  static const int kSshServerFieldNumber = 92111553;
  const ::openconfig::openconfig_system::System_SshServer& ssh_server() const;
  ::openconfig::openconfig_system::System_SshServer* release_ssh_server();
  ::openconfig::openconfig_system::System_SshServer* mutable_ssh_server();
  void set_allocated_ssh_server(::openconfig::openconfig_system::System_SshServer* ssh_server);

  // .openconfig.openconfig_system.System.Config config = 99961649 [(.yext.schemapath) = "/system/config"];
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 99961649;
  const ::openconfig::openconfig_system::System_Config& config() const;
  ::openconfig::openconfig_system::System_Config* release_config();
  ::openconfig::openconfig_system::System_Config* mutable_config();
  void set_allocated_config(::openconfig::openconfig_system::System_Config* config);

  // .openconfig.openconfig_system.System.Cpus cpus = 105197190 [(.yext.schemapath) = "/system/cpus"];
  bool has_cpus() const;
  void clear_cpus();
  static const int kCpusFieldNumber = 105197190;
  const ::openconfig::openconfig_system::System_Cpus& cpus() const;
  ::openconfig::openconfig_system::System_Cpus* release_cpus();
  ::openconfig::openconfig_system::System_Cpus* mutable_cpus();
  void set_allocated_cpus(::openconfig::openconfig_system::System_Cpus* cpus);

  // .openconfig.openconfig_system.System.Aaa aaa = 128178706 [(.yext.schemapath) = "/system/aaa"];
  bool has_aaa() const;
  void clear_aaa();
  static const int kAaaFieldNumber = 128178706;
  const ::openconfig::openconfig_system::System_Aaa& aaa() const;
  ::openconfig::openconfig_system::System_Aaa* release_aaa();
  ::openconfig::openconfig_system::System_Aaa* mutable_aaa();
  void set_allocated_aaa(::openconfig::openconfig_system::System_Aaa* aaa);

  // .openconfig.openconfig_system.System.Processes processes = 133979618 [(.yext.schemapath) = "/system/processes"];
  bool has_processes() const;
  void clear_processes();
  static const int kProcessesFieldNumber = 133979618;
  const ::openconfig::openconfig_system::System_Processes& processes() const;
  ::openconfig::openconfig_system::System_Processes* release_processes();
  ::openconfig::openconfig_system::System_Processes* mutable_processes();
  void set_allocated_processes(::openconfig::openconfig_system::System_Processes* processes);

  // .openconfig.openconfig_system.System.Logging logging = 147116502 [(.yext.schemapath) = "/system/logging"];
  bool has_logging() const;
  void clear_logging();
  static const int kLoggingFieldNumber = 147116502;
  const ::openconfig::openconfig_system::System_Logging& logging() const;
  ::openconfig::openconfig_system::System_Logging* release_logging();
  ::openconfig::openconfig_system::System_Logging* mutable_logging();
  void set_allocated_logging(::openconfig::openconfig_system::System_Logging* logging);

  // .openconfig.openconfig_system.System.Ntp ntp = 214492667 [(.yext.schemapath) = "/system/ntp"];
  bool has_ntp() const;
  void clear_ntp();
  static const int kNtpFieldNumber = 214492667;
  const ::openconfig::openconfig_system::System_Ntp& ntp() const;
  ::openconfig::openconfig_system::System_Ntp* release_ntp();
  ::openconfig::openconfig_system::System_Ntp* mutable_ntp();
  void set_allocated_ntp(::openconfig::openconfig_system::System_Ntp* ntp);

  // .openconfig.openconfig_system.System.Memory memory = 238855198 [(.yext.schemapath) = "/system/memory"];
  bool has_memory() const;
  void clear_memory();
  static const int kMemoryFieldNumber = 238855198;
  const ::openconfig::openconfig_system::System_Memory& memory() const;
  ::openconfig::openconfig_system::System_Memory* release_memory();
  ::openconfig::openconfig_system::System_Memory* mutable_memory();
  void set_allocated_memory(::openconfig::openconfig_system::System_Memory* memory);

  // .openconfig.openconfig_system.System.Clock clock = 298112203 [(.yext.schemapath) = "/system/clock"];
  bool has_clock() const;
  void clear_clock();
  static const int kClockFieldNumber = 298112203;
  const ::openconfig::openconfig_system::System_Clock& clock() const;
  ::openconfig::openconfig_system::System_Clock* release_clock();
  ::openconfig::openconfig_system::System_Clock* mutable_clock();
  void set_allocated_clock(::openconfig::openconfig_system::System_Clock* clock);

  // .openconfig.openconfig_system.System.Dns dns = 380694544 [(.yext.schemapath) = "/system/dns"];
  bool has_dns() const;
  void clear_dns();
  static const int kDnsFieldNumber = 380694544;
  const ::openconfig::openconfig_system::System_Dns& dns() const;
  ::openconfig::openconfig_system::System_Dns* release_dns();
  ::openconfig::openconfig_system::System_Dns* mutable_dns();
  void set_allocated_dns(::openconfig::openconfig_system::System_Dns* dns);

  // .openconfig.openconfig_system.System.Alarms alarms = 388714845 [(.yext.schemapath) = "/system/alarms"];
  bool has_alarms() const;
  void clear_alarms();
  static const int kAlarmsFieldNumber = 388714845;
  const ::openconfig::openconfig_system::System_Alarms& alarms() const;
  ::openconfig::openconfig_system::System_Alarms* release_alarms();
  ::openconfig::openconfig_system::System_Alarms* mutable_alarms();
  void set_allocated_alarms(::openconfig::openconfig_system::System_Alarms* alarms);

  // .openconfig.openconfig_system.System.TelnetServer telnet_server = 426646341 [(.yext.schemapath) = "/system/telnet-server"];
  bool has_telnet_server() const;
  void clear_telnet_server();
  static const int kTelnetServerFieldNumber = 426646341;
  const ::openconfig::openconfig_system::System_TelnetServer& telnet_server() const;
  ::openconfig::openconfig_system::System_TelnetServer* release_telnet_server();
  ::openconfig::openconfig_system::System_TelnetServer* mutable_telnet_server();
  void set_allocated_telnet_server(::openconfig::openconfig_system::System_TelnetServer* telnet_server);

  // .openconfig.openconfig_system.System.Openflow openflow = 471419951 [(.yext.schemapath) = "/system/openflow"];
  bool has_openflow() const;
  void clear_openflow();
  static const int kOpenflowFieldNumber = 471419951;
  const ::openconfig::openconfig_system::System_Openflow& openflow() const;
  ::openconfig::openconfig_system::System_Openflow* release_openflow();
  ::openconfig::openconfig_system::System_Openflow* mutable_openflow();
  void set_allocated_openflow(::openconfig::openconfig_system::System_Openflow* openflow);

  // .openconfig.openconfig_system.System.State state = 510750630 [(.yext.schemapath) = "/system/state"];
  bool has_state() const;
  void clear_state();
  static const int kStateFieldNumber = 510750630;
  const ::openconfig::openconfig_system::System_State& state() const;
  ::openconfig::openconfig_system::System_State* release_state();
  ::openconfig::openconfig_system::System_State* mutable_state();
  void set_allocated_state(::openconfig::openconfig_system::System_State* state);

  // @@protoc_insertion_point(class_scope:openconfig.openconfig_system.System)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::openconfig::openconfig_system::System_SshServer* ssh_server_;
  ::openconfig::openconfig_system::System_Config* config_;
  ::openconfig::openconfig_system::System_Cpus* cpus_;
  ::openconfig::openconfig_system::System_Aaa* aaa_;
  ::openconfig::openconfig_system::System_Processes* processes_;
  ::openconfig::openconfig_system::System_Logging* logging_;
  ::openconfig::openconfig_system::System_Ntp* ntp_;
  ::openconfig::openconfig_system::System_Memory* memory_;
  ::openconfig::openconfig_system::System_Clock* clock_;
  ::openconfig::openconfig_system::System_Dns* dns_;
  ::openconfig::openconfig_system::System_Alarms* alarms_;
  ::openconfig::openconfig_system::System_TelnetServer* telnet_server_;
  ::openconfig::openconfig_system::System_Openflow* openflow_;
  ::openconfig::openconfig_system::System_State* state_;
  mutable int _cached_size_;
  friend struct ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::TableStruct;
  friend void ::protobuf_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto::InitDefaultsSystemImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// System_Aaa_Accounting_Config_AccountingMethodUnion

// .openconfig.enums.OpenconfigAaaTypesAAAMETHODTYPE accounting_method_openconfigaaatypesaaamethodtype = 520228688;
inline void System_Aaa_Accounting_Config_AccountingMethodUnion::clear_accounting_method_openconfigaaatypesaaamethodtype() {
  accounting_method_openconfigaaatypesaaamethodtype_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE System_Aaa_Accounting_Config_AccountingMethodUnion::accounting_method_openconfigaaatypesaaamethodtype() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Accounting.Config.AccountingMethodUnion.accounting_method_openconfigaaatypesaaamethodtype)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE >(accounting_method_openconfigaaatypesaaamethodtype_);
}
inline void System_Aaa_Accounting_Config_AccountingMethodUnion::set_accounting_method_openconfigaaatypesaaamethodtype(::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE value) {
  
  accounting_method_openconfigaaatypesaaamethodtype_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Accounting.Config.AccountingMethodUnion.accounting_method_openconfigaaatypesaaamethodtype)
}

// string accounting_method_string = 308208143;
inline void System_Aaa_Accounting_Config_AccountingMethodUnion::clear_accounting_method_string() {
  accounting_method_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& System_Aaa_Accounting_Config_AccountingMethodUnion::accounting_method_string() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Accounting.Config.AccountingMethodUnion.accounting_method_string)
  return accounting_method_string_.GetNoArena();
}
inline void System_Aaa_Accounting_Config_AccountingMethodUnion::set_accounting_method_string(const ::std::string& value) {
  
  accounting_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Accounting.Config.AccountingMethodUnion.accounting_method_string)
}
#if LANG_CXX11
inline void System_Aaa_Accounting_Config_AccountingMethodUnion::set_accounting_method_string(::std::string&& value) {
  
  accounting_method_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_system.System.Aaa.Accounting.Config.AccountingMethodUnion.accounting_method_string)
}
#endif
inline void System_Aaa_Accounting_Config_AccountingMethodUnion::set_accounting_method_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  accounting_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_system.System.Aaa.Accounting.Config.AccountingMethodUnion.accounting_method_string)
}
inline void System_Aaa_Accounting_Config_AccountingMethodUnion::set_accounting_method_string(const char* value, size_t size) {
  
  accounting_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_system.System.Aaa.Accounting.Config.AccountingMethodUnion.accounting_method_string)
}
inline ::std::string* System_Aaa_Accounting_Config_AccountingMethodUnion::mutable_accounting_method_string() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Accounting.Config.AccountingMethodUnion.accounting_method_string)
  return accounting_method_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* System_Aaa_Accounting_Config_AccountingMethodUnion::release_accounting_method_string() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Accounting.Config.AccountingMethodUnion.accounting_method_string)
  
  return accounting_method_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void System_Aaa_Accounting_Config_AccountingMethodUnion::set_allocated_accounting_method_string(::std::string* accounting_method_string) {
  if (accounting_method_string != NULL) {
    
  } else {
    
  }
  accounting_method_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accounting_method_string);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Accounting.Config.AccountingMethodUnion.accounting_method_string)
}

// -------------------------------------------------------------------

// System_Aaa_Accounting_Config

// repeated .openconfig.openconfig_system.System.Aaa.Accounting.Config.AccountingMethodUnion accounting_method = 29748713 [(.yext.schemapath) = "/system/aaa/accounting/config/accounting-method"];
inline int System_Aaa_Accounting_Config::accounting_method_size() const {
  return accounting_method_.size();
}
inline void System_Aaa_Accounting_Config::clear_accounting_method() {
  accounting_method_.Clear();
}
inline const ::openconfig::openconfig_system::System_Aaa_Accounting_Config_AccountingMethodUnion& System_Aaa_Accounting_Config::accounting_method(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Accounting.Config.accounting_method)
  return accounting_method_.Get(index);
}
inline ::openconfig::openconfig_system::System_Aaa_Accounting_Config_AccountingMethodUnion* System_Aaa_Accounting_Config::mutable_accounting_method(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Accounting.Config.accounting_method)
  return accounting_method_.Mutable(index);
}
inline ::openconfig::openconfig_system::System_Aaa_Accounting_Config_AccountingMethodUnion* System_Aaa_Accounting_Config::add_accounting_method() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Aaa.Accounting.Config.accounting_method)
  return accounting_method_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Accounting_Config_AccountingMethodUnion >*
System_Aaa_Accounting_Config::mutable_accounting_method() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Aaa.Accounting.Config.accounting_method)
  return &accounting_method_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Accounting_Config_AccountingMethodUnion >&
System_Aaa_Accounting_Config::accounting_method() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Aaa.Accounting.Config.accounting_method)
  return accounting_method_;
}

// -------------------------------------------------------------------

// System_Aaa_Accounting_Events_Event_Config

// .openconfig.enums.OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE event_type = 31080482 [(.yext.schemapath) = "/system/aaa/accounting/events/event/config/event-type"];
inline void System_Aaa_Accounting_Events_Event_Config::clear_event_type() {
  event_type_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE System_Aaa_Accounting_Events_Event_Config::event_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.Config.event_type)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE >(event_type_);
}
inline void System_Aaa_Accounting_Events_Event_Config::set_event_type(::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE value) {
  
  event_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.Config.event_type)
}

// .openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.Config.Record record = 140048324 [(.yext.schemapath) = "/system/aaa/accounting/events/event/config/record"];
inline void System_Aaa_Accounting_Events_Event_Config::clear_record() {
  record_ = 0;
}
inline ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_Config_Record System_Aaa_Accounting_Events_Event_Config::record() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.Config.record)
  return static_cast< ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_Config_Record >(record_);
}
inline void System_Aaa_Accounting_Events_Event_Config::set_record(::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_Config_Record value) {
  
  record_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.Config.record)
}

// -------------------------------------------------------------------

// System_Aaa_Accounting_Events_Event_State

// .openconfig.enums.OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE event_type = 35039801 [(.yext.schemapath) = "/system/aaa/accounting/events/event/state/event-type"];
inline void System_Aaa_Accounting_Events_Event_State::clear_event_type() {
  event_type_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE System_Aaa_Accounting_Events_Event_State::event_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.State.event_type)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE >(event_type_);
}
inline void System_Aaa_Accounting_Events_Event_State::set_event_type(::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE value) {
  
  event_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.State.event_type)
}

// .openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.State.Record record = 502978155 [(.yext.schemapath) = "/system/aaa/accounting/events/event/state/record"];
inline void System_Aaa_Accounting_Events_Event_State::clear_record() {
  record_ = 0;
}
inline ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_State_Record System_Aaa_Accounting_Events_Event_State::record() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.State.record)
  return static_cast< ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_State_Record >(record_);
}
inline void System_Aaa_Accounting_Events_Event_State::set_record(::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_State_Record value) {
  
  record_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.State.record)
}

// -------------------------------------------------------------------

// System_Aaa_Accounting_Events_Event

// .openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.Config config = 285134520 [(.yext.schemapath) = "/system/aaa/accounting/events/event/config"];
inline bool System_Aaa_Accounting_Events_Event::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Aaa_Accounting_Events_Event::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_Config& System_Aaa_Accounting_Events_Event::config() const {
  const ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_Config*>(
      &::openconfig::openconfig_system::_System_Aaa_Accounting_Events_Event_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_Config* System_Aaa_Accounting_Events_Event::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.config)
  
  ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_Config* System_Aaa_Accounting_Events_Event::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.config)
  return config_;
}
inline void System_Aaa_Accounting_Events_Event::set_allocated_config(::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.config)
}

// .openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.State state = 229991121 [(.yext.schemapath) = "/system/aaa/accounting/events/event/state"];
inline bool System_Aaa_Accounting_Events_Event::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Aaa_Accounting_Events_Event::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_State& System_Aaa_Accounting_Events_Event::state() const {
  const ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_State*>(
      &::openconfig::openconfig_system::_System_Aaa_Accounting_Events_Event_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_State* System_Aaa_Accounting_Events_Event::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.state)
  
  ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_State* System_Aaa_Accounting_Events_Event::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.state)
  return state_;
}
inline void System_Aaa_Accounting_Events_Event::set_allocated_state(::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Accounting.Events.Event.state)
}

// -------------------------------------------------------------------

// System_Aaa_Accounting_Events_EventKey

// .openconfig.enums.OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE event_type = 1 [(.yext.schemapath) = "/system/aaa/accounting/events/event/event-type"];
inline void System_Aaa_Accounting_Events_EventKey::clear_event_type() {
  event_type_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE System_Aaa_Accounting_Events_EventKey::event_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Accounting.Events.EventKey.event_type)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE >(event_type_);
}
inline void System_Aaa_Accounting_Events_EventKey::set_event_type(::openconfig::enums::OpenconfigAaaTypesAAAACCOUNTINGEVENTTYPE value) {
  
  event_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Accounting.Events.EventKey.event_type)
}

// .openconfig.openconfig_system.System.Aaa.Accounting.Events.Event event = 2;
inline bool System_Aaa_Accounting_Events_EventKey::has_event() const {
  return this != internal_default_instance() && event_ != NULL;
}
inline void System_Aaa_Accounting_Events_EventKey::clear_event() {
  if (GetArenaNoVirtual() == NULL && event_ != NULL) {
    delete event_;
  }
  event_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event& System_Aaa_Accounting_Events_EventKey::event() const {
  const ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event* p = event_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Accounting.Events.EventKey.event)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event*>(
      &::openconfig::openconfig_system::_System_Aaa_Accounting_Events_Event_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event* System_Aaa_Accounting_Events_EventKey::release_event() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Accounting.Events.EventKey.event)
  
  ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event* temp = event_;
  event_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event* System_Aaa_Accounting_Events_EventKey::mutable_event() {
  
  if (event_ == NULL) {
    event_ = new ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Accounting.Events.EventKey.event)
  return event_;
}
inline void System_Aaa_Accounting_Events_EventKey::set_allocated_event(::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event* event) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete event_;
  }
  if (event) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event, submessage_arena);
    }
    
  } else {
    
  }
  event_ = event;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Accounting.Events.EventKey.event)
}

// -------------------------------------------------------------------

// System_Aaa_Accounting_Events

// repeated .openconfig.openconfig_system.System.Aaa.Accounting.Events.EventKey event = 76913831 [(.yext.schemapath) = "/system/aaa/accounting/events/event"];
inline int System_Aaa_Accounting_Events::event_size() const {
  return event_.size();
}
inline void System_Aaa_Accounting_Events::clear_event() {
  event_.Clear();
}
inline const ::openconfig::openconfig_system::System_Aaa_Accounting_Events_EventKey& System_Aaa_Accounting_Events::event(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Accounting.Events.event)
  return event_.Get(index);
}
inline ::openconfig::openconfig_system::System_Aaa_Accounting_Events_EventKey* System_Aaa_Accounting_Events::mutable_event(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Accounting.Events.event)
  return event_.Mutable(index);
}
inline ::openconfig::openconfig_system::System_Aaa_Accounting_Events_EventKey* System_Aaa_Accounting_Events::add_event() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Aaa.Accounting.Events.event)
  return event_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Accounting_Events_EventKey >*
System_Aaa_Accounting_Events::mutable_event() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Aaa.Accounting.Events.event)
  return &event_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Accounting_Events_EventKey >&
System_Aaa_Accounting_Events::event() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Aaa.Accounting.Events.event)
  return event_;
}

// -------------------------------------------------------------------

// System_Aaa_Accounting_State_AccountingMethodUnion

// .openconfig.enums.OpenconfigAaaTypesAAAMETHODTYPE accounting_method_openconfigaaatypesaaamethodtype = 397538795;
inline void System_Aaa_Accounting_State_AccountingMethodUnion::clear_accounting_method_openconfigaaatypesaaamethodtype() {
  accounting_method_openconfigaaatypesaaamethodtype_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE System_Aaa_Accounting_State_AccountingMethodUnion::accounting_method_openconfigaaatypesaaamethodtype() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Accounting.State.AccountingMethodUnion.accounting_method_openconfigaaatypesaaamethodtype)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE >(accounting_method_openconfigaaatypesaaamethodtype_);
}
inline void System_Aaa_Accounting_State_AccountingMethodUnion::set_accounting_method_openconfigaaatypesaaamethodtype(::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE value) {
  
  accounting_method_openconfigaaatypesaaamethodtype_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Accounting.State.AccountingMethodUnion.accounting_method_openconfigaaatypesaaamethodtype)
}

// string accounting_method_string = 398060102;
inline void System_Aaa_Accounting_State_AccountingMethodUnion::clear_accounting_method_string() {
  accounting_method_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& System_Aaa_Accounting_State_AccountingMethodUnion::accounting_method_string() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Accounting.State.AccountingMethodUnion.accounting_method_string)
  return accounting_method_string_.GetNoArena();
}
inline void System_Aaa_Accounting_State_AccountingMethodUnion::set_accounting_method_string(const ::std::string& value) {
  
  accounting_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Accounting.State.AccountingMethodUnion.accounting_method_string)
}
#if LANG_CXX11
inline void System_Aaa_Accounting_State_AccountingMethodUnion::set_accounting_method_string(::std::string&& value) {
  
  accounting_method_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_system.System.Aaa.Accounting.State.AccountingMethodUnion.accounting_method_string)
}
#endif
inline void System_Aaa_Accounting_State_AccountingMethodUnion::set_accounting_method_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  accounting_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_system.System.Aaa.Accounting.State.AccountingMethodUnion.accounting_method_string)
}
inline void System_Aaa_Accounting_State_AccountingMethodUnion::set_accounting_method_string(const char* value, size_t size) {
  
  accounting_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_system.System.Aaa.Accounting.State.AccountingMethodUnion.accounting_method_string)
}
inline ::std::string* System_Aaa_Accounting_State_AccountingMethodUnion::mutable_accounting_method_string() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Accounting.State.AccountingMethodUnion.accounting_method_string)
  return accounting_method_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* System_Aaa_Accounting_State_AccountingMethodUnion::release_accounting_method_string() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Accounting.State.AccountingMethodUnion.accounting_method_string)
  
  return accounting_method_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void System_Aaa_Accounting_State_AccountingMethodUnion::set_allocated_accounting_method_string(::std::string* accounting_method_string) {
  if (accounting_method_string != NULL) {
    
  } else {
    
  }
  accounting_method_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), accounting_method_string);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Accounting.State.AccountingMethodUnion.accounting_method_string)
}

// -------------------------------------------------------------------

// System_Aaa_Accounting_State

// repeated .openconfig.openconfig_system.System.Aaa.Accounting.State.AccountingMethodUnion accounting_method = 103028022 [(.yext.schemapath) = "/system/aaa/accounting/state/accounting-method"];
inline int System_Aaa_Accounting_State::accounting_method_size() const {
  return accounting_method_.size();
}
inline void System_Aaa_Accounting_State::clear_accounting_method() {
  accounting_method_.Clear();
}
inline const ::openconfig::openconfig_system::System_Aaa_Accounting_State_AccountingMethodUnion& System_Aaa_Accounting_State::accounting_method(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Accounting.State.accounting_method)
  return accounting_method_.Get(index);
}
inline ::openconfig::openconfig_system::System_Aaa_Accounting_State_AccountingMethodUnion* System_Aaa_Accounting_State::mutable_accounting_method(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Accounting.State.accounting_method)
  return accounting_method_.Mutable(index);
}
inline ::openconfig::openconfig_system::System_Aaa_Accounting_State_AccountingMethodUnion* System_Aaa_Accounting_State::add_accounting_method() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Aaa.Accounting.State.accounting_method)
  return accounting_method_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Accounting_State_AccountingMethodUnion >*
System_Aaa_Accounting_State::mutable_accounting_method() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Aaa.Accounting.State.accounting_method)
  return &accounting_method_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Accounting_State_AccountingMethodUnion >&
System_Aaa_Accounting_State::accounting_method() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Aaa.Accounting.State.accounting_method)
  return accounting_method_;
}

// -------------------------------------------------------------------

// System_Aaa_Accounting

// .openconfig.openconfig_system.System.Aaa.Accounting.Config config = 65960919 [(.yext.schemapath) = "/system/aaa/accounting/config"];
inline bool System_Aaa_Accounting::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Aaa_Accounting::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_Accounting_Config& System_Aaa_Accounting::config() const {
  const ::openconfig::openconfig_system::System_Aaa_Accounting_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Accounting.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_Accounting_Config*>(
      &::openconfig::openconfig_system::_System_Aaa_Accounting_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_Accounting_Config* System_Aaa_Accounting::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Accounting.config)
  
  ::openconfig::openconfig_system::System_Aaa_Accounting_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_Accounting_Config* System_Aaa_Accounting::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Aaa_Accounting_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Accounting.config)
  return config_;
}
inline void System_Aaa_Accounting::set_allocated_config(::openconfig::openconfig_system::System_Aaa_Accounting_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Accounting.config)
}

// .openconfig.openconfig_system.System.Aaa.Accounting.Events events = 254145510 [(.yext.schemapath) = "/system/aaa/accounting/events"];
inline bool System_Aaa_Accounting::has_events() const {
  return this != internal_default_instance() && events_ != NULL;
}
inline void System_Aaa_Accounting::clear_events() {
  if (GetArenaNoVirtual() == NULL && events_ != NULL) {
    delete events_;
  }
  events_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_Accounting_Events& System_Aaa_Accounting::events() const {
  const ::openconfig::openconfig_system::System_Aaa_Accounting_Events* p = events_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Accounting.events)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_Accounting_Events*>(
      &::openconfig::openconfig_system::_System_Aaa_Accounting_Events_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_Accounting_Events* System_Aaa_Accounting::release_events() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Accounting.events)
  
  ::openconfig::openconfig_system::System_Aaa_Accounting_Events* temp = events_;
  events_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_Accounting_Events* System_Aaa_Accounting::mutable_events() {
  
  if (events_ == NULL) {
    events_ = new ::openconfig::openconfig_system::System_Aaa_Accounting_Events;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Accounting.events)
  return events_;
}
inline void System_Aaa_Accounting::set_allocated_events(::openconfig::openconfig_system::System_Aaa_Accounting_Events* events) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete events_;
  }
  if (events) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      events = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, events, submessage_arena);
    }
    
  } else {
    
  }
  events_ = events;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Accounting.events)
}

// .openconfig.openconfig_system.System.Aaa.Accounting.State state = 158118280 [(.yext.schemapath) = "/system/aaa/accounting/state"];
inline bool System_Aaa_Accounting::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Aaa_Accounting::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_Accounting_State& System_Aaa_Accounting::state() const {
  const ::openconfig::openconfig_system::System_Aaa_Accounting_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Accounting.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_Accounting_State*>(
      &::openconfig::openconfig_system::_System_Aaa_Accounting_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_Accounting_State* System_Aaa_Accounting::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Accounting.state)
  
  ::openconfig::openconfig_system::System_Aaa_Accounting_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_Accounting_State* System_Aaa_Accounting::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Aaa_Accounting_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Accounting.state)
  return state_;
}
inline void System_Aaa_Accounting::set_allocated_state(::openconfig::openconfig_system::System_Aaa_Accounting_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Accounting.state)
}

// -------------------------------------------------------------------

// System_Aaa_Authentication_AdminUser_Config

// .ywrapper.StringValue admin_password = 17433386 [(.yext.schemapath) = "/system/aaa/authentication/admin-user/config/admin-password"];
inline bool System_Aaa_Authentication_AdminUser_Config::has_admin_password() const {
  return this != internal_default_instance() && admin_password_ != NULL;
}
inline const ::ywrapper::StringValue& System_Aaa_Authentication_AdminUser_Config::admin_password() const {
  const ::ywrapper::StringValue* p = admin_password_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.Config.admin_password)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Aaa_Authentication_AdminUser_Config::release_admin_password() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.Config.admin_password)
  
  ::ywrapper::StringValue* temp = admin_password_;
  admin_password_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Aaa_Authentication_AdminUser_Config::mutable_admin_password() {
  
  if (admin_password_ == NULL) {
    admin_password_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.Config.admin_password)
  return admin_password_;
}
inline void System_Aaa_Authentication_AdminUser_Config::set_allocated_admin_password(::ywrapper::StringValue* admin_password) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(admin_password_);
  }
  if (admin_password) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      admin_password = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, admin_password, submessage_arena);
    }
    
  } else {
    
  }
  admin_password_ = admin_password;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.Config.admin_password)
}

// .ywrapper.StringValue admin_password_hashed = 471791444 [(.yext.schemapath) = "/system/aaa/authentication/admin-user/config/admin-password-hashed"];
inline bool System_Aaa_Authentication_AdminUser_Config::has_admin_password_hashed() const {
  return this != internal_default_instance() && admin_password_hashed_ != NULL;
}
inline const ::ywrapper::StringValue& System_Aaa_Authentication_AdminUser_Config::admin_password_hashed() const {
  const ::ywrapper::StringValue* p = admin_password_hashed_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.Config.admin_password_hashed)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Aaa_Authentication_AdminUser_Config::release_admin_password_hashed() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.Config.admin_password_hashed)
  
  ::ywrapper::StringValue* temp = admin_password_hashed_;
  admin_password_hashed_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Aaa_Authentication_AdminUser_Config::mutable_admin_password_hashed() {
  
  if (admin_password_hashed_ == NULL) {
    admin_password_hashed_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.Config.admin_password_hashed)
  return admin_password_hashed_;
}
inline void System_Aaa_Authentication_AdminUser_Config::set_allocated_admin_password_hashed(::ywrapper::StringValue* admin_password_hashed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(admin_password_hashed_);
  }
  if (admin_password_hashed) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      admin_password_hashed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, admin_password_hashed, submessage_arena);
    }
    
  } else {
    
  }
  admin_password_hashed_ = admin_password_hashed;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.Config.admin_password_hashed)
}

// -------------------------------------------------------------------

// System_Aaa_Authentication_AdminUser_State

// .ywrapper.StringValue admin_password = 466907761 [(.yext.schemapath) = "/system/aaa/authentication/admin-user/state/admin-password"];
inline bool System_Aaa_Authentication_AdminUser_State::has_admin_password() const {
  return this != internal_default_instance() && admin_password_ != NULL;
}
inline const ::ywrapper::StringValue& System_Aaa_Authentication_AdminUser_State::admin_password() const {
  const ::ywrapper::StringValue* p = admin_password_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.State.admin_password)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Aaa_Authentication_AdminUser_State::release_admin_password() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.State.admin_password)
  
  ::ywrapper::StringValue* temp = admin_password_;
  admin_password_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Aaa_Authentication_AdminUser_State::mutable_admin_password() {
  
  if (admin_password_ == NULL) {
    admin_password_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.State.admin_password)
  return admin_password_;
}
inline void System_Aaa_Authentication_AdminUser_State::set_allocated_admin_password(::ywrapper::StringValue* admin_password) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(admin_password_);
  }
  if (admin_password) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      admin_password = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, admin_password, submessage_arena);
    }
    
  } else {
    
  }
  admin_password_ = admin_password;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.State.admin_password)
}

// .ywrapper.StringValue admin_password_hashed = 265524005 [(.yext.schemapath) = "/system/aaa/authentication/admin-user/state/admin-password-hashed"];
inline bool System_Aaa_Authentication_AdminUser_State::has_admin_password_hashed() const {
  return this != internal_default_instance() && admin_password_hashed_ != NULL;
}
inline const ::ywrapper::StringValue& System_Aaa_Authentication_AdminUser_State::admin_password_hashed() const {
  const ::ywrapper::StringValue* p = admin_password_hashed_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.State.admin_password_hashed)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Aaa_Authentication_AdminUser_State::release_admin_password_hashed() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.State.admin_password_hashed)
  
  ::ywrapper::StringValue* temp = admin_password_hashed_;
  admin_password_hashed_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Aaa_Authentication_AdminUser_State::mutable_admin_password_hashed() {
  
  if (admin_password_hashed_ == NULL) {
    admin_password_hashed_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.State.admin_password_hashed)
  return admin_password_hashed_;
}
inline void System_Aaa_Authentication_AdminUser_State::set_allocated_admin_password_hashed(::ywrapper::StringValue* admin_password_hashed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(admin_password_hashed_);
  }
  if (admin_password_hashed) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      admin_password_hashed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, admin_password_hashed, submessage_arena);
    }
    
  } else {
    
  }
  admin_password_hashed_ = admin_password_hashed;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.State.admin_password_hashed)
}

// .ywrapper.StringValue admin_username = 58771374 [(.yext.schemapath) = "/system/aaa/authentication/admin-user/state/admin-username"];
inline bool System_Aaa_Authentication_AdminUser_State::has_admin_username() const {
  return this != internal_default_instance() && admin_username_ != NULL;
}
inline const ::ywrapper::StringValue& System_Aaa_Authentication_AdminUser_State::admin_username() const {
  const ::ywrapper::StringValue* p = admin_username_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.State.admin_username)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Aaa_Authentication_AdminUser_State::release_admin_username() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.State.admin_username)
  
  ::ywrapper::StringValue* temp = admin_username_;
  admin_username_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Aaa_Authentication_AdminUser_State::mutable_admin_username() {
  
  if (admin_username_ == NULL) {
    admin_username_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.State.admin_username)
  return admin_username_;
}
inline void System_Aaa_Authentication_AdminUser_State::set_allocated_admin_username(::ywrapper::StringValue* admin_username) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(admin_username_);
  }
  if (admin_username) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      admin_username = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, admin_username, submessage_arena);
    }
    
  } else {
    
  }
  admin_username_ = admin_username;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.State.admin_username)
}

// -------------------------------------------------------------------

// System_Aaa_Authentication_AdminUser

// .openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.Config config = 37403324 [(.yext.schemapath) = "/system/aaa/authentication/admin-user/config"];
inline bool System_Aaa_Authentication_AdminUser::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Aaa_Authentication_AdminUser::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser_Config& System_Aaa_Authentication_AdminUser::config() const {
  const ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser_Config*>(
      &::openconfig::openconfig_system::_System_Aaa_Authentication_AdminUser_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser_Config* System_Aaa_Authentication_AdminUser::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.config)
  
  ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser_Config* System_Aaa_Authentication_AdminUser::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.config)
  return config_;
}
inline void System_Aaa_Authentication_AdminUser::set_allocated_config(::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.config)
}

// .openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.State state = 171383989 [(.yext.schemapath) = "/system/aaa/authentication/admin-user/state"];
inline bool System_Aaa_Authentication_AdminUser::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Aaa_Authentication_AdminUser::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser_State& System_Aaa_Authentication_AdminUser::state() const {
  const ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser_State*>(
      &::openconfig::openconfig_system::_System_Aaa_Authentication_AdminUser_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser_State* System_Aaa_Authentication_AdminUser::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.state)
  
  ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser_State* System_Aaa_Authentication_AdminUser::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.state)
  return state_;
}
inline void System_Aaa_Authentication_AdminUser::set_allocated_state(::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authentication.AdminUser.state)
}

// -------------------------------------------------------------------

// System_Aaa_Authentication_Config_AuthenticationMethodUnion

// .openconfig.enums.OpenconfigAaaTypesAAAMETHODTYPE authentication_method_openconfigaaatypesaaamethodtype = 512247800;
inline void System_Aaa_Authentication_Config_AuthenticationMethodUnion::clear_authentication_method_openconfigaaatypesaaamethodtype() {
  authentication_method_openconfigaaatypesaaamethodtype_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE System_Aaa_Authentication_Config_AuthenticationMethodUnion::authentication_method_openconfigaaatypesaaamethodtype() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.Config.AuthenticationMethodUnion.authentication_method_openconfigaaatypesaaamethodtype)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE >(authentication_method_openconfigaaatypesaaamethodtype_);
}
inline void System_Aaa_Authentication_Config_AuthenticationMethodUnion::set_authentication_method_openconfigaaatypesaaamethodtype(::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE value) {
  
  authentication_method_openconfigaaatypesaaamethodtype_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Authentication.Config.AuthenticationMethodUnion.authentication_method_openconfigaaatypesaaamethodtype)
}

// string authentication_method_string = 438459495;
inline void System_Aaa_Authentication_Config_AuthenticationMethodUnion::clear_authentication_method_string() {
  authentication_method_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& System_Aaa_Authentication_Config_AuthenticationMethodUnion::authentication_method_string() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.Config.AuthenticationMethodUnion.authentication_method_string)
  return authentication_method_string_.GetNoArena();
}
inline void System_Aaa_Authentication_Config_AuthenticationMethodUnion::set_authentication_method_string(const ::std::string& value) {
  
  authentication_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Authentication.Config.AuthenticationMethodUnion.authentication_method_string)
}
#if LANG_CXX11
inline void System_Aaa_Authentication_Config_AuthenticationMethodUnion::set_authentication_method_string(::std::string&& value) {
  
  authentication_method_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_system.System.Aaa.Authentication.Config.AuthenticationMethodUnion.authentication_method_string)
}
#endif
inline void System_Aaa_Authentication_Config_AuthenticationMethodUnion::set_authentication_method_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  authentication_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_system.System.Aaa.Authentication.Config.AuthenticationMethodUnion.authentication_method_string)
}
inline void System_Aaa_Authentication_Config_AuthenticationMethodUnion::set_authentication_method_string(const char* value, size_t size) {
  
  authentication_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_system.System.Aaa.Authentication.Config.AuthenticationMethodUnion.authentication_method_string)
}
inline ::std::string* System_Aaa_Authentication_Config_AuthenticationMethodUnion::mutable_authentication_method_string() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.Config.AuthenticationMethodUnion.authentication_method_string)
  return authentication_method_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* System_Aaa_Authentication_Config_AuthenticationMethodUnion::release_authentication_method_string() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authentication.Config.AuthenticationMethodUnion.authentication_method_string)
  
  return authentication_method_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void System_Aaa_Authentication_Config_AuthenticationMethodUnion::set_allocated_authentication_method_string(::std::string* authentication_method_string) {
  if (authentication_method_string != NULL) {
    
  } else {
    
  }
  authentication_method_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authentication_method_string);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authentication.Config.AuthenticationMethodUnion.authentication_method_string)
}

// -------------------------------------------------------------------

// System_Aaa_Authentication_Config

// repeated .openconfig.openconfig_system.System.Aaa.Authentication.Config.AuthenticationMethodUnion authentication_method = 38969025 [(.yext.schemapath) = "/system/aaa/authentication/config/authentication-method"];
inline int System_Aaa_Authentication_Config::authentication_method_size() const {
  return authentication_method_.size();
}
inline void System_Aaa_Authentication_Config::clear_authentication_method() {
  authentication_method_.Clear();
}
inline const ::openconfig::openconfig_system::System_Aaa_Authentication_Config_AuthenticationMethodUnion& System_Aaa_Authentication_Config::authentication_method(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.Config.authentication_method)
  return authentication_method_.Get(index);
}
inline ::openconfig::openconfig_system::System_Aaa_Authentication_Config_AuthenticationMethodUnion* System_Aaa_Authentication_Config::mutable_authentication_method(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.Config.authentication_method)
  return authentication_method_.Mutable(index);
}
inline ::openconfig::openconfig_system::System_Aaa_Authentication_Config_AuthenticationMethodUnion* System_Aaa_Authentication_Config::add_authentication_method() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Aaa.Authentication.Config.authentication_method)
  return authentication_method_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authentication_Config_AuthenticationMethodUnion >*
System_Aaa_Authentication_Config::mutable_authentication_method() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Aaa.Authentication.Config.authentication_method)
  return &authentication_method_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authentication_Config_AuthenticationMethodUnion >&
System_Aaa_Authentication_Config::authentication_method() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Aaa.Authentication.Config.authentication_method)
  return authentication_method_;
}

// -------------------------------------------------------------------

// System_Aaa_Authentication_State_AuthenticationMethodUnion

// .openconfig.enums.OpenconfigAaaTypesAAAMETHODTYPE authentication_method_openconfigaaatypesaaamethodtype = 300892437;
inline void System_Aaa_Authentication_State_AuthenticationMethodUnion::clear_authentication_method_openconfigaaatypesaaamethodtype() {
  authentication_method_openconfigaaatypesaaamethodtype_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE System_Aaa_Authentication_State_AuthenticationMethodUnion::authentication_method_openconfigaaatypesaaamethodtype() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.State.AuthenticationMethodUnion.authentication_method_openconfigaaatypesaaamethodtype)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE >(authentication_method_openconfigaaatypesaaamethodtype_);
}
inline void System_Aaa_Authentication_State_AuthenticationMethodUnion::set_authentication_method_openconfigaaatypesaaamethodtype(::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE value) {
  
  authentication_method_openconfigaaatypesaaamethodtype_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Authentication.State.AuthenticationMethodUnion.authentication_method_openconfigaaatypesaaamethodtype)
}

// string authentication_method_string = 398759016;
inline void System_Aaa_Authentication_State_AuthenticationMethodUnion::clear_authentication_method_string() {
  authentication_method_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& System_Aaa_Authentication_State_AuthenticationMethodUnion::authentication_method_string() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.State.AuthenticationMethodUnion.authentication_method_string)
  return authentication_method_string_.GetNoArena();
}
inline void System_Aaa_Authentication_State_AuthenticationMethodUnion::set_authentication_method_string(const ::std::string& value) {
  
  authentication_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Authentication.State.AuthenticationMethodUnion.authentication_method_string)
}
#if LANG_CXX11
inline void System_Aaa_Authentication_State_AuthenticationMethodUnion::set_authentication_method_string(::std::string&& value) {
  
  authentication_method_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_system.System.Aaa.Authentication.State.AuthenticationMethodUnion.authentication_method_string)
}
#endif
inline void System_Aaa_Authentication_State_AuthenticationMethodUnion::set_authentication_method_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  authentication_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_system.System.Aaa.Authentication.State.AuthenticationMethodUnion.authentication_method_string)
}
inline void System_Aaa_Authentication_State_AuthenticationMethodUnion::set_authentication_method_string(const char* value, size_t size) {
  
  authentication_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_system.System.Aaa.Authentication.State.AuthenticationMethodUnion.authentication_method_string)
}
inline ::std::string* System_Aaa_Authentication_State_AuthenticationMethodUnion::mutable_authentication_method_string() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.State.AuthenticationMethodUnion.authentication_method_string)
  return authentication_method_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* System_Aaa_Authentication_State_AuthenticationMethodUnion::release_authentication_method_string() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authentication.State.AuthenticationMethodUnion.authentication_method_string)
  
  return authentication_method_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void System_Aaa_Authentication_State_AuthenticationMethodUnion::set_allocated_authentication_method_string(::std::string* authentication_method_string) {
  if (authentication_method_string != NULL) {
    
  } else {
    
  }
  authentication_method_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authentication_method_string);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authentication.State.AuthenticationMethodUnion.authentication_method_string)
}

// -------------------------------------------------------------------

// System_Aaa_Authentication_State

// repeated .openconfig.openconfig_system.System.Aaa.Authentication.State.AuthenticationMethodUnion authentication_method = 177264392 [(.yext.schemapath) = "/system/aaa/authentication/state/authentication-method"];
inline int System_Aaa_Authentication_State::authentication_method_size() const {
  return authentication_method_.size();
}
inline void System_Aaa_Authentication_State::clear_authentication_method() {
  authentication_method_.Clear();
}
inline const ::openconfig::openconfig_system::System_Aaa_Authentication_State_AuthenticationMethodUnion& System_Aaa_Authentication_State::authentication_method(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.State.authentication_method)
  return authentication_method_.Get(index);
}
inline ::openconfig::openconfig_system::System_Aaa_Authentication_State_AuthenticationMethodUnion* System_Aaa_Authentication_State::mutable_authentication_method(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.State.authentication_method)
  return authentication_method_.Mutable(index);
}
inline ::openconfig::openconfig_system::System_Aaa_Authentication_State_AuthenticationMethodUnion* System_Aaa_Authentication_State::add_authentication_method() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Aaa.Authentication.State.authentication_method)
  return authentication_method_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authentication_State_AuthenticationMethodUnion >*
System_Aaa_Authentication_State::mutable_authentication_method() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Aaa.Authentication.State.authentication_method)
  return &authentication_method_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authentication_State_AuthenticationMethodUnion >&
System_Aaa_Authentication_State::authentication_method() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Aaa.Authentication.State.authentication_method)
  return authentication_method_;
}

// -------------------------------------------------------------------

// System_Aaa_Authentication_Users_User_Config

// .ywrapper.StringValue password = 140193929 [(.yext.schemapath) = "/system/aaa/authentication/users/user/config/password"];
inline bool System_Aaa_Authentication_Users_User_Config::has_password() const {
  return this != internal_default_instance() && password_ != NULL;
}
inline const ::ywrapper::StringValue& System_Aaa_Authentication_Users_User_Config::password() const {
  const ::ywrapper::StringValue* p = password_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.password)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Aaa_Authentication_Users_User_Config::release_password() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.password)
  
  ::ywrapper::StringValue* temp = password_;
  password_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Aaa_Authentication_Users_User_Config::mutable_password() {
  
  if (password_ == NULL) {
    password_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.password)
  return password_;
}
inline void System_Aaa_Authentication_Users_User_Config::set_allocated_password(::ywrapper::StringValue* password) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(password_);
  }
  if (password) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      password = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, password, submessage_arena);
    }
    
  } else {
    
  }
  password_ = password;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.password)
}

// .ywrapper.StringValue password_hashed = 439845341 [(.yext.schemapath) = "/system/aaa/authentication/users/user/config/password-hashed"];
inline bool System_Aaa_Authentication_Users_User_Config::has_password_hashed() const {
  return this != internal_default_instance() && password_hashed_ != NULL;
}
inline const ::ywrapper::StringValue& System_Aaa_Authentication_Users_User_Config::password_hashed() const {
  const ::ywrapper::StringValue* p = password_hashed_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.password_hashed)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Aaa_Authentication_Users_User_Config::release_password_hashed() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.password_hashed)
  
  ::ywrapper::StringValue* temp = password_hashed_;
  password_hashed_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Aaa_Authentication_Users_User_Config::mutable_password_hashed() {
  
  if (password_hashed_ == NULL) {
    password_hashed_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.password_hashed)
  return password_hashed_;
}
inline void System_Aaa_Authentication_Users_User_Config::set_allocated_password_hashed(::ywrapper::StringValue* password_hashed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(password_hashed_);
  }
  if (password_hashed) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      password_hashed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, password_hashed, submessage_arena);
    }
    
  } else {
    
  }
  password_hashed_ = password_hashed;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.password_hashed)
}

// .openconfig.enums.OpenconfigAaaTypesSYSTEMDEFINEDROLES role_openconfigaaatypessystemdefinedroles = 398783100;
inline bool System_Aaa_Authentication_Users_User_Config::has_role_openconfigaaatypessystemdefinedroles() const {
  return role_case() == kRoleOpenconfigaaatypessystemdefinedroles;
}
inline void System_Aaa_Authentication_Users_User_Config::set_has_role_openconfigaaatypessystemdefinedroles() {
  _oneof_case_[0] = kRoleOpenconfigaaatypessystemdefinedroles;
}
inline void System_Aaa_Authentication_Users_User_Config::clear_role_openconfigaaatypessystemdefinedroles() {
  if (has_role_openconfigaaatypessystemdefinedroles()) {
    role_.role_openconfigaaatypessystemdefinedroles_ = 0;
    clear_has_role();
  }
}
inline ::openconfig::enums::OpenconfigAaaTypesSYSTEMDEFINEDROLES System_Aaa_Authentication_Users_User_Config::role_openconfigaaatypessystemdefinedroles() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.role_openconfigaaatypessystemdefinedroles)
  if (has_role_openconfigaaatypessystemdefinedroles()) {
    return static_cast< ::openconfig::enums::OpenconfigAaaTypesSYSTEMDEFINEDROLES >(role_.role_openconfigaaatypessystemdefinedroles_);
  }
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesSYSTEMDEFINEDROLES >(0);
}
inline void System_Aaa_Authentication_Users_User_Config::set_role_openconfigaaatypessystemdefinedroles(::openconfig::enums::OpenconfigAaaTypesSYSTEMDEFINEDROLES value) {
  if (!has_role_openconfigaaatypessystemdefinedroles()) {
    clear_role();
    set_has_role_openconfigaaatypessystemdefinedroles();
  }
  role_.role_openconfigaaatypessystemdefinedroles_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.role_openconfigaaatypessystemdefinedroles)
}

// string role_string = 284966162;
inline bool System_Aaa_Authentication_Users_User_Config::has_role_string() const {
  return role_case() == kRoleString;
}
inline void System_Aaa_Authentication_Users_User_Config::set_has_role_string() {
  _oneof_case_[0] = kRoleString;
}
inline void System_Aaa_Authentication_Users_User_Config::clear_role_string() {
  if (has_role_string()) {
    role_.role_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_role();
  }
}
inline const ::std::string& System_Aaa_Authentication_Users_User_Config::role_string() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.role_string)
  if (has_role_string()) {
    return role_.role_string_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void System_Aaa_Authentication_Users_User_Config::set_role_string(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.role_string)
  if (!has_role_string()) {
    clear_role();
    set_has_role_string();
    role_.role_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  role_.role_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.role_string)
}
#if LANG_CXX11
inline void System_Aaa_Authentication_Users_User_Config::set_role_string(::std::string&& value) {
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.role_string)
  if (!has_role_string()) {
    clear_role();
    set_has_role_string();
    role_.role_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  role_.role_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.role_string)
}
#endif
inline void System_Aaa_Authentication_Users_User_Config::set_role_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_role_string()) {
    clear_role();
    set_has_role_string();
    role_.role_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  role_.role_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.role_string)
}
inline void System_Aaa_Authentication_Users_User_Config::set_role_string(const char* value, size_t size) {
  if (!has_role_string()) {
    clear_role();
    set_has_role_string();
    role_.role_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  role_.role_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.role_string)
}
inline ::std::string* System_Aaa_Authentication_Users_User_Config::mutable_role_string() {
  if (!has_role_string()) {
    clear_role();
    set_has_role_string();
    role_.role_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.role_string)
  return role_.role_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* System_Aaa_Authentication_Users_User_Config::release_role_string() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.role_string)
  if (has_role_string()) {
    clear_has_role();
    return role_.role_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void System_Aaa_Authentication_Users_User_Config::set_allocated_role_string(::std::string* role_string) {
  if (!has_role_string()) {
    role_.role_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_role();
  if (role_string != NULL) {
    set_has_role_string();
    role_.role_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        role_string);
  }
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.role_string)
}

// .ywrapper.StringValue ssh_key = 372550502 [(.yext.schemapath) = "/system/aaa/authentication/users/user/config/ssh-key"];
inline bool System_Aaa_Authentication_Users_User_Config::has_ssh_key() const {
  return this != internal_default_instance() && ssh_key_ != NULL;
}
inline const ::ywrapper::StringValue& System_Aaa_Authentication_Users_User_Config::ssh_key() const {
  const ::ywrapper::StringValue* p = ssh_key_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.ssh_key)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Aaa_Authentication_Users_User_Config::release_ssh_key() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.ssh_key)
  
  ::ywrapper::StringValue* temp = ssh_key_;
  ssh_key_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Aaa_Authentication_Users_User_Config::mutable_ssh_key() {
  
  if (ssh_key_ == NULL) {
    ssh_key_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.ssh_key)
  return ssh_key_;
}
inline void System_Aaa_Authentication_Users_User_Config::set_allocated_ssh_key(::ywrapper::StringValue* ssh_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ssh_key_);
  }
  if (ssh_key) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ssh_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ssh_key, submessage_arena);
    }
    
  } else {
    
  }
  ssh_key_ = ssh_key;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.ssh_key)
}

// .ywrapper.StringValue username = 46155670 [(.yext.schemapath) = "/system/aaa/authentication/users/user/config/username"];
inline bool System_Aaa_Authentication_Users_User_Config::has_username() const {
  return this != internal_default_instance() && username_ != NULL;
}
inline const ::ywrapper::StringValue& System_Aaa_Authentication_Users_User_Config::username() const {
  const ::ywrapper::StringValue* p = username_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.username)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Aaa_Authentication_Users_User_Config::release_username() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.username)
  
  ::ywrapper::StringValue* temp = username_;
  username_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Aaa_Authentication_Users_User_Config::mutable_username() {
  
  if (username_ == NULL) {
    username_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.username)
  return username_;
}
inline void System_Aaa_Authentication_Users_User_Config::set_allocated_username(::ywrapper::StringValue* username) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(username_);
  }
  if (username) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      username = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, username, submessage_arena);
    }
    
  } else {
    
  }
  username_ = username;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config.username)
}

inline bool System_Aaa_Authentication_Users_User_Config::has_role() const {
  return role_case() != ROLE_NOT_SET;
}
inline void System_Aaa_Authentication_Users_User_Config::clear_has_role() {
  _oneof_case_[0] = ROLE_NOT_SET;
}
inline System_Aaa_Authentication_Users_User_Config::RoleCase System_Aaa_Authentication_Users_User_Config::role_case() const {
  return System_Aaa_Authentication_Users_User_Config::RoleCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// System_Aaa_Authentication_Users_User_State

// .ywrapper.StringValue password = 85246016 [(.yext.schemapath) = "/system/aaa/authentication/users/user/state/password"];
inline bool System_Aaa_Authentication_Users_User_State::has_password() const {
  return this != internal_default_instance() && password_ != NULL;
}
inline const ::ywrapper::StringValue& System_Aaa_Authentication_Users_User_State::password() const {
  const ::ywrapper::StringValue* p = password_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.password)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Aaa_Authentication_Users_User_State::release_password() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.password)
  
  ::ywrapper::StringValue* temp = password_;
  password_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Aaa_Authentication_Users_User_State::mutable_password() {
  
  if (password_ == NULL) {
    password_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.password)
  return password_;
}
inline void System_Aaa_Authentication_Users_User_State::set_allocated_password(::ywrapper::StringValue* password) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(password_);
  }
  if (password) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      password = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, password, submessage_arena);
    }
    
  } else {
    
  }
  password_ = password;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.password)
}

// .ywrapper.StringValue password_hashed = 335276866 [(.yext.schemapath) = "/system/aaa/authentication/users/user/state/password-hashed"];
inline bool System_Aaa_Authentication_Users_User_State::has_password_hashed() const {
  return this != internal_default_instance() && password_hashed_ != NULL;
}
inline const ::ywrapper::StringValue& System_Aaa_Authentication_Users_User_State::password_hashed() const {
  const ::ywrapper::StringValue* p = password_hashed_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.password_hashed)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Aaa_Authentication_Users_User_State::release_password_hashed() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.password_hashed)
  
  ::ywrapper::StringValue* temp = password_hashed_;
  password_hashed_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Aaa_Authentication_Users_User_State::mutable_password_hashed() {
  
  if (password_hashed_ == NULL) {
    password_hashed_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.password_hashed)
  return password_hashed_;
}
inline void System_Aaa_Authentication_Users_User_State::set_allocated_password_hashed(::ywrapper::StringValue* password_hashed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(password_hashed_);
  }
  if (password_hashed) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      password_hashed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, password_hashed, submessage_arena);
    }
    
  } else {
    
  }
  password_hashed_ = password_hashed;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.password_hashed)
}

// .openconfig.enums.OpenconfigAaaTypesSYSTEMDEFINEDROLES role_openconfigaaatypessystemdefinedroles = 530122979;
inline bool System_Aaa_Authentication_Users_User_State::has_role_openconfigaaatypessystemdefinedroles() const {
  return role_case() == kRoleOpenconfigaaatypessystemdefinedroles;
}
inline void System_Aaa_Authentication_Users_User_State::set_has_role_openconfigaaatypessystemdefinedroles() {
  _oneof_case_[0] = kRoleOpenconfigaaatypessystemdefinedroles;
}
inline void System_Aaa_Authentication_Users_User_State::clear_role_openconfigaaatypessystemdefinedroles() {
  if (has_role_openconfigaaatypessystemdefinedroles()) {
    role_.role_openconfigaaatypessystemdefinedroles_ = 0;
    clear_has_role();
  }
}
inline ::openconfig::enums::OpenconfigAaaTypesSYSTEMDEFINEDROLES System_Aaa_Authentication_Users_User_State::role_openconfigaaatypessystemdefinedroles() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.role_openconfigaaatypessystemdefinedroles)
  if (has_role_openconfigaaatypessystemdefinedroles()) {
    return static_cast< ::openconfig::enums::OpenconfigAaaTypesSYSTEMDEFINEDROLES >(role_.role_openconfigaaatypessystemdefinedroles_);
  }
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesSYSTEMDEFINEDROLES >(0);
}
inline void System_Aaa_Authentication_Users_User_State::set_role_openconfigaaatypessystemdefinedroles(::openconfig::enums::OpenconfigAaaTypesSYSTEMDEFINEDROLES value) {
  if (!has_role_openconfigaaatypessystemdefinedroles()) {
    clear_role();
    set_has_role_openconfigaaatypessystemdefinedroles();
  }
  role_.role_openconfigaaatypessystemdefinedroles_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.role_openconfigaaatypessystemdefinedroles)
}

// string role_string = 161472625;
inline bool System_Aaa_Authentication_Users_User_State::has_role_string() const {
  return role_case() == kRoleString;
}
inline void System_Aaa_Authentication_Users_User_State::set_has_role_string() {
  _oneof_case_[0] = kRoleString;
}
inline void System_Aaa_Authentication_Users_User_State::clear_role_string() {
  if (has_role_string()) {
    role_.role_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_role();
  }
}
inline const ::std::string& System_Aaa_Authentication_Users_User_State::role_string() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.role_string)
  if (has_role_string()) {
    return role_.role_string_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void System_Aaa_Authentication_Users_User_State::set_role_string(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.role_string)
  if (!has_role_string()) {
    clear_role();
    set_has_role_string();
    role_.role_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  role_.role_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.role_string)
}
#if LANG_CXX11
inline void System_Aaa_Authentication_Users_User_State::set_role_string(::std::string&& value) {
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.role_string)
  if (!has_role_string()) {
    clear_role();
    set_has_role_string();
    role_.role_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  role_.role_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.role_string)
}
#endif
inline void System_Aaa_Authentication_Users_User_State::set_role_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_role_string()) {
    clear_role();
    set_has_role_string();
    role_.role_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  role_.role_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.role_string)
}
inline void System_Aaa_Authentication_Users_User_State::set_role_string(const char* value, size_t size) {
  if (!has_role_string()) {
    clear_role();
    set_has_role_string();
    role_.role_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  role_.role_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.role_string)
}
inline ::std::string* System_Aaa_Authentication_Users_User_State::mutable_role_string() {
  if (!has_role_string()) {
    clear_role();
    set_has_role_string();
    role_.role_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.role_string)
  return role_.role_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* System_Aaa_Authentication_Users_User_State::release_role_string() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.role_string)
  if (has_role_string()) {
    clear_has_role();
    return role_.role_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void System_Aaa_Authentication_Users_User_State::set_allocated_role_string(::std::string* role_string) {
  if (!has_role_string()) {
    role_.role_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_role();
  if (role_string != NULL) {
    set_has_role_string();
    role_.role_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        role_string);
  }
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.role_string)
}

// .ywrapper.StringValue ssh_key = 174493753 [(.yext.schemapath) = "/system/aaa/authentication/users/user/state/ssh-key"];
inline bool System_Aaa_Authentication_Users_User_State::has_ssh_key() const {
  return this != internal_default_instance() && ssh_key_ != NULL;
}
inline const ::ywrapper::StringValue& System_Aaa_Authentication_Users_User_State::ssh_key() const {
  const ::ywrapper::StringValue* p = ssh_key_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.ssh_key)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Aaa_Authentication_Users_User_State::release_ssh_key() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.ssh_key)
  
  ::ywrapper::StringValue* temp = ssh_key_;
  ssh_key_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Aaa_Authentication_Users_User_State::mutable_ssh_key() {
  
  if (ssh_key_ == NULL) {
    ssh_key_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.ssh_key)
  return ssh_key_;
}
inline void System_Aaa_Authentication_Users_User_State::set_allocated_ssh_key(::ywrapper::StringValue* ssh_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ssh_key_);
  }
  if (ssh_key) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ssh_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ssh_key, submessage_arena);
    }
    
  } else {
    
  }
  ssh_key_ = ssh_key;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.ssh_key)
}

// .ywrapper.StringValue username = 529155339 [(.yext.schemapath) = "/system/aaa/authentication/users/user/state/username"];
inline bool System_Aaa_Authentication_Users_User_State::has_username() const {
  return this != internal_default_instance() && username_ != NULL;
}
inline const ::ywrapper::StringValue& System_Aaa_Authentication_Users_User_State::username() const {
  const ::ywrapper::StringValue* p = username_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.username)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Aaa_Authentication_Users_User_State::release_username() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.username)
  
  ::ywrapper::StringValue* temp = username_;
  username_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Aaa_Authentication_Users_User_State::mutable_username() {
  
  if (username_ == NULL) {
    username_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.username)
  return username_;
}
inline void System_Aaa_Authentication_Users_User_State::set_allocated_username(::ywrapper::StringValue* username) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(username_);
  }
  if (username) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      username = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, username, submessage_arena);
    }
    
  } else {
    
  }
  username_ = username;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State.username)
}

inline bool System_Aaa_Authentication_Users_User_State::has_role() const {
  return role_case() != ROLE_NOT_SET;
}
inline void System_Aaa_Authentication_Users_User_State::clear_has_role() {
  _oneof_case_[0] = ROLE_NOT_SET;
}
inline System_Aaa_Authentication_Users_User_State::RoleCase System_Aaa_Authentication_Users_User_State::role_case() const {
  return System_Aaa_Authentication_Users_User_State::RoleCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// System_Aaa_Authentication_Users_User

// .openconfig.openconfig_system.System.Aaa.Authentication.Users.User.Config config = 298787471 [(.yext.schemapath) = "/system/aaa/authentication/users/user/config"];
inline bool System_Aaa_Authentication_Users_User::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Aaa_Authentication_Users_User::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User_Config& System_Aaa_Authentication_Users_User::config() const {
  const ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User_Config*>(
      &::openconfig::openconfig_system::_System_Aaa_Authentication_Users_User_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User_Config* System_Aaa_Authentication_Users_User::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.config)
  
  ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User_Config* System_Aaa_Authentication_Users_User::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.config)
  return config_;
}
inline void System_Aaa_Authentication_Users_User::set_allocated_config(::openconfig::openconfig_system::System_Aaa_Authentication_Users_User_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.config)
}

// .openconfig.openconfig_system.System.Aaa.Authentication.Users.User.State state = 285421696 [(.yext.schemapath) = "/system/aaa/authentication/users/user/state"];
inline bool System_Aaa_Authentication_Users_User::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Aaa_Authentication_Users_User::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User_State& System_Aaa_Authentication_Users_User::state() const {
  const ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User_State*>(
      &::openconfig::openconfig_system::_System_Aaa_Authentication_Users_User_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User_State* System_Aaa_Authentication_Users_User::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.state)
  
  ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User_State* System_Aaa_Authentication_Users_User::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.state)
  return state_;
}
inline void System_Aaa_Authentication_Users_User::set_allocated_state(::openconfig::openconfig_system::System_Aaa_Authentication_Users_User_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authentication.Users.User.state)
}

// -------------------------------------------------------------------

// System_Aaa_Authentication_Users_UserKey

// string username = 1 [(.yext.schemapath) = "/system/aaa/authentication/users/user/username"];
inline void System_Aaa_Authentication_Users_UserKey::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& System_Aaa_Authentication_Users_UserKey::username() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.Users.UserKey.username)
  return username_.GetNoArena();
}
inline void System_Aaa_Authentication_Users_UserKey::set_username(const ::std::string& value) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Authentication.Users.UserKey.username)
}
#if LANG_CXX11
inline void System_Aaa_Authentication_Users_UserKey::set_username(::std::string&& value) {
  
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_system.System.Aaa.Authentication.Users.UserKey.username)
}
#endif
inline void System_Aaa_Authentication_Users_UserKey::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_system.System.Aaa.Authentication.Users.UserKey.username)
}
inline void System_Aaa_Authentication_Users_UserKey::set_username(const char* value, size_t size) {
  
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_system.System.Aaa.Authentication.Users.UserKey.username)
}
inline ::std::string* System_Aaa_Authentication_Users_UserKey::mutable_username() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.Users.UserKey.username)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* System_Aaa_Authentication_Users_UserKey::release_username() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authentication.Users.UserKey.username)
  
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void System_Aaa_Authentication_Users_UserKey::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    
  } else {
    
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authentication.Users.UserKey.username)
}

// .openconfig.openconfig_system.System.Aaa.Authentication.Users.User user = 2;
inline bool System_Aaa_Authentication_Users_UserKey::has_user() const {
  return this != internal_default_instance() && user_ != NULL;
}
inline void System_Aaa_Authentication_Users_UserKey::clear_user() {
  if (GetArenaNoVirtual() == NULL && user_ != NULL) {
    delete user_;
  }
  user_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User& System_Aaa_Authentication_Users_UserKey::user() const {
  const ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User* p = user_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.Users.UserKey.user)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User*>(
      &::openconfig::openconfig_system::_System_Aaa_Authentication_Users_User_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User* System_Aaa_Authentication_Users_UserKey::release_user() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authentication.Users.UserKey.user)
  
  ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User* temp = user_;
  user_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User* System_Aaa_Authentication_Users_UserKey::mutable_user() {
  
  if (user_ == NULL) {
    user_ = new ::openconfig::openconfig_system::System_Aaa_Authentication_Users_User;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.Users.UserKey.user)
  return user_;
}
inline void System_Aaa_Authentication_Users_UserKey::set_allocated_user(::openconfig::openconfig_system::System_Aaa_Authentication_Users_User* user) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete user_;
  }
  if (user) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      user = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user, submessage_arena);
    }
    
  } else {
    
  }
  user_ = user;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authentication.Users.UserKey.user)
}

// -------------------------------------------------------------------

// System_Aaa_Authentication_Users

// repeated .openconfig.openconfig_system.System.Aaa.Authentication.Users.UserKey user = 344997694 [(.yext.schemapath) = "/system/aaa/authentication/users/user"];
inline int System_Aaa_Authentication_Users::user_size() const {
  return user_.size();
}
inline void System_Aaa_Authentication_Users::clear_user() {
  user_.Clear();
}
inline const ::openconfig::openconfig_system::System_Aaa_Authentication_Users_UserKey& System_Aaa_Authentication_Users::user(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.Users.user)
  return user_.Get(index);
}
inline ::openconfig::openconfig_system::System_Aaa_Authentication_Users_UserKey* System_Aaa_Authentication_Users::mutable_user(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.Users.user)
  return user_.Mutable(index);
}
inline ::openconfig::openconfig_system::System_Aaa_Authentication_Users_UserKey* System_Aaa_Authentication_Users::add_user() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Aaa.Authentication.Users.user)
  return user_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authentication_Users_UserKey >*
System_Aaa_Authentication_Users::mutable_user() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Aaa.Authentication.Users.user)
  return &user_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authentication_Users_UserKey >&
System_Aaa_Authentication_Users::user() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Aaa.Authentication.Users.user)
  return user_;
}

// -------------------------------------------------------------------

// System_Aaa_Authentication

// .openconfig.openconfig_system.System.Aaa.Authentication.AdminUser admin_user = 322829291 [(.yext.schemapath) = "/system/aaa/authentication/admin-user"];
inline bool System_Aaa_Authentication::has_admin_user() const {
  return this != internal_default_instance() && admin_user_ != NULL;
}
inline void System_Aaa_Authentication::clear_admin_user() {
  if (GetArenaNoVirtual() == NULL && admin_user_ != NULL) {
    delete admin_user_;
  }
  admin_user_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser& System_Aaa_Authentication::admin_user() const {
  const ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser* p = admin_user_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.admin_user)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser*>(
      &::openconfig::openconfig_system::_System_Aaa_Authentication_AdminUser_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser* System_Aaa_Authentication::release_admin_user() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authentication.admin_user)
  
  ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser* temp = admin_user_;
  admin_user_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser* System_Aaa_Authentication::mutable_admin_user() {
  
  if (admin_user_ == NULL) {
    admin_user_ = new ::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.admin_user)
  return admin_user_;
}
inline void System_Aaa_Authentication::set_allocated_admin_user(::openconfig::openconfig_system::System_Aaa_Authentication_AdminUser* admin_user) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete admin_user_;
  }
  if (admin_user) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      admin_user = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, admin_user, submessage_arena);
    }
    
  } else {
    
  }
  admin_user_ = admin_user;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authentication.admin_user)
}

// .openconfig.openconfig_system.System.Aaa.Authentication.Config config = 161084058 [(.yext.schemapath) = "/system/aaa/authentication/config"];
inline bool System_Aaa_Authentication::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Aaa_Authentication::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_Authentication_Config& System_Aaa_Authentication::config() const {
  const ::openconfig::openconfig_system::System_Aaa_Authentication_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_Authentication_Config*>(
      &::openconfig::openconfig_system::_System_Aaa_Authentication_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_Authentication_Config* System_Aaa_Authentication::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authentication.config)
  
  ::openconfig::openconfig_system::System_Aaa_Authentication_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_Authentication_Config* System_Aaa_Authentication::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Aaa_Authentication_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.config)
  return config_;
}
inline void System_Aaa_Authentication::set_allocated_config(::openconfig::openconfig_system::System_Aaa_Authentication_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authentication.config)
}

// .openconfig.openconfig_system.System.Aaa.Authentication.State state = 392934711 [(.yext.schemapath) = "/system/aaa/authentication/state"];
inline bool System_Aaa_Authentication::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Aaa_Authentication::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_Authentication_State& System_Aaa_Authentication::state() const {
  const ::openconfig::openconfig_system::System_Aaa_Authentication_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_Authentication_State*>(
      &::openconfig::openconfig_system::_System_Aaa_Authentication_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_Authentication_State* System_Aaa_Authentication::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authentication.state)
  
  ::openconfig::openconfig_system::System_Aaa_Authentication_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_Authentication_State* System_Aaa_Authentication::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Aaa_Authentication_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.state)
  return state_;
}
inline void System_Aaa_Authentication::set_allocated_state(::openconfig::openconfig_system::System_Aaa_Authentication_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authentication.state)
}

// .openconfig.openconfig_system.System.Aaa.Authentication.Users users = 331617008 [(.yext.schemapath) = "/system/aaa/authentication/users"];
inline bool System_Aaa_Authentication::has_users() const {
  return this != internal_default_instance() && users_ != NULL;
}
inline void System_Aaa_Authentication::clear_users() {
  if (GetArenaNoVirtual() == NULL && users_ != NULL) {
    delete users_;
  }
  users_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_Authentication_Users& System_Aaa_Authentication::users() const {
  const ::openconfig::openconfig_system::System_Aaa_Authentication_Users* p = users_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authentication.users)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_Authentication_Users*>(
      &::openconfig::openconfig_system::_System_Aaa_Authentication_Users_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_Authentication_Users* System_Aaa_Authentication::release_users() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authentication.users)
  
  ::openconfig::openconfig_system::System_Aaa_Authentication_Users* temp = users_;
  users_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_Authentication_Users* System_Aaa_Authentication::mutable_users() {
  
  if (users_ == NULL) {
    users_ = new ::openconfig::openconfig_system::System_Aaa_Authentication_Users;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authentication.users)
  return users_;
}
inline void System_Aaa_Authentication::set_allocated_users(::openconfig::openconfig_system::System_Aaa_Authentication_Users* users) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete users_;
  }
  if (users) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      users = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, users, submessage_arena);
    }
    
  } else {
    
  }
  users_ = users;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authentication.users)
}

// -------------------------------------------------------------------

// System_Aaa_Authorization_Config_AuthorizationMethodUnion

// .openconfig.enums.OpenconfigAaaTypesAAAMETHODTYPE authorization_method_openconfigaaatypesaaamethodtype = 261320746;
inline void System_Aaa_Authorization_Config_AuthorizationMethodUnion::clear_authorization_method_openconfigaaatypesaaamethodtype() {
  authorization_method_openconfigaaatypesaaamethodtype_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE System_Aaa_Authorization_Config_AuthorizationMethodUnion::authorization_method_openconfigaaatypesaaamethodtype() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authorization.Config.AuthorizationMethodUnion.authorization_method_openconfigaaatypesaaamethodtype)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE >(authorization_method_openconfigaaatypesaaamethodtype_);
}
inline void System_Aaa_Authorization_Config_AuthorizationMethodUnion::set_authorization_method_openconfigaaatypesaaamethodtype(::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE value) {
  
  authorization_method_openconfigaaatypesaaamethodtype_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Authorization.Config.AuthorizationMethodUnion.authorization_method_openconfigaaatypesaaamethodtype)
}

// string authorization_method_string = 508375681;
inline void System_Aaa_Authorization_Config_AuthorizationMethodUnion::clear_authorization_method_string() {
  authorization_method_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& System_Aaa_Authorization_Config_AuthorizationMethodUnion::authorization_method_string() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authorization.Config.AuthorizationMethodUnion.authorization_method_string)
  return authorization_method_string_.GetNoArena();
}
inline void System_Aaa_Authorization_Config_AuthorizationMethodUnion::set_authorization_method_string(const ::std::string& value) {
  
  authorization_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Authorization.Config.AuthorizationMethodUnion.authorization_method_string)
}
#if LANG_CXX11
inline void System_Aaa_Authorization_Config_AuthorizationMethodUnion::set_authorization_method_string(::std::string&& value) {
  
  authorization_method_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_system.System.Aaa.Authorization.Config.AuthorizationMethodUnion.authorization_method_string)
}
#endif
inline void System_Aaa_Authorization_Config_AuthorizationMethodUnion::set_authorization_method_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  authorization_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_system.System.Aaa.Authorization.Config.AuthorizationMethodUnion.authorization_method_string)
}
inline void System_Aaa_Authorization_Config_AuthorizationMethodUnion::set_authorization_method_string(const char* value, size_t size) {
  
  authorization_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_system.System.Aaa.Authorization.Config.AuthorizationMethodUnion.authorization_method_string)
}
inline ::std::string* System_Aaa_Authorization_Config_AuthorizationMethodUnion::mutable_authorization_method_string() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authorization.Config.AuthorizationMethodUnion.authorization_method_string)
  return authorization_method_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* System_Aaa_Authorization_Config_AuthorizationMethodUnion::release_authorization_method_string() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authorization.Config.AuthorizationMethodUnion.authorization_method_string)
  
  return authorization_method_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void System_Aaa_Authorization_Config_AuthorizationMethodUnion::set_allocated_authorization_method_string(::std::string* authorization_method_string) {
  if (authorization_method_string != NULL) {
    
  } else {
    
  }
  authorization_method_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authorization_method_string);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authorization.Config.AuthorizationMethodUnion.authorization_method_string)
}

// -------------------------------------------------------------------

// System_Aaa_Authorization_Config

// repeated .openconfig.openconfig_system.System.Aaa.Authorization.Config.AuthorizationMethodUnion authorization_method = 399020027 [(.yext.schemapath) = "/system/aaa/authorization/config/authorization-method"];
inline int System_Aaa_Authorization_Config::authorization_method_size() const {
  return authorization_method_.size();
}
inline void System_Aaa_Authorization_Config::clear_authorization_method() {
  authorization_method_.Clear();
}
inline const ::openconfig::openconfig_system::System_Aaa_Authorization_Config_AuthorizationMethodUnion& System_Aaa_Authorization_Config::authorization_method(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authorization.Config.authorization_method)
  return authorization_method_.Get(index);
}
inline ::openconfig::openconfig_system::System_Aaa_Authorization_Config_AuthorizationMethodUnion* System_Aaa_Authorization_Config::mutable_authorization_method(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authorization.Config.authorization_method)
  return authorization_method_.Mutable(index);
}
inline ::openconfig::openconfig_system::System_Aaa_Authorization_Config_AuthorizationMethodUnion* System_Aaa_Authorization_Config::add_authorization_method() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Aaa.Authorization.Config.authorization_method)
  return authorization_method_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authorization_Config_AuthorizationMethodUnion >*
System_Aaa_Authorization_Config::mutable_authorization_method() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Aaa.Authorization.Config.authorization_method)
  return &authorization_method_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authorization_Config_AuthorizationMethodUnion >&
System_Aaa_Authorization_Config::authorization_method() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Aaa.Authorization.Config.authorization_method)
  return authorization_method_;
}

// -------------------------------------------------------------------

// System_Aaa_Authorization_Events_Event_Config

// .openconfig.enums.OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE event_type = 449780140 [(.yext.schemapath) = "/system/aaa/authorization/events/event/config/event-type"];
inline void System_Aaa_Authorization_Events_Event_Config::clear_event_type() {
  event_type_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE System_Aaa_Authorization_Events_Event_Config::event_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authorization.Events.Event.Config.event_type)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE >(event_type_);
}
inline void System_Aaa_Authorization_Events_Event_Config::set_event_type(::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE value) {
  
  event_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Authorization.Events.Event.Config.event_type)
}

// -------------------------------------------------------------------

// System_Aaa_Authorization_Events_Event_State

// .openconfig.enums.OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE event_type = 301693687 [(.yext.schemapath) = "/system/aaa/authorization/events/event/state/event-type"];
inline void System_Aaa_Authorization_Events_Event_State::clear_event_type() {
  event_type_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE System_Aaa_Authorization_Events_Event_State::event_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authorization.Events.Event.State.event_type)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE >(event_type_);
}
inline void System_Aaa_Authorization_Events_Event_State::set_event_type(::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE value) {
  
  event_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Authorization.Events.Event.State.event_type)
}

// -------------------------------------------------------------------

// System_Aaa_Authorization_Events_Event

// .openconfig.openconfig_system.System.Aaa.Authorization.Events.Event.Config config = 284746930 [(.yext.schemapath) = "/system/aaa/authorization/events/event/config"];
inline bool System_Aaa_Authorization_Events_Event::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Aaa_Authorization_Events_Event::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event_Config& System_Aaa_Authorization_Events_Event::config() const {
  const ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authorization.Events.Event.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event_Config*>(
      &::openconfig::openconfig_system::_System_Aaa_Authorization_Events_Event_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event_Config* System_Aaa_Authorization_Events_Event::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authorization.Events.Event.config)
  
  ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event_Config* System_Aaa_Authorization_Events_Event::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authorization.Events.Event.config)
  return config_;
}
inline void System_Aaa_Authorization_Events_Event::set_allocated_config(::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authorization.Events.Event.config)
}

// .openconfig.openconfig_system.System.Aaa.Authorization.Events.Event.State state = 241306543 [(.yext.schemapath) = "/system/aaa/authorization/events/event/state"];
inline bool System_Aaa_Authorization_Events_Event::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Aaa_Authorization_Events_Event::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event_State& System_Aaa_Authorization_Events_Event::state() const {
  const ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authorization.Events.Event.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event_State*>(
      &::openconfig::openconfig_system::_System_Aaa_Authorization_Events_Event_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event_State* System_Aaa_Authorization_Events_Event::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authorization.Events.Event.state)
  
  ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event_State* System_Aaa_Authorization_Events_Event::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authorization.Events.Event.state)
  return state_;
}
inline void System_Aaa_Authorization_Events_Event::set_allocated_state(::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authorization.Events.Event.state)
}

// -------------------------------------------------------------------

// System_Aaa_Authorization_Events_EventKey

// .openconfig.enums.OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE event_type = 1 [(.yext.schemapath) = "/system/aaa/authorization/events/event/event-type"];
inline void System_Aaa_Authorization_Events_EventKey::clear_event_type() {
  event_type_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE System_Aaa_Authorization_Events_EventKey::event_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authorization.Events.EventKey.event_type)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE >(event_type_);
}
inline void System_Aaa_Authorization_Events_EventKey::set_event_type(::openconfig::enums::OpenconfigAaaTypesAAAAUTHORIZATIONEVENTTYPE value) {
  
  event_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Authorization.Events.EventKey.event_type)
}

// .openconfig.openconfig_system.System.Aaa.Authorization.Events.Event event = 2;
inline bool System_Aaa_Authorization_Events_EventKey::has_event() const {
  return this != internal_default_instance() && event_ != NULL;
}
inline void System_Aaa_Authorization_Events_EventKey::clear_event() {
  if (GetArenaNoVirtual() == NULL && event_ != NULL) {
    delete event_;
  }
  event_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event& System_Aaa_Authorization_Events_EventKey::event() const {
  const ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event* p = event_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authorization.Events.EventKey.event)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event*>(
      &::openconfig::openconfig_system::_System_Aaa_Authorization_Events_Event_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event* System_Aaa_Authorization_Events_EventKey::release_event() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authorization.Events.EventKey.event)
  
  ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event* temp = event_;
  event_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event* System_Aaa_Authorization_Events_EventKey::mutable_event() {
  
  if (event_ == NULL) {
    event_ = new ::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authorization.Events.EventKey.event)
  return event_;
}
inline void System_Aaa_Authorization_Events_EventKey::set_allocated_event(::openconfig::openconfig_system::System_Aaa_Authorization_Events_Event* event) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete event_;
  }
  if (event) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      event = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, event, submessage_arena);
    }
    
  } else {
    
  }
  event_ = event;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authorization.Events.EventKey.event)
}

// -------------------------------------------------------------------

// System_Aaa_Authorization_Events

// repeated .openconfig.openconfig_system.System.Aaa.Authorization.Events.EventKey event = 517393149 [(.yext.schemapath) = "/system/aaa/authorization/events/event"];
inline int System_Aaa_Authorization_Events::event_size() const {
  return event_.size();
}
inline void System_Aaa_Authorization_Events::clear_event() {
  event_.Clear();
}
inline const ::openconfig::openconfig_system::System_Aaa_Authorization_Events_EventKey& System_Aaa_Authorization_Events::event(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authorization.Events.event)
  return event_.Get(index);
}
inline ::openconfig::openconfig_system::System_Aaa_Authorization_Events_EventKey* System_Aaa_Authorization_Events::mutable_event(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authorization.Events.event)
  return event_.Mutable(index);
}
inline ::openconfig::openconfig_system::System_Aaa_Authorization_Events_EventKey* System_Aaa_Authorization_Events::add_event() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Aaa.Authorization.Events.event)
  return event_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authorization_Events_EventKey >*
System_Aaa_Authorization_Events::mutable_event() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Aaa.Authorization.Events.event)
  return &event_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authorization_Events_EventKey >&
System_Aaa_Authorization_Events::event() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Aaa.Authorization.Events.event)
  return event_;
}

// -------------------------------------------------------------------

// System_Aaa_Authorization_State_AuthorizationMethodUnion

// .openconfig.enums.OpenconfigAaaTypesAAAMETHODTYPE authorization_method_openconfigaaatypesaaamethodtype = 531382335;
inline void System_Aaa_Authorization_State_AuthorizationMethodUnion::clear_authorization_method_openconfigaaatypesaaamethodtype() {
  authorization_method_openconfigaaatypesaaamethodtype_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE System_Aaa_Authorization_State_AuthorizationMethodUnion::authorization_method_openconfigaaatypesaaamethodtype() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authorization.State.AuthorizationMethodUnion.authorization_method_openconfigaaatypesaaamethodtype)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE >(authorization_method_openconfigaaatypesaaamethodtype_);
}
inline void System_Aaa_Authorization_State_AuthorizationMethodUnion::set_authorization_method_openconfigaaatypesaaamethodtype(::openconfig::enums::OpenconfigAaaTypesAAAMETHODTYPE value) {
  
  authorization_method_openconfigaaatypesaaamethodtype_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Authorization.State.AuthorizationMethodUnion.authorization_method_openconfigaaatypesaaamethodtype)
}

// string authorization_method_string = 123095898;
inline void System_Aaa_Authorization_State_AuthorizationMethodUnion::clear_authorization_method_string() {
  authorization_method_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& System_Aaa_Authorization_State_AuthorizationMethodUnion::authorization_method_string() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authorization.State.AuthorizationMethodUnion.authorization_method_string)
  return authorization_method_string_.GetNoArena();
}
inline void System_Aaa_Authorization_State_AuthorizationMethodUnion::set_authorization_method_string(const ::std::string& value) {
  
  authorization_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.Authorization.State.AuthorizationMethodUnion.authorization_method_string)
}
#if LANG_CXX11
inline void System_Aaa_Authorization_State_AuthorizationMethodUnion::set_authorization_method_string(::std::string&& value) {
  
  authorization_method_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_system.System.Aaa.Authorization.State.AuthorizationMethodUnion.authorization_method_string)
}
#endif
inline void System_Aaa_Authorization_State_AuthorizationMethodUnion::set_authorization_method_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  authorization_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_system.System.Aaa.Authorization.State.AuthorizationMethodUnion.authorization_method_string)
}
inline void System_Aaa_Authorization_State_AuthorizationMethodUnion::set_authorization_method_string(const char* value, size_t size) {
  
  authorization_method_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_system.System.Aaa.Authorization.State.AuthorizationMethodUnion.authorization_method_string)
}
inline ::std::string* System_Aaa_Authorization_State_AuthorizationMethodUnion::mutable_authorization_method_string() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authorization.State.AuthorizationMethodUnion.authorization_method_string)
  return authorization_method_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* System_Aaa_Authorization_State_AuthorizationMethodUnion::release_authorization_method_string() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authorization.State.AuthorizationMethodUnion.authorization_method_string)
  
  return authorization_method_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void System_Aaa_Authorization_State_AuthorizationMethodUnion::set_allocated_authorization_method_string(::std::string* authorization_method_string) {
  if (authorization_method_string != NULL) {
    
  } else {
    
  }
  authorization_method_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), authorization_method_string);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authorization.State.AuthorizationMethodUnion.authorization_method_string)
}

// -------------------------------------------------------------------

// System_Aaa_Authorization_State

// repeated .openconfig.openconfig_system.System.Aaa.Authorization.State.AuthorizationMethodUnion authorization_method = 60171346 [(.yext.schemapath) = "/system/aaa/authorization/state/authorization-method"];
inline int System_Aaa_Authorization_State::authorization_method_size() const {
  return authorization_method_.size();
}
inline void System_Aaa_Authorization_State::clear_authorization_method() {
  authorization_method_.Clear();
}
inline const ::openconfig::openconfig_system::System_Aaa_Authorization_State_AuthorizationMethodUnion& System_Aaa_Authorization_State::authorization_method(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authorization.State.authorization_method)
  return authorization_method_.Get(index);
}
inline ::openconfig::openconfig_system::System_Aaa_Authorization_State_AuthorizationMethodUnion* System_Aaa_Authorization_State::mutable_authorization_method(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authorization.State.authorization_method)
  return authorization_method_.Mutable(index);
}
inline ::openconfig::openconfig_system::System_Aaa_Authorization_State_AuthorizationMethodUnion* System_Aaa_Authorization_State::add_authorization_method() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Aaa.Authorization.State.authorization_method)
  return authorization_method_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authorization_State_AuthorizationMethodUnion >*
System_Aaa_Authorization_State::mutable_authorization_method() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Aaa.Authorization.State.authorization_method)
  return &authorization_method_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_Authorization_State_AuthorizationMethodUnion >&
System_Aaa_Authorization_State::authorization_method() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Aaa.Authorization.State.authorization_method)
  return authorization_method_;
}

// -------------------------------------------------------------------

// System_Aaa_Authorization

// .openconfig.openconfig_system.System.Aaa.Authorization.Config config = 60541017 [(.yext.schemapath) = "/system/aaa/authorization/config"];
inline bool System_Aaa_Authorization::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Aaa_Authorization::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_Authorization_Config& System_Aaa_Authorization::config() const {
  const ::openconfig::openconfig_system::System_Aaa_Authorization_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authorization.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_Authorization_Config*>(
      &::openconfig::openconfig_system::_System_Aaa_Authorization_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_Authorization_Config* System_Aaa_Authorization::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authorization.config)
  
  ::openconfig::openconfig_system::System_Aaa_Authorization_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_Authorization_Config* System_Aaa_Authorization::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Aaa_Authorization_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authorization.config)
  return config_;
}
inline void System_Aaa_Authorization::set_allocated_config(::openconfig::openconfig_system::System_Aaa_Authorization_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authorization.config)
}

// .openconfig.openconfig_system.System.Aaa.Authorization.Events events = 103903920 [(.yext.schemapath) = "/system/aaa/authorization/events"];
inline bool System_Aaa_Authorization::has_events() const {
  return this != internal_default_instance() && events_ != NULL;
}
inline void System_Aaa_Authorization::clear_events() {
  if (GetArenaNoVirtual() == NULL && events_ != NULL) {
    delete events_;
  }
  events_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_Authorization_Events& System_Aaa_Authorization::events() const {
  const ::openconfig::openconfig_system::System_Aaa_Authorization_Events* p = events_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authorization.events)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_Authorization_Events*>(
      &::openconfig::openconfig_system::_System_Aaa_Authorization_Events_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_Authorization_Events* System_Aaa_Authorization::release_events() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authorization.events)
  
  ::openconfig::openconfig_system::System_Aaa_Authorization_Events* temp = events_;
  events_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_Authorization_Events* System_Aaa_Authorization::mutable_events() {
  
  if (events_ == NULL) {
    events_ = new ::openconfig::openconfig_system::System_Aaa_Authorization_Events;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authorization.events)
  return events_;
}
inline void System_Aaa_Authorization::set_allocated_events(::openconfig::openconfig_system::System_Aaa_Authorization_Events* events) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete events_;
  }
  if (events) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      events = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, events, submessage_arena);
    }
    
  } else {
    
  }
  events_ = events;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authorization.events)
}

// .openconfig.openconfig_system.System.Aaa.Authorization.State state = 441078062 [(.yext.schemapath) = "/system/aaa/authorization/state"];
inline bool System_Aaa_Authorization::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Aaa_Authorization::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_Authorization_State& System_Aaa_Authorization::state() const {
  const ::openconfig::openconfig_system::System_Aaa_Authorization_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.Authorization.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_Authorization_State*>(
      &::openconfig::openconfig_system::_System_Aaa_Authorization_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_Authorization_State* System_Aaa_Authorization::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.Authorization.state)
  
  ::openconfig::openconfig_system::System_Aaa_Authorization_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_Authorization_State* System_Aaa_Authorization::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Aaa_Authorization_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.Authorization.state)
  return state_;
}
inline void System_Aaa_Authorization::set_allocated_state(::openconfig::openconfig_system::System_Aaa_Authorization_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.Authorization.state)
}

// -------------------------------------------------------------------

// System_Aaa_Config

// -------------------------------------------------------------------

// System_Aaa_ServerGroups_ServerGroup_Config

// .ywrapper.StringValue name = 347729010 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/config/name"];
inline bool System_Aaa_ServerGroups_ServerGroup_Config::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& System_Aaa_ServerGroups_ServerGroup_Config::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Config.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_Config::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Config.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_Config::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Config.name)
  return name_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Config::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Config.name)
}

// .openconfig.enums.OpenconfigAaaTypesAAASERVERTYPE type = 70733999 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/config/type"];
inline void System_Aaa_ServerGroups_ServerGroup_Config::clear_type() {
  type_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAASERVERTYPE System_Aaa_ServerGroups_ServerGroup_Config::type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Config.type)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAASERVERTYPE >(type_);
}
inline void System_Aaa_ServerGroups_ServerGroup_Config::set_type(::openconfig::enums::OpenconfigAaaTypesAAASERVERTYPE value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Config.type)
}

// -------------------------------------------------------------------

// System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config

// .ywrapper.StringValue address = 25514256 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/config/address"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline const ::ywrapper::StringValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::address() const {
  const ::ywrapper::StringValue* p = address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config.address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::release_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config.address)
  
  ::ywrapper::StringValue* temp = address_;
  address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config.address)
  return address_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::set_allocated_address(::ywrapper::StringValue* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(address_);
  }
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config.address)
}

// .ywrapper.StringValue name = 197201537 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/config/name"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config.name)
  return name_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config.name)
}

// .ywrapper.UintValue timeout = 308122545 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/config/timeout"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::has_timeout() const {
  return this != internal_default_instance() && timeout_ != NULL;
}
inline const ::ywrapper::UintValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::timeout() const {
  const ::ywrapper::UintValue* p = timeout_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config.timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::release_timeout() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config.timeout)
  
  ::ywrapper::UintValue* temp = timeout_;
  timeout_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::mutable_timeout() {
  
  if (timeout_ == NULL) {
    timeout_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config.timeout)
  return timeout_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config::set_allocated_timeout(::ywrapper::UintValue* timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timeout_);
  }
  if (timeout) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timeout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timeout, submessage_arena);
    }
    
  } else {
    
  }
  timeout_ = timeout;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config.timeout)
}

// -------------------------------------------------------------------

// System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config

// .ywrapper.UintValue acct_port = 289040892 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/config/acct-port"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::has_acct_port() const {
  return this != internal_default_instance() && acct_port_ != NULL;
}
inline const ::ywrapper::UintValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::acct_port() const {
  const ::ywrapper::UintValue* p = acct_port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.acct_port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::release_acct_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.acct_port)
  
  ::ywrapper::UintValue* temp = acct_port_;
  acct_port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::mutable_acct_port() {
  
  if (acct_port_ == NULL) {
    acct_port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.acct_port)
  return acct_port_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::set_allocated_acct_port(::ywrapper::UintValue* acct_port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(acct_port_);
  }
  if (acct_port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      acct_port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, acct_port, submessage_arena);
    }
    
  } else {
    
  }
  acct_port_ = acct_port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.acct_port)
}

// .ywrapper.UintValue auth_port = 298939869 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/config/auth-port"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::has_auth_port() const {
  return this != internal_default_instance() && auth_port_ != NULL;
}
inline const ::ywrapper::UintValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::auth_port() const {
  const ::ywrapper::UintValue* p = auth_port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.auth_port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::release_auth_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.auth_port)
  
  ::ywrapper::UintValue* temp = auth_port_;
  auth_port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::mutable_auth_port() {
  
  if (auth_port_ == NULL) {
    auth_port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.auth_port)
  return auth_port_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::set_allocated_auth_port(::ywrapper::UintValue* auth_port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(auth_port_);
  }
  if (auth_port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      auth_port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, auth_port, submessage_arena);
    }
    
  } else {
    
  }
  auth_port_ = auth_port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.auth_port)
}

// .ywrapper.UintValue retransmit_attempts = 418545541 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/config/retransmit-attempts"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::has_retransmit_attempts() const {
  return this != internal_default_instance() && retransmit_attempts_ != NULL;
}
inline const ::ywrapper::UintValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::retransmit_attempts() const {
  const ::ywrapper::UintValue* p = retransmit_attempts_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.retransmit_attempts)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::release_retransmit_attempts() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.retransmit_attempts)
  
  ::ywrapper::UintValue* temp = retransmit_attempts_;
  retransmit_attempts_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::mutable_retransmit_attempts() {
  
  if (retransmit_attempts_ == NULL) {
    retransmit_attempts_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.retransmit_attempts)
  return retransmit_attempts_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::set_allocated_retransmit_attempts(::ywrapper::UintValue* retransmit_attempts) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(retransmit_attempts_);
  }
  if (retransmit_attempts) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      retransmit_attempts = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, retransmit_attempts, submessage_arena);
    }
    
  } else {
    
  }
  retransmit_attempts_ = retransmit_attempts;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.retransmit_attempts)
}

// .ywrapper.StringValue secret_key = 91269351 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/config/secret-key"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::has_secret_key() const {
  return this != internal_default_instance() && secret_key_ != NULL;
}
inline const ::ywrapper::StringValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::secret_key() const {
  const ::ywrapper::StringValue* p = secret_key_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.secret_key)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::release_secret_key() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.secret_key)
  
  ::ywrapper::StringValue* temp = secret_key_;
  secret_key_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::mutable_secret_key() {
  
  if (secret_key_ == NULL) {
    secret_key_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.secret_key)
  return secret_key_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::set_allocated_secret_key(::ywrapper::StringValue* secret_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(secret_key_);
  }
  if (secret_key) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      secret_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, secret_key, submessage_arena);
    }
    
  } else {
    
  }
  secret_key_ = secret_key;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.secret_key)
}

// .ywrapper.StringValue source_address = 529894017 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/config/source-address"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::has_source_address() const {
  return this != internal_default_instance() && source_address_ != NULL;
}
inline const ::ywrapper::StringValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::source_address() const {
  const ::ywrapper::StringValue* p = source_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.source_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::release_source_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.source_address)
  
  ::ywrapper::StringValue* temp = source_address_;
  source_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::mutable_source_address() {
  
  if (source_address_ == NULL) {
    source_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.source_address)
  return source_address_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config::set_allocated_source_address(::ywrapper::StringValue* source_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(source_address_);
  }
  if (source_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      source_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source_address, submessage_arena);
    }
    
  } else {
    
  }
  source_address_ = source_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config.source_address)
}

// -------------------------------------------------------------------

// System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters

// .ywrapper.UintValue access_accepts = 215193910 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-accepts"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::has_access_accepts() const {
  return this != internal_default_instance() && access_accepts_ != NULL;
}
inline const ::ywrapper::UintValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::access_accepts() const {
  const ::ywrapper::UintValue* p = access_accepts_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.access_accepts)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::release_access_accepts() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.access_accepts)
  
  ::ywrapper::UintValue* temp = access_accepts_;
  access_accepts_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::mutable_access_accepts() {
  
  if (access_accepts_ == NULL) {
    access_accepts_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.access_accepts)
  return access_accepts_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::set_allocated_access_accepts(::ywrapper::UintValue* access_accepts) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(access_accepts_);
  }
  if (access_accepts) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      access_accepts = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, access_accepts, submessage_arena);
    }
    
  } else {
    
  }
  access_accepts_ = access_accepts;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.access_accepts)
}

// .ywrapper.UintValue access_rejects = 25892249 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/access-rejects"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::has_access_rejects() const {
  return this != internal_default_instance() && access_rejects_ != NULL;
}
inline const ::ywrapper::UintValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::access_rejects() const {
  const ::ywrapper::UintValue* p = access_rejects_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.access_rejects)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::release_access_rejects() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.access_rejects)
  
  ::ywrapper::UintValue* temp = access_rejects_;
  access_rejects_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::mutable_access_rejects() {
  
  if (access_rejects_ == NULL) {
    access_rejects_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.access_rejects)
  return access_rejects_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::set_allocated_access_rejects(::ywrapper::UintValue* access_rejects) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(access_rejects_);
  }
  if (access_rejects) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      access_rejects = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, access_rejects, submessage_arena);
    }
    
  } else {
    
  }
  access_rejects_ = access_rejects;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.access_rejects)
}

// .ywrapper.UintValue retried_access_requests = 400682451 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/retried-access-requests"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::has_retried_access_requests() const {
  return this != internal_default_instance() && retried_access_requests_ != NULL;
}
inline const ::ywrapper::UintValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::retried_access_requests() const {
  const ::ywrapper::UintValue* p = retried_access_requests_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.retried_access_requests)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::release_retried_access_requests() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.retried_access_requests)
  
  ::ywrapper::UintValue* temp = retried_access_requests_;
  retried_access_requests_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::mutable_retried_access_requests() {
  
  if (retried_access_requests_ == NULL) {
    retried_access_requests_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.retried_access_requests)
  return retried_access_requests_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::set_allocated_retried_access_requests(::ywrapper::UintValue* retried_access_requests) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(retried_access_requests_);
  }
  if (retried_access_requests) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      retried_access_requests = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, retried_access_requests, submessage_arena);
    }
    
  } else {
    
  }
  retried_access_requests_ = retried_access_requests;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.retried_access_requests)
}

// .ywrapper.UintValue timeout_access_requests = 24602675 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/state/counters/timeout-access-requests"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::has_timeout_access_requests() const {
  return this != internal_default_instance() && timeout_access_requests_ != NULL;
}
inline const ::ywrapper::UintValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::timeout_access_requests() const {
  const ::ywrapper::UintValue* p = timeout_access_requests_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.timeout_access_requests)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::release_timeout_access_requests() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.timeout_access_requests)
  
  ::ywrapper::UintValue* temp = timeout_access_requests_;
  timeout_access_requests_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::mutable_timeout_access_requests() {
  
  if (timeout_access_requests_ == NULL) {
    timeout_access_requests_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.timeout_access_requests)
  return timeout_access_requests_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters::set_allocated_timeout_access_requests(::ywrapper::UintValue* timeout_access_requests) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timeout_access_requests_);
  }
  if (timeout_access_requests) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timeout_access_requests = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timeout_access_requests, submessage_arena);
    }
    
  } else {
    
  }
  timeout_access_requests_ = timeout_access_requests;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters.timeout_access_requests)
}

// -------------------------------------------------------------------

// System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State

// .ywrapper.UintValue acct_port = 333746757 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/state/acct-port"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::has_acct_port() const {
  return this != internal_default_instance() && acct_port_ != NULL;
}
inline const ::ywrapper::UintValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::acct_port() const {
  const ::ywrapper::UintValue* p = acct_port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.acct_port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::release_acct_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.acct_port)
  
  ::ywrapper::UintValue* temp = acct_port_;
  acct_port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::mutable_acct_port() {
  
  if (acct_port_ == NULL) {
    acct_port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.acct_port)
  return acct_port_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::set_allocated_acct_port(::ywrapper::UintValue* acct_port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(acct_port_);
  }
  if (acct_port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      acct_port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, acct_port, submessage_arena);
    }
    
  } else {
    
  }
  acct_port_ = acct_port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.acct_port)
}

// .ywrapper.UintValue auth_port = 214229728 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/state/auth-port"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::has_auth_port() const {
  return this != internal_default_instance() && auth_port_ != NULL;
}
inline const ::ywrapper::UintValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::auth_port() const {
  const ::ywrapper::UintValue* p = auth_port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.auth_port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::release_auth_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.auth_port)
  
  ::ywrapper::UintValue* temp = auth_port_;
  auth_port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::mutable_auth_port() {
  
  if (auth_port_ == NULL) {
    auth_port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.auth_port)
  return auth_port_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::set_allocated_auth_port(::ywrapper::UintValue* auth_port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(auth_port_);
  }
  if (auth_port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      auth_port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, auth_port, submessage_arena);
    }
    
  } else {
    
  }
  auth_port_ = auth_port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.auth_port)
}

// .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.Counters counters = 38611033 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/state/counters"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::has_counters() const {
  return this != internal_default_instance() && counters_ != NULL;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::clear_counters() {
  if (GetArenaNoVirtual() == NULL && counters_ != NULL) {
    delete counters_;
  }
  counters_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::counters() const {
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* p = counters_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.counters)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters*>(
      &::openconfig::openconfig_system::_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::release_counters() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.counters)
  
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* temp = counters_;
  counters_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::mutable_counters() {
  
  if (counters_ == NULL) {
    counters_ = new ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.counters)
  return counters_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::set_allocated_counters(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_Counters* counters) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete counters_;
  }
  if (counters) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      counters = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, counters, submessage_arena);
    }
    
  } else {
    
  }
  counters_ = counters;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.counters)
}

// .ywrapper.UintValue retransmit_attempts = 30010608 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/state/retransmit-attempts"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::has_retransmit_attempts() const {
  return this != internal_default_instance() && retransmit_attempts_ != NULL;
}
inline const ::ywrapper::UintValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::retransmit_attempts() const {
  const ::ywrapper::UintValue* p = retransmit_attempts_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.retransmit_attempts)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::release_retransmit_attempts() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.retransmit_attempts)
  
  ::ywrapper::UintValue* temp = retransmit_attempts_;
  retransmit_attempts_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::mutable_retransmit_attempts() {
  
  if (retransmit_attempts_ == NULL) {
    retransmit_attempts_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.retransmit_attempts)
  return retransmit_attempts_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::set_allocated_retransmit_attempts(::ywrapper::UintValue* retransmit_attempts) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(retransmit_attempts_);
  }
  if (retransmit_attempts) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      retransmit_attempts = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, retransmit_attempts, submessage_arena);
    }
    
  } else {
    
  }
  retransmit_attempts_ = retransmit_attempts;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.retransmit_attempts)
}

// .ywrapper.StringValue secret_key = 162926660 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/state/secret-key"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::has_secret_key() const {
  return this != internal_default_instance() && secret_key_ != NULL;
}
inline const ::ywrapper::StringValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::secret_key() const {
  const ::ywrapper::StringValue* p = secret_key_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.secret_key)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::release_secret_key() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.secret_key)
  
  ::ywrapper::StringValue* temp = secret_key_;
  secret_key_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::mutable_secret_key() {
  
  if (secret_key_ == NULL) {
    secret_key_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.secret_key)
  return secret_key_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::set_allocated_secret_key(::ywrapper::StringValue* secret_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(secret_key_);
  }
  if (secret_key) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      secret_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, secret_key, submessage_arena);
    }
    
  } else {
    
  }
  secret_key_ = secret_key;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.secret_key)
}

// .ywrapper.StringValue source_address = 50916050 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/state/source-address"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::has_source_address() const {
  return this != internal_default_instance() && source_address_ != NULL;
}
inline const ::ywrapper::StringValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::source_address() const {
  const ::ywrapper::StringValue* p = source_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.source_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::release_source_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.source_address)
  
  ::ywrapper::StringValue* temp = source_address_;
  source_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::mutable_source_address() {
  
  if (source_address_ == NULL) {
    source_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.source_address)
  return source_address_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State::set_allocated_source_address(::ywrapper::StringValue* source_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(source_address_);
  }
  if (source_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      source_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source_address, submessage_arena);
    }
    
  } else {
    
  }
  source_address_ = source_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State.source_address)
}

// -------------------------------------------------------------------

// System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius

// .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.Config config = 380583358 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/config"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius::config() const {
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config*>(
      &::openconfig::openconfig_system::_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.config)
  
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.config)
  return config_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius::set_allocated_config(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.config)
}

// .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.State state = 245647275 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius/state"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius::state() const {
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State*>(
      &::openconfig::openconfig_system::_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.state)
  
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.state)
  return state_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius::set_allocated_state(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius.state)
}

// -------------------------------------------------------------------

// System_Aaa_ServerGroups_ServerGroup_Servers_Server_State

// .ywrapper.StringValue address = 108601531 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/state/address"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline const ::ywrapper::StringValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::address() const {
  const ::ywrapper::StringValue* p = address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::release_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.address)
  
  ::ywrapper::StringValue* temp = address_;
  address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.address)
  return address_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::set_allocated_address(::ywrapper::StringValue* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(address_);
  }
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.address)
}

// .ywrapper.UintValue connection_aborts = 125162735 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/state/connection-aborts"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::has_connection_aborts() const {
  return this != internal_default_instance() && connection_aborts_ != NULL;
}
inline const ::ywrapper::UintValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::connection_aborts() const {
  const ::ywrapper::UintValue* p = connection_aborts_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_aborts)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::release_connection_aborts() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_aborts)
  
  ::ywrapper::UintValue* temp = connection_aborts_;
  connection_aborts_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::mutable_connection_aborts() {
  
  if (connection_aborts_ == NULL) {
    connection_aborts_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_aborts)
  return connection_aborts_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::set_allocated_connection_aborts(::ywrapper::UintValue* connection_aborts) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(connection_aborts_);
  }
  if (connection_aborts) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      connection_aborts = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, connection_aborts, submessage_arena);
    }
    
  } else {
    
  }
  connection_aborts_ = connection_aborts;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_aborts)
}

// .ywrapper.UintValue connection_closes = 161631333 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/state/connection-closes"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::has_connection_closes() const {
  return this != internal_default_instance() && connection_closes_ != NULL;
}
inline const ::ywrapper::UintValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::connection_closes() const {
  const ::ywrapper::UintValue* p = connection_closes_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_closes)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::release_connection_closes() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_closes)
  
  ::ywrapper::UintValue* temp = connection_closes_;
  connection_closes_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::mutable_connection_closes() {
  
  if (connection_closes_ == NULL) {
    connection_closes_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_closes)
  return connection_closes_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::set_allocated_connection_closes(::ywrapper::UintValue* connection_closes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(connection_closes_);
  }
  if (connection_closes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      connection_closes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, connection_closes, submessage_arena);
    }
    
  } else {
    
  }
  connection_closes_ = connection_closes;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_closes)
}

// .ywrapper.UintValue connection_failures = 113553227 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/state/connection-failures"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::has_connection_failures() const {
  return this != internal_default_instance() && connection_failures_ != NULL;
}
inline const ::ywrapper::UintValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::connection_failures() const {
  const ::ywrapper::UintValue* p = connection_failures_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_failures)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::release_connection_failures() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_failures)
  
  ::ywrapper::UintValue* temp = connection_failures_;
  connection_failures_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::mutable_connection_failures() {
  
  if (connection_failures_ == NULL) {
    connection_failures_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_failures)
  return connection_failures_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::set_allocated_connection_failures(::ywrapper::UintValue* connection_failures) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(connection_failures_);
  }
  if (connection_failures) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      connection_failures = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, connection_failures, submessage_arena);
    }
    
  } else {
    
  }
  connection_failures_ = connection_failures;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_failures)
}

// .ywrapper.UintValue connection_opens = 74843905 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/state/connection-opens"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::has_connection_opens() const {
  return this != internal_default_instance() && connection_opens_ != NULL;
}
inline const ::ywrapper::UintValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::connection_opens() const {
  const ::ywrapper::UintValue* p = connection_opens_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_opens)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::release_connection_opens() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_opens)
  
  ::ywrapper::UintValue* temp = connection_opens_;
  connection_opens_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::mutable_connection_opens() {
  
  if (connection_opens_ == NULL) {
    connection_opens_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_opens)
  return connection_opens_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::set_allocated_connection_opens(::ywrapper::UintValue* connection_opens) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(connection_opens_);
  }
  if (connection_opens) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      connection_opens = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, connection_opens, submessage_arena);
    }
    
  } else {
    
  }
  connection_opens_ = connection_opens;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_opens)
}

// .ywrapper.UintValue connection_timeouts = 408747310 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/state/connection-timeouts"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::has_connection_timeouts() const {
  return this != internal_default_instance() && connection_timeouts_ != NULL;
}
inline const ::ywrapper::UintValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::connection_timeouts() const {
  const ::ywrapper::UintValue* p = connection_timeouts_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_timeouts)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::release_connection_timeouts() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_timeouts)
  
  ::ywrapper::UintValue* temp = connection_timeouts_;
  connection_timeouts_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::mutable_connection_timeouts() {
  
  if (connection_timeouts_ == NULL) {
    connection_timeouts_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_timeouts)
  return connection_timeouts_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::set_allocated_connection_timeouts(::ywrapper::UintValue* connection_timeouts) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(connection_timeouts_);
  }
  if (connection_timeouts) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      connection_timeouts = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, connection_timeouts, submessage_arena);
    }
    
  } else {
    
  }
  connection_timeouts_ = connection_timeouts;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.connection_timeouts)
}

// .ywrapper.UintValue errors_received = 531130208 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/state/errors-received"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::has_errors_received() const {
  return this != internal_default_instance() && errors_received_ != NULL;
}
inline const ::ywrapper::UintValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::errors_received() const {
  const ::ywrapper::UintValue* p = errors_received_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.errors_received)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::release_errors_received() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.errors_received)
  
  ::ywrapper::UintValue* temp = errors_received_;
  errors_received_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::mutable_errors_received() {
  
  if (errors_received_ == NULL) {
    errors_received_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.errors_received)
  return errors_received_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::set_allocated_errors_received(::ywrapper::UintValue* errors_received) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(errors_received_);
  }
  if (errors_received) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      errors_received = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, errors_received, submessage_arena);
    }
    
  } else {
    
  }
  errors_received_ = errors_received;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.errors_received)
}

// .ywrapper.UintValue messages_received = 183175971 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/state/messages-received"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::has_messages_received() const {
  return this != internal_default_instance() && messages_received_ != NULL;
}
inline const ::ywrapper::UintValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::messages_received() const {
  const ::ywrapper::UintValue* p = messages_received_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.messages_received)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::release_messages_received() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.messages_received)
  
  ::ywrapper::UintValue* temp = messages_received_;
  messages_received_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::mutable_messages_received() {
  
  if (messages_received_ == NULL) {
    messages_received_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.messages_received)
  return messages_received_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::set_allocated_messages_received(::ywrapper::UintValue* messages_received) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(messages_received_);
  }
  if (messages_received) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      messages_received = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, messages_received, submessage_arena);
    }
    
  } else {
    
  }
  messages_received_ = messages_received;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.messages_received)
}

// .ywrapper.UintValue messages_sent = 461917808 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/state/messages-sent"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::has_messages_sent() const {
  return this != internal_default_instance() && messages_sent_ != NULL;
}
inline const ::ywrapper::UintValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::messages_sent() const {
  const ::ywrapper::UintValue* p = messages_sent_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.messages_sent)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::release_messages_sent() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.messages_sent)
  
  ::ywrapper::UintValue* temp = messages_sent_;
  messages_sent_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::mutable_messages_sent() {
  
  if (messages_sent_ == NULL) {
    messages_sent_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.messages_sent)
  return messages_sent_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::set_allocated_messages_sent(::ywrapper::UintValue* messages_sent) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(messages_sent_);
  }
  if (messages_sent) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      messages_sent = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, messages_sent, submessage_arena);
    }
    
  } else {
    
  }
  messages_sent_ = messages_sent;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.messages_sent)
}

// .ywrapper.StringValue name = 179223720 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/state/name"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.name)
  return name_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.name)
}

// .ywrapper.UintValue timeout = 255067946 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/state/timeout"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::has_timeout() const {
  return this != internal_default_instance() && timeout_ != NULL;
}
inline const ::ywrapper::UintValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::timeout() const {
  const ::ywrapper::UintValue* p = timeout_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::release_timeout() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.timeout)
  
  ::ywrapper::UintValue* temp = timeout_;
  timeout_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::mutable_timeout() {
  
  if (timeout_ == NULL) {
    timeout_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.timeout)
  return timeout_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_State::set_allocated_timeout(::ywrapper::UintValue* timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timeout_);
  }
  if (timeout) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timeout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timeout, submessage_arena);
    }
    
  } else {
    
  }
  timeout_ = timeout;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State.timeout)
}

// -------------------------------------------------------------------

// System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config

// .ywrapper.UintValue port = 52133369 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/tacacs/config/port"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::has_port() const {
  return this != internal_default_instance() && port_ != NULL;
}
inline const ::ywrapper::UintValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::port() const {
  const ::ywrapper::UintValue* p = port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config.port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::release_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config.port)
  
  ::ywrapper::UintValue* temp = port_;
  port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::mutable_port() {
  
  if (port_ == NULL) {
    port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config.port)
  return port_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::set_allocated_port(::ywrapper::UintValue* port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(port_);
  }
  if (port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, port, submessage_arena);
    }
    
  } else {
    
  }
  port_ = port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config.port)
}

// .ywrapper.StringValue secret_key = 390882862 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/tacacs/config/secret-key"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::has_secret_key() const {
  return this != internal_default_instance() && secret_key_ != NULL;
}
inline const ::ywrapper::StringValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::secret_key() const {
  const ::ywrapper::StringValue* p = secret_key_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config.secret_key)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::release_secret_key() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config.secret_key)
  
  ::ywrapper::StringValue* temp = secret_key_;
  secret_key_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::mutable_secret_key() {
  
  if (secret_key_ == NULL) {
    secret_key_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config.secret_key)
  return secret_key_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::set_allocated_secret_key(::ywrapper::StringValue* secret_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(secret_key_);
  }
  if (secret_key) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      secret_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, secret_key, submessage_arena);
    }
    
  } else {
    
  }
  secret_key_ = secret_key;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config.secret_key)
}

// .ywrapper.StringValue source_address = 165060088 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/tacacs/config/source-address"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::has_source_address() const {
  return this != internal_default_instance() && source_address_ != NULL;
}
inline const ::ywrapper::StringValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::source_address() const {
  const ::ywrapper::StringValue* p = source_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config.source_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::release_source_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config.source_address)
  
  ::ywrapper::StringValue* temp = source_address_;
  source_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::mutable_source_address() {
  
  if (source_address_ == NULL) {
    source_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config.source_address)
  return source_address_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config::set_allocated_source_address(::ywrapper::StringValue* source_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(source_address_);
  }
  if (source_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      source_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source_address, submessage_arena);
    }
    
  } else {
    
  }
  source_address_ = source_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config.source_address)
}

// -------------------------------------------------------------------

// System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State

// .ywrapper.UintValue port = 256191988 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/tacacs/state/port"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::has_port() const {
  return this != internal_default_instance() && port_ != NULL;
}
inline const ::ywrapper::UintValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::port() const {
  const ::ywrapper::UintValue* p = port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State.port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::release_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State.port)
  
  ::ywrapper::UintValue* temp = port_;
  port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::mutable_port() {
  
  if (port_ == NULL) {
    port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State.port)
  return port_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::set_allocated_port(::ywrapper::UintValue* port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(port_);
  }
  if (port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, port, submessage_arena);
    }
    
  } else {
    
  }
  port_ = port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State.port)
}

// .ywrapper.StringValue secret_key = 176870715 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/tacacs/state/secret-key"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::has_secret_key() const {
  return this != internal_default_instance() && secret_key_ != NULL;
}
inline const ::ywrapper::StringValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::secret_key() const {
  const ::ywrapper::StringValue* p = secret_key_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State.secret_key)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::release_secret_key() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State.secret_key)
  
  ::ywrapper::StringValue* temp = secret_key_;
  secret_key_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::mutable_secret_key() {
  
  if (secret_key_ == NULL) {
    secret_key_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State.secret_key)
  return secret_key_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::set_allocated_secret_key(::ywrapper::StringValue* secret_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(secret_key_);
  }
  if (secret_key) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      secret_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, secret_key, submessage_arena);
    }
    
  } else {
    
  }
  secret_key_ = secret_key;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State.secret_key)
}

// .ywrapper.StringValue source_address = 407535333 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/tacacs/state/source-address"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::has_source_address() const {
  return this != internal_default_instance() && source_address_ != NULL;
}
inline const ::ywrapper::StringValue& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::source_address() const {
  const ::ywrapper::StringValue* p = source_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State.source_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::release_source_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State.source_address)
  
  ::ywrapper::StringValue* temp = source_address_;
  source_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::mutable_source_address() {
  
  if (source_address_ == NULL) {
    source_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State.source_address)
  return source_address_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State::set_allocated_source_address(::ywrapper::StringValue* source_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(source_address_);
  }
  if (source_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      source_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source_address, submessage_arena);
    }
    
  } else {
    
  }
  source_address_ = source_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State.source_address)
}

// -------------------------------------------------------------------

// System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs

// .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.Config config = 151997813 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/tacacs/config"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs::config() const {
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config*>(
      &::openconfig::openconfig_system::_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.config)
  
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.config)
  return config_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs::set_allocated_config(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.config)
}

// .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.State state = 88743530 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/tacacs/state"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State& System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs::state() const {
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State*>(
      &::openconfig::openconfig_system::_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.state)
  
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.state)
  return state_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs::set_allocated_state(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs.state)
}

// -------------------------------------------------------------------

// System_Aaa_ServerGroups_ServerGroup_Servers_Server

// .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Config config = 251002053 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/config"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config& System_Aaa_ServerGroups_ServerGroup_Servers_Server::config() const {
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config*>(
      &::openconfig::openconfig_system::_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* System_Aaa_ServerGroups_ServerGroup_Servers_Server::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.config)
  
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* System_Aaa_ServerGroups_ServerGroup_Servers_Server::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.config)
  return config_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server::set_allocated_config(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.config)
}

// .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Radius radius = 184878025 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/radius"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server::has_radius() const {
  return this != internal_default_instance() && radius_ != NULL;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server::clear_radius() {
  if (GetArenaNoVirtual() == NULL && radius_ != NULL) {
    delete radius_;
  }
  radius_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius& System_Aaa_ServerGroups_ServerGroup_Servers_Server::radius() const {
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* p = radius_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.radius)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius*>(
      &::openconfig::openconfig_system::_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* System_Aaa_ServerGroups_ServerGroup_Servers_Server::release_radius() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.radius)
  
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* temp = radius_;
  radius_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* System_Aaa_ServerGroups_ServerGroup_Servers_Server::mutable_radius() {
  
  if (radius_ == NULL) {
    radius_ = new ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.radius)
  return radius_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server::set_allocated_radius(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Radius* radius) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete radius_;
  }
  if (radius) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      radius = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, radius, submessage_arena);
    }
    
  } else {
    
  }
  radius_ = radius;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.radius)
}

// .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.State state = 5093306 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/state"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_State& System_Aaa_ServerGroups_ServerGroup_Servers_Server::state() const {
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_State*>(
      &::openconfig::openconfig_system::_System_Aaa_ServerGroups_ServerGroup_Servers_Server_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* System_Aaa_ServerGroups_ServerGroup_Servers_Server::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.state)
  
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* System_Aaa_ServerGroups_ServerGroup_Servers_Server::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.state)
  return state_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server::set_allocated_state(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.state)
}

// .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.Tacacs tacacs = 273909248 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/tacacs"];
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_Server::has_tacacs() const {
  return this != internal_default_instance() && tacacs_ != NULL;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server::clear_tacacs() {
  if (GetArenaNoVirtual() == NULL && tacacs_ != NULL) {
    delete tacacs_;
  }
  tacacs_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs& System_Aaa_ServerGroups_ServerGroup_Servers_Server::tacacs() const {
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* p = tacacs_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.tacacs)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs*>(
      &::openconfig::openconfig_system::_System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* System_Aaa_ServerGroups_ServerGroup_Servers_Server::release_tacacs() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.tacacs)
  
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* temp = tacacs_;
  tacacs_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* System_Aaa_ServerGroups_ServerGroup_Servers_Server::mutable_tacacs() {
  
  if (tacacs_ == NULL) {
    tacacs_ = new ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.tacacs)
  return tacacs_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_Server::set_allocated_tacacs(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server_Tacacs* tacacs) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete tacacs_;
  }
  if (tacacs) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      tacacs = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, tacacs, submessage_arena);
    }
    
  } else {
    
  }
  tacacs_ = tacacs;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server.tacacs)
}

// -------------------------------------------------------------------

// System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey

// string address = 1 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server/address"];
inline void System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::address() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey.address)
  return address_.GetNoArena();
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey.address)
}
#if LANG_CXX11
inline void System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey.address)
}
#endif
inline void System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey.address)
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey.address)
}
inline ::std::string* System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::release_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey.address)
}

// .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.Server server = 2;
inline bool System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::has_server() const {
  return this != internal_default_instance() && server_ != NULL;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::clear_server() {
  if (GetArenaNoVirtual() == NULL && server_ != NULL) {
    delete server_;
  }
  server_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server& System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::server() const {
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server* p = server_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey.server)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server*>(
      &::openconfig::openconfig_system::_System_Aaa_ServerGroups_ServerGroup_Servers_Server_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server* System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::release_server() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey.server)
  
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server* temp = server_;
  server_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server* System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::mutable_server() {
  
  if (server_ == NULL) {
    server_ = new ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey.server)
  return server_;
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey::set_allocated_server(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_Server* server) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete server_;
  }
  if (server) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      server = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, server, submessage_arena);
    }
    
  } else {
    
  }
  server_ = server;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey.server)
}

// -------------------------------------------------------------------

// System_Aaa_ServerGroups_ServerGroup_Servers

// repeated .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.ServerKey server = 253859376 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers/server"];
inline int System_Aaa_ServerGroups_ServerGroup_Servers::server_size() const {
  return server_.size();
}
inline void System_Aaa_ServerGroups_ServerGroup_Servers::clear_server() {
  server_.Clear();
}
inline const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey& System_Aaa_ServerGroups_ServerGroup_Servers::server(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.server)
  return server_.Get(index);
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey* System_Aaa_ServerGroups_ServerGroup_Servers::mutable_server(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.server)
  return server_.Mutable(index);
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey* System_Aaa_ServerGroups_ServerGroup_Servers::add_server() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.server)
  return server_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey >*
System_Aaa_ServerGroups_ServerGroup_Servers::mutable_server() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.server)
  return &server_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers_ServerKey >&
System_Aaa_ServerGroups_ServerGroup_Servers::server() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers.server)
  return server_;
}

// -------------------------------------------------------------------

// System_Aaa_ServerGroups_ServerGroup_State

// .ywrapper.StringValue name = 443695125 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/state/name"];
inline bool System_Aaa_ServerGroups_ServerGroup_State::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& System_Aaa_ServerGroups_ServerGroup_State::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.State.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_State::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.State.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Aaa_ServerGroups_ServerGroup_State::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.State.name)
  return name_;
}
inline void System_Aaa_ServerGroups_ServerGroup_State::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.State.name)
}

// .openconfig.enums.OpenconfigAaaTypesAAASERVERTYPE type = 60901908 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/state/type"];
inline void System_Aaa_ServerGroups_ServerGroup_State::clear_type() {
  type_ = 0;
}
inline ::openconfig::enums::OpenconfigAaaTypesAAASERVERTYPE System_Aaa_ServerGroups_ServerGroup_State::type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.State.type)
  return static_cast< ::openconfig::enums::OpenconfigAaaTypesAAASERVERTYPE >(type_);
}
inline void System_Aaa_ServerGroups_ServerGroup_State::set_type(::openconfig::enums::OpenconfigAaaTypesAAASERVERTYPE value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.State.type)
}

// -------------------------------------------------------------------

// System_Aaa_ServerGroups_ServerGroup

// .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Config config = 315982408 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/config"];
inline bool System_Aaa_ServerGroups_ServerGroup::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Aaa_ServerGroups_ServerGroup::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Config& System_Aaa_ServerGroups_ServerGroup::config() const {
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Config*>(
      &::openconfig::openconfig_system::_System_Aaa_ServerGroups_ServerGroup_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Config* System_Aaa_ServerGroups_ServerGroup::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.config)
  
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Config* System_Aaa_ServerGroups_ServerGroup::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.config)
  return config_;
}
inline void System_Aaa_ServerGroups_ServerGroup::set_allocated_config(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.config)
}

// .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.Servers servers = 454821498 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/servers"];
inline bool System_Aaa_ServerGroups_ServerGroup::has_servers() const {
  return this != internal_default_instance() && servers_ != NULL;
}
inline void System_Aaa_ServerGroups_ServerGroup::clear_servers() {
  if (GetArenaNoVirtual() == NULL && servers_ != NULL) {
    delete servers_;
  }
  servers_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers& System_Aaa_ServerGroups_ServerGroup::servers() const {
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers* p = servers_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.servers)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers*>(
      &::openconfig::openconfig_system::_System_Aaa_ServerGroups_ServerGroup_Servers_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers* System_Aaa_ServerGroups_ServerGroup::release_servers() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.servers)
  
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers* temp = servers_;
  servers_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers* System_Aaa_ServerGroups_ServerGroup::mutable_servers() {
  
  if (servers_ == NULL) {
    servers_ = new ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.servers)
  return servers_;
}
inline void System_Aaa_ServerGroups_ServerGroup::set_allocated_servers(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_Servers* servers) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete servers_;
  }
  if (servers) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      servers = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, servers, submessage_arena);
    }
    
  } else {
    
  }
  servers_ = servers;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.servers)
}

// .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.State state = 116974561 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/state"];
inline bool System_Aaa_ServerGroups_ServerGroup::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Aaa_ServerGroups_ServerGroup::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_State& System_Aaa_ServerGroups_ServerGroup::state() const {
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_State*>(
      &::openconfig::openconfig_system::_System_Aaa_ServerGroups_ServerGroup_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_State* System_Aaa_ServerGroups_ServerGroup::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.state)
  
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_State* System_Aaa_ServerGroups_ServerGroup::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.state)
  return state_;
}
inline void System_Aaa_ServerGroups_ServerGroup::set_allocated_state(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup.state)
}

// -------------------------------------------------------------------

// System_Aaa_ServerGroups_ServerGroupKey

// string name = 1 [(.yext.schemapath) = "/system/aaa/server-groups/server-group/name"];
inline void System_Aaa_ServerGroups_ServerGroupKey::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& System_Aaa_ServerGroups_ServerGroupKey::name() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroupKey.name)
  return name_.GetNoArena();
}
inline void System_Aaa_ServerGroups_ServerGroupKey::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroupKey.name)
}
#if LANG_CXX11
inline void System_Aaa_ServerGroups_ServerGroupKey::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroupKey.name)
}
#endif
inline void System_Aaa_ServerGroups_ServerGroupKey::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroupKey.name)
}
inline void System_Aaa_ServerGroups_ServerGroupKey::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroupKey.name)
}
inline ::std::string* System_Aaa_ServerGroups_ServerGroupKey::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroupKey.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* System_Aaa_ServerGroups_ServerGroupKey::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroupKey.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void System_Aaa_ServerGroups_ServerGroupKey::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroupKey.name)
}

// .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroup server_group = 2;
inline bool System_Aaa_ServerGroups_ServerGroupKey::has_server_group() const {
  return this != internal_default_instance() && server_group_ != NULL;
}
inline void System_Aaa_ServerGroups_ServerGroupKey::clear_server_group() {
  if (GetArenaNoVirtual() == NULL && server_group_ != NULL) {
    delete server_group_;
  }
  server_group_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup& System_Aaa_ServerGroups_ServerGroupKey::server_group() const {
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup* p = server_group_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroupKey.server_group)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup*>(
      &::openconfig::openconfig_system::_System_Aaa_ServerGroups_ServerGroup_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup* System_Aaa_ServerGroups_ServerGroupKey::release_server_group() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroupKey.server_group)
  
  ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup* temp = server_group_;
  server_group_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup* System_Aaa_ServerGroups_ServerGroupKey::mutable_server_group() {
  
  if (server_group_ == NULL) {
    server_group_ = new ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroupKey.server_group)
  return server_group_;
}
inline void System_Aaa_ServerGroups_ServerGroupKey::set_allocated_server_group(::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroup* server_group) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete server_group_;
  }
  if (server_group) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      server_group = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, server_group, submessage_arena);
    }
    
  } else {
    
  }
  server_group_ = server_group;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroupKey.server_group)
}

// -------------------------------------------------------------------

// System_Aaa_ServerGroups

// repeated .openconfig.openconfig_system.System.Aaa.ServerGroups.ServerGroupKey server_group = 249960919 [(.yext.schemapath) = "/system/aaa/server-groups/server-group"];
inline int System_Aaa_ServerGroups::server_group_size() const {
  return server_group_.size();
}
inline void System_Aaa_ServerGroups::clear_server_group() {
  server_group_.Clear();
}
inline const ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroupKey& System_Aaa_ServerGroups::server_group(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.ServerGroups.server_group)
  return server_group_.Get(index);
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroupKey* System_Aaa_ServerGroups::mutable_server_group(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.ServerGroups.server_group)
  return server_group_.Mutable(index);
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroupKey* System_Aaa_ServerGroups::add_server_group() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Aaa.ServerGroups.server_group)
  return server_group_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroupKey >*
System_Aaa_ServerGroups::mutable_server_group() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Aaa.ServerGroups.server_group)
  return &server_group_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Aaa_ServerGroups_ServerGroupKey >&
System_Aaa_ServerGroups::server_group() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Aaa.ServerGroups.server_group)
  return server_group_;
}

// -------------------------------------------------------------------

// System_Aaa_State

// -------------------------------------------------------------------

// System_Aaa

// .openconfig.openconfig_system.System.Aaa.Accounting accounting = 175231094 [(.yext.schemapath) = "/system/aaa/accounting"];
inline bool System_Aaa::has_accounting() const {
  return this != internal_default_instance() && accounting_ != NULL;
}
inline void System_Aaa::clear_accounting() {
  if (GetArenaNoVirtual() == NULL && accounting_ != NULL) {
    delete accounting_;
  }
  accounting_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_Accounting& System_Aaa::accounting() const {
  const ::openconfig::openconfig_system::System_Aaa_Accounting* p = accounting_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.accounting)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_Accounting*>(
      &::openconfig::openconfig_system::_System_Aaa_Accounting_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_Accounting* System_Aaa::release_accounting() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.accounting)
  
  ::openconfig::openconfig_system::System_Aaa_Accounting* temp = accounting_;
  accounting_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_Accounting* System_Aaa::mutable_accounting() {
  
  if (accounting_ == NULL) {
    accounting_ = new ::openconfig::openconfig_system::System_Aaa_Accounting;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.accounting)
  return accounting_;
}
inline void System_Aaa::set_allocated_accounting(::openconfig::openconfig_system::System_Aaa_Accounting* accounting) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete accounting_;
  }
  if (accounting) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      accounting = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, accounting, submessage_arena);
    }
    
  } else {
    
  }
  accounting_ = accounting;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.accounting)
}

// .openconfig.openconfig_system.System.Aaa.Authentication authentication = 520430581 [(.yext.schemapath) = "/system/aaa/authentication"];
inline bool System_Aaa::has_authentication() const {
  return this != internal_default_instance() && authentication_ != NULL;
}
inline void System_Aaa::clear_authentication() {
  if (GetArenaNoVirtual() == NULL && authentication_ != NULL) {
    delete authentication_;
  }
  authentication_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_Authentication& System_Aaa::authentication() const {
  const ::openconfig::openconfig_system::System_Aaa_Authentication* p = authentication_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.authentication)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_Authentication*>(
      &::openconfig::openconfig_system::_System_Aaa_Authentication_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_Authentication* System_Aaa::release_authentication() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.authentication)
  
  ::openconfig::openconfig_system::System_Aaa_Authentication* temp = authentication_;
  authentication_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_Authentication* System_Aaa::mutable_authentication() {
  
  if (authentication_ == NULL) {
    authentication_ = new ::openconfig::openconfig_system::System_Aaa_Authentication;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.authentication)
  return authentication_;
}
inline void System_Aaa::set_allocated_authentication(::openconfig::openconfig_system::System_Aaa_Authentication* authentication) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete authentication_;
  }
  if (authentication) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      authentication = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, authentication, submessage_arena);
    }
    
  } else {
    
  }
  authentication_ = authentication;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.authentication)
}

// .openconfig.openconfig_system.System.Aaa.Authorization authorization = 92979796 [(.yext.schemapath) = "/system/aaa/authorization"];
inline bool System_Aaa::has_authorization() const {
  return this != internal_default_instance() && authorization_ != NULL;
}
inline void System_Aaa::clear_authorization() {
  if (GetArenaNoVirtual() == NULL && authorization_ != NULL) {
    delete authorization_;
  }
  authorization_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_Authorization& System_Aaa::authorization() const {
  const ::openconfig::openconfig_system::System_Aaa_Authorization* p = authorization_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.authorization)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_Authorization*>(
      &::openconfig::openconfig_system::_System_Aaa_Authorization_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_Authorization* System_Aaa::release_authorization() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.authorization)
  
  ::openconfig::openconfig_system::System_Aaa_Authorization* temp = authorization_;
  authorization_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_Authorization* System_Aaa::mutable_authorization() {
  
  if (authorization_ == NULL) {
    authorization_ = new ::openconfig::openconfig_system::System_Aaa_Authorization;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.authorization)
  return authorization_;
}
inline void System_Aaa::set_allocated_authorization(::openconfig::openconfig_system::System_Aaa_Authorization* authorization) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete authorization_;
  }
  if (authorization) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      authorization = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, authorization, submessage_arena);
    }
    
  } else {
    
  }
  authorization_ = authorization;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.authorization)
}

// .openconfig.openconfig_system.System.Aaa.Config config = 352352339 [(.yext.schemapath) = "/system/aaa/config"];
inline bool System_Aaa::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Aaa::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_Config& System_Aaa::config() const {
  const ::openconfig::openconfig_system::System_Aaa_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_Config*>(
      &::openconfig::openconfig_system::_System_Aaa_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_Config* System_Aaa::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.config)
  
  ::openconfig::openconfig_system::System_Aaa_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_Config* System_Aaa::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Aaa_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.config)
  return config_;
}
inline void System_Aaa::set_allocated_config(::openconfig::openconfig_system::System_Aaa_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.config)
}

// .openconfig.openconfig_system.System.Aaa.ServerGroups server_groups = 366692613 [(.yext.schemapath) = "/system/aaa/server-groups"];
inline bool System_Aaa::has_server_groups() const {
  return this != internal_default_instance() && server_groups_ != NULL;
}
inline void System_Aaa::clear_server_groups() {
  if (GetArenaNoVirtual() == NULL && server_groups_ != NULL) {
    delete server_groups_;
  }
  server_groups_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_ServerGroups& System_Aaa::server_groups() const {
  const ::openconfig::openconfig_system::System_Aaa_ServerGroups* p = server_groups_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.server_groups)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_ServerGroups*>(
      &::openconfig::openconfig_system::_System_Aaa_ServerGroups_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups* System_Aaa::release_server_groups() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.server_groups)
  
  ::openconfig::openconfig_system::System_Aaa_ServerGroups* temp = server_groups_;
  server_groups_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_ServerGroups* System_Aaa::mutable_server_groups() {
  
  if (server_groups_ == NULL) {
    server_groups_ = new ::openconfig::openconfig_system::System_Aaa_ServerGroups;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.server_groups)
  return server_groups_;
}
inline void System_Aaa::set_allocated_server_groups(::openconfig::openconfig_system::System_Aaa_ServerGroups* server_groups) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete server_groups_;
  }
  if (server_groups) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      server_groups = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, server_groups, submessage_arena);
    }
    
  } else {
    
  }
  server_groups_ = server_groups;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.server_groups)
}

// .openconfig.openconfig_system.System.Aaa.State state = 23163956 [(.yext.schemapath) = "/system/aaa/state"];
inline bool System_Aaa::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Aaa::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa_State& System_Aaa::state() const {
  const ::openconfig::openconfig_system::System_Aaa_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Aaa.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa_State*>(
      &::openconfig::openconfig_system::_System_Aaa_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa_State* System_Aaa::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Aaa.state)
  
  ::openconfig::openconfig_system::System_Aaa_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa_State* System_Aaa::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Aaa_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Aaa.state)
  return state_;
}
inline void System_Aaa::set_allocated_state(::openconfig::openconfig_system::System_Aaa_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Aaa.state)
}

// -------------------------------------------------------------------

// System_Alarms_Alarm_Config

// -------------------------------------------------------------------

// System_Alarms_Alarm_State

// .ywrapper.StringValue id = 207370355 [(.yext.schemapath) = "/system/alarms/alarm/state/id"];
inline bool System_Alarms_Alarm_State::has_id() const {
  return this != internal_default_instance() && id_ != NULL;
}
inline const ::ywrapper::StringValue& System_Alarms_Alarm_State::id() const {
  const ::ywrapper::StringValue* p = id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Alarms.Alarm.State.id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Alarms_Alarm_State::release_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Alarms.Alarm.State.id)
  
  ::ywrapper::StringValue* temp = id_;
  id_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Alarms_Alarm_State::mutable_id() {
  
  if (id_ == NULL) {
    id_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Alarms.Alarm.State.id)
  return id_;
}
inline void System_Alarms_Alarm_State::set_allocated_id(::ywrapper::StringValue* id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(id_);
  }
  if (id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, id, submessage_arena);
    }
    
  } else {
    
  }
  id_ = id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Alarms.Alarm.State.id)
}

// .ywrapper.StringValue resource = 290470824 [(.yext.schemapath) = "/system/alarms/alarm/state/resource"];
inline bool System_Alarms_Alarm_State::has_resource() const {
  return this != internal_default_instance() && resource_ != NULL;
}
inline const ::ywrapper::StringValue& System_Alarms_Alarm_State::resource() const {
  const ::ywrapper::StringValue* p = resource_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Alarms.Alarm.State.resource)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Alarms_Alarm_State::release_resource() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Alarms.Alarm.State.resource)
  
  ::ywrapper::StringValue* temp = resource_;
  resource_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Alarms_Alarm_State::mutable_resource() {
  
  if (resource_ == NULL) {
    resource_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Alarms.Alarm.State.resource)
  return resource_;
}
inline void System_Alarms_Alarm_State::set_allocated_resource(::ywrapper::StringValue* resource) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(resource_);
  }
  if (resource) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      resource = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, resource, submessage_arena);
    }
    
  } else {
    
  }
  resource_ = resource;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Alarms.Alarm.State.resource)
}

// .openconfig.enums.OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY severity = 464665929 [(.yext.schemapath) = "/system/alarms/alarm/state/severity"];
inline void System_Alarms_Alarm_State::clear_severity() {
  severity_ = 0;
}
inline ::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY System_Alarms_Alarm_State::severity() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Alarms.Alarm.State.severity)
  return static_cast< ::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY >(severity_);
}
inline void System_Alarms_Alarm_State::set_severity(::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMSEVERITY value) {
  
  severity_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Alarms.Alarm.State.severity)
}

// .ywrapper.StringValue text = 19701185 [(.yext.schemapath) = "/system/alarms/alarm/state/text"];
inline bool System_Alarms_Alarm_State::has_text() const {
  return this != internal_default_instance() && text_ != NULL;
}
inline const ::ywrapper::StringValue& System_Alarms_Alarm_State::text() const {
  const ::ywrapper::StringValue* p = text_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Alarms.Alarm.State.text)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Alarms_Alarm_State::release_text() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Alarms.Alarm.State.text)
  
  ::ywrapper::StringValue* temp = text_;
  text_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Alarms_Alarm_State::mutable_text() {
  
  if (text_ == NULL) {
    text_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Alarms.Alarm.State.text)
  return text_;
}
inline void System_Alarms_Alarm_State::set_allocated_text(::ywrapper::StringValue* text) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(text_);
  }
  if (text) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      text = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, text, submessage_arena);
    }
    
  } else {
    
  }
  text_ = text;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Alarms.Alarm.State.text)
}

// .ywrapper.UintValue time_created = 258054456 [(.yext.schemapath) = "/system/alarms/alarm/state/time-created"];
inline bool System_Alarms_Alarm_State::has_time_created() const {
  return this != internal_default_instance() && time_created_ != NULL;
}
inline const ::ywrapper::UintValue& System_Alarms_Alarm_State::time_created() const {
  const ::ywrapper::UintValue* p = time_created_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Alarms.Alarm.State.time_created)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Alarms_Alarm_State::release_time_created() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Alarms.Alarm.State.time_created)
  
  ::ywrapper::UintValue* temp = time_created_;
  time_created_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Alarms_Alarm_State::mutable_time_created() {
  
  if (time_created_ == NULL) {
    time_created_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Alarms.Alarm.State.time_created)
  return time_created_;
}
inline void System_Alarms_Alarm_State::set_allocated_time_created(::ywrapper::UintValue* time_created) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(time_created_);
  }
  if (time_created) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      time_created = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, time_created, submessage_arena);
    }
    
  } else {
    
  }
  time_created_ = time_created;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Alarms.Alarm.State.time_created)
}

// .openconfig.enums.OpenconfigAlarmTypesOPENCONFIGALARMTYPEID type_id_openconfigalarmtypesopenconfigalarmtypeid = 375918181;
inline bool System_Alarms_Alarm_State::has_type_id_openconfigalarmtypesopenconfigalarmtypeid() const {
  return type_id_case() == kTypeIdOpenconfigalarmtypesopenconfigalarmtypeid;
}
inline void System_Alarms_Alarm_State::set_has_type_id_openconfigalarmtypesopenconfigalarmtypeid() {
  _oneof_case_[0] = kTypeIdOpenconfigalarmtypesopenconfigalarmtypeid;
}
inline void System_Alarms_Alarm_State::clear_type_id_openconfigalarmtypesopenconfigalarmtypeid() {
  if (has_type_id_openconfigalarmtypesopenconfigalarmtypeid()) {
    type_id_.type_id_openconfigalarmtypesopenconfigalarmtypeid_ = 0;
    clear_has_type_id();
  }
}
inline ::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMTYPEID System_Alarms_Alarm_State::type_id_openconfigalarmtypesopenconfigalarmtypeid() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Alarms.Alarm.State.type_id_openconfigalarmtypesopenconfigalarmtypeid)
  if (has_type_id_openconfigalarmtypesopenconfigalarmtypeid()) {
    return static_cast< ::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMTYPEID >(type_id_.type_id_openconfigalarmtypesopenconfigalarmtypeid_);
  }
  return static_cast< ::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMTYPEID >(0);
}
inline void System_Alarms_Alarm_State::set_type_id_openconfigalarmtypesopenconfigalarmtypeid(::openconfig::enums::OpenconfigAlarmTypesOPENCONFIGALARMTYPEID value) {
  if (!has_type_id_openconfigalarmtypesopenconfigalarmtypeid()) {
    clear_type_id();
    set_has_type_id_openconfigalarmtypesopenconfigalarmtypeid();
  }
  type_id_.type_id_openconfigalarmtypesopenconfigalarmtypeid_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Alarms.Alarm.State.type_id_openconfigalarmtypesopenconfigalarmtypeid)
}

// string type_id_string = 387256722;
inline bool System_Alarms_Alarm_State::has_type_id_string() const {
  return type_id_case() == kTypeIdString;
}
inline void System_Alarms_Alarm_State::set_has_type_id_string() {
  _oneof_case_[0] = kTypeIdString;
}
inline void System_Alarms_Alarm_State::clear_type_id_string() {
  if (has_type_id_string()) {
    type_id_.type_id_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    clear_has_type_id();
  }
}
inline const ::std::string& System_Alarms_Alarm_State::type_id_string() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Alarms.Alarm.State.type_id_string)
  if (has_type_id_string()) {
    return type_id_.type_id_string_.GetNoArena();
  }
  return *&::google::protobuf::internal::GetEmptyStringAlreadyInited();
}
inline void System_Alarms_Alarm_State::set_type_id_string(const ::std::string& value) {
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Alarms.Alarm.State.type_id_string)
  if (!has_type_id_string()) {
    clear_type_id();
    set_has_type_id_string();
    type_id_.type_id_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  type_id_.type_id_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Alarms.Alarm.State.type_id_string)
}
#if LANG_CXX11
inline void System_Alarms_Alarm_State::set_type_id_string(::std::string&& value) {
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Alarms.Alarm.State.type_id_string)
  if (!has_type_id_string()) {
    clear_type_id();
    set_has_type_id_string();
    type_id_.type_id_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  type_id_.type_id_string_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_system.System.Alarms.Alarm.State.type_id_string)
}
#endif
inline void System_Alarms_Alarm_State::set_type_id_string(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  if (!has_type_id_string()) {
    clear_type_id();
    set_has_type_id_string();
    type_id_.type_id_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  type_id_.type_id_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_system.System.Alarms.Alarm.State.type_id_string)
}
inline void System_Alarms_Alarm_State::set_type_id_string(const char* value, size_t size) {
  if (!has_type_id_string()) {
    clear_type_id();
    set_has_type_id_string();
    type_id_.type_id_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  type_id_.type_id_string_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(
      reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_system.System.Alarms.Alarm.State.type_id_string)
}
inline ::std::string* System_Alarms_Alarm_State::mutable_type_id_string() {
  if (!has_type_id_string()) {
    clear_type_id();
    set_has_type_id_string();
    type_id_.type_id_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Alarms.Alarm.State.type_id_string)
  return type_id_.type_id_string_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* System_Alarms_Alarm_State::release_type_id_string() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Alarms.Alarm.State.type_id_string)
  if (has_type_id_string()) {
    clear_has_type_id();
    return type_id_.type_id_string_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  } else {
    return NULL;
  }
}
inline void System_Alarms_Alarm_State::set_allocated_type_id_string(::std::string* type_id_string) {
  if (!has_type_id_string()) {
    type_id_.type_id_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  clear_type_id();
  if (type_id_string != NULL) {
    set_has_type_id_string();
    type_id_.type_id_string_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
        type_id_string);
  }
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Alarms.Alarm.State.type_id_string)
}

inline bool System_Alarms_Alarm_State::has_type_id() const {
  return type_id_case() != TYPE_ID_NOT_SET;
}
inline void System_Alarms_Alarm_State::clear_has_type_id() {
  _oneof_case_[0] = TYPE_ID_NOT_SET;
}
inline System_Alarms_Alarm_State::TypeIdCase System_Alarms_Alarm_State::type_id_case() const {
  return System_Alarms_Alarm_State::TypeIdCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// System_Alarms_Alarm

// .openconfig.openconfig_system.System.Alarms.Alarm.Config config = 139180024 [(.yext.schemapath) = "/system/alarms/alarm/config"];
inline bool System_Alarms_Alarm::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Alarms_Alarm::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Alarms_Alarm_Config& System_Alarms_Alarm::config() const {
  const ::openconfig::openconfig_system::System_Alarms_Alarm_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Alarms.Alarm.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Alarms_Alarm_Config*>(
      &::openconfig::openconfig_system::_System_Alarms_Alarm_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Alarms_Alarm_Config* System_Alarms_Alarm::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Alarms.Alarm.config)
  
  ::openconfig::openconfig_system::System_Alarms_Alarm_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Alarms_Alarm_Config* System_Alarms_Alarm::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Alarms_Alarm_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Alarms.Alarm.config)
  return config_;
}
inline void System_Alarms_Alarm::set_allocated_config(::openconfig::openconfig_system::System_Alarms_Alarm_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Alarms.Alarm.config)
}

// .openconfig.openconfig_system.System.Alarms.Alarm.State state = 273821713 [(.yext.schemapath) = "/system/alarms/alarm/state"];
inline bool System_Alarms_Alarm::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Alarms_Alarm::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Alarms_Alarm_State& System_Alarms_Alarm::state() const {
  const ::openconfig::openconfig_system::System_Alarms_Alarm_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Alarms.Alarm.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Alarms_Alarm_State*>(
      &::openconfig::openconfig_system::_System_Alarms_Alarm_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Alarms_Alarm_State* System_Alarms_Alarm::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Alarms.Alarm.state)
  
  ::openconfig::openconfig_system::System_Alarms_Alarm_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Alarms_Alarm_State* System_Alarms_Alarm::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Alarms_Alarm_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Alarms.Alarm.state)
  return state_;
}
inline void System_Alarms_Alarm::set_allocated_state(::openconfig::openconfig_system::System_Alarms_Alarm_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Alarms.Alarm.state)
}

// -------------------------------------------------------------------

// System_Alarms_AlarmKey

// string id = 1 [(.yext.schemapath) = "/system/alarms/alarm/id"];
inline void System_Alarms_AlarmKey::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& System_Alarms_AlarmKey::id() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Alarms.AlarmKey.id)
  return id_.GetNoArena();
}
inline void System_Alarms_AlarmKey::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Alarms.AlarmKey.id)
}
#if LANG_CXX11
inline void System_Alarms_AlarmKey::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_system.System.Alarms.AlarmKey.id)
}
#endif
inline void System_Alarms_AlarmKey::set_id(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_system.System.Alarms.AlarmKey.id)
}
inline void System_Alarms_AlarmKey::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_system.System.Alarms.AlarmKey.id)
}
inline ::std::string* System_Alarms_AlarmKey::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Alarms.AlarmKey.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* System_Alarms_AlarmKey::release_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Alarms.AlarmKey.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void System_Alarms_AlarmKey::set_allocated_id(::std::string* id) {
  if (id != NULL) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Alarms.AlarmKey.id)
}

// .openconfig.openconfig_system.System.Alarms.Alarm alarm = 2;
inline bool System_Alarms_AlarmKey::has_alarm() const {
  return this != internal_default_instance() && alarm_ != NULL;
}
inline void System_Alarms_AlarmKey::clear_alarm() {
  if (GetArenaNoVirtual() == NULL && alarm_ != NULL) {
    delete alarm_;
  }
  alarm_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Alarms_Alarm& System_Alarms_AlarmKey::alarm() const {
  const ::openconfig::openconfig_system::System_Alarms_Alarm* p = alarm_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Alarms.AlarmKey.alarm)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Alarms_Alarm*>(
      &::openconfig::openconfig_system::_System_Alarms_Alarm_default_instance_);
}
inline ::openconfig::openconfig_system::System_Alarms_Alarm* System_Alarms_AlarmKey::release_alarm() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Alarms.AlarmKey.alarm)
  
  ::openconfig::openconfig_system::System_Alarms_Alarm* temp = alarm_;
  alarm_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Alarms_Alarm* System_Alarms_AlarmKey::mutable_alarm() {
  
  if (alarm_ == NULL) {
    alarm_ = new ::openconfig::openconfig_system::System_Alarms_Alarm;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Alarms.AlarmKey.alarm)
  return alarm_;
}
inline void System_Alarms_AlarmKey::set_allocated_alarm(::openconfig::openconfig_system::System_Alarms_Alarm* alarm) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete alarm_;
  }
  if (alarm) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      alarm = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, alarm, submessage_arena);
    }
    
  } else {
    
  }
  alarm_ = alarm;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Alarms.AlarmKey.alarm)
}

// -------------------------------------------------------------------

// System_Alarms

// repeated .openconfig.openconfig_system.System.Alarms.AlarmKey alarm = 221321319 [(.yext.schemapath) = "/system/alarms/alarm"];
inline int System_Alarms::alarm_size() const {
  return alarm_.size();
}
inline void System_Alarms::clear_alarm() {
  alarm_.Clear();
}
inline const ::openconfig::openconfig_system::System_Alarms_AlarmKey& System_Alarms::alarm(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Alarms.alarm)
  return alarm_.Get(index);
}
inline ::openconfig::openconfig_system::System_Alarms_AlarmKey* System_Alarms::mutable_alarm(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Alarms.alarm)
  return alarm_.Mutable(index);
}
inline ::openconfig::openconfig_system::System_Alarms_AlarmKey* System_Alarms::add_alarm() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Alarms.alarm)
  return alarm_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Alarms_AlarmKey >*
System_Alarms::mutable_alarm() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Alarms.alarm)
  return &alarm_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Alarms_AlarmKey >&
System_Alarms::alarm() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Alarms.alarm)
  return alarm_;
}

// -------------------------------------------------------------------

// System_Clock_Config

// .ywrapper.StringValue timezone_name = 100228070 [(.yext.schemapath) = "/system/clock/config/timezone-name"];
inline bool System_Clock_Config::has_timezone_name() const {
  return this != internal_default_instance() && timezone_name_ != NULL;
}
inline const ::ywrapper::StringValue& System_Clock_Config::timezone_name() const {
  const ::ywrapper::StringValue* p = timezone_name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Clock.Config.timezone_name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Clock_Config::release_timezone_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Clock.Config.timezone_name)
  
  ::ywrapper::StringValue* temp = timezone_name_;
  timezone_name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Clock_Config::mutable_timezone_name() {
  
  if (timezone_name_ == NULL) {
    timezone_name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Clock.Config.timezone_name)
  return timezone_name_;
}
inline void System_Clock_Config::set_allocated_timezone_name(::ywrapper::StringValue* timezone_name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timezone_name_);
  }
  if (timezone_name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timezone_name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timezone_name, submessage_arena);
    }
    
  } else {
    
  }
  timezone_name_ = timezone_name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Clock.Config.timezone_name)
}

// -------------------------------------------------------------------

// System_Clock_State

// .ywrapper.StringValue timezone_name = 390124251 [(.yext.schemapath) = "/system/clock/state/timezone-name"];
inline bool System_Clock_State::has_timezone_name() const {
  return this != internal_default_instance() && timezone_name_ != NULL;
}
inline const ::ywrapper::StringValue& System_Clock_State::timezone_name() const {
  const ::ywrapper::StringValue* p = timezone_name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Clock.State.timezone_name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Clock_State::release_timezone_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Clock.State.timezone_name)
  
  ::ywrapper::StringValue* temp = timezone_name_;
  timezone_name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Clock_State::mutable_timezone_name() {
  
  if (timezone_name_ == NULL) {
    timezone_name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Clock.State.timezone_name)
  return timezone_name_;
}
inline void System_Clock_State::set_allocated_timezone_name(::ywrapper::StringValue* timezone_name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timezone_name_);
  }
  if (timezone_name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timezone_name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timezone_name, submessage_arena);
    }
    
  } else {
    
  }
  timezone_name_ = timezone_name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Clock.State.timezone_name)
}

// -------------------------------------------------------------------

// System_Clock

// .openconfig.openconfig_system.System.Clock.Config config = 375106460 [(.yext.schemapath) = "/system/clock/config"];
inline bool System_Clock::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Clock::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Clock_Config& System_Clock::config() const {
  const ::openconfig::openconfig_system::System_Clock_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Clock.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Clock_Config*>(
      &::openconfig::openconfig_system::_System_Clock_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Clock_Config* System_Clock::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Clock.config)
  
  ::openconfig::openconfig_system::System_Clock_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Clock_Config* System_Clock::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Clock_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Clock.config)
  return config_;
}
inline void System_Clock::set_allocated_config(::openconfig::openconfig_system::System_Clock_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Clock.config)
}

// .openconfig.openconfig_system.System.Clock.State state = 162896405 [(.yext.schemapath) = "/system/clock/state"];
inline bool System_Clock::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Clock::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Clock_State& System_Clock::state() const {
  const ::openconfig::openconfig_system::System_Clock_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Clock.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Clock_State*>(
      &::openconfig::openconfig_system::_System_Clock_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Clock_State* System_Clock::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Clock.state)
  
  ::openconfig::openconfig_system::System_Clock_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Clock_State* System_Clock::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Clock_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Clock.state)
  return state_;
}
inline void System_Clock::set_allocated_state(::openconfig::openconfig_system::System_Clock_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Clock.state)
}

// -------------------------------------------------------------------

// System_Config

// .ywrapper.StringValue domain_name = 514451884 [(.yext.schemapath) = "/system/config/domain-name"];
inline bool System_Config::has_domain_name() const {
  return this != internal_default_instance() && domain_name_ != NULL;
}
inline const ::ywrapper::StringValue& System_Config::domain_name() const {
  const ::ywrapper::StringValue* p = domain_name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Config.domain_name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Config::release_domain_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Config.domain_name)
  
  ::ywrapper::StringValue* temp = domain_name_;
  domain_name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Config::mutable_domain_name() {
  
  if (domain_name_ == NULL) {
    domain_name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Config.domain_name)
  return domain_name_;
}
inline void System_Config::set_allocated_domain_name(::ywrapper::StringValue* domain_name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(domain_name_);
  }
  if (domain_name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      domain_name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, domain_name, submessage_arena);
    }
    
  } else {
    
  }
  domain_name_ = domain_name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Config.domain_name)
}

// .ywrapper.StringValue hostname = 502971767 [(.yext.schemapath) = "/system/config/hostname"];
inline bool System_Config::has_hostname() const {
  return this != internal_default_instance() && hostname_ != NULL;
}
inline const ::ywrapper::StringValue& System_Config::hostname() const {
  const ::ywrapper::StringValue* p = hostname_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Config.hostname)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Config::release_hostname() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Config.hostname)
  
  ::ywrapper::StringValue* temp = hostname_;
  hostname_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Config::mutable_hostname() {
  
  if (hostname_ == NULL) {
    hostname_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Config.hostname)
  return hostname_;
}
inline void System_Config::set_allocated_hostname(::ywrapper::StringValue* hostname) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hostname_);
  }
  if (hostname) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hostname = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hostname, submessage_arena);
    }
    
  } else {
    
  }
  hostname_ = hostname;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Config.hostname)
}

// .ywrapper.StringValue login_banner = 161971574 [(.yext.schemapath) = "/system/config/login-banner"];
inline bool System_Config::has_login_banner() const {
  return this != internal_default_instance() && login_banner_ != NULL;
}
inline const ::ywrapper::StringValue& System_Config::login_banner() const {
  const ::ywrapper::StringValue* p = login_banner_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Config.login_banner)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Config::release_login_banner() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Config.login_banner)
  
  ::ywrapper::StringValue* temp = login_banner_;
  login_banner_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Config::mutable_login_banner() {
  
  if (login_banner_ == NULL) {
    login_banner_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Config.login_banner)
  return login_banner_;
}
inline void System_Config::set_allocated_login_banner(::ywrapper::StringValue* login_banner) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(login_banner_);
  }
  if (login_banner) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      login_banner = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, login_banner, submessage_arena);
    }
    
  } else {
    
  }
  login_banner_ = login_banner;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Config.login_banner)
}

// .ywrapper.StringValue motd_banner = 428956479 [(.yext.schemapath) = "/system/config/motd-banner"];
inline bool System_Config::has_motd_banner() const {
  return this != internal_default_instance() && motd_banner_ != NULL;
}
inline const ::ywrapper::StringValue& System_Config::motd_banner() const {
  const ::ywrapper::StringValue* p = motd_banner_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Config.motd_banner)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Config::release_motd_banner() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Config.motd_banner)
  
  ::ywrapper::StringValue* temp = motd_banner_;
  motd_banner_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Config::mutable_motd_banner() {
  
  if (motd_banner_ == NULL) {
    motd_banner_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Config.motd_banner)
  return motd_banner_;
}
inline void System_Config::set_allocated_motd_banner(::ywrapper::StringValue* motd_banner) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(motd_banner_);
  }
  if (motd_banner) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      motd_banner = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, motd_banner, submessage_arena);
    }
    
  } else {
    
  }
  motd_banner_ = motd_banner;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Config.motd_banner)
}

// -------------------------------------------------------------------

// System_Cpus_Cpu_State_HardwareInterrupt

// .ywrapper.UintValue avg = 422453613 [(.yext.schemapath) = "/system/cpus/cpu/state/hardware-interrupt/avg"];
inline bool System_Cpus_Cpu_State_HardwareInterrupt::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_HardwareInterrupt::avg() const {
  const ::ywrapper::UintValue* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.HardwareInterrupt.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_HardwareInterrupt::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.HardwareInterrupt.avg)
  
  ::ywrapper::UintValue* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_HardwareInterrupt::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.HardwareInterrupt.avg)
  return avg_;
}
inline void System_Cpus_Cpu_State_HardwareInterrupt::set_allocated_avg(::ywrapper::UintValue* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.HardwareInterrupt.avg)
}

// .ywrapper.UintValue instant = 196083674 [(.yext.schemapath) = "/system/cpus/cpu/state/hardware-interrupt/instant"];
inline bool System_Cpus_Cpu_State_HardwareInterrupt::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_HardwareInterrupt::instant() const {
  const ::ywrapper::UintValue* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.HardwareInterrupt.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_HardwareInterrupt::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.HardwareInterrupt.instant)
  
  ::ywrapper::UintValue* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_HardwareInterrupt::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.HardwareInterrupt.instant)
  return instant_;
}
inline void System_Cpus_Cpu_State_HardwareInterrupt::set_allocated_instant(::ywrapper::UintValue* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.HardwareInterrupt.instant)
}

// .ywrapper.UintValue interval = 343471148 [(.yext.schemapath) = "/system/cpus/cpu/state/hardware-interrupt/interval"];
inline bool System_Cpus_Cpu_State_HardwareInterrupt::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_HardwareInterrupt::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.HardwareInterrupt.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_HardwareInterrupt::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.HardwareInterrupt.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_HardwareInterrupt::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.HardwareInterrupt.interval)
  return interval_;
}
inline void System_Cpus_Cpu_State_HardwareInterrupt::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.HardwareInterrupt.interval)
}

// .ywrapper.UintValue max = 203756111 [(.yext.schemapath) = "/system/cpus/cpu/state/hardware-interrupt/max"];
inline bool System_Cpus_Cpu_State_HardwareInterrupt::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_HardwareInterrupt::max() const {
  const ::ywrapper::UintValue* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.HardwareInterrupt.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_HardwareInterrupt::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.HardwareInterrupt.max)
  
  ::ywrapper::UintValue* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_HardwareInterrupt::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.HardwareInterrupt.max)
  return max_;
}
inline void System_Cpus_Cpu_State_HardwareInterrupt::set_allocated_max(::ywrapper::UintValue* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.HardwareInterrupt.max)
}

// .ywrapper.UintValue min = 69535217 [(.yext.schemapath) = "/system/cpus/cpu/state/hardware-interrupt/min"];
inline bool System_Cpus_Cpu_State_HardwareInterrupt::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_HardwareInterrupt::min() const {
  const ::ywrapper::UintValue* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.HardwareInterrupt.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_HardwareInterrupt::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.HardwareInterrupt.min)
  
  ::ywrapper::UintValue* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_HardwareInterrupt::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.HardwareInterrupt.min)
  return min_;
}
inline void System_Cpus_Cpu_State_HardwareInterrupt::set_allocated_min(::ywrapper::UintValue* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.HardwareInterrupt.min)
}

// -------------------------------------------------------------------

// System_Cpus_Cpu_State_Idle

// .ywrapper.UintValue avg = 124715605 [(.yext.schemapath) = "/system/cpus/cpu/state/idle/avg"];
inline bool System_Cpus_Cpu_State_Idle::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_Idle::avg() const {
  const ::ywrapper::UintValue* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.Idle.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Idle::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.Idle.avg)
  
  ::ywrapper::UintValue* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Idle::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.Idle.avg)
  return avg_;
}
inline void System_Cpus_Cpu_State_Idle::set_allocated_avg(::ywrapper::UintValue* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.Idle.avg)
}

// .ywrapper.UintValue instant = 230199506 [(.yext.schemapath) = "/system/cpus/cpu/state/idle/instant"];
inline bool System_Cpus_Cpu_State_Idle::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_Idle::instant() const {
  const ::ywrapper::UintValue* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.Idle.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Idle::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.Idle.instant)
  
  ::ywrapper::UintValue* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Idle::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.Idle.instant)
  return instant_;
}
inline void System_Cpus_Cpu_State_Idle::set_allocated_instant(::ywrapper::UintValue* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.Idle.instant)
}

// .ywrapper.UintValue interval = 496096436 [(.yext.schemapath) = "/system/cpus/cpu/state/idle/interval"];
inline bool System_Cpus_Cpu_State_Idle::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_Idle::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.Idle.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Idle::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.Idle.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Idle::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.Idle.interval)
  return interval_;
}
inline void System_Cpus_Cpu_State_Idle::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.Idle.interval)
}

// .ywrapper.UintValue max = 445461847 [(.yext.schemapath) = "/system/cpus/cpu/state/idle/max"];
inline bool System_Cpus_Cpu_State_Idle::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_Idle::max() const {
  const ::ywrapper::UintValue* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.Idle.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Idle::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.Idle.max)
  
  ::ywrapper::UintValue* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Idle::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.Idle.max)
  return max_;
}
inline void System_Cpus_Cpu_State_Idle::set_allocated_max(::ywrapper::UintValue* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.Idle.max)
}

// .ywrapper.UintValue min = 42811817 [(.yext.schemapath) = "/system/cpus/cpu/state/idle/min"];
inline bool System_Cpus_Cpu_State_Idle::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_Idle::min() const {
  const ::ywrapper::UintValue* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.Idle.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Idle::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.Idle.min)
  
  ::ywrapper::UintValue* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Idle::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.Idle.min)
  return min_;
}
inline void System_Cpus_Cpu_State_Idle::set_allocated_min(::ywrapper::UintValue* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.Idle.min)
}

// -------------------------------------------------------------------

// System_Cpus_Cpu_State_Kernel

// .ywrapper.UintValue avg = 253885460 [(.yext.schemapath) = "/system/cpus/cpu/state/kernel/avg"];
inline bool System_Cpus_Cpu_State_Kernel::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_Kernel::avg() const {
  const ::ywrapper::UintValue* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.Kernel.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Kernel::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.Kernel.avg)
  
  ::ywrapper::UintValue* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Kernel::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.Kernel.avg)
  return avg_;
}
inline void System_Cpus_Cpu_State_Kernel::set_allocated_avg(::ywrapper::UintValue* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.Kernel.avg)
}

// .ywrapper.UintValue instant = 168068719 [(.yext.schemapath) = "/system/cpus/cpu/state/kernel/instant"];
inline bool System_Cpus_Cpu_State_Kernel::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_Kernel::instant() const {
  const ::ywrapper::UintValue* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.Kernel.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Kernel::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.Kernel.instant)
  
  ::ywrapper::UintValue* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Kernel::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.Kernel.instant)
  return instant_;
}
inline void System_Cpus_Cpu_State_Kernel::set_allocated_instant(::ywrapper::UintValue* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.Kernel.instant)
}

// .ywrapper.UintValue interval = 444985103 [(.yext.schemapath) = "/system/cpus/cpu/state/kernel/interval"];
inline bool System_Cpus_Cpu_State_Kernel::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_Kernel::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.Kernel.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Kernel::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.Kernel.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Kernel::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.Kernel.interval)
  return interval_;
}
inline void System_Cpus_Cpu_State_Kernel::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.Kernel.interval)
}

// .ywrapper.UintValue max = 470023086 [(.yext.schemapath) = "/system/cpus/cpu/state/kernel/max"];
inline bool System_Cpus_Cpu_State_Kernel::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_Kernel::max() const {
  const ::ywrapper::UintValue* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.Kernel.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Kernel::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.Kernel.max)
  
  ::ywrapper::UintValue* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Kernel::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.Kernel.max)
  return max_;
}
inline void System_Cpus_Cpu_State_Kernel::set_allocated_max(::ywrapper::UintValue* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.Kernel.max)
}

// .ywrapper.UintValue min = 67373056 [(.yext.schemapath) = "/system/cpus/cpu/state/kernel/min"];
inline bool System_Cpus_Cpu_State_Kernel::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_Kernel::min() const {
  const ::ywrapper::UintValue* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.Kernel.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Kernel::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.Kernel.min)
  
  ::ywrapper::UintValue* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Kernel::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.Kernel.min)
  return min_;
}
inline void System_Cpus_Cpu_State_Kernel::set_allocated_min(::ywrapper::UintValue* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.Kernel.min)
}

// -------------------------------------------------------------------

// System_Cpus_Cpu_State_Nice

// .ywrapper.UintValue avg = 329385588 [(.yext.schemapath) = "/system/cpus/cpu/state/nice/avg"];
inline bool System_Cpus_Cpu_State_Nice::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_Nice::avg() const {
  const ::ywrapper::UintValue* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.Nice.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Nice::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.Nice.avg)
  
  ::ywrapper::UintValue* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Nice::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.Nice.avg)
  return avg_;
}
inline void System_Cpus_Cpu_State_Nice::set_allocated_avg(::ywrapper::UintValue* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.Nice.avg)
}

// .ywrapper.UintValue instant = 453505999 [(.yext.schemapath) = "/system/cpus/cpu/state/nice/instant"];
inline bool System_Cpus_Cpu_State_Nice::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_Nice::instant() const {
  const ::ywrapper::UintValue* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.Nice.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Nice::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.Nice.instant)
  
  ::ywrapper::UintValue* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Nice::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.Nice.instant)
  return instant_;
}
inline void System_Cpus_Cpu_State_Nice::set_allocated_instant(::ywrapper::UintValue* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.Nice.instant)
}

// .ywrapper.UintValue interval = 48963055 [(.yext.schemapath) = "/system/cpus/cpu/state/nice/interval"];
inline bool System_Cpus_Cpu_State_Nice::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_Nice::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.Nice.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Nice::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.Nice.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Nice::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.Nice.interval)
  return interval_;
}
inline void System_Cpus_Cpu_State_Nice::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.Nice.interval)
}

// .ywrapper.UintValue max = 8755214 [(.yext.schemapath) = "/system/cpus/cpu/state/nice/max"];
inline bool System_Cpus_Cpu_State_Nice::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_Nice::max() const {
  const ::ywrapper::UintValue* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.Nice.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Nice::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.Nice.max)
  
  ::ywrapper::UintValue* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Nice::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.Nice.max)
  return max_;
}
inline void System_Cpus_Cpu_State_Nice::set_allocated_max(::ywrapper::UintValue* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.Nice.max)
}

// .ywrapper.UintValue min = 142976352 [(.yext.schemapath) = "/system/cpus/cpu/state/nice/min"];
inline bool System_Cpus_Cpu_State_Nice::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_Nice::min() const {
  const ::ywrapper::UintValue* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.Nice.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Nice::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.Nice.min)
  
  ::ywrapper::UintValue* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Nice::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.Nice.min)
  return min_;
}
inline void System_Cpus_Cpu_State_Nice::set_allocated_min(::ywrapper::UintValue* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.Nice.min)
}

// -------------------------------------------------------------------

// System_Cpus_Cpu_State_SoftwareInterrupt

// .ywrapper.UintValue avg = 458756582 [(.yext.schemapath) = "/system/cpus/cpu/state/software-interrupt/avg"];
inline bool System_Cpus_Cpu_State_SoftwareInterrupt::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_SoftwareInterrupt::avg() const {
  const ::ywrapper::UintValue* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.SoftwareInterrupt.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_SoftwareInterrupt::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.SoftwareInterrupt.avg)
  
  ::ywrapper::UintValue* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_SoftwareInterrupt::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.SoftwareInterrupt.avg)
  return avg_;
}
inline void System_Cpus_Cpu_State_SoftwareInterrupt::set_allocated_avg(::ywrapper::UintValue* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.SoftwareInterrupt.avg)
}

// .ywrapper.UintValue instant = 162043877 [(.yext.schemapath) = "/system/cpus/cpu/state/software-interrupt/instant"];
inline bool System_Cpus_Cpu_State_SoftwareInterrupt::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_SoftwareInterrupt::instant() const {
  const ::ywrapper::UintValue* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.SoftwareInterrupt.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_SoftwareInterrupt::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.SoftwareInterrupt.instant)
  
  ::ywrapper::UintValue* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_SoftwareInterrupt::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.SoftwareInterrupt.instant)
  return instant_;
}
inline void System_Cpus_Cpu_State_SoftwareInterrupt::set_allocated_instant(::ywrapper::UintValue* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.SoftwareInterrupt.instant)
}

// .ywrapper.UintValue interval = 336602009 [(.yext.schemapath) = "/system/cpus/cpu/state/software-interrupt/interval"];
inline bool System_Cpus_Cpu_State_SoftwareInterrupt::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_SoftwareInterrupt::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.SoftwareInterrupt.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_SoftwareInterrupt::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.SoftwareInterrupt.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_SoftwareInterrupt::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.SoftwareInterrupt.interval)
  return interval_;
}
inline void System_Cpus_Cpu_State_SoftwareInterrupt::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.SoftwareInterrupt.interval)
}

// .ywrapper.UintValue max = 71002944 [(.yext.schemapath) = "/system/cpus/cpu/state/software-interrupt/max"];
inline bool System_Cpus_Cpu_State_SoftwareInterrupt::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_SoftwareInterrupt::max() const {
  const ::ywrapper::UintValue* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.SoftwareInterrupt.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_SoftwareInterrupt::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.SoftwareInterrupt.max)
  
  ::ywrapper::UintValue* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_SoftwareInterrupt::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.SoftwareInterrupt.max)
  return max_;
}
inline void System_Cpus_Cpu_State_SoftwareInterrupt::set_allocated_max(::ywrapper::UintValue* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.SoftwareInterrupt.max)
}

// .ywrapper.UintValue min = 473652942 [(.yext.schemapath) = "/system/cpus/cpu/state/software-interrupt/min"];
inline bool System_Cpus_Cpu_State_SoftwareInterrupt::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_SoftwareInterrupt::min() const {
  const ::ywrapper::UintValue* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.SoftwareInterrupt.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_SoftwareInterrupt::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.SoftwareInterrupt.min)
  
  ::ywrapper::UintValue* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_SoftwareInterrupt::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.SoftwareInterrupt.min)
  return min_;
}
inline void System_Cpus_Cpu_State_SoftwareInterrupt::set_allocated_min(::ywrapper::UintValue* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.SoftwareInterrupt.min)
}

// -------------------------------------------------------------------

// System_Cpus_Cpu_State_Total

// .ywrapper.UintValue avg = 132944461 [(.yext.schemapath) = "/system/cpus/cpu/state/total/avg"];
inline bool System_Cpus_Cpu_State_Total::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_Total::avg() const {
  const ::ywrapper::UintValue* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.Total.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Total::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.Total.avg)
  
  ::ywrapper::UintValue* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Total::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.Total.avg)
  return avg_;
}
inline void System_Cpus_Cpu_State_Total::set_allocated_avg(::ywrapper::UintValue* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.Total.avg)
}

// .ywrapper.UintValue instant = 386144186 [(.yext.schemapath) = "/system/cpus/cpu/state/total/instant"];
inline bool System_Cpus_Cpu_State_Total::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_Total::instant() const {
  const ::ywrapper::UintValue* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.Total.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Total::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.Total.instant)
  
  ::ywrapper::UintValue* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Total::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.Total.instant)
  return instant_;
}
inline void System_Cpus_Cpu_State_Total::set_allocated_instant(::ywrapper::UintValue* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.Total.instant)
}

// .ywrapper.UintValue interval = 496728204 [(.yext.schemapath) = "/system/cpus/cpu/state/total/interval"];
inline bool System_Cpus_Cpu_State_Total::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_Total::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.Total.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Total::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.Total.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Total::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.Total.interval)
  return interval_;
}
inline void System_Cpus_Cpu_State_Total::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.Total.interval)
}

// .ywrapper.UintValue max = 451014703 [(.yext.schemapath) = "/system/cpus/cpu/state/total/max"];
inline bool System_Cpus_Cpu_State_Total::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_Total::max() const {
  const ::ywrapper::UintValue* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.Total.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Total::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.Total.max)
  
  ::ywrapper::UintValue* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Total::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.Total.max)
  return max_;
}
inline void System_Cpus_Cpu_State_Total::set_allocated_max(::ywrapper::UintValue* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.Total.max)
}

// .ywrapper.UintValue min = 316793809 [(.yext.schemapath) = "/system/cpus/cpu/state/total/min"];
inline bool System_Cpus_Cpu_State_Total::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_Total::min() const {
  const ::ywrapper::UintValue* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.Total.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Total::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.Total.min)
  
  ::ywrapper::UintValue* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Total::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.Total.min)
  return min_;
}
inline void System_Cpus_Cpu_State_Total::set_allocated_min(::ywrapper::UintValue* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.Total.min)
}

// -------------------------------------------------------------------

// System_Cpus_Cpu_State_User

// .ywrapper.UintValue avg = 360451894 [(.yext.schemapath) = "/system/cpus/cpu/state/user/avg"];
inline bool System_Cpus_Cpu_State_User::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_User::avg() const {
  const ::ywrapper::UintValue* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.User.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_User::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.User.avg)
  
  ::ywrapper::UintValue* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_User::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.User.avg)
  return avg_;
}
inline void System_Cpus_Cpu_State_User::set_allocated_avg(::ywrapper::UintValue* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.User.avg)
}

// .ywrapper.UintValue instant = 3525685 [(.yext.schemapath) = "/system/cpus/cpu/state/user/instant"];
inline bool System_Cpus_Cpu_State_User::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_User::instant() const {
  const ::ywrapper::UintValue* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.User.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_User::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.User.instant)
  
  ::ywrapper::UintValue* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_User::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.User.instant)
  return instant_;
}
inline void System_Cpus_Cpu_State_User::set_allocated_instant(::ywrapper::UintValue* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.User.instant)
}

// .ywrapper.UintValue interval = 14529097 [(.yext.schemapath) = "/system/cpus/cpu/state/user/interval"];
inline bool System_Cpus_Cpu_State_User::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_User::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.User.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_User::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.User.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_User::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.User.interval)
  return interval_;
}
inline void System_Cpus_Cpu_State_User::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.User.interval)
}

// .ywrapper.UintValue max = 509582096 [(.yext.schemapath) = "/system/cpus/cpu/state/user/max"];
inline bool System_Cpus_Cpu_State_User::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_User::max() const {
  const ::ywrapper::UintValue* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.User.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_User::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.User.max)
  
  ::ywrapper::UintValue* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_User::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.User.max)
  return max_;
}
inline void System_Cpus_Cpu_State_User::set_allocated_max(::ywrapper::UintValue* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.User.max)
}

// .ywrapper.UintValue min = 375361214 [(.yext.schemapath) = "/system/cpus/cpu/state/user/min"];
inline bool System_Cpus_Cpu_State_User::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_User::min() const {
  const ::ywrapper::UintValue* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.User.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_User::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.User.min)
  
  ::ywrapper::UintValue* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_User::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.User.min)
  return min_;
}
inline void System_Cpus_Cpu_State_User::set_allocated_min(::ywrapper::UintValue* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.User.min)
}

// -------------------------------------------------------------------

// System_Cpus_Cpu_State_Wait

// .ywrapper.UintValue avg = 461699088 [(.yext.schemapath) = "/system/cpus/cpu/state/wait/avg"];
inline bool System_Cpus_Cpu_State_Wait::has_avg() const {
  return this != internal_default_instance() && avg_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_Wait::avg() const {
  const ::ywrapper::UintValue* p = avg_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.Wait.avg)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Wait::release_avg() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.Wait.avg)
  
  ::ywrapper::UintValue* temp = avg_;
  avg_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Wait::mutable_avg() {
  
  if (avg_ == NULL) {
    avg_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.Wait.avg)
  return avg_;
}
inline void System_Cpus_Cpu_State_Wait::set_allocated_avg(::ywrapper::UintValue* avg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(avg_);
  }
  if (avg) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      avg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, avg, submessage_arena);
    }
    
  } else {
    
  }
  avg_ = avg;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.Wait.avg)
}

// .ywrapper.UintValue instant = 14128043 [(.yext.schemapath) = "/system/cpus/cpu/state/wait/instant"];
inline bool System_Cpus_Cpu_State_Wait::has_instant() const {
  return this != internal_default_instance() && instant_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_Wait::instant() const {
  const ::ywrapper::UintValue* p = instant_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.Wait.instant)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Wait::release_instant() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.Wait.instant)
  
  ::ywrapper::UintValue* temp = instant_;
  instant_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Wait::mutable_instant() {
  
  if (instant_ == NULL) {
    instant_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.Wait.instant)
  return instant_;
}
inline void System_Cpus_Cpu_State_Wait::set_allocated_instant(::ywrapper::UintValue* instant) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(instant_);
  }
  if (instant) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      instant = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, instant, submessage_arena);
    }
    
  } else {
    
  }
  instant_ = instant;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.Wait.instant)
}

// .ywrapper.UintValue interval = 227652571 [(.yext.schemapath) = "/system/cpus/cpu/state/wait/interval"];
inline bool System_Cpus_Cpu_State_Wait::has_interval() const {
  return this != internal_default_instance() && interval_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_Wait::interval() const {
  const ::ywrapper::UintValue* p = interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.Wait.interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Wait::release_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.Wait.interval)
  
  ::ywrapper::UintValue* temp = interval_;
  interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Wait::mutable_interval() {
  
  if (interval_ == NULL) {
    interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.Wait.interval)
  return interval_;
}
inline void System_Cpus_Cpu_State_Wait::set_allocated_interval(::ywrapper::UintValue* interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(interval_);
  }
  if (interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, interval, submessage_arena);
    }
    
  } else {
    
  }
  interval_ = interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.Wait.interval)
}

// .ywrapper.UintValue max = 276556978 [(.yext.schemapath) = "/system/cpus/cpu/state/wait/max"];
inline bool System_Cpus_Cpu_State_Wait::has_max() const {
  return this != internal_default_instance() && max_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_Wait::max() const {
  const ::ywrapper::UintValue* p = max_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.Wait.max)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Wait::release_max() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.Wait.max)
  
  ::ywrapper::UintValue* temp = max_;
  max_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Wait::mutable_max() {
  
  if (max_ == NULL) {
    max_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.Wait.max)
  return max_;
}
inline void System_Cpus_Cpu_State_Wait::set_allocated_max(::ywrapper::UintValue* max) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_);
  }
  if (max) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max, submessage_arena);
    }
    
  } else {
    
  }
  max_ = max;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.Wait.max)
}

// .ywrapper.UintValue min = 142336092 [(.yext.schemapath) = "/system/cpus/cpu/state/wait/min"];
inline bool System_Cpus_Cpu_State_Wait::has_min() const {
  return this != internal_default_instance() && min_ != NULL;
}
inline const ::ywrapper::UintValue& System_Cpus_Cpu_State_Wait::min() const {
  const ::ywrapper::UintValue* p = min_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.Wait.min)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Wait::release_min() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.Wait.min)
  
  ::ywrapper::UintValue* temp = min_;
  min_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Cpus_Cpu_State_Wait::mutable_min() {
  
  if (min_ == NULL) {
    min_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.Wait.min)
  return min_;
}
inline void System_Cpus_Cpu_State_Wait::set_allocated_min(::ywrapper::UintValue* min) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(min_);
  }
  if (min) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      min = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, min, submessage_arena);
    }
    
  } else {
    
  }
  min_ = min;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.Wait.min)
}

// -------------------------------------------------------------------

// System_Cpus_Cpu_State

// .openconfig.openconfig_system.System.Cpus.Cpu.State.HardwareInterrupt hardware_interrupt = 81518708 [(.yext.schemapath) = "/system/cpus/cpu/state/hardware-interrupt"];
inline bool System_Cpus_Cpu_State::has_hardware_interrupt() const {
  return this != internal_default_instance() && hardware_interrupt_ != NULL;
}
inline void System_Cpus_Cpu_State::clear_hardware_interrupt() {
  if (GetArenaNoVirtual() == NULL && hardware_interrupt_ != NULL) {
    delete hardware_interrupt_;
  }
  hardware_interrupt_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Cpus_Cpu_State_HardwareInterrupt& System_Cpus_Cpu_State::hardware_interrupt() const {
  const ::openconfig::openconfig_system::System_Cpus_Cpu_State_HardwareInterrupt* p = hardware_interrupt_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.hardware_interrupt)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Cpus_Cpu_State_HardwareInterrupt*>(
      &::openconfig::openconfig_system::_System_Cpus_Cpu_State_HardwareInterrupt_default_instance_);
}
inline ::openconfig::openconfig_system::System_Cpus_Cpu_State_HardwareInterrupt* System_Cpus_Cpu_State::release_hardware_interrupt() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.hardware_interrupt)
  
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_HardwareInterrupt* temp = hardware_interrupt_;
  hardware_interrupt_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Cpus_Cpu_State_HardwareInterrupt* System_Cpus_Cpu_State::mutable_hardware_interrupt() {
  
  if (hardware_interrupt_ == NULL) {
    hardware_interrupt_ = new ::openconfig::openconfig_system::System_Cpus_Cpu_State_HardwareInterrupt;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.hardware_interrupt)
  return hardware_interrupt_;
}
inline void System_Cpus_Cpu_State::set_allocated_hardware_interrupt(::openconfig::openconfig_system::System_Cpus_Cpu_State_HardwareInterrupt* hardware_interrupt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete hardware_interrupt_;
  }
  if (hardware_interrupt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hardware_interrupt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hardware_interrupt, submessage_arena);
    }
    
  } else {
    
  }
  hardware_interrupt_ = hardware_interrupt;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.hardware_interrupt)
}

// .openconfig.openconfig_system.System.Cpus.Cpu.State.Idle idle = 511801900 [(.yext.schemapath) = "/system/cpus/cpu/state/idle"];
inline bool System_Cpus_Cpu_State::has_idle() const {
  return this != internal_default_instance() && idle_ != NULL;
}
inline void System_Cpus_Cpu_State::clear_idle() {
  if (GetArenaNoVirtual() == NULL && idle_ != NULL) {
    delete idle_;
  }
  idle_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Cpus_Cpu_State_Idle& System_Cpus_Cpu_State::idle() const {
  const ::openconfig::openconfig_system::System_Cpus_Cpu_State_Idle* p = idle_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.idle)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Cpus_Cpu_State_Idle*>(
      &::openconfig::openconfig_system::_System_Cpus_Cpu_State_Idle_default_instance_);
}
inline ::openconfig::openconfig_system::System_Cpus_Cpu_State_Idle* System_Cpus_Cpu_State::release_idle() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.idle)
  
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_Idle* temp = idle_;
  idle_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Cpus_Cpu_State_Idle* System_Cpus_Cpu_State::mutable_idle() {
  
  if (idle_ == NULL) {
    idle_ = new ::openconfig::openconfig_system::System_Cpus_Cpu_State_Idle;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.idle)
  return idle_;
}
inline void System_Cpus_Cpu_State::set_allocated_idle(::openconfig::openconfig_system::System_Cpus_Cpu_State_Idle* idle) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete idle_;
  }
  if (idle) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      idle = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, idle, submessage_arena);
    }
    
  } else {
    
  }
  idle_ = idle;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.idle)
}

// .openconfig.openconfig_system.System.Cpus.Cpu.State.Index index_index = 408896491;
inline bool System_Cpus_Cpu_State::has_index_index() const {
  return index_case() == kIndexIndex;
}
inline void System_Cpus_Cpu_State::set_has_index_index() {
  _oneof_case_[0] = kIndexIndex;
}
inline void System_Cpus_Cpu_State::clear_index_index() {
  if (has_index_index()) {
    index_.index_index_ = 0;
    clear_has_index();
  }
}
inline ::openconfig::openconfig_system::System_Cpus_Cpu_State_Index System_Cpus_Cpu_State::index_index() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.index_index)
  if (has_index_index()) {
    return static_cast< ::openconfig::openconfig_system::System_Cpus_Cpu_State_Index >(index_.index_index_);
  }
  return static_cast< ::openconfig::openconfig_system::System_Cpus_Cpu_State_Index >(0);
}
inline void System_Cpus_Cpu_State::set_index_index(::openconfig::openconfig_system::System_Cpus_Cpu_State_Index value) {
  if (!has_index_index()) {
    clear_index();
    set_has_index_index();
  }
  index_.index_index_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Cpus.Cpu.State.index_index)
}

// uint64 index_uint64 = 247396011;
inline bool System_Cpus_Cpu_State::has_index_uint64() const {
  return index_case() == kIndexUint64;
}
inline void System_Cpus_Cpu_State::set_has_index_uint64() {
  _oneof_case_[0] = kIndexUint64;
}
inline void System_Cpus_Cpu_State::clear_index_uint64() {
  if (has_index_uint64()) {
    index_.index_uint64_ = GOOGLE_ULONGLONG(0);
    clear_has_index();
  }
}
inline ::google::protobuf::uint64 System_Cpus_Cpu_State::index_uint64() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.index_uint64)
  if (has_index_uint64()) {
    return index_.index_uint64_;
  }
  return GOOGLE_ULONGLONG(0);
}
inline void System_Cpus_Cpu_State::set_index_uint64(::google::protobuf::uint64 value) {
  if (!has_index_uint64()) {
    clear_index();
    set_has_index_uint64();
  }
  index_.index_uint64_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Cpus.Cpu.State.index_uint64)
}

// .openconfig.openconfig_system.System.Cpus.Cpu.State.Kernel kernel = 23883017 [(.yext.schemapath) = "/system/cpus/cpu/state/kernel"];
inline bool System_Cpus_Cpu_State::has_kernel() const {
  return this != internal_default_instance() && kernel_ != NULL;
}
inline void System_Cpus_Cpu_State::clear_kernel() {
  if (GetArenaNoVirtual() == NULL && kernel_ != NULL) {
    delete kernel_;
  }
  kernel_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Cpus_Cpu_State_Kernel& System_Cpus_Cpu_State::kernel() const {
  const ::openconfig::openconfig_system::System_Cpus_Cpu_State_Kernel* p = kernel_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.kernel)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Cpus_Cpu_State_Kernel*>(
      &::openconfig::openconfig_system::_System_Cpus_Cpu_State_Kernel_default_instance_);
}
inline ::openconfig::openconfig_system::System_Cpus_Cpu_State_Kernel* System_Cpus_Cpu_State::release_kernel() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.kernel)
  
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_Kernel* temp = kernel_;
  kernel_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Cpus_Cpu_State_Kernel* System_Cpus_Cpu_State::mutable_kernel() {
  
  if (kernel_ == NULL) {
    kernel_ = new ::openconfig::openconfig_system::System_Cpus_Cpu_State_Kernel;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.kernel)
  return kernel_;
}
inline void System_Cpus_Cpu_State::set_allocated_kernel(::openconfig::openconfig_system::System_Cpus_Cpu_State_Kernel* kernel) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete kernel_;
  }
  if (kernel) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      kernel = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, kernel, submessage_arena);
    }
    
  } else {
    
  }
  kernel_ = kernel;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.kernel)
}

// .openconfig.openconfig_system.System.Cpus.Cpu.State.Nice nice = 74777833 [(.yext.schemapath) = "/system/cpus/cpu/state/nice"];
inline bool System_Cpus_Cpu_State::has_nice() const {
  return this != internal_default_instance() && nice_ != NULL;
}
inline void System_Cpus_Cpu_State::clear_nice() {
  if (GetArenaNoVirtual() == NULL && nice_ != NULL) {
    delete nice_;
  }
  nice_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Cpus_Cpu_State_Nice& System_Cpus_Cpu_State::nice() const {
  const ::openconfig::openconfig_system::System_Cpus_Cpu_State_Nice* p = nice_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.nice)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Cpus_Cpu_State_Nice*>(
      &::openconfig::openconfig_system::_System_Cpus_Cpu_State_Nice_default_instance_);
}
inline ::openconfig::openconfig_system::System_Cpus_Cpu_State_Nice* System_Cpus_Cpu_State::release_nice() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.nice)
  
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_Nice* temp = nice_;
  nice_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Cpus_Cpu_State_Nice* System_Cpus_Cpu_State::mutable_nice() {
  
  if (nice_ == NULL) {
    nice_ = new ::openconfig::openconfig_system::System_Cpus_Cpu_State_Nice;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.nice)
  return nice_;
}
inline void System_Cpus_Cpu_State::set_allocated_nice(::openconfig::openconfig_system::System_Cpus_Cpu_State_Nice* nice) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete nice_;
  }
  if (nice) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      nice = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, nice, submessage_arena);
    }
    
  } else {
    
  }
  nice_ = nice;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.nice)
}

// .openconfig.openconfig_system.System.Cpus.Cpu.State.SoftwareInterrupt software_interrupt = 350532999 [(.yext.schemapath) = "/system/cpus/cpu/state/software-interrupt"];
inline bool System_Cpus_Cpu_State::has_software_interrupt() const {
  return this != internal_default_instance() && software_interrupt_ != NULL;
}
inline void System_Cpus_Cpu_State::clear_software_interrupt() {
  if (GetArenaNoVirtual() == NULL && software_interrupt_ != NULL) {
    delete software_interrupt_;
  }
  software_interrupt_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Cpus_Cpu_State_SoftwareInterrupt& System_Cpus_Cpu_State::software_interrupt() const {
  const ::openconfig::openconfig_system::System_Cpus_Cpu_State_SoftwareInterrupt* p = software_interrupt_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.software_interrupt)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Cpus_Cpu_State_SoftwareInterrupt*>(
      &::openconfig::openconfig_system::_System_Cpus_Cpu_State_SoftwareInterrupt_default_instance_);
}
inline ::openconfig::openconfig_system::System_Cpus_Cpu_State_SoftwareInterrupt* System_Cpus_Cpu_State::release_software_interrupt() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.software_interrupt)
  
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_SoftwareInterrupt* temp = software_interrupt_;
  software_interrupt_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Cpus_Cpu_State_SoftwareInterrupt* System_Cpus_Cpu_State::mutable_software_interrupt() {
  
  if (software_interrupt_ == NULL) {
    software_interrupt_ = new ::openconfig::openconfig_system::System_Cpus_Cpu_State_SoftwareInterrupt;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.software_interrupt)
  return software_interrupt_;
}
inline void System_Cpus_Cpu_State::set_allocated_software_interrupt(::openconfig::openconfig_system::System_Cpus_Cpu_State_SoftwareInterrupt* software_interrupt) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete software_interrupt_;
  }
  if (software_interrupt) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      software_interrupt = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, software_interrupt, submessage_arena);
    }
    
  } else {
    
  }
  software_interrupt_ = software_interrupt;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.software_interrupt)
}

// .openconfig.openconfig_system.System.Cpus.Cpu.State.Total total = 497504852 [(.yext.schemapath) = "/system/cpus/cpu/state/total"];
inline bool System_Cpus_Cpu_State::has_total() const {
  return this != internal_default_instance() && total_ != NULL;
}
inline void System_Cpus_Cpu_State::clear_total() {
  if (GetArenaNoVirtual() == NULL && total_ != NULL) {
    delete total_;
  }
  total_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Cpus_Cpu_State_Total& System_Cpus_Cpu_State::total() const {
  const ::openconfig::openconfig_system::System_Cpus_Cpu_State_Total* p = total_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.total)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Cpus_Cpu_State_Total*>(
      &::openconfig::openconfig_system::_System_Cpus_Cpu_State_Total_default_instance_);
}
inline ::openconfig::openconfig_system::System_Cpus_Cpu_State_Total* System_Cpus_Cpu_State::release_total() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.total)
  
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_Total* temp = total_;
  total_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Cpus_Cpu_State_Total* System_Cpus_Cpu_State::mutable_total() {
  
  if (total_ == NULL) {
    total_ = new ::openconfig::openconfig_system::System_Cpus_Cpu_State_Total;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.total)
  return total_;
}
inline void System_Cpus_Cpu_State::set_allocated_total(::openconfig::openconfig_system::System_Cpus_Cpu_State_Total* total) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete total_;
  }
  if (total) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      total = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, total, submessage_arena);
    }
    
  } else {
    
  }
  total_ = total;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.total)
}

// .openconfig.openconfig_system.System.Cpus.Cpu.State.User user = 329002807 [(.yext.schemapath) = "/system/cpus/cpu/state/user"];
inline bool System_Cpus_Cpu_State::has_user() const {
  return this != internal_default_instance() && user_ != NULL;
}
inline void System_Cpus_Cpu_State::clear_user() {
  if (GetArenaNoVirtual() == NULL && user_ != NULL) {
    delete user_;
  }
  user_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Cpus_Cpu_State_User& System_Cpus_Cpu_State::user() const {
  const ::openconfig::openconfig_system::System_Cpus_Cpu_State_User* p = user_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.user)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Cpus_Cpu_State_User*>(
      &::openconfig::openconfig_system::_System_Cpus_Cpu_State_User_default_instance_);
}
inline ::openconfig::openconfig_system::System_Cpus_Cpu_State_User* System_Cpus_Cpu_State::release_user() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.user)
  
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_User* temp = user_;
  user_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Cpus_Cpu_State_User* System_Cpus_Cpu_State::mutable_user() {
  
  if (user_ == NULL) {
    user_ = new ::openconfig::openconfig_system::System_Cpus_Cpu_State_User;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.user)
  return user_;
}
inline void System_Cpus_Cpu_State::set_allocated_user(::openconfig::openconfig_system::System_Cpus_Cpu_State_User* user) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete user_;
  }
  if (user) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      user = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, user, submessage_arena);
    }
    
  } else {
    
  }
  user_ = user;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.user)
}

// .openconfig.openconfig_system.System.Cpus.Cpu.State.Wait wait = 517899549 [(.yext.schemapath) = "/system/cpus/cpu/state/wait"];
inline bool System_Cpus_Cpu_State::has_wait() const {
  return this != internal_default_instance() && wait_ != NULL;
}
inline void System_Cpus_Cpu_State::clear_wait() {
  if (GetArenaNoVirtual() == NULL && wait_ != NULL) {
    delete wait_;
  }
  wait_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Cpus_Cpu_State_Wait& System_Cpus_Cpu_State::wait() const {
  const ::openconfig::openconfig_system::System_Cpus_Cpu_State_Wait* p = wait_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.State.wait)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Cpus_Cpu_State_Wait*>(
      &::openconfig::openconfig_system::_System_Cpus_Cpu_State_Wait_default_instance_);
}
inline ::openconfig::openconfig_system::System_Cpus_Cpu_State_Wait* System_Cpus_Cpu_State::release_wait() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.State.wait)
  
  ::openconfig::openconfig_system::System_Cpus_Cpu_State_Wait* temp = wait_;
  wait_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Cpus_Cpu_State_Wait* System_Cpus_Cpu_State::mutable_wait() {
  
  if (wait_ == NULL) {
    wait_ = new ::openconfig::openconfig_system::System_Cpus_Cpu_State_Wait;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.State.wait)
  return wait_;
}
inline void System_Cpus_Cpu_State::set_allocated_wait(::openconfig::openconfig_system::System_Cpus_Cpu_State_Wait* wait) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete wait_;
  }
  if (wait) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      wait = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, wait, submessage_arena);
    }
    
  } else {
    
  }
  wait_ = wait;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.State.wait)
}

inline bool System_Cpus_Cpu_State::has_index() const {
  return index_case() != INDEX_NOT_SET;
}
inline void System_Cpus_Cpu_State::clear_has_index() {
  _oneof_case_[0] = INDEX_NOT_SET;
}
inline System_Cpus_Cpu_State::IndexCase System_Cpus_Cpu_State::index_case() const {
  return System_Cpus_Cpu_State::IndexCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// System_Cpus_Cpu

// .openconfig.openconfig_system.System.Cpus.Cpu.State state = 284865267 [(.yext.schemapath) = "/system/cpus/cpu/state"];
inline bool System_Cpus_Cpu::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Cpus_Cpu::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Cpus_Cpu_State& System_Cpus_Cpu::state() const {
  const ::openconfig::openconfig_system::System_Cpus_Cpu_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.Cpu.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Cpus_Cpu_State*>(
      &::openconfig::openconfig_system::_System_Cpus_Cpu_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Cpus_Cpu_State* System_Cpus_Cpu::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.Cpu.state)
  
  ::openconfig::openconfig_system::System_Cpus_Cpu_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Cpus_Cpu_State* System_Cpus_Cpu::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Cpus_Cpu_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.Cpu.state)
  return state_;
}
inline void System_Cpus_Cpu::set_allocated_state(::openconfig::openconfig_system::System_Cpus_Cpu_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.Cpu.state)
}

// -------------------------------------------------------------------

// System_Cpus_CpuKey

// .openconfig.openconfig_system.System.Cpus.CpuKey.Index index_index = 408896491;
inline bool System_Cpus_CpuKey::has_index_index() const {
  return index_case() == kIndexIndex;
}
inline void System_Cpus_CpuKey::set_has_index_index() {
  _oneof_case_[0] = kIndexIndex;
}
inline void System_Cpus_CpuKey::clear_index_index() {
  if (has_index_index()) {
    index_.index_index_ = 0;
    clear_has_index();
  }
}
inline ::openconfig::openconfig_system::System_Cpus_CpuKey_Index System_Cpus_CpuKey::index_index() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.CpuKey.index_index)
  if (has_index_index()) {
    return static_cast< ::openconfig::openconfig_system::System_Cpus_CpuKey_Index >(index_.index_index_);
  }
  return static_cast< ::openconfig::openconfig_system::System_Cpus_CpuKey_Index >(0);
}
inline void System_Cpus_CpuKey::set_index_index(::openconfig::openconfig_system::System_Cpus_CpuKey_Index value) {
  if (!has_index_index()) {
    clear_index();
    set_has_index_index();
  }
  index_.index_index_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Cpus.CpuKey.index_index)
}

// uint64 index_uint64 = 247396011;
inline bool System_Cpus_CpuKey::has_index_uint64() const {
  return index_case() == kIndexUint64;
}
inline void System_Cpus_CpuKey::set_has_index_uint64() {
  _oneof_case_[0] = kIndexUint64;
}
inline void System_Cpus_CpuKey::clear_index_uint64() {
  if (has_index_uint64()) {
    index_.index_uint64_ = GOOGLE_ULONGLONG(0);
    clear_has_index();
  }
}
inline ::google::protobuf::uint64 System_Cpus_CpuKey::index_uint64() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.CpuKey.index_uint64)
  if (has_index_uint64()) {
    return index_.index_uint64_;
  }
  return GOOGLE_ULONGLONG(0);
}
inline void System_Cpus_CpuKey::set_index_uint64(::google::protobuf::uint64 value) {
  if (!has_index_uint64()) {
    clear_index();
    set_has_index_uint64();
  }
  index_.index_uint64_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Cpus.CpuKey.index_uint64)
}

// .openconfig.openconfig_system.System.Cpus.Cpu cpu = 2;
inline bool System_Cpus_CpuKey::has_cpu() const {
  return this != internal_default_instance() && cpu_ != NULL;
}
inline void System_Cpus_CpuKey::clear_cpu() {
  if (GetArenaNoVirtual() == NULL && cpu_ != NULL) {
    delete cpu_;
  }
  cpu_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Cpus_Cpu& System_Cpus_CpuKey::cpu() const {
  const ::openconfig::openconfig_system::System_Cpus_Cpu* p = cpu_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.CpuKey.cpu)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Cpus_Cpu*>(
      &::openconfig::openconfig_system::_System_Cpus_Cpu_default_instance_);
}
inline ::openconfig::openconfig_system::System_Cpus_Cpu* System_Cpus_CpuKey::release_cpu() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Cpus.CpuKey.cpu)
  
  ::openconfig::openconfig_system::System_Cpus_Cpu* temp = cpu_;
  cpu_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Cpus_Cpu* System_Cpus_CpuKey::mutable_cpu() {
  
  if (cpu_ == NULL) {
    cpu_ = new ::openconfig::openconfig_system::System_Cpus_Cpu;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.CpuKey.cpu)
  return cpu_;
}
inline void System_Cpus_CpuKey::set_allocated_cpu(::openconfig::openconfig_system::System_Cpus_Cpu* cpu) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete cpu_;
  }
  if (cpu) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cpu = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cpu, submessage_arena);
    }
    
  } else {
    
  }
  cpu_ = cpu;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Cpus.CpuKey.cpu)
}

inline bool System_Cpus_CpuKey::has_index() const {
  return index_case() != INDEX_NOT_SET;
}
inline void System_Cpus_CpuKey::clear_has_index() {
  _oneof_case_[0] = INDEX_NOT_SET;
}
inline System_Cpus_CpuKey::IndexCase System_Cpus_CpuKey::index_case() const {
  return System_Cpus_CpuKey::IndexCase(_oneof_case_[0]);
}
// -------------------------------------------------------------------

// System_Cpus

// repeated .openconfig.openconfig_system.System.Cpus.CpuKey cpu = 70314881 [(.yext.schemapath) = "/system/cpus/cpu"];
inline int System_Cpus::cpu_size() const {
  return cpu_.size();
}
inline void System_Cpus::clear_cpu() {
  cpu_.Clear();
}
inline const ::openconfig::openconfig_system::System_Cpus_CpuKey& System_Cpus::cpu(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Cpus.cpu)
  return cpu_.Get(index);
}
inline ::openconfig::openconfig_system::System_Cpus_CpuKey* System_Cpus::mutable_cpu(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Cpus.cpu)
  return cpu_.Mutable(index);
}
inline ::openconfig::openconfig_system::System_Cpus_CpuKey* System_Cpus::add_cpu() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Cpus.cpu)
  return cpu_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Cpus_CpuKey >*
System_Cpus::mutable_cpu() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Cpus.cpu)
  return &cpu_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Cpus_CpuKey >&
System_Cpus::cpu() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Cpus.cpu)
  return cpu_;
}

// -------------------------------------------------------------------

// System_Dns_Config

// repeated .ywrapper.StringValue search = 529094948 [(.yext.schemapath) = "/system/dns/config/search"];
inline int System_Dns_Config::search_size() const {
  return search_.size();
}
inline const ::ywrapper::StringValue& System_Dns_Config::search(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.Config.search)
  return search_.Get(index);
}
inline ::ywrapper::StringValue* System_Dns_Config::mutable_search(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.Config.search)
  return search_.Mutable(index);
}
inline ::ywrapper::StringValue* System_Dns_Config::add_search() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Dns.Config.search)
  return search_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
System_Dns_Config::mutable_search() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Dns.Config.search)
  return &search_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
System_Dns_Config::search() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Dns.Config.search)
  return search_;
}

// -------------------------------------------------------------------

// System_Dns_HostEntries_HostEntry_Config

// repeated .ywrapper.StringValue alias = 202464928 [(.yext.schemapath) = "/system/dns/host-entries/host-entry/config/alias"];
inline int System_Dns_HostEntries_HostEntry_Config::alias_size() const {
  return alias_.size();
}
inline const ::ywrapper::StringValue& System_Dns_HostEntries_HostEntry_Config::alias(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.Config.alias)
  return alias_.Get(index);
}
inline ::ywrapper::StringValue* System_Dns_HostEntries_HostEntry_Config::mutable_alias(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.Config.alias)
  return alias_.Mutable(index);
}
inline ::ywrapper::StringValue* System_Dns_HostEntries_HostEntry_Config::add_alias() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.Config.alias)
  return alias_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
System_Dns_HostEntries_HostEntry_Config::mutable_alias() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.Config.alias)
  return &alias_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
System_Dns_HostEntries_HostEntry_Config::alias() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.Config.alias)
  return alias_;
}

// .ywrapper.StringValue hostname = 145653559 [(.yext.schemapath) = "/system/dns/host-entries/host-entry/config/hostname"];
inline bool System_Dns_HostEntries_HostEntry_Config::has_hostname() const {
  return this != internal_default_instance() && hostname_ != NULL;
}
inline const ::ywrapper::StringValue& System_Dns_HostEntries_HostEntry_Config::hostname() const {
  const ::ywrapper::StringValue* p = hostname_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.Config.hostname)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Dns_HostEntries_HostEntry_Config::release_hostname() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.Config.hostname)
  
  ::ywrapper::StringValue* temp = hostname_;
  hostname_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Dns_HostEntries_HostEntry_Config::mutable_hostname() {
  
  if (hostname_ == NULL) {
    hostname_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.Config.hostname)
  return hostname_;
}
inline void System_Dns_HostEntries_HostEntry_Config::set_allocated_hostname(::ywrapper::StringValue* hostname) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hostname_);
  }
  if (hostname) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hostname = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hostname, submessage_arena);
    }
    
  } else {
    
  }
  hostname_ = hostname;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.Config.hostname)
}

// repeated .ywrapper.StringValue ipv4_address = 47682642 [(.yext.schemapath) = "/system/dns/host-entries/host-entry/config/ipv4-address"];
inline int System_Dns_HostEntries_HostEntry_Config::ipv4_address_size() const {
  return ipv4_address_.size();
}
inline const ::ywrapper::StringValue& System_Dns_HostEntries_HostEntry_Config::ipv4_address(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.Config.ipv4_address)
  return ipv4_address_.Get(index);
}
inline ::ywrapper::StringValue* System_Dns_HostEntries_HostEntry_Config::mutable_ipv4_address(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.Config.ipv4_address)
  return ipv4_address_.Mutable(index);
}
inline ::ywrapper::StringValue* System_Dns_HostEntries_HostEntry_Config::add_ipv4_address() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.Config.ipv4_address)
  return ipv4_address_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
System_Dns_HostEntries_HostEntry_Config::mutable_ipv4_address() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.Config.ipv4_address)
  return &ipv4_address_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
System_Dns_HostEntries_HostEntry_Config::ipv4_address() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.Config.ipv4_address)
  return ipv4_address_;
}

// repeated .ywrapper.StringValue ipv6_address = 89261280 [(.yext.schemapath) = "/system/dns/host-entries/host-entry/config/ipv6-address"];
inline int System_Dns_HostEntries_HostEntry_Config::ipv6_address_size() const {
  return ipv6_address_.size();
}
inline const ::ywrapper::StringValue& System_Dns_HostEntries_HostEntry_Config::ipv6_address(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.Config.ipv6_address)
  return ipv6_address_.Get(index);
}
inline ::ywrapper::StringValue* System_Dns_HostEntries_HostEntry_Config::mutable_ipv6_address(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.Config.ipv6_address)
  return ipv6_address_.Mutable(index);
}
inline ::ywrapper::StringValue* System_Dns_HostEntries_HostEntry_Config::add_ipv6_address() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.Config.ipv6_address)
  return ipv6_address_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
System_Dns_HostEntries_HostEntry_Config::mutable_ipv6_address() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.Config.ipv6_address)
  return &ipv6_address_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
System_Dns_HostEntries_HostEntry_Config::ipv6_address() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.Config.ipv6_address)
  return ipv6_address_;
}

// -------------------------------------------------------------------

// System_Dns_HostEntries_HostEntry_State

// repeated .ywrapper.StringValue alias = 117816075 [(.yext.schemapath) = "/system/dns/host-entries/host-entry/state/alias"];
inline int System_Dns_HostEntries_HostEntry_State::alias_size() const {
  return alias_.size();
}
inline const ::ywrapper::StringValue& System_Dns_HostEntries_HostEntry_State::alias(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.State.alias)
  return alias_.Get(index);
}
inline ::ywrapper::StringValue* System_Dns_HostEntries_HostEntry_State::mutable_alias(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.State.alias)
  return alias_.Mutable(index);
}
inline ::ywrapper::StringValue* System_Dns_HostEntries_HostEntry_State::add_alias() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.State.alias)
  return alias_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
System_Dns_HostEntries_HostEntry_State::mutable_alias() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.State.alias)
  return &alias_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
System_Dns_HostEntries_HostEntry_State::alias() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.State.alias)
  return alias_;
}

// .ywrapper.StringValue hostname = 171107854 [(.yext.schemapath) = "/system/dns/host-entries/host-entry/state/hostname"];
inline bool System_Dns_HostEntries_HostEntry_State::has_hostname() const {
  return this != internal_default_instance() && hostname_ != NULL;
}
inline const ::ywrapper::StringValue& System_Dns_HostEntries_HostEntry_State::hostname() const {
  const ::ywrapper::StringValue* p = hostname_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.State.hostname)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Dns_HostEntries_HostEntry_State::release_hostname() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.State.hostname)
  
  ::ywrapper::StringValue* temp = hostname_;
  hostname_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Dns_HostEntries_HostEntry_State::mutable_hostname() {
  
  if (hostname_ == NULL) {
    hostname_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.State.hostname)
  return hostname_;
}
inline void System_Dns_HostEntries_HostEntry_State::set_allocated_hostname(::ywrapper::StringValue* hostname) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hostname_);
  }
  if (hostname) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hostname = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hostname, submessage_arena);
    }
    
  } else {
    
  }
  hostname_ = hostname;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.State.hostname)
}

// repeated .ywrapper.StringValue ipv4_address = 444828131 [(.yext.schemapath) = "/system/dns/host-entries/host-entry/state/ipv4-address"];
inline int System_Dns_HostEntries_HostEntry_State::ipv4_address_size() const {
  return ipv4_address_.size();
}
inline const ::ywrapper::StringValue& System_Dns_HostEntries_HostEntry_State::ipv4_address(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.State.ipv4_address)
  return ipv4_address_.Get(index);
}
inline ::ywrapper::StringValue* System_Dns_HostEntries_HostEntry_State::mutable_ipv4_address(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.State.ipv4_address)
  return ipv4_address_.Mutable(index);
}
inline ::ywrapper::StringValue* System_Dns_HostEntries_HostEntry_State::add_ipv4_address() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.State.ipv4_address)
  return ipv4_address_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
System_Dns_HostEntries_HostEntry_State::mutable_ipv4_address() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.State.ipv4_address)
  return &ipv4_address_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
System_Dns_HostEntries_HostEntry_State::ipv4_address() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.State.ipv4_address)
  return ipv4_address_;
}

// repeated .ywrapper.StringValue ipv6_address = 360963057 [(.yext.schemapath) = "/system/dns/host-entries/host-entry/state/ipv6-address"];
inline int System_Dns_HostEntries_HostEntry_State::ipv6_address_size() const {
  return ipv6_address_.size();
}
inline const ::ywrapper::StringValue& System_Dns_HostEntries_HostEntry_State::ipv6_address(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.State.ipv6_address)
  return ipv6_address_.Get(index);
}
inline ::ywrapper::StringValue* System_Dns_HostEntries_HostEntry_State::mutable_ipv6_address(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.State.ipv6_address)
  return ipv6_address_.Mutable(index);
}
inline ::ywrapper::StringValue* System_Dns_HostEntries_HostEntry_State::add_ipv6_address() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.State.ipv6_address)
  return ipv6_address_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
System_Dns_HostEntries_HostEntry_State::mutable_ipv6_address() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.State.ipv6_address)
  return &ipv6_address_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
System_Dns_HostEntries_HostEntry_State::ipv6_address() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.State.ipv6_address)
  return ipv6_address_;
}

// -------------------------------------------------------------------

// System_Dns_HostEntries_HostEntry

// .openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.Config config = 429171057 [(.yext.schemapath) = "/system/dns/host-entries/host-entry/config"];
inline bool System_Dns_HostEntries_HostEntry::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Dns_HostEntries_HostEntry::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry_Config& System_Dns_HostEntries_HostEntry::config() const {
  const ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry_Config*>(
      &::openconfig::openconfig_system::_System_Dns_HostEntries_HostEntry_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry_Config* System_Dns_HostEntries_HostEntry::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.config)
  
  ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry_Config* System_Dns_HostEntries_HostEntry::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.config)
  return config_;
}
inline void System_Dns_HostEntries_HostEntry::set_allocated_config(::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.config)
}

// .openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.State state = 259656678 [(.yext.schemapath) = "/system/dns/host-entries/host-entry/state"];
inline bool System_Dns_HostEntries_HostEntry::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Dns_HostEntries_HostEntry::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry_State& System_Dns_HostEntries_HostEntry::state() const {
  const ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry_State*>(
      &::openconfig::openconfig_system::_System_Dns_HostEntries_HostEntry_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry_State* System_Dns_HostEntries_HostEntry::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.state)
  
  ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry_State* System_Dns_HostEntries_HostEntry::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.state)
  return state_;
}
inline void System_Dns_HostEntries_HostEntry::set_allocated_state(::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Dns.HostEntries.HostEntry.state)
}

// -------------------------------------------------------------------

// System_Dns_HostEntries_HostEntryKey

// string hostname = 1 [(.yext.schemapath) = "/system/dns/host-entries/host-entry/hostname"];
inline void System_Dns_HostEntries_HostEntryKey::clear_hostname() {
  hostname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& System_Dns_HostEntries_HostEntryKey::hostname() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.HostEntries.HostEntryKey.hostname)
  return hostname_.GetNoArena();
}
inline void System_Dns_HostEntries_HostEntryKey::set_hostname(const ::std::string& value) {
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Dns.HostEntries.HostEntryKey.hostname)
}
#if LANG_CXX11
inline void System_Dns_HostEntries_HostEntryKey::set_hostname(::std::string&& value) {
  
  hostname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_system.System.Dns.HostEntries.HostEntryKey.hostname)
}
#endif
inline void System_Dns_HostEntries_HostEntryKey::set_hostname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_system.System.Dns.HostEntries.HostEntryKey.hostname)
}
inline void System_Dns_HostEntries_HostEntryKey::set_hostname(const char* value, size_t size) {
  
  hostname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_system.System.Dns.HostEntries.HostEntryKey.hostname)
}
inline ::std::string* System_Dns_HostEntries_HostEntryKey::mutable_hostname() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.HostEntries.HostEntryKey.hostname)
  return hostname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* System_Dns_HostEntries_HostEntryKey::release_hostname() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Dns.HostEntries.HostEntryKey.hostname)
  
  return hostname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void System_Dns_HostEntries_HostEntryKey::set_allocated_hostname(::std::string* hostname) {
  if (hostname != NULL) {
    
  } else {
    
  }
  hostname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), hostname);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Dns.HostEntries.HostEntryKey.hostname)
}

// .openconfig.openconfig_system.System.Dns.HostEntries.HostEntry host_entry = 2;
inline bool System_Dns_HostEntries_HostEntryKey::has_host_entry() const {
  return this != internal_default_instance() && host_entry_ != NULL;
}
inline void System_Dns_HostEntries_HostEntryKey::clear_host_entry() {
  if (GetArenaNoVirtual() == NULL && host_entry_ != NULL) {
    delete host_entry_;
  }
  host_entry_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry& System_Dns_HostEntries_HostEntryKey::host_entry() const {
  const ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry* p = host_entry_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.HostEntries.HostEntryKey.host_entry)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry*>(
      &::openconfig::openconfig_system::_System_Dns_HostEntries_HostEntry_default_instance_);
}
inline ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry* System_Dns_HostEntries_HostEntryKey::release_host_entry() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Dns.HostEntries.HostEntryKey.host_entry)
  
  ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry* temp = host_entry_;
  host_entry_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry* System_Dns_HostEntries_HostEntryKey::mutable_host_entry() {
  
  if (host_entry_ == NULL) {
    host_entry_ = new ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.HostEntries.HostEntryKey.host_entry)
  return host_entry_;
}
inline void System_Dns_HostEntries_HostEntryKey::set_allocated_host_entry(::openconfig::openconfig_system::System_Dns_HostEntries_HostEntry* host_entry) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete host_entry_;
  }
  if (host_entry) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      host_entry = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, host_entry, submessage_arena);
    }
    
  } else {
    
  }
  host_entry_ = host_entry;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Dns.HostEntries.HostEntryKey.host_entry)
}

// -------------------------------------------------------------------

// System_Dns_HostEntries

// repeated .openconfig.openconfig_system.System.Dns.HostEntries.HostEntryKey host_entry = 297400348 [(.yext.schemapath) = "/system/dns/host-entries/host-entry"];
inline int System_Dns_HostEntries::host_entry_size() const {
  return host_entry_.size();
}
inline void System_Dns_HostEntries::clear_host_entry() {
  host_entry_.Clear();
}
inline const ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntryKey& System_Dns_HostEntries::host_entry(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.HostEntries.host_entry)
  return host_entry_.Get(index);
}
inline ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntryKey* System_Dns_HostEntries::mutable_host_entry(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.HostEntries.host_entry)
  return host_entry_.Mutable(index);
}
inline ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntryKey* System_Dns_HostEntries::add_host_entry() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Dns.HostEntries.host_entry)
  return host_entry_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntryKey >*
System_Dns_HostEntries::mutable_host_entry() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Dns.HostEntries.host_entry)
  return &host_entry_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Dns_HostEntries_HostEntryKey >&
System_Dns_HostEntries::host_entry() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Dns.HostEntries.host_entry)
  return host_entry_;
}

// -------------------------------------------------------------------

// System_Dns_Servers_Server_Config

// .ywrapper.StringValue address = 141908379 [(.yext.schemapath) = "/system/dns/servers/server/config/address"];
inline bool System_Dns_Servers_Server_Config::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline const ::ywrapper::StringValue& System_Dns_Servers_Server_Config::address() const {
  const ::ywrapper::StringValue* p = address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.Servers.Server.Config.address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Dns_Servers_Server_Config::release_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Dns.Servers.Server.Config.address)
  
  ::ywrapper::StringValue* temp = address_;
  address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Dns_Servers_Server_Config::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.Servers.Server.Config.address)
  return address_;
}
inline void System_Dns_Servers_Server_Config::set_allocated_address(::ywrapper::StringValue* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(address_);
  }
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Dns.Servers.Server.Config.address)
}

// .ywrapper.UintValue port = 441306980 [(.yext.schemapath) = "/system/dns/servers/server/config/port"];
inline bool System_Dns_Servers_Server_Config::has_port() const {
  return this != internal_default_instance() && port_ != NULL;
}
inline const ::ywrapper::UintValue& System_Dns_Servers_Server_Config::port() const {
  const ::ywrapper::UintValue* p = port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.Servers.Server.Config.port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Dns_Servers_Server_Config::release_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Dns.Servers.Server.Config.port)
  
  ::ywrapper::UintValue* temp = port_;
  port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Dns_Servers_Server_Config::mutable_port() {
  
  if (port_ == NULL) {
    port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.Servers.Server.Config.port)
  return port_;
}
inline void System_Dns_Servers_Server_Config::set_allocated_port(::ywrapper::UintValue* port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(port_);
  }
  if (port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, port, submessage_arena);
    }
    
  } else {
    
  }
  port_ = port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Dns.Servers.Server.Config.port)
}

// -------------------------------------------------------------------

// System_Dns_Servers_Server_State

// .ywrapper.StringValue address = 364706914 [(.yext.schemapath) = "/system/dns/servers/server/state/address"];
inline bool System_Dns_Servers_Server_State::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline const ::ywrapper::StringValue& System_Dns_Servers_Server_State::address() const {
  const ::ywrapper::StringValue* p = address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.Servers.Server.State.address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Dns_Servers_Server_State::release_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Dns.Servers.Server.State.address)
  
  ::ywrapper::StringValue* temp = address_;
  address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Dns_Servers_Server_State::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.Servers.Server.State.address)
  return address_;
}
inline void System_Dns_Servers_Server_State::set_allocated_address(::ywrapper::StringValue* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(address_);
  }
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Dns.Servers.Server.State.address)
}

// .ywrapper.UintValue port = 528842771 [(.yext.schemapath) = "/system/dns/servers/server/state/port"];
inline bool System_Dns_Servers_Server_State::has_port() const {
  return this != internal_default_instance() && port_ != NULL;
}
inline const ::ywrapper::UintValue& System_Dns_Servers_Server_State::port() const {
  const ::ywrapper::UintValue* p = port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.Servers.Server.State.port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Dns_Servers_Server_State::release_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Dns.Servers.Server.State.port)
  
  ::ywrapper::UintValue* temp = port_;
  port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Dns_Servers_Server_State::mutable_port() {
  
  if (port_ == NULL) {
    port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.Servers.Server.State.port)
  return port_;
}
inline void System_Dns_Servers_Server_State::set_allocated_port(::ywrapper::UintValue* port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(port_);
  }
  if (port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, port, submessage_arena);
    }
    
  } else {
    
  }
  port_ = port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Dns.Servers.Server.State.port)
}

// -------------------------------------------------------------------

// System_Dns_Servers_Server

// .openconfig.openconfig_system.System.Dns.Servers.Server.Config config = 293688474 [(.yext.schemapath) = "/system/dns/servers/server/config"];
inline bool System_Dns_Servers_Server::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Dns_Servers_Server::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Dns_Servers_Server_Config& System_Dns_Servers_Server::config() const {
  const ::openconfig::openconfig_system::System_Dns_Servers_Server_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.Servers.Server.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Dns_Servers_Server_Config*>(
      &::openconfig::openconfig_system::_System_Dns_Servers_Server_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Dns_Servers_Server_Config* System_Dns_Servers_Server::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Dns.Servers.Server.config)
  
  ::openconfig::openconfig_system::System_Dns_Servers_Server_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Dns_Servers_Server_Config* System_Dns_Servers_Server::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Dns_Servers_Server_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.Servers.Server.config)
  return config_;
}
inline void System_Dns_Servers_Server::set_allocated_config(::openconfig::openconfig_system::System_Dns_Servers_Server_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Dns.Servers.Server.config)
}

// .openconfig.openconfig_system.System.Dns.Servers.Server.State state = 244058935 [(.yext.schemapath) = "/system/dns/servers/server/state"];
inline bool System_Dns_Servers_Server::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Dns_Servers_Server::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Dns_Servers_Server_State& System_Dns_Servers_Server::state() const {
  const ::openconfig::openconfig_system::System_Dns_Servers_Server_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.Servers.Server.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Dns_Servers_Server_State*>(
      &::openconfig::openconfig_system::_System_Dns_Servers_Server_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Dns_Servers_Server_State* System_Dns_Servers_Server::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Dns.Servers.Server.state)
  
  ::openconfig::openconfig_system::System_Dns_Servers_Server_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Dns_Servers_Server_State* System_Dns_Servers_Server::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Dns_Servers_Server_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.Servers.Server.state)
  return state_;
}
inline void System_Dns_Servers_Server::set_allocated_state(::openconfig::openconfig_system::System_Dns_Servers_Server_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Dns.Servers.Server.state)
}

// -------------------------------------------------------------------

// System_Dns_Servers_ServerKey

// string address = 1 [(.yext.schemapath) = "/system/dns/servers/server/address"];
inline void System_Dns_Servers_ServerKey::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& System_Dns_Servers_ServerKey::address() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.Servers.ServerKey.address)
  return address_.GetNoArena();
}
inline void System_Dns_Servers_ServerKey::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Dns.Servers.ServerKey.address)
}
#if LANG_CXX11
inline void System_Dns_Servers_ServerKey::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_system.System.Dns.Servers.ServerKey.address)
}
#endif
inline void System_Dns_Servers_ServerKey::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_system.System.Dns.Servers.ServerKey.address)
}
inline void System_Dns_Servers_ServerKey::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_system.System.Dns.Servers.ServerKey.address)
}
inline ::std::string* System_Dns_Servers_ServerKey::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.Servers.ServerKey.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* System_Dns_Servers_ServerKey::release_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Dns.Servers.ServerKey.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void System_Dns_Servers_ServerKey::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Dns.Servers.ServerKey.address)
}

// .openconfig.openconfig_system.System.Dns.Servers.Server server = 2;
inline bool System_Dns_Servers_ServerKey::has_server() const {
  return this != internal_default_instance() && server_ != NULL;
}
inline void System_Dns_Servers_ServerKey::clear_server() {
  if (GetArenaNoVirtual() == NULL && server_ != NULL) {
    delete server_;
  }
  server_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Dns_Servers_Server& System_Dns_Servers_ServerKey::server() const {
  const ::openconfig::openconfig_system::System_Dns_Servers_Server* p = server_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.Servers.ServerKey.server)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Dns_Servers_Server*>(
      &::openconfig::openconfig_system::_System_Dns_Servers_Server_default_instance_);
}
inline ::openconfig::openconfig_system::System_Dns_Servers_Server* System_Dns_Servers_ServerKey::release_server() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Dns.Servers.ServerKey.server)
  
  ::openconfig::openconfig_system::System_Dns_Servers_Server* temp = server_;
  server_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Dns_Servers_Server* System_Dns_Servers_ServerKey::mutable_server() {
  
  if (server_ == NULL) {
    server_ = new ::openconfig::openconfig_system::System_Dns_Servers_Server;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.Servers.ServerKey.server)
  return server_;
}
inline void System_Dns_Servers_ServerKey::set_allocated_server(::openconfig::openconfig_system::System_Dns_Servers_Server* server) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete server_;
  }
  if (server) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      server = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, server, submessage_arena);
    }
    
  } else {
    
  }
  server_ = server;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Dns.Servers.ServerKey.server)
}

// -------------------------------------------------------------------

// System_Dns_Servers

// repeated .openconfig.openconfig_system.System.Dns.Servers.ServerKey server = 234465781 [(.yext.schemapath) = "/system/dns/servers/server"];
inline int System_Dns_Servers::server_size() const {
  return server_.size();
}
inline void System_Dns_Servers::clear_server() {
  server_.Clear();
}
inline const ::openconfig::openconfig_system::System_Dns_Servers_ServerKey& System_Dns_Servers::server(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.Servers.server)
  return server_.Get(index);
}
inline ::openconfig::openconfig_system::System_Dns_Servers_ServerKey* System_Dns_Servers::mutable_server(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.Servers.server)
  return server_.Mutable(index);
}
inline ::openconfig::openconfig_system::System_Dns_Servers_ServerKey* System_Dns_Servers::add_server() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Dns.Servers.server)
  return server_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Dns_Servers_ServerKey >*
System_Dns_Servers::mutable_server() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Dns.Servers.server)
  return &server_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Dns_Servers_ServerKey >&
System_Dns_Servers::server() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Dns.Servers.server)
  return server_;
}

// -------------------------------------------------------------------

// System_Dns_State

// repeated .ywrapper.StringValue search = 17042089 [(.yext.schemapath) = "/system/dns/state/search"];
inline int System_Dns_State::search_size() const {
  return search_.size();
}
inline const ::ywrapper::StringValue& System_Dns_State::search(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.State.search)
  return search_.Get(index);
}
inline ::ywrapper::StringValue* System_Dns_State::mutable_search(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.State.search)
  return search_.Mutable(index);
}
inline ::ywrapper::StringValue* System_Dns_State::add_search() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Dns.State.search)
  return search_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
System_Dns_State::mutable_search() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Dns.State.search)
  return &search_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
System_Dns_State::search() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Dns.State.search)
  return search_;
}

// -------------------------------------------------------------------

// System_Dns

// .openconfig.openconfig_system.System.Dns.Config config = 260417829 [(.yext.schemapath) = "/system/dns/config"];
inline bool System_Dns::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Dns::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Dns_Config& System_Dns::config() const {
  const ::openconfig::openconfig_system::System_Dns_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Dns_Config*>(
      &::openconfig::openconfig_system::_System_Dns_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Dns_Config* System_Dns::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Dns.config)
  
  ::openconfig::openconfig_system::System_Dns_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Dns_Config* System_Dns::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Dns_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.config)
  return config_;
}
inline void System_Dns::set_allocated_config(::openconfig::openconfig_system::System_Dns_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Dns.config)
}

// .openconfig.openconfig_system.System.Dns.HostEntries host_entries = 355029034 [(.yext.schemapath) = "/system/dns/host-entries"];
inline bool System_Dns::has_host_entries() const {
  return this != internal_default_instance() && host_entries_ != NULL;
}
inline void System_Dns::clear_host_entries() {
  if (GetArenaNoVirtual() == NULL && host_entries_ != NULL) {
    delete host_entries_;
  }
  host_entries_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Dns_HostEntries& System_Dns::host_entries() const {
  const ::openconfig::openconfig_system::System_Dns_HostEntries* p = host_entries_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.host_entries)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Dns_HostEntries*>(
      &::openconfig::openconfig_system::_System_Dns_HostEntries_default_instance_);
}
inline ::openconfig::openconfig_system::System_Dns_HostEntries* System_Dns::release_host_entries() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Dns.host_entries)
  
  ::openconfig::openconfig_system::System_Dns_HostEntries* temp = host_entries_;
  host_entries_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Dns_HostEntries* System_Dns::mutable_host_entries() {
  
  if (host_entries_ == NULL) {
    host_entries_ = new ::openconfig::openconfig_system::System_Dns_HostEntries;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.host_entries)
  return host_entries_;
}
inline void System_Dns::set_allocated_host_entries(::openconfig::openconfig_system::System_Dns_HostEntries* host_entries) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete host_entries_;
  }
  if (host_entries) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      host_entries = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, host_entries, submessage_arena);
    }
    
  } else {
    
  }
  host_entries_ = host_entries;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Dns.host_entries)
}

// .openconfig.openconfig_system.System.Dns.Servers servers = 44375401 [(.yext.schemapath) = "/system/dns/servers"];
inline bool System_Dns::has_servers() const {
  return this != internal_default_instance() && servers_ != NULL;
}
inline void System_Dns::clear_servers() {
  if (GetArenaNoVirtual() == NULL && servers_ != NULL) {
    delete servers_;
  }
  servers_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Dns_Servers& System_Dns::servers() const {
  const ::openconfig::openconfig_system::System_Dns_Servers* p = servers_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.servers)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Dns_Servers*>(
      &::openconfig::openconfig_system::_System_Dns_Servers_default_instance_);
}
inline ::openconfig::openconfig_system::System_Dns_Servers* System_Dns::release_servers() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Dns.servers)
  
  ::openconfig::openconfig_system::System_Dns_Servers* temp = servers_;
  servers_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Dns_Servers* System_Dns::mutable_servers() {
  
  if (servers_ == NULL) {
    servers_ = new ::openconfig::openconfig_system::System_Dns_Servers;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.servers)
  return servers_;
}
inline void System_Dns::set_allocated_servers(::openconfig::openconfig_system::System_Dns_Servers* servers) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete servers_;
  }
  if (servers) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      servers = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, servers, submessage_arena);
    }
    
  } else {
    
  }
  servers_ = servers;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Dns.servers)
}

// .openconfig.openconfig_system.System.Dns.State state = 425367962 [(.yext.schemapath) = "/system/dns/state"];
inline bool System_Dns::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Dns::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Dns_State& System_Dns::state() const {
  const ::openconfig::openconfig_system::System_Dns_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Dns.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Dns_State*>(
      &::openconfig::openconfig_system::_System_Dns_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Dns_State* System_Dns::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Dns.state)
  
  ::openconfig::openconfig_system::System_Dns_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Dns_State* System_Dns::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Dns_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Dns.state)
  return state_;
}
inline void System_Dns::set_allocated_state(::openconfig::openconfig_system::System_Dns_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Dns.state)
}

// -------------------------------------------------------------------

// System_Logging_Console_Config

// -------------------------------------------------------------------

// System_Logging_Console_Selectors_Selector_Config

// .openconfig.enums.OpenconfigSystemLoggingSYSLOGFACILITY facility = 390435594 [(.yext.schemapath) = "/system/logging/console/selectors/selector/config/facility"];
inline void System_Logging_Console_Selectors_Selector_Config::clear_facility() {
  facility_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY System_Logging_Console_Selectors_Selector_Config::facility() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.Console.Selectors.Selector.Config.facility)
  return static_cast< ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY >(facility_);
}
inline void System_Logging_Console_Selectors_Selector_Config::set_facility(::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY value) {
  
  facility_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Logging.Console.Selectors.Selector.Config.facility)
}

// .openconfig.enums.OpenconfigSystemLoggingSyslogSeverity severity = 205508476 [(.yext.schemapath) = "/system/logging/console/selectors/selector/config/severity"];
inline void System_Logging_Console_Selectors_Selector_Config::clear_severity() {
  severity_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity System_Logging_Console_Selectors_Selector_Config::severity() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.Console.Selectors.Selector.Config.severity)
  return static_cast< ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity >(severity_);
}
inline void System_Logging_Console_Selectors_Selector_Config::set_severity(::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity value) {
  
  severity_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Logging.Console.Selectors.Selector.Config.severity)
}

// -------------------------------------------------------------------

// System_Logging_Console_Selectors_Selector_State

// .openconfig.enums.OpenconfigSystemLoggingSYSLOGFACILITY facility = 271468881 [(.yext.schemapath) = "/system/logging/console/selectors/selector/state/facility"];
inline void System_Logging_Console_Selectors_Selector_State::clear_facility() {
  facility_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY System_Logging_Console_Selectors_Selector_State::facility() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.Console.Selectors.Selector.State.facility)
  return static_cast< ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY >(facility_);
}
inline void System_Logging_Console_Selectors_Selector_State::set_facility(::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY value) {
  
  facility_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Logging.Console.Selectors.Selector.State.facility)
}

// .openconfig.enums.OpenconfigSystemLoggingSyslogSeverity severity = 427446243 [(.yext.schemapath) = "/system/logging/console/selectors/selector/state/severity"];
inline void System_Logging_Console_Selectors_Selector_State::clear_severity() {
  severity_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity System_Logging_Console_Selectors_Selector_State::severity() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.Console.Selectors.Selector.State.severity)
  return static_cast< ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity >(severity_);
}
inline void System_Logging_Console_Selectors_Selector_State::set_severity(::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity value) {
  
  severity_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Logging.Console.Selectors.Selector.State.severity)
}

// -------------------------------------------------------------------

// System_Logging_Console_Selectors_Selector

// .openconfig.openconfig_system.System.Logging.Console.Selectors.Selector.Config config = 378729946 [(.yext.schemapath) = "/system/logging/console/selectors/selector/config"];
inline bool System_Logging_Console_Selectors_Selector::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Logging_Console_Selectors_Selector::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector_Config& System_Logging_Console_Selectors_Selector::config() const {
  const ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.Console.Selectors.Selector.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector_Config*>(
      &::openconfig::openconfig_system::_System_Logging_Console_Selectors_Selector_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector_Config* System_Logging_Console_Selectors_Selector::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Logging.Console.Selectors.Selector.config)
  
  ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector_Config* System_Logging_Console_Selectors_Selector::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Logging.Console.Selectors.Selector.config)
  return config_;
}
inline void System_Logging_Console_Selectors_Selector::set_allocated_config(::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Logging.Console.Selectors.Selector.config)
}

// .openconfig.openconfig_system.System.Logging.Console.Selectors.Selector.State state = 531894391 [(.yext.schemapath) = "/system/logging/console/selectors/selector/state"];
inline bool System_Logging_Console_Selectors_Selector::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Logging_Console_Selectors_Selector::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector_State& System_Logging_Console_Selectors_Selector::state() const {
  const ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.Console.Selectors.Selector.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector_State*>(
      &::openconfig::openconfig_system::_System_Logging_Console_Selectors_Selector_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector_State* System_Logging_Console_Selectors_Selector::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Logging.Console.Selectors.Selector.state)
  
  ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector_State* System_Logging_Console_Selectors_Selector::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Logging.Console.Selectors.Selector.state)
  return state_;
}
inline void System_Logging_Console_Selectors_Selector::set_allocated_state(::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Logging.Console.Selectors.Selector.state)
}

// -------------------------------------------------------------------

// System_Logging_Console_Selectors_SelectorKey

// .openconfig.enums.OpenconfigSystemLoggingSYSLOGFACILITY facility = 1 [(.yext.schemapath) = "/system/logging/console/selectors/selector/facility"];
inline void System_Logging_Console_Selectors_SelectorKey::clear_facility() {
  facility_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY System_Logging_Console_Selectors_SelectorKey::facility() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.Console.Selectors.SelectorKey.facility)
  return static_cast< ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY >(facility_);
}
inline void System_Logging_Console_Selectors_SelectorKey::set_facility(::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY value) {
  
  facility_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Logging.Console.Selectors.SelectorKey.facility)
}

// .openconfig.enums.OpenconfigSystemLoggingSyslogSeverity severity = 2 [(.yext.schemapath) = "/system/logging/console/selectors/selector/severity"];
inline void System_Logging_Console_Selectors_SelectorKey::clear_severity() {
  severity_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity System_Logging_Console_Selectors_SelectorKey::severity() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.Console.Selectors.SelectorKey.severity)
  return static_cast< ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity >(severity_);
}
inline void System_Logging_Console_Selectors_SelectorKey::set_severity(::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity value) {
  
  severity_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Logging.Console.Selectors.SelectorKey.severity)
}

// .openconfig.openconfig_system.System.Logging.Console.Selectors.Selector selector = 3;
inline bool System_Logging_Console_Selectors_SelectorKey::has_selector() const {
  return this != internal_default_instance() && selector_ != NULL;
}
inline void System_Logging_Console_Selectors_SelectorKey::clear_selector() {
  if (GetArenaNoVirtual() == NULL && selector_ != NULL) {
    delete selector_;
  }
  selector_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector& System_Logging_Console_Selectors_SelectorKey::selector() const {
  const ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector* p = selector_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.Console.Selectors.SelectorKey.selector)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector*>(
      &::openconfig::openconfig_system::_System_Logging_Console_Selectors_Selector_default_instance_);
}
inline ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector* System_Logging_Console_Selectors_SelectorKey::release_selector() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Logging.Console.Selectors.SelectorKey.selector)
  
  ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector* temp = selector_;
  selector_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector* System_Logging_Console_Selectors_SelectorKey::mutable_selector() {
  
  if (selector_ == NULL) {
    selector_ = new ::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Logging.Console.Selectors.SelectorKey.selector)
  return selector_;
}
inline void System_Logging_Console_Selectors_SelectorKey::set_allocated_selector(::openconfig::openconfig_system::System_Logging_Console_Selectors_Selector* selector) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete selector_;
  }
  if (selector) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      selector = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, selector, submessage_arena);
    }
    
  } else {
    
  }
  selector_ = selector;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Logging.Console.Selectors.SelectorKey.selector)
}

// -------------------------------------------------------------------

// System_Logging_Console_Selectors

// repeated .openconfig.openconfig_system.System.Logging.Console.Selectors.SelectorKey selector = 442447029 [(.yext.schemapath) = "/system/logging/console/selectors/selector"];
inline int System_Logging_Console_Selectors::selector_size() const {
  return selector_.size();
}
inline void System_Logging_Console_Selectors::clear_selector() {
  selector_.Clear();
}
inline const ::openconfig::openconfig_system::System_Logging_Console_Selectors_SelectorKey& System_Logging_Console_Selectors::selector(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.Console.Selectors.selector)
  return selector_.Get(index);
}
inline ::openconfig::openconfig_system::System_Logging_Console_Selectors_SelectorKey* System_Logging_Console_Selectors::mutable_selector(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Logging.Console.Selectors.selector)
  return selector_.Mutable(index);
}
inline ::openconfig::openconfig_system::System_Logging_Console_Selectors_SelectorKey* System_Logging_Console_Selectors::add_selector() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Logging.Console.Selectors.selector)
  return selector_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Logging_Console_Selectors_SelectorKey >*
System_Logging_Console_Selectors::mutable_selector() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Logging.Console.Selectors.selector)
  return &selector_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Logging_Console_Selectors_SelectorKey >&
System_Logging_Console_Selectors::selector() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Logging.Console.Selectors.selector)
  return selector_;
}

// -------------------------------------------------------------------

// System_Logging_Console_State

// -------------------------------------------------------------------

// System_Logging_Console

// .openconfig.openconfig_system.System.Logging.Console.Config config = 368391401 [(.yext.schemapath) = "/system/logging/console/config"];
inline bool System_Logging_Console::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Logging_Console::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Logging_Console_Config& System_Logging_Console::config() const {
  const ::openconfig::openconfig_system::System_Logging_Console_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.Console.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Logging_Console_Config*>(
      &::openconfig::openconfig_system::_System_Logging_Console_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Logging_Console_Config* System_Logging_Console::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Logging.Console.config)
  
  ::openconfig::openconfig_system::System_Logging_Console_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Logging_Console_Config* System_Logging_Console::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Logging_Console_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Logging.Console.config)
  return config_;
}
inline void System_Logging_Console::set_allocated_config(::openconfig::openconfig_system::System_Logging_Console_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Logging.Console.config)
}

// .openconfig.openconfig_system.System.Logging.Console.Selectors selectors = 518795003 [(.yext.schemapath) = "/system/logging/console/selectors"];
inline bool System_Logging_Console::has_selectors() const {
  return this != internal_default_instance() && selectors_ != NULL;
}
inline void System_Logging_Console::clear_selectors() {
  if (GetArenaNoVirtual() == NULL && selectors_ != NULL) {
    delete selectors_;
  }
  selectors_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Logging_Console_Selectors& System_Logging_Console::selectors() const {
  const ::openconfig::openconfig_system::System_Logging_Console_Selectors* p = selectors_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.Console.selectors)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Logging_Console_Selectors*>(
      &::openconfig::openconfig_system::_System_Logging_Console_Selectors_default_instance_);
}
inline ::openconfig::openconfig_system::System_Logging_Console_Selectors* System_Logging_Console::release_selectors() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Logging.Console.selectors)
  
  ::openconfig::openconfig_system::System_Logging_Console_Selectors* temp = selectors_;
  selectors_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Logging_Console_Selectors* System_Logging_Console::mutable_selectors() {
  
  if (selectors_ == NULL) {
    selectors_ = new ::openconfig::openconfig_system::System_Logging_Console_Selectors;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Logging.Console.selectors)
  return selectors_;
}
inline void System_Logging_Console::set_allocated_selectors(::openconfig::openconfig_system::System_Logging_Console_Selectors* selectors) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete selectors_;
  }
  if (selectors) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      selectors = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, selectors, submessage_arena);
    }
    
  } else {
    
  }
  selectors_ = selectors;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Logging.Console.selectors)
}

// .openconfig.openconfig_system.System.Logging.Console.State state = 135296190 [(.yext.schemapath) = "/system/logging/console/state"];
inline bool System_Logging_Console::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Logging_Console::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Logging_Console_State& System_Logging_Console::state() const {
  const ::openconfig::openconfig_system::System_Logging_Console_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.Console.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Logging_Console_State*>(
      &::openconfig::openconfig_system::_System_Logging_Console_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Logging_Console_State* System_Logging_Console::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Logging.Console.state)
  
  ::openconfig::openconfig_system::System_Logging_Console_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Logging_Console_State* System_Logging_Console::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Logging_Console_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Logging.Console.state)
  return state_;
}
inline void System_Logging_Console::set_allocated_state(::openconfig::openconfig_system::System_Logging_Console_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Logging.Console.state)
}

// -------------------------------------------------------------------

// System_Logging_RemoteServers_RemoteServer_Config

// .ywrapper.StringValue host = 525171333 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/config/host"];
inline bool System_Logging_RemoteServers_RemoteServer_Config::has_host() const {
  return this != internal_default_instance() && host_ != NULL;
}
inline const ::ywrapper::StringValue& System_Logging_RemoteServers_RemoteServer_Config::host() const {
  const ::ywrapper::StringValue* p = host_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Config.host)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Logging_RemoteServers_RemoteServer_Config::release_host() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Config.host)
  
  ::ywrapper::StringValue* temp = host_;
  host_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Logging_RemoteServers_RemoteServer_Config::mutable_host() {
  
  if (host_ == NULL) {
    host_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Config.host)
  return host_;
}
inline void System_Logging_RemoteServers_RemoteServer_Config::set_allocated_host(::ywrapper::StringValue* host) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(host_);
  }
  if (host) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      host = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, host, submessage_arena);
    }
    
  } else {
    
  }
  host_ = host;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Config.host)
}

// .ywrapper.UintValue remote_port = 22145415 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/config/remote-port"];
inline bool System_Logging_RemoteServers_RemoteServer_Config::has_remote_port() const {
  return this != internal_default_instance() && remote_port_ != NULL;
}
inline const ::ywrapper::UintValue& System_Logging_RemoteServers_RemoteServer_Config::remote_port() const {
  const ::ywrapper::UintValue* p = remote_port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Config.remote_port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Logging_RemoteServers_RemoteServer_Config::release_remote_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Config.remote_port)
  
  ::ywrapper::UintValue* temp = remote_port_;
  remote_port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Logging_RemoteServers_RemoteServer_Config::mutable_remote_port() {
  
  if (remote_port_ == NULL) {
    remote_port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Config.remote_port)
  return remote_port_;
}
inline void System_Logging_RemoteServers_RemoteServer_Config::set_allocated_remote_port(::ywrapper::UintValue* remote_port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(remote_port_);
  }
  if (remote_port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      remote_port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, remote_port, submessage_arena);
    }
    
  } else {
    
  }
  remote_port_ = remote_port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Config.remote_port)
}

// .ywrapper.StringValue source_address = 4922255 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/config/source-address"];
inline bool System_Logging_RemoteServers_RemoteServer_Config::has_source_address() const {
  return this != internal_default_instance() && source_address_ != NULL;
}
inline const ::ywrapper::StringValue& System_Logging_RemoteServers_RemoteServer_Config::source_address() const {
  const ::ywrapper::StringValue* p = source_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Config.source_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Logging_RemoteServers_RemoteServer_Config::release_source_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Config.source_address)
  
  ::ywrapper::StringValue* temp = source_address_;
  source_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Logging_RemoteServers_RemoteServer_Config::mutable_source_address() {
  
  if (source_address_ == NULL) {
    source_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Config.source_address)
  return source_address_;
}
inline void System_Logging_RemoteServers_RemoteServer_Config::set_allocated_source_address(::ywrapper::StringValue* source_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(source_address_);
  }
  if (source_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      source_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source_address, submessage_arena);
    }
    
  } else {
    
  }
  source_address_ = source_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Config.source_address)
}

// -------------------------------------------------------------------

// System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config

// .openconfig.enums.OpenconfigSystemLoggingSYSLOGFACILITY facility = 164191643 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/selectors/selector/config/facility"];
inline void System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config::clear_facility() {
  facility_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config::facility() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.Config.facility)
  return static_cast< ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY >(facility_);
}
inline void System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config::set_facility(::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY value) {
  
  facility_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.Config.facility)
}

// .openconfig.enums.OpenconfigSystemLoggingSyslogSeverity severity = 247618577 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/selectors/selector/config/severity"];
inline void System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config::clear_severity() {
  severity_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config::severity() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.Config.severity)
  return static_cast< ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity >(severity_);
}
inline void System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config::set_severity(::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity value) {
  
  severity_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.Config.severity)
}

// -------------------------------------------------------------------

// System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State

// .openconfig.enums.OpenconfigSystemLoggingSYSLOGFACILITY facility = 16806630 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/selectors/selector/state/facility"];
inline void System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State::clear_facility() {
  facility_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State::facility() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.State.facility)
  return static_cast< ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY >(facility_);
}
inline void System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State::set_facility(::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY value) {
  
  facility_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.State.facility)
}

// .openconfig.enums.OpenconfigSystemLoggingSyslogSeverity severity = 317876144 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/selectors/selector/state/severity"];
inline void System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State::clear_severity() {
  severity_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State::severity() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.State.severity)
  return static_cast< ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity >(severity_);
}
inline void System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State::set_severity(::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity value) {
  
  severity_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.State.severity)
}

// -------------------------------------------------------------------

// System_Logging_RemoteServers_RemoteServer_Selectors_Selector

// .openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.Config config = 254282233 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/selectors/selector/config"];
inline bool System_Logging_RemoteServers_RemoteServer_Selectors_Selector::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Logging_RemoteServers_RemoteServer_Selectors_Selector::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config& System_Logging_RemoteServers_RemoteServer_Selectors_Selector::config() const {
  const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config*>(
      &::openconfig::openconfig_system::_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* System_Logging_RemoteServers_RemoteServer_Selectors_Selector::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.config)
  
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* System_Logging_RemoteServers_RemoteServer_Selectors_Selector::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.config)
  return config_;
}
inline void System_Logging_RemoteServers_RemoteServer_Selectors_Selector::set_allocated_config(::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.config)
}

// .openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.State state = 311283534 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/selectors/selector/state"];
inline bool System_Logging_RemoteServers_RemoteServer_Selectors_Selector::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Logging_RemoteServers_RemoteServer_Selectors_Selector::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State& System_Logging_RemoteServers_RemoteServer_Selectors_Selector::state() const {
  const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State*>(
      &::openconfig::openconfig_system::_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* System_Logging_RemoteServers_RemoteServer_Selectors_Selector::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.state)
  
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* System_Logging_RemoteServers_RemoteServer_Selectors_Selector::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.state)
  return state_;
}
inline void System_Logging_RemoteServers_RemoteServer_Selectors_Selector::set_allocated_state(::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector.state)
}

// -------------------------------------------------------------------

// System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey

// .openconfig.enums.OpenconfigSystemLoggingSYSLOGFACILITY facility = 1 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/selectors/selector/facility"];
inline void System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey::clear_facility() {
  facility_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey::facility() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.SelectorKey.facility)
  return static_cast< ::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY >(facility_);
}
inline void System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey::set_facility(::openconfig::enums::OpenconfigSystemLoggingSYSLOGFACILITY value) {
  
  facility_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.SelectorKey.facility)
}

// .openconfig.enums.OpenconfigSystemLoggingSyslogSeverity severity = 2 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/selectors/selector/severity"];
inline void System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey::clear_severity() {
  severity_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey::severity() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.SelectorKey.severity)
  return static_cast< ::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity >(severity_);
}
inline void System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey::set_severity(::openconfig::enums::OpenconfigSystemLoggingSyslogSeverity value) {
  
  severity_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.SelectorKey.severity)
}

// .openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.Selector selector = 3;
inline bool System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey::has_selector() const {
  return this != internal_default_instance() && selector_ != NULL;
}
inline void System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey::clear_selector() {
  if (GetArenaNoVirtual() == NULL && selector_ != NULL) {
    delete selector_;
  }
  selector_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector& System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey::selector() const {
  const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector* p = selector_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.SelectorKey.selector)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector*>(
      &::openconfig::openconfig_system::_System_Logging_RemoteServers_RemoteServer_Selectors_Selector_default_instance_);
}
inline ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector* System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey::release_selector() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.SelectorKey.selector)
  
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector* temp = selector_;
  selector_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector* System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey::mutable_selector() {
  
  if (selector_ == NULL) {
    selector_ = new ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.SelectorKey.selector)
  return selector_;
}
inline void System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey::set_allocated_selector(::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_Selector* selector) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete selector_;
  }
  if (selector) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      selector = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, selector, submessage_arena);
    }
    
  } else {
    
  }
  selector_ = selector;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.SelectorKey.selector)
}

// -------------------------------------------------------------------

// System_Logging_RemoteServers_RemoteServer_Selectors

// repeated .openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.SelectorKey selector = 300442996 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/selectors/selector"];
inline int System_Logging_RemoteServers_RemoteServer_Selectors::selector_size() const {
  return selector_.size();
}
inline void System_Logging_RemoteServers_RemoteServer_Selectors::clear_selector() {
  selector_.Clear();
}
inline const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey& System_Logging_RemoteServers_RemoteServer_Selectors::selector(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.selector)
  return selector_.Get(index);
}
inline ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey* System_Logging_RemoteServers_RemoteServer_Selectors::mutable_selector(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.selector)
  return selector_.Mutable(index);
}
inline ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey* System_Logging_RemoteServers_RemoteServer_Selectors::add_selector() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.selector)
  return selector_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey >*
System_Logging_RemoteServers_RemoteServer_Selectors::mutable_selector() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.selector)
  return &selector_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors_SelectorKey >&
System_Logging_RemoteServers_RemoteServer_Selectors::selector() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors.selector)
  return selector_;
}

// -------------------------------------------------------------------

// System_Logging_RemoteServers_RemoteServer_State

// .ywrapper.StringValue host = 365944418 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/state/host"];
inline bool System_Logging_RemoteServers_RemoteServer_State::has_host() const {
  return this != internal_default_instance() && host_ != NULL;
}
inline const ::ywrapper::StringValue& System_Logging_RemoteServers_RemoteServer_State::host() const {
  const ::ywrapper::StringValue* p = host_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.State.host)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Logging_RemoteServers_RemoteServer_State::release_host() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.State.host)
  
  ::ywrapper::StringValue* temp = host_;
  host_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Logging_RemoteServers_RemoteServer_State::mutable_host() {
  
  if (host_ == NULL) {
    host_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.State.host)
  return host_;
}
inline void System_Logging_RemoteServers_RemoteServer_State::set_allocated_host(::ywrapper::StringValue* host) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(host_);
  }
  if (host) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      host = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, host, submessage_arena);
    }
    
  } else {
    
  }
  host_ = host;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.State.host)
}

// .ywrapper.UintValue remote_port = 319783978 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/state/remote-port"];
inline bool System_Logging_RemoteServers_RemoteServer_State::has_remote_port() const {
  return this != internal_default_instance() && remote_port_ != NULL;
}
inline const ::ywrapper::UintValue& System_Logging_RemoteServers_RemoteServer_State::remote_port() const {
  const ::ywrapper::UintValue* p = remote_port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.State.remote_port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Logging_RemoteServers_RemoteServer_State::release_remote_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.State.remote_port)
  
  ::ywrapper::UintValue* temp = remote_port_;
  remote_port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Logging_RemoteServers_RemoteServer_State::mutable_remote_port() {
  
  if (remote_port_ == NULL) {
    remote_port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.State.remote_port)
  return remote_port_;
}
inline void System_Logging_RemoteServers_RemoteServer_State::set_allocated_remote_port(::ywrapper::UintValue* remote_port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(remote_port_);
  }
  if (remote_port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      remote_port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, remote_port, submessage_arena);
    }
    
  } else {
    
  }
  remote_port_ = remote_port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.State.remote_port)
}

// .ywrapper.StringValue source_address = 141503900 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/state/source-address"];
inline bool System_Logging_RemoteServers_RemoteServer_State::has_source_address() const {
  return this != internal_default_instance() && source_address_ != NULL;
}
inline const ::ywrapper::StringValue& System_Logging_RemoteServers_RemoteServer_State::source_address() const {
  const ::ywrapper::StringValue* p = source_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.State.source_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Logging_RemoteServers_RemoteServer_State::release_source_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.State.source_address)
  
  ::ywrapper::StringValue* temp = source_address_;
  source_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Logging_RemoteServers_RemoteServer_State::mutable_source_address() {
  
  if (source_address_ == NULL) {
    source_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.State.source_address)
  return source_address_;
}
inline void System_Logging_RemoteServers_RemoteServer_State::set_allocated_source_address(::ywrapper::StringValue* source_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(source_address_);
  }
  if (source_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      source_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source_address, submessage_arena);
    }
    
  } else {
    
  }
  source_address_ = source_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.State.source_address)
}

// -------------------------------------------------------------------

// System_Logging_RemoteServers_RemoteServer

// .openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Config config = 173866728 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/config"];
inline bool System_Logging_RemoteServers_RemoteServer::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Logging_RemoteServers_RemoteServer::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Config& System_Logging_RemoteServers_RemoteServer::config() const {
  const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Config*>(
      &::openconfig::openconfig_system::_System_Logging_RemoteServers_RemoteServer_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Config* System_Logging_RemoteServers_RemoteServer::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.config)
  
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Config* System_Logging_RemoteServers_RemoteServer::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.config)
  return config_;
}
inline void System_Logging_RemoteServers_RemoteServer::set_allocated_config(::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.config)
}

// .openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.Selectors selectors = 472291544 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/selectors"];
inline bool System_Logging_RemoteServers_RemoteServer::has_selectors() const {
  return this != internal_default_instance() && selectors_ != NULL;
}
inline void System_Logging_RemoteServers_RemoteServer::clear_selectors() {
  if (GetArenaNoVirtual() == NULL && selectors_ != NULL) {
    delete selectors_;
  }
  selectors_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors& System_Logging_RemoteServers_RemoteServer::selectors() const {
  const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors* p = selectors_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.selectors)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors*>(
      &::openconfig::openconfig_system::_System_Logging_RemoteServers_RemoteServer_Selectors_default_instance_);
}
inline ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors* System_Logging_RemoteServers_RemoteServer::release_selectors() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.selectors)
  
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors* temp = selectors_;
  selectors_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors* System_Logging_RemoteServers_RemoteServer::mutable_selectors() {
  
  if (selectors_ == NULL) {
    selectors_ = new ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.selectors)
  return selectors_;
}
inline void System_Logging_RemoteServers_RemoteServer::set_allocated_selectors(::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_Selectors* selectors) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete selectors_;
  }
  if (selectors) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      selectors = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, selectors, submessage_arena);
    }
    
  } else {
    
  }
  selectors_ = selectors;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.selectors)
}

// .openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.State state = 268770049 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/state"];
inline bool System_Logging_RemoteServers_RemoteServer::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Logging_RemoteServers_RemoteServer::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_State& System_Logging_RemoteServers_RemoteServer::state() const {
  const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_State*>(
      &::openconfig::openconfig_system::_System_Logging_RemoteServers_RemoteServer_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_State* System_Logging_RemoteServers_RemoteServer::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.state)
  
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_State* System_Logging_RemoteServers_RemoteServer::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.state)
  return state_;
}
inline void System_Logging_RemoteServers_RemoteServer::set_allocated_state(::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer.state)
}

// -------------------------------------------------------------------

// System_Logging_RemoteServers_RemoteServerKey

// string host = 1 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server/host"];
inline void System_Logging_RemoteServers_RemoteServerKey::clear_host() {
  host_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& System_Logging_RemoteServers_RemoteServerKey::host() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServerKey.host)
  return host_.GetNoArena();
}
inline void System_Logging_RemoteServers_RemoteServerKey::set_host(const ::std::string& value) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServerKey.host)
}
#if LANG_CXX11
inline void System_Logging_RemoteServers_RemoteServerKey::set_host(::std::string&& value) {
  
  host_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServerKey.host)
}
#endif
inline void System_Logging_RemoteServers_RemoteServerKey::set_host(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServerKey.host)
}
inline void System_Logging_RemoteServers_RemoteServerKey::set_host(const char* value, size_t size) {
  
  host_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServerKey.host)
}
inline ::std::string* System_Logging_RemoteServers_RemoteServerKey::mutable_host() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServerKey.host)
  return host_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* System_Logging_RemoteServers_RemoteServerKey::release_host() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServerKey.host)
  
  return host_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void System_Logging_RemoteServers_RemoteServerKey::set_allocated_host(::std::string* host) {
  if (host != NULL) {
    
  } else {
    
  }
  host_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), host);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServerKey.host)
}

// .openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServer remote_server = 2;
inline bool System_Logging_RemoteServers_RemoteServerKey::has_remote_server() const {
  return this != internal_default_instance() && remote_server_ != NULL;
}
inline void System_Logging_RemoteServers_RemoteServerKey::clear_remote_server() {
  if (GetArenaNoVirtual() == NULL && remote_server_ != NULL) {
    delete remote_server_;
  }
  remote_server_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer& System_Logging_RemoteServers_RemoteServerKey::remote_server() const {
  const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer* p = remote_server_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServerKey.remote_server)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer*>(
      &::openconfig::openconfig_system::_System_Logging_RemoteServers_RemoteServer_default_instance_);
}
inline ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer* System_Logging_RemoteServers_RemoteServerKey::release_remote_server() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServerKey.remote_server)
  
  ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer* temp = remote_server_;
  remote_server_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer* System_Logging_RemoteServers_RemoteServerKey::mutable_remote_server() {
  
  if (remote_server_ == NULL) {
    remote_server_ = new ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServerKey.remote_server)
  return remote_server_;
}
inline void System_Logging_RemoteServers_RemoteServerKey::set_allocated_remote_server(::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServer* remote_server) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete remote_server_;
  }
  if (remote_server) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      remote_server = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, remote_server, submessage_arena);
    }
    
  } else {
    
  }
  remote_server_ = remote_server;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServerKey.remote_server)
}

// -------------------------------------------------------------------

// System_Logging_RemoteServers

// repeated .openconfig.openconfig_system.System.Logging.RemoteServers.RemoteServerKey remote_server = 157599479 [(.yext.schemapath) = "/system/logging/remote-servers/remote-server"];
inline int System_Logging_RemoteServers::remote_server_size() const {
  return remote_server_.size();
}
inline void System_Logging_RemoteServers::clear_remote_server() {
  remote_server_.Clear();
}
inline const ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServerKey& System_Logging_RemoteServers::remote_server(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.RemoteServers.remote_server)
  return remote_server_.Get(index);
}
inline ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServerKey* System_Logging_RemoteServers::mutable_remote_server(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Logging.RemoteServers.remote_server)
  return remote_server_.Mutable(index);
}
inline ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServerKey* System_Logging_RemoteServers::add_remote_server() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Logging.RemoteServers.remote_server)
  return remote_server_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServerKey >*
System_Logging_RemoteServers::mutable_remote_server() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Logging.RemoteServers.remote_server)
  return &remote_server_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Logging_RemoteServers_RemoteServerKey >&
System_Logging_RemoteServers::remote_server() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Logging.RemoteServers.remote_server)
  return remote_server_;
}

// -------------------------------------------------------------------

// System_Logging

// .openconfig.openconfig_system.System.Logging.Console console = 197921220 [(.yext.schemapath) = "/system/logging/console"];
inline bool System_Logging::has_console() const {
  return this != internal_default_instance() && console_ != NULL;
}
inline void System_Logging::clear_console() {
  if (GetArenaNoVirtual() == NULL && console_ != NULL) {
    delete console_;
  }
  console_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Logging_Console& System_Logging::console() const {
  const ::openconfig::openconfig_system::System_Logging_Console* p = console_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.console)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Logging_Console*>(
      &::openconfig::openconfig_system::_System_Logging_Console_default_instance_);
}
inline ::openconfig::openconfig_system::System_Logging_Console* System_Logging::release_console() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Logging.console)
  
  ::openconfig::openconfig_system::System_Logging_Console* temp = console_;
  console_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Logging_Console* System_Logging::mutable_console() {
  
  if (console_ == NULL) {
    console_ = new ::openconfig::openconfig_system::System_Logging_Console;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Logging.console)
  return console_;
}
inline void System_Logging::set_allocated_console(::openconfig::openconfig_system::System_Logging_Console* console) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete console_;
  }
  if (console) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      console = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, console, submessage_arena);
    }
    
  } else {
    
  }
  console_ = console;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Logging.console)
}

// .openconfig.openconfig_system.System.Logging.RemoteServers remote_servers = 224027600 [(.yext.schemapath) = "/system/logging/remote-servers"];
inline bool System_Logging::has_remote_servers() const {
  return this != internal_default_instance() && remote_servers_ != NULL;
}
inline void System_Logging::clear_remote_servers() {
  if (GetArenaNoVirtual() == NULL && remote_servers_ != NULL) {
    delete remote_servers_;
  }
  remote_servers_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Logging_RemoteServers& System_Logging::remote_servers() const {
  const ::openconfig::openconfig_system::System_Logging_RemoteServers* p = remote_servers_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Logging.remote_servers)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Logging_RemoteServers*>(
      &::openconfig::openconfig_system::_System_Logging_RemoteServers_default_instance_);
}
inline ::openconfig::openconfig_system::System_Logging_RemoteServers* System_Logging::release_remote_servers() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Logging.remote_servers)
  
  ::openconfig::openconfig_system::System_Logging_RemoteServers* temp = remote_servers_;
  remote_servers_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Logging_RemoteServers* System_Logging::mutable_remote_servers() {
  
  if (remote_servers_ == NULL) {
    remote_servers_ = new ::openconfig::openconfig_system::System_Logging_RemoteServers;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Logging.remote_servers)
  return remote_servers_;
}
inline void System_Logging::set_allocated_remote_servers(::openconfig::openconfig_system::System_Logging_RemoteServers* remote_servers) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete remote_servers_;
  }
  if (remote_servers) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      remote_servers = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, remote_servers, submessage_arena);
    }
    
  } else {
    
  }
  remote_servers_ = remote_servers;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Logging.remote_servers)
}

// -------------------------------------------------------------------

// System_Memory_Config

// -------------------------------------------------------------------

// System_Memory_State

// .ywrapper.UintValue physical = 108400520 [(.yext.schemapath) = "/system/memory/state/physical"];
inline bool System_Memory_State::has_physical() const {
  return this != internal_default_instance() && physical_ != NULL;
}
inline const ::ywrapper::UintValue& System_Memory_State::physical() const {
  const ::ywrapper::UintValue* p = physical_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Memory.State.physical)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Memory_State::release_physical() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Memory.State.physical)
  
  ::ywrapper::UintValue* temp = physical_;
  physical_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Memory_State::mutable_physical() {
  
  if (physical_ == NULL) {
    physical_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Memory.State.physical)
  return physical_;
}
inline void System_Memory_State::set_allocated_physical(::ywrapper::UintValue* physical) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(physical_);
  }
  if (physical) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      physical = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, physical, submessage_arena);
    }
    
  } else {
    
  }
  physical_ = physical;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Memory.State.physical)
}

// .ywrapper.UintValue reserved = 140759447 [(.yext.schemapath) = "/system/memory/state/reserved"];
inline bool System_Memory_State::has_reserved() const {
  return this != internal_default_instance() && reserved_ != NULL;
}
inline const ::ywrapper::UintValue& System_Memory_State::reserved() const {
  const ::ywrapper::UintValue* p = reserved_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Memory.State.reserved)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Memory_State::release_reserved() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Memory.State.reserved)
  
  ::ywrapper::UintValue* temp = reserved_;
  reserved_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Memory_State::mutable_reserved() {
  
  if (reserved_ == NULL) {
    reserved_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Memory.State.reserved)
  return reserved_;
}
inline void System_Memory_State::set_allocated_reserved(::ywrapper::UintValue* reserved) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(reserved_);
  }
  if (reserved) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      reserved = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, reserved, submessage_arena);
    }
    
  } else {
    
  }
  reserved_ = reserved;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Memory.State.reserved)
}

// -------------------------------------------------------------------

// System_Memory

// .openconfig.openconfig_system.System.Memory.Config config = 525457903 [(.yext.schemapath) = "/system/memory/config"];
inline bool System_Memory::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Memory::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Memory_Config& System_Memory::config() const {
  const ::openconfig::openconfig_system::System_Memory_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Memory.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Memory_Config*>(
      &::openconfig::openconfig_system::_System_Memory_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Memory_Config* System_Memory::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Memory.config)
  
  ::openconfig::openconfig_system::System_Memory_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Memory_Config* System_Memory::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Memory_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Memory.config)
  return config_;
}
inline void System_Memory::set_allocated_config(::openconfig::openconfig_system::System_Memory_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Memory.config)
}

// .openconfig.openconfig_system.System.Memory.State state = 444004704 [(.yext.schemapath) = "/system/memory/state"];
inline bool System_Memory::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Memory::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Memory_State& System_Memory::state() const {
  const ::openconfig::openconfig_system::System_Memory_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Memory.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Memory_State*>(
      &::openconfig::openconfig_system::_System_Memory_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Memory_State* System_Memory::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Memory.state)
  
  ::openconfig::openconfig_system::System_Memory_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Memory_State* System_Memory::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Memory_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Memory.state)
  return state_;
}
inline void System_Memory::set_allocated_state(::openconfig::openconfig_system::System_Memory_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Memory.state)
}

// -------------------------------------------------------------------

// System_Ntp_Config

// .ywrapper.BoolValue enable_ntp_auth = 345800954 [(.yext.schemapath) = "/system/ntp/config/enable-ntp-auth"];
inline bool System_Ntp_Config::has_enable_ntp_auth() const {
  return this != internal_default_instance() && enable_ntp_auth_ != NULL;
}
inline const ::ywrapper::BoolValue& System_Ntp_Config::enable_ntp_auth() const {
  const ::ywrapper::BoolValue* p = enable_ntp_auth_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.Config.enable_ntp_auth)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* System_Ntp_Config::release_enable_ntp_auth() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.Config.enable_ntp_auth)
  
  ::ywrapper::BoolValue* temp = enable_ntp_auth_;
  enable_ntp_auth_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* System_Ntp_Config::mutable_enable_ntp_auth() {
  
  if (enable_ntp_auth_ == NULL) {
    enable_ntp_auth_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.Config.enable_ntp_auth)
  return enable_ntp_auth_;
}
inline void System_Ntp_Config::set_allocated_enable_ntp_auth(::ywrapper::BoolValue* enable_ntp_auth) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enable_ntp_auth_);
  }
  if (enable_ntp_auth) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enable_ntp_auth = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enable_ntp_auth, submessage_arena);
    }
    
  } else {
    
  }
  enable_ntp_auth_ = enable_ntp_auth;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.Config.enable_ntp_auth)
}

// .ywrapper.BoolValue enabled = 520946078 [(.yext.schemapath) = "/system/ntp/config/enabled"];
inline bool System_Ntp_Config::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
inline const ::ywrapper::BoolValue& System_Ntp_Config::enabled() const {
  const ::ywrapper::BoolValue* p = enabled_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.Config.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* System_Ntp_Config::release_enabled() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.Config.enabled)
  
  ::ywrapper::BoolValue* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* System_Ntp_Config::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.Config.enabled)
  return enabled_;
}
inline void System_Ntp_Config::set_allocated_enabled(::ywrapper::BoolValue* enabled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enabled_);
  }
  if (enabled) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enabled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enabled, submessage_arena);
    }
    
  } else {
    
  }
  enabled_ = enabled;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.Config.enabled)
}

// .ywrapper.StringValue ntp_source_address = 418322460 [(.yext.schemapath) = "/system/ntp/config/ntp-source-address"];
inline bool System_Ntp_Config::has_ntp_source_address() const {
  return this != internal_default_instance() && ntp_source_address_ != NULL;
}
inline const ::ywrapper::StringValue& System_Ntp_Config::ntp_source_address() const {
  const ::ywrapper::StringValue* p = ntp_source_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.Config.ntp_source_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Ntp_Config::release_ntp_source_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.Config.ntp_source_address)
  
  ::ywrapper::StringValue* temp = ntp_source_address_;
  ntp_source_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Ntp_Config::mutable_ntp_source_address() {
  
  if (ntp_source_address_ == NULL) {
    ntp_source_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.Config.ntp_source_address)
  return ntp_source_address_;
}
inline void System_Ntp_Config::set_allocated_ntp_source_address(::ywrapper::StringValue* ntp_source_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ntp_source_address_);
  }
  if (ntp_source_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ntp_source_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ntp_source_address, submessage_arena);
    }
    
  } else {
    
  }
  ntp_source_address_ = ntp_source_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.Config.ntp_source_address)
}

// -------------------------------------------------------------------

// System_Ntp_NtpKeys_NtpKey_Config

// .ywrapper.UintValue key_id = 222155977 [(.yext.schemapath) = "/system/ntp/ntp-keys/ntp-key/config/key-id"];
inline bool System_Ntp_NtpKeys_NtpKey_Config::has_key_id() const {
  return this != internal_default_instance() && key_id_ != NULL;
}
inline const ::ywrapper::UintValue& System_Ntp_NtpKeys_NtpKey_Config::key_id() const {
  const ::ywrapper::UintValue* p = key_id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.Config.key_id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Ntp_NtpKeys_NtpKey_Config::release_key_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.Config.key_id)
  
  ::ywrapper::UintValue* temp = key_id_;
  key_id_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Ntp_NtpKeys_NtpKey_Config::mutable_key_id() {
  
  if (key_id_ == NULL) {
    key_id_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.Config.key_id)
  return key_id_;
}
inline void System_Ntp_NtpKeys_NtpKey_Config::set_allocated_key_id(::ywrapper::UintValue* key_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(key_id_);
  }
  if (key_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      key_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, key_id, submessage_arena);
    }
    
  } else {
    
  }
  key_id_ = key_id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.Config.key_id)
}

// .openconfig.enums.OpenconfigSystemNTPAUTHTYPE key_type = 68795202 [(.yext.schemapath) = "/system/ntp/ntp-keys/ntp-key/config/key-type"];
inline void System_Ntp_NtpKeys_NtpKey_Config::clear_key_type() {
  key_type_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemNTPAUTHTYPE System_Ntp_NtpKeys_NtpKey_Config::key_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.Config.key_type)
  return static_cast< ::openconfig::enums::OpenconfigSystemNTPAUTHTYPE >(key_type_);
}
inline void System_Ntp_NtpKeys_NtpKey_Config::set_key_type(::openconfig::enums::OpenconfigSystemNTPAUTHTYPE value) {
  
  key_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.Config.key_type)
}

// .ywrapper.StringValue key_value = 491993133 [(.yext.schemapath) = "/system/ntp/ntp-keys/ntp-key/config/key-value"];
inline bool System_Ntp_NtpKeys_NtpKey_Config::has_key_value() const {
  return this != internal_default_instance() && key_value_ != NULL;
}
inline const ::ywrapper::StringValue& System_Ntp_NtpKeys_NtpKey_Config::key_value() const {
  const ::ywrapper::StringValue* p = key_value_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.Config.key_value)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Ntp_NtpKeys_NtpKey_Config::release_key_value() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.Config.key_value)
  
  ::ywrapper::StringValue* temp = key_value_;
  key_value_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Ntp_NtpKeys_NtpKey_Config::mutable_key_value() {
  
  if (key_value_ == NULL) {
    key_value_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.Config.key_value)
  return key_value_;
}
inline void System_Ntp_NtpKeys_NtpKey_Config::set_allocated_key_value(::ywrapper::StringValue* key_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(key_value_);
  }
  if (key_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      key_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, key_value, submessage_arena);
    }
    
  } else {
    
  }
  key_value_ = key_value;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.Config.key_value)
}

// -------------------------------------------------------------------

// System_Ntp_NtpKeys_NtpKey_State

// .ywrapper.UintValue key_id = 526881776 [(.yext.schemapath) = "/system/ntp/ntp-keys/ntp-key/state/key-id"];
inline bool System_Ntp_NtpKeys_NtpKey_State::has_key_id() const {
  return this != internal_default_instance() && key_id_ != NULL;
}
inline const ::ywrapper::UintValue& System_Ntp_NtpKeys_NtpKey_State::key_id() const {
  const ::ywrapper::UintValue* p = key_id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.State.key_id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Ntp_NtpKeys_NtpKey_State::release_key_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.State.key_id)
  
  ::ywrapper::UintValue* temp = key_id_;
  key_id_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Ntp_NtpKeys_NtpKey_State::mutable_key_id() {
  
  if (key_id_ == NULL) {
    key_id_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.State.key_id)
  return key_id_;
}
inline void System_Ntp_NtpKeys_NtpKey_State::set_allocated_key_id(::ywrapper::UintValue* key_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(key_id_);
  }
  if (key_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      key_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, key_id, submessage_arena);
    }
    
  } else {
    
  }
  key_id_ = key_id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.State.key_id)
}

// .openconfig.enums.OpenconfigSystemNTPAUTHTYPE key_type = 360346767 [(.yext.schemapath) = "/system/ntp/ntp-keys/ntp-key/state/key-type"];
inline void System_Ntp_NtpKeys_NtpKey_State::clear_key_type() {
  key_type_ = 0;
}
inline ::openconfig::enums::OpenconfigSystemNTPAUTHTYPE System_Ntp_NtpKeys_NtpKey_State::key_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.State.key_type)
  return static_cast< ::openconfig::enums::OpenconfigSystemNTPAUTHTYPE >(key_type_);
}
inline void System_Ntp_NtpKeys_NtpKey_State::set_key_type(::openconfig::enums::OpenconfigSystemNTPAUTHTYPE value) {
  
  key_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.State.key_type)
}

// .ywrapper.StringValue key_value = 234995902 [(.yext.schemapath) = "/system/ntp/ntp-keys/ntp-key/state/key-value"];
inline bool System_Ntp_NtpKeys_NtpKey_State::has_key_value() const {
  return this != internal_default_instance() && key_value_ != NULL;
}
inline const ::ywrapper::StringValue& System_Ntp_NtpKeys_NtpKey_State::key_value() const {
  const ::ywrapper::StringValue* p = key_value_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.State.key_value)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Ntp_NtpKeys_NtpKey_State::release_key_value() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.State.key_value)
  
  ::ywrapper::StringValue* temp = key_value_;
  key_value_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Ntp_NtpKeys_NtpKey_State::mutable_key_value() {
  
  if (key_value_ == NULL) {
    key_value_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.State.key_value)
  return key_value_;
}
inline void System_Ntp_NtpKeys_NtpKey_State::set_allocated_key_value(::ywrapper::StringValue* key_value) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(key_value_);
  }
  if (key_value) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      key_value = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, key_value, submessage_arena);
    }
    
  } else {
    
  }
  key_value_ = key_value;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.State.key_value)
}

// -------------------------------------------------------------------

// System_Ntp_NtpKeys_NtpKey

// .openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.Config config = 92682517 [(.yext.schemapath) = "/system/ntp/ntp-keys/ntp-key/config"];
inline bool System_Ntp_NtpKeys_NtpKey::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Ntp_NtpKeys_NtpKey::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey_Config& System_Ntp_NtpKeys_NtpKey::config() const {
  const ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey_Config*>(
      &::openconfig::openconfig_system::_System_Ntp_NtpKeys_NtpKey_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey_Config* System_Ntp_NtpKeys_NtpKey::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.config)
  
  ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey_Config* System_Ntp_NtpKeys_NtpKey::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.config)
  return config_;
}
inline void System_Ntp_NtpKeys_NtpKey::set_allocated_config(::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.config)
}

// .openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.State state = 467759498 [(.yext.schemapath) = "/system/ntp/ntp-keys/ntp-key/state"];
inline bool System_Ntp_NtpKeys_NtpKey::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Ntp_NtpKeys_NtpKey::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey_State& System_Ntp_NtpKeys_NtpKey::state() const {
  const ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey_State*>(
      &::openconfig::openconfig_system::_System_Ntp_NtpKeys_NtpKey_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey_State* System_Ntp_NtpKeys_NtpKey::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.state)
  
  ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey_State* System_Ntp_NtpKeys_NtpKey::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.state)
  return state_;
}
inline void System_Ntp_NtpKeys_NtpKey::set_allocated_state(::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey.state)
}

// -------------------------------------------------------------------

// System_Ntp_NtpKeys_NtpKeyKey

// uint64 key_id = 1 [(.yext.schemapath) = "/system/ntp/ntp-keys/ntp-key/key-id"];
inline void System_Ntp_NtpKeys_NtpKeyKey::clear_key_id() {
  key_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 System_Ntp_NtpKeys_NtpKeyKey::key_id() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKeyKey.key_id)
  return key_id_;
}
inline void System_Ntp_NtpKeys_NtpKeyKey::set_key_id(::google::protobuf::uint64 value) {
  
  key_id_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKeyKey.key_id)
}

// .openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKey ntp_key = 2;
inline bool System_Ntp_NtpKeys_NtpKeyKey::has_ntp_key() const {
  return this != internal_default_instance() && ntp_key_ != NULL;
}
inline void System_Ntp_NtpKeys_NtpKeyKey::clear_ntp_key() {
  if (GetArenaNoVirtual() == NULL && ntp_key_ != NULL) {
    delete ntp_key_;
  }
  ntp_key_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey& System_Ntp_NtpKeys_NtpKeyKey::ntp_key() const {
  const ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey* p = ntp_key_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKeyKey.ntp_key)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey*>(
      &::openconfig::openconfig_system::_System_Ntp_NtpKeys_NtpKey_default_instance_);
}
inline ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey* System_Ntp_NtpKeys_NtpKeyKey::release_ntp_key() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKeyKey.ntp_key)
  
  ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey* temp = ntp_key_;
  ntp_key_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey* System_Ntp_NtpKeys_NtpKeyKey::mutable_ntp_key() {
  
  if (ntp_key_ == NULL) {
    ntp_key_ = new ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKeyKey.ntp_key)
  return ntp_key_;
}
inline void System_Ntp_NtpKeys_NtpKeyKey::set_allocated_ntp_key(::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKey* ntp_key) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ntp_key_;
  }
  if (ntp_key) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ntp_key = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ntp_key, submessage_arena);
    }
    
  } else {
    
  }
  ntp_key_ = ntp_key;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKeyKey.ntp_key)
}

// -------------------------------------------------------------------

// System_Ntp_NtpKeys

// repeated .openconfig.openconfig_system.System.Ntp.NtpKeys.NtpKeyKey ntp_key = 265614496 [(.yext.schemapath) = "/system/ntp/ntp-keys/ntp-key"];
inline int System_Ntp_NtpKeys::ntp_key_size() const {
  return ntp_key_.size();
}
inline void System_Ntp_NtpKeys::clear_ntp_key() {
  ntp_key_.Clear();
}
inline const ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKeyKey& System_Ntp_NtpKeys::ntp_key(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.NtpKeys.ntp_key)
  return ntp_key_.Get(index);
}
inline ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKeyKey* System_Ntp_NtpKeys::mutable_ntp_key(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.NtpKeys.ntp_key)
  return ntp_key_.Mutable(index);
}
inline ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKeyKey* System_Ntp_NtpKeys::add_ntp_key() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Ntp.NtpKeys.ntp_key)
  return ntp_key_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKeyKey >*
System_Ntp_NtpKeys::mutable_ntp_key() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Ntp.NtpKeys.ntp_key)
  return &ntp_key_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Ntp_NtpKeys_NtpKeyKey >&
System_Ntp_NtpKeys::ntp_key() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Ntp.NtpKeys.ntp_key)
  return ntp_key_;
}

// -------------------------------------------------------------------

// System_Ntp_Servers_Server_Config

// .ywrapper.StringValue address = 410259212 [(.yext.schemapath) = "/system/ntp/servers/server/config/address"];
inline bool System_Ntp_Servers_Server_Config::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline const ::ywrapper::StringValue& System_Ntp_Servers_Server_Config::address() const {
  const ::ywrapper::StringValue* p = address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.Servers.Server.Config.address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Ntp_Servers_Server_Config::release_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.Servers.Server.Config.address)
  
  ::ywrapper::StringValue* temp = address_;
  address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Ntp_Servers_Server_Config::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.Servers.Server.Config.address)
  return address_;
}
inline void System_Ntp_Servers_Server_Config::set_allocated_address(::ywrapper::StringValue* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(address_);
  }
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.Servers.Server.Config.address)
}

// .openconfig.openconfig_system.System.Ntp.Servers.Server.Config.AssociationType association_type = 403743446 [(.yext.schemapath) = "/system/ntp/servers/server/config/association-type"];
inline void System_Ntp_Servers_Server_Config::clear_association_type() {
  association_type_ = 0;
}
inline ::openconfig::openconfig_system::System_Ntp_Servers_Server_Config_AssociationType System_Ntp_Servers_Server_Config::association_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.Servers.Server.Config.association_type)
  return static_cast< ::openconfig::openconfig_system::System_Ntp_Servers_Server_Config_AssociationType >(association_type_);
}
inline void System_Ntp_Servers_Server_Config::set_association_type(::openconfig::openconfig_system::System_Ntp_Servers_Server_Config_AssociationType value) {
  
  association_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Ntp.Servers.Server.Config.association_type)
}

// .ywrapper.BoolValue iburst = 520002257 [(.yext.schemapath) = "/system/ntp/servers/server/config/iburst"];
inline bool System_Ntp_Servers_Server_Config::has_iburst() const {
  return this != internal_default_instance() && iburst_ != NULL;
}
inline const ::ywrapper::BoolValue& System_Ntp_Servers_Server_Config::iburst() const {
  const ::ywrapper::BoolValue* p = iburst_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.Servers.Server.Config.iburst)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* System_Ntp_Servers_Server_Config::release_iburst() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.Servers.Server.Config.iburst)
  
  ::ywrapper::BoolValue* temp = iburst_;
  iburst_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* System_Ntp_Servers_Server_Config::mutable_iburst() {
  
  if (iburst_ == NULL) {
    iburst_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.Servers.Server.Config.iburst)
  return iburst_;
}
inline void System_Ntp_Servers_Server_Config::set_allocated_iburst(::ywrapper::BoolValue* iburst) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(iburst_);
  }
  if (iburst) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      iburst = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, iburst, submessage_arena);
    }
    
  } else {
    
  }
  iburst_ = iburst;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.Servers.Server.Config.iburst)
}

// .ywrapper.UintValue port = 23953045 [(.yext.schemapath) = "/system/ntp/servers/server/config/port"];
inline bool System_Ntp_Servers_Server_Config::has_port() const {
  return this != internal_default_instance() && port_ != NULL;
}
inline const ::ywrapper::UintValue& System_Ntp_Servers_Server_Config::port() const {
  const ::ywrapper::UintValue* p = port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.Servers.Server.Config.port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Ntp_Servers_Server_Config::release_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.Servers.Server.Config.port)
  
  ::ywrapper::UintValue* temp = port_;
  port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Ntp_Servers_Server_Config::mutable_port() {
  
  if (port_ == NULL) {
    port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.Servers.Server.Config.port)
  return port_;
}
inline void System_Ntp_Servers_Server_Config::set_allocated_port(::ywrapper::UintValue* port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(port_);
  }
  if (port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, port, submessage_arena);
    }
    
  } else {
    
  }
  port_ = port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.Servers.Server.Config.port)
}

// .ywrapper.BoolValue prefer = 63587710 [(.yext.schemapath) = "/system/ntp/servers/server/config/prefer"];
inline bool System_Ntp_Servers_Server_Config::has_prefer() const {
  return this != internal_default_instance() && prefer_ != NULL;
}
inline const ::ywrapper::BoolValue& System_Ntp_Servers_Server_Config::prefer() const {
  const ::ywrapper::BoolValue* p = prefer_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.Servers.Server.Config.prefer)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* System_Ntp_Servers_Server_Config::release_prefer() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.Servers.Server.Config.prefer)
  
  ::ywrapper::BoolValue* temp = prefer_;
  prefer_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* System_Ntp_Servers_Server_Config::mutable_prefer() {
  
  if (prefer_ == NULL) {
    prefer_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.Servers.Server.Config.prefer)
  return prefer_;
}
inline void System_Ntp_Servers_Server_Config::set_allocated_prefer(::ywrapper::BoolValue* prefer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(prefer_);
  }
  if (prefer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      prefer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, prefer, submessage_arena);
    }
    
  } else {
    
  }
  prefer_ = prefer;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.Servers.Server.Config.prefer)
}

// .ywrapper.UintValue version = 385126824 [(.yext.schemapath) = "/system/ntp/servers/server/config/version"];
inline bool System_Ntp_Servers_Server_Config::has_version() const {
  return this != internal_default_instance() && version_ != NULL;
}
inline const ::ywrapper::UintValue& System_Ntp_Servers_Server_Config::version() const {
  const ::ywrapper::UintValue* p = version_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.Servers.Server.Config.version)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Ntp_Servers_Server_Config::release_version() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.Servers.Server.Config.version)
  
  ::ywrapper::UintValue* temp = version_;
  version_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Ntp_Servers_Server_Config::mutable_version() {
  
  if (version_ == NULL) {
    version_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.Servers.Server.Config.version)
  return version_;
}
inline void System_Ntp_Servers_Server_Config::set_allocated_version(::ywrapper::UintValue* version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(version_);
  }
  if (version) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, version, submessage_arena);
    }
    
  } else {
    
  }
  version_ = version;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.Servers.Server.Config.version)
}

// -------------------------------------------------------------------

// System_Ntp_Servers_Server_State

// .ywrapper.StringValue address = 376190615 [(.yext.schemapath) = "/system/ntp/servers/server/state/address"];
inline bool System_Ntp_Servers_Server_State::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline const ::ywrapper::StringValue& System_Ntp_Servers_Server_State::address() const {
  const ::ywrapper::StringValue* p = address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.Servers.Server.State.address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Ntp_Servers_Server_State::release_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.Servers.Server.State.address)
  
  ::ywrapper::StringValue* temp = address_;
  address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Ntp_Servers_Server_State::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.Servers.Server.State.address)
  return address_;
}
inline void System_Ntp_Servers_Server_State::set_allocated_address(::ywrapper::StringValue* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(address_);
  }
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.Servers.Server.State.address)
}

// .openconfig.openconfig_system.System.Ntp.Servers.Server.State.AssociationType association_type = 409884071 [(.yext.schemapath) = "/system/ntp/servers/server/state/association-type"];
inline void System_Ntp_Servers_Server_State::clear_association_type() {
  association_type_ = 0;
}
inline ::openconfig::openconfig_system::System_Ntp_Servers_Server_State_AssociationType System_Ntp_Servers_Server_State::association_type() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.Servers.Server.State.association_type)
  return static_cast< ::openconfig::openconfig_system::System_Ntp_Servers_Server_State_AssociationType >(association_type_);
}
inline void System_Ntp_Servers_Server_State::set_association_type(::openconfig::openconfig_system::System_Ntp_Servers_Server_State_AssociationType value) {
  
  association_type_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Ntp.Servers.Server.State.association_type)
}

// .ywrapper.BoolValue iburst = 447044400 [(.yext.schemapath) = "/system/ntp/servers/server/state/iburst"];
inline bool System_Ntp_Servers_Server_State::has_iburst() const {
  return this != internal_default_instance() && iburst_ != NULL;
}
inline const ::ywrapper::BoolValue& System_Ntp_Servers_Server_State::iburst() const {
  const ::ywrapper::BoolValue* p = iburst_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.Servers.Server.State.iburst)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* System_Ntp_Servers_Server_State::release_iburst() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.Servers.Server.State.iburst)
  
  ::ywrapper::BoolValue* temp = iburst_;
  iburst_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* System_Ntp_Servers_Server_State::mutable_iburst() {
  
  if (iburst_ == NULL) {
    iburst_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.Servers.Server.State.iburst)
  return iburst_;
}
inline void System_Ntp_Servers_Server_State::set_allocated_iburst(::ywrapper::BoolValue* iburst) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(iburst_);
  }
  if (iburst) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      iburst = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, iburst, submessage_arena);
    }
    
  } else {
    
  }
  iburst_ = iburst;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.Servers.Server.State.iburst)
}

// .ywrapper.UintValue offset = 2287252 [(.yext.schemapath) = "/system/ntp/servers/server/state/offset"];
inline bool System_Ntp_Servers_Server_State::has_offset() const {
  return this != internal_default_instance() && offset_ != NULL;
}
inline const ::ywrapper::UintValue& System_Ntp_Servers_Server_State::offset() const {
  const ::ywrapper::UintValue* p = offset_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.Servers.Server.State.offset)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Ntp_Servers_Server_State::release_offset() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.Servers.Server.State.offset)
  
  ::ywrapper::UintValue* temp = offset_;
  offset_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Ntp_Servers_Server_State::mutable_offset() {
  
  if (offset_ == NULL) {
    offset_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.Servers.Server.State.offset)
  return offset_;
}
inline void System_Ntp_Servers_Server_State::set_allocated_offset(::ywrapper::UintValue* offset) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(offset_);
  }
  if (offset) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      offset = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, offset, submessage_arena);
    }
    
  } else {
    
  }
  offset_ = offset;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.Servers.Server.State.offset)
}

// .ywrapper.UintValue poll_interval = 394021196 [(.yext.schemapath) = "/system/ntp/servers/server/state/poll-interval"];
inline bool System_Ntp_Servers_Server_State::has_poll_interval() const {
  return this != internal_default_instance() && poll_interval_ != NULL;
}
inline const ::ywrapper::UintValue& System_Ntp_Servers_Server_State::poll_interval() const {
  const ::ywrapper::UintValue* p = poll_interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.Servers.Server.State.poll_interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Ntp_Servers_Server_State::release_poll_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.Servers.Server.State.poll_interval)
  
  ::ywrapper::UintValue* temp = poll_interval_;
  poll_interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Ntp_Servers_Server_State::mutable_poll_interval() {
  
  if (poll_interval_ == NULL) {
    poll_interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.Servers.Server.State.poll_interval)
  return poll_interval_;
}
inline void System_Ntp_Servers_Server_State::set_allocated_poll_interval(::ywrapper::UintValue* poll_interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(poll_interval_);
  }
  if (poll_interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      poll_interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, poll_interval, submessage_arena);
    }
    
  } else {
    
  }
  poll_interval_ = poll_interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.Servers.Server.State.poll_interval)
}

// .ywrapper.UintValue port = 470437856 [(.yext.schemapath) = "/system/ntp/servers/server/state/port"];
inline bool System_Ntp_Servers_Server_State::has_port() const {
  return this != internal_default_instance() && port_ != NULL;
}
inline const ::ywrapper::UintValue& System_Ntp_Servers_Server_State::port() const {
  const ::ywrapper::UintValue* p = port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.Servers.Server.State.port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Ntp_Servers_Server_State::release_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.Servers.Server.State.port)
  
  ::ywrapper::UintValue* temp = port_;
  port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Ntp_Servers_Server_State::mutable_port() {
  
  if (port_ == NULL) {
    port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.Servers.Server.State.port)
  return port_;
}
inline void System_Ntp_Servers_Server_State::set_allocated_port(::ywrapper::UintValue* port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(port_);
  }
  if (port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, port, submessage_arena);
    }
    
  } else {
    
  }
  port_ = port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.Servers.Server.State.port)
}

// .ywrapper.BoolValue prefer = 424414343 [(.yext.schemapath) = "/system/ntp/servers/server/state/prefer"];
inline bool System_Ntp_Servers_Server_State::has_prefer() const {
  return this != internal_default_instance() && prefer_ != NULL;
}
inline const ::ywrapper::BoolValue& System_Ntp_Servers_Server_State::prefer() const {
  const ::ywrapper::BoolValue* p = prefer_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.Servers.Server.State.prefer)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* System_Ntp_Servers_Server_State::release_prefer() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.Servers.Server.State.prefer)
  
  ::ywrapper::BoolValue* temp = prefer_;
  prefer_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* System_Ntp_Servers_Server_State::mutable_prefer() {
  
  if (prefer_ == NULL) {
    prefer_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.Servers.Server.State.prefer)
  return prefer_;
}
inline void System_Ntp_Servers_Server_State::set_allocated_prefer(::ywrapper::BoolValue* prefer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(prefer_);
  }
  if (prefer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      prefer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, prefer, submessage_arena);
    }
    
  } else {
    
  }
  prefer_ = prefer;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.Servers.Server.State.prefer)
}

// .ywrapper.UintValue root_delay = 363692935 [(.yext.schemapath) = "/system/ntp/servers/server/state/root-delay"];
inline bool System_Ntp_Servers_Server_State::has_root_delay() const {
  return this != internal_default_instance() && root_delay_ != NULL;
}
inline const ::ywrapper::UintValue& System_Ntp_Servers_Server_State::root_delay() const {
  const ::ywrapper::UintValue* p = root_delay_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.Servers.Server.State.root_delay)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Ntp_Servers_Server_State::release_root_delay() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.Servers.Server.State.root_delay)
  
  ::ywrapper::UintValue* temp = root_delay_;
  root_delay_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Ntp_Servers_Server_State::mutable_root_delay() {
  
  if (root_delay_ == NULL) {
    root_delay_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.Servers.Server.State.root_delay)
  return root_delay_;
}
inline void System_Ntp_Servers_Server_State::set_allocated_root_delay(::ywrapper::UintValue* root_delay) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(root_delay_);
  }
  if (root_delay) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      root_delay = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, root_delay, submessage_arena);
    }
    
  } else {
    
  }
  root_delay_ = root_delay;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.Servers.Server.State.root_delay)
}

// .ywrapper.UintValue root_dispersion = 81112484 [(.yext.schemapath) = "/system/ntp/servers/server/state/root-dispersion"];
inline bool System_Ntp_Servers_Server_State::has_root_dispersion() const {
  return this != internal_default_instance() && root_dispersion_ != NULL;
}
inline const ::ywrapper::UintValue& System_Ntp_Servers_Server_State::root_dispersion() const {
  const ::ywrapper::UintValue* p = root_dispersion_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.Servers.Server.State.root_dispersion)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Ntp_Servers_Server_State::release_root_dispersion() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.Servers.Server.State.root_dispersion)
  
  ::ywrapper::UintValue* temp = root_dispersion_;
  root_dispersion_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Ntp_Servers_Server_State::mutable_root_dispersion() {
  
  if (root_dispersion_ == NULL) {
    root_dispersion_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.Servers.Server.State.root_dispersion)
  return root_dispersion_;
}
inline void System_Ntp_Servers_Server_State::set_allocated_root_dispersion(::ywrapper::UintValue* root_dispersion) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(root_dispersion_);
  }
  if (root_dispersion) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      root_dispersion = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, root_dispersion, submessage_arena);
    }
    
  } else {
    
  }
  root_dispersion_ = root_dispersion;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.Servers.Server.State.root_dispersion)
}

// .ywrapper.UintValue stratum = 297803783 [(.yext.schemapath) = "/system/ntp/servers/server/state/stratum"];
inline bool System_Ntp_Servers_Server_State::has_stratum() const {
  return this != internal_default_instance() && stratum_ != NULL;
}
inline const ::ywrapper::UintValue& System_Ntp_Servers_Server_State::stratum() const {
  const ::ywrapper::UintValue* p = stratum_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.Servers.Server.State.stratum)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Ntp_Servers_Server_State::release_stratum() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.Servers.Server.State.stratum)
  
  ::ywrapper::UintValue* temp = stratum_;
  stratum_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Ntp_Servers_Server_State::mutable_stratum() {
  
  if (stratum_ == NULL) {
    stratum_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.Servers.Server.State.stratum)
  return stratum_;
}
inline void System_Ntp_Servers_Server_State::set_allocated_stratum(::ywrapper::UintValue* stratum) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(stratum_);
  }
  if (stratum) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      stratum = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stratum, submessage_arena);
    }
    
  } else {
    
  }
  stratum_ = stratum;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.Servers.Server.State.stratum)
}

// .ywrapper.UintValue version = 110839315 [(.yext.schemapath) = "/system/ntp/servers/server/state/version"];
inline bool System_Ntp_Servers_Server_State::has_version() const {
  return this != internal_default_instance() && version_ != NULL;
}
inline const ::ywrapper::UintValue& System_Ntp_Servers_Server_State::version() const {
  const ::ywrapper::UintValue* p = version_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.Servers.Server.State.version)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Ntp_Servers_Server_State::release_version() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.Servers.Server.State.version)
  
  ::ywrapper::UintValue* temp = version_;
  version_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Ntp_Servers_Server_State::mutable_version() {
  
  if (version_ == NULL) {
    version_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.Servers.Server.State.version)
  return version_;
}
inline void System_Ntp_Servers_Server_State::set_allocated_version(::ywrapper::UintValue* version) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(version_);
  }
  if (version) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      version = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, version, submessage_arena);
    }
    
  } else {
    
  }
  version_ = version;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.Servers.Server.State.version)
}

// -------------------------------------------------------------------

// System_Ntp_Servers_Server

// .openconfig.openconfig_system.System.Ntp.Servers.Server.Config config = 336048721 [(.yext.schemapath) = "/system/ntp/servers/server/config"];
inline bool System_Ntp_Servers_Server::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Ntp_Servers_Server::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Ntp_Servers_Server_Config& System_Ntp_Servers_Server::config() const {
  const ::openconfig::openconfig_system::System_Ntp_Servers_Server_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.Servers.Server.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Ntp_Servers_Server_Config*>(
      &::openconfig::openconfig_system::_System_Ntp_Servers_Server_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Ntp_Servers_Server_Config* System_Ntp_Servers_Server::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.Servers.Server.config)
  
  ::openconfig::openconfig_system::System_Ntp_Servers_Server_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Ntp_Servers_Server_Config* System_Ntp_Servers_Server::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Ntp_Servers_Server_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.Servers.Server.config)
  return config_;
}
inline void System_Ntp_Servers_Server::set_allocated_config(::openconfig::openconfig_system::System_Ntp_Servers_Server_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.Servers.Server.config)
}

// .openconfig.openconfig_system.System.Ntp.Servers.Server.State state = 280461638 [(.yext.schemapath) = "/system/ntp/servers/server/state"];
inline bool System_Ntp_Servers_Server::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Ntp_Servers_Server::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Ntp_Servers_Server_State& System_Ntp_Servers_Server::state() const {
  const ::openconfig::openconfig_system::System_Ntp_Servers_Server_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.Servers.Server.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Ntp_Servers_Server_State*>(
      &::openconfig::openconfig_system::_System_Ntp_Servers_Server_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Ntp_Servers_Server_State* System_Ntp_Servers_Server::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.Servers.Server.state)
  
  ::openconfig::openconfig_system::System_Ntp_Servers_Server_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Ntp_Servers_Server_State* System_Ntp_Servers_Server::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Ntp_Servers_Server_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.Servers.Server.state)
  return state_;
}
inline void System_Ntp_Servers_Server::set_allocated_state(::openconfig::openconfig_system::System_Ntp_Servers_Server_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.Servers.Server.state)
}

// -------------------------------------------------------------------

// System_Ntp_Servers_ServerKey

// string address = 1 [(.yext.schemapath) = "/system/ntp/servers/server/address"];
inline void System_Ntp_Servers_ServerKey::clear_address() {
  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& System_Ntp_Servers_ServerKey::address() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.Servers.ServerKey.address)
  return address_.GetNoArena();
}
inline void System_Ntp_Servers_ServerKey::set_address(const ::std::string& value) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Ntp.Servers.ServerKey.address)
}
#if LANG_CXX11
inline void System_Ntp_Servers_ServerKey::set_address(::std::string&& value) {
  
  address_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_system.System.Ntp.Servers.ServerKey.address)
}
#endif
inline void System_Ntp_Servers_ServerKey::set_address(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_system.System.Ntp.Servers.ServerKey.address)
}
inline void System_Ntp_Servers_ServerKey::set_address(const char* value, size_t size) {
  
  address_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_system.System.Ntp.Servers.ServerKey.address)
}
inline ::std::string* System_Ntp_Servers_ServerKey::mutable_address() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.Servers.ServerKey.address)
  return address_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* System_Ntp_Servers_ServerKey::release_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.Servers.ServerKey.address)
  
  return address_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void System_Ntp_Servers_ServerKey::set_allocated_address(::std::string* address) {
  if (address != NULL) {
    
  } else {
    
  }
  address_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), address);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.Servers.ServerKey.address)
}

// .openconfig.openconfig_system.System.Ntp.Servers.Server server = 2;
inline bool System_Ntp_Servers_ServerKey::has_server() const {
  return this != internal_default_instance() && server_ != NULL;
}
inline void System_Ntp_Servers_ServerKey::clear_server() {
  if (GetArenaNoVirtual() == NULL && server_ != NULL) {
    delete server_;
  }
  server_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Ntp_Servers_Server& System_Ntp_Servers_ServerKey::server() const {
  const ::openconfig::openconfig_system::System_Ntp_Servers_Server* p = server_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.Servers.ServerKey.server)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Ntp_Servers_Server*>(
      &::openconfig::openconfig_system::_System_Ntp_Servers_Server_default_instance_);
}
inline ::openconfig::openconfig_system::System_Ntp_Servers_Server* System_Ntp_Servers_ServerKey::release_server() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.Servers.ServerKey.server)
  
  ::openconfig::openconfig_system::System_Ntp_Servers_Server* temp = server_;
  server_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Ntp_Servers_Server* System_Ntp_Servers_ServerKey::mutable_server() {
  
  if (server_ == NULL) {
    server_ = new ::openconfig::openconfig_system::System_Ntp_Servers_Server;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.Servers.ServerKey.server)
  return server_;
}
inline void System_Ntp_Servers_ServerKey::set_allocated_server(::openconfig::openconfig_system::System_Ntp_Servers_Server* server) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete server_;
  }
  if (server) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      server = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, server, submessage_arena);
    }
    
  } else {
    
  }
  server_ = server;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.Servers.ServerKey.server)
}

// -------------------------------------------------------------------

// System_Ntp_Servers

// repeated .openconfig.openconfig_system.System.Ntp.Servers.ServerKey server = 453498492 [(.yext.schemapath) = "/system/ntp/servers/server"];
inline int System_Ntp_Servers::server_size() const {
  return server_.size();
}
inline void System_Ntp_Servers::clear_server() {
  server_.Clear();
}
inline const ::openconfig::openconfig_system::System_Ntp_Servers_ServerKey& System_Ntp_Servers::server(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.Servers.server)
  return server_.Get(index);
}
inline ::openconfig::openconfig_system::System_Ntp_Servers_ServerKey* System_Ntp_Servers::mutable_server(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.Servers.server)
  return server_.Mutable(index);
}
inline ::openconfig::openconfig_system::System_Ntp_Servers_ServerKey* System_Ntp_Servers::add_server() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Ntp.Servers.server)
  return server_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Ntp_Servers_ServerKey >*
System_Ntp_Servers::mutable_server() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Ntp.Servers.server)
  return &server_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Ntp_Servers_ServerKey >&
System_Ntp_Servers::server() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Ntp.Servers.server)
  return server_;
}

// -------------------------------------------------------------------

// System_Ntp_State

// .ywrapper.UintValue auth_mismatch = 264062383 [(.yext.schemapath) = "/system/ntp/state/auth-mismatch"];
inline bool System_Ntp_State::has_auth_mismatch() const {
  return this != internal_default_instance() && auth_mismatch_ != NULL;
}
inline const ::ywrapper::UintValue& System_Ntp_State::auth_mismatch() const {
  const ::ywrapper::UintValue* p = auth_mismatch_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.State.auth_mismatch)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Ntp_State::release_auth_mismatch() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.State.auth_mismatch)
  
  ::ywrapper::UintValue* temp = auth_mismatch_;
  auth_mismatch_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Ntp_State::mutable_auth_mismatch() {
  
  if (auth_mismatch_ == NULL) {
    auth_mismatch_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.State.auth_mismatch)
  return auth_mismatch_;
}
inline void System_Ntp_State::set_allocated_auth_mismatch(::ywrapper::UintValue* auth_mismatch) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(auth_mismatch_);
  }
  if (auth_mismatch) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      auth_mismatch = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, auth_mismatch, submessage_arena);
    }
    
  } else {
    
  }
  auth_mismatch_ = auth_mismatch;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.State.auth_mismatch)
}

// .ywrapper.BoolValue enable_ntp_auth = 181726607 [(.yext.schemapath) = "/system/ntp/state/enable-ntp-auth"];
inline bool System_Ntp_State::has_enable_ntp_auth() const {
  return this != internal_default_instance() && enable_ntp_auth_ != NULL;
}
inline const ::ywrapper::BoolValue& System_Ntp_State::enable_ntp_auth() const {
  const ::ywrapper::BoolValue* p = enable_ntp_auth_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.State.enable_ntp_auth)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* System_Ntp_State::release_enable_ntp_auth() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.State.enable_ntp_auth)
  
  ::ywrapper::BoolValue* temp = enable_ntp_auth_;
  enable_ntp_auth_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* System_Ntp_State::mutable_enable_ntp_auth() {
  
  if (enable_ntp_auth_ == NULL) {
    enable_ntp_auth_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.State.enable_ntp_auth)
  return enable_ntp_auth_;
}
inline void System_Ntp_State::set_allocated_enable_ntp_auth(::ywrapper::BoolValue* enable_ntp_auth) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enable_ntp_auth_);
  }
  if (enable_ntp_auth) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enable_ntp_auth = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enable_ntp_auth, submessage_arena);
    }
    
  } else {
    
  }
  enable_ntp_auth_ = enable_ntp_auth;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.State.enable_ntp_auth)
}

// .ywrapper.BoolValue enabled = 149560907 [(.yext.schemapath) = "/system/ntp/state/enabled"];
inline bool System_Ntp_State::has_enabled() const {
  return this != internal_default_instance() && enabled_ != NULL;
}
inline const ::ywrapper::BoolValue& System_Ntp_State::enabled() const {
  const ::ywrapper::BoolValue* p = enabled_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.State.enabled)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* System_Ntp_State::release_enabled() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.State.enabled)
  
  ::ywrapper::BoolValue* temp = enabled_;
  enabled_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* System_Ntp_State::mutable_enabled() {
  
  if (enabled_ == NULL) {
    enabled_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.State.enabled)
  return enabled_;
}
inline void System_Ntp_State::set_allocated_enabled(::ywrapper::BoolValue* enabled) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enabled_);
  }
  if (enabled) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enabled = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enabled, submessage_arena);
    }
    
  } else {
    
  }
  enabled_ = enabled;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.State.enabled)
}

// .ywrapper.StringValue ntp_source_address = 137356691 [(.yext.schemapath) = "/system/ntp/state/ntp-source-address"];
inline bool System_Ntp_State::has_ntp_source_address() const {
  return this != internal_default_instance() && ntp_source_address_ != NULL;
}
inline const ::ywrapper::StringValue& System_Ntp_State::ntp_source_address() const {
  const ::ywrapper::StringValue* p = ntp_source_address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.State.ntp_source_address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Ntp_State::release_ntp_source_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.State.ntp_source_address)
  
  ::ywrapper::StringValue* temp = ntp_source_address_;
  ntp_source_address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Ntp_State::mutable_ntp_source_address() {
  
  if (ntp_source_address_ == NULL) {
    ntp_source_address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.State.ntp_source_address)
  return ntp_source_address_;
}
inline void System_Ntp_State::set_allocated_ntp_source_address(::ywrapper::StringValue* ntp_source_address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(ntp_source_address_);
  }
  if (ntp_source_address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ntp_source_address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ntp_source_address, submessage_arena);
    }
    
  } else {
    
  }
  ntp_source_address_ = ntp_source_address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.State.ntp_source_address)
}

// -------------------------------------------------------------------

// System_Ntp

// .openconfig.openconfig_system.System.Ntp.Config config = 113415980 [(.yext.schemapath) = "/system/ntp/config"];
inline bool System_Ntp::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Ntp::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Ntp_Config& System_Ntp::config() const {
  const ::openconfig::openconfig_system::System_Ntp_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Ntp_Config*>(
      &::openconfig::openconfig_system::_System_Ntp_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Ntp_Config* System_Ntp::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.config)
  
  ::openconfig::openconfig_system::System_Ntp_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Ntp_Config* System_Ntp::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Ntp_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.config)
  return config_;
}
inline void System_Ntp::set_allocated_config(::openconfig::openconfig_system::System_Ntp_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.config)
}

// .openconfig.openconfig_system.System.Ntp.NtpKeys ntp_keys = 130147733 [(.yext.schemapath) = "/system/ntp/ntp-keys"];
inline bool System_Ntp::has_ntp_keys() const {
  return this != internal_default_instance() && ntp_keys_ != NULL;
}
inline void System_Ntp::clear_ntp_keys() {
  if (GetArenaNoVirtual() == NULL && ntp_keys_ != NULL) {
    delete ntp_keys_;
  }
  ntp_keys_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Ntp_NtpKeys& System_Ntp::ntp_keys() const {
  const ::openconfig::openconfig_system::System_Ntp_NtpKeys* p = ntp_keys_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.ntp_keys)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Ntp_NtpKeys*>(
      &::openconfig::openconfig_system::_System_Ntp_NtpKeys_default_instance_);
}
inline ::openconfig::openconfig_system::System_Ntp_NtpKeys* System_Ntp::release_ntp_keys() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.ntp_keys)
  
  ::openconfig::openconfig_system::System_Ntp_NtpKeys* temp = ntp_keys_;
  ntp_keys_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Ntp_NtpKeys* System_Ntp::mutable_ntp_keys() {
  
  if (ntp_keys_ == NULL) {
    ntp_keys_ = new ::openconfig::openconfig_system::System_Ntp_NtpKeys;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.ntp_keys)
  return ntp_keys_;
}
inline void System_Ntp::set_allocated_ntp_keys(::openconfig::openconfig_system::System_Ntp_NtpKeys* ntp_keys) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ntp_keys_;
  }
  if (ntp_keys) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ntp_keys = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ntp_keys, submessage_arena);
    }
    
  } else {
    
  }
  ntp_keys_ = ntp_keys;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.ntp_keys)
}

// .openconfig.openconfig_system.System.Ntp.Servers servers = 37051726 [(.yext.schemapath) = "/system/ntp/servers"];
inline bool System_Ntp::has_servers() const {
  return this != internal_default_instance() && servers_ != NULL;
}
inline void System_Ntp::clear_servers() {
  if (GetArenaNoVirtual() == NULL && servers_ != NULL) {
    delete servers_;
  }
  servers_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Ntp_Servers& System_Ntp::servers() const {
  const ::openconfig::openconfig_system::System_Ntp_Servers* p = servers_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.servers)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Ntp_Servers*>(
      &::openconfig::openconfig_system::_System_Ntp_Servers_default_instance_);
}
inline ::openconfig::openconfig_system::System_Ntp_Servers* System_Ntp::release_servers() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.servers)
  
  ::openconfig::openconfig_system::System_Ntp_Servers* temp = servers_;
  servers_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Ntp_Servers* System_Ntp::mutable_servers() {
  
  if (servers_ == NULL) {
    servers_ = new ::openconfig::openconfig_system::System_Ntp_Servers;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.servers)
  return servers_;
}
inline void System_Ntp::set_allocated_servers(::openconfig::openconfig_system::System_Ntp_Servers* servers) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete servers_;
  }
  if (servers) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      servers = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, servers, submessage_arena);
    }
    
  } else {
    
  }
  servers_ = servers;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.servers)
}

// .openconfig.openconfig_system.System.Ntp.State state = 402702117 [(.yext.schemapath) = "/system/ntp/state"];
inline bool System_Ntp::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Ntp::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Ntp_State& System_Ntp::state() const {
  const ::openconfig::openconfig_system::System_Ntp_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Ntp.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Ntp_State*>(
      &::openconfig::openconfig_system::_System_Ntp_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Ntp_State* System_Ntp::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Ntp.state)
  
  ::openconfig::openconfig_system::System_Ntp_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Ntp_State* System_Ntp::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Ntp_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Ntp.state)
  return state_;
}
inline void System_Ntp::set_allocated_state(::openconfig::openconfig_system::System_Ntp_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Ntp.state)
}

// -------------------------------------------------------------------

// System_Openflow_Agent_Config

// .ywrapper.UintValue backoff_interval = 169425115 [(.yext.schemapath) = "/system/openflow/agent/config/backoff-interval"];
inline bool System_Openflow_Agent_Config::has_backoff_interval() const {
  return this != internal_default_instance() && backoff_interval_ != NULL;
}
inline const ::ywrapper::UintValue& System_Openflow_Agent_Config::backoff_interval() const {
  const ::ywrapper::UintValue* p = backoff_interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Agent.Config.backoff_interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Openflow_Agent_Config::release_backoff_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Agent.Config.backoff_interval)
  
  ::ywrapper::UintValue* temp = backoff_interval_;
  backoff_interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Openflow_Agent_Config::mutable_backoff_interval() {
  
  if (backoff_interval_ == NULL) {
    backoff_interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Agent.Config.backoff_interval)
  return backoff_interval_;
}
inline void System_Openflow_Agent_Config::set_allocated_backoff_interval(::ywrapper::UintValue* backoff_interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(backoff_interval_);
  }
  if (backoff_interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      backoff_interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, backoff_interval, submessage_arena);
    }
    
  } else {
    
  }
  backoff_interval_ = backoff_interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Agent.Config.backoff_interval)
}

// .ywrapper.StringValue datapath_id = 372529014 [(.yext.schemapath) = "/system/openflow/agent/config/datapath-id"];
inline bool System_Openflow_Agent_Config::has_datapath_id() const {
  return this != internal_default_instance() && datapath_id_ != NULL;
}
inline const ::ywrapper::StringValue& System_Openflow_Agent_Config::datapath_id() const {
  const ::ywrapper::StringValue* p = datapath_id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Agent.Config.datapath_id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Openflow_Agent_Config::release_datapath_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Agent.Config.datapath_id)
  
  ::ywrapper::StringValue* temp = datapath_id_;
  datapath_id_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Openflow_Agent_Config::mutable_datapath_id() {
  
  if (datapath_id_ == NULL) {
    datapath_id_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Agent.Config.datapath_id)
  return datapath_id_;
}
inline void System_Openflow_Agent_Config::set_allocated_datapath_id(::ywrapper::StringValue* datapath_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(datapath_id_);
  }
  if (datapath_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      datapath_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, datapath_id, submessage_arena);
    }
    
  } else {
    
  }
  datapath_id_ = datapath_id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Agent.Config.datapath_id)
}

// .openconfig.enums.OpenconfigOpenflowFailureMode failure_mode = 283440703 [(.yext.schemapath) = "/system/openflow/agent/config/failure-mode"];
inline void System_Openflow_Agent_Config::clear_failure_mode() {
  failure_mode_ = 0;
}
inline ::openconfig::enums::OpenconfigOpenflowFailureMode System_Openflow_Agent_Config::failure_mode() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Agent.Config.failure_mode)
  return static_cast< ::openconfig::enums::OpenconfigOpenflowFailureMode >(failure_mode_);
}
inline void System_Openflow_Agent_Config::set_failure_mode(::openconfig::enums::OpenconfigOpenflowFailureMode value) {
  
  failure_mode_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Openflow.Agent.Config.failure_mode)
}

// .ywrapper.UintValue inactivity_probe = 343613026 [(.yext.schemapath) = "/system/openflow/agent/config/inactivity-probe"];
inline bool System_Openflow_Agent_Config::has_inactivity_probe() const {
  return this != internal_default_instance() && inactivity_probe_ != NULL;
}
inline const ::ywrapper::UintValue& System_Openflow_Agent_Config::inactivity_probe() const {
  const ::ywrapper::UintValue* p = inactivity_probe_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Agent.Config.inactivity_probe)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Openflow_Agent_Config::release_inactivity_probe() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Agent.Config.inactivity_probe)
  
  ::ywrapper::UintValue* temp = inactivity_probe_;
  inactivity_probe_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Openflow_Agent_Config::mutable_inactivity_probe() {
  
  if (inactivity_probe_ == NULL) {
    inactivity_probe_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Agent.Config.inactivity_probe)
  return inactivity_probe_;
}
inline void System_Openflow_Agent_Config::set_allocated_inactivity_probe(::ywrapper::UintValue* inactivity_probe) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(inactivity_probe_);
  }
  if (inactivity_probe) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      inactivity_probe = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, inactivity_probe, submessage_arena);
    }
    
  } else {
    
  }
  inactivity_probe_ = inactivity_probe;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Agent.Config.inactivity_probe)
}

// .ywrapper.UintValue max_backoff = 360108366 [(.yext.schemapath) = "/system/openflow/agent/config/max-backoff"];
inline bool System_Openflow_Agent_Config::has_max_backoff() const {
  return this != internal_default_instance() && max_backoff_ != NULL;
}
inline const ::ywrapper::UintValue& System_Openflow_Agent_Config::max_backoff() const {
  const ::ywrapper::UintValue* p = max_backoff_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Agent.Config.max_backoff)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Openflow_Agent_Config::release_max_backoff() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Agent.Config.max_backoff)
  
  ::ywrapper::UintValue* temp = max_backoff_;
  max_backoff_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Openflow_Agent_Config::mutable_max_backoff() {
  
  if (max_backoff_ == NULL) {
    max_backoff_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Agent.Config.max_backoff)
  return max_backoff_;
}
inline void System_Openflow_Agent_Config::set_allocated_max_backoff(::ywrapper::UintValue* max_backoff) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_backoff_);
  }
  if (max_backoff) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max_backoff = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max_backoff, submessage_arena);
    }
    
  } else {
    
  }
  max_backoff_ = max_backoff;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Agent.Config.max_backoff)
}

// -------------------------------------------------------------------

// System_Openflow_Agent_State

// .ywrapper.UintValue backoff_interval = 534092116 [(.yext.schemapath) = "/system/openflow/agent/state/backoff-interval"];
inline bool System_Openflow_Agent_State::has_backoff_interval() const {
  return this != internal_default_instance() && backoff_interval_ != NULL;
}
inline const ::ywrapper::UintValue& System_Openflow_Agent_State::backoff_interval() const {
  const ::ywrapper::UintValue* p = backoff_interval_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Agent.State.backoff_interval)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Openflow_Agent_State::release_backoff_interval() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Agent.State.backoff_interval)
  
  ::ywrapper::UintValue* temp = backoff_interval_;
  backoff_interval_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Openflow_Agent_State::mutable_backoff_interval() {
  
  if (backoff_interval_ == NULL) {
    backoff_interval_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Agent.State.backoff_interval)
  return backoff_interval_;
}
inline void System_Openflow_Agent_State::set_allocated_backoff_interval(::ywrapper::UintValue* backoff_interval) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(backoff_interval_);
  }
  if (backoff_interval) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      backoff_interval = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, backoff_interval, submessage_arena);
    }
    
  } else {
    
  }
  backoff_interval_ = backoff_interval;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Agent.State.backoff_interval)
}

// .ywrapper.StringValue datapath_id = 170087235 [(.yext.schemapath) = "/system/openflow/agent/state/datapath-id"];
inline bool System_Openflow_Agent_State::has_datapath_id() const {
  return this != internal_default_instance() && datapath_id_ != NULL;
}
inline const ::ywrapper::StringValue& System_Openflow_Agent_State::datapath_id() const {
  const ::ywrapper::StringValue* p = datapath_id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Agent.State.datapath_id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Openflow_Agent_State::release_datapath_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Agent.State.datapath_id)
  
  ::ywrapper::StringValue* temp = datapath_id_;
  datapath_id_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Openflow_Agent_State::mutable_datapath_id() {
  
  if (datapath_id_ == NULL) {
    datapath_id_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Agent.State.datapath_id)
  return datapath_id_;
}
inline void System_Openflow_Agent_State::set_allocated_datapath_id(::ywrapper::StringValue* datapath_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(datapath_id_);
  }
  if (datapath_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      datapath_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, datapath_id, submessage_arena);
    }
    
  } else {
    
  }
  datapath_id_ = datapath_id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Agent.State.datapath_id)
}

// .openconfig.enums.OpenconfigOpenflowFailureMode failure_mode = 170198352 [(.yext.schemapath) = "/system/openflow/agent/state/failure-mode"];
inline void System_Openflow_Agent_State::clear_failure_mode() {
  failure_mode_ = 0;
}
inline ::openconfig::enums::OpenconfigOpenflowFailureMode System_Openflow_Agent_State::failure_mode() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Agent.State.failure_mode)
  return static_cast< ::openconfig::enums::OpenconfigOpenflowFailureMode >(failure_mode_);
}
inline void System_Openflow_Agent_State::set_failure_mode(::openconfig::enums::OpenconfigOpenflowFailureMode value) {
  
  failure_mode_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Openflow.Agent.State.failure_mode)
}

// .ywrapper.UintValue inactivity_probe = 72940597 [(.yext.schemapath) = "/system/openflow/agent/state/inactivity-probe"];
inline bool System_Openflow_Agent_State::has_inactivity_probe() const {
  return this != internal_default_instance() && inactivity_probe_ != NULL;
}
inline const ::ywrapper::UintValue& System_Openflow_Agent_State::inactivity_probe() const {
  const ::ywrapper::UintValue* p = inactivity_probe_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Agent.State.inactivity_probe)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Openflow_Agent_State::release_inactivity_probe() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Agent.State.inactivity_probe)
  
  ::ywrapper::UintValue* temp = inactivity_probe_;
  inactivity_probe_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Openflow_Agent_State::mutable_inactivity_probe() {
  
  if (inactivity_probe_ == NULL) {
    inactivity_probe_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Agent.State.inactivity_probe)
  return inactivity_probe_;
}
inline void System_Openflow_Agent_State::set_allocated_inactivity_probe(::ywrapper::UintValue* inactivity_probe) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(inactivity_probe_);
  }
  if (inactivity_probe) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      inactivity_probe = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, inactivity_probe, submessage_arena);
    }
    
  } else {
    
  }
  inactivity_probe_ = inactivity_probe;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Agent.State.inactivity_probe)
}

// .ywrapper.UintValue max_backoff = 75622835 [(.yext.schemapath) = "/system/openflow/agent/state/max-backoff"];
inline bool System_Openflow_Agent_State::has_max_backoff() const {
  return this != internal_default_instance() && max_backoff_ != NULL;
}
inline const ::ywrapper::UintValue& System_Openflow_Agent_State::max_backoff() const {
  const ::ywrapper::UintValue* p = max_backoff_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Agent.State.max_backoff)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Openflow_Agent_State::release_max_backoff() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Agent.State.max_backoff)
  
  ::ywrapper::UintValue* temp = max_backoff_;
  max_backoff_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Openflow_Agent_State::mutable_max_backoff() {
  
  if (max_backoff_ == NULL) {
    max_backoff_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Agent.State.max_backoff)
  return max_backoff_;
}
inline void System_Openflow_Agent_State::set_allocated_max_backoff(::ywrapper::UintValue* max_backoff) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(max_backoff_);
  }
  if (max_backoff) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      max_backoff = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, max_backoff, submessage_arena);
    }
    
  } else {
    
  }
  max_backoff_ = max_backoff;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Agent.State.max_backoff)
}

// -------------------------------------------------------------------

// System_Openflow_Agent

// .openconfig.openconfig_system.System.Openflow.Agent.Config config = 423271126 [(.yext.schemapath) = "/system/openflow/agent/config"];
inline bool System_Openflow_Agent::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Openflow_Agent::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Openflow_Agent_Config& System_Openflow_Agent::config() const {
  const ::openconfig::openconfig_system::System_Openflow_Agent_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Agent.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Openflow_Agent_Config*>(
      &::openconfig::openconfig_system::_System_Openflow_Agent_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Openflow_Agent_Config* System_Openflow_Agent::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Agent.config)
  
  ::openconfig::openconfig_system::System_Openflow_Agent_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Openflow_Agent_Config* System_Openflow_Agent::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Openflow_Agent_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Agent.config)
  return config_;
}
inline void System_Openflow_Agent::set_allocated_config(::openconfig::openconfig_system::System_Openflow_Agent_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Agent.config)
}

// .openconfig.openconfig_system.System.Openflow.Agent.State state = 421393027 [(.yext.schemapath) = "/system/openflow/agent/state"];
inline bool System_Openflow_Agent::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Openflow_Agent::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Openflow_Agent_State& System_Openflow_Agent::state() const {
  const ::openconfig::openconfig_system::System_Openflow_Agent_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Agent.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Openflow_Agent_State*>(
      &::openconfig::openconfig_system::_System_Openflow_Agent_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Openflow_Agent_State* System_Openflow_Agent::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Agent.state)
  
  ::openconfig::openconfig_system::System_Openflow_Agent_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Openflow_Agent_State* System_Openflow_Agent::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Openflow_Agent_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Agent.state)
  return state_;
}
inline void System_Openflow_Agent::set_allocated_state(::openconfig::openconfig_system::System_Openflow_Agent_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Agent.state)
}

// -------------------------------------------------------------------

// System_Openflow_Controllers_Controller_Config

// .ywrapper.StringValue name = 68148217 [(.yext.schemapath) = "/system/openflow/controllers/controller/config/name"];
inline bool System_Openflow_Controllers_Controller_Config::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& System_Openflow_Controllers_Controller_Config::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Config.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Openflow_Controllers_Controller_Config::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Config.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Openflow_Controllers_Controller_Config::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Config.name)
  return name_;
}
inline void System_Openflow_Controllers_Controller_Config::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Config.name)
}

// -------------------------------------------------------------------

// System_Openflow_Controllers_Controller_Connections_Connection_Config

// .ywrapper.StringValue address = 308926615 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/config/address"];
inline bool System_Openflow_Controllers_Controller_Connections_Connection_Config::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline const ::ywrapper::StringValue& System_Openflow_Controllers_Controller_Connections_Connection_Config::address() const {
  const ::ywrapper::StringValue* p = address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config.address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Openflow_Controllers_Controller_Connections_Connection_Config::release_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config.address)
  
  ::ywrapper::StringValue* temp = address_;
  address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Openflow_Controllers_Controller_Connections_Connection_Config::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config.address)
  return address_;
}
inline void System_Openflow_Controllers_Controller_Connections_Connection_Config::set_allocated_address(::ywrapper::StringValue* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(address_);
  }
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config.address)
}

// .ywrapper.UintValue aux_id = 120533297 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/config/aux-id"];
inline bool System_Openflow_Controllers_Controller_Connections_Connection_Config::has_aux_id() const {
  return this != internal_default_instance() && aux_id_ != NULL;
}
inline const ::ywrapper::UintValue& System_Openflow_Controllers_Controller_Connections_Connection_Config::aux_id() const {
  const ::ywrapper::UintValue* p = aux_id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config.aux_id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Openflow_Controllers_Controller_Connections_Connection_Config::release_aux_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config.aux_id)
  
  ::ywrapper::UintValue* temp = aux_id_;
  aux_id_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Openflow_Controllers_Controller_Connections_Connection_Config::mutable_aux_id() {
  
  if (aux_id_ == NULL) {
    aux_id_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config.aux_id)
  return aux_id_;
}
inline void System_Openflow_Controllers_Controller_Connections_Connection_Config::set_allocated_aux_id(::ywrapper::UintValue* aux_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(aux_id_);
  }
  if (aux_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      aux_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, aux_id, submessage_arena);
    }
    
  } else {
    
  }
  aux_id_ = aux_id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config.aux_id)
}

// .ywrapper.StringValue certificate_id = 405084556 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/config/certificate-id"];
inline bool System_Openflow_Controllers_Controller_Connections_Connection_Config::has_certificate_id() const {
  return this != internal_default_instance() && certificate_id_ != NULL;
}
inline const ::ywrapper::StringValue& System_Openflow_Controllers_Controller_Connections_Connection_Config::certificate_id() const {
  const ::ywrapper::StringValue* p = certificate_id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config.certificate_id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Openflow_Controllers_Controller_Connections_Connection_Config::release_certificate_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config.certificate_id)
  
  ::ywrapper::StringValue* temp = certificate_id_;
  certificate_id_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Openflow_Controllers_Controller_Connections_Connection_Config::mutable_certificate_id() {
  
  if (certificate_id_ == NULL) {
    certificate_id_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config.certificate_id)
  return certificate_id_;
}
inline void System_Openflow_Controllers_Controller_Connections_Connection_Config::set_allocated_certificate_id(::ywrapper::StringValue* certificate_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(certificate_id_);
  }
  if (certificate_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      certificate_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, certificate_id, submessage_arena);
    }
    
  } else {
    
  }
  certificate_id_ = certificate_id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config.certificate_id)
}

// .ywrapper.UintValue port = 391902688 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/config/port"];
inline bool System_Openflow_Controllers_Controller_Connections_Connection_Config::has_port() const {
  return this != internal_default_instance() && port_ != NULL;
}
inline const ::ywrapper::UintValue& System_Openflow_Controllers_Controller_Connections_Connection_Config::port() const {
  const ::ywrapper::UintValue* p = port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config.port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Openflow_Controllers_Controller_Connections_Connection_Config::release_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config.port)
  
  ::ywrapper::UintValue* temp = port_;
  port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Openflow_Controllers_Controller_Connections_Connection_Config::mutable_port() {
  
  if (port_ == NULL) {
    port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config.port)
  return port_;
}
inline void System_Openflow_Controllers_Controller_Connections_Connection_Config::set_allocated_port(::ywrapper::UintValue* port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(port_);
  }
  if (port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, port, submessage_arena);
    }
    
  } else {
    
  }
  port_ = port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config.port)
}

// .ywrapper.UintValue priority = 291559989 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/config/priority"];
inline bool System_Openflow_Controllers_Controller_Connections_Connection_Config::has_priority() const {
  return this != internal_default_instance() && priority_ != NULL;
}
inline const ::ywrapper::UintValue& System_Openflow_Controllers_Controller_Connections_Connection_Config::priority() const {
  const ::ywrapper::UintValue* p = priority_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config.priority)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Openflow_Controllers_Controller_Connections_Connection_Config::release_priority() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config.priority)
  
  ::ywrapper::UintValue* temp = priority_;
  priority_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Openflow_Controllers_Controller_Connections_Connection_Config::mutable_priority() {
  
  if (priority_ == NULL) {
    priority_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config.priority)
  return priority_;
}
inline void System_Openflow_Controllers_Controller_Connections_Connection_Config::set_allocated_priority(::ywrapper::UintValue* priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(priority_);
  }
  if (priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, priority, submessage_arena);
    }
    
  } else {
    
  }
  priority_ = priority;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config.priority)
}

// .ywrapper.StringValue source_interface = 275006968 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/config/source-interface"];
inline bool System_Openflow_Controllers_Controller_Connections_Connection_Config::has_source_interface() const {
  return this != internal_default_instance() && source_interface_ != NULL;
}
inline const ::ywrapper::StringValue& System_Openflow_Controllers_Controller_Connections_Connection_Config::source_interface() const {
  const ::ywrapper::StringValue* p = source_interface_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config.source_interface)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Openflow_Controllers_Controller_Connections_Connection_Config::release_source_interface() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config.source_interface)
  
  ::ywrapper::StringValue* temp = source_interface_;
  source_interface_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Openflow_Controllers_Controller_Connections_Connection_Config::mutable_source_interface() {
  
  if (source_interface_ == NULL) {
    source_interface_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config.source_interface)
  return source_interface_;
}
inline void System_Openflow_Controllers_Controller_Connections_Connection_Config::set_allocated_source_interface(::ywrapper::StringValue* source_interface) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(source_interface_);
  }
  if (source_interface) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      source_interface = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source_interface, submessage_arena);
    }
    
  } else {
    
  }
  source_interface_ = source_interface;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config.source_interface)
}

// .openconfig.enums.OpenconfigOpenflowTransport transport = 438606924 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/config/transport"];
inline void System_Openflow_Controllers_Controller_Connections_Connection_Config::clear_transport() {
  transport_ = 0;
}
inline ::openconfig::enums::OpenconfigOpenflowTransport System_Openflow_Controllers_Controller_Connections_Connection_Config::transport() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config.transport)
  return static_cast< ::openconfig::enums::OpenconfigOpenflowTransport >(transport_);
}
inline void System_Openflow_Controllers_Controller_Connections_Connection_Config::set_transport(::openconfig::enums::OpenconfigOpenflowTransport value) {
  
  transport_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config.transport)
}

// -------------------------------------------------------------------

// System_Openflow_Controllers_Controller_Connections_Connection_State

// .ywrapper.StringValue address = 342213662 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/state/address"];
inline bool System_Openflow_Controllers_Controller_Connections_Connection_State::has_address() const {
  return this != internal_default_instance() && address_ != NULL;
}
inline const ::ywrapper::StringValue& System_Openflow_Controllers_Controller_Connections_Connection_State::address() const {
  const ::ywrapper::StringValue* p = address_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.address)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Openflow_Controllers_Controller_Connections_Connection_State::release_address() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.address)
  
  ::ywrapper::StringValue* temp = address_;
  address_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Openflow_Controllers_Controller_Connections_Connection_State::mutable_address() {
  
  if (address_ == NULL) {
    address_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.address)
  return address_;
}
inline void System_Openflow_Controllers_Controller_Connections_Connection_State::set_allocated_address(::ywrapper::StringValue* address) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(address_);
  }
  if (address) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      address = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, address, submessage_arena);
    }
    
  } else {
    
  }
  address_ = address;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.address)
}

// .ywrapper.UintValue aux_id = 120157314 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/state/aux-id"];
inline bool System_Openflow_Controllers_Controller_Connections_Connection_State::has_aux_id() const {
  return this != internal_default_instance() && aux_id_ != NULL;
}
inline const ::ywrapper::UintValue& System_Openflow_Controllers_Controller_Connections_Connection_State::aux_id() const {
  const ::ywrapper::UintValue* p = aux_id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.aux_id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Openflow_Controllers_Controller_Connections_Connection_State::release_aux_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.aux_id)
  
  ::ywrapper::UintValue* temp = aux_id_;
  aux_id_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Openflow_Controllers_Controller_Connections_Connection_State::mutable_aux_id() {
  
  if (aux_id_ == NULL) {
    aux_id_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.aux_id)
  return aux_id_;
}
inline void System_Openflow_Controllers_Controller_Connections_Connection_State::set_allocated_aux_id(::ywrapper::UintValue* aux_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(aux_id_);
  }
  if (aux_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      aux_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, aux_id, submessage_arena);
    }
    
  } else {
    
  }
  aux_id_ = aux_id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.aux_id)
}

// .ywrapper.StringValue certificate_id = 129910687 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/state/certificate-id"];
inline bool System_Openflow_Controllers_Controller_Connections_Connection_State::has_certificate_id() const {
  return this != internal_default_instance() && certificate_id_ != NULL;
}
inline const ::ywrapper::StringValue& System_Openflow_Controllers_Controller_Connections_Connection_State::certificate_id() const {
  const ::ywrapper::StringValue* p = certificate_id_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.certificate_id)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Openflow_Controllers_Controller_Connections_Connection_State::release_certificate_id() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.certificate_id)
  
  ::ywrapper::StringValue* temp = certificate_id_;
  certificate_id_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Openflow_Controllers_Controller_Connections_Connection_State::mutable_certificate_id() {
  
  if (certificate_id_ == NULL) {
    certificate_id_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.certificate_id)
  return certificate_id_;
}
inline void System_Openflow_Controllers_Controller_Connections_Connection_State::set_allocated_certificate_id(::ywrapper::StringValue* certificate_id) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(certificate_id_);
  }
  if (certificate_id) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      certificate_id = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, certificate_id, submessage_arena);
    }
    
  } else {
    
  }
  certificate_id_ = certificate_id;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.certificate_id)
}

// .ywrapper.BoolValue connected = 195931019 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/state/connected"];
inline bool System_Openflow_Controllers_Controller_Connections_Connection_State::has_connected() const {
  return this != internal_default_instance() && connected_ != NULL;
}
inline const ::ywrapper::BoolValue& System_Openflow_Controllers_Controller_Connections_Connection_State::connected() const {
  const ::ywrapper::BoolValue* p = connected_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.connected)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* System_Openflow_Controllers_Controller_Connections_Connection_State::release_connected() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.connected)
  
  ::ywrapper::BoolValue* temp = connected_;
  connected_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* System_Openflow_Controllers_Controller_Connections_Connection_State::mutable_connected() {
  
  if (connected_ == NULL) {
    connected_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.connected)
  return connected_;
}
inline void System_Openflow_Controllers_Controller_Connections_Connection_State::set_allocated_connected(::ywrapper::BoolValue* connected) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(connected_);
  }
  if (connected) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      connected = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, connected, submessage_arena);
    }
    
  } else {
    
  }
  connected_ = connected;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.connected)
}

// .ywrapper.UintValue port = 277237519 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/state/port"];
inline bool System_Openflow_Controllers_Controller_Connections_Connection_State::has_port() const {
  return this != internal_default_instance() && port_ != NULL;
}
inline const ::ywrapper::UintValue& System_Openflow_Controllers_Controller_Connections_Connection_State::port() const {
  const ::ywrapper::UintValue* p = port_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.port)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Openflow_Controllers_Controller_Connections_Connection_State::release_port() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.port)
  
  ::ywrapper::UintValue* temp = port_;
  port_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Openflow_Controllers_Controller_Connections_Connection_State::mutable_port() {
  
  if (port_ == NULL) {
    port_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.port)
  return port_;
}
inline void System_Openflow_Controllers_Controller_Connections_Connection_State::set_allocated_port(::ywrapper::UintValue* port) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(port_);
  }
  if (port) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      port = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, port, submessage_arena);
    }
    
  } else {
    
  }
  port_ = port;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.port)
}

// .ywrapper.UintValue priority = 413676866 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/state/priority"];
inline bool System_Openflow_Controllers_Controller_Connections_Connection_State::has_priority() const {
  return this != internal_default_instance() && priority_ != NULL;
}
inline const ::ywrapper::UintValue& System_Openflow_Controllers_Controller_Connections_Connection_State::priority() const {
  const ::ywrapper::UintValue* p = priority_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.priority)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Openflow_Controllers_Controller_Connections_Connection_State::release_priority() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.priority)
  
  ::ywrapper::UintValue* temp = priority_;
  priority_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Openflow_Controllers_Controller_Connections_Connection_State::mutable_priority() {
  
  if (priority_ == NULL) {
    priority_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.priority)
  return priority_;
}
inline void System_Openflow_Controllers_Controller_Connections_Connection_State::set_allocated_priority(::ywrapper::UintValue* priority) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(priority_);
  }
  if (priority) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      priority = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, priority, submessage_arena);
    }
    
  } else {
    
  }
  priority_ = priority;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.priority)
}

// .ywrapper.StringValue source_interface = 274729247 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/state/source-interface"];
inline bool System_Openflow_Controllers_Controller_Connections_Connection_State::has_source_interface() const {
  return this != internal_default_instance() && source_interface_ != NULL;
}
inline const ::ywrapper::StringValue& System_Openflow_Controllers_Controller_Connections_Connection_State::source_interface() const {
  const ::ywrapper::StringValue* p = source_interface_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.source_interface)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Openflow_Controllers_Controller_Connections_Connection_State::release_source_interface() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.source_interface)
  
  ::ywrapper::StringValue* temp = source_interface_;
  source_interface_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Openflow_Controllers_Controller_Connections_Connection_State::mutable_source_interface() {
  
  if (source_interface_ == NULL) {
    source_interface_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.source_interface)
  return source_interface_;
}
inline void System_Openflow_Controllers_Controller_Connections_Connection_State::set_allocated_source_interface(::ywrapper::StringValue* source_interface) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(source_interface_);
  }
  if (source_interface) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      source_interface = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source_interface, submessage_arena);
    }
    
  } else {
    
  }
  source_interface_ = source_interface;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.source_interface)
}

// .openconfig.enums.OpenconfigOpenflowTransport transport = 377206093 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/state/transport"];
inline void System_Openflow_Controllers_Controller_Connections_Connection_State::clear_transport() {
  transport_ = 0;
}
inline ::openconfig::enums::OpenconfigOpenflowTransport System_Openflow_Controllers_Controller_Connections_Connection_State::transport() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.transport)
  return static_cast< ::openconfig::enums::OpenconfigOpenflowTransport >(transport_);
}
inline void System_Openflow_Controllers_Controller_Connections_Connection_State::set_transport(::openconfig::enums::OpenconfigOpenflowTransport value) {
  
  transport_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State.transport)
}

// -------------------------------------------------------------------

// System_Openflow_Controllers_Controller_Connections_Connection

// .openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.Config config = 317383494 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/config"];
inline bool System_Openflow_Controllers_Controller_Connections_Connection::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Openflow_Controllers_Controller_Connections_Connection::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection_Config& System_Openflow_Controllers_Controller_Connections_Connection::config() const {
  const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection_Config*>(
      &::openconfig::openconfig_system::_System_Openflow_Controllers_Controller_Connections_Connection_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection_Config* System_Openflow_Controllers_Controller_Connections_Connection::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.config)
  
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection_Config* System_Openflow_Controllers_Controller_Connections_Connection::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.config)
  return config_;
}
inline void System_Openflow_Controllers_Controller_Connections_Connection::set_allocated_config(::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.config)
}

// .openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.State state = 440162355 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/state"];
inline bool System_Openflow_Controllers_Controller_Connections_Connection::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Openflow_Controllers_Controller_Connections_Connection::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection_State& System_Openflow_Controllers_Controller_Connections_Connection::state() const {
  const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection_State*>(
      &::openconfig::openconfig_system::_System_Openflow_Controllers_Controller_Connections_Connection_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection_State* System_Openflow_Controllers_Controller_Connections_Connection::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.state)
  
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection_State* System_Openflow_Controllers_Controller_Connections_Connection::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.state)
  return state_;
}
inline void System_Openflow_Controllers_Controller_Connections_Connection::set_allocated_state(::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection.state)
}

// -------------------------------------------------------------------

// System_Openflow_Controllers_Controller_Connections_ConnectionKey

// uint64 aux_id = 1 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection/aux-id"];
inline void System_Openflow_Controllers_Controller_Connections_ConnectionKey::clear_aux_id() {
  aux_id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 System_Openflow_Controllers_Controller_Connections_ConnectionKey::aux_id() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.ConnectionKey.aux_id)
  return aux_id_;
}
inline void System_Openflow_Controllers_Controller_Connections_ConnectionKey::set_aux_id(::google::protobuf::uint64 value) {
  
  aux_id_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.ConnectionKey.aux_id)
}

// .openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.Connection connection = 2;
inline bool System_Openflow_Controllers_Controller_Connections_ConnectionKey::has_connection() const {
  return this != internal_default_instance() && connection_ != NULL;
}
inline void System_Openflow_Controllers_Controller_Connections_ConnectionKey::clear_connection() {
  if (GetArenaNoVirtual() == NULL && connection_ != NULL) {
    delete connection_;
  }
  connection_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection& System_Openflow_Controllers_Controller_Connections_ConnectionKey::connection() const {
  const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection* p = connection_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.ConnectionKey.connection)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection*>(
      &::openconfig::openconfig_system::_System_Openflow_Controllers_Controller_Connections_Connection_default_instance_);
}
inline ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection* System_Openflow_Controllers_Controller_Connections_ConnectionKey::release_connection() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.ConnectionKey.connection)
  
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection* temp = connection_;
  connection_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection* System_Openflow_Controllers_Controller_Connections_ConnectionKey::mutable_connection() {
  
  if (connection_ == NULL) {
    connection_ = new ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.ConnectionKey.connection)
  return connection_;
}
inline void System_Openflow_Controllers_Controller_Connections_ConnectionKey::set_allocated_connection(::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_Connection* connection) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete connection_;
  }
  if (connection) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      connection = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, connection, submessage_arena);
    }
    
  } else {
    
  }
  connection_ = connection;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.ConnectionKey.connection)
}

// -------------------------------------------------------------------

// System_Openflow_Controllers_Controller_Connections

// repeated .openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.ConnectionKey connection = 216691009 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections/connection"];
inline int System_Openflow_Controllers_Controller_Connections::connection_size() const {
  return connection_.size();
}
inline void System_Openflow_Controllers_Controller_Connections::clear_connection() {
  connection_.Clear();
}
inline const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_ConnectionKey& System_Openflow_Controllers_Controller_Connections::connection(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.connection)
  return connection_.Get(index);
}
inline ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_ConnectionKey* System_Openflow_Controllers_Controller_Connections::mutable_connection(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.connection)
  return connection_.Mutable(index);
}
inline ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_ConnectionKey* System_Openflow_Controllers_Controller_Connections::add_connection() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.connection)
  return connection_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_ConnectionKey >*
System_Openflow_Controllers_Controller_Connections::mutable_connection() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.connection)
  return &connection_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections_ConnectionKey >&
System_Openflow_Controllers_Controller_Connections::connection() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections.connection)
  return connection_;
}

// -------------------------------------------------------------------

// System_Openflow_Controllers_Controller_State

// .ywrapper.StringValue name = 412957472 [(.yext.schemapath) = "/system/openflow/controllers/controller/state/name"];
inline bool System_Openflow_Controllers_Controller_State::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& System_Openflow_Controllers_Controller_State::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.Controller.State.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Openflow_Controllers_Controller_State::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Controllers.Controller.State.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Openflow_Controllers_Controller_State::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Controllers.Controller.State.name)
  return name_;
}
inline void System_Openflow_Controllers_Controller_State::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Controllers.Controller.State.name)
}

// -------------------------------------------------------------------

// System_Openflow_Controllers_Controller

// .openconfig.openconfig_system.System.Openflow.Controllers.Controller.Config config = 48549533 [(.yext.schemapath) = "/system/openflow/controllers/controller/config"];
inline bool System_Openflow_Controllers_Controller::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_Openflow_Controllers_Controller::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Config& System_Openflow_Controllers_Controller::config() const {
  const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.Controller.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Config*>(
      &::openconfig::openconfig_system::_System_Openflow_Controllers_Controller_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Config* System_Openflow_Controllers_Controller::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Controllers.Controller.config)
  
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Config* System_Openflow_Controllers_Controller::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Controllers.Controller.config)
  return config_;
}
inline void System_Openflow_Controllers_Controller::set_allocated_config(::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Controllers.Controller.config)
}

// .openconfig.openconfig_system.System.Openflow.Controllers.Controller.Connections connections = 216565066 [(.yext.schemapath) = "/system/openflow/controllers/controller/connections"];
inline bool System_Openflow_Controllers_Controller::has_connections() const {
  return this != internal_default_instance() && connections_ != NULL;
}
inline void System_Openflow_Controllers_Controller::clear_connections() {
  if (GetArenaNoVirtual() == NULL && connections_ != NULL) {
    delete connections_;
  }
  connections_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections& System_Openflow_Controllers_Controller::connections() const {
  const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections* p = connections_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.Controller.connections)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections*>(
      &::openconfig::openconfig_system::_System_Openflow_Controllers_Controller_Connections_default_instance_);
}
inline ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections* System_Openflow_Controllers_Controller::release_connections() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Controllers.Controller.connections)
  
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections* temp = connections_;
  connections_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections* System_Openflow_Controllers_Controller::mutable_connections() {
  
  if (connections_ == NULL) {
    connections_ = new ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Controllers.Controller.connections)
  return connections_;
}
inline void System_Openflow_Controllers_Controller::set_allocated_connections(::openconfig::openconfig_system::System_Openflow_Controllers_Controller_Connections* connections) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete connections_;
  }
  if (connections) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      connections = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, connections, submessage_arena);
    }
    
  } else {
    
  }
  connections_ = connections;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Controllers.Controller.connections)
}

// .openconfig.openconfig_system.System.Openflow.Controllers.Controller.State state = 479997074 [(.yext.schemapath) = "/system/openflow/controllers/controller/state"];
inline bool System_Openflow_Controllers_Controller::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Openflow_Controllers_Controller::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_State& System_Openflow_Controllers_Controller::state() const {
  const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.Controller.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_State*>(
      &::openconfig::openconfig_system::_System_Openflow_Controllers_Controller_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_State* System_Openflow_Controllers_Controller::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Controllers.Controller.state)
  
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_State* System_Openflow_Controllers_Controller::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Openflow_Controllers_Controller_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Controllers.Controller.state)
  return state_;
}
inline void System_Openflow_Controllers_Controller::set_allocated_state(::openconfig::openconfig_system::System_Openflow_Controllers_Controller_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Controllers.Controller.state)
}

// -------------------------------------------------------------------

// System_Openflow_Controllers_ControllerKey

// string name = 1 [(.yext.schemapath) = "/system/openflow/controllers/controller/name"];
inline void System_Openflow_Controllers_ControllerKey::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& System_Openflow_Controllers_ControllerKey::name() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.ControllerKey.name)
  return name_.GetNoArena();
}
inline void System_Openflow_Controllers_ControllerKey::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Openflow.Controllers.ControllerKey.name)
}
#if LANG_CXX11
inline void System_Openflow_Controllers_ControllerKey::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:openconfig.openconfig_system.System.Openflow.Controllers.ControllerKey.name)
}
#endif
inline void System_Openflow_Controllers_ControllerKey::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:openconfig.openconfig_system.System.Openflow.Controllers.ControllerKey.name)
}
inline void System_Openflow_Controllers_ControllerKey::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:openconfig.openconfig_system.System.Openflow.Controllers.ControllerKey.name)
}
inline ::std::string* System_Openflow_Controllers_ControllerKey::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Controllers.ControllerKey.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* System_Openflow_Controllers_ControllerKey::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Controllers.ControllerKey.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void System_Openflow_Controllers_ControllerKey::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Controllers.ControllerKey.name)
}

// .openconfig.openconfig_system.System.Openflow.Controllers.Controller controller = 2;
inline bool System_Openflow_Controllers_ControllerKey::has_controller() const {
  return this != internal_default_instance() && controller_ != NULL;
}
inline void System_Openflow_Controllers_ControllerKey::clear_controller() {
  if (GetArenaNoVirtual() == NULL && controller_ != NULL) {
    delete controller_;
  }
  controller_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller& System_Openflow_Controllers_ControllerKey::controller() const {
  const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller* p = controller_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.ControllerKey.controller)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Openflow_Controllers_Controller*>(
      &::openconfig::openconfig_system::_System_Openflow_Controllers_Controller_default_instance_);
}
inline ::openconfig::openconfig_system::System_Openflow_Controllers_Controller* System_Openflow_Controllers_ControllerKey::release_controller() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.Controllers.ControllerKey.controller)
  
  ::openconfig::openconfig_system::System_Openflow_Controllers_Controller* temp = controller_;
  controller_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Openflow_Controllers_Controller* System_Openflow_Controllers_ControllerKey::mutable_controller() {
  
  if (controller_ == NULL) {
    controller_ = new ::openconfig::openconfig_system::System_Openflow_Controllers_Controller;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Controllers.ControllerKey.controller)
  return controller_;
}
inline void System_Openflow_Controllers_ControllerKey::set_allocated_controller(::openconfig::openconfig_system::System_Openflow_Controllers_Controller* controller) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete controller_;
  }
  if (controller) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      controller = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, controller, submessage_arena);
    }
    
  } else {
    
  }
  controller_ = controller;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.Controllers.ControllerKey.controller)
}

// -------------------------------------------------------------------

// System_Openflow_Controllers

// repeated .openconfig.openconfig_system.System.Openflow.Controllers.ControllerKey controller = 445539224 [(.yext.schemapath) = "/system/openflow/controllers/controller"];
inline int System_Openflow_Controllers::controller_size() const {
  return controller_.size();
}
inline void System_Openflow_Controllers::clear_controller() {
  controller_.Clear();
}
inline const ::openconfig::openconfig_system::System_Openflow_Controllers_ControllerKey& System_Openflow_Controllers::controller(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.Controllers.controller)
  return controller_.Get(index);
}
inline ::openconfig::openconfig_system::System_Openflow_Controllers_ControllerKey* System_Openflow_Controllers::mutable_controller(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.Controllers.controller)
  return controller_.Mutable(index);
}
inline ::openconfig::openconfig_system::System_Openflow_Controllers_ControllerKey* System_Openflow_Controllers::add_controller() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Openflow.Controllers.controller)
  return controller_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Openflow_Controllers_ControllerKey >*
System_Openflow_Controllers::mutable_controller() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Openflow.Controllers.controller)
  return &controller_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Openflow_Controllers_ControllerKey >&
System_Openflow_Controllers::controller() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Openflow.Controllers.controller)
  return controller_;
}

// -------------------------------------------------------------------

// System_Openflow

// .openconfig.openconfig_system.System.Openflow.Agent agent = 35640369 [(.yext.schemapath) = "/system/openflow/agent"];
inline bool System_Openflow::has_agent() const {
  return this != internal_default_instance() && agent_ != NULL;
}
inline void System_Openflow::clear_agent() {
  if (GetArenaNoVirtual() == NULL && agent_ != NULL) {
    delete agent_;
  }
  agent_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Openflow_Agent& System_Openflow::agent() const {
  const ::openconfig::openconfig_system::System_Openflow_Agent* p = agent_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.agent)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Openflow_Agent*>(
      &::openconfig::openconfig_system::_System_Openflow_Agent_default_instance_);
}
inline ::openconfig::openconfig_system::System_Openflow_Agent* System_Openflow::release_agent() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.agent)
  
  ::openconfig::openconfig_system::System_Openflow_Agent* temp = agent_;
  agent_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Openflow_Agent* System_Openflow::mutable_agent() {
  
  if (agent_ == NULL) {
    agent_ = new ::openconfig::openconfig_system::System_Openflow_Agent;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.agent)
  return agent_;
}
inline void System_Openflow::set_allocated_agent(::openconfig::openconfig_system::System_Openflow_Agent* agent) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete agent_;
  }
  if (agent) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      agent = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, agent, submessage_arena);
    }
    
  } else {
    
  }
  agent_ = agent;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.agent)
}

// .openconfig.openconfig_system.System.Openflow.Controllers controllers = 331082837 [(.yext.schemapath) = "/system/openflow/controllers"];
inline bool System_Openflow::has_controllers() const {
  return this != internal_default_instance() && controllers_ != NULL;
}
inline void System_Openflow::clear_controllers() {
  if (GetArenaNoVirtual() == NULL && controllers_ != NULL) {
    delete controllers_;
  }
  controllers_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Openflow_Controllers& System_Openflow::controllers() const {
  const ::openconfig::openconfig_system::System_Openflow_Controllers* p = controllers_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Openflow.controllers)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Openflow_Controllers*>(
      &::openconfig::openconfig_system::_System_Openflow_Controllers_default_instance_);
}
inline ::openconfig::openconfig_system::System_Openflow_Controllers* System_Openflow::release_controllers() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Openflow.controllers)
  
  ::openconfig::openconfig_system::System_Openflow_Controllers* temp = controllers_;
  controllers_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Openflow_Controllers* System_Openflow::mutable_controllers() {
  
  if (controllers_ == NULL) {
    controllers_ = new ::openconfig::openconfig_system::System_Openflow_Controllers;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Openflow.controllers)
  return controllers_;
}
inline void System_Openflow::set_allocated_controllers(::openconfig::openconfig_system::System_Openflow_Controllers* controllers) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete controllers_;
  }
  if (controllers) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      controllers = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, controllers, submessage_arena);
    }
    
  } else {
    
  }
  controllers_ = controllers;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Openflow.controllers)
}

// -------------------------------------------------------------------

// System_Processes_Process_State

// repeated .ywrapper.StringValue args = 136113714 [(.yext.schemapath) = "/system/processes/process/state/args"];
inline int System_Processes_Process_State::args_size() const {
  return args_.size();
}
inline const ::ywrapper::StringValue& System_Processes_Process_State::args(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Processes.Process.State.args)
  return args_.Get(index);
}
inline ::ywrapper::StringValue* System_Processes_Process_State::mutable_args(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Processes.Process.State.args)
  return args_.Mutable(index);
}
inline ::ywrapper::StringValue* System_Processes_Process_State::add_args() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Processes.Process.State.args)
  return args_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >*
System_Processes_Process_State::mutable_args() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Processes.Process.State.args)
  return &args_;
}
inline const ::google::protobuf::RepeatedPtrField< ::ywrapper::StringValue >&
System_Processes_Process_State::args() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Processes.Process.State.args)
  return args_;
}

// .ywrapper.UintValue cpu_usage_system = 221645263 [(.yext.schemapath) = "/system/processes/process/state/cpu-usage-system"];
inline bool System_Processes_Process_State::has_cpu_usage_system() const {
  return this != internal_default_instance() && cpu_usage_system_ != NULL;
}
inline const ::ywrapper::UintValue& System_Processes_Process_State::cpu_usage_system() const {
  const ::ywrapper::UintValue* p = cpu_usage_system_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Processes.Process.State.cpu_usage_system)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Processes_Process_State::release_cpu_usage_system() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Processes.Process.State.cpu_usage_system)
  
  ::ywrapper::UintValue* temp = cpu_usage_system_;
  cpu_usage_system_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Processes_Process_State::mutable_cpu_usage_system() {
  
  if (cpu_usage_system_ == NULL) {
    cpu_usage_system_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Processes.Process.State.cpu_usage_system)
  return cpu_usage_system_;
}
inline void System_Processes_Process_State::set_allocated_cpu_usage_system(::ywrapper::UintValue* cpu_usage_system) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cpu_usage_system_);
  }
  if (cpu_usage_system) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cpu_usage_system = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cpu_usage_system, submessage_arena);
    }
    
  } else {
    
  }
  cpu_usage_system_ = cpu_usage_system;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Processes.Process.State.cpu_usage_system)
}

// .ywrapper.UintValue cpu_usage_user = 6624253 [(.yext.schemapath) = "/system/processes/process/state/cpu-usage-user"];
inline bool System_Processes_Process_State::has_cpu_usage_user() const {
  return this != internal_default_instance() && cpu_usage_user_ != NULL;
}
inline const ::ywrapper::UintValue& System_Processes_Process_State::cpu_usage_user() const {
  const ::ywrapper::UintValue* p = cpu_usage_user_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Processes.Process.State.cpu_usage_user)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Processes_Process_State::release_cpu_usage_user() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Processes.Process.State.cpu_usage_user)
  
  ::ywrapper::UintValue* temp = cpu_usage_user_;
  cpu_usage_user_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Processes_Process_State::mutable_cpu_usage_user() {
  
  if (cpu_usage_user_ == NULL) {
    cpu_usage_user_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Processes.Process.State.cpu_usage_user)
  return cpu_usage_user_;
}
inline void System_Processes_Process_State::set_allocated_cpu_usage_user(::ywrapper::UintValue* cpu_usage_user) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cpu_usage_user_);
  }
  if (cpu_usage_user) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cpu_usage_user = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cpu_usage_user, submessage_arena);
    }
    
  } else {
    
  }
  cpu_usage_user_ = cpu_usage_user;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Processes.Process.State.cpu_usage_user)
}

// .ywrapper.UintValue cpu_utilization = 346097790 [(.yext.schemapath) = "/system/processes/process/state/cpu-utilization"];
inline bool System_Processes_Process_State::has_cpu_utilization() const {
  return this != internal_default_instance() && cpu_utilization_ != NULL;
}
inline const ::ywrapper::UintValue& System_Processes_Process_State::cpu_utilization() const {
  const ::ywrapper::UintValue* p = cpu_utilization_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Processes.Process.State.cpu_utilization)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Processes_Process_State::release_cpu_utilization() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Processes.Process.State.cpu_utilization)
  
  ::ywrapper::UintValue* temp = cpu_utilization_;
  cpu_utilization_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Processes_Process_State::mutable_cpu_utilization() {
  
  if (cpu_utilization_ == NULL) {
    cpu_utilization_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Processes.Process.State.cpu_utilization)
  return cpu_utilization_;
}
inline void System_Processes_Process_State::set_allocated_cpu_utilization(::ywrapper::UintValue* cpu_utilization) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(cpu_utilization_);
  }
  if (cpu_utilization) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cpu_utilization = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cpu_utilization, submessage_arena);
    }
    
  } else {
    
  }
  cpu_utilization_ = cpu_utilization;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Processes.Process.State.cpu_utilization)
}

// .ywrapper.UintValue memory_usage = 70248886 [(.yext.schemapath) = "/system/processes/process/state/memory-usage"];
inline bool System_Processes_Process_State::has_memory_usage() const {
  return this != internal_default_instance() && memory_usage_ != NULL;
}
inline const ::ywrapper::UintValue& System_Processes_Process_State::memory_usage() const {
  const ::ywrapper::UintValue* p = memory_usage_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Processes.Process.State.memory_usage)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Processes_Process_State::release_memory_usage() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Processes.Process.State.memory_usage)
  
  ::ywrapper::UintValue* temp = memory_usage_;
  memory_usage_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Processes_Process_State::mutable_memory_usage() {
  
  if (memory_usage_ == NULL) {
    memory_usage_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Processes.Process.State.memory_usage)
  return memory_usage_;
}
inline void System_Processes_Process_State::set_allocated_memory_usage(::ywrapper::UintValue* memory_usage) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(memory_usage_);
  }
  if (memory_usage) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      memory_usage = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, memory_usage, submessage_arena);
    }
    
  } else {
    
  }
  memory_usage_ = memory_usage;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Processes.Process.State.memory_usage)
}

// .ywrapper.UintValue memory_utilization = 283685455 [(.yext.schemapath) = "/system/processes/process/state/memory-utilization"];
inline bool System_Processes_Process_State::has_memory_utilization() const {
  return this != internal_default_instance() && memory_utilization_ != NULL;
}
inline const ::ywrapper::UintValue& System_Processes_Process_State::memory_utilization() const {
  const ::ywrapper::UintValue* p = memory_utilization_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Processes.Process.State.memory_utilization)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Processes_Process_State::release_memory_utilization() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Processes.Process.State.memory_utilization)
  
  ::ywrapper::UintValue* temp = memory_utilization_;
  memory_utilization_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Processes_Process_State::mutable_memory_utilization() {
  
  if (memory_utilization_ == NULL) {
    memory_utilization_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Processes.Process.State.memory_utilization)
  return memory_utilization_;
}
inline void System_Processes_Process_State::set_allocated_memory_utilization(::ywrapper::UintValue* memory_utilization) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(memory_utilization_);
  }
  if (memory_utilization) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      memory_utilization = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, memory_utilization, submessage_arena);
    }
    
  } else {
    
  }
  memory_utilization_ = memory_utilization;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Processes.Process.State.memory_utilization)
}

// .ywrapper.StringValue name = 245651384 [(.yext.schemapath) = "/system/processes/process/state/name"];
inline bool System_Processes_Process_State::has_name() const {
  return this != internal_default_instance() && name_ != NULL;
}
inline const ::ywrapper::StringValue& System_Processes_Process_State::name() const {
  const ::ywrapper::StringValue* p = name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Processes.Process.State.name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_Processes_Process_State::release_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Processes.Process.State.name)
  
  ::ywrapper::StringValue* temp = name_;
  name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_Processes_Process_State::mutable_name() {
  
  if (name_ == NULL) {
    name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Processes.Process.State.name)
  return name_;
}
inline void System_Processes_Process_State::set_allocated_name(::ywrapper::StringValue* name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(name_);
  }
  if (name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, name, submessage_arena);
    }
    
  } else {
    
  }
  name_ = name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Processes.Process.State.name)
}

// .ywrapper.UintValue pid = 210942180 [(.yext.schemapath) = "/system/processes/process/state/pid"];
inline bool System_Processes_Process_State::has_pid() const {
  return this != internal_default_instance() && pid_ != NULL;
}
inline const ::ywrapper::UintValue& System_Processes_Process_State::pid() const {
  const ::ywrapper::UintValue* p = pid_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Processes.Process.State.pid)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Processes_Process_State::release_pid() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Processes.Process.State.pid)
  
  ::ywrapper::UintValue* temp = pid_;
  pid_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Processes_Process_State::mutable_pid() {
  
  if (pid_ == NULL) {
    pid_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Processes.Process.State.pid)
  return pid_;
}
inline void System_Processes_Process_State::set_allocated_pid(::ywrapper::UintValue* pid) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pid_);
  }
  if (pid) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pid = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pid, submessage_arena);
    }
    
  } else {
    
  }
  pid_ = pid;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Processes.Process.State.pid)
}

// .ywrapper.UintValue start_time = 320727543 [(.yext.schemapath) = "/system/processes/process/state/start-time"];
inline bool System_Processes_Process_State::has_start_time() const {
  return this != internal_default_instance() && start_time_ != NULL;
}
inline const ::ywrapper::UintValue& System_Processes_Process_State::start_time() const {
  const ::ywrapper::UintValue* p = start_time_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Processes.Process.State.start_time)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Processes_Process_State::release_start_time() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Processes.Process.State.start_time)
  
  ::ywrapper::UintValue* temp = start_time_;
  start_time_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Processes_Process_State::mutable_start_time() {
  
  if (start_time_ == NULL) {
    start_time_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Processes.Process.State.start_time)
  return start_time_;
}
inline void System_Processes_Process_State::set_allocated_start_time(::ywrapper::UintValue* start_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(start_time_);
  }
  if (start_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      start_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, start_time, submessage_arena);
    }
    
  } else {
    
  }
  start_time_ = start_time;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Processes.Process.State.start_time)
}

// .ywrapper.UintValue uptime = 480814421 [(.yext.schemapath) = "/system/processes/process/state/uptime"];
inline bool System_Processes_Process_State::has_uptime() const {
  return this != internal_default_instance() && uptime_ != NULL;
}
inline const ::ywrapper::UintValue& System_Processes_Process_State::uptime() const {
  const ::ywrapper::UintValue* p = uptime_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Processes.Process.State.uptime)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_Processes_Process_State::release_uptime() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Processes.Process.State.uptime)
  
  ::ywrapper::UintValue* temp = uptime_;
  uptime_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_Processes_Process_State::mutable_uptime() {
  
  if (uptime_ == NULL) {
    uptime_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Processes.Process.State.uptime)
  return uptime_;
}
inline void System_Processes_Process_State::set_allocated_uptime(::ywrapper::UintValue* uptime) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(uptime_);
  }
  if (uptime) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      uptime = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, uptime, submessage_arena);
    }
    
  } else {
    
  }
  uptime_ = uptime;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Processes.Process.State.uptime)
}

// -------------------------------------------------------------------

// System_Processes_Process

// .openconfig.openconfig_system.System.Processes.Process.State state = 393937770 [(.yext.schemapath) = "/system/processes/process/state"];
inline bool System_Processes_Process::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_Processes_Process::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Processes_Process_State& System_Processes_Process::state() const {
  const ::openconfig::openconfig_system::System_Processes_Process_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Processes.Process.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Processes_Process_State*>(
      &::openconfig::openconfig_system::_System_Processes_Process_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_Processes_Process_State* System_Processes_Process::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Processes.Process.state)
  
  ::openconfig::openconfig_system::System_Processes_Process_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Processes_Process_State* System_Processes_Process::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_Processes_Process_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Processes.Process.state)
  return state_;
}
inline void System_Processes_Process::set_allocated_state(::openconfig::openconfig_system::System_Processes_Process_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Processes.Process.state)
}

// -------------------------------------------------------------------

// System_Processes_ProcessKey

// uint64 pid = 1 [(.yext.schemapath) = "/system/processes/process/pid"];
inline void System_Processes_ProcessKey::clear_pid() {
  pid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 System_Processes_ProcessKey::pid() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Processes.ProcessKey.pid)
  return pid_;
}
inline void System_Processes_ProcessKey::set_pid(::google::protobuf::uint64 value) {
  
  pid_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.Processes.ProcessKey.pid)
}

// .openconfig.openconfig_system.System.Processes.Process process = 2;
inline bool System_Processes_ProcessKey::has_process() const {
  return this != internal_default_instance() && process_ != NULL;
}
inline void System_Processes_ProcessKey::clear_process() {
  if (GetArenaNoVirtual() == NULL && process_ != NULL) {
    delete process_;
  }
  process_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Processes_Process& System_Processes_ProcessKey::process() const {
  const ::openconfig::openconfig_system::System_Processes_Process* p = process_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Processes.ProcessKey.process)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Processes_Process*>(
      &::openconfig::openconfig_system::_System_Processes_Process_default_instance_);
}
inline ::openconfig::openconfig_system::System_Processes_Process* System_Processes_ProcessKey::release_process() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.Processes.ProcessKey.process)
  
  ::openconfig::openconfig_system::System_Processes_Process* temp = process_;
  process_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Processes_Process* System_Processes_ProcessKey::mutable_process() {
  
  if (process_ == NULL) {
    process_ = new ::openconfig::openconfig_system::System_Processes_Process;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Processes.ProcessKey.process)
  return process_;
}
inline void System_Processes_ProcessKey::set_allocated_process(::openconfig::openconfig_system::System_Processes_Process* process) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete process_;
  }
  if (process) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      process = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, process, submessage_arena);
    }
    
  } else {
    
  }
  process_ = process;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.Processes.ProcessKey.process)
}

// -------------------------------------------------------------------

// System_Processes

// repeated .openconfig.openconfig_system.System.Processes.ProcessKey process = 8835840 [(.yext.schemapath) = "/system/processes/process"];
inline int System_Processes::process_size() const {
  return process_.size();
}
inline void System_Processes::clear_process() {
  process_.Clear();
}
inline const ::openconfig::openconfig_system::System_Processes_ProcessKey& System_Processes::process(int index) const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.Processes.process)
  return process_.Get(index);
}
inline ::openconfig::openconfig_system::System_Processes_ProcessKey* System_Processes::mutable_process(int index) {
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.Processes.process)
  return process_.Mutable(index);
}
inline ::openconfig::openconfig_system::System_Processes_ProcessKey* System_Processes::add_process() {
  // @@protoc_insertion_point(field_add:openconfig.openconfig_system.System.Processes.process)
  return process_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Processes_ProcessKey >*
System_Processes::mutable_process() {
  // @@protoc_insertion_point(field_mutable_list:openconfig.openconfig_system.System.Processes.process)
  return &process_;
}
inline const ::google::protobuf::RepeatedPtrField< ::openconfig::openconfig_system::System_Processes_ProcessKey >&
System_Processes::process() const {
  // @@protoc_insertion_point(field_list:openconfig.openconfig_system.System.Processes.process)
  return process_;
}

// -------------------------------------------------------------------

// System_SshServer_Config

// .ywrapper.BoolValue enable = 475045872 [(.yext.schemapath) = "/system/ssh-server/config/enable"];
inline bool System_SshServer_Config::has_enable() const {
  return this != internal_default_instance() && enable_ != NULL;
}
inline const ::ywrapper::BoolValue& System_SshServer_Config::enable() const {
  const ::ywrapper::BoolValue* p = enable_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.SshServer.Config.enable)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* System_SshServer_Config::release_enable() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.SshServer.Config.enable)
  
  ::ywrapper::BoolValue* temp = enable_;
  enable_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* System_SshServer_Config::mutable_enable() {
  
  if (enable_ == NULL) {
    enable_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.SshServer.Config.enable)
  return enable_;
}
inline void System_SshServer_Config::set_allocated_enable(::ywrapper::BoolValue* enable) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enable_);
  }
  if (enable) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enable = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enable, submessage_arena);
    }
    
  } else {
    
  }
  enable_ = enable;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.SshServer.Config.enable)
}

// .openconfig.openconfig_system.System.SshServer.Config.ProtocolVersion protocol_version = 334522130 [(.yext.schemapath) = "/system/ssh-server/config/protocol-version"];
inline void System_SshServer_Config::clear_protocol_version() {
  protocol_version_ = 0;
}
inline ::openconfig::openconfig_system::System_SshServer_Config_ProtocolVersion System_SshServer_Config::protocol_version() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.SshServer.Config.protocol_version)
  return static_cast< ::openconfig::openconfig_system::System_SshServer_Config_ProtocolVersion >(protocol_version_);
}
inline void System_SshServer_Config::set_protocol_version(::openconfig::openconfig_system::System_SshServer_Config_ProtocolVersion value) {
  
  protocol_version_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.SshServer.Config.protocol_version)
}

// .ywrapper.UintValue rate_limit = 194633841 [(.yext.schemapath) = "/system/ssh-server/config/rate-limit"];
inline bool System_SshServer_Config::has_rate_limit() const {
  return this != internal_default_instance() && rate_limit_ != NULL;
}
inline const ::ywrapper::UintValue& System_SshServer_Config::rate_limit() const {
  const ::ywrapper::UintValue* p = rate_limit_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.SshServer.Config.rate_limit)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_SshServer_Config::release_rate_limit() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.SshServer.Config.rate_limit)
  
  ::ywrapper::UintValue* temp = rate_limit_;
  rate_limit_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_SshServer_Config::mutable_rate_limit() {
  
  if (rate_limit_ == NULL) {
    rate_limit_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.SshServer.Config.rate_limit)
  return rate_limit_;
}
inline void System_SshServer_Config::set_allocated_rate_limit(::ywrapper::UintValue* rate_limit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rate_limit_);
  }
  if (rate_limit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rate_limit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rate_limit, submessage_arena);
    }
    
  } else {
    
  }
  rate_limit_ = rate_limit;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.SshServer.Config.rate_limit)
}

// .ywrapper.UintValue session_limit = 401851517 [(.yext.schemapath) = "/system/ssh-server/config/session-limit"];
inline bool System_SshServer_Config::has_session_limit() const {
  return this != internal_default_instance() && session_limit_ != NULL;
}
inline const ::ywrapper::UintValue& System_SshServer_Config::session_limit() const {
  const ::ywrapper::UintValue* p = session_limit_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.SshServer.Config.session_limit)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_SshServer_Config::release_session_limit() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.SshServer.Config.session_limit)
  
  ::ywrapper::UintValue* temp = session_limit_;
  session_limit_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_SshServer_Config::mutable_session_limit() {
  
  if (session_limit_ == NULL) {
    session_limit_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.SshServer.Config.session_limit)
  return session_limit_;
}
inline void System_SshServer_Config::set_allocated_session_limit(::ywrapper::UintValue* session_limit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(session_limit_);
  }
  if (session_limit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      session_limit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, session_limit, submessage_arena);
    }
    
  } else {
    
  }
  session_limit_ = session_limit;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.SshServer.Config.session_limit)
}

// .ywrapper.UintValue timeout = 447813214 [(.yext.schemapath) = "/system/ssh-server/config/timeout"];
inline bool System_SshServer_Config::has_timeout() const {
  return this != internal_default_instance() && timeout_ != NULL;
}
inline const ::ywrapper::UintValue& System_SshServer_Config::timeout() const {
  const ::ywrapper::UintValue* p = timeout_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.SshServer.Config.timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_SshServer_Config::release_timeout() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.SshServer.Config.timeout)
  
  ::ywrapper::UintValue* temp = timeout_;
  timeout_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_SshServer_Config::mutable_timeout() {
  
  if (timeout_ == NULL) {
    timeout_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.SshServer.Config.timeout)
  return timeout_;
}
inline void System_SshServer_Config::set_allocated_timeout(::ywrapper::UintValue* timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timeout_);
  }
  if (timeout) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timeout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timeout, submessage_arena);
    }
    
  } else {
    
  }
  timeout_ = timeout;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.SshServer.Config.timeout)
}

// -------------------------------------------------------------------

// System_SshServer_State

// .ywrapper.BoolValue enable = 107574011 [(.yext.schemapath) = "/system/ssh-server/state/enable"];
inline bool System_SshServer_State::has_enable() const {
  return this != internal_default_instance() && enable_ != NULL;
}
inline const ::ywrapper::BoolValue& System_SshServer_State::enable() const {
  const ::ywrapper::BoolValue* p = enable_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.SshServer.State.enable)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* System_SshServer_State::release_enable() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.SshServer.State.enable)
  
  ::ywrapper::BoolValue* temp = enable_;
  enable_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* System_SshServer_State::mutable_enable() {
  
  if (enable_ == NULL) {
    enable_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.SshServer.State.enable)
  return enable_;
}
inline void System_SshServer_State::set_allocated_enable(::ywrapper::BoolValue* enable) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enable_);
  }
  if (enable) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enable = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enable, submessage_arena);
    }
    
  } else {
    
  }
  enable_ = enable;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.SshServer.State.enable)
}

// .openconfig.openconfig_system.System.SshServer.State.ProtocolVersion protocol_version = 420819557 [(.yext.schemapath) = "/system/ssh-server/state/protocol-version"];
inline void System_SshServer_State::clear_protocol_version() {
  protocol_version_ = 0;
}
inline ::openconfig::openconfig_system::System_SshServer_State_ProtocolVersion System_SshServer_State::protocol_version() const {
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.SshServer.State.protocol_version)
  return static_cast< ::openconfig::openconfig_system::System_SshServer_State_ProtocolVersion >(protocol_version_);
}
inline void System_SshServer_State::set_protocol_version(::openconfig::openconfig_system::System_SshServer_State_ProtocolVersion value) {
  
  protocol_version_ = value;
  // @@protoc_insertion_point(field_set:openconfig.openconfig_system.System.SshServer.State.protocol_version)
}

// .ywrapper.UintValue rate_limit = 313289414 [(.yext.schemapath) = "/system/ssh-server/state/rate-limit"];
inline bool System_SshServer_State::has_rate_limit() const {
  return this != internal_default_instance() && rate_limit_ != NULL;
}
inline const ::ywrapper::UintValue& System_SshServer_State::rate_limit() const {
  const ::ywrapper::UintValue* p = rate_limit_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.SshServer.State.rate_limit)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_SshServer_State::release_rate_limit() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.SshServer.State.rate_limit)
  
  ::ywrapper::UintValue* temp = rate_limit_;
  rate_limit_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_SshServer_State::mutable_rate_limit() {
  
  if (rate_limit_ == NULL) {
    rate_limit_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.SshServer.State.rate_limit)
  return rate_limit_;
}
inline void System_SshServer_State::set_allocated_rate_limit(::ywrapper::UintValue* rate_limit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rate_limit_);
  }
  if (rate_limit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rate_limit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rate_limit, submessage_arena);
    }
    
  } else {
    
  }
  rate_limit_ = rate_limit;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.SshServer.State.rate_limit)
}

// .ywrapper.UintValue session_limit = 301700896 [(.yext.schemapath) = "/system/ssh-server/state/session-limit"];
inline bool System_SshServer_State::has_session_limit() const {
  return this != internal_default_instance() && session_limit_ != NULL;
}
inline const ::ywrapper::UintValue& System_SshServer_State::session_limit() const {
  const ::ywrapper::UintValue* p = session_limit_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.SshServer.State.session_limit)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_SshServer_State::release_session_limit() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.SshServer.State.session_limit)
  
  ::ywrapper::UintValue* temp = session_limit_;
  session_limit_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_SshServer_State::mutable_session_limit() {
  
  if (session_limit_ == NULL) {
    session_limit_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.SshServer.State.session_limit)
  return session_limit_;
}
inline void System_SshServer_State::set_allocated_session_limit(::ywrapper::UintValue* session_limit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(session_limit_);
  }
  if (session_limit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      session_limit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, session_limit, submessage_arena);
    }
    
  } else {
    
  }
  session_limit_ = session_limit;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.SshServer.State.session_limit)
}

// .ywrapper.UintValue timeout = 183732583 [(.yext.schemapath) = "/system/ssh-server/state/timeout"];
inline bool System_SshServer_State::has_timeout() const {
  return this != internal_default_instance() && timeout_ != NULL;
}
inline const ::ywrapper::UintValue& System_SshServer_State::timeout() const {
  const ::ywrapper::UintValue* p = timeout_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.SshServer.State.timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_SshServer_State::release_timeout() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.SshServer.State.timeout)
  
  ::ywrapper::UintValue* temp = timeout_;
  timeout_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_SshServer_State::mutable_timeout() {
  
  if (timeout_ == NULL) {
    timeout_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.SshServer.State.timeout)
  return timeout_;
}
inline void System_SshServer_State::set_allocated_timeout(::ywrapper::UintValue* timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timeout_);
  }
  if (timeout) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timeout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timeout, submessage_arena);
    }
    
  } else {
    
  }
  timeout_ = timeout;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.SshServer.State.timeout)
}

// -------------------------------------------------------------------

// System_SshServer

// .openconfig.openconfig_system.System.SshServer.Config config = 350686150 [(.yext.schemapath) = "/system/ssh-server/config"];
inline bool System_SshServer::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_SshServer::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_SshServer_Config& System_SshServer::config() const {
  const ::openconfig::openconfig_system::System_SshServer_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.SshServer.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_SshServer_Config*>(
      &::openconfig::openconfig_system::_System_SshServer_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_SshServer_Config* System_SshServer::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.SshServer.config)
  
  ::openconfig::openconfig_system::System_SshServer_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_SshServer_Config* System_SshServer::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_SshServer_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.SshServer.config)
  return config_;
}
inline void System_SshServer::set_allocated_config(::openconfig::openconfig_system::System_SshServer_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.SshServer.config)
}

// .openconfig.openconfig_system.System.SshServer.State state = 380296627 [(.yext.schemapath) = "/system/ssh-server/state"];
inline bool System_SshServer::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_SshServer::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_SshServer_State& System_SshServer::state() const {
  const ::openconfig::openconfig_system::System_SshServer_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.SshServer.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_SshServer_State*>(
      &::openconfig::openconfig_system::_System_SshServer_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_SshServer_State* System_SshServer::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.SshServer.state)
  
  ::openconfig::openconfig_system::System_SshServer_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_SshServer_State* System_SshServer::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_SshServer_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.SshServer.state)
  return state_;
}
inline void System_SshServer::set_allocated_state(::openconfig::openconfig_system::System_SshServer_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.SshServer.state)
}

// -------------------------------------------------------------------

// System_State

// .ywrapper.UintValue boot_time = 174811281 [(.yext.schemapath) = "/system/state/boot-time"];
inline bool System_State::has_boot_time() const {
  return this != internal_default_instance() && boot_time_ != NULL;
}
inline const ::ywrapper::UintValue& System_State::boot_time() const {
  const ::ywrapper::UintValue* p = boot_time_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.State.boot_time)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_State::release_boot_time() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.State.boot_time)
  
  ::ywrapper::UintValue* temp = boot_time_;
  boot_time_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_State::mutable_boot_time() {
  
  if (boot_time_ == NULL) {
    boot_time_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.State.boot_time)
  return boot_time_;
}
inline void System_State::set_allocated_boot_time(::ywrapper::UintValue* boot_time) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(boot_time_);
  }
  if (boot_time) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      boot_time = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, boot_time, submessage_arena);
    }
    
  } else {
    
  }
  boot_time_ = boot_time;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.State.boot_time)
}

// .ywrapper.StringValue current_datetime = 14846070 [(.yext.schemapath) = "/system/state/current-datetime"];
inline bool System_State::has_current_datetime() const {
  return this != internal_default_instance() && current_datetime_ != NULL;
}
inline const ::ywrapper::StringValue& System_State::current_datetime() const {
  const ::ywrapper::StringValue* p = current_datetime_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.State.current_datetime)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_State::release_current_datetime() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.State.current_datetime)
  
  ::ywrapper::StringValue* temp = current_datetime_;
  current_datetime_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_State::mutable_current_datetime() {
  
  if (current_datetime_ == NULL) {
    current_datetime_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.State.current_datetime)
  return current_datetime_;
}
inline void System_State::set_allocated_current_datetime(::ywrapper::StringValue* current_datetime) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(current_datetime_);
  }
  if (current_datetime) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      current_datetime = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, current_datetime, submessage_arena);
    }
    
  } else {
    
  }
  current_datetime_ = current_datetime;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.State.current_datetime)
}

// .ywrapper.StringValue domain_name = 325663011 [(.yext.schemapath) = "/system/state/domain-name"];
inline bool System_State::has_domain_name() const {
  return this != internal_default_instance() && domain_name_ != NULL;
}
inline const ::ywrapper::StringValue& System_State::domain_name() const {
  const ::ywrapper::StringValue* p = domain_name_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.State.domain_name)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_State::release_domain_name() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.State.domain_name)
  
  ::ywrapper::StringValue* temp = domain_name_;
  domain_name_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_State::mutable_domain_name() {
  
  if (domain_name_ == NULL) {
    domain_name_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.State.domain_name)
  return domain_name_;
}
inline void System_State::set_allocated_domain_name(::ywrapper::StringValue* domain_name) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(domain_name_);
  }
  if (domain_name) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      domain_name = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, domain_name, submessage_arena);
    }
    
  } else {
    
  }
  domain_name_ = domain_name;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.State.domain_name)
}

// .ywrapper.StringValue hostname = 381905486 [(.yext.schemapath) = "/system/state/hostname"];
inline bool System_State::has_hostname() const {
  return this != internal_default_instance() && hostname_ != NULL;
}
inline const ::ywrapper::StringValue& System_State::hostname() const {
  const ::ywrapper::StringValue* p = hostname_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.State.hostname)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_State::release_hostname() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.State.hostname)
  
  ::ywrapper::StringValue* temp = hostname_;
  hostname_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_State::mutable_hostname() {
  
  if (hostname_ == NULL) {
    hostname_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.State.hostname)
  return hostname_;
}
inline void System_State::set_allocated_hostname(::ywrapper::StringValue* hostname) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(hostname_);
  }
  if (hostname) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      hostname = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, hostname, submessage_arena);
    }
    
  } else {
    
  }
  hostname_ = hostname;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.State.hostname)
}

// .ywrapper.StringValue login_banner = 441420887 [(.yext.schemapath) = "/system/state/login-banner"];
inline bool System_State::has_login_banner() const {
  return this != internal_default_instance() && login_banner_ != NULL;
}
inline const ::ywrapper::StringValue& System_State::login_banner() const {
  const ::ywrapper::StringValue* p = login_banner_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.State.login_banner)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_State::release_login_banner() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.State.login_banner)
  
  ::ywrapper::StringValue* temp = login_banner_;
  login_banner_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_State::mutable_login_banner() {
  
  if (login_banner_ == NULL) {
    login_banner_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.State.login_banner)
  return login_banner_;
}
inline void System_State::set_allocated_login_banner(::ywrapper::StringValue* login_banner) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(login_banner_);
  }
  if (login_banner) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      login_banner = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, login_banner, submessage_arena);
    }
    
  } else {
    
  }
  login_banner_ = login_banner;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.State.login_banner)
}

// .ywrapper.StringValue motd_banner = 264146320 [(.yext.schemapath) = "/system/state/motd-banner"];
inline bool System_State::has_motd_banner() const {
  return this != internal_default_instance() && motd_banner_ != NULL;
}
inline const ::ywrapper::StringValue& System_State::motd_banner() const {
  const ::ywrapper::StringValue* p = motd_banner_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.State.motd_banner)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::StringValue*>(
      &::ywrapper::_StringValue_default_instance_);
}
inline ::ywrapper::StringValue* System_State::release_motd_banner() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.State.motd_banner)
  
  ::ywrapper::StringValue* temp = motd_banner_;
  motd_banner_ = NULL;
  return temp;
}
inline ::ywrapper::StringValue* System_State::mutable_motd_banner() {
  
  if (motd_banner_ == NULL) {
    motd_banner_ = new ::ywrapper::StringValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.State.motd_banner)
  return motd_banner_;
}
inline void System_State::set_allocated_motd_banner(::ywrapper::StringValue* motd_banner) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(motd_banner_);
  }
  if (motd_banner) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      motd_banner = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, motd_banner, submessage_arena);
    }
    
  } else {
    
  }
  motd_banner_ = motd_banner;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.State.motd_banner)
}

// -------------------------------------------------------------------

// System_TelnetServer_Config

// .ywrapper.BoolValue enable = 131142084 [(.yext.schemapath) = "/system/telnet-server/config/enable"];
inline bool System_TelnetServer_Config::has_enable() const {
  return this != internal_default_instance() && enable_ != NULL;
}
inline const ::ywrapper::BoolValue& System_TelnetServer_Config::enable() const {
  const ::ywrapper::BoolValue* p = enable_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.TelnetServer.Config.enable)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* System_TelnetServer_Config::release_enable() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.TelnetServer.Config.enable)
  
  ::ywrapper::BoolValue* temp = enable_;
  enable_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* System_TelnetServer_Config::mutable_enable() {
  
  if (enable_ == NULL) {
    enable_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.TelnetServer.Config.enable)
  return enable_;
}
inline void System_TelnetServer_Config::set_allocated_enable(::ywrapper::BoolValue* enable) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enable_);
  }
  if (enable) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enable = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enable, submessage_arena);
    }
    
  } else {
    
  }
  enable_ = enable;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.TelnetServer.Config.enable)
}

// .ywrapper.UintValue rate_limit = 174879637 [(.yext.schemapath) = "/system/telnet-server/config/rate-limit"];
inline bool System_TelnetServer_Config::has_rate_limit() const {
  return this != internal_default_instance() && rate_limit_ != NULL;
}
inline const ::ywrapper::UintValue& System_TelnetServer_Config::rate_limit() const {
  const ::ywrapper::UintValue* p = rate_limit_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.TelnetServer.Config.rate_limit)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_TelnetServer_Config::release_rate_limit() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.TelnetServer.Config.rate_limit)
  
  ::ywrapper::UintValue* temp = rate_limit_;
  rate_limit_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_TelnetServer_Config::mutable_rate_limit() {
  
  if (rate_limit_ == NULL) {
    rate_limit_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.TelnetServer.Config.rate_limit)
  return rate_limit_;
}
inline void System_TelnetServer_Config::set_allocated_rate_limit(::ywrapper::UintValue* rate_limit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rate_limit_);
  }
  if (rate_limit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rate_limit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rate_limit, submessage_arena);
    }
    
  } else {
    
  }
  rate_limit_ = rate_limit;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.TelnetServer.Config.rate_limit)
}

// .ywrapper.UintValue session_limit = 205487953 [(.yext.schemapath) = "/system/telnet-server/config/session-limit"];
inline bool System_TelnetServer_Config::has_session_limit() const {
  return this != internal_default_instance() && session_limit_ != NULL;
}
inline const ::ywrapper::UintValue& System_TelnetServer_Config::session_limit() const {
  const ::ywrapper::UintValue* p = session_limit_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.TelnetServer.Config.session_limit)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_TelnetServer_Config::release_session_limit() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.TelnetServer.Config.session_limit)
  
  ::ywrapper::UintValue* temp = session_limit_;
  session_limit_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_TelnetServer_Config::mutable_session_limit() {
  
  if (session_limit_ == NULL) {
    session_limit_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.TelnetServer.Config.session_limit)
  return session_limit_;
}
inline void System_TelnetServer_Config::set_allocated_session_limit(::ywrapper::UintValue* session_limit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(session_limit_);
  }
  if (session_limit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      session_limit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, session_limit, submessage_arena);
    }
    
  } else {
    
  }
  session_limit_ = session_limit;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.TelnetServer.Config.session_limit)
}

// .ywrapper.UintValue timeout = 360726298 [(.yext.schemapath) = "/system/telnet-server/config/timeout"];
inline bool System_TelnetServer_Config::has_timeout() const {
  return this != internal_default_instance() && timeout_ != NULL;
}
inline const ::ywrapper::UintValue& System_TelnetServer_Config::timeout() const {
  const ::ywrapper::UintValue* p = timeout_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.TelnetServer.Config.timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_TelnetServer_Config::release_timeout() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.TelnetServer.Config.timeout)
  
  ::ywrapper::UintValue* temp = timeout_;
  timeout_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_TelnetServer_Config::mutable_timeout() {
  
  if (timeout_ == NULL) {
    timeout_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.TelnetServer.Config.timeout)
  return timeout_;
}
inline void System_TelnetServer_Config::set_allocated_timeout(::ywrapper::UintValue* timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timeout_);
  }
  if (timeout) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timeout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timeout, submessage_arena);
    }
    
  } else {
    
  }
  timeout_ = timeout;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.TelnetServer.Config.timeout)
}

// -------------------------------------------------------------------

// System_TelnetServer_State

// .ywrapper.BoolValue enable = 254591055 [(.yext.schemapath) = "/system/telnet-server/state/enable"];
inline bool System_TelnetServer_State::has_enable() const {
  return this != internal_default_instance() && enable_ != NULL;
}
inline const ::ywrapper::BoolValue& System_TelnetServer_State::enable() const {
  const ::ywrapper::BoolValue* p = enable_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.TelnetServer.State.enable)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::BoolValue*>(
      &::ywrapper::_BoolValue_default_instance_);
}
inline ::ywrapper::BoolValue* System_TelnetServer_State::release_enable() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.TelnetServer.State.enable)
  
  ::ywrapper::BoolValue* temp = enable_;
  enable_ = NULL;
  return temp;
}
inline ::ywrapper::BoolValue* System_TelnetServer_State::mutable_enable() {
  
  if (enable_ == NULL) {
    enable_ = new ::ywrapper::BoolValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.TelnetServer.State.enable)
  return enable_;
}
inline void System_TelnetServer_State::set_allocated_enable(::ywrapper::BoolValue* enable) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(enable_);
  }
  if (enable) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      enable = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, enable, submessage_arena);
    }
    
  } else {
    
  }
  enable_ = enable;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.TelnetServer.State.enable)
}

// .ywrapper.UintValue rate_limit = 329011690 [(.yext.schemapath) = "/system/telnet-server/state/rate-limit"];
inline bool System_TelnetServer_State::has_rate_limit() const {
  return this != internal_default_instance() && rate_limit_ != NULL;
}
inline const ::ywrapper::UintValue& System_TelnetServer_State::rate_limit() const {
  const ::ywrapper::UintValue* p = rate_limit_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.TelnetServer.State.rate_limit)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_TelnetServer_State::release_rate_limit() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.TelnetServer.State.rate_limit)
  
  ::ywrapper::UintValue* temp = rate_limit_;
  rate_limit_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_TelnetServer_State::mutable_rate_limit() {
  
  if (rate_limit_ == NULL) {
    rate_limit_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.TelnetServer.State.rate_limit)
  return rate_limit_;
}
inline void System_TelnetServer_State::set_allocated_rate_limit(::ywrapper::UintValue* rate_limit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rate_limit_);
  }
  if (rate_limit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rate_limit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rate_limit, submessage_arena);
    }
    
  } else {
    
  }
  rate_limit_ = rate_limit;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.TelnetServer.State.rate_limit)
}

// .ywrapper.UintValue session_limit = 405418532 [(.yext.schemapath) = "/system/telnet-server/state/session-limit"];
inline bool System_TelnetServer_State::has_session_limit() const {
  return this != internal_default_instance() && session_limit_ != NULL;
}
inline const ::ywrapper::UintValue& System_TelnetServer_State::session_limit() const {
  const ::ywrapper::UintValue* p = session_limit_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.TelnetServer.State.session_limit)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_TelnetServer_State::release_session_limit() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.TelnetServer.State.session_limit)
  
  ::ywrapper::UintValue* temp = session_limit_;
  session_limit_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_TelnetServer_State::mutable_session_limit() {
  
  if (session_limit_ == NULL) {
    session_limit_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.TelnetServer.State.session_limit)
  return session_limit_;
}
inline void System_TelnetServer_State::set_allocated_session_limit(::ywrapper::UintValue* session_limit) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(session_limit_);
  }
  if (session_limit) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      session_limit = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, session_limit, submessage_arena);
    }
    
  } else {
    
  }
  session_limit_ = session_limit;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.TelnetServer.State.session_limit)
}

// .ywrapper.UintValue timeout = 253730963 [(.yext.schemapath) = "/system/telnet-server/state/timeout"];
inline bool System_TelnetServer_State::has_timeout() const {
  return this != internal_default_instance() && timeout_ != NULL;
}
inline const ::ywrapper::UintValue& System_TelnetServer_State::timeout() const {
  const ::ywrapper::UintValue* p = timeout_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.TelnetServer.State.timeout)
  return p != NULL ? *p : *reinterpret_cast<const ::ywrapper::UintValue*>(
      &::ywrapper::_UintValue_default_instance_);
}
inline ::ywrapper::UintValue* System_TelnetServer_State::release_timeout() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.TelnetServer.State.timeout)
  
  ::ywrapper::UintValue* temp = timeout_;
  timeout_ = NULL;
  return temp;
}
inline ::ywrapper::UintValue* System_TelnetServer_State::mutable_timeout() {
  
  if (timeout_ == NULL) {
    timeout_ = new ::ywrapper::UintValue;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.TelnetServer.State.timeout)
  return timeout_;
}
inline void System_TelnetServer_State::set_allocated_timeout(::ywrapper::UintValue* timeout) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(timeout_);
  }
  if (timeout) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      timeout = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, timeout, submessage_arena);
    }
    
  } else {
    
  }
  timeout_ = timeout;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.TelnetServer.State.timeout)
}

// -------------------------------------------------------------------

// System_TelnetServer

// .openconfig.openconfig_system.System.TelnetServer.Config config = 267707402 [(.yext.schemapath) = "/system/telnet-server/config"];
inline bool System_TelnetServer::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System_TelnetServer::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_TelnetServer_Config& System_TelnetServer::config() const {
  const ::openconfig::openconfig_system::System_TelnetServer_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.TelnetServer.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_TelnetServer_Config*>(
      &::openconfig::openconfig_system::_System_TelnetServer_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_TelnetServer_Config* System_TelnetServer::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.TelnetServer.config)
  
  ::openconfig::openconfig_system::System_TelnetServer_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_TelnetServer_Config* System_TelnetServer::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_TelnetServer_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.TelnetServer.config)
  return config_;
}
inline void System_TelnetServer::set_allocated_config(::openconfig::openconfig_system::System_TelnetServer_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.TelnetServer.config)
}

// .openconfig.openconfig_system.System.TelnetServer.State state = 533556647 [(.yext.schemapath) = "/system/telnet-server/state"];
inline bool System_TelnetServer::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System_TelnetServer::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_TelnetServer_State& System_TelnetServer::state() const {
  const ::openconfig::openconfig_system::System_TelnetServer_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.TelnetServer.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_TelnetServer_State*>(
      &::openconfig::openconfig_system::_System_TelnetServer_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_TelnetServer_State* System_TelnetServer::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.TelnetServer.state)
  
  ::openconfig::openconfig_system::System_TelnetServer_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_TelnetServer_State* System_TelnetServer::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_TelnetServer_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.TelnetServer.state)
  return state_;
}
inline void System_TelnetServer::set_allocated_state(::openconfig::openconfig_system::System_TelnetServer_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.TelnetServer.state)
}

// -------------------------------------------------------------------

// System

// .openconfig.openconfig_system.System.Aaa aaa = 128178706 [(.yext.schemapath) = "/system/aaa"];
inline bool System::has_aaa() const {
  return this != internal_default_instance() && aaa_ != NULL;
}
inline void System::clear_aaa() {
  if (GetArenaNoVirtual() == NULL && aaa_ != NULL) {
    delete aaa_;
  }
  aaa_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Aaa& System::aaa() const {
  const ::openconfig::openconfig_system::System_Aaa* p = aaa_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.aaa)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Aaa*>(
      &::openconfig::openconfig_system::_System_Aaa_default_instance_);
}
inline ::openconfig::openconfig_system::System_Aaa* System::release_aaa() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.aaa)
  
  ::openconfig::openconfig_system::System_Aaa* temp = aaa_;
  aaa_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Aaa* System::mutable_aaa() {
  
  if (aaa_ == NULL) {
    aaa_ = new ::openconfig::openconfig_system::System_Aaa;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.aaa)
  return aaa_;
}
inline void System::set_allocated_aaa(::openconfig::openconfig_system::System_Aaa* aaa) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete aaa_;
  }
  if (aaa) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      aaa = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, aaa, submessage_arena);
    }
    
  } else {
    
  }
  aaa_ = aaa;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.aaa)
}

// .openconfig.openconfig_system.System.Alarms alarms = 388714845 [(.yext.schemapath) = "/system/alarms"];
inline bool System::has_alarms() const {
  return this != internal_default_instance() && alarms_ != NULL;
}
inline void System::clear_alarms() {
  if (GetArenaNoVirtual() == NULL && alarms_ != NULL) {
    delete alarms_;
  }
  alarms_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Alarms& System::alarms() const {
  const ::openconfig::openconfig_system::System_Alarms* p = alarms_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.alarms)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Alarms*>(
      &::openconfig::openconfig_system::_System_Alarms_default_instance_);
}
inline ::openconfig::openconfig_system::System_Alarms* System::release_alarms() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.alarms)
  
  ::openconfig::openconfig_system::System_Alarms* temp = alarms_;
  alarms_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Alarms* System::mutable_alarms() {
  
  if (alarms_ == NULL) {
    alarms_ = new ::openconfig::openconfig_system::System_Alarms;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.alarms)
  return alarms_;
}
inline void System::set_allocated_alarms(::openconfig::openconfig_system::System_Alarms* alarms) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete alarms_;
  }
  if (alarms) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      alarms = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, alarms, submessage_arena);
    }
    
  } else {
    
  }
  alarms_ = alarms;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.alarms)
}

// .openconfig.openconfig_system.System.Clock clock = 298112203 [(.yext.schemapath) = "/system/clock"];
inline bool System::has_clock() const {
  return this != internal_default_instance() && clock_ != NULL;
}
inline void System::clear_clock() {
  if (GetArenaNoVirtual() == NULL && clock_ != NULL) {
    delete clock_;
  }
  clock_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Clock& System::clock() const {
  const ::openconfig::openconfig_system::System_Clock* p = clock_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.clock)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Clock*>(
      &::openconfig::openconfig_system::_System_Clock_default_instance_);
}
inline ::openconfig::openconfig_system::System_Clock* System::release_clock() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.clock)
  
  ::openconfig::openconfig_system::System_Clock* temp = clock_;
  clock_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Clock* System::mutable_clock() {
  
  if (clock_ == NULL) {
    clock_ = new ::openconfig::openconfig_system::System_Clock;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.clock)
  return clock_;
}
inline void System::set_allocated_clock(::openconfig::openconfig_system::System_Clock* clock) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete clock_;
  }
  if (clock) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      clock = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, clock, submessage_arena);
    }
    
  } else {
    
  }
  clock_ = clock;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.clock)
}

// .openconfig.openconfig_system.System.Config config = 99961649 [(.yext.schemapath) = "/system/config"];
inline bool System::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline void System::clear_config() {
  if (GetArenaNoVirtual() == NULL && config_ != NULL) {
    delete config_;
  }
  config_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Config& System::config() const {
  const ::openconfig::openconfig_system::System_Config* p = config_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.config)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Config*>(
      &::openconfig::openconfig_system::_System_Config_default_instance_);
}
inline ::openconfig::openconfig_system::System_Config* System::release_config() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.config)
  
  ::openconfig::openconfig_system::System_Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Config* System::mutable_config() {
  
  if (config_ == NULL) {
    config_ = new ::openconfig::openconfig_system::System_Config;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.config)
  return config_;
}
inline void System::set_allocated_config(::openconfig::openconfig_system::System_Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete config_;
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.config)
}

// .openconfig.openconfig_system.System.Cpus cpus = 105197190 [(.yext.schemapath) = "/system/cpus"];
inline bool System::has_cpus() const {
  return this != internal_default_instance() && cpus_ != NULL;
}
inline void System::clear_cpus() {
  if (GetArenaNoVirtual() == NULL && cpus_ != NULL) {
    delete cpus_;
  }
  cpus_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Cpus& System::cpus() const {
  const ::openconfig::openconfig_system::System_Cpus* p = cpus_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.cpus)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Cpus*>(
      &::openconfig::openconfig_system::_System_Cpus_default_instance_);
}
inline ::openconfig::openconfig_system::System_Cpus* System::release_cpus() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.cpus)
  
  ::openconfig::openconfig_system::System_Cpus* temp = cpus_;
  cpus_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Cpus* System::mutable_cpus() {
  
  if (cpus_ == NULL) {
    cpus_ = new ::openconfig::openconfig_system::System_Cpus;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.cpus)
  return cpus_;
}
inline void System::set_allocated_cpus(::openconfig::openconfig_system::System_Cpus* cpus) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete cpus_;
  }
  if (cpus) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      cpus = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, cpus, submessage_arena);
    }
    
  } else {
    
  }
  cpus_ = cpus;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.cpus)
}

// .openconfig.openconfig_system.System.Dns dns = 380694544 [(.yext.schemapath) = "/system/dns"];
inline bool System::has_dns() const {
  return this != internal_default_instance() && dns_ != NULL;
}
inline void System::clear_dns() {
  if (GetArenaNoVirtual() == NULL && dns_ != NULL) {
    delete dns_;
  }
  dns_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Dns& System::dns() const {
  const ::openconfig::openconfig_system::System_Dns* p = dns_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.dns)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Dns*>(
      &::openconfig::openconfig_system::_System_Dns_default_instance_);
}
inline ::openconfig::openconfig_system::System_Dns* System::release_dns() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.dns)
  
  ::openconfig::openconfig_system::System_Dns* temp = dns_;
  dns_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Dns* System::mutable_dns() {
  
  if (dns_ == NULL) {
    dns_ = new ::openconfig::openconfig_system::System_Dns;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.dns)
  return dns_;
}
inline void System::set_allocated_dns(::openconfig::openconfig_system::System_Dns* dns) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete dns_;
  }
  if (dns) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      dns = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, dns, submessage_arena);
    }
    
  } else {
    
  }
  dns_ = dns;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.dns)
}

// .openconfig.openconfig_system.System.Logging logging = 147116502 [(.yext.schemapath) = "/system/logging"];
inline bool System::has_logging() const {
  return this != internal_default_instance() && logging_ != NULL;
}
inline void System::clear_logging() {
  if (GetArenaNoVirtual() == NULL && logging_ != NULL) {
    delete logging_;
  }
  logging_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Logging& System::logging() const {
  const ::openconfig::openconfig_system::System_Logging* p = logging_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.logging)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Logging*>(
      &::openconfig::openconfig_system::_System_Logging_default_instance_);
}
inline ::openconfig::openconfig_system::System_Logging* System::release_logging() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.logging)
  
  ::openconfig::openconfig_system::System_Logging* temp = logging_;
  logging_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Logging* System::mutable_logging() {
  
  if (logging_ == NULL) {
    logging_ = new ::openconfig::openconfig_system::System_Logging;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.logging)
  return logging_;
}
inline void System::set_allocated_logging(::openconfig::openconfig_system::System_Logging* logging) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete logging_;
  }
  if (logging) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      logging = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, logging, submessage_arena);
    }
    
  } else {
    
  }
  logging_ = logging;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.logging)
}

// .openconfig.openconfig_system.System.Memory memory = 238855198 [(.yext.schemapath) = "/system/memory"];
inline bool System::has_memory() const {
  return this != internal_default_instance() && memory_ != NULL;
}
inline void System::clear_memory() {
  if (GetArenaNoVirtual() == NULL && memory_ != NULL) {
    delete memory_;
  }
  memory_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Memory& System::memory() const {
  const ::openconfig::openconfig_system::System_Memory* p = memory_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.memory)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Memory*>(
      &::openconfig::openconfig_system::_System_Memory_default_instance_);
}
inline ::openconfig::openconfig_system::System_Memory* System::release_memory() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.memory)
  
  ::openconfig::openconfig_system::System_Memory* temp = memory_;
  memory_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Memory* System::mutable_memory() {
  
  if (memory_ == NULL) {
    memory_ = new ::openconfig::openconfig_system::System_Memory;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.memory)
  return memory_;
}
inline void System::set_allocated_memory(::openconfig::openconfig_system::System_Memory* memory) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete memory_;
  }
  if (memory) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      memory = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, memory, submessage_arena);
    }
    
  } else {
    
  }
  memory_ = memory;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.memory)
}

// .openconfig.openconfig_system.System.Ntp ntp = 214492667 [(.yext.schemapath) = "/system/ntp"];
inline bool System::has_ntp() const {
  return this != internal_default_instance() && ntp_ != NULL;
}
inline void System::clear_ntp() {
  if (GetArenaNoVirtual() == NULL && ntp_ != NULL) {
    delete ntp_;
  }
  ntp_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Ntp& System::ntp() const {
  const ::openconfig::openconfig_system::System_Ntp* p = ntp_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.ntp)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Ntp*>(
      &::openconfig::openconfig_system::_System_Ntp_default_instance_);
}
inline ::openconfig::openconfig_system::System_Ntp* System::release_ntp() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.ntp)
  
  ::openconfig::openconfig_system::System_Ntp* temp = ntp_;
  ntp_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Ntp* System::mutable_ntp() {
  
  if (ntp_ == NULL) {
    ntp_ = new ::openconfig::openconfig_system::System_Ntp;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.ntp)
  return ntp_;
}
inline void System::set_allocated_ntp(::openconfig::openconfig_system::System_Ntp* ntp) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ntp_;
  }
  if (ntp) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ntp = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ntp, submessage_arena);
    }
    
  } else {
    
  }
  ntp_ = ntp;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.ntp)
}

// .openconfig.openconfig_system.System.Openflow openflow = 471419951 [(.yext.schemapath) = "/system/openflow"];
inline bool System::has_openflow() const {
  return this != internal_default_instance() && openflow_ != NULL;
}
inline void System::clear_openflow() {
  if (GetArenaNoVirtual() == NULL && openflow_ != NULL) {
    delete openflow_;
  }
  openflow_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Openflow& System::openflow() const {
  const ::openconfig::openconfig_system::System_Openflow* p = openflow_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.openflow)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Openflow*>(
      &::openconfig::openconfig_system::_System_Openflow_default_instance_);
}
inline ::openconfig::openconfig_system::System_Openflow* System::release_openflow() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.openflow)
  
  ::openconfig::openconfig_system::System_Openflow* temp = openflow_;
  openflow_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Openflow* System::mutable_openflow() {
  
  if (openflow_ == NULL) {
    openflow_ = new ::openconfig::openconfig_system::System_Openflow;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.openflow)
  return openflow_;
}
inline void System::set_allocated_openflow(::openconfig::openconfig_system::System_Openflow* openflow) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete openflow_;
  }
  if (openflow) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      openflow = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, openflow, submessage_arena);
    }
    
  } else {
    
  }
  openflow_ = openflow;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.openflow)
}

// .openconfig.openconfig_system.System.Processes processes = 133979618 [(.yext.schemapath) = "/system/processes"];
inline bool System::has_processes() const {
  return this != internal_default_instance() && processes_ != NULL;
}
inline void System::clear_processes() {
  if (GetArenaNoVirtual() == NULL && processes_ != NULL) {
    delete processes_;
  }
  processes_ = NULL;
}
inline const ::openconfig::openconfig_system::System_Processes& System::processes() const {
  const ::openconfig::openconfig_system::System_Processes* p = processes_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.processes)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_Processes*>(
      &::openconfig::openconfig_system::_System_Processes_default_instance_);
}
inline ::openconfig::openconfig_system::System_Processes* System::release_processes() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.processes)
  
  ::openconfig::openconfig_system::System_Processes* temp = processes_;
  processes_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_Processes* System::mutable_processes() {
  
  if (processes_ == NULL) {
    processes_ = new ::openconfig::openconfig_system::System_Processes;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.processes)
  return processes_;
}
inline void System::set_allocated_processes(::openconfig::openconfig_system::System_Processes* processes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete processes_;
  }
  if (processes) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      processes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, processes, submessage_arena);
    }
    
  } else {
    
  }
  processes_ = processes;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.processes)
}

// .openconfig.openconfig_system.System.SshServer ssh_server = 92111553 [(.yext.schemapath) = "/system/ssh-server"];
inline bool System::has_ssh_server() const {
  return this != internal_default_instance() && ssh_server_ != NULL;
}
inline void System::clear_ssh_server() {
  if (GetArenaNoVirtual() == NULL && ssh_server_ != NULL) {
    delete ssh_server_;
  }
  ssh_server_ = NULL;
}
inline const ::openconfig::openconfig_system::System_SshServer& System::ssh_server() const {
  const ::openconfig::openconfig_system::System_SshServer* p = ssh_server_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.ssh_server)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_SshServer*>(
      &::openconfig::openconfig_system::_System_SshServer_default_instance_);
}
inline ::openconfig::openconfig_system::System_SshServer* System::release_ssh_server() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.ssh_server)
  
  ::openconfig::openconfig_system::System_SshServer* temp = ssh_server_;
  ssh_server_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_SshServer* System::mutable_ssh_server() {
  
  if (ssh_server_ == NULL) {
    ssh_server_ = new ::openconfig::openconfig_system::System_SshServer;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.ssh_server)
  return ssh_server_;
}
inline void System::set_allocated_ssh_server(::openconfig::openconfig_system::System_SshServer* ssh_server) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete ssh_server_;
  }
  if (ssh_server) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      ssh_server = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, ssh_server, submessage_arena);
    }
    
  } else {
    
  }
  ssh_server_ = ssh_server;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.ssh_server)
}

// .openconfig.openconfig_system.System.State state = 510750630 [(.yext.schemapath) = "/system/state"];
inline bool System::has_state() const {
  return this != internal_default_instance() && state_ != NULL;
}
inline void System::clear_state() {
  if (GetArenaNoVirtual() == NULL && state_ != NULL) {
    delete state_;
  }
  state_ = NULL;
}
inline const ::openconfig::openconfig_system::System_State& System::state() const {
  const ::openconfig::openconfig_system::System_State* p = state_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.state)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_State*>(
      &::openconfig::openconfig_system::_System_State_default_instance_);
}
inline ::openconfig::openconfig_system::System_State* System::release_state() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.state)
  
  ::openconfig::openconfig_system::System_State* temp = state_;
  state_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_State* System::mutable_state() {
  
  if (state_ == NULL) {
    state_ = new ::openconfig::openconfig_system::System_State;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.state)
  return state_;
}
inline void System::set_allocated_state(::openconfig::openconfig_system::System_State* state) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete state_;
  }
  if (state) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, state, submessage_arena);
    }
    
  } else {
    
  }
  state_ = state;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.state)
}

// .openconfig.openconfig_system.System.TelnetServer telnet_server = 426646341 [(.yext.schemapath) = "/system/telnet-server"];
inline bool System::has_telnet_server() const {
  return this != internal_default_instance() && telnet_server_ != NULL;
}
inline void System::clear_telnet_server() {
  if (GetArenaNoVirtual() == NULL && telnet_server_ != NULL) {
    delete telnet_server_;
  }
  telnet_server_ = NULL;
}
inline const ::openconfig::openconfig_system::System_TelnetServer& System::telnet_server() const {
  const ::openconfig::openconfig_system::System_TelnetServer* p = telnet_server_;
  // @@protoc_insertion_point(field_get:openconfig.openconfig_system.System.telnet_server)
  return p != NULL ? *p : *reinterpret_cast<const ::openconfig::openconfig_system::System_TelnetServer*>(
      &::openconfig::openconfig_system::_System_TelnetServer_default_instance_);
}
inline ::openconfig::openconfig_system::System_TelnetServer* System::release_telnet_server() {
  // @@protoc_insertion_point(field_release:openconfig.openconfig_system.System.telnet_server)
  
  ::openconfig::openconfig_system::System_TelnetServer* temp = telnet_server_;
  telnet_server_ = NULL;
  return temp;
}
inline ::openconfig::openconfig_system::System_TelnetServer* System::mutable_telnet_server() {
  
  if (telnet_server_ == NULL) {
    telnet_server_ = new ::openconfig::openconfig_system::System_TelnetServer;
  }
  // @@protoc_insertion_point(field_mutable:openconfig.openconfig_system.System.telnet_server)
  return telnet_server_;
}
inline void System::set_allocated_telnet_server(::openconfig::openconfig_system::System_TelnetServer* telnet_server) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete telnet_server_;
  }
  if (telnet_server) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      telnet_server = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, telnet_server, submessage_arena);
    }
    
  } else {
    
  }
  telnet_server_ = telnet_server;
  // @@protoc_insertion_point(field_set_allocated:openconfig.openconfig_system.System.telnet_server)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace openconfig_system
}  // namespace openconfig

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_Config_Record> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_Config_Record>() {
  return ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_Config_Record_descriptor();
}
template <> struct is_proto_enum< ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_State_Record> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_State_Record>() {
  return ::openconfig::openconfig_system::System_Aaa_Accounting_Events_Event_State_Record_descriptor();
}
template <> struct is_proto_enum< ::openconfig::openconfig_system::System_Cpus_Cpu_State_Index> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::openconfig_system::System_Cpus_Cpu_State_Index>() {
  return ::openconfig::openconfig_system::System_Cpus_Cpu_State_Index_descriptor();
}
template <> struct is_proto_enum< ::openconfig::openconfig_system::System_Cpus_CpuKey_Index> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::openconfig_system::System_Cpus_CpuKey_Index>() {
  return ::openconfig::openconfig_system::System_Cpus_CpuKey_Index_descriptor();
}
template <> struct is_proto_enum< ::openconfig::openconfig_system::System_Ntp_Servers_Server_Config_AssociationType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::openconfig_system::System_Ntp_Servers_Server_Config_AssociationType>() {
  return ::openconfig::openconfig_system::System_Ntp_Servers_Server_Config_AssociationType_descriptor();
}
template <> struct is_proto_enum< ::openconfig::openconfig_system::System_Ntp_Servers_Server_State_AssociationType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::openconfig_system::System_Ntp_Servers_Server_State_AssociationType>() {
  return ::openconfig::openconfig_system::System_Ntp_Servers_Server_State_AssociationType_descriptor();
}
template <> struct is_proto_enum< ::openconfig::openconfig_system::System_SshServer_Config_ProtocolVersion> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::openconfig_system::System_SshServer_Config_ProtocolVersion>() {
  return ::openconfig::openconfig_system::System_SshServer_Config_ProtocolVersion_descriptor();
}
template <> struct is_proto_enum< ::openconfig::openconfig_system::System_SshServer_State_ProtocolVersion> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::openconfig::openconfig_system::System_SshServer_State_ProtocolVersion>() {
  return ::openconfig::openconfig_system::System_SshServer_State_ProtocolVersion_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_openconfig_2fopenconfig_5fsystem_2fopenconfig_5fsystem_2eproto__INCLUDED
